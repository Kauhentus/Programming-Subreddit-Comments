I did a quick cythonizing test with your original function (static types for list, tuple, int, and return bint, and accepting a fixed list instead of a *arg), and it ran about 3.5 times faster (from 1.87ms per loop down to 0.476ms per loop). Edit: This is what I used to make test data. def gen_tuple(): t_test = tuple(random.randint(1,50) for i in range(random.randint(1,10))) return t_test def gen_list(): a_test = list(gen_tuple() for i in range(random.randint(1,10))) return a_test def gen_result(): a_test = list(gen_list() for i in range(1000)) return a_test a_test_data = gen_result() And this is the cythonized function: cpdef bint uniqueElements1(list a_list): cdef set seen = set() cdef tuple item cdef int element for item in a_list: for element in item: if element in seen: return False else: seen.add(element) return True
Closer! But still a bit slower. [+]that took 0.733515977859 seconds [+]that took 0.749037027359 seconds So I'm trying to filter any results that have repeating common elements among the tuples. The benefit of the for loops seems to be that as soon as a single item is matched we can return fail whereas there's the penalty of updating the whole set if one succeeds when using sets.
The argument isn't against redundancy - the argument is that if a you're defining a value that is used in multiple places, there should be one place that is the authoritative source of that value. It's the same reason that if you're going to have some constant used in a class you define a class constant value instead of just putting the value inline in a bunch of different places.
And that is a good argument to make, but it's not an argument for super because that isn't what super is. Super could be something not mentioned in the class that hasn't even been written yet. And then hopefully (if everyone remembered you use super correctly), the parent does eventually get called with the appropriate arguments. 
No worries :-) I just try to highlight that this kind of comments, sometimes unintentionally, could be quite counter-productive and discourage people to try projects. Brython and rapydscript goals are quite different and both, together with skulpt, pybee, pypyjs, transcrypt,..., maybe could lead to something even cooler. I think we should provide more love and thought to our comments and the work of others but, anyway, this is internet ;-)
bad naming
I'm very curious, what problems you ran in with go? I'm also learning it right now.
Do you expect that the result is typically True? If so, you might want to try something like def uniqueElements(*X): return len(set().union(*X)) == sum(len(x) for x in X) When all the elements in the tuples of X are unique (so you have to examine all of the elements) this appears to run ~2x faster on my machine. 
**Liskov substitution principle** Substitutability is a principle in object-oriented programming stating that, in a computer program, if S is a subtype of T, then objects of type T may be replaced with objects of type S (i.e. an object of type T may be substituted with any object of a subtype S) without altering any of the desirable properties of T (correctness, task performed, etc.). More formally, the Liskov substitution principle (LSP) is a particular definition of a subtyping relation, called (strong) behavioral subtyping, that was initially introduced by Barbara Liskov in a 1987 conference keynote address titled Data abstraction and hierarchy. It is a semantic rather than merely syntactic relation because it intends to guarantee semantic interoperability of types in a hierarchy, object types in particular. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^] ^Downvote ^to ^remove ^| ^v0.23
Can anyone tell me about an example in which gradient-free optimization is required/better? 
Ha, I would go with the cython approach above. But just for fun here is another way of looking at the problem. def uniqueElements(*arg): seen = set() for item in arg: prev_len = len(seen) seen.update(item) if prev_len + len(item) &gt; len(seen): return False return True Basically, keep mashing the values into the set until the size of the resulting set increases by less than the N of values being added. That means we've hit a duplicate. Length calculations are a lot faster than "is this value in" checks, so fingers crossed :)
Just a tip. As far as I understand it there is a website or extension that can read deleted comments called https://uneddit.com/ I also swear I have heard of something that can read the most previous edit on a comment. Ex. You ran your code and replaced some info with "REPLACED" someone could read the original info with some plugin. I know you can get around it by replacing then deleting bc https://uneddit.com/ will just show the "REPLACED" and you won't be able to revert edits Or edit twice
I've never known pip to miss a dependency. On Windows pip.exe, pip3.exe and pip3.6.exe are one and the same executable having different names.
If I understand from your example what you want to do: def replace_zeros(my_list): # find where the last 1 is in the list last_one = len(my_list) - 1 while my_list[last_one] == 0: last_one -= 1 between_ones = False # iterate until the last 1 for index, digit in enumerate(my_list[:last_one]): if between_ones: my_list[index] = 1 if digit == 1: between_ones = False elif digit == 1: between_ones = True return my_list In [1]: replace_zeros([0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0]) Out[1]: [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0] 
Because pythons are snakes 
I've tried and failed with the same error message. pip should grab either pushbullet.py-0.10.0-py2.py3-none-any.whl or pushbullet.py-0.10.0.tar.gz but doesn't. I wonder if this is something to do with the recent pypi update? Anyway the short term work around is to directly download the whl file and use "pip install" path/to/download/push... EDIT:- as I've said elsewhere on Windows pip, pip3 and pip3.6 are one and the same thing.
Python sets are hash tables, not trees. It's O(n).
use re
Do you guys want to see the code? 
https://github.com/sharadbhat/Twitter-Bot/blob/master/TwitterBot.py
Oh nice. Thanks 
The pythonic way: def replace_bounder_zeroes(my_list): bounded = False for index, number in enumerate(my_list): if number == 1: bounded = not bounded if bounded: my_list[index] = 1
Do you mean that you're looking for output like "...the living of life com el hedda com get games and soft com"?
That's cool man. Thanks. 
I’ve been making a nice little minesweeper game with tkinter :)
without com
The second comment fully explains the concern/use case. Do you want him yo come in on day 4 and say "yep that's why."
The most logical answer is to move wherever you'll find a job, instead of moving somewhere to look for a job there.
That won't work with consecutive 1's though In [2]: x = [0, 1, 1, 0, 0, 1, 0, 0] In [3]: replace_bounder_zeroes(x) In [4]: x Out[4]: [0, 1, 1, 0, 0, 1, 1, 1]
Very cool.
how do i get that command?
Why bother to raise a bug report and not follow up, not a single word after seven years?
quines are quite cool :) 
Look into make_request
What are you suggesting they should do? Follow up every week and say "dude where's my patch?"
[removed]
Thanks. Yeah, Kaggle is the next stop.
How do you prevent others from using your code in a multiple inheritance fashion? All you can do is write code that breaks in multiple inheritance situations. You can choose how it breaks (with super or without), and you can document your non-support for the usage. But I don't more of any way to prevent it. Nothing like a "final" declaration or the like.
This is really a 2 part answer A degree is by no means a requirement but some professional or educational background is going to be required. A coding boot camp will go a long ways towards getting a job, they're tons cheaper than college, and many help you find a job assuming you do well. General Assembly and coding dojo are just a couple I know. You'll probably want to move somewhere like Austin, Seattle, etc. they're where jobs are and it's a somewhat reasonable cost of living 
You could either use tempfile module to let Python or your OS get rid of the resulting zip file for you, or use BytesIO to create an ephemeral in-memory zip file. This is a quick sketch, it would require some tweaks to make it work in Python 2 import os import zipfile from io import BytesIO from flask import Flask, make_response BASE_PATH = '/base/public/directory' APP = Flask(__name__) @APP.route('/&lt;some_directory&gt;') def zip_some_directory(some_directory): dir_path = os.path.join(BASE_PATH, some_directory) if os.path.isdir(dir_path): buff = BytesIO() with zipfile.ZipFile(buff, 'w', zipfile.ZIP_DEFLATED) as my_zip: for root, dirs, files in os.walk(dir_path): for file in files: my_zip.write(os.path.join(root, file)) buff.seek(0, 0) # Not sure if required response = make_response(buff.read()) response.headers['Content-type'] = 'application/zip' return response else: return 'Directory does not exist', 404 if __name__ == '__main__': APP.run()
What the hell happened to your title?
Try to scratch an itch/annoyance you have in your daily life!
Cloud DevOps is also the best tech sector to get into right now
You're on a website built using Python :) web applications is one real world use. Check out the Flask or Django web frameworks.
I work for a large tech company in San Jose. Never completed college myself and the college courses I did take were totally unrelated to CS. I got hired because I had a strong background of Python and JavaScript. My interview was about 6 hours, and consisted of me writing/debugging/testing a few unit tests based on a system i had about 10 minutes to learn. 
Seems like you have two options, raise a bug report against pip or one against your package. Without seeing the details I don't know which is the correct course to take.
What a clear answer! You helped me a lot!
Thanks :) That's what I wanted!
Interesting to see a bunch of techniques used to equilibrate thermodynamic systems making their way over to ML.
Ah, yes. That's exactly what I was thinking.
Youre right, I'm not. That doesnt answer the question though.
We're hiring for some junior positions right now. We're no longer considering boot campers that don't have some real work experience on their resume. Mostly, because a lot of boot campers are drawn to the paycheck but don't realize that software engineering means sitting quietly at a computer for 8 hours a day. We'd rather let another company take the hit of teaching these people they don't actually want this job.
I've actually always been partial to the gradient.
You don't necessarily need a degree to get a job. If you don't have a degree you need solid work experience. You need work experience anyway if you want something better than entry-level. If you don't have solid work experience, then you're best bet is solid non-trivial code available on Github and a good attitude. Networking always helps.
I'm learning Django!
 You can try rosetta code and see how basic tasks in C/C++ are written in python. http://rosettacode.org/wiki/Category:Basic_language_learning https://rosettacode.org/wiki/Category:Simple https://rosettacode.org/wiki/Category:Programming_Tasks 
Move to a decent sized city, code academy, shit job to get your foot in the door, go to meetups and python user groups to network. Self educate as much as you can, build some apps and put them on github, print some business cards with a link to hand people you meet. If you are motivated it's totally doable. Several folks I work with did pretty much what I described and are happily employed making six figures now.
Certainly. The larger point is that core parts of the python standard library are not written in a fashion that allows for cooperative multiple inheritance. Moreover you example of a Cooperative class is not actually cooperative because you are restricting to a zero argument `__init__`. These kinds of restrictions do seem like a big downside to me. If python wants to have `super` its existence should be an indicator that cooperative multiple inheritance will actually work correctly. Instead people just use `super()` instead of `MyClass` with no real benefit to flexibility of the code.
Pointless except everyone [edit: lots of people, especially in PyQt/PySide] uses it. Ugh I always end up confused about `super`.
The result will be false 99% of the time. 
&gt; buff.seek(0, 0) # Not sure if required &gt; response = make_response(buff.read()) `buff.getvalue()` is what you're looking for here. I was expecting you could also `ZipFile(response.stream)` but apparently `ResponseStream.write` does not return the number of bytes written and ZipFile expects that (ping /u/mitsuhiko)
I would recommend to split the code in the main function into multiple functions. Splitting code into well named functions makes it easier to comprehend the program flow without having to read all the code.
Hash tables are actually on average O(1)... (I know that's also not totally true...)
isn't the bread and butter of the non gradient descent community sampling-based techniques, aka mcmc? I didn't see this in there at first glance. maybe I missed it. I also don't see any of the RL things in there (e.g. TD learning is not gradient based and the RL community makes a pretty big delineation between classic methods and policy gradients). maybe "comprehensive" is a premature claim.
I work for a large financial organization which uses Python for most of everything. We take people from all backgrounds. We are totally happy to assess candidates based on their contributions to open-source projects. PM me and I can give you more details.
You're "cheating" the "evaluates to itself" by storing the value in a variable. Take a look at quines for the formal concept, and compare it with the shell script that prints its file from the filesystem.
Since Pip 8.0 you can verify that packages are the same as a hash. See [the docs](https://pip.readthedocs.io/en/stable/reference/pip_install/#hash-checking-mode). When you upload packages with twine you can upload a signature of the file, which ends up along side your package in an `.asc` file on PyPI. Edit: I said key instead of hash. Oops.
Maybe comparing a reversed string is more simple?
As no question on any Python forum can be considered answered until there is at least one itertools solution here we go:- '''Set every other group of zeros to ones.''' from itertools import groupby def set_zeros(a_list): start = stop = 0 count_ones = 0 for i, j in groupby(a_list): k = list(j) if i: count_ones += 1 if not count_ones % 2: a_list[start: stop] = [1] * (stop - start) start = stop stop += len(k) if __name__ == "__main__": lists = [ [0, 1, 0], [1, 0, 1], [0, 1, 0, 1], [1, 0, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], ] for a_list in lists: print('List was', a_list) set_zeros(a_list) print('List now', a_list) List was [0, 1, 0] List now [0, 1, 0] List was [1, 0, 1] List now [1, 1, 1] List was [0, 1, 0, 1] List now [0, 1, 1, 1] List was [1, 0, 1, 0] List now [1, 1, 1, 0] List was [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0] List now [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0]
blogs like these irritate me more than they should
Yes i did look into that but isn't that particular material design only for mobile apps and if not, how would i apply that to qt designer? 
Thanks, will do. This might just save me. 
you can literally write anything in perl and it will work.
I applaud this attempt to make a stupidly simple problem as complicated as possible. BTW, a palindrome includes phrases, but ignores punctuation and case, so most of the above, and the blog post itself, won't work. import re def is_palindrome(phrase): forward = re.sub("[^a-z0-9]", "", phrase.lower()) return forward == forward[::-1] test = "A dog! A panic in a pagoda!" print(is_palindrome(test)) Cheers.
It's not just for mobile apps, and you apply that to Qt designer by using Qt Quick instead of Qt Widgets.
every good programmer should be able to debug their code (which includes understanding the compiler output)
It seems like you need root access to update pip; try `sudo -H pip3.5 install -U pip` or something. However, even if that works, you're probably going to keep running into these kinds of issues. Handling multiple python versions can be a real pain in the ass. I would seriously recommend using [`pyenv`](https://github.com/pyenv/pyenv). It's the best and most comprehensive tool for this kind of thing, and it's written in bash so it will work even if you can't get python working at all. 
Here is the link. http://doc.qt.io/qt-5/stylesheet-reference.html
There's a navigation drawer implementation in [qml-material](https://github.com/papyros/qml-material), which is another project used and developed by [Papyros](http://papyros.io/).
I rewrote an algorithm I made a year ago for a work project. I was able to compress it from 89 lines of code down to 55 lines. The logic is much easier to follow, and thankfully returned the proper results in my test cases. 😄
This is the exact answer. Everyone is moving their infrastructure up to the cloud and the amount of DevOps people is disproportionate to the demand.
I think we are both on the same side here and there was just a misunderstanding. I thought that you were referring to the hash table alone with O(n), and i also I thought putting the comment about worst case in parentheses would keep the thread focused and not turn into a philosophical discussion :)
I have no idea what this does or why I would want it. Downvoted for assuming we're mind-readers.
Speaking of cheat-quines File "/tmp/quine.py", line 1 File "/tmp/quine.py", line 1 ^ IndentationError: unexpected indent 
Many Thanks !!!....this is exactly what I was looking for...:-) 
You had me worried there for minute, but there are two characters that are absolutely prohibited in UNIX filenames: `/` and `NUL`. 
shortest quine in python shell &gt;&gt;&gt; 1 1 
There are perfectly legit uses for bots...
What are combining characters?
Your code is pythonic and basically works... Better than the C code in python skin of the OP.
thanks for the detailed answer!
Punctuation. It also doesn't handle case. This, for instance, is a palindrome: Are we not pure? “No sir!” Panama’s moody Noriega brags. “It is garbage!” Irony dooms a man; a prisoner up to new era. But so is this: "Are we not pure? No sir,” Panama’s moody Noriega brags, “it is garbage; irony dooms a man -- a prisoner -- up to new era." That's the problem with comparing a simple reverse.
Contribute to FOSS projects.....
Sorry for the slow response but find environment variables on your pc and open path. Google it if you have trouble, lots of walk throughs online
Yes, there is one. https://github.com/graphql-python/gql
I'm down with OPP.
I would suggest the [delay server](http://channels.readthedocs.io/en/stable/delay.html) within django channels. You can scale by increasing the number of worker processes on a single machine or many machines when using a message broker like redis. The delayed messsages are stored in the database so it's fairly fault tolerant if you're dynamically allocating resources. But I'm the author of said server so I might be biased :)
Give it time. The new async web frameworks will bury both flask and django
-o
Hey check out /r/learnpython they might be more helpful Edit: here's a list of projects you might like https://www.reddit.com/r/learnpython/comments/1huuqk/im_doing_100_projects_in_python_to_learn_the?ref=search_posts
This is a problem that could be solved with very few lines of [Go](https://tour.golang.org/concurrency/1) code, provided that you can access the API easily (if it's not easy, you can always call your python code or use some sort of IPC). On the other hand, if you really want to use python anyway, the key to success lies in your data structures. Your data structure will probably look something like a queue or a combination of queue and stacks. You add actions into the data structure at a position such that for each consumed API call, the delay leading up to its execution subsumes delays for all future API calls. Since this is not a critical application, you should be able to "cheat" a little bit by using rough approximations and by ordering haphazardly (such as by grouping calls into "minutes-until-called" and consume each "unordered batch" in batch-order). The only potential issue with this approach is that obviously, each agent needs to execute its own actions in a specified order for them to make sense; you can't eat an apple without picking it up first (or similar). Here you can get creative and sort things on-the-fly for each batch or you can cluster each batch towards agents, or whatever makes sense for you. Of course, if you know anything about concurrent programming, you should use one of the many libraries out there to help you out. If you don' have any experience or knowledge with concurrent programming, this is not a good candidate for practice, as you will probably get a big headache debugging it -- if this is the case, you should write your application with sequential logic and put more focus on data structures. Finally, if you had problems understanding a fair deal of concepts in this suggestion, you might need to take an online course or two to get up to speed. However, you can of course just go nuts and use this as a learning experience, but in my experience most projects that start like that end up being abandoned. Happy hacking!
Have you already checked out this project? https://github.com/python-telegram-bot/python-telegram-bot
1. You're missing the closing paren on the second to last line. 2. It's `from __future__ import print_function`. 3. /r/learnpython
Idk, if you can program a computer to do the same thing you would do, but remove the tediousness of it, what's the problem? I automate most of my job, am I cheating because my coworkers can't do the same?
Alas, I have been defeated!
closing paren ?
1) `str` is usually used when you need to turn a variable into a string: a = 3 # (actually the result of some computation here) print "The value of a is " + str(a) 2) The best subreddit to post this is actually /r/learnpython.
Just a shot in the dark here but I think it is either Schoology being bad because nice had problems with it behaving right with links on the client side or that the web links need to be saved as a proper file and not just a hypertext link code looks ok to me but I'm not super knowledgeable in Python
thanks man
I would second *asyncio*, but I feel like I should talk a little more generally. The key point about having thousands of parallel requests is *not to create a process or thread for each request*. Most of the approaches listed here will at their core will do this by having one or more [event loops](https://en.wikipedia.org/wiki/Reactor_pattern ) that process messages from all the different sources. Under the hood is achieved with a [select call](https://linux.die.net/man/2/select ) . The issue with this approach is often that this main event loop mixes up calls from all sorts of sources, so the code can become a bit unreadable. Various approaches have grown over time to still have one event loop, while trying to have multiple paths of execution, or at least to try to provide you with a little more structure. Naming a few python libraries for this we have: - asyncio as mentioned - twisted - gevent - eventlet - tornado I would say *asyncio* and *gevent* are the main contenders... though this is mostly opinion. *gevent* has some advantages in that it can be retrofitted to code without having to make the asynchronicity explicit. This can have its own pitfalls. I would throw in the statement that most of these implementations can use at most one cpu, though it is possible to work around this manually. If you want to transparently use multiple cpus while also allowing *lots* of processes I would mention *go* and *erlang*. Erlang is particularly interesting because its threads/green threads / callbacks/event handlers are interruptible: Further reading: - green threads - reactor pattern - cooperative multithreading - https://www.reddit.com/r/erlang/comments/4s0uwm/why_doesnt_java_have_erlangstyle_cheap_threads/
http://xyproblem.info/ - you want to receive events from Telegram, but you asked for help receiving events from _windows desktop notifications_. Those are designed for consumption by a human, and are the wrong solution to this problem. Get them directly from Telegram instead, as other comments describe. 
You're right. My bad. I meant to say hash when I said key.
Indeed. You're on a good path now.
"I remove the tediousness of bicycle racing by using an automobile." The difference between games and real life is that games have extra, arbitrary, rules. 
It's a pain to set up and debug. The monitoring and admin tools make it hard to query what's actually in a queue, and forget about purging or modifying specific messages.
 t.write(your_name, font=("Arial", int( (x+4) / 4), "bold") ( ( ( ( ) ) ) 1 2 3 4 4 3 2 Add a `)` at the end.
# Currently right I am working on this directory tree paths snapshot cache cli tool. This cache tool basically takes a snapshot of all the paths or in other words all the files and sub folders in a given directory passed to the program and saves I to a folder like database of other cache snapshots. Whenever you want to check weather anything was deleted from that current working directory, moved to other one, a new folder or file was created. It is mostly a cli tool but I probably plan to make a GUI application around it. Also comes with uses full commands to update the cache snapshot of a persevere version, ignore certain files or folder in a cache, status of the cache or caches, and lastly see the logs of all the snapshots you have taken. I created because I created a recursion algorithm for going through directories and then I ended building this. # these all my python scripts I have worked on in the past and recently: [pyScripts repo](https://www.github.com/andreGarvin/pyScripts/blob/master/cache.py)
Google it kiddo
Is there any scope for writing a custom generator instead of itertools.combinations? It may be faster to not generate the values in the first place that to generate them and filter them out afterwards.
i have tried to but not much comes up
Use twitter streaming api. Check it. 
Great idea. I've been looking to the itertools.combinations python representation and the c source for ideas along these lines. I've managed to find something that works on smaller sets of generator data with the current implementation. I guess the idea of writing my own generator is a bit scary at the moment (don't laugh).
Ah, you switched to posting this as images. I think this hurts the readability. 
Ooh nice approach. Will chuck this in and try it tomorrow. Thank you!
I had to Google "Dynamic programming", that's the level I'm at. :/
Wow. Next few days?
Woah woah woah, no reasonable chat here, please, this is reddit. 
Ah, now it's causing an infinite loop ?
If you have a string and a number, Python thinks you are trying to add them together, which it can't do. So when you define it as a string, it knows you just want to have those two strings together. Also, in the future (not specific what you asked, but could come up) say you had the number 012345, you have to keep this as a string or it would remove the "0", this is useful for keeping phone numbers or anything else that starts with a 0 and needs to stay in that format.
When beginning a loop in Python after the colon; python automatically does the indentation, which is what I followed but an infinite loop still persists ?
As a reasonably happy celery user, but experiencing those pains, what are my options? 
That sounds like a fun project/write up. Is it available on github?
Out of interest, what game is this for and do you plan on making any sort of mini write-up for people who are interested?
Care to share what that means? I'm guessing it's got something to do with why the suggestion got all the downvotes?
There are some lighter weight queues on top of Redis, or you can roll your own. If you're on AWS they offer a queue service.
&gt; how do i make it return the tweets which contain the word as part of themselves? What does this even mean? Also /r/learnpython
Sounds like you would just want to use regex. import re match_string = r'London' for tweet in outtweets: matches = re.findall(match_string, tweet) # Returns a list of any matches if matches: # Empty list will evaluate to False print tweet
Not really since what you send to eval is a string and the other is a list 
In hindsight it's kinda obvious.
Huh, the formatting is ... totally horrible on mobile. This here: ``` outtweets = [[tweet.text.encode('utf-8')] for tweet in alltweets] ``` You're creating a list of lists there. So, this line: ``` for tweet in outtweets: ``` `tweet` will be a list. Hence, the `in` operator needs an exact match instead of substring match. Either you remove the inner list in the comprehension: ``` outtweets = [tweet.text.encode('utf-8') for tweet in alltweets] ``` Or you access the list element in the `if`: ``` if 'London' in s[0]: ```
When you do this &gt; outtweets = [[tweet.text.encode("utf-8")] for tweet in alltweets] And then use this &gt; for tweet in outtweets: s = tweet if "London" in s: You are attempting to access the array, but with your initialization of outtweets it's an array of arrays of strings. So with `for tweet in outtweets:` you get a single array back, then you still have an array. So then the if in line tests against a list object and not a string. You either need to do &gt; outtweets = [tweet.text.encode("utf-8")t for tweet in alltweets] Or convert s to a string instead of keeping a list &gt; s = str(tweet)
india will be the next superpower
&gt;and there are no explicit rules against it Most games do have explicit rules against the use of software to assist or play for users. At least in online modes.
Better use str.casefold()
It suggests your comment is a generic copy-paste about using Go instead of Python since it doesn't get into specifics regarding an answer to OP's question. Maybe that's not the case but you're going to have a tough time extolling the virtues of a different programming language than that of the subreddit for any programming language sub without some good justification^1. You just linked to the front page of Go - you could have at least linked to a part of the documentation on concurrent programming. This is presumably where the downvotes are coming from. ***** ^1 For example, every once in a while some form of the question "How can I use Python to make my webpage interactive" comes around and the top answer is often a justification of why using javascript instead is your best bet.
I also way prefer sqlalchemy plain.
Thank you. This is good feedback. 
You should try running the script again with the DEBUG log level. It may give you more hints. `python convert_imscc_file.py -f Home-Test-Folder.imscc -ll DEBUG` 
The most common ones are accents. This string is visually a palindrome: `"aña"` (reddit may normalize it away, so if you want to copy/paste something to verify for yourself, here: `"an\u0303a"`). But the function given above will say it *isn't*. The string consists of four characters, and the third one is `U+0303 COMBINING TILDE`. When reversed, that character comes after the 'a' at the end, and you get a reversed string of `"ãna"`. You can use Unicode normalization to work around this; normalizing to a composed form will cause the `ñ` to become a single character, `U+00F1 LATIN SMALL LETTER N WITH TILDE`. And then reversing the string will work to detect whether it's a palindrome. However, this only works for *some* combining characters (those which also have an equivalent single-character form -- not all of them do!). A more robust approach is to use the Unicode algorithm for identifying grapheme boundaries, and split the string on those, then compare whether the sequences are identical forwards and backwards (a grapheme is about as close as Unicode gets to a concept of "visual character"). And yes, when someone busts out the palindrome detector problem on me in a phone screen, they get a lecture about Unicode, followed by code that handles Unicode properly.
Yea, I just couldn't remember what the method was and just wrote that on the fly.
That's why I said "if."
Unfortunately it's not that simple, as it would require all existing code to be rewritten. Plus it would likely be rejected by the author who probably likes his way of doing things. But hey, thanks for being a total cock about it. It's called tact. Use it. 
QT is very capable, but also heavyweight. The tools are decent, but you have to spend a little time learning how to use them. I would recommend pyside which lets you use python strings and such instead of having to create QString instances. For something like what you are doing, I'd personally use wxPython. It comes with a great demo program that you can essentially copy code from and paste into your program to modify. The widgets are very easy to work with, even for huge sets of data, and they're way easier than QT's data structures. You might have to spend a couple of hours learning widget sizers, but it's time well spent. Another great option is Juce. You can make some fancy scientific looking stuff, and it is probably even quicker than WxPython as far as getting productive quickly. You would might have to follow the C++ documentation, and use the python bindings. It would look like this: https://github.com/abhijitnandy2011/PyJuce/blob/master/test.py It's made for fancy graphical displays like audio control panels, but is also good for showing lists of stuff and responding to buttons. They have good tutorials too. https://www.juce.com/doc/tutorial_rectangle_advanced
Really? Or are you being stochastic?
I like your point about QT being heavyweight as I do value lightweight applications, especially for such a simple purpose. I have a few other programs I want to add lightweight GUIs to so learning one or both of these libraries will probably pay itself off quickly. 
This might be of use to you: &gt; nclib is netcat as a python library https://pypi.python.org/pypi/nclib/0.6.1 https://github.com/rhelmot/nclib 
Thank you for your response. I am also looking for onsite jobs, but my friend works remotely so I wanted to ask people how I can do that.
What about someone who's got 25 years in tech, last six of which as a network engineer, who's taken a coding bootcamp?
Flask is very much worth learning. Creating RESTful services, dynamic pages, and database integration is so easy that even a knuckle-dragging systems administrator like myself can do it.
You mean how my second comment directly addressed the two points he raised? Wow, what a great bot I wrote. Maybe I should have called him a "cock" right back? Just to be safe? People whining about PEP8 on posts like this are cancerous trolls who offer nothing of value to anyone except a convenient arrow for other PEP8-hobgoblins to obsessively click while *hur-hurring* to themselves at the original coders expense and patting themselves on the back thinking "I'm HELPING!'. People who whine about non-compliance to PEP8 and then scurry away from the suggestion that they help make the code PEP8 compliant are the enemy of PEP8. They make it an annoyance rather than applied best practice. They make it a chore to share code in this sub and by doing so stand in the way of community-assisted improvements to the ecosystem. They are worse than *'first!'* posters and deserve no more respect.
Some really annoying bug with init_customers in Django pinax stripe.
please report an actual issue on the actual issue tracker instead of randomly pinging select out maintainers, on a "random" website, its rude
Good reading , Thank you .
Then refactor SOME variables and PR that. How long would you estimate it would take to change the name of 6 variables? But that presumes the person complaining actually cares about PEP8 compliance and isn't just massaging their own ego. *Look at me complain about PEP8 compliance, I am good Pythonist!* Being a PEP8 pedant is fine, in PRs. On reddit? It's just noise.
On my github there's also an code for a 3d test, wich did not work because I needed liniair algabra to finish that one. And I'm in the fourth year of high school. Asked my teacher about liniair algabra and he just replied that it's a really big math thing that he couldn't explain in 5 mijutes or so
The font you are using makes me sad.
Do you mean text styling? Like italics? Otherwise I think we are using the same fonts? What is font? What is life? Font is life.
It's not unicode because the web links in this dummy IMSCC are not unicode. I think the problem stems from the fact that LMS the code was first designed to work on was Canvas which does not support the 'web links' as a resource. Therefore there is no code in place to handle such instances. I need someone who is knowledgeable in Python to step in and help out
I don't know that it's an actual issue (it could be completely intentional as responsestream implements very little io methods iirc) my ping was more for feedback than actual issue reporting, as I know Armin is relatively active on the site and could opine. If you're saying it looks like an issue and I should report it I'll go and do that, no problem. 
Man, you sure are awful mad for such a fairly innocent conversation. 
maybe try a time.sleep() to prevent logging the html code before the browser loads the javascript
Thanks for taking the time to help me, I give a time.sleep(10) and have the same result. Looks like the div 'fb-comments' is loading an Iframe, could that be a clue ?
Thanks for the clarification, in retrospect I was a bit overzealous and I'm sorry for pushing that on you
Why would you have to modify anything? Your homebrew version of **timeit.timeit** returns you the name (which you've already passed in), the elapsed time, and the number of trials, which is a global. You already know two of the three pieces of information for your string. What your version doesn't do is isolate each run or turn off GC, which means that the results of any one of your trials is going to be getting slowed down, substantially, by doing GC on earlier trials. It also doesn't start from a clean slate, which is why **timeit.timeit** takes setup and statement to run as strings; the idea is to have as little as possible floating around, create a temporary namespace, turn off GC (though you can turn that on if it's an important factor in the thing being tested), then time the evaluation within that namespace, then turn GC back on and clean up the namespace. A homebrew version isn't really a very accurate -- or even really at all accurate -- benchmark, as the times will vary widely between runs. That's actually why **timeit.repeat** exists, so you can try and remove variations due to other system processes as well. Now, if you're comparing *schema validation* libraries, why not [Cerberus](http://docs.python-cerberus.org/) and/or [voluptuous](https://github.com/alecthomas/voluptuous)? Both are pretty mature and popular for the same purpose.
so, i just started my project with qt creator and chose material style. but now when i open it again after saving, it won't let me go to the design tab. why is this? 
Ty so much &lt;3 
While asyncio is the correct solution in this case, you also need to make sure that you're not overloading the machine running asynchronous functions. I was recently listening to a podcast (I think it was a talkpython.fm episode) where they talked about how converting everything to asyncio without adding any constraints on the number of tasks running concurrently brought down the complete system since at some point all the tasks just started hogging resources.
Check out https://rpy2.bitbucket.io/
Using the Sanbox API or scraping webpage? 
I'd use the built in TKinter environment or possibly Root. The reason to go TK is that it avoids library and tool installations that some users may not want to deal with. Otherwise you can basically use anything you want. TK though is designed specifically for this sort of use so a good Python programmer really should be familiar with it. It might not be perfect but it is damn close. The reality is that your research organization and those you collaborate with are a big factor in how you write software and the libraries you use. It is a bit foolish to be asking use really. Given that some other ideas: 1. Root is strong in the Physics world and may be worth investing in. 2. Jupyter is also worthy of consideration especially if your organization leverages it. The only problem here is maturity, bit it gets better with every release. 3. Spreadsheet files are an interesting solution especially if you can script an interface to the database. Of course compatibility is an issue here, but it is also an issue with Python. 4. Write an app in C++ with the platforms native tool kit. 
Take the database off the cluster!!! I understand the need for security of the cluster. The question is does this sort of database have to sit on the cluster. 
check my last edit, I had to first switch to the right Iframe to extract the data ;) But I understand the point of the delay and using one in the script.
Currently working on a call of duty mapset generator website, using django. 
cheers!
Python provides [a module](https://docs.python.org/3/library/unicodedata.html) called `unicodedata` which knows how to do this and quite a few other things. The function you want is `unicodedata.normalize()`, and you pass it two arguments: the normalization form you want, and the string to normalize. The four normalization forms are `'NFC'`, `'NFD'`, '`NFKC'`, and `'NFKD'`. The NFC and NFKC forms both will replace combining sequences with a composed form (i.e., turning `'n'` plus a combining tilde into the single Unicode codepoint `U+00F1`, which yields the character `'ñ'`. Just be aware that this doesn't work for everything, because some languages' writing systems have combining sequences that *don't* have a single-character composed form. The true solution is to look at grapheme sequences. A Unicode grapheme is the closest equivalent you'll find to the concept of a "character", but may be made up of multiple Unicode codepoints. There's a defined algorithm for splitting a sequence of codepoints up into graphemes, but Python doesn't natively support it. The third-party module [regex](https://pypi.python.org/pypi/regex), which aims to be a drop-in replacement for Python's own `re` module, *does* provide an implementation using the recommended metacharacter. Doing a regular-expression split using the `regex` module, on the `\X` metacharacter (which specifies grapheme matching), will get you the sequence of graphemes in a string, and let you see whether they're the same forwards and backwards. You will also want to filter out punctuation and whitespace, and normalize case (since punctuation, spacing, and upper versus lowercase differences usually aren't considered to affect whether something is a palindrome). You *could* do that by trying to make a list of all the characters to filter out, but again `unicodedata` can help you: it exposes access to the Unicode character classes, which let you test these things directly (via the function `unicodedata.category()`) without having to build up a list of all the punctuation in the world. There are a couple ways you can do this: * Any character whose Unicode category name starts with 'P' is punctuation, and anything with a category name starting with 'Z' is a space. You could filter those out. * *Or* you could decide characters to *keep* rather than to *remove*. All "letter" characters are in categories whose names start with 'L', and if you want to keep them numbers are in categories whose names start with 'N'.
It's still possible: mkdir of= mkdir of=/dev echo '#!/usr/bin/env dd' &gt;of=/dev/sda
Head over to kaggle.com. Pleanty of datasets and tutorials to get you on your way. 
It's normal to move if a certain solution does not satisfy your feature or performance requirements. Since pinterest shifted most of their business logic to SQL they could have used ANY framework. In that scenario Flask is not superior to any other solution like for example Pyramid. And in that scenario from performance point of view i would say that it's inferior to non blocking solutions like Tornado or pure aio...
You could take some politics related articles from news sites or tweets from twitter, or something, as a learning set. And then try to predict amount of curse words per comment according to politican name in next day articles.
That's a case of responsive web design gone wrong. As long as your browser window is smaller than 1920 or so it looks ok, make it bigger and it glitches out.
You might find this way of combining python and R inside a jupyter notebook server useful, (it also uses r2py): http://blog.revolutionanalytics.com/2016/01/pipelining-r-python.html
This is just a demo for Webscraping and Data Analysis without using API's
lol no generics
I do this quite often, but on the receiving side, use wget.
I'm kind of in the same boat. 
performance is not an argument to switch to node.js ~~anymore~~: https://magic.io/blog/uvloop-blazing-fast-python-networking/ EDIT: it never was :)
Thanks for explaining i Didnt know about the user input/number thing.
Nope. It could easily be hosted on our website as it contains nothing sensitive. Good idea. 
 Thanks, I'll have a look. The description of the target audience fires me nicely!
It's hard to believe developers nowadays only know one language. No sane company will develop everything in one language. And you don't code in Tornado the way you code in other blocking framework.
If I had a dollar for every Java developer I work with that can only do things in Java...it's pretty sad.
Thanks, I'll check this out!
Theoretically because while you will get very good performance at first, scaling up with an RDBMS is more expensive in terms of hardware than scaling out with some dumb store like Mongo. Practically because most web devs can't be bothered to learn about the database tier, because they have a JavaScript framework to ~~learn~~ write every week. 
&gt; Why would anyone not do the business logic in the database? In many cases it's easier to change logic when it's written in code... so when "time to market" is more important than sheer speed, it might make sense to leave it out the DB until you are pretty sure a feature is going to remain stable for the foreseeable future. I'm not sure, but I also think you are more likely to find programmers who can use an ORM than those who can write stored procedures :)
Not Python-specific (although there are Python bindings) but you may want to check out Processing (http://processing.org).
I agree with your case, this is what I was looking for. I wasn't really thinking of instances where you're just grabbing data from others. 
- it's supposed to be reusable and easy to understand - github asks for a license, readme, contributing and code of conduct (that is a template code of conduct) - it's meant to be a simple python script, not a system program written in c++ - i believe the (optional) input is necessary as you cannot make shortcut folders for cloud sync services. And the other downloaders require either specific sql databases to be installed or complicated command line arguments which are actually useless - the images are actually in png format - sorry, I'm not into web development
In IDLE.
Pray to a higher power that no one requests you write a view that retrieves thousands of records. Edit: I was earnestly answering the question as it pertains to using an ORM and python computation. I'm not sure why anyone felt like they need to "school" me.
Thousands!? The databases I work on contain millions of rows in different tables and I run complex business logic against them and still return what is requested in seconds. This is the type of stuff I am asking about. Anyone dealing with a real amount of data must be using a database..
Literally this
I've been doing heavy Django programming for several years now.
most of these startups write a bunch of crap for very few users and data and just hope they get funding to do everything the "right" way
It's often advantageous to do analysis of data in/near the database. But for the most part, business logic belongs in the application hosting the logic in question. I once worked in a financial institution where business logic was intricately tied to the data (which lied in multiple databases and mainframes). A single question about a specific table asked of three different SMEs would yield at least three different answers--and usually more than three. 
You haven't told us what Python experience you have. Whether you have any side projects you can show off. What you've tried so far. 
Even if I don't incorporate this into our production code, it looks helpful for interactive stepping around deeply nested dicts (as one often gets from json.loads, or HTTP responses).
Did you ask the devs? Complaining to non-experts isn't nearly as effective. In my experience, sometimes you just have a bad install of Qt or a partial install. Uninstall and reinstalling fixes it.
I also copied one based on the same spec :) It's nice for a soft validation: https://github.com/kootenpv/yagmail/blob/6973ca4afcf49a4f302febd1103745ae1b8ee1a8/yagmail/validate.py
&gt; Why would anyone not do the business logic in the database? What's business logic?
Here's a major problem I have with the project right now: It relies on the preview of Bing Search API v7. It's limited to 1000 api calls per month. My program does 2 per search. I'd be more than happy to pay a few bucks for the 10,000 per month plan, but they only give you access to v5, which wraps the image urls with 'www.bing.com/blahblahblahIMAGE-URLblah'. I'm sure with some RE, I could figure out how to extract the url, but it's annoying. Anyone with experience with Bing Search v5, please chime in.
You don't need to be an SQL wizard to write something efficient. There are tools within the database (query plan analyzers, for instance) that show you where you can optimize, and it's rarely difficult to get good performance, even with little SQL experience. But then, a lot of people also seem to be scared away by SQL and rely overly heavily on ORMs and No-SQL.
it's not a production tool, stop using it like one.
then don't ask stupid questions :P
In a microservice environment, a lot of data required is ”external" to your service.
totally agree. I want to cry each time I see people using Django admin in production and extending with own logics which results in super shitty things, that are barely able to have any speed but already too expensive to refactor it in a proper way.
could you have a different isolation on read and write by default? I mean I want dirty reads, but still, have blocking writes by default. As far as I remember without any ninja magics it's not possible in Django 
It's an object relational model lib, so you aren't writing straight SQL queries. You're doing operations on language native objects and it's translating that to SQL.
&gt; You cannot have classes, decorators, inheritance and all other concepts provided by programming languages that make writing and understanding code easier These are not data, and are out of scope for a database. &gt; Understanding and debugging a mixture of sql and imperative extensions to it is a nightmare nobody wants to deal with. It's something webdevs have dealt with for years before ORMs, and every webdev I know considers it a good experience, not a nightmare. &gt; Your logic may require doing complex processing, then you'll get 1000 clients trying to do it at once, your database server collapses, what now? You may be doing your logic in an inappropriate place, then. When GP talks about putting "business logic in the database," that implicitly does not include putting all of your HTML generation in the database. The "business logic" being referred to here is the middle layer of data processing. There are many things that can be done very efficiently in the database, and those things that need to be done very close to the data being processed are good candidates for implementing functions, stored procedures, views, triggers, etc. &gt; With DB/PL separation, you can replace your programming language (or add new ones) and this is often done (microservices). If you design things right, you can also replace DB in your app. This does not refute the suggestion. Putting core business logic in the database makes the business logic *itself* PL- and framework-agnostic. &gt; If you design things right, you can also replace DB in your app. If you maintain good code practices and maintain your stored code outside the database, you can almost always migrate stored procedures and the like to a new platform when necessary, since all of the big ones (Postgres, Oracle, and SQL Server, in particular) implement the ANSI SQL standard and have similar feature-sets. But, really, if you're migrating from one database vendor to another, I have to question your motivations. (Unless you're moving away from Oracle—there's no reason to stick with them.) &gt; There is natural division between "we need some storage for our data" and "we need some way to write our logic" and those two things have very different needs in every aspect. That's not entirely accurate. There are certain subsets of your logic that make a better home in the database. For example, aggregating two lists of two types of classes into a single list of a third type of classes is more complex and substantially slower than simply doing a `JOIN` on the database. For such a query that is performed very frequently, it often makes more sense to add a multi-column index and abstract the query into a view and implement `TRIGGER`s to ensure consistency across the underlying tables, than it does to implement all of that anywhere else. I have had many such cases in the several *very* different types of projects I've worked on over the years. &gt; You want your logic to express your wildest dreams and change it easily next day. No, you do not. You want your logic to parsimoniously express your intent. If you need to change it, then your intent was fundamentally wrong. If you need to change it "the next day," then your approach is fundamentally flawed. To put it in slightly more concrete terms: If you need to suddenly and fundamentally change the logical relationship between your "users" and "products" data, then you fundamentally do not understand your project, and you might be better served by starting over. The purpose of your database is to store data, yes. But it also serves the purpose of defining and describing the *relationships* between your datasets. And when you define those relationships well, your database is made more efficient. If your data *has* no relationships, then one of two things is the case: Either you should be using a document store, or you do not understand your data.
Ok, I'm kind of lost as to what SQLAlchemy is doing; the way I use it, I call create_engine and pass it to Pandas along with a SQL query as a string. I figure it can be used independently, but does it not just take query strings as an argument?
The SQL it generates for models and the like is typically inefficient, messy `SELECT`s that don't take advantage of the database's ability to index across tables, and can't generally be modified to make better use of the DB's query planner. Unless you're explicitly passing hand-optimized SQL through the `session.query` API (which do get passed through verbatim), it *will* generate sub-optimal queries, simple as that.
Getting back to main topic, at least with Django I've had a lot of success defining stored procedures in migrations. It's not pure Django/Python, obviously, but it's the best solution to keeping it in version control, I think.
Thank you for responding these other answers are... odd, people saying you don't need a database... Or things are faster outside of it seem absolutely insane to me. I really think everyone here that feels that way must have never worked on an application with a large amount of structured data. 
Or never used SQL Server or Oracle, or only came into webdev after Node.js exploded. These are arguments I see *a lot* whenever ORM v. SQL or SQL v. No-SQL discussions come up.
So I'm not disagreeing with anything you said, but I kind of think this is more about a priority of execution... namely: 1. The product must _work_ functionally (this is up to interpretation but the basic idea is that functional is not necessarily performant) 2. Followed immediately by developer time is the most precious commodity. 3. And then followed later by latency, improved SLA and general optimization. From a high level, you need to go with what your developers are capable of doing within a span of time. And from a business perspective, it's far more likely that a Python developer will be significantly faster at building and debugging Python vs knowing how to be effective with query plans. That specific level of optimization can take days with large datasets - I've done it in my past lives at various companies. Would you rather have developers spend days optimizing the hell out of a query... or spend those days adding/fixing features in Python? The question really is: how _necessary_ is it to have a highly performant query? Does it shave minutes (or hours) off the delivery time? Does it affect your SLA? etc. In my experience, it can be critical, but often (for most business needs) the SQL based optimization is _not_ critical. 
This is what most experienced organizations do. You can easily tell which ones have been badly burned in the past: They regularly run their migrations on development environments and automate the process as much as is reasonably possible.
Don't use {} in Python for blocking, they are used for dictionary definitions. You don't need them for that purpose, just delete them. def function(): hello="hello" print(hello) After that, your simple program has a bunch of other cardinal sins...but I will leave that alone for now. 
Why? You can always create some mock data or use very old (possibly anonymized) data to run the stored procedure on.
But then you have to have your tests connecting to a DB which is populated with test data. Which, I would argue, is harder than just regular unit tests.
Np :D Sorry for being too ofensive
no it's not a terrible example, it's indicative of how the whole framework was designed in the beginning. I used it pre V1 (about 2005 or 2006 i think? and I can assure you that at the time they were singing far and wide about how the admin interface was Production Usable. The fact that it isn't considered to be that way anymore is a side effect of the bad architecture. It sure wasn't on purpose. Anyone from Django land who says otherwise is guilty of historical revisionism. Early decisions have a very long life, and Django is chock full of artifacts from the decisions made for the original use case (simple newspaper web sites) and the original decision not to work with any other Python packages. 
Complaining that a feature that's been effectively deprecated for 8 major versions isn't properly supported and enterprise scalable is really foolish
You make it sound as if the test data is static and it's not. Tests are normally not hierarchical either. If I have my business logic in the database I will want to test a lot of different cases and if that means maintaining a lot of scripts to set the database in the right state for each test then it is a lot of work and mocking would reduce a lot of the load.
Absolutely not.
Points like these are why I get paid a lot of money to fix bad SQL written by application developers. It works when they implement it and then once a client has a real amount of data all of the unoptimized pieces rear their heads and we see a spinning wheel in the app. I then get to fix it using what I view as common sense. Let's hope they continue to think they do not need to learn SQL properly.
No that's not what I mean: I also mean that the fundamental underlying architecture is poorly layered, overly coupled, and deliberately did things differently than the standards in the Python community at the time. A Django project wasn't even originally a normal python package! This is not an opinion, this is fact. Just look through the archives long enough and you'll see it. I was there. Yes, they have addressed loads of these concerns in the last 12 years, but the cost of the original decisions are still there all over the place. It was not designed well with regard to cleanly extending a complex app, and it still isn't that way. It was designed to make it as easy as possible to get up and running for someone new to Python and Django. It's great for that, but those drivers push decisions opposite to those needed for serious application development. Django might very well be the smart decision for your team, for your problem, now. It's a solid, feature rich framework. But to claim that the architecture is as well suited for extending a complex long lived application as Pyramid or Flask is just incorrect, and I'd hazard that most people who have done serious study of application architecture in Python would agree with me. Like anything in programming, the right answer should always be ... "it depends". 
it was a joke, hence the smiley!
Yeah that's right, I'm ignorant. I've been doing business app development for 13 years, covering CherryPy, Django, TurboGears, Pylons, Pyramid, Flask, Plone, Tornado, Dojo, and Angular. I have looked under the hood at a *a lot* of frameworks. I wrote text book material for courses on SQLAlchemy for Thinkful even. I must be ignorant because I don't like Django's architecture? sheesh. Ad hominem much? Maybe, just maybe... the companies that decide to move off Django once they grow have engineers who aren't stupid? Maybe there's something to learn there? Just a thought.
Sounds great, how is the job search going? 
Interesting, these are all the questions I'm about to ask an advisor
&gt; Poor design and bad queries do not scale well. There is a point where you cannot compensate for performance of a single server with query optimisations and data design. Far earlier you'll get to a point where you can but don't want to, because doing so makes understanding and modifying code much harder than it needs to be. &gt; Databases use set based logic which is why they are very fast at what they do. Which is great for expressing (some) set-based problems, and really bad for other things. For example I have an app with hierarchy of types of products, where every type inherits most of behaviour from parent, but changes something. This is well suited for OOP, and really poorly suited for SQL (with imperative extensions or not).
&gt; If I have my business logic in the database I will want to test a lot of different cases and if that means maintaining a lot of scripts to set the database in the right state for each test then it is a lot of work and mocking would reduce a lot of the load. The vast majority of the cases you would test are static, simply by the nature of the type of logic that we've been talking about. To pull a number out of my ass, I'd say 95% of the logic that you should consider putting in the database are things that are meant to eliminate the round-trip time between the DB and client code, add constraints to your data, or add automatic behaviors. In the first case, I have yet to see an instance where the round-trip back to the server was not an atomic, repeatable action. Whether it's a supplemental query or logging of a particular access, it's invariably trivially repeatable. In the second case, it involves the trapping of data errors, which is repeatable by definition. In the third case, it begins and ends with either adding, updating, or removing data from the database as part of the test, and the automatic action is required to ensure consistency. In this case, the test suite should be expected to run against a more-or-less "virgin" database primed with mock data, which would be destroyed at the end of the test run. There already exist many tools that do exactly this task, for the explicit purpose of integration testing. The other 5% are cases that are difficult to mock, let alone test, by the very nature of the data involved. For example, there's a great deal of real-world data that makes a mockery of any attempts to test. See, for example, [Falsehoods Programmers Believe About Names.](http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/) As to tests not being hierarchical, I have yet to see a case on an RDBMS where this either isn't or can't be the case.
I am extremely confused with people saying Relational DB do not scale well. At some point you might have to provide a beefier server but beyond that you have to make sure you are actually using the Database correctly, IE, make sure you are not doing a search on a million row table on a column that isn't indexed ( or is indexed but has so many similar records that it ends up scanning anyways). 
It makes 0-downtime updates much harder, but why don't nuke all stored procedures before updating them? It's quite simple to deploy.
As you can see, the icons are really small and annoying to click and find. If there are IDEs, specifically ones that are built for science, that work better in Windows 10, let me know! I've already spent a lot of time trying to fix things and nothing has worked. 
&gt; shifted most of their business logic to SQL Hmmm. They said they shifted from an ORM to a "database service" which I interpreted more as shifting from an ORM to something like DynamoDB(??). Perhaps I misunderstood. 
https://stackoverflow.com/questions/1301346/what-is-the-meaning-of-a-single-and-a-double-underscore-before-an-object-name
&gt; A Django project wasn't even originally a normal python package! I just pulled up the 0.90 branch -- since 0.90 was the first actual release of Django -- and checked. The project template created a directory containing an `__init__.py` file. So I'm unsure what your complaint is there. Also I should point out, since you seem to be making some assumptions in your comments about whether I know the history: if you go look at the 0.90 branch, you'll notice the latest commit in it is by me. &gt; This is not an opinion, this is fact. Just look through the archives long enough and you'll see it. I was there. I've just demonstrated that what you said was factually incorrect. And indeed, I was there. &gt; It was not designed well with regard to cleanly extending a complex app, and it still isn't that way. "Cleanly" extending a "complex" app is not something that can be genericized. Django's evolved to try to provide better abstractions for encapsulating functionality and then reusing or modifying it, but there is not and never will be a one-size-fits-every-use-case solution here. Not in Django, not in Flask, not in Pyramid. Anyone who claims otherwise is selling snake oil, and not from the good kind of snake. &gt; Django might very well be the smart decision for your team, for your problem, now. I certainly thought so in 2005. I still think so now, in 2017. &gt; But to claim that the architecture is as well suited for extending a complex long lived application as Pyramid or Flask is just incorrect Amusingly, the team I'm on started out (before I joined) on Flask, and recently decided -- I abstained! -- to switch to Django, precisely because Flask wasn't cutting it anymore. &gt; I'd hazard that most people who have done serious study of application architecture in Python would agree with me. I'm sure you would hazard that. I'm not sure you're going to find a consensus that your subjective opinions on how to do things are actually objective truth, though, and that's something I've been telling people for, oh, about twelve years now.
Beating C++ and being very slow are two different things.
Don't let the heavyweight vs lightweight thing dissuade you. Memory and disk space is cheap. The time you spend programming is not. Using Qt will save you a lot of time.
Fair enough ☺
well on cosmic scales that might be, in reality it often means waiting 10 days instead of 10 minutes or worse ;-p I like functional languages like haskell or lisp too but they ultimately aren't good enough. Of course there are a few use cases where performance does not matter or purely scientific reasons to use functional languages.
deep in your heart you too know that it is indeed true. the future lies in machine learning and other high performance areas, functional languages are not part of the future unless someone creates the first performant functional language + compiler ;-p it's not entirely impossible so who knows
 import string VALID_ASCII = set(string.ascii_letters + string.digits + '_-.') def check_email(address: str) -&gt; bool: has_at = address.count('@') == 1 right, left = address.split('@') if has_at else '', '' return has_at \ and len(right) &gt; 1 \ and len(left) &gt; 1 \ and set(address.replace('@', '')).issubset(VALID_ASCII) There are so many possibilities and outliers it's not recommended to check for e-mail address validity. Instead you're supposed to knock off the 99% cases and then attempt to send the e-mail. If it bounces, well, then it's invalid.
What would you consider an app like SalesForce?
Here's an idea, Get a large set of data (could be anything that interests you. If you can't think of anything, get something like a phone book or a college catalog) in a txt format. Write a program that parses this text file and adds the important information to a database of some kind (this could be through SQLite, but you could even do something like a csv file instead). Add a user interface with various options for quickly searching through this database and displaying the information on the gui. 
&gt;i learned python. How can you say this? I have used python for more than 10 years, and there are still things I can't fully grasp. If you do: Apply to become a python core developer. 
[Contribute to an open source project](https://github.com/search?utf8=%E2%9C%93&amp;q=language%3APython+stars%3A%3E-1&amp;type=Repositories)
SQL is a context shift for most programmers.
ITT: people who most likely didn't finish a CS degree or haven't looked much into the power of a relational database. Also to all the people saying "there is a reason google uses nosql solutions" yes indeed, but you're not google. We'll talk again when you need to serve billions of requests every day.
Where did compiler optimizations enter into the conversation? I was specifically talking about a compiler bug. If you had optimisations 35 years ago you were lucky. Some of us had to hand optimise by defining the most used local variables in C, usually pointers, as registers.
I really think this has to be the only conclusion.
So are HTML and javascript and CSS and a lot of other things.
The code you show should give a syntax error in both cases as there is no indentation after the for loop, unless my MKI eyeballs have missed something earlier. If you'd like to show the actual code and the full traceback we'd be able to help.
This is pretty much what I was thinking.
Thanks for the feedback :) I personally use it at works and in personal project, but I am biased !
This is nothing more than a Udemy paid course advertisement. Boo.
I wanted to chip in and mention that it's a misnomer to call a problem "algorithmic". You use algorithms to solve a problem, and the nature of the problem should lead you towards the particular algorithm or algorithms whose implementation will give the result most efficiently. An example could be how to schedule bus service in a city to maximize the number of passengers and minimize the amount of fuel expended. I am curious though, how did you learn the language? Knowing the syntax is only the first step, and I don't think you should make such a bold claim as to say you know the language, if you don't know what to do with it. Programming is less about the code itself than it is about solving problems with code. The science is in how well your code solves a problem, and the art is in the implementation of the solution. 
Not sure if I would call this a "hack" really. A "hack", at least in my mind, would be breaking into the school's network, getting administrator access, navigating to wherever they store the data of who is registered for CS101 and forcibly inserting yourself into the database while possibly removing someone else to make room for yourself.
Uhh.. For me that's just dropbox :D
Per https://support.enthought.com/hc/en-us/articles/115002378783-Canopy-2-1-Known-Issues-supplemental-: &gt; Tiny fonts and icons on high-resolution displays: Fixing this will require converting Canopy to use the newest version of the Qt GUI toolkit. This is high on the roadmap but does not yet have an ETA. Meanwhile, you can work around this by reducing your machine's display resolution. We understand that this is not a great solution, and apologize for the inconvenience. If you have any further inquiries, please visit: [support.enthought.com](https://support.enthought.com)
Are there 2 lines in exp.stdout.readlines()? That would make it iterate twice. Try printing that and see what exactly it contains.
Yes it's wrong, like any other algorithm that computes distances on earth. To get a perfect measurement you would actually need to know each piece of sand, rocks, etc. that is on the surface on earth. The thing is that when you want kilometers, you give zero fucks about nanometer errors. It is wrong measurement? Yes, but who fucking cares, when you just want kilometers?
If all you have are hammers then everything looks like a nail
Machine learning is fun.
Writing a program to scrape grocery items, their prices and nutritional info. Later on I'll try and put this together into a webpage using Django and make my own nutritional tracker. The benefit of this one is that it has prices.
These instructions are for python 3 (as mentioned in the article but not explicitly clear that it doesn't work for 2). For python 2, use `python -m SimpleHTTPServer &lt;port&gt;`.
What I want to know is why they bought the Fleksy devs and abandoned the project. Still sad about that.
As a database dev learning python, I appreciate the ability to augment my models with functionality in a flat file, plus adding default query behavior on the fly through meta class settings. Downside though, building a historical object model requires additional development and maintenance, but I would argue it's the same with sprocs and a well-designed, single-responsibility database object model. Realistically, I just view it as a different means of code organization and maintenance, because at enterprise scale you really aren't going to choose one over the other: you're going to use one solution for its benefits and augment its weaknesses with another solution. That's why you have many cross functional teams in the first place to manage the full stack of tech at your disposal.
&gt; understanding query plans is not difficult and it doesn't require any special skill Making any changes based on that on the other hand requires understanding of all usecases for given data, database internals and how it interacts with operating system. It is much easier to optimise one code path in isolation, than it is to optimise database usage, that may span across numerous applications. Sure, a missing index is easy to fix, but beyond that you'll need to have - or to become - a DBA.
Sorry for the late response, This method unfortunately threw me an error when I tried it this morning. In order to do this, I do believe that I need all the dates in the df to be of the same structure, which is not the case in my scenario. I did find what /u/sircharles--- recommended to be the one that worked the best in my scenario. I appreciate the answer though!
Hello, This, along with throwing an errors parameter in the to_datetime() worked perfectly for me, thank you!
&gt;I am extremely confused with people saying Relational DB do not scale well. Because providing guarantees they provide comes at high cost. Finding missing indexes ends rather fast, than you are left with not-so-easy gains, than you start designing your app to deal with db quirks and hard tradeoffs, and then you realise that at scale even minor changes become painful and every minor app feature has to go through DBA and it becomes such a burden that it halts development, while you could happily throw most of your data at just another AWS node with no effort if you'd use non-relational storage. All those nice db features come with locks, memory usage, lots of disk writes and complicated OS interactions.
Our regular unit tests use postgres because our application uses postgres. It's something I see advocated for often.
That goes way outside the scope of what a unit test should be doing, in my opinion. If you're testing data from a database or other source, it'd be more like a behavioral or functional test.
`exp.stdout.readlines()` Is reading all lines before your subprocess finishes and sends EOF to your main process. If you want to read line by line when available, then do `for line in exp.stdout`, the file object allows you to iterate over each line as its feed through the pipe. Otherwise it would probably be better to use `stdout, stderr = Subprocess.communicate(None)` as the communicate method uses a better system calls to read data from a Subprocess (like epoll, select, poll).
Sorry my mistake. Thank you for suggestion, Im gona post on /r/learnpython I have a little hard task to solve.... the bot is just a part of task. Thank you
Thanks for the tip. It's very enlightening. I have been using seek + read since I picked up Python. Not anymore!
I like to think of other people as QA testers for my reality.
At my job people use Python for -web development -statistical analysis -artificial intelligence related things - as an ETL tool 
Its possible that some code swaps would require tweaking, I refuse to touch JS though so I am not speaking from personal experience; only from some limited insight from people who have used JS/node
I'm trying to write a script for identifying rhetorical questions in online comments. Anyone got any suggestions?
Snek!
I can help, since I have the reverse problem. I have so much to do, but I'm still learning python basics, so I can't yet do it all. I studied finance &amp; have worked in financial services for several years, but I'm just starting to learn python now. If you want to discuss, let me know.
nah dude, that's just portable python.
You have to use an exception handler, that means try/except. That's exactly what that's for. It's quite simple. Everything in your try block is executed, if one of the expressions results in an error the execution pops into that area of the except, specifically the one that's catching that type of exception. I'm on mobile or I'd provide some example code, but it's easy enough to find.
Working on a little script to scrape rotten tomatoes for movie recommendations based on my input. I know it's a basic project thats been done a million times but I've never done any web scraping so I'm learning!
Simple but good way to show how easily a common password could be figured out. I like it. Two notes: 1: why only support python 2? from a quick glance at your script, it seems like it would be easy to support python3 as well? 2: Have you taken a look at using the multiprocessing package for this kind of work? seems compuationally expensive which is a good candidate for multiprocessing. Since I try to not be the type of guy to suggest stuff without contributing, I'll see about making pull requests for these if you'd like. 
How about download whole blockchain and check it, i think that would be faster. Is this same as previous project called brainflyer. 
I load that page, find the guy's name and it's a `span`, not a hyperlink to his facebook profile. Example: &lt;div&gt; &lt;span class=""&gt; &lt;span class=" UFICommentActorName" dir="ltr"&gt;Pascal Ness Hébert&lt;/span&gt; · &lt;div class="_4q1v"&gt; &lt;span&gt; &lt;a target="_blank" href="https://www.facebook.com/pages/Sprinkler-Fitter-inspecteur/1709230112722281"&gt;Sprinkler Fitter &amp;amp; inspecteur&lt;/a&gt; à &lt;a target="_blank" href="https://www.facebook.com/prevention.incendie.safety.first/"&gt;Prévention Incendie Safety First inc.&lt;/a&gt; &lt;/span&gt; &lt;/div&gt; &lt;/span&gt; &lt;/div&gt;
I agree with you, flask is not superior to pyramid. They should have used pyramid. I say this, lighthearted, but pyramid is so much fun, killed flask for me.
Perhaps you are logged into Facebook or there is some other difference between your own browser instance and the Selenium one? I've only used Selenium from Java before but by default it starts a browser instance with a blank profile separate from your own browser profile so there will be no cookies, no saved passwords etc. I would look at the HTTP requests issued by your browser and the Selenium browser and compare the two.
You ought to be using requests and requests-oauthlib. 
Wow, after trying on a not facebook logged chrome, I see that you are 100% right on this one. The browser need to be logged on facebook to see all the links. Thanks a lot, I have been trying different way to extract this for about 6h :'-( lol
&gt; Okay,so i learned python You have spent at least 10 years working with this language and you still have no idea what to do with it??
Oh I meant more like if your relationship definition worked for the first million rows, but then later on you encountered a case where it wasn't true when running business logic and needed to update schema as well as relationships between different tables. 
Looks handy. Do you have some real life examples of how this would be useful?
semaphores to the rescue.
something like this is a start: https://repl.it/JDU5 doesn't work for all cases depend on pig latin rule set
The time when "hack" meant only "gain unauthorized access to a computer" has long passed, if it ever existed.
Do I look like I got any suggestions?
select loop in c? Not my speed but who am I to judge?
Data doesn't pass the sniff test. I'm no sqlite zealot, but any survey not putting sqlite at the top of the list is almost certainly wrong. MySQL and its derivatives are almost certainly number two. The rest look mostly ok, but I'm not willing to trust it very far due to epic fails on sqlite.
Thank you for the reply. I should've worded my post better but I know the basics of Python, I just haven't coded it in a while and needed a refresher. I'm on mobile and didn't know /r/learningpython was a thing. I'll post questions on there from now on.
Haven't got that much time to look at it now but never share your API keys. Store them in your env. 
Most maps do it better than this. We've had a standard geoid model since 1984 and that model isn't a Sphere. 
/u/BinaryRickStar Another one for you if you have the time :) I'm trying to click on "Voir 10 autres réponses de ce fil" to expend all comments. If I use : driver.find_element_by_xpath('//*[@id="u_0_0"]/div/div/div[3]/div[4]/div[2]/div/div[2]/div/div[3]/div/a).text I'm able to extract the text (Voir 10 autres réponses de ce fil) But if I do: driver.find_element_by_xpath('//*[@id="u_0_0"]/div/div/div[3]/div[4]/div[2]/div/div[2]/div/div[3]/div/a).click() It return an error saying : Other element would receive the click: &lt;div class="social-bar-container fade-in sticky"&gt;...&lt;/div&gt; Any tips for that one ? 
Read https://martinfowler.com/eaaCatalog/tableDataGateway.html
writing a code to find the football coordinate on the ground and do path planning for robot to kick it! Using kinect (for windows v2) with freenect Actually stuck at how to extract the coordinate of the pixel as recognized using haar! &lt;&lt;&lt;&lt;My Head Hurts Bad!&gt;&gt;&gt;&gt;
I'm going to take a look at this later and possibly upgrade the shit out of it 
Why would you think that SQLite should be at the top?
Really? It seems to run weel on some browsers, isn't it?
Unfortunately audio is quite broken. Headphone users beware.
What I meant was that development seems to have stopped. They have some pretty cool demos on their home page tho. I'm kind of hoping that wasm will spur this kind of thing on.
Interesting! Didn't know that library. But I was really impressed by the fact that Python can be run inside any instance of a web browser. Maybe I'm wrong?
Sounds great, will definitely start using it. Thanks!
Take a look at string slicing, that's probably what you want :)
Ah ok! Sorry if I misunderstood your words. But I've checked on the github repository and it seems to be active (last commit: 18 hours ago). I just hope it could be fully integrated in a web browser, as an alternative of Javascript!!
point made in this article is sharing without using any 3rd party libraries
It'd be interesting to see the results of running something like this using the billions of leaked passwords against the entire chain.
You made my day :D
Actually, light database of public keys (not addresses) could be created, because that's what we explicitly have in blockchain. 
Why? For what? I guess the main thing is that the package is about easily sending nicely formatted emails, and OAuth2 is just something on top of that :)
Python web development doesn't really work that way, unless you want to do the slow, outdated, and horribly messy CGI interface. Look into a web framework like [Flask](http://flask.pocoo.org/) instead - there's an example on that page.
London based web media graduate seeking paid internship or junior role as python webdev. I have experience using Flask, API's and Matplotlib as well as Firebase, HTML, CSS and JavaScript.
Okey so i need to search for CGI interface? I already know how to do this with a framework. I use Django on my Internship. And i would really want to know how to output Hello World in a web browser with Python without needing to install a framework. Installing a framework for this is just OVERKILL.
Been done before, apparently there are people who are exploiting this since 2014, so you will never find unspent bitcoin. As soon as it would happen, 2 seconds later a transaction will have been made. source: https://www.palkeo.com/code/stealing-bitcoin.html
I don't understand what you are complaining about. The program I linked can be run on its own, it doesn't need any external web server. But you can use Apache as a reverse proxy if you want. 
It's very limited. I would like to use Python fully. But the script indeed can at least do something from scratch ;)!
&gt; It's very limited. I would like to use Python fully. Maybe you should use a framework!
If you're looking to run Python just like PHP, which is a horrible, horrible idea and not a thing you should do ever, look into the CGI part of [this tutorial](https://docs.python.org/3.6/howto/webservers.html).
Be careful though, do not forget the Zen of python ;) &gt; Readability counts. Cf: import this
I didn't make a lot of python tools but I used clap and I found it pretty good. Also used argparse, can recommend. As for completion, I think you need to write a completion add-on per shell and distribute it as a seperate file. (Not sure, don't have any experience with that)
Install base. 
As soon as I get home from work I'll post some examples and sources! Thanks for the interest (:
Can you go into more detail what their plugin does for reporting? Most of your post is what you've tried, not necessarily what you need to really accomplish :)
Here is a talk about this topic from 2016: [Stealing Bitcoin with Math - HOPE XI](https://vimeo.com/177318833). There is another good similar talk somewhere I sadly can't locate right now.
"CGI" is hardly from scratch though - you have the entirety of Apache behind you. It's also not useful whatsoever - modern frameworks use WSGI, not CGI, and you run them with a setup like Nginx &lt;-- (HTTP proxying) --&gt; Gunicorn (WSGI server) &lt;--(Python calls)--&gt; framework &lt;--(Python calls)--&gt; your code or Apache (mod_wsgi) &lt;--&gt; Gunicorn &lt;--&gt; framework &lt;--&gt; your code, not through Apache directly.
For anything bigger than what argparse feels comfortable for using, I use [Click](http://click.pocoo.org/5/bashcomplete/). It's pretty easy to build complex CLIs and the page I linked is about their bash autocomplete (unfortunately they only autocomplete in bash, last I recall).
If your system is extremely customizable, sometimes you need very complex procedures to make it generic enough to still work for each customer. Add in the volume of rows and amount of tables you need to hit and the only way to do this is in the database.
Thanks, that helped A LOT.
Wow, why is anyone creating keys from passwords/passphrases? Which libraries are using this method by default? They should be avoided... The better way would be to use a cryptographically secure source of random numbers to generate Bitcoin public-private key pairs with the maximum amount of entropy allowed by the size of the keys and then encrypt the private key with a password/passphrase. 
There was a nice talk from Al Sweigart on this years PyCon. Just invest these 30 minutes and you will be confident enough to solve your problems :) https://www.youtube.com/watch?v=abrcJ9MpF60
Maybe not the suavest regex, but [Tt]rue|[Ff]alse will work for the first one. You might find a regex sandbox like [this one](https://regex101.com/r/MMIz5v/1) handy.
Make sure to switch the sandbox to python mode (on the left).
https://github.com/maurycyp/vincenty This uses the WGS 84 algorithm and is a bit more accurate.
... it does.
This is very readable. I would just do a temp var for {"signed" if self.signed else "unsigned"}. Other than that it's very clear. Try to do this in Java for fun... 
I'm working on Python snippets to include ina PyQt5 tutorial for beginners I intend to write. It's tons of fun.
Big +1 for Click.
I think this is as readable as it gets. I'd do a temp var for the if statement, but otherwise it's good IMO.
Post your code and the error message in /r/learnpython.
Click is by far my favorite. It comes not only with the typical argument parser and help generator, but also with some handy utilities for formatted output, progress bars, argument validation, automated tests... And the list goes on. In addition the list of arguments and options is specified in a very pythonic way using decorators. 
Do you have another recommendation of a tutorial I should follow? :)
Look up [UWSGI](http://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html), this is the base http interface used by flask, django, and probably every web framework in python.
Fun story: you know Django, that awful web framework with an awful ORM that leads people to prefer to "use a hot poker in their eyeball" rather than do stuff in the database? I used to work at the company where it was originally developed. And do you know what? We used pretty much every feature of Postgres we could get our hands on. *Alongside* Django and its ORM. And it's actually gotten easier over the years to do that -- there's now much better support for wrapping a Django ORM model around a Postgres view, to take one example. So. Y'know. Maybe be careful slinging hyperbole like that.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
How do you send/mask IP addresses? Wouldn't the game server flag the same IP attached to 1000+ accounts?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Yes it is needed, but I can't reply to anything in the link because it just displays a spinning wheel and a Download link that doesn't do anything when I click on it. So I'm afraid I have to downvote this, as the link is unreadable for me. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Will this be online?
I very much like docopt's approach to argument parsing.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
This is really cool. Any OSS equivalents?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Yes, I already have some scripts on github https://github.com/Uros-Calakovic/Book It's about 2/3 of the content I planned. When I finish the coding part I'll polish the code to be somewhat uniform. I plan to write a short description on how each script works as well as some general PyQt5 stuf, to make the whole think coherent.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
You have said the word 'yeah' 62 times in your recent history. [Yeah!](https://byyeah.com/assets/img/product/outofstock.jpg)
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Me too. There are a few bugs though. The dev error messages are bad. I still use it.
At first you'll write code to integrate your app with X. And then you'll write code to integrate your app with X+1 and X with X+1, and then it keeps exploding in complexity of things you have to integrate - and invent the right ways to do it. I've tried it once, the team realized quickly that they are just reimplementing Django, and switched back to it.
Creating UIs in PyQt and drinking heavily.
Yeah. [This](https://github.com/docopt/docopt/issues/172) behavior in particular, and its limited support for subcommands made me switch to click. I still like to use docopt but only for very simple scripts.
Making a scrapper that takes my college calendar and add it to my google calendar.
Not sure I have much faith in an author who has more bugs in his sample code than a hot summer muggy Lousiana night. Also, his argument of "since recursions each take up a bit of memory thus it has a finite limit to its depth == recursion is bad" is moot and couple be applied to any practical computing system
I've never found a compelling use case for one. I write libraries with thin script wrappers. If I was going to use a cli framework I'd want one that wrapped my library with the least boilerplate. I generally find argparse works pretty well for this out of the box. Parse args, call library function with args, done. If you have a bunch of scripts check out setuptools entry points it can create the script files automatically. Even if you have sub commands all you really need to do give each one an argparse instance, dispatch the command function with a dict, and forward the remaining args. I could see a package to help with that a little. I'm open to new ideas. Change my mind.
Refactoring a Telegram bot I made for a family only Telegram group. It's got voting, random gif fetching from predefined subreddits, Oxford (API) dictionary querying and mp3 library. You can query a song, which will be returned as an audio message if found. In the future I plan to use the mp3 integration as the basis for a song trivia game. The bot helps to keep all us cousins and other family members in the group interested to participate and interact.
**Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
Single `_` for "private" variables ("don't touch this"). Double `__` for experts only. And even then, 9 times out of 10 you'll probably decide not to bother. 
Completely jumping off topic, any chance you could compare flask and cherrypy? I've used a lot of cherrypy and almost no flask but I'm curious to start playing with flask, what are the biggest advantages of flask over cherrypy (aside from a larger community) what would you say are the best use cases for the two frameworks? Advantages and disadvantages?
I feel you man, just got a raspberry pi last weekend and have been spending way too much time on it.
Can you do me? !showyeahs
I think it comes down to preference: In the old way, you get a shorter line length but more lines for one string, whereas with f-strings it's the opposite. As long as it's not absurdly long I tend to prefer f-strings because you can read it straight through without having to look at what {0} is. 
Being frustrated by the "enterprise-y" feel of SonarQube, laden with features I don't want, and not using the tools I'm accustomed to, I discovered that I could own the name Sourcelyzer and now I'm trying to figure out how I can make a stripped down version of SonarQube in python. 
You have said the word 'yeah' 64 times in your recent history. [Yeah!](https://byyeah.com/assets/img/product/outofstock.jpg)
You have said the word 'yeah' 2 times in your recent history. [Yeah!](https://byyeah.com/assets/img/product/outofstock.jpg)
Hey there! Total noob here and am just getting into coding, but try messing with the font size or image size (112). Again, just throwing out ideas as it seems like there might be a scaling issue; for some reason it's not automatically scaling the text to the monitor. Anyways, give it a shot and do some more research! You'll get it! Hopefully somebody more experienced will chime in =) P.s. I hope to one day try this! This is what made me get into coding =P
/r/roguelikedev started a weekly thread last week following a tutorial for building rogue-like games in python. I started working on it the other day and it's been pretty neat so far. 
Yeah I ended up changing text sizes...and it worked! Was hoping to figure out exactly what was making it be cut off, because it's been bugging me ahaha. I'm also a very beginner, so couldn't really figure this out :/ for now tho...it works!
cmd2
A tmp var would be better than this. But if you like tricks, then you should do: bool(self.signed) * 'un' + 'signed'
Dang! I just leveled up! No worries citizen! My job here is done...the best of luck to you! *fly away*
This is pretty readable. Unless you object to the `__repr__` itself, this way of composing it is just about as clear as you can make it.
&gt; \d+[-/]\d+ This seems to work almost completely correctly thank you! It is just cutting off the last digits after the - or /. A follow up question: Is there any way that I can accept any amount of letters before or after any of the "-" or "/" ? Say that the date was in this format "March-10-2017", I feel the current code will work If I can account for the fact that letters or numbers can be before/after the "-" and "/". How can I go about modifying the description you provided to include this?
I know this is obviously a Python sub, but for complex CLI tools with hierarchies, I like to use [cobra](https://github.com/spf13/cobra) (golang). Especially if you are just wrapping HTTP anyway.
What’s the easiest way to monetize an API?
!showyeahs
[Link to the slides](https://speakerdeck.com/kavya719/the-memory-chronicles)
Voila! The windows version took only 0.15 secs after I changed sqlite location to ":memory:", you are right. So, is there an issue with how Python caches files on windows, or the specific sqlite module? (`sqlite3.sqlite_version` returns 3.14.12)
Your description is still imprecise. Maybe play around with something like this: ((([a-zA-Z]+|[0-9]+)-([a-zA-Z]+|[0-9]+)-([a-zA-Z]+|[0-9]+))|(([a-zA-Z]+|[0-9]+)/([a-zA-Z]+|[0-9]+)/([a-zA-Z]+|[0-9]+))) This requires all three parts, separated by a common symbol `-` or `/`.
At PyCon 2016 she did a talk on Gevent and it is awesome as well. https://youtu.be/GunMToxbE0E
This may not be a very popular answer, but I actually like to use `getopt`. You end up with a lot of boilerplate but it also gives you a lot of control. And for things that aren't that complex, it is usually fine. I do want to look more into `argparse` though.
lolwut &gt; There should be one-- and preferably only one --obvious way to do it.
Also keep in mind that lubuntu uses LXDE, which is lightweight. A script on my amd am3+ machine (headless server) takes .04 seconds to run. On my new intel i3 with Ubuntu it takes .05, even though that cpu is much faster (in terms of clock speed and work per clock). 
This sounds cool. Though I've never used telegram(only whatsapp), would you mind sharing code/tell something more about how you're doing it. Telegram is mobile based afaik, how is Python running on phone, how is it accessing phone data? Sounds like I've found a treasure :P
Sooooo, a verb-based imperative API? I guess what I'm wondering about is, did they switch to using heavy stored procedures and triggers? Are they running app logic code on the SQL server?
I think commiting after every insert kills performence. Try commiting after all insert are finished.
That sounds like fun. What's it about? 
You have said the word 'yeah' 3 times in your recent history. [Yeah!](https://byyeah.com/assets/img/product/outofstock.jpg)
Refactoring a script that takes ELB access logs from S3, loads them into Redshift, analyzes them based on a set of pre-existing business concerns, spits out the result into S3, then loads THAT into an API for internal reporting apps to make use of.
I just finished a working prototype of an A/C thermostat built on a Raspberry PI. It works with Apple HomeKit.
I'm working on a thing that will request xml data from EVE-Central's market database, "parse" (read: string.find) it to the lines I need. And calculate profit margins off of reprocessing ore vs selling it raw. So far the only major issue is EVE-Central is crap and can't even find the information in it's own database half the time.
I believe you can load the csv into a dataframe using StringIO. Something to the effect of: from io import StringIO import pandas as pd dataframe = pd.read_csv(StringIO(YOURCSVSTRINGDATA)) Hopefully this gets you going in the right direction. I do not consider myself knowledgeable on this. edit:format
Trying to solve the biggest problem in open source with a crowdfunding platform called fosterous.com
Charge money for it. 
How are you calling `re` and using the returned matchobject? Something like this works: import re patt = r"""( (([a-zA-Z]+|[0-9]+)-([a-zA-Z]+|[0-9]+)-([a-zA-Z]+|[0-9]+)) # - separator | (([a-zA-Z]+|[0-9]+)/([a-zA-Z]+|[0-9]+)/([a-zA-Z]+|[0-9]+)) # / separator )""" string = "Today is 6/27/17 and is a Tuesday" match_object = re.search(patt, string, re.VERBOSE) if match_object: print(string[match_object.start():match_object.end()]) else: print("No match.") 
Python doesn't do anything special in terms of caching to disk; that would be the operating system and its filesystem. It's possible that the C Sqlite code is a bit more optimized on *nix environments, though my guess is that the filesystems are behaving differently. It's speculation on my part, but I imagine the difference is likely this: On NTFS variants, allocation happens more or less immediately when a program needs some space for writing. Whereas with Ext4, you get allocate-on-flush. Each time you run your insert, you're writing a tiny amount of data to disk. With NTFS, it's allocating new space basically in real time. Whereas with Ext4, it's writing it to disk, then updating the allocation records only on flush. The net effect is that while NTFS and Ext4 might be similar for large write operations (like saving a whole big binary file), small-scale streaming writes tend to be much more performant on Ext4. EDIT: You could get some confirmation of it being the filesystem, also, by mounting an NTFS volume on Linux, writing to it, and see how the performance is. $10 says it'll be slow. I'm not sure if there is a Windows Ext4 driver with full support for allocate-on-flush, but you could see if there is and get reverse confirmation that way too. And in terms of a real world high-throughput application, if you use a more industrial-scale database like PostgreSQL or MySQL, you'll have some options in terms of its caching strategy on the server. Another option, of course, would be to use the Sqlite database in-memory, then write to to disk only when you're all done.
You need to have some context of the data rate as well. 115200 is a fairly common baud (bits per second) for serial link. There are 10 bits sent for every byte of data. Start bit, Byte, Stop bit. So a byte is transferred in 1/11520 of a second. 0.0000868 sec per byte. So the timeout you have 0.0001 is just longer than it takes to transmit one byte of data. IF it is supported (not sure if anything happens that low) then you could just as easily time out where there actually was data to come in. 9600 baud, it is 0.00104 seconds to send a byte. I'm not sure if the timeout doesn't fire if there is any motion. However, it would be needlessly short. I've never used under 0.5 in my serial implementations.
Love me some raspberry pi. What're you doing with it?
Currently Bitcoin blockchain is [121.8GB](https://blockchain.info/charts/blocks-size?timespan=30days). Personally I don't want to download blockchain. Blockchain explorer is good and all but they have some sort of limitation (API Call). Isn't the bitcoin going to have a hard fork on August 1, 2017. I am not following with the bitcoin these day that much, but somewhere i read, current issue with bitcoin blockchain is it is too huge. Just don't start downloading blockchain, wait for 1-2 months. 
In Postgres, you can even write stored procedures in a dialect of Python (PL/Python - https://www.postgresql.org/docs/9.4/static/plpython.html)
I'm not quite sure I understand the problem, but: &gt; I am having an issue iterating through the DataFrame when it is a string, because commands like .iloc[row][column] to select specific rows and columns throw an error message when running. You should select by ``.iloc[row, column]`` or label-based: ``.loc[row, columns``. This shouldn't throw an error. Could you be more specific about your problem, if this doesn't help?
Kind of, we have an online system that stores our subjects in a html table. The problem is that the system logs you out after 5 min of inactivity so I figure out that using selenium and beautiful soup I could get the table, parse it and store it the format that google calendar uses
Just tried, did not work. Will file an issue soon, but wanted to learn more about how this whole pyqt thing is supposed to work.
Ok, so this is the deal. I'm sending a burst of 32 bytes of data every 8ms. I'm using a baud rate of 57600, which means the transmission takes about 5.5s. So that means there is a 2.5ms pause after every burst of 32 bytes. I'm trying to set the interCharTimeout so that the stream is autosynchronizing. So if i start reading at a random point in time I want to synchronize so that i read the entire burst. If i set it to, say, 1ms, it will timeout between 2 bursts so I can throw away whatever partial message i caught and restart the read so that I catch the entire burst this time. I hope it makes sense.
This is a nice concise article from data structures pespective. Out of curiousity, has anyone ever actually run into a real-life, practical, non-interview/non-educational situation where implementing a linked list in pure Python was legitimately a worthwhile optimization? I'm having a lot of trouble envisioning one.
RemindMe! 7 days "Need to watch." 
When committing a transaction, sqlite asks the OS 'please make sure this data is written to disk'. After all, this is the only way sqlite can be sure the data is actually there. Windows does this, and this takes (if I remember correctly) on average two disk rotations. So with 7200 rpm, we can do at most 3600 inserts per minute. Your ~650 per minute is a bit low, but there are of course some other inefficiencies. In contrast, Linux just tells sqlite 'sure', and proceeds to not write down a damn thing, instead keeping the data in memory and writing it to disk later. So: do you want data security or do you want speed? On Windows, you have the choice as application developer (by not committing the transaction until you have queued up all inserts), but on Linux you will get speed, even if security is what you're looking for.
Making a pythonic version of the API for England's public health data. 
I don't think timeout is finely grained enough to do that well. I would consider doing 1 byte reads. We timestamp for each read. If previous timestamp is closer than 2.5ms, you are inter-symbol. Otherwise you are at start of symbol. I do this for a few reasons with a `.read(1)` BTW - That post would have been a much better root text. ;) Although, this type of functionality might be built into pySerial already. I've never done space fixed timing based serial before. I do remember reading somewhere that Posix systems set interCharTimeout in tenths of a second and some people were setting it too small and getting basically zero, so they never get data. I'm not sure where that was, but it might be what you are running into. 
Is this a web app or mobile app? Where do you deploy it ?
[plumbum](http://plumbum.readthedocs.io/) forever. Sadly doesn't have working autocompletion at this time, though.
[For Hire] (Seattle or Remote) Data Science intern / Full Stack Web Developer. I am currently job hunting for one of these positions. - Data Scientist (intern) since I deeply enjoy the rich mathematics of machine learning and conveying results interactively with other people. - Web Developer since I already have several years of experience and have come to enjoy this type of development. &amp;nbsp; Anyways, here are my related skills... &amp;nbsp; **Data Science Intern** - I have no industry experience yet, but have taken a slew of university courses including Statistical Data Analysis, Artificial Intelligence, Machine Learning and Data Mining. I'm very comfortable working with the following tools, - PANDAS - Numpy - Scikit-Learn - Jupyter Notebooks - Matplotlib - Seaborn - Vis.js **Full Stack Web Developer** - Currently looking for a junior or mid level position. I have 2.5 years of internship experience that I would love to translate into a full time position. I have a strong grasp of the following, - Flask - SQL - RESTful Webservices - Javascript including angular.js, jQuery, AJAX and validation - HTML and templating engines - CSS including bootstrap It's been a while since I have used Django. If anything it should be like learning how to ride a bicycle again. **General Skills** - Very comfortable with unix / linux systems - Version control with git
I started learning Python web frameworks through Django (via [GSWD](http://www.gettingstartedwithdjango.com/)) learning to interface with a RESTful API to control a mesh network of IoT devices. It worked, I turned an A/C unit on with the press of a button; but I always found it being a lot of excess stuff I didn't need. When I started working on some hobbies, I started using Flask as a quick knock out the server backend so I could start worrying about the UI frontend. Once I started getting comfortable with CSS, I started wanting to add functionality. Instead of moving back to Django, I enjoyed Flask's simplicity, so I stuck with it. Now, I work primarily in Flask. I'd say its like working with an IDE vs. working with a text editor. One comes with a lot of stuff I may never use and so at initial glance, it looks a bit bloated versus a bare bones system where if I need a function similar to the IDE, there's a library I add to my pip requirements file. Not knocking Django or IDEs, just using that as an example.
I switched because it seemed like every "What should I pick as a my first language?" thread that pop up most of the comments said to choose Python for its readability. Also Java was always high on the list as well which is why I decided to learn that one first but I had a hard time with it. How long have you been learning Python? What resources or books have you been using to learn, if you don't mind me asking? Just curious. 
It finally clicked that I need to iterate over the array for the amount of rows in the array AND to include the data in the loop. This works in one iteration. Please, if anyone else has some good input or a faster sorting method then it would be great to share here if someone Google's a similar problem. for g in range(0,entityrows): testsort[0][1] = 6 testsort[1][1] = 2 testsort[2][1] = 4 testsort[3][1] = 2 testsort[4][1] = 4 testsort[5][1] = 2 testsort[6][1] = 0 testsort[0][0] = 10051 testsort[1][0] = 11568 testsort[2][0] = 525 testsort[3][0] = 11190 testsort[4][0] = 952 testsort[5][0] = 1882 testsort[6][0] = 11320 testsort = testsort[testsort[:,1].argsort()] testsort = testsort[testsort[:,0].argsort(kind='mergesort')] If this code confuses you, it is because it was a quick and dirty test. 
I've got retropie up and recently stuck Kodi on there with a streaming app. Been playing lots of Super Mario World :) hbu?
Did not know about hug, thanks !
I don't think you get the point.
Hello, I was actually able to use dtypes in the read_csv statement itself after further inspecting the documentation, but thank you for the suggestion!
This sounds like a XY problem. Why do you want to sort an array of live data? Can't you queue the incoming data for a bit while you sort the vector?
I'm interested in seeing that. I haven't had any experience and I'm curious what I can pull from the service.
OH, you are asking an entirely different question than I assumed you were, you are not asking about the actual sorting.
Thanks I'll Google it.
The problem is not with PyQt5 per se, it's with the PyQt5 wheels you get when you run pip install pyqt5 I don't know under which conditions they are built, but they fail under some circumstances because of OpenGL mysterious issues (I say mysterious because I really don't know OpenGL that well). Since version 5.6, Qt moved to use Chromium as the basis for its web backend, and Chromium uses OpenGL to improve the rendering speed of web pages. But I think making things work with OpenGL on Linux is hard because of different provider implementations (Nvidia/Intel/AMD). Users have posted a workaround for this https://github.com/spyder-ide/spyder/issues/4495#issuecomment-302872986 and we added it to be part of Spyder **3.2** (to be released in a week or two) to see if we can improve the situation. Please try that workaround until then. The good thing about Anaconda is that it doesn't use Chromium for Qt's web backend, but Webkit instead, which doesn't have this problem. That's why I recommend you to use Anaconda.
What you actually want is array.sort(key=lambda x: (x[0], x[1])) Oh ignore me this is jumpy stuff
Any special steps running this on OSX? Volumes are awfully slow -- my battery life can be measured by counting sheep; getting to about ~200 and then having to jump to an outlet. Also, i can do sear a steak from the bottom of my machine... which has its advantages, but i rather do without to be honest.
Setting up my project MCEdit to automatically report crashes to a Sentry.io server. Because 99.9% of desktop app crashes go unreported, and because I haven't been meeting my sadness quota this month.
Yes, Python can be a good choice for most HPC. The details depend on what you're doing, of course. 
Because it's harder. Yeah it's easy for you but generally - much harder. A 13 year old kid can learn python and make something in a week that would take half year using sql. I know that sql is cool - been there done that. But you need to consider that speed is not always the main factor in play.
Could you say more about that?
There's a saying - friends don't let friends use idle. It's probably a tiny step up from notepad.exe but not much. Do yourself a favour and get Pycharm Education Edition. It's a suoer-cut-down version of Pycharm which is a tool beloved of professional developers. It comes with a load of tutorial material built in. 
You might consider changing the [journaling mode](https://sqlite.org/pragma.html#pragma_journal_mode) used by sqlite for rollbacks. &gt; The DELETE journaling mode is the normal behavior. In the DELETE mode, the rollback journal is deleted at the conclusion of each transaction. &gt; The WAL journaling mode uses a write-ahead log instead of a rollback journal to implement transactions. There are [advantages and disadvantages](https://sqlite.org/wal.html) that may matter for your particular use case. The primary advantages of WAL are that it is typically significantly faster and supports concurrent reads and writes; most of the disadvantages are limitations based on specific use cases. Adding `cursor.execute("PRAGMA journal_mode = WAL")` right before the loop speeds my Win&amp;nbsp;7 runtime from 6.82 seconds to 0.22 seconds.
I've been going at python for about a week now. I was a Java boy for about 2 weeks and had to put it down. As far as resources go, just google and codecademy. I want to find some books that go a little more in depth though, especially in relation to scripting.
Is the drinking because of PyQT or just in general? I've heard good things about pyqt ;)
Awesome man good luck! I'm sure I'll see you around. 
What? An easy app? We're talking about corporations and large scale apps. 'been there done that'. You obviously have not.
I'm learning TensorFlow and Machine Learning! Right now just experimenting with various Recurrent Neural Network structures 
I'm trying to find something for Python that will generate beautiful reports and be really flexible. Hopefully as a pdf. But I cant find anything that I'm looking for. 
That's a pretty weak excuse, honestly. Your product is your content, if you can't load text content without javascript that reflects poorly on you. I disabled my cache and throttled my connection to regular 3g (100ms delay, 750kbs down) and it took 20 seconds before *anything* appeared on the screen. That's *anything* not the content. For something as general purpose as a blog, you should be using javascript to do progressive enhancement, not be the whole damn thing. "Oh but who has regular 3g these days" -- I often do while riding the train for whatever bizarre reason despite living in Atlanta. This could be a problem with your blogging platform (looks like blogger) or just the order the content is loaded in (loading scripts before content, which blocks rendering). If I disable javascript altogether, nothing loads. I just get a blank white screen. Some user interface there. Maybe I have a screenreader because I'm visually impaired, maybe I'm just paranoid as shit and always browse with JS turned off. If it makes you feel better, this thread didn't load without javascript turned on either.
I am still in the learning phase, but I built an app that pulls 30 million rows from an Oracle production db quickly and with little impact to the system and it's users. My main goal was to not get a naughty email from our DBAs saying that they killed my session. Now I'm learning sqlite so I can join several csv files to that monster file without running out of memory. MS Access just couldn't handle that size of a file. 
It's a good framework, but doing it all day is sort of mind-numbing.
Yeah, I feel like that's the case for most UI frameworks I've used (especially for thick clients). All the fun logic can be used by whatever.
Writing some scripts to run as cron jobs that grab data from various, related APIs and store it in a sqlite3 database. It's been pretty fun, getting comfortable with json finally but also find myself scratching my head at the "well how should I design this table?" questions that come up at every corner. Also just discovered the order of my columns got all mixed up somehow...
Job interview challenge I suppose. or pure academic interest.
Build a service that people want to use.
Whats your thoughts about have all the code in a volume for development, so that you don't have to run commands every time you want to rebuild, but then doing this rebuild for the staging section? It gives you the equivalent of venv, but for your entire stack, that can be destroyed and rebuilt as needed. I've been working on setting myself up like this, so that I have the auto reload functionality and can work a little quicker. Does your method have any great benefits?
&gt; Python only intends the "*" import syntax to be used for interactive sessions, generally with a single library such as the math library. Python is a dynamically-typed language. Nim is a statically-typed language. This difference eliminates many of the confusion problems, thus making the conciseness benefit more significant, and a decent code viewer / editor interface will eliminate the rest. &gt; Because then the IDE becomes a crutch to make up for deficiencies in language design. It's not "deficiencies in language design" any more than Python's dynamic typing is. It's a different approach that offers benefits. There's little point in inventing new programming languages that are exactly the same as the existing ones. By analogy: are light bulbs inferior to candles because electricity is "a crutch"? No one is forced to use light-bulbs or Nim, but I think the newer "crutch"ier way of doing things offers tangible end-result benefits. Some programming languages offer the greatest programmer productivity (Python?) at the expense of other things. Some offer the greatest performance (C?), some greatest safety (Haskell?), etc. Nim seems to optimize for multiple virtues at once: the greatest combination of executable performance, dev productivity, safety, etc. &gt; Also, an IDE may help you write code, but it can't help you read it. That's totally false. I would argue that the "help you read it" features are far more important. A good code editor can tell you exactly what every word and operator does, with links to definition code and documentation. &gt; In fact, a lot of code today is read by looking at Github code in a browser, on mobile devices, etc. where the IDE can't help at all. We can also have in-browser code viewers so you can read any public piece of code with all the "crutch"es instantly. One early example of this is the [Module Linker](https://chrome.google.com/webstore/detail/module-linker/dglofghjinifeolcpjfjmfdnnbaanggn), but that's just the tip of the iceberg. &gt; Come on, this is like Java requiring a million getter/setters. Saying "the IDE can do it for you" doesn't excuse bad design or the lack of properties. Java doesn't gain anything from the verbose getter/setters. Your analogy is flawed. Java is an ugly verbose language, and IDEs offer features do dull the pain of writing it. Nim is a beautiful concise language, and IDEs tell you how the compiler understands the code. As you become more experienced with the language, you need less and less of those hints, but all you have to do is move your mouse over an identifier / operator to see where it comes from. ***Nim has not yet fulfilled its tooling potential, but it's getting better all the time.***
You can also have a sort of consulting role too. Continuum business model is a good example.
It seems that they find that the out of box functions of django cannot meet their requirements and it seems easier to build it based on Flask than to hack django. I just hope we don't take it wrong and claim that "let's all move from Django to Flask because such company as Pinterest is doing so"
It depends on what you want to do. If you mean traditional HPC using MPI to help solve large linear algebra problems on distributed arrays, then the answer is *yes* but you probably **shouldn't.** You end up writing code that is just as complex as something you would've written natively in C++ or Fortran, but probably with a speed penalty. So you might as well just go native in those cases. You have the benefit in those languages of well-tested infrastructures like Trilinos or PETsc, too.
f string are less readable? you just aren't being honest with yourself.
The problem I see isn't your criticism. It is the way you present it. And imho the fact that you are not providing an alternative. That way you are neither helping the OP to learn nor others. Sadly because you are totally right in principle. And I would also prefer a better (more correct) solution. 
&gt;&gt;&gt; Nim borrows too many old/outdated ideas from Object Pascal. &gt;&gt; **No, it doesn't.** If anything, Nim introduces a lot of forward-looking "smarter compiler" / "smarter IDE" ideas that most programmers are not yet ready for. &gt; That doesn't sound arrogant at all. Argument compiler: fatal error #[DH2](http://www.paulgraham.com/disagree.html). This post is about a look at the Nim programming language from the Python perspective, which is where Nim gets its greatest syntactic influence. It's [plainly acknowledged](https://nim-lang.org/faq.html) that Nim also takes some influences from C++ (overloading, generics, wrapping C functions), Ada/Modula3/Delphi (for the type system), Lisp (metaprogramming), etc - as well as many new ideas (ex. [UFCS](https://en.wikipedia.org/wiki/Uniform_Function_Call_Syntax)). You hijacked this discussion with what makes Nim most different from Python: it's typing system. You've made inflammatory claims about ideas being "old/outdated" that you haven't substantiated. You've made blatantly false [claims](https://www.reddit.com/r/Python/comments/6gwv4a/a_glance_at_the_pythonlookalike_nim_programming/diu3g2y/) that Nim lacks a return keyword, that you can "only import entire libraries", that it's "impossible to tell which library a referenced function is being called from", etc. But this is not about who is more "arrogant". It's about whose arguments are substantiated with facts. &gt; The creator wasn't a Delphi fan? None of this substantiates your argument that "Nim borrows too many old/outdated ideas from Object Pascal". I think the most significant quote is "Nim is essentially Ada + a GC with a friendlier syntax". (As I'm sure most people know: Ada, Modula 3, and Delphi / Object Pascal are very close relatives.) Much of this "friendlier syntax" is based on Python. &gt; I can show you snippets of Nim code that are indistinguishable from Delphi code. That's funny, because Delphi *uses* (pun intended) completely different keywords. `$searchEngine delphi nim site:rosettacode.org`, look at the same code in Nim / Delphi / Python, and it's rather obvious. &gt; Heck, there was even discussion on the Nim message forum a few years ago [...] Yes, I've already linked to that thread before you did, to show that these ridiculous comparisons had been made in the past. No one agreed with it, especially not Nim's creator. &gt;&gt; I think Nim's #1 kinship is with Python &gt; Other than significant whitespace, I don't see it. People looking at Nim code mistake it for Python code all the time. ([Ex](https://www.facebook.com/libman.org/posts/309214539278999?comment_id=310948382438948&amp;comment_tracking=%7B%22tn%22%3A%22R2%22%7D): "I thought it was Python until I read your comments".) **Nim is the only language trying to bring Python's syntactic ideas** (off-side rule, most of the keywords / operators, most library names, exceptions, clean minimalism, etc) **into the compiled statically-typed bare-metal almost-as-fast-as-C language league** (where it competes with D, Rust, Ada, etc). But of course the inherent differences of that league mean lots of differences from Python as well. &gt;&gt; Nim is also a perfect symbiotic fit for Python, because you can create low-level Python modules in Nim instead of C. &gt; That's nice, but the same can be said of several other languages. You can create low-level Python modules in several other languages, but some are better candidates for a "perfect symbiotic fit" than others. The popular safer C/C++ alternative languages (Rust, D, the Pascal family, Swift, Go) are syntactically much further away from Python than Nim, so it's more inconvenient for a programmer to switch back and forth. (And Go has too much performance degradation to replace C.) Among the [off-side-rule languages](https://en.wikipedia.org/wiki/Off-side_rule#Off-side_rule_languages), Nim is the only one (AFAIK) that produces lean portable native binaries. &gt; You shouldn't be able to is the point Nim fans can't understand. Funny, people used to say "you shouldn't be able to" about many Python features too! "Not enough abstraction!" used to be a cliche, "zomg, everything is writable!", etc. We are all [responsible adults](https://github.com/kennethreitz/python-guide/blob/master/docs/writing/style.rst). And Nim can catch more mistakes at compile time. &gt; It's there because it's there in Pascal. It's there because it's a good idea. You don't have to address everyone you talk to by their full family tree when it's obvious who you're talking to from context. Types provide more context than you have in Python. If it's not obvious, you get a compiler error. &gt;&gt; The trade-offs once made in favor of saving compile-time memory or making the code more readable in notepad no longer make sense. &gt; I'd agree with the former, but more readable is more readable by humans. Yes. Humans who don't read / write code on paper / clay tablets / cave wall / `NOTEPAD.EXE`. &gt; Really? This code viewer scans all of the Nim libraries and tells you where an identifier comes from? Where does it get the source code to those other libraries to have that answer? Yes. Welcome to [${](https://gradha.github.io/articles/2014/11/swift-string-interpolation-with-nimrod-macros.html) ~~[times](https://nim-lang.org/docs/times.html).~~get[LocalTime](https://docs.python.org/3/library/time.html#time.localtime)(~~times.~~get[Time](https://docs.python.org/3/library/time.html#time.time)()).year }. Things have changed quite a bit since the time when the previous generation of programming languages was created. We have *waaay* more than 640k RAM. ;-) Everything the compiler knows at compile time, your code viewer / editor knows as you type via [**nim idetools**](https://nim-lang.org/docs/idetools.html). And, if viewing code on a mobile device (like your glasses), the compiler can reside in the cloud. &gt; We're Python users. We don't believe in "there's more than one way in which to do it". Like Python, Nim avoids frivolous perlish keywords like `unless`, `foreach`, etc. But sometimes alternative syntax is not frivolous. Using `result` often saves you a line of code per function, and saves you a mental clock-cycle of deciding which name to use for the placeholder variable. Less eye pollution, less to think about, cleaner code. 
This looks awesome. I can definitely see a use case for my day job.
Argparse and either script entry points or module main; so `python -m whatever --help` is useful.
if you think that people build web sites and blogs just for fun you are wrong!!! if you want to earn money from a site you have 2 options: 1. display ads 2. make the user click out your site to another commercial site using your content the first option is ugly and disturbing the user. the second is better because as a visitor you have a choice to click or not if you want to track the visitor activity so you can charge your customer (the commercial site) for that , you have to use javascript 
Its pycharm. Latest model.
As author of [requests_viewer](https://github.com/kootenpv/requests_viewer) I'm aware of `requests`... It's just that I don't do any requests.... so the comment doesn't make any sense :/ 
Marking the release as beta, at this point, is more of a liability disclaimer than anything. I tend to use pypy+gevent for my web server applications. They run forever and process lots of IO; perfect use case.
&gt; especially the newest P3 syntax where it is completely opaque what the parent class is when you don't have to name it, but just literally call super() The python3 `super` syntax is no more opaque than the python2 `super` syntax. In python2 you don't name the parent class **either** when using `super`: you name the class you're in. For example (python 2): class A(object): def foo(self): print "foo" class B(A): def foo(self): super(B, self).foo() print "bar" &gt;&gt;&gt; B().foo() foo bar The definition of `B.foo` doesn't contain any explicit reference to `A` - it contains a (redundant) reference to `B`.
While I agree PEP8 is always a best practice, I would counter by saying that if a user of your API is hunting around in your source, you've already failed as a library developer (with the obvious exceptions).
Unfortunately, the interface is not optimized for mobile screens, so it could be harder to use on a smartphone. Regarding password login - LDAP auth is supported at the moment (if enabled in config). Any other auth support could be quite easily added. Just write me (or open an issue) if you have such a need. 
Thank you! &amp;nbsp; I tried to create a script but didn't work, then I tried to run the write_file_win, i copied the json file to the runners folder and i get this message: Validation failed. Errors list: &amp;nbsp; There is nothing after the Errors list &amp;nbsp; I see this in the terminal: &amp;nbsp; 2017-06-28 10:42:18,762 [tornado.access.INFO] 304 GET /index.html (127.0.0.1) 212.53ms 2017-06-28 10:42:18,786 [tornado.access.WARNING] 404 GET /js/libs/jquery.min.js (127.0.0.1) 1.00ms 2017-06-28 10:42:18,801 [tornado.access.WARNING] 404 GET /js/libs/materialize.min.js (127.0.0.1) 1.00ms 2017-06-28 10:42:18,806 [tornado.access.WARNING] 404 GET /js/libs/hashtable.js (127.0.0.1) 1.00ms 2017-06-28 10:42:19,107 [tornado.access.INFO] 200 GET /favicon.ico (127.0.0.1) 2.50ms 2017-06-28 10:42:20,627 [tornado.access.INFO] 304 GET /index.html (127.0.0.1) 1.00ms 2017-06-28 10:42:20,653 [tornado.access.WARNING] 404 GET /js/libs/jquery.min.js (127.0.0.1) 1.00ms 2017-06-28 10:42:20,668 [tornado.access.WARNING] 404 GET /js/libs/materialize.min.js (127.0.0.1) 1.00ms 2017-06-28 10:42:20,671 [tornado.access.WARNING] 404 GET /js/libs/hashtable.js (127.0.0.1) 1.50ms 2017-06-28 10:42:20,960 [tornado.access.INFO] 200 GET /favicon.ico (127.0.0.1) 2.00ms Do you have any suggestions?
See also /r/autism and /r/ocd 
Rewriting a scraper from synchronous to asynchronous. I tried asyncio, but it seems too complex and verbose for my use. I then stumbled on grequests and it seems very easy to use (my scraper is based on requests and BS4).
For some types of work, python is already used heavily in HPC as a glue/controller layer on top of cython or C code, or using tools like Numba to accelerate pure python algorithms. Examples include particle physics, meteorology, machine learning. Often, you can start with a pure python program and accelerate the slow bits in Cython. There are also well established MPI interface libraries. One nice thing is the ipython parallel project which has built in support for common schedulers on HPC systems (SGE etc), this can for example run interactive python sessions that give access to distributed compute resources (and was doing this well before Spark and co. made it cool :P ).
Hehe, nice one. They are quite similar indeed.
The last slide of Fernando Perez's Euro SciPy talk says: &gt;The incentive structure of academia fits poorly [with] the widely distributed, rapid-fire collaborative dynamics of open-source development What funding structures would be a better fit for open source software development?
You aren't going to get very far in a PhD with this level of effort (this post, [this other post](https://www.reddit.com/r/Python/comments/6isdy9/new_to_tensorflow_and_looking_for_advice/)). I feel sorry for your adviser. Now that I'm done being honest/condescending, I don't even know what data you have to give you a suggestion for anything (sorry, "IRC" tells me jack shit). Maybe you need to use NLTK or you know google "how to make a chatbot in python". [this stackoverflow post giving you literally everything you need to know to do it was the 3rd link on google](https://stackoverflow.com/questions/9706769/any-tutorials-for-developing-chatbots). edit: added more evidence for your level of effort.
Give them shit tons of cash on the condition that all their code and improvements are open source.
You can force Linux to write the data to disk as soon as possible with the `sync` mount option. Or as an application developer you could just call `os.fsync()` after a `flush()`. I'm not a Linux expert, but I suppose the data is written to disk after a short time (&lt;1min ?). So for most applications the performance gain outweighs the possible data loss and thus is a more sensible default.
The question is *HOW* do I monetize the API that already *is* a service people want to use. How do I logistically get cash for each hit of an endpoint?
If you're looking to extend, if you're studying out of interest, if you don't trust the provider of the library etc etc. But in general, people who use libraries want to be able to use the functionality without getting down and dirty with the internals.
Would you mind telling me a little bit about it? 
Are you asking what other processes have to do with delaying a running process?
The same issue happened with me when I updated to Spyder 3. After several agonizing months I downgraded to Spyder 2 and it has never happened to me. I saw the same happening quite recently to a colleague and after downgrading everything was fine. Please let me now if it has been fixed now.
The problem is that in a dictionary {el1, el2} is equal to {el2, el1}, but it is differently bencoded and will have a different sha1 sum.
Just because an API is written in Python doesn't mean it should use Python naming conventions, especially if your expectation is that the clients will be written in something else.
Significant figures calculator! Trying to conserve sig figs with simple operations.
A common way is to use an authentication mechanism, such as a per-user API token, that restricts access to the API and associates a request with a user. You can update the user in a billing database with info from the request (http verb, request endpoint, etc). You can then generate bills from the info in the billing database.
Oh. I see. Are there any established, well known tools out there for achieving this that you might recommend? 
My comment was in context of the original post. I've been developing with Python for about a decade. My experience ranges from formatting strings to show in a UI to code-generating, using a mixture of string joins, interpolation, and templating. Over that time I've used probably every method of building strings possible as I learned from the last project or revision of code and tried to make the next one better. Just like with any other kind of code, the more sub-expressions you embed, the less readable it becomes. It also becomes less trivial to debug because you can't just print a variable (debugger or actual print) but you need to debug into an expression to see what it evaluates to or to copy and sub expression and print it. For optimal readability of the interpolation, you have named expressions that correspond to the intent of the substitution. f-strings would be great in this case if you have variables named to correspond with the intent of each substitution. A lot of times, we aren't working with optimal cases. If your variables are being used for other purposes and have names that correspond with all of their purposes, it isn't worthwhile to create new names for them just for the substitution. Some times its cleaner to not create variables for array/dict indexing, accessing a member variable, or calling a function. If you do enough of these though, it becomes hard to decipher the intent behind the f-string. As I noted in my original comment, syntax highlighting can be a big help for allowing more complex expressions but that still only gets you so far.
Woah that's pretty cool! Thanks for the explanation!
Did you ask the devs?
or it's a web api and its being called from .NET, Ruby, PHP, ... Edit: although this thread is specifically about library APIs, so fair point.
are you kidding ?
Typing exactly what you have there, I can't reproduce this in Python 2.7.13.
Screenshots of code are forbidden. Read the rules of this sub. post the code in textform. 
&gt; Long term rewards. The main incentive in academia is publication. Once something is published, you don't care about it as much, leading to an attitude of cobbling together code that sort of works and abandoning it after. You CAN write good code, but mostly publishers and peers won't care. This can change with more emphasis on open and reproducible results, which can come from institutions and publishers. We can also push for more approaches like [The Journal of Open Source Software](http://joss.theoj.org/) and [The Journal of Statistical Software](https://www.jstatsoft.org/index), where producing usable quality code *is* a journal publication. Ultimately producing such code is part of research and needs to be properly recognised in university metrics for academic performance ... journals such as the above help to do that, but we need more support for them, and more of them.
sounding like a complete and total n00b (which I am, in the end), how do I downgrade Spyder 3 to 2? Uninstalling and downloading 2 again? Is there a way to downgrade using the terminal? Just curious and trying to learn more.
I use conda package manager so for me it was something like: conda install spyder=2 but I think I had to resolve some conflicts then. You could also try to update spyder to the latest version. Maybe this has been fixed by now. If you are using conda: conda update spyder otherwise you could try: pip install --update spyder
Explain the difference between matrix and array as well as flatten vs ravel. 
Yes, you're right. Thousands of professional programmers missed the devastating bug in a simple list iteration into print.
I didn't down vote, my dude. I'm just annoyed at everyone hyping them as an investment....I work in IT so I really just listen to people talk about e-coinage all day long. Personally I don't have any use for them and consider it to be a stupidly risky investment.
Will add that, thanks so much for taking the time! 
Pretty cool! Is it possible to run Snips on Raspberry Zero W, or does it need more "power"?
You should also look at where state of the art is at with regards to research. There is a lot more to the problem than you diagram, and if you are doing a PhD it is crucial to understand what work has come before, where is the frontier of research, and what areas are fertile for research. Creating a chatbot which isn't based on rules is a very difficult research problem for a number of reasons (a proper dataset/simulator is hard, language generation is hard, making it do the desired thing is hard...). Some recent research https://arxiv.org/pdf/1701.04024.pdf https://github.com/facebookresearch/end-to-end-negotiator has some state of the art stuff and you can recursively follow citations until you are satisfied with understanding of the field
For now you need a Raspberry Pi 3, but later we want to have a way to connect a Raspi0
When you use argparse, do you have to look up the API? Docopt lets me make complex messages and make them pretty. I'd rather use sys.argv than argparse.
It would be nice since I have one lying around! I'll try to follow further developments :)
I'm not asking, it was a rhetorical question. And stop trying to twist it and be a smart ass now, you're only embarrassing yourself. You understood what it's about.
Were you able to install it on linux such that you could execute it via pypy3 &lt;name&gt;.py from the command line? Google and the documentation are insistent that you can but I can't found an explanation of how to do it anywhere.
I use Arch Linux, so its just installable from the repositories. The executable is indeed pypy3, and works as you would expect. 
Did you install it with pacman/ any idea how to install it from debian repositories?
its a shame op deleted their diagram. basically it was a flow chart with the word "tensor flow" and "chat bot" and "design of phd" and "python" and "irc data source" on them with a bunch of other boxes with lines and flows and blah blah buzz words. Also, /u/kevinhosford really, really, loves windows phone for some reason.
Just bopping around in this local minima. 
where do you think you are?
I remember doing something like this a few years ago and the solution I ended up with was to generate a markdown document with make and running it through pandoc to generate a PDF.
I didn't say you did, I just said you were angry, which is what you said. So your anger comes from hype? I'm still trying to figure out why simosays' idea is bad.
IDLE.
Making my first foray into NLTK, harvesting news and tweets from certain athletes and celebs using the Twitter and Reddit APIs, along with some urllib crawling and scraping.
 $ wget https://bitbucket.org/pypy/pypy/downloads/pypy3-v5.8.0-linux64.tar.bz2 $ bzip2 -d pypy3-v5.8.0-linux64.tar.bz2 $ tar xzvf pypy3-v5.8.0-linux64.tar $ sudo mv pypy3-v5.8.0-linux64 /opt $ sudo ln -s /opt/pypy3-v5.8.0-linux64 /opt/pypy3 # &lt;- change this to new folder when updating $ sudo ln -s /opt/pypy3/bin/pypy3 /usr/bin/local/pypy3 Then when you want to upgrade just change the symlink to the new version's folder.
`ws.rows[...]` is not a list but a generator now, therefore you cannot index into it directly. You have to wrap it in list() if you want access by index.
Fair enough - I don't really read the context into your comment I guess. My feeling here is that it is a very contrived example (I think the guys only showing it b/c he's impressed himself with all the non-alpha characters involved. I could contrive an example like this: '%f%\%s%s$%s:\%%s%d%s%s%s%s%s' % (var1, var2, var3, var4, str(var5), var6, str(var7) ... ) and so on and go geeze, those old ways are so dumb. It's not really indicative of normal usage though.
Don't like Twitter. Like this. They may be related. 
&gt; In a class this is very nice this part is not really new &gt;&gt;&gt; '{0.__class__.__name__} {0[0]}'.format([1,2,3]) 'list 1' if 0 is not ok, just provide the object as keyword param, eg self=self
Uh... I don't like javascript but compiling python to js sounds even worse, i'll watch the presentation and see if i change my mind.
if you and your coworkers want to write for fun - great. but don't do it at work because you spend your employment time we don't want visitors without javascript enables so stay out 
You don't have to use the compiled JS yourself! The whole point is that you can stay 100% in Python-land...
Sometimes I have to use python due to other people's bad decisions.
In python 2.7? 
This is so true. In my field, telecommunications, researchers waste their lives writing shitty Matlab scripts to get their results. Then, they move forward to write other shitty scripts to get their results. Even within the same research group you will see graduate students working in parallel writing scripts to do nearly the same thing. If nobody starts it first, before my kids start school, I will write a Numpy library for digital communications.
W10, python 2.7.6
I've had good things to say about D for a very long time, but unfortunately [(until just a few weeks ago)](http://forum.dlang.org/thread/oc8acc$1ei9$1@digitalmars.com) it didn't fit my especially strict [copyfree](http://copyfree.org/) definition of genuine free software. D might now be my second favorite systems programming language, but Nim is still slightly ahead in license freedom, performance, portability, and especially syntax. [When](https://irclogs.nim-lang.org/28-12-2012.html) Nim switched from GPL to an MIT license in 2013, it became the freest programming language and ecosystem in existence: the default compiler implementation, stdlib, all standard tooling, and 88% of nimble packages are copyfree.
Javascript is objectively a terrible, horrible language. Would php before js.
Got it, no visually impaired people desired at discover sdk.
The problem is, usually, you don't manage to avoid JavaScript in a real application. You still need to debug, which for most people is inside Firebug or Chrome Dev Console. You still need to manipulate the DOM. You need to load vendor JavaScript libraries and use them.
I have to admit that this childish attitude against Javascript is my single least favourite thing about the Python ecosystem and I don't get why people are so keen on artificially limiting themselves. If you want to be able to do client side properly you need learn Javascript and everything that goes with it.
I f*g love JavaScript. I don't get all the hate. Writing good JS takes discipline. So many different ways of doing things in JS make it strong, but I've seen some horrendous code. That's the only viable reason I see for the negativity. It's even better with Node.js being as strong as it is now. Front and backend pure JS. Go checkout the ramda library and you can make some truly beautiful code. Edit: A word 
That makes no sense. PHP is server side. JS is needed for client side interactions. 
OK, well, having looked at the source for IDLE in 2.7, I can say there's nothing wrong with the print function of Python, and what you're seeing appears to be a race condition combined with a lot of craziness with threads, RPC calls, and subprocess communication. Basically the IDLE process, each time you hit Run, is launching a fresh Python subprocess and handing it a string that's whatever you've asked it to run, then having the remote process **exec** the string... if the result doesn't error then there's an attempt to flush *stdout*, only it looks like all the processes launched this way ultimately talk back to the same shared *stdout*, which itself isn't actually the **sys.stdout** we all know and love, but is instead a proxy object that displays the output back to you in the TKinter window for IDLE itself. Hit F5 while something is running and expect some of its output buffer to find its way into the display. Which goes a long way to explaining why one of the first things I did when learning Python was stop using IDLE; which makes sense, because I'm pretty sure the advice of the guy who wrote the book I was reading was "don't bother with IDLE, just launch a REPL in the shell", and this was back in 2.4. There's been quite a bit of work on IDLE for 3, comparing sources, so maybe move off a coming on ten years dead branch of the language that'll end of life in like three years now anyway?
yeah that and the python 2.7 shaming. :P 
&gt; If you want to be able to do client side properly you need learn Javascript &gt;and everything that goes with it. That sounds... draconian and evil. 
&gt; And how exactly are you going to debug that? Actually, suspensions! There's an option to the compiler that will generate a suspension in between each line of Python, and serialise the locals at each level of scope. This opens the door to a proper single-stepping debugger, and there's one being PRed into Skulpt right now. We haven't released an Anvil-integrated debugger yet, but it's coming :)
Curious what other folks think. Leaving aside full frameworks, I think mine would be: SQLAlchemy - you'll tear it from my cold, dead, fingers Requests - no comment needed! such an improvement Marshmallow - framework independent serializers Zope Component - because Dependency Injection is a lifesaver when things get big and hairy, and it helps one use Domain Driven Design patterns WebTest - framework independent wsgi functional tests Runner ups we use all the time: passlib - easy password hashing PyJWT - easy JWT tokens Pika - RabbitMQ made easy bleach - easy sanitizing the selenium Python bindings, drive your UI tests with Python 
I very much dislike JavaScript, but all of this automatic translating seems like a giant waste of time. Just learn JS. If you know Python at all you can pick up JS pretty quickly b
&gt;I f*g love JavaScript. I don't get all the hate. It was a quick and dirty hack that became a language. How could there not be hate? That's like asking why people are hating a picture in a museum that was drawn by a 6-year-old in five minutes. &gt;Writing good JS takes discipline. Well, there's a problem right there. The right thing to do should be the easiest thing to do. &gt; So many different ways of doing things in JS make it strong This is Python. We believe that many ways of doing the same thing make for unclear code and increased chance of errors. &gt; but I've seen some horrendous code. That's the only VIA Le reason I see &gt;for the negativity. There are reams of articles detailing why everyone hates Javascript. For instance: https://medium.com/javascript-non-grata/the-top-10-things-wrong-with-javascript-58f440d6b3d8 &gt;It's even better with Node.js being as strong as it is now. Front and backend pure JS. Pure nightmare. JS doesn't win out among developers anywhere it's not forced on them. 
You gotta troll the trolls. 
Oh I'm aware. 
Burn the heathen!
Yeah , that escalated - from 13 yo to corporate imperial. I was talking about general population you filthy psycho.
Usually I want to debug code integrated with 3rd-party JS libraries, and it pretty much means using JS debugger. Well, I have no idea how Anvil handles interop with js libraries at all.
It's basically crowd funding.....without rewards lol.
Bokeh accept via [ajax data source](http://bokeh.pydata.org/en/latest/docs/reference/models/sources.html#bokeh.models.sources.AjaxDataSource) to update the plot with ajax requests. It is easy to built bokeh + microframework apps (and it has been designed with that in mind). But being honest, I doesn't hurt to learn some JS basics because bokeh is built on JS charting libs. And BokehJS is a thing.
At least it's not perl 6.
One language for all client-side web programming, and that language not that well designed.... "Why are people complaining with stuff that do not work well? Just shut up and use it. Fucking children."
Another noteworthy one is c/c++ via empscripten. I'd much rather debug Python to JS over that.
&gt; so maybe move off a coming on ten years dead branch of the language that'll end of life in like three years now anyway? That's just nonsense. The earliest versions of Python 3 were unusable. It's only in the last couple of years that the porting of many key third party libraries has caught up with Python 3 development.
I was lucky enough to have a former key Oracle leader fly in to talk about tech in my MIS class a few years back. From what I recall off-hand, one of the things he talked a little about was Java/Javascript; not only did he say that it was a rushed development with little planning, but that it's being phased out and had been obsolete for years already.
Have you looked at [Byrthon](http://brython.info)? 
Good content but man is that a gross title. There is no need to put down other languages and communities, we're all on the same team.
Hey everyone! Look at this pleb who writes bugs!
Never used tkinter but I'm sure it's like most GUI libraries where you can simply update the coordinates. If you know how to change the coordinates of an object just do this to make it move in a circular path. r = radius of circle N = the number of points you want( The bigger N is the more circular it'll look, the smaller it is the more polygonal it'll look. Ex. If N = 5 you'll trace out the vertices of a pentagon, if N is 1000, you'll trace out the vertices of a 1000-agon which will be hard to differentiate from a circle) Heres the code x = starting x coordinate y = starting y coordinate dtheta = 2π/N xc = x - r (center of circle x coordinate) yc = y (center of circle y coordinate) theta = 0 for n in range(N): theta += dtheta x = r*cos(theta) + xc y = r*sin(theta) + yc #idk how tkinter does this so this will be different for you object.update_coordinates((x,y)) This is the code for moving one object in a circle, if you're trying to simulate a solar system which is to scale you can't use this approach because all the planets don't move at the same velocity. This method updates by incrementing the angle so you would simulate a solar system where all the planets would stay aligned. Instead you want to update over a constant time interval, lets do a day. You'll need to calculate the angular velocities (in radians per day) of all the planets, you can look this up, or you can calcuate it if you know the time it takes to complete one orbit by this equation: dtheta_dt = 2π/(time it takes to complete orbit in days) You'll need to do this for all the planets. Heres the code: num_days = number of days you want to simulate for day in range(num_days): for planet in planets: planet.theta += planet.dtheta_dt planet.x = planet.r*cos(planet.theta) + xc planet.y = planet.r*sin(planet.theta) + yc # then update coordinates in tkinter update_coordinates(planet,(planet.x,planet.y)) 
&gt;Feel like this supports my point. Would it really be fair to say "I hate that &gt;picture", knowing where it came from? Yes, it would. I hate COBOL. Long story short, I chose a C rather than an A in a COBOL II college course because I had vowed to never write a line of COBOL code again after COBOL I and didn't turn in a single programming assignment for COBOL II. :-) Now, I have great *respect* for COBOL and for what Grace Hopper and others accomplished given what was available before it. These are two different things, however. I can recognize a picture is quite impressive for a 6-year-old while still believing it doesn't belong in the Metropolitan Museum Of Art. &gt;Writing good code in ANY language takes discipline. A good language should make it hard to write bad code. I've seen obfuscated Python, but it's hard to do (the code was actually written by a Java programmer who looked up a few syntax rules of Python and tried writing a Python program). &gt;I dont think that the right thing and the easiest thing are one in the same &gt;in writing code (IMHO). I disagree. This is how doing an SQL query used to work in a language I used to develop in: ADOQuery1.SQL.Clear; ADOQuery1.SQL.Add('SELECT * FROM MyTable'); ADOQuery1.SQL.Add('WHERE LastName = :LastName AND'); ADOQuery1.SQL.Add('FirstName = :FirstName'); // Populate the parameters and open it ADOQuery1.Parameters.ParamByName('LastName').Value := last_name; ADOQuery1.Parameters.ParamByName('FirstName').Value := first_name; ADOQuery1.Open; That was a lot of verbose work. That made it very tempting to write instead: ADOQuery1.SQL.Clear; ADOQuery1.SQL.Add('SELECT * FROM MyTable'); ADOQuery1.SQL.Add('WHERE LastName = "' + last_name + '"'); ADOQuery1.SQL.Add('And FirstName = "' + first_name + '"'); ADOQuery1.Open; This of course opens the program up to potential SQL injection vulnerabilities. Now let's look at Python. This parameter step becomes either cur.execute("SELECT * from MyTable WHERE LastName=? And FirstName=?", (last_name, first_name)) or cur.execute("SELECT * from MyTable WHERE LastName=:last And FirstName=:first", {last=last_name, first=first_name}) There are no gains to be had from trying to manually build the query string and if there are several parameters it would actually be longer to do it that way. Good clean language design makes the right thing to do the easiest thing to do. In the former example, it's harder to do the right thing and the easiest way is dangerous. &gt;I enjoy writing python very much. Its a great language. But its just not &gt;always the right tool for the job. I don't disagree, but out of the languages I have used, what amazes me about Python is how many jobs it can be the right tool for. Someone here once said, "Python is the second-best choice for everything." :-) 
Playing around with PyQTGraph and looking at integrating Elastic Search and Neo4j using their Python bindings for an educational tool.
After being away from Python for a while, I want to get back into it. But not sure how to do that... looking for a project to help me get back up to speed. &gt;_&lt;
I'll add clojure(script) to that list. if you want a language that plays nice on two plateforms its a good choice. 
You need some bugs or else things get boring
I just mean you could look at what they did with OS calls. Perhaps reuse some of what they did with the standard library but for your project.
Great. Can I make korean version for this?
"Trading Python knowledge in lieu of using Javascript" Let's get some better titles:
Tell this to facebook too please
Cool, be sure to do a post here when the debugger it working well, and good job on the project! I for one would love to never think about javascript again. It's gotta be easy to debug though 
On that note, it's worth pointing out that a number of projects [do have citable articles](https://www.scipy.org/citing.html). It is as much about remembering to take the time to cite the people whose work you are leaning on -- it's currently not the "done thing" to cite these merely because you used them in the course of your work, but we can change that.
Thanks a lot for the detailed info! Would never have found those github issues on my own, will try them out tomorrow. But if qt5 uses Chromium, then how does conda manage to use Webkit? Qt4? Custom version?
&gt; Why should carpenters be forced to hammer nails with rocks? *That's exactly what you'd be doing by using Python to generate Javascript.* Javascript is the hammer for making web frontends. You're using a completely different tool that is not intended for that purpose.
I just assumed he was from new york
Sadly, Javascript is really bad. I can't wait for WebAssembly. It will allow for more maintainable, repeatable codebases, and should finally get us away from trend chasing. I hope. 
I don't think this is a good idea really. People don't really program in pure Javascript anymore, there are lots of amazing JS frameworks that allow you to program a web or movile apps in better ways than anything that is available on Python yet. For example, the example they chose is not how you would do this on a modern environment, you would probably use something like Promises to connect to the given client and use catch to handle exceptions. `new Promise(something).then(other).catch(error)` That is more elegant, robust and expansible than the python try catch code they wrote. And then there's React and JSX... I am not against moving away from JS by transpiling, specially to get potent features that are not there on plain JS (type safety, immutability, better scoping rules, etc) but as far as I know python is also lacking on those fronts too. Some good things going on at the moment are Clojurescript, ReasonML, Dart. Python, if anything, is lagging except for the amazing ecosystem and community it has built these years. 
Ah, that is a good idea, thanks!
&gt; If you want to be able to do client side properly you need learn Javascript &gt;and everything that goes with it. That doesn't bother you? You don't want to fight back and resist?
**Here's a sneak peek of [/r/javascript](https://np.reddit.com/r/javascript) using the [top posts](https://np.reddit.com/r/javascript/top/?sort=top&amp;t=year) of the year!** \#1: [Pass by reference !== pass by value](https://media.giphy.com/media/xUPGcLrX5NQgooYcG4/giphy.gif) | [323 comments](https://np.reddit.com/r/javascript/comments/6hz7o6/pass_by_reference_pass_by_value/) \#2: [Can you help me allow my router to accept 💩 as the SSID?](https://np.reddit.com/r/javascript/comments/5zcb8m/can_you_help_me_allow_my_router_to_accept_as_the/) \#3: [How it feels to learn Javascript in 2016](https://medium.com/@jjperezaguinaga/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.758uh588b) | [270 comments](https://np.reddit.com/r/javascript/comments/55oidt/how_it_feels_to_learn_javascript_in_2016/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
No. No it doesn't. It's the most hated language with the possible exception of PHP. You wouldn't have 20 languages that transpile into Javascript if people actually enjoyed using Javascript, would you?
But if it's BAD, then why learn it? 
Duke Nukem Forever shipped before Perl 6. :-(
COOL.
&gt; I can't find any information online on how to properly do it. Perhaps Google doesn't appreciate you screaming at him as well.
i recommend https://pypi.python.org/pypi/python-box if you're gonna try to manage nested data 
Thank you so much! This helps a lot
To be fair, chances are you are translating JS to JS if you're using a modern framework, right? Bable is pretty standard these days.
This would probably be more appreciated on /r/learnpython 
I run a Python Meetup and have been using Python for years. I will emphatically restate that readability is a huge feather in the cap of Python, but that most aspects of Python could be significantly improved or rethought. Python is not a religion, and another great thing about the Python community is the ability for self reflection and continuous efforts to improve.
You sound like a tremendous douche. "The finest of hammers?" Really?
Why? Using anything outside the JS ecosystem on the client side is simply idiotic. Very few of these "i don't like JS" approaches to writing JS are able to bridge the gap between demoable and production ready. The latter requires source maps, dead code elimination, the ability to split the application into bundles, configurable vendoring, minifiers.
I don't use babel, I'd rather just learn the language so I know exactly what I'm sending to browsers. The only thing I use with js is jquery. I want to take vue for a spin but I don't have a new project to use it with. 
Basically, yeah.
You absolutely could write the Python classes for that if you like this style. However not everyone likes using exceptions for control flow.
Two counterpoints: 1. What you're calling "Production ready" is "I could run a megacorp on this code". It's commonly reckoned that 90% of the world's programmers work on internal CRUD apps that make the world go round. Not forcing these guys to learn three different frameworks and three different languages before they've even done the client? Massive win, person-centuries of time saved. 2. There are apps in production with Anvil that handle millions of dollars already; you just wouldn't hear about them on this sub because they're not sexy. Those are dollars that would not be being spent (or would be misspent) if these apps did not exist. These are apps that would not exist if the people who understood those problems had to learn the Javascript ecosystem before solving them.
Preemptive comment to remind everyone that this is r/Python and to take the article as an example of an application of python to solve a problem and how to interface with some statistics packages and to NOT take this as investment advice for your 401k. 
The OA, among many other transpilers is the choice!
What kind of os things that are required on browser?
Came to post that very link. It's an entirely different approach to Skulpt - they just run a bytecode interpreter in JS, and ship the .pyc up to the browser. They also had a stall at PyCon, and it's seriously neat! There are tradeoffs to each (Beeware's code can't be optimised by the JS JIT, nor can it use "eval", but the core runtime is a lot smaller in the browser than Skulpt - 25kb vs 150kb, if memory serves).
So, you're right that frameworks help. The big problem, in my view, is that in order to use them properly, you have to understand them so well that you could have written them yourself. Promises are an excellent example. They're dead useful, but if you want to use them for real, you need a good understanding of closures, and JS scoping/binding rules, and probably "this" handling. And $DEITY forbid you should want to do some blocking/async operation inside a "for" loop... It's all comprehensible for a seasoned programmer, and actually really neat. But somehow we've constructed the greatest app delivery platform on Earth, and then decreed that you must have a deep knowledge of JS closures before you can get beyond "Hello, world". And that's just promises - good luck with Angular!
Check out https://github.com/ReactiveX/RxPY/blob/master/README.md
Except it's not really going to happen. At the point of ES2015 it's already a decent language, keeps getting better, currently number one by popular vote, Node.js is consistently growing in popularity (in fact relative trending shows it's the fastest growing web technology atm), despite globally it's still a small-timer, and then there is mobile, where JavaScript already has a foothold and is a serious competitor to native stacks. JS is hardly going to be dethroned in foreseeable time, and even then, it's questionable if Python actually has a chance to aim for that position although trends suggest it has the best chance of all technologies competing in web development (which is still huge, probably still larger than mobile). It's much more likely things will remain as is, with Python perhaps becoming the number one backend technology and JavaScript dominating on the client for the foreseeable future. Anecdotally, I was actually even a bit shocked while teaching my children programming that they picked up on JS as easily as they did Python, curly braces and all.
1. megacorp? No, I just have standards that the JS ecosystem doesn't have problems meeting. You make the assumption that dealing with the complexities of a cross compile technology ends up saving time in the long run. You need pretty exceptional circumstances for that assumption to work out, it's still JS that you have to debug. 2. So this is a solution aimed at geniuses writing CRUD apps who are unable to learn Javascript but can debug the generated output? If this wouldn't come with the massive huge opportunity cost of dismissing a much better client side ecosystem I wouldn't be criticising it.
well the reward is technology advances. e.g decentralized systems. we get professional teams dedicated to the entire ecosystem. but yes its basically crowd funding, but with way bigger investments. crowdfunding is old-school by now, and everything and his mother has been crowdfunded by now. for early investors they have also currently seen a major return of their investment.
Python as number one backend technology? Oh well, i guess Java and .NET guys could say something about it.
Self-reflection is not the same as believing most aspects of the language have problems. It's become the #1 teaching language, grown to dominate deep learning, math, science, a major factor with the web, one of the most embedded scripting languages, etc. because it doesn't suffer crippling problems. Because of its amazing PEP process it IS a well thought-out language in the first place. It doesn't throw everything in like C++ or have no semblance of cohesion like PHP.
Really. There are even computer science papers published on the topic of why Python did so many things so right. Its PEP process has even been adopted by other languages (e.g. Erlang I believe). It's a simple fact - Python is a powerful, well thought-out and respected language. Javascript was originally a quick hack and now it's something people use because they feel they have to like Objective-C was on iOS. What happened when Swift appeared? People ditched Objective-C for it in droves. You have so many languages that transpile into javascript because people don't really want to be coding in Javascript. 
No no. There's nothing fancy about "the first few integers": there is a fundamental difference regarding assignment. In Python, assignment either creates or changes a binding between a "name" and a "value". In C++ the first "assignment" (or, to be correct, initialization) establishes a binding between a "name" and an "object"; subsequent assignments modify the object, but not the binding.
Fantastic article. Are you the Author?
&gt; Except there is: But there's not what matters here. My point is about "value" not "identity" and stays valid whether the actual objects are reused or not. &gt; Except when it doesn't: That is a slice assignment, not a variable assignment, and it's a completely different beast.
Keep it going, and don't worry much about Google Analytics ;) The right audience will follow you.
&gt; That is a slice assignment, not a variable assignment, and it's a completely different beast. Did you miss the part where `foo` and `bar` are clearly assigned to the same object in memory? They have the same `id()` and modifying one modifies the other: &gt;&gt;&gt; id(foo) 12851440 &gt;&gt;&gt; id(bar) 12851440 It has nothing to do with slices, it has everything to do with mutability/immutability in Python. In Python, if you assign an integer to a variable, it creates an integer object, not just a simple 4-byte memory space. `int` objects in Python are immutable, so changing the *value* of an `int` makes no sense in Python. If you're reassigning an integer, you're creating a *new* object and binding to it: &gt;&gt;&gt; x = 123456 &gt;&gt;&gt; id(x) 2965024 &gt;&gt;&gt; x = 654321 &gt;&gt;&gt; id(x) 2965040 List objects in Python, on the other hand, are mutable. You *can* change the value of a list after initialization. And so it's more obvious when you start messing with a slice of a list that's assigned to two variables.
You'll get a lot more help at /r/learnpython. 
A lot of file related routines. Also it is hard to remove some of this, as it is an important part of the interpreter. Really a lot of the underlying parts, threading etc are handled by the OS.
&gt; nt op Seems like Python is creating a new object every time a variable is assigned a new value and the old object (the variable was referring to) was sent to the garbage collector. And that could be the reason why the variable is not actually behaving like a C++ reference variable because its link to the first object is broken. c = 10 print("id(c)", id(c)) c = 11 print("id(c)", id(c)) c = 12 print("id(c)", id(c)) Output: id(c) 139916377098272 id(c) 139916377098304 id(c) 139916377098336 
Feels good to create programs doesn't it :)
But can you do everything the DOM API can do? I get that you've replaced, say, using selectors to find elements, with holding a reference to DOM elements, but what if I want to apply custom CSS? CSS animation? Requestanimationframe?
Perfect thank you. Do you think is there any reason why it should not work on an Orange Pi One?
We are working on this !
That's great news. I always avoided voice control because of clouds, I appreciate you are working on a sensible alternative.
In your sphinx ``conf.py`` file, you need in to add the ipython sphinx extensions: extensions = [..., 'IPython.sphinxext.ipython_console_highlighting', 'IPython.sphinxext.ipython_directive'] You of course also need ipython installed. Then in your .rst files, just do: ipython:: python def t(a, b): return a + b t(1+2) and after you run ``make.py html`` the code should have run and both code and code output should be seen as code fragments in the output html file, with pretty code coloring etc.. 
i am working on the nmap module right now , here i writing first time 
Use VsCode with Anaconda with python plugin.Also you can use Sublime Text with Anaconda.You can also use multiple environments with Anaconda.
I hope Py4 applies the syntax improvements while bringing proper speed and parallelization. There is no excuse to CPython speed nowadays as there are languages close in syntax and functions performing much better (I'm looking at Crystal and Nim). IMHO for Py3 saying that "parallelization is a fad" was a biggest mistake back in the days. After that many fixes were implemented for Py2 and nobody wanted to port to Py3 so that stalled the adoption. Not to mention the bytes vs strings enforcement...
Thank you 😊
The link to [GitHub repo](https://github.com/jstpcs/lnxpcs/blob/master/cards/python-card.png) with 7k version of this image.
There's also [autorun](https://github.com/hobarrera/sphinx-autorun), which at 90LOC is a much smaller package than the entirety of ipython.
first program is a bot? I gotta amp up my python game. 
Dunn's test is basically a pairwise test you do AFTER a Kruskal-Wallis test has yielded a significantly low p-value. The Kruskal-Wallis test is the non-parametric version of a one-way ANOVA. If our ANOVA (Kruskal-Wallis) says that our groups differ (in terms of some variable we're measuring) Dunn's test will look into each pair of groups and check where exactly those differences exist, while taking into consideration all other measurements in all other groups being compared within the previously computed Kruskal-Wallis. The concept of pooled variance and rank is key here. Example: Let's say you're studying fish. In some river near where you live, there are 3 species of fish. Let's call them species "A", "B", and "C" for simplicity. We also know that species "A" is indigenous (fish "A" are native to your region and have been so since forever). Species "B" and "C", however, are invasive species: they are not native to the ecosystem of species "A" and cause harm. They cause harm in the sense that the environment becomes destabilised and the whole natural balance of that ecosystem goes down the toilet. All you care about for now though, is if both invasive species have a negative impact on your mascot fish "A". To measure the impact of species "B" and "C" on species "A", it is feasible to sample some fishes ans take them to your lab. After all sampled fishes are nice and comfortable in their new home, you start doing some simple fish experiments. You place 2 fish(es) in an aquarium. It is important to register which species each fish belongs to. You could, for example, pair them up in the following way: * "A" - "A" * "A" - "B" * "A" - "C" Remember you don't care about how each invasive species behaves relative to one another. Now for each tank/aquarium, you drop a total of 10 pieces of fish food (they LOVE this fish food, by the way). You drop each piece one at a time, in regular time intervals, and you measure how many pieces of food each fish ate. If you have 5 aquariums for each species-species configuration, you should be able to get some nice fish data. With that data, you can check if the AMOUNT of food your pet fish "A" eat while in the presence or absence of the invasive species significantly differs. You run a Kruskal-Wallis with that data (structured in 3 groups - "AA", "AB", "AC") and a p-value ≤ 0.05 pops up. You then do a Dunn's test to check WHICH pair or pairs of groups differ statistically. Dunn's test would output something as: * "AA" vs "AB" -&gt; p-value=0.0256987, statistic&lt;0 * "AA" vs "AC" -&gt; p-value=0.0154623, statistic&lt;0 * "AB" vs "AC" -&gt; p-value=0.5641231, statistic≈0 If this were the case, you could say that the presence of invasive species alters the feeding behaviour of our beloved native species "A", and that both species "B" and "C" have a significantly equal impact on that behaviour. Fish "A" eat LESS when facing direct competition from "B" and "C" alike, COMPARATIVELY to no-competition ("AA"). I used fish as an example, but the applications for these tests are limited only by the researcher's imagination. Source for this: http://pdxscholar.library.pdx.edu/cgi/viewcontent.cgi?article=1043&amp;context=commhealth_fac 
&gt; One language for all client-side web programming The issue is supporting multiple vms in the browser. Vendors are really hesitant to do that because of the weight it adds. On top of that, you'll end up with varying levels of support for them. Would you want to be stuck with Python 2 if your biggest user base used a browser that only supported that? Besides, it's completely possible to treat javascript as a compile target rather than something you write directly. As odd as that sounds. &gt; and that language not that well designed.... I'm far from Javascript's biggest fan, but let's be honest with ourselves that Python 2 had a lot of nasty warts as well (it's better, for sure, but it's a far cry from Py3). 
[removed]
Not certain what you would expect from a function, but you *could* use a Moya context to replace that long chained expression. from moya.context import Context context = Context(data) print(context["stack.1.data.0.externals.0.data.locale.0.MetadataDocument.authors.author.person.displayName"])
That is awesome AF, thank you very much :-) Are you planning on making more of those? Are you planning on making a whole game out of this with rules and all? 
I just now discovered you made loads of more stuff (to be found in the repos root README), wow :-)
For now I have 12 [cards](https://github.com/jstpcs/lnxpcs/tree/master/cards) and frm time to time I make new. Currently I just like the style and not planning to create a full set, but never say never.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [jstpcs/lnxpcs/.../**cards** (master → 6544417)](https://github.com/jstpcs/lnxpcs/tree/6544417fbeb48cf384d5016de476ef74790b140a/cards) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply djjxjth.)^.
Your else statement in caesar() is broken -- it will print infinitely. The way I would do it is to move the line where you prompt the user for the command (d or e) to inside the loop, so that you can re-prompt the user. Then you could make the commands d,e, and q for quit, which would exit the program (you can use return for this, since returning will complete caesar()'s execution.) This would give the user the added benefit of being able to do multiple ciphers in the program without having to launch it once for every attempt. You can also get rid of x entirely by changing the loop to a simple infinite loop ("while True:") and changing the x = False lines to breaks. This is a stylistic change, but it helps to simplify the code.
Best license ever !! HAHAHA!
Super cool. You selling these as laptop stickers?
There are some shirts already available, all the links are in the [readme](https://github.com/jstpcs/lnxpcs) file, but sure you can get the hi-res of the images and order them in the place nearby to save some money on delivery.
You can get them for free and print stickers for you and your friends at the nearest printing service. But there is a possibility to purchase a shirt or a sticker - the links are [here](https://github.com/jstpcs/lnxpcs) 
Thanks for you kind words. Just remember the repo or clone it and get all the images in hi-res and next time you go near the local printing service at your location, order at least one shirt. )
Sent you a PR for a wallpaper version of this :) https://github.com/jstpcs/lnxpcs/pull/11
Thanks. I should think about creating the wallpapers for all prints and about the folder structure.
If I ever do something that needs "Powered by Python" on it, this will be the image I use.
&gt; This tells Python to create an empty list object in memory, that object has some id, which is an int. That id is held as a key in a dict that only the interpreter knows about. Not quite. The key is the *name*, not the ID, and it is not private to the interpreter, you can access the dictionary with `globals()`, or inside a class body with `locals()`. You're *almost* right when it comes to local variables inside *functions*, where CPython at least uses a different implementation for speed. IronPython and Jython may behave differently, and really old versions of CPython also behaved differently, locals were like globals and used a dict keyed by name. In CPython 2, the local variables of a function are stored in an array, with the index into the array (not the id) used instead of the name for speed. That is private to the interpreter, there's no supported method to modify that array except via normal local variable assignment. 
Will it stand up in court? Who the fuck knows? Honestly, I'd put a note saying (License to be treated like it was under CC0), which is effectively public domain, only people actually knows what it means.
[pygit2](https://github.com/libgit2/pygit2) is the only one I've used, and it worked well for me.
How do you actually commit a file with it? Looking at the documentation all I'm seeing are ways to view a repo/object/commit, not actually modify anything
I tried dulwich out a while ago, was a little too incomplete for my use case. We ended up going with GitPython over some other package I don't remember the name now, but was based on libgit because GitPython only depends on the git binaries, which basically all our users would already have installed anyway, and the other package had C extensions, which is a problem since we need to support windows.
Very useful. Thank you!
There's a possibility to order a shirt from Teespring. The links are in [README](https://github.com/jstpcs/lnxpcs/tree/6544417fbeb48cf384d5016de476ef74790b140a). But I really don't mind if you use whatever service you like and make a Tee for yourself using the provided image. 
Awesome. And they have more than shirts. I'll definitely go this route. Thanks!
Previously I distributed images under CC license and shared SVG versions. But as soon as image was in Internet people started selling it different sites like Spreadshirt. I wrote several times about license violation, but to prove that you are the author you should gather a huge load of papers. These pics are just a little hobby and I don't want to spend my time on these license issues. So I share the images for noncommercial use, but if someone violates the the rules I honestly say that I will most probably do nothing.
Just leave a custom request on [GitHub](https://github.com/jstpcs/lnxpcs/issues)
I'm trying to describe a lower level than **globals** or **locals** ... the *name* in either *namespace* is mapped to an *object* in memory, **not** a memory address. Similarly in the *func* internals array. In none of these cases is the *value* being referenced a direct *memory offset*, otherwise Python would allow overwriting of arbitrary memory locations. That is the distinction with C++ references, which do.
I had set my WORKON_HOME to my OneDrive folder. This caused problems, maybe because of some of the symbols used in the folder name. When I switched WORKON_HOME to C:\Envs things worked as expected.
These are great. I was really hoping Sudo would be a guy taking off a joker mask, though.
Or just wait until WebAssembly is a thing and you can create bytecode for browser in Python!
deprecation message says that you are using coordinates with ws.cell somewhere which you should not.
Thought of putting these up on Society6?
Nice idea. "You have a FreeBSD in the main house and an upside down root, that forecasts bad luck in love for the next 7 years" (I don't know much about tarot but thats how I imagine it ;))
Holy shit your stuff is amazing. 
Proof?
As somebody who uses python everyday (and loves it!) I really, really like this! Thank you for sharing this and I love the style. Its a nice alternative to very flat design which dominates technology media these days. The embellishments and theme are way out of the mainstream and its very cool.
I don't get it. What's the point?
Since Java 8 it recovered a bit but I've yet to see any measured trend that supports what you are saying. Node.js is growing much faster than any platform right now but in a more global scale that growth is comparable to desktop Linux growing of 100% from 1% to 2% of the market. Python is the only programming language whose usage and job postings have grown steadily and at remarkable pace over the last 10 years with no indication of a slow down from a niche technology to a position where it is in the same league as Java and C# which have fallen equally as steady, and PHP which is mostly stagnant. 
This would make an awesome tattoo. 
Very cool! 
I've played with brython, the trouble is that it's a pretty heafty size-price tag to code in python
No, GitHub and IT guys from reddit is ok for me) 
Please create a ticket on GitHub. 
Hey, any way I can get the design of the python card (the one used in the hoodie without the card-like style) to print my own hoodie? I'm in Venezuela, so shipping would be a bitch (plus it's cheaper to print it here anyways)
Im just making an assumption here that the "fifo" file is blocking/named pipe which means that your for loop will not be able to read a line until something has written to or opened the "fifo". In any case what you want to be doing is maybe pass in a callback of sorts that will the work for you when data is ready so that you dont have to worry about synchronisation problems such as this. 
&gt; the name in either namespace is mapped to an object in memory, not a memory address. Okay, I'll agree with that.
I'm sure you don't give a fuck, but just so you know, the IDGaF license doesn't have a noncommercial term -- it can be used for commercial purposes by anybody who is willing to accept how whacky it is. If you don't want it used for commercial purposes, go with CC-BY-NC.
&gt; and I've considered just dropping to subprocess since all I need to do is make some commits and push the changes to a remote Honestly, this is what I found to be the most effective. It may be a bit slower (maybe) but it is easy and I understand it natively. It also depends on what you're doing and how much you need/plan to interact with it.
the gist: https://thereallycoolstuff.wordpress.com/2017/04/29/siricontrol-a-voice-control-system/ Also looks very interesting, I will definitely try to use that with my Pi.
Weird - I didn't know we were a safe-space triggered community that is afraid to admit when certain technologies aren't cutting it.
Ok, but if he can't get autorun to work, I'd try with ipython. I like to use ipython as I'm using it regardless and it's a very standard python package.
I tried once with CC but failed to stop commercial usage. Since that I decided that I don't want to spend time on legal issues, because it's just a little hobby. That's why I ask people to use images for personal purpose, but if they don't, I don't give a fuck any more. 
Well, that sucks. Some people are assholes...
You have drawn the python card. Although powerful and elegant you will often be between versions of 2 and 3, sometimes painfully crippling your environment. It shows an imbalance between logic and emotion, understanding and instinct, and development and production. You have drawn the cobal card. It references your unwillingness to accept your mortal reality. Often you will continue long down a path before realizing it is a dead end. You have drawn the Perl card. It represents the beautiful imbalance that makes life interesting but you need to remain steadfast in your commitments before the chaos becomes unmanageable. You have drawn the SQL card. It references your ability and thrift to consume and construct insight. However you can't continue at your current rate of progress by yourself anymore. 
Yep, working fine in 2.7.13 after `pip install bitcoin`
**WTFPL** The WTFPL (Do What the Fuck You Want To Public License) is a permissive license most commonly used as a free software license. As a public domain like license, the WTFPL is essentially the same as dedication to the public domain. It allows redistribution and modification of the software under any terms. As of May 2016, the WTFPL was used by less than one percent of open-source software projects. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.24
Looks cool! I always had conflicted feelings towards python's `logging`. On one hand it's pretty great, on the other it's pretty damn terrible. It's all camelCase to start and creating a logger was process designed for aliens, where logzero seems to have it much more simplified. Will definitely give it a go in my next project!
too late, lost 5000 dollars
Huh, still not working for me.
For a single command line arguement you can parse it yourself with `sys.argv`. For more complex situations look into the [`argparse` module](https://docs.python.org/3/library/argparse.html). --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Cython is a syntactical change, besides it's not working with most of modules. Pypy has similar problems plus it failed to launch on our standard FreeBSD machines for some not obvious reason. Numba is extremely limited use case. Java is much faster and has a VM too. Python can also be compiled - its devs never made a compiler but it is possible. There is no limit to that except for time. I heard those arguments many times back then and one of the most prominent was "we need core speed, not multiple slow cores, so we shouldn't focus on parallelization". Processes are not cheap compared to threads. There is still some overhead and delays are significant compared to instant threads processes are sluggish... Besides multiprocessing is not good support. For some reason async/await are in the core code, while multiprocessing is a module with a lot of slow networking primitives used and difficult to use structure. I'm just saying it would be easier to define a thread def or proc def to launch a process with function insides and provide seemless and native (OS level, not networking mumbojumbo) memory exchange allowing clean enter and exit of all variables from within the function. I'm just saying. And I don't like async functional, it seems to be unnecessarily cluttered compared to gevent or eventlets.
I got autorun to work. But it does not produce output that I want. I do not want to show python code, I want to use python to generate parts of the text. I do not want the commands visible, nor do I want the output rendered like a codeblock. I want the output to be parsed by Sphinx as if it was normal rst input.
Thanks. I guess this should do want I want. But it is not possible inside a rst file with a Sphinx directive?
Nice, thanks! Have you thought about structured logging, a la structlog?
I've never seen a standard or extension directive which would execute code and only output the result of running that code, most code-running directives are for examples/doctests so they'd show the code being run. https://stackoverflow.com/questions/7250659/python-code-to-generate-part-of-sphinx-documentation-is-it-possible seems to be about something similar to what you want though, and the second answer shows a directive doing what you're looking for (though you may have to tweak the way it runs the code and obtains the result)
Strong work. This is really cool. So cool, in fact, that I took the liberty to uploaded it to Sticker Mule so they could make a [die-cut version of it \(3.64" x 4"\)](https://drive.google.com/file/d/0B34CZYjfpelRdXZHM1lHTHk4cTg/view?usp=sharing). I also created a small kickstarter project to raise $200 to print/mail the first 50 of the stickers. Pledge $4, get a sticker. Simple. After that, my plan was to put it in the sticker mule marketplace and work with OP so s/he could set the price and get any profits that sales from the sticker generated. ~~The [Kickstarter campaign](https://www.kickstarter.com/projects/111777176/2003107805?token=53697b80) is still in the review stage, but this link should convert to the real page when it's approved.~~ EDIT: **[The Kickstarter campaign is now live!](https://www.kickstarter.com/projects/111777176/die-cut-python-stickers)** It's only active for 7 days and there are only 49 stickers available!
I agree with a lot of your points. I personally don't believe JS has a long-term future. Once WASM is able to access the DOM, it'll only be a short time before it's over. That still doesn't mean we should be transpiling Python. Data modeling is pretty solid in TypeScript. I would argue that Elm and Purescript are both even better for data modeling -- and better than even Python.
Tensorflow works perfectly fine on Python 3. Why not just use that?
Fair comment. I'll consider that in future.
I give you a free hand to sell this image as sticker for whatever price you choose yourself and spend my part of earnings for for charity at your choice. 
That very library has a link to a newer version of itself that has Python 3 support. Also, `discord.py` being async shouldn't be an issue as long as you don't have that many requests - you can just block while you wait for the model to produce an output.
Hey, do checkout /r/learnpython. In case you're still wondering, in python there are 'classes' and those classes can have 'methods'. Really they're just functions, but they will always be used with the class (as first input). So: cake.eat() ball.kick() can be the same as eat(cake) kick(ball) Think of them as functions. And functions don't need inputs: def func(): print("functions don't need inputs") is a valid function.
Wow. You really did a good job commenting your code.
&gt; Perhaps Do you know? Can you suggest some?
I know about the newer repo, but I spent ~2 days training the model and was avoiding having to do it over again. I'm fairly new to async, so I'll try out the block. Cheers for the input :)
I was actually going to build a python program to do exactly what yours does. Thanks for providing your code. What I was thinking is going through common passwords, getting the public/address/private keys and then bouncing each public address off blockchain.info/address/"publicAddressHere" and then if it had a balance I would record that address. I'm kind of new to python and I just wrote my first web scraper program. So I have no idea if this is an efficient way to do this. Funny story: Most people have really long passphrases (it's recommended to be at least 12 words I think). So to test whether any of this idea was possible. I tried out a common phrase people use as a brain wallet passphrase and I checked it on blockchain.info and sure enough someone had used that phrase. It was someone's wallet but at the time the balance was 0. But you can also see all the past transactions so at one time someone was using that wallet. 
Great, feel free to contribute .
Thank you for these great images! Would love to grab some T-shirts, unfortunately the shipping costs to Europe are quite high. Would you mind uploading them to a Europe-based T-shirt printing service? That way you'll also get a commission compared to when I'd just let them print somewhere local. According to a short Google search, viable options might be https://www.spreadshirt.net/ or https://teemill.com/ .
Scapy will help you in networking scripts this is a simple scanner http://cruft.blogspot.com.eg/2009/01/arp-ping-using-scapy.html?m=1
It all really depends on inspiration. BTW I still use mc every day) 
Just pm me with prints you like and I will try to upload them to an European service to reduce your shipping costs. 
Sent a PM. Thanks!
It may seem that I'm an artist but I'm unfortunately not. I'm an IT guy who follows some online tutorials to create pics and relax from daily routine. Sometimes I have an idea but because of the lack of talent I purchase stock graphics and modify it for creating a print that I like to have myself and share with community. So I'm not the right person for commissioned work in this case. May be one day I will have enough prints to create a deck of cards, but I have no rush as these pics are just my little hobby which I don't want to become a job, because in this case I'll have to find another way to relax)) 
I didn't receive it unfortunately. 
How often do you think that *currenttime* will not be equal to *userinput*? A slight aside, it's not very smart to use *military time* as to my knowledge only two countries in the world use it :-)
I absolutely love it. But I hate that it's not centered properly.
&gt; does it the right way (processes) Poor, poor baby. Python does it the wrong way ('cause they had to "Keep It Stupid, Simpleton" ...). Yes, [communicating sequential] processes are better abstraction. And yes, threads are the correct way to implement it today. With threads, you can cheaply share immurable data, still copy / serialize what you need, and in some cases (usually because of perf.) even share mutable resources in [a disciplined way]. Threads are a damn fine implementation detail, if you ask me ;-)
I set it to 10 minutes now, I previously did for 3 minutes when my account got locked
Thanks! It definitely helped me learn throughout the process 
&gt; python will never be adopted seriously on backend, except isolated cases (that are probably Django-centric) Nice joke, tell this to all the companies that run mainly or only on Python in the backend.
I'm sure you can save the weights to a version-agnostic file format, and just deserialise in a modernised version of the code? As long as the network shape is the same, the weight mappings should be, too. Save the weights to flat JSON or h5 or somesuch, and modernise the code. It'll save you headaches later.
So, I think you've got the seed of the right idea here, but I think the point that /u/breamoreboy might be getting at is that if you're just postponing a single action you could do something along the lines of checking how far away userinput is from currenttime, and then sleeping for that number of seconds. Now if you wanted to be able to postpone multiple executions of a script to be at different times you'd need something a little more involved, but still along the same lines.
&gt;Poor, poor baby. Python does it the wrong way As Guido van Rossum said himself in his 2012 PyCon Keynote, OS-level threads were never meant for parallel computation, only for parallel I/O. &gt; ('cause they had to "Keep It Stupid, Simpleton" ...). "Keep it stupid"? Really? &gt;With threads, you can ...encounter all sorts of nondeterministic errors. As Mark Summerfield put it in Python In Practice, "Using mid-level approaches to concurrency is easy to do, but it is very error prone. Such approaches are especially vulnerable to subtle, hard-to-track-down problems, as well as to both spectacular crashes and frozen programs, all occurring without any discernable pattern." 
You really deserved my upvote! Try and sell stickers or t-shirts somewhere, those are really cool design! 
LOL https://github.com/jstpcs/lnxpcs/blob/master/non-distro/gitpornhub.png
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [jstpcs/lnxpcs/.../**gitpornhub.png** (master → 6544417)](https://github.com/jstpcs/lnxpcs/blob/6544417fbeb48cf384d5016de476ef74790b140a/non-distro/gitpornhub.png) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply djkv6n3.)^.
&gt;u"hate how euro films ruin a good scene with disgusting anal.\xa0 she's hot though are you using python 2.7?
I like the bottom right one quite a bit, though I would drop the two outside triangles.
Hey, I worked through the python data science track as well. I get it through work. There really isn't any 'data science' per se. The sqlalchemy and sklearn sections were an OK overview of the packages though. Don't go in thinking you'll learn about data analysis/modelling. It's for building python or r muscle memory if you're not familiar with the libs or language.
Throw a while True: in there. It'll never end then.
I need the source code to your natural neural network so I can draw like this too!
I might be wrong here but wouldn't this end up mapping the entire user base? Pretty sure starting from an average user the chances of hitting all other users is big.
[removed]
It's pretty cookie-cutter, mile wide and an inch deep, at least in my experience. I haven't really learned much new, and have to slog through a lot of click-click-click to get to anything of value. Classic "Display video - Multiple choice/Code Fill in the Blank - Next" model of online training. My opinion is one or two versions later you will be back to square one unless you find an external resource to really go a bit deeper I am hoping something will be of depth and value and it is just getting started, but I am not really holding my breath. More of a fancy online vignette of packages [which in that regard it is not bad] than actual data science education. 
is it worth learning a new framework temporarily or just doing the javascript?
i think it really depends on what you're building, especially the size of it. I think for most new projects typescript is the way to go. it's just a js superset, but the type-checking adds a huge amount of bug-prevention. for just building something simple (&lt; 50 lines of code), i'd go with vanilla js. for my most recent project, i knew it was going to be big, so i wanted something very strict and i went with elm. i really like elm in that context. would not recommend trying to learn it for something simple.
Yeah, this looks like what I want. Did not expect to have to implement an own directive. Thought that this is a normal task in writing with the help of Python. So thank you a lot, I will start from there and see where it takes me.
Did you mean "mortal" reality?
I guess this is the python/programming noob in me, but what do you mean by importable? What would I be importing this(or in the future another script) into? - Like I said, total noob so I'm just trying to learn as much as I can!! I like the thought of handling it all interactively, but I haven't quite gotten to learning argparse yet, and I'm probably not going to be there for a couple weeks. I do really like the interactive because it's nice to think "Oh, well any joe schmoe could grab my script, run it from a basic shell/ide (and in the future from a small GUI-based application and use it because by programming something to be interactive I can make it idiot proof" (coming from IT support, idiot proofing things is really useful).
I love bugs!!!! I didn't consider this when I changed it to a while loop. It used to be recursive and the else statement would call caeser() again, but I wanted it to be a little bit cleaner. And I also will definitely implement the "q" and allow the user to do multiple ciphers!!! I'm still fairly new, so this one was definitely a rookie mistake. I'm all about clean and efficient code, using as few lines as possible. I really appreciate this feedback!!!
So I'm definitely going to convert it to start using break statements. I also didn't know that's how '==' worked. I'll have to start using 'is', that was a great bit of information to know!
I want to map all the followers of one users. To do this I need all followers of each followers to see what the overlap is. I'll remove all users that don't follow the original user. 
This will look awesome as my phone wallpaper! Btw, if you accept requests, I'm sure /r/kde would love a KDE card.
Wow this is absolutely stunning! Well done and thank you &lt;3
A chatbot
That doodle in the top left hand corner reminds me of [Novel Writing](https://www.youtube.com/watch?v=ogPZ5CY9KoM).
Yeah, I would totally buy a tarot deck of these!
Soon web-not-just-effing-javascript.
**Here's a sneak peek of [/r/golang](https://np.reddit.com/r/golang) using the [top posts](https://np.reddit.com/r/golang/top/?sort=top&amp;t=year) of the year!** \#1: [The struggles of a C programmer switching to Go](https://i.redd.it/2ckqvxbhib0z.jpg) | [20 comments](https://np.reddit.com/r/golang/comments/6dwm8t/the_struggles_of_a_c_programmer_switching_to_go/) \#2: [Rewrite from Java to Go had made things 10X slower](https://i.redd.it/h64ned6whn5z.png) | [52 comments](https://np.reddit.com/r/golang/comments/6ja8mn/rewrite_from_java_to_go_had_made_things_10x_slower/) \#3: [Go 1.8 is released](https://blog.golang.org/go1.8) | [66 comments](https://np.reddit.com/r/golang/comments/5uhu4b/go_18_is_released/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
Author here, thanks for the idea. Created an issue for it. We'll work on that later: https://github.com/vintasoftware/python-api-checklist/issues/5
Feel free! Please create an issue on the GitHub repo once you're done and we can figure out a way to host both versions in the same site: https://github.com/vintasoftware/python-api-checklist/issues
I'm soloing it for the allen institute. I'd meet up if interested.
it depends. I've used it heavily for 2 years and put some heavy work through it. it's charts are beautiful, it's interactivity is great. so for some jobs it is great ... but... the moment you try to do more than basic streaming you're going to find out it's just not the right tool at all. in fact it starts being so brittle and tedious it's close to the worst tool. I migrated to vega. they made some architectural choices that kind of make this hard to avoid and itts not really their primary focus. i think that should change. they need to consider the diminishing returns their enhancements are having as well broadening their market perspective some. but...you still get to do your chart management on the backend... I guess thats something as long as you don't mind page load times on the minute range because of the nonsense constraint solver. and I believe in bokeh and really want it to work but its just not industrial yet. part of the issue is bokeh is too many ideas in one and they are pathologically intertwined.
streaming is way more than a bit more tedious imho.
Wow love your work, are you selling these as a set? Would love to buy them and support you making more!
Yeah it's a bitch lol
Currently not, may be one day in the future. But you can get them for free and print yourself. 
Why not. Please open a ticket on GitHub. 
I would be interested which algorithm / p2p architecture has been chosen as foundation for this project. The github page does not mention it - or I haven't seen it. Would be nice to know that 😉
Will do!
You, my good man, are a genius!
[removed]
Why cant you or wont you use there API? there is a reason they make the API available. 
Good questions, I should probably add them to the docs! &gt; What's the pattern for creating a logger/loggers that span more than a one file'd project. logzero works with multiple files / loggers just fine. In every file just call `logzero.setup_logger(..)` to get a logger with your options. See also the [setup_logger() docs](https://logzero.readthedocs.io/en/latest/#setup-logger). &gt; How would I give a logger a name that correlates with __name__ but have all of them point to a singular file? logzero supports multiple loggers writing to the same logfile. On every call of `setup_logger(..)`, simply supply the same filename as `logfile` parameter. &gt; Is it some kind of log instance factory with functools.partial? No, logzero is just a wrapper and utilities for the standard Python logging facilities. 
That's some hard-core apologist bullshit, you are on the level of young-earth creationists. &gt; OS-level threads were never meant for parallel computation ... And no-one has ever successfully used them for parallel computations, nor has anyone ever provided safer, higher-level, efficient abstractions that use threads underneath, eh ? &gt; ...encounter all sorts of nondeterministic errors... Quit your whining and scare-mongering, kiddo. Only the python community is scared shitless of threads. And 99.9% of the scared people don't even know what they are whining about, they just repeat "Threads are hard, you shall not use them. [Braaaaains, braaaaaains]". The fact is that today, if you want it fast&amp;convenient, you need threads at least at the bottom. And if you want it sane, you shall never use them directly. They just need to be there as a stepping stone, as a means for the runtime to provide better, safer abstractions for the "programming language user". For example, Erlang, Haskell and Go don't expose threads, they are used underneath so that you DON'T have to care, you just reap the benefits. So please, please, unless you are able to consider such things, stop your parroting and STFU. THANKS !! EDIT: &gt; "Keep it stupid"? Really? Really. Normally smart people write smart runtimes so that the language users need not be uber-humans and still can use it. After 10 years of listening to idiots spouting the Python KISS mantra it dawned upon me that they want to keep the runtime stupid, so that it can be developed by simpletons ...
&gt; simply supply the same filename as logfile parameter. That's the problem.
If you had a loop that constanly redefined the same variable, would the amount of new objects cause any problems with the memory?
Reminds me of [Hexing the Technical Interview] (https://aphyr.com/posts/341-hexing-the-technical-interview)
No, the new data overwrites the old.
Why is this the problem / what exactly is your pain point? Wouldn't you define the logfile in a settings.py file or an environment variable and just use that? What kind of solution would you prefer? Setting up logzero once and that every call of `setup_logger(..)` reuses the global configuration?
"Fedora" is my second favorite F-word... XD Good stuff- thanks for sharing.
Ok... so in the end there is always *one* leader in the whole system? And he is responsible for everything? What happens, if he leaves the system without proper log off? Seems to me, that this scales only for *small* systems and only if you can tollerate the single point of failure - at least, one of the most interesting aspects, P2P-systems have tried to eliminate...
Yeah, so if the leader logs off abruptly, the remaining peers ping the leader at randomized time intervals. If they don't receive any response, they safely remove the leader from their entry and contest a fresh new election. What I mentioned earlier was an over simplication. This is a readme to the consensus algorithm https://github.com/nirvik/iWant/blob/master/iwant/core/engine/consensus/README.md
* I don't feel like requesting an API token * I'm uploading porn. I think that is probably grounds to get my access revoked I already did it myself though, I'll probably upload it to Github sometime later if anyone is interested. Also, if I feel like it I'll implement more shit that will be useful.
Why do you need the call to setup_logger()? Can't that be done automatically if it hasn't been done already? I mean, why doesn't it look like: from logzero import logger logger.info('...')
Any logo placed in a nazi flag will look pretty bad :P
That is some really nice work! What would you request to commission a piece? Want to create a unix like command for the probabilistic deduplication library I wrote: [Déjà vu](https://github.com/f483/dejavu). Would round off the package nicely, full artistic freedom of course.
&gt;déjà vu I'VE JUST BEEN IN THIS PLACE BEFORE!
Good idea, I'll try this today and post an update in this thread. It might be limited because then all Python files will share the same logger instance, but perhaps that's no problem anyway.
It seems like a reasonable default to me.. instead of forcing you to create a ton of logging instances for no reason.
You mean something like this? http://glx.sourceforge.net/examples/3dplots/index.html
All values in Python are objects, so in general, loops like that create new objects. Those objects will be reference-counted and discarded as soon as there is no way for the program to reach that object. (Integers can't have cyclical references, so the garbage collector does not come into play.) However, in CPython, the original and "regular" implementation of Python, if your loop won't make integers larger than 255 (from the top of my head), it won't even create new objects. That's because a small number of integer objects for the values of -1 to 255 (again, from the top of my head, real values might differ a bit), are created when the interpreter starts up and are kept around so the interpreter doesn't have to create new objects for numbers that are likely to be used a lot. Either way, it won't clog up memory. You can see it for yourself to make a loop that runs for several minutes and looking at the memory usage of the python process.
Cython doesn't implement all of Python, so you can't just run all of your code through Cython. It probably won't get much better for you than just shipping compiled bytecode, if that's a thing you want. Also, I honestly don't see why people would buy a CMS from you and give it to some other person to work with, especially when your CMS is not WordPress (and it's not). If I were you, I'd open source right now, and then sell your services, not your tech.
Thanks! Will do so once I've packaged up and it has a nice cli interface.
Unless you provide a new implementation that uses symmetric encryption for the decoding importer. You'd have to have a way to provide a new key for each client, which also means that you'd have a bit of a way to identify the leaking client, since they'd need to also provide the key to decode?
You could do both steps simultaneously, which would reduce the looping?
I feel like you're seriously overestimating the amount of time other people are willing to spend to steal from you. If you want to really prevent someone making money of your product, just release it under a GPL/commercial dual license. 
Encryption is all or nothing. Symmetric encryption ensures that only the key provided to the client could decrypt the encrypted files. If you do the easy thing here, there is no way for you to determine WHO leaked. And it also becomes trivial to decode (since you simply inspect the loader implementation and modify it to either so it out the unencrypted files as it loads them). To have any promise of security, you have to do it right.
&gt; Any logo placed in a nazi flag will look pretty bad You might be right… http://imgur.com/a/Dyc8Z 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/ijnx1fo.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20djlmay2) 
it is a png! what kind of scrub do you think i am XD are you sure that its not just some distortion from showing an 8k image on a lower resolution screen?
&gt; inspired by the Tornado web framework Sounds familiar to me. I import tornado in a lot of projects that have nothing to do with web servers just to get the logging portion. I'll switch to logzero if you can add support for rotating log files. But I realize that may contradict your minimalism approach. Thanks for addressing one of my biggest complaints about Python. 
Random template, random font, and random color scheme. That's 3420 different combinations at this time. There's also some template code in some svgs to resize/reposition elements a bit based on text length. Generating svgs completely procedurally would be a mess. I can't even think were to start doing something like that, let alone any form of quality control. As it is, adding new templates and fixing issues is fairly straightforward - I just mock them up in inkscape, then add templated parts in a text editor.
I have tried in the past scrapy and I think it's very complicate. I used grequests instead that request-futures just because it was easier for my to refactor my code. I'll make some tests with requests-futures soon :)
First off, use the **with** statement to open the files and load the data into memory; you're leaving file handles open for no reason, and if the body of your code throws an exception you've got a memory leak. with open(file, 'r') as src: words = [l.strip() for l in src] Second, do not **print** in a loop... printing is itself quite slow, and it's better to build up a list of things to print and then print all at once at the end. Don't believe me? Comment on all the print statements entirely and time your code again. ~~This is also true about the calls that flush to disk; if you don't need to write all this incrementally, write it all at once in a single operation.~~ **Edit** actually on second thought, given the huge number of permutations, I think maybe don't worry about the disk writing... it's not the slow part, though the printing still is slowing you down. Third, look up the **timeit** module and learn how to use it to time your code, it's *much* more accurate than just printing the elapsed time on a single run. Fourth, a *palindrome*, technically, isn't just a word that is the same forwards and backwards, it's also a phrase that ignores punctuation and case: "Yo, banana boy!" -- though if you're just trying to find two word palindromes and your source file is always all lowercase this isn't relevant. Fifth, send me the file you used as your source -- which, sixth, you're assuming is already sorted -- I'm very glad you're proud of this and I want you to learn, and the best way would be for me to give you an example that uses the same data.
All have been said about unwise is to obfuscate that kind of code, but otherwise, try [nuitka](http://nuitka.net/). I don't think that it will resist a long time to reverse engineering, and that is not the point of this, but eh... good enough?
This post is well-practiced and makes a strong point. Why? Because this same thought experiment has been played out COUNTLESS times before, from the earliest computers and old languages like COBOL and LISP and BASIC and Pascal and Perl. It takes just as much effort to rip off code and make it useful as it does to write it from scratch, and the latter has far less legal exposure.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [dwyl/english-words/.../**words.txt** (master → d300d90)](https://github.com/dwyl/english-words/blob/d300d90c66613c59d632dcad75ff67b904108bf0/words.txt) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply djltp64.)^.
Yup^N where N &gt; 1e25. I've been on *all* sides of this argument; I've been in the boardroom when some junior dev suggested building our own version of vendor thing X *because we had the source* -- and wasn't a junior dev much longer -- and I've been in the debates with legal and purchasing and the CEO (who usually has a CTO to override him), and I've been a developer trying to sell to others... the entire question of code *obfuscation* -- **unless** you've just figured out a novel way to solve an NP problem in O(1) time -- has always been the sign of either a) premature expectation of success, or b) nation-states considering acts of war.
Oh sweet ima cop this! I kind of want to find a tiny screen for hacking little python scripts on the go 
You'd be amazed just how unamazed I am at the speed of disk IO... my point is all those repeated flushes to disk inside a loop when you're talking about something they could easily be flushed just once. Each one incurs an overhead in Python itself that slows down the overall algorithm, and unnecessarily so in this case.
Edited to clarify that I'm not in any way saying they writing to disk itself is costly -- though it is the slowest possible way of storing data, after CPU registers, CPU cache, and RAM, etc -- but that using Python's **file.flush** method *many* times when you could do it once is an inefficient use of disk IO and a quick way to dramatically slow down an algorithm.
50 4x4 die cut stickers on Sticker Mule cost $81. Shipping is free. So $1.62 + a 42¢ stamp + 6¢ envelope means $2.17 each. You are asking $4 ... nearly $100 profit for you. Considering the core of this is someone else's hard work that you are using royalty free you sure aren't very generous with your time. 
I don't feel that the combination argument is fair. It's over three thousand combinations but how many of them are trully unique, or different enough not to be confused with each other? There core definitely falls onto the template which is manual labor. There's definitely a lot that could be done to expand this - like generating the cover from parts(top, center, bottom), rotation, text-position, shading, textures and so on :)
Eh, that sounds like too much work for what this is. My original motivation for this was that I couldn't use calibre's cover generator programatically when creating ebooks via mkepub, and also maybe expand a bit on calibre's 20 total variants. This accomplishes both of these goals.
It's Python's built-in tkinter
Yea I have to agree that sounds like barely any compensation for arranging the whole thing and sending stickers etc.
The whole thing is based on someone who is receiving zero compensation. It just sits poorly with me for OP to earn $100 / hr when his creative talent is earning $0 / hour. 
Fair enough. On related note Calibre is open-source and in Python to boot, so you could submit a merge of your package in to solve this issue!
Thank you...
Need to finish my risk parity algorithm for asset allocation. I actually finished it last week but because I plan to put it on the web I have to redo the code, put it on Notebook with some charts and explanations.
I don't know if using a pi to write scripts on the go is better than using a laptop, but if you're looking for a decent, affordable screen check out the PITFT 2.8" LCD touch screen by adafruit. Around $30 which isn't a bad deal by any means
Oh dang that's not bad. Haha I know. It's just a raspberry pi can run off literally any phone charger... also laptops are big and cumbersome. Also. Because other reasons that aren't really good ones 
Awesome, what perfect timing. I just got a Raspberry Pi a couple days ago. 
I use it almost every day. 
It's a very cool concept, but that name is a bit of a mouthful TBH
Wildcards aren't globally supported (although major crawlers like Google understand them) https://developers.google.com/search/reference/robots_txt#url-matching-based-on-path-values
Interesting, but I think urllib.robotparser should have an option to enable wildcards.
In the original thread it looks like the artist wants people to do whatever they want with it and said he expects and wants 0 profit. So all told it doesn't look sketchy. The profit will be almost nothing and it had the blessing of the artist. If not for that I would agree with you.
Check out the Eclipse IDE
You have everything you need. Write your code in notepad++, save the file as a .py file, and then run it with this command from the command line: py my_file.py Do you want to draw images to save as image file or draw images in a window on the screen? If you want to draw to image files you should look into the `PIL` module, which you can install with this command: pip install pillow If you want to draw images in a window on the screen you should look into the `tkinter` module, which comes as part of the default python install. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Do you have any more requirements? The easiest way I can think of is to write to a shared folder. 
You can also open the Python IDLE environment, which should be included when you download Python. From there, simply create your code and press F5 to run in the Python shell
Thanks. Ok so, I typed this code here fat = 5 print fat I saved the file as python file and named it fat.py I opened up the command line and typed in py fat.py I got an error message saying it was a syntax error.
helpful compilation, you could add Theano and Zappa as well. Pygame???library??sure
Don't you just hate off by one errors? ^^edit: ^^because ^^the ^^article ^^only ^^lists ^^20 ^^libraries, ^^see?
A good idea for writers that are not artistic enough to make their own cover images. Good job!
searching someone to review and fix bugs on my website - noeticforce dot com
:) NumPy /SciPy together at no - 18
have you considered checking the bugtracker and/or submitting a new issue and contributing a solution?
What are the advantages of Arrow vs Pendulum? Are there any other good options for datetime libraries?
Ok?
Sure but how many facebook likes does it have?
Fair enough, but widely-used products such as the mercurial version control system are written in Python and this doesn't appear to be a problem for them. I'd never heard of Elm before and am checking it out now. Thanks!
I second Nuitka. I've used it to distribute apps before. I usually convert my libraries to machine code with nuitka, and then cx freeze them.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/datascience] [Anyone going to PyData Seattle 2017? (xpost r\/Python)](https://np.reddit.com/r/datascience/comments/6kie5e/anyone_going_to_pydata_seattle_2017_xpost_rpython/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
I find datetime to suitable for almost all my needs. I like dateutil for parsing and pytz for timezones (the short of why the stdlib doesn't include a timezone database is because that's a bad idea). For everything else, I've cobbled together some stuff in a package called datestuff (which I've contemplated seeing if the dateutil folks would interested in having in their namespace). 
Damn, that’s simple. 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [metachris/logzero/.../**__init__.py** (global-logger → cda9999)](https://github.com/metachris/logzero/blob/cda999954612e1ab056bc9850605a136bdcf8042/logzero/__init__.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply djmbglz.)^.
Oh. What you wrote there doesn't mean that though. `fat = 5` means "assign the number 5 to the variable `fat`", but the stuff that follows doesn't make sense, because `5 print fat` is not an expression. If you add a line break, however, it does work out, because line breaks (usually) delimit statements: fat = 5 print 5 But you cannot write multiple statements on the same line like this.
Author of Pendulum here :-) The article you mention dates back to August 2016 when Pendulum was still pretty young. A lot of performance improvements has been made since then :-) You can see some benchmark results of my own here: https://pendulum.eustace.io/faq/ Also, Pendulum now has a fast ISO 8601/RFC 3339 parser (even faster than udatetime): &gt;&gt;&gt; from pendulum.helpers import parse_iso8601 &gt;&gt;&gt; from udatetime import from_string &gt;&gt;&gt; %timeit parse_iso8601('2017-06-08T12:34:56.123456+01:30') 1000000 loops, best of 3: 583 ns per loop &gt;&gt;&gt; %timeit from_string('2017-06-08T12:34:56.123456+01:30') 100000 loops, best of 3: 1.83 µs per loop Also, regarding the Arrow vs Pendulum debate, I make my case here: https://pendulum.eustace.io/faq/#why-not-arrow
Well, the main competitor is written in C and Bash so Python should be way superior in this regard!
Pendulum has just started to oscillate properly. Dont we need to give it some time before using in Big Ben?
Just use joblib. 
I assume fat = 5 print fat being on the same line here is only because you didn't format the message properly? If you are using python 3, you need parentheses around what you are printing print(fat) I suggest you check out /r/learnpython if you are not familiar with Python
I'll definitely take a look at the docs and thanks for looking over the code, I'll look it over and make the adjustments to the repo!
I was helping a Client with their workflow process and automation, a lot of it through an app called Zapier. You can create automation with Python in Zapier but their code editor is horrible when you're first getting started and testing can be next to impossible. I ended up creating a project in GitHub to replicate the Zapier environment so you can build and test locally, then push to Zapier when you're ready. First time I've ever done something like this so I think it's pretty cool, even if it's a smaller project. Feel free to take a look! ANNNY Feedback is greatly appreciated. Thanks! [https://github.com/whieronymus/Py-Zap-Tester](https://github.com/whieronymus/Py-Zap-Tester)
Nvm fuck u guys since ur gonna downvote me lmao
You've been banned 5 times? Like a user account or banned from their API? And yeah, selenium can be a good choice. I've used it before to fetch Google captchas. I already made the script, and it works great, so there really isn't any reason to request an api token now. everything else i would want to automate like following, unfollowing, retweeting, favoriting, etc. is super easy to script. edit: nvm, i just realized your bullet points matched up with mine. sry i just woke up.
I kind of feel like this isn't yours to sell. And I feel like split should be more like 9/10 not 1/10. Maybe if you had u/denholmsdead on board it wouldn't feel like theft.
It must be good.
Not at all. Most open source code is written by people for work, and with the explicit intention of profiting of it in some way, and it is release under terms that also explicitly allow profiting off of it. Please read up on the [free software definition and four freedoms](https://www.gnu.org/philosophy/free-sw.en.html), the [Debian free software guidelines](https://www.debian.org/social_contract#guidelines), or the [Open Source Definition](https://opensource.org/osd-annotated). They all very explicitly allow commercial use of covered works, including profiting off of it. What they do not allow is work which is encumbered by restrictions on reuse, redistribution, or modification. So much of what makes open source such a powerful model is that one person can write some code, release it as open source, then later one or more companies can use it, profit off of it, contribute their own patches, and make something far better than any one of them could have done in that time. Hence, Red Hat, SuSE, Canonical, Oracle, IBM, Google, Apple, Mozilla, even Microsoft these days, all profit off of free/open source software, some written themselves, some written by others, but they all also contribute to the pool of free software. Some of them may also behave in ways harmful to the open ecosystem, like Apple with their locked-down phones and restrictive policies, or Oracle with their lawsuits over API usage. But they do all both use and profit from free software, as well as releasing plenty of it themselves.
That's the whole point of releasing something under an open license; to allow others to do what they want with it, up to and including profiting off of it.
The thought has never occurred to me to get a Linux tattoo, but I bet you could design some killer stuff in that department!
I've sent him/her a PM asking for a comment. These were the original comments. https://www.reddit.com/r/Python/comments/6k7gh9/comment/djkl0ua If s/he comments here and says something otherwise, I'll apologize and delete the kickstarter campaign. 
You're going to be sad to learn how many commerical products use open source software, including your phone and your car. 
You're going to be sad to learn how many commerical products use open source software, including your phone and your car. 
You're going to be sad to learn how many commerical products use open source software, including your phone and your car. 
You're going to be sad to learn how many commerical products use open source software, including your phone and your car. 
You're going to be sad to learn how many commerical products use open source software, including your phone and your car. 
You're going to be sad to learn how many commerical products use open source software, including your phone and your car. 
You're going to be sad to learn how many commerical products use open source software, including your phone and your car. 
Oooh rah!
I hope those aren't your accounts private key tokens. 
Is there no Mac equivalent to Windows' network shares? On an all-Windows network you just open Windows Explorer, browse to the other machine and there are the (shared) files.
Hi all. All my pics and this one also is distributed under IDGaF license. It means that you can use provided designs for any noncommercial purposes like creation of handout materials for conferences and meet-ups, printing wall posters or stickers for home and office and so on, but if you violate the license I will most probably do nothing, because I don't give a fuck. Previously I distributed all under CC license but had several times tried to proof that my pics are mine and failed to gather all required docs. I don't make my living from these pics and they are just a little hobby for relaxation after work and I decided that I don't want to spend my time on all this legal issues and will just draw. That's why I ask people not to make profit from these pics and use the materials for spreading the word about technologies or for any other personal purposes. However I honestly say that even if they start making profit I will most probably do nothing. In this particular case OP notified me about the campaign that will allow people around the world to get a sticker at a low price and I told him that I don't mind. OP also wanted to sell the sticker after the kickstarter campaign ends and send me the profit but I gave him the free hand to sell the stickers at whatever price he decides himself and spend my part of earning for charity on his choice. 
&gt; Thought that this is a normal task in writing with the help of Python. What exactly are you generating? What are the inputs? It's an unusual thing to try, and I wonder if there's a different way to do whatever you're trying. Otherwise, run arbitrary code in conf.py and use the include directive as suggested above.
8995 stars now - about a 450-star boost. Pretty good effect for a single reddit post! Nice going /u/benhoyt
&gt; people will just download and use it straight away How does obfuscating the code prevent that? 
Five hours later, the private keys are still in the post.
To be precise, reference counting is a form of garbage collection. CPython has *two* independent garbage collectors, the reference counting system and a second one which runs periodically to collect unused objects in reference cycles which the reference counter can't clear.
The reference counter GC clears objects from memory [as soon as the reference count drops to zero](https://en.wikipedia.org/wiki/Reference_counting), there's no pause involved. Its the second garbage collector, a tracing GC, which involves pauses.
**Reference counting** In computer science, reference counting is a technique of storing the number of references, pointers, or handles to a resource such as an object, block of memory, disk space or other resource. It may also refer, more specifically, to a garbage collection algorithm that uses these reference counts to deallocate objects which are no longer referenced. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.24
Don't worry about it. For experts only: don't worry about it *yet*. Objects will be reclaimed when they are no longer being used. You don't need to think about it.
What you say is right, in principle. In practice your example of the int 3 was not a good one, as CPython caches small ints so they will hang around forever. A better example might be `x = 3.5` followed by `x = 5.5`, the float `3.5` will be garbage collected and the memory re-used.
Ok, hopefully 3.2 will fix this problem.
&gt; try: &gt; buggy code that doesn't work &gt; except: &gt; # Suppress exceptions so the bugs will never be fixed &gt; pass https://realpython.com/blog/python/the-most-diabolical-python-antipattern/
This is a weird list. I find it odd to see scientific tools like numpy and scipy next to web tools like twister. They're very different domains. Not that that's a bad thing! 
Banned from using api. It all happened after they've changed policy couple months ago. Can you share the script?
Working on an Alexa skill, pretty fun so far
I think that's the [DILLIGAF](https://youtu.be/7a6EOyaMdqY) license. 
You need to use the class
 &gt; All my pics and this one also is distributed under IDGaF license. It means that you can use provided designs for any noncommercial purposes like creation of handout materials for conferences and meet-ups, printing wall posters or stickers for home and office and so on, but if you violate the license I will most probably do nothing, because I don't give a fuck. I don't think the [IDGaF](https://tldrlegal.com/license/idgaf-v1.0#fulltext) does what you think it does. It really sounds like you need to go back and look at [Creative Commons](https://creativecommons.org/) if you want to limit commercial use. They're not perfect, and people can ignore them, but at least honest people will respect them.
AirPlay. 
I dont get it.. Can you be more specific? 
Often I google the part I'm stuck on, then find a stack exchange question that is so exactly like the codewars kata that I figure I'm not the only one asking for help now and then.
Damn, every other time you said this I felt nothing, but this time... this time I DO feel sad
Are there any developer suites available for python similar to RStudio for R?
wow, great idea :) mind sharing the code?
I upvoted every single one of these but please don't attempt to reddit between train stops in the future, thank you.
This might help https://jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/ Also, read about object oriented programming. If you how to use it right, it will make a lot of complicated programming tasks extremely simple.
What's the significance of the Longhorn skull and Dreamcatcher?
How about we stop encouraging people to use a key-value storage for relational data just because they're too lazy to come up with a schema.
you probably want to use threading.Event instead of a global variable. 
Idk what you're trying to get a phd in but I'm sure all of your problems with tensorflow will be resolved if you have a good understanding of linear algebra. Go study linear algebra.
Not sure if this is what you're asking for, but hope it helps. https://pastebin.com/hjkRLpPA 
Most efficient way to trigger a clock time events is to rely on the operating system to trigger it otherwise the program would have to run continously. 
Yes, you are right, I was confused. Actually, I don't mind if others use it as long as they acknowledge my copyright and don't turn it into proprietary (the same thing as GPL, I suppose).
Does using an ORM count as creating your schema? Also, I really only understand databases in the sense of relational data. What is a good use case for MongoDB? Is it being misused a lot now? I've only been learning Python for a few months.
I do not know enough about OP or his intention. And to tell the truth I don't care. But for anyone else like me coming along your tone was quite putting of - and if everyone in the python community acted that way we would probably not feel very welcoming to newcomers. And even if OP only wants to pimp his WS. Well I started that way. And I got more and more done, learned more and more after this initial success moment. So that I nowadays am able to write python most days of my workweek for a living as one big part of the job. And what kept me with python, compared to say Ruby when I started out? It was the way the community treated newbies. 
Python 3.3 doesn't bundle `pip` with `venv`, you have to either install it yourself using another installer script, extend `venv.EnvBuilder` and use that to bootstrap the virtual environment, or upgrade Python to at least 3.4 when they added `ensurepip` EDIT: Even better 4th option: use `virtualenv` and `virtualenvwrapper` instead
I don't see how a document database would be considered a key-value store. That would be Redis or Raik or something. MongoDB is totally capable for running most applications. Under armor runs $2B through it's online store running on MongoDB. Lots of that kind of stuff here: https://www.mongodb.com/who-uses-mongodb 
ORMs, like mongoengine are a good idea. You can see lots of use-cases here: https://www.mongodb.com/who-uses-mongodb
Wow that's a poor list. Was it written in like 2010 and just now being published? I agree with their number one being requests, but after that is pretty hairy. simplejson? The built in json has been around for eons. Twisted? You have to be pretty twisted to use that anymore. Nose? Deprecated, says so on their front page. 
For honest people there is no need in license, it's enough to ask them to respect other's work. 
use a `queue.Queue` that your threads share. The counter pushes data into the queue and then your consumers pull from it. Kind of a crash course here: http://chimera.labs.oreilly.com/books/1230000000393/ch12.html#_problem_199
Installed version 3.6 on behalf of your comment and managed to make things work. Thank you very much! It's odd that versions 3.3 and older didn't install a local pip. Oh well, thing of the past.
Hmm, yeah after further reading it looks like I may be wrong about items without circular reference, but I believe the only thing that is guaranteed to happen immediately when the reference count drops to zero is a call to that object's `__del__` destructor... with a well written object defined in C that almost certainly leads to an immediate call to PyMem_Free, but with arbitrary Python objects, *anything* could happen, right? Also even with reference counting and no cyclic referencing the only memory that's guaranteed to be freed is that allocated on the Python managed heap, right? Not anything consumed by references to external system resources, ie dangling file handles.
I think you make a new project - tbe type of project has to be the python tutorial
To share between two computers on different networks using Python: [magic wormhole](https://github.com/warner/magic-wormhole)
Poorly written too.
Looks super promising! The only thing's missing is something like Celery heartbeat. Any chances it will be implemented?
What is running your program? Where are actual numbers that go into the vector class. Where is the dot method actually called? A class doesn't do anything by itself.
The parent mentioned [**Intellectual Property**](http://legaliq.com/Definition/Intellectual_Property). For anyone unfamiliar with this term, **here is the definition:**^\(In ^beta, ^be ^kind) **** Intellectual property (IP) refers to creations of the intellect for which a monopoly is assigned to designated owners by law. Intellectual property rights (IPRs) are the protections granted to the creators of IP, and include trademarks, copyright, patents, industrial design rights, and in some jurisdictions trade secrets. Artistic works including music and literature, as well as discoveries, inventions, words, phrases, symbols, and designs can all be protected as intellectual property. [[View More](http://legaliq.com/Definition/Intellectual_Property)] **** ^(**See also:**) [^Intellectual ^Property ^Clause](http://legaliq.com/Definition/Intellectual_Property_Clause) ^| [^Bundle ^Of ^Rights](http://legaliq.com/Definition/Bundle_Of_Rights) ^| [^Tangible ^Property](http://legaliq.com/Definition/Tangible_Property) ^| [^Unfair ^Competition](http://legaliq.com/Definition/Unfair_Competition) ^(**Note**: The parent poster ) ^\(kemitche ^or ^94e7eaa64e) ^can [^delete ^this ^post](/message/compose?to=LawBot2016&amp;subject=Deletion+Request&amp;message=cmd%3A+delete+reply+t1_djlzypx) ^| [^**FAQ**](http://legaliq.com/reddit)