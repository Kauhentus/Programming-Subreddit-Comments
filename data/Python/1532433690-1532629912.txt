I think they were using VFX to refer to the entire visual effects industry and the people in it.
Huh, never knew it could refer to a group of people, thanks.
While there's no concrete evidence yet, a cursory look at his profile says "spammer/spam bot".
I did an internship in public accounting (financial statement auditing) before moving to CS. I hated reviewing my work before that job, but the managers are psychotic if there are dumb mistakes in your spreadsheets. You learn to enjoy it when the time comes I guess!
I'm by no means an expert but couldn't a good way to do this be: - Each camera sends images to an AWS Kinesis stream - An AWS lambda evaluates the images coming from the stream https://aws.amazon.com/kinesis/video-streams/
Fascinating. Thanks a bunch!
I think the reason is two complimentary issues: recognizing “code smell” and the sunk cost fallacy. You recognize how poorly structured you code may be, but you overestimate the cost of changing it. Or the exercise of reading your old code is like rereading high school essays: “what moron wrote this?” I often find that I make progress week to week, therefore my old code looks worse and worse each week. I guess what I am trying to say is that I agree with others who say nobody likes to reread old code, but I am trying to think about the “why” and my intuition is that there are fallacies in the way we think about it. So it’s good to ask “how can I break this habit” but sometimes it’s more important to ask “why do I have this habit”. The answer to the latter may point to better solutions. I’ll put this out there: not everyone has this luxury, but I’ve found that total rewrites always lead to more maintainable code. “Don’t reread, rewrite!” Not practical but at some point the benefits of a rewrite outweigh the cost of maintaining old code. 
PyCharm has some refactoring tools that make things quite a bit easier. Generally, learning how to write simpler code will make refactoring easier.
As well as TDD, which is good. A lot is down to design and problem decomposition. If you have nested looks 3 levels deep and a single python file that's longer than, say 200 lines then you probably ought to refactor. 
&gt; Then when the dependencies have been installed for a given build job, run PyTest from the command-line as you normally would. But it a package by now, so how can you do that? the only way I can think of is: cd my_project/my/venv/lib/python3.6/site-packages/integration_tests pytest Because unlike the git repository example is there on your project repo, you have to run it from where the package has been extracted to?
While true: Do work. Sleep(2)
Ahh. That's a shame. Like I said, I did definitely enjoy the video.
Who said anything about reddit? What about the 100s of Python mailing lists, stackoverflow, quora, medium.com etc.?
Yeah, this has over a hundred points and we are the only comments. For this subreddit that's just odd.
Yep - exactly. Very straightforward. If your CI system doesn't use a fixed virtual environment directory approach, then it will probably provide an environment variable that contains its virtual environment directory which you can use in your `cd` command. However, if you don't know what virtual environment your CI build system installs packages to, I've also seen patterns where PyTest is called programmatically from within the `integration_tests` program. You can set that up by setting up a `main()` function in your `integration_tests/__init__.py` file that calls PyTest with the configuration options you're looking for (i.e. where to find the tests). You can find the documentation here: https://docs.pytest.org/en/latest/usage.html#calling-pytest-from-python-code If you leave `tests` at the root folder of your project, you'll still need to know where the virtual environment is - but you can also place your `tests` folder inside your Python program like so: `&lt;repo root&gt;/integration_tests/tests/` It's a little bit of an unusual way to structure it, but this makes it easier to "find" your test script directory if running PyTest programmatically from within your program. Hope this helps! Chris
&gt; Pickle is not slow. Pickle is a protocol. We implement pickle. If it’s slow then it is our fault, not Pickle’s No, pickle is a set of protocols. And it's speed is arbitrarily dependent on the object it is serializing. Because of the absolutely arbitrary amount of information needed to be transferred dependent by every use case in order to reconstruct the object being passed around, *it can be slow*. tcp and udp are protocols. tcp is slower than udp. Pickle, is slow.
True. Picking/making/using decent data types as well :)
some context: https://www.vfxplatform.com
That's helps Chris. Thanks you so very much for the patience to explain all the moving parts. I appreciate it! :-)
No worries! I’m a huge believer in disciplined and systematic testing (makes everything so much easier!), so I’m happy to help. Best of luck, and I hope it’s useful! All the best, Chris
OH, way better. Really nice improvement. &lt;3`1
Sleep(120)
what de you mean by rewrite? parts of it, all of it .. and to rewrite you should reread? right?!
problem decomposition is a good point indeed!
Trying to make a rpg game, sorta. Going pretty well so far, but definitely a WIP
Ah, thanks! I couldn’t find any “official” looking documentation for this, so was a little confused. Let me know when you’ve made the video! 
I may be the only one, but an offline documentation as .docx is a no go : build a proper doc and hosts it via github or read the doc.
Traveling salesman is not slow, it's a problem.
Same here. It was useful ,thanks again :-)
Python simplifies the syntax of many expressions, replacing symbols with words. e.g. test if a value is in a list: `'a' in ['a', 'b', 'c', 'd']` If you're familiar with boolean expressions in JS, `or` and `and` are equivalent to `||` and `&amp;&amp;` respectively. 
Python "and" has higher precedence than "or". It's the same with JavaScript logical "and" (&amp;&amp;) and "or" (||) operators.
ok, that is a good point
Just going over the first one: has_pemission returns true if view.action is str create else false or has_permission is true if request.user (assuming this is a Boolean) and request.user.is_authenticated (also assuming this is a Boolean) else false (both conditions must be true to have permission) 
When mixing and statements with or statements, I find that using parentheses generally improves readability. Otherwise, the reader needs to know the order of operations for evaluation (left to right? And before or?). Even if you know the answer, you shouldn't force readers to work it out. 
I think you may need to group the or statement together but not at term at the moment but I think those were meant to be grouped from the way I read it
Typing on the phone but something like R, g, b = String[1:-1].split(",").map(int)
Here is another great talk of him on how to be an expert in python. I found it very useful and highly recommend taking the time to go through his talk. [https://www.youtube.com/watch?v=cKPlPJyQrt4](https://www.youtube.com/watch?v=cKPlPJyQrt4)
Interestingly the first method is meant to return 'True' if the view.action is 'create' and user is not authenticated. You are spot on for the second method. Thanks for your input!
Yep I think I'm gonna do this . Thanks for your advise!
I’ve seen his talks a couple times in person. They are good. 
+1 to everyone else's suggestions. One little brain-hack that works for me (of course, YMMV) is to approach my code systematically. Go through it function by function and ask "What would make this code better (easier to maintain, more resistant to errors, etc.)?" Approaching it from the standpoint of discrete blocks of functionality (functions and methods first, then classes, then modules, etc.) lets me focus on manage-able sections of logical code. It's more meaningful than looking at a single line of code, and less over-whelming than an entire module. And psychologically, I find that it gives me a bit of a challenge (which motivates me to "solve" the challenge): I don't move onto another functionality until I've satisfied myself that "Nope, I can't do anything to make the functionality I'm on now better." Over time, this approach has helped me learn lots of tricks and patterns for better abstraction and code structure, which means I do it "better" from the very start. Any way, that's the brain-hack I find works for me. Of course, YMMV. But there is one important fact: It should hopefully get easier with experience! Hope this helps, Chris
Alternative title: "Pickle doesn't have to be slow. Its speed is dependent on how you serialize and deserialize the objects." In this case it seems PyTorch already had methods called \`load()\` and \`save()\` which serialized the object to a binary stream. So the maintainer just used those instead of the much slower \`tolist()\` method.
https://networkx.github.io/documentation/stable/reference/classes/generated/networkx.Graph.adj.html#networkx.Graph.adj
First, how important is a GUI? Second, the subreddit that you are looking for is r/learnpython. To answer your questions: 1. Mostly you use Google, Reddit, friends, and boos to figure out what packages do what you want them to do. Find a friend smarter than you and it will make things easier. I ask a lot of questions, so I found a couple when I started learning Python. 2. If this will end up being a big project, I would look into Flask or Django for this and making it web-based. How interactive does it need to be?
As far as understand it that gives you back a list of neigbors
It will be a list of edges if you're using a `MultiGraph`. If you're using a simple `Graph`, there can only be one edge between nodes, and adding it again will be a no-op.
**def** div(x): **return** x % m == 0 **def** spl(y): tup=map(int,str(y)) *#print tup* **if** (len(tup) == 1): **return** True **for** j **in** range(len(tup) - 1): **for** i **in** range(len(a)): **if** ((tup\[j\] == a\[i\] **and** tup\[j + 1\] == b\[**i\]**) or tup\[j\] =**= b**\[i\] and tup\[j + 1\] == a\[i\]): **return** False **else**: **pass** **return** True t = input() **for** i **in** range(t): a = \[\] b = \[\] li = raw\_input().split() n = int(li\[0\]) m = int(li\[1\]) x = int(li\[2\]) new = \[\] ctr = 0 **for** j **in** range(x): li\_2 = raw\_input().split() a.append(int(li\_2\[0\])) b.append(int(li\_2\[1\])) i = 10 \*\* (n - 1) j = 10 \*\* n **print** i,j **while** (i &lt;= i + m): **if** (div(i) == True): k = i **break** i += 1 **while** (k &lt; j): **if** (spl(k) == False): ctr+=1 k+=m x= len(filter(div,xrange(10\*\*(n-1),10\*\*(n))))-ctr **print** x
This is my working code **def** div(x): **return** x % m == 0 **def** spl(y): tup=map(int,str(y)) *#print tup* **if** (len(tup) == 1): **return** True **for** j **in** range(len(tup) - 1): **for** i **in** range(len(a)): **if** ((tup\[j\] == a\[i\] **and** tup\[j + 1\] == b\[**i\]**) or tup\[j\] =**= b**\[i\] and tup\[j + 1\] == a\[i\]): **return** False **else**: **pass** **return** True t = input() **for** i **in** range(t): a = \[\] b = \[\] li = raw\_input().split() n = int(li\[0\]) m = int(li\[1\]) x = int(li\[2\]) new = \[\] ctr = 0 **for** j **in** range(x): li\_2 = raw\_input().split() a.append(int(li\_2\[0\])) b.append(int(li\_2\[1\])) i = 10 \*\* (n - 1) j = 10 \*\* n **print** i,j **while** (i &lt;= i + m): **if** (div(i) == True): k = i **break** i += 1 **while** (k &lt; j): **if** (spl(k) == False): ctr+=1 k+=m x= len(filter(div,xrange(10\*\*(n-1),10\*\*(n))))-ctr **print** x
**def** div(x): **return** x % m == 0 **def** spl(y): tup=map(int,str(y)) *#print tup* **if** (len(tup) == 1): **return** True **for** j **in** range(len(tup) - 1): **for** i **in** range(len(a)): **if** ((tup\[j\] == a\[i\] **and** tup\[j + 1\] == b\[**i\]**) or tup\[j\] =**= b**\[i\] and tup\[j + 1\] == a\[i\]): **return** False **else**: **pass** **return** True t = input() **for** i **in** range(t): a = \[\] b = \[\] li = raw\_input().split() n = int(li\[0\]) m = int(li\[1\]) x = int(li\[2\]) new = \[\] ctr = 0 **for** j **in** range(x): li\_2 = raw\_input().split() a.append(int(li\_2\[0\])) b.append(int(li\_2\[1\])) i = 10 \*\* (n - 1) j = 10 \*\* n **print** i,j **while** (i &lt;= i + m): **if** (div(i) == True): k = i **break** i += 1 **while** (k &lt; j): **if** (spl(k) == False): ctr+=1 k+=m x= len(filter(div,xrange(10\*\*(n-1),10\*\*(n))))-ctr **print** x
This post is better suited for r/learnpython
This post is better suited for r/learnpython
This post is better suited for r/learnpython
This is my working code. `def div(x):` `return x % m == 0` `def spl(y):` `tup=map(int,str(y))` `#print tup` `if (len(tup) == 1):` `return True` `for j in range(len(tup) - 1):` `for i in range(len(a)):` `if ((tup[j] == a[i] and tup[j + 1] == b[i]) or tup[j] == b[i] and tup[j + 1] == a[i]):` `return False` `else:` `pass` `return True` `t = input()` `for i in range(t):` `a = []` `b = []` `li = raw_input().split()` `n = int(li[0])` `m = int(li[1])` `x = int(li[2])` `new = []` `ctr = 0` `for j in range(x):` `li_2 = raw_input().split()` `a.append(int(li_2[0]))` `b.append(int(li_2[1]))` `i = 10 ** (n - 1)` `j = 10 ** n` `print i,j` `while (i &lt;= i + m):` `if (div(i) == True):` `k = i` `break` `i += 1` `while (k &lt; j):` `if (spl(k) == False):` `ctr+=1` `k+=m` `x= len(filter(div,xrange(10**(n-1),10**(n))))-ctr` `print x`
This post is better suited for r/learnpython
`def div(x):` `return x % m == 0` `def spl(y):` `tup=map(int,str(y))` `#print tup` `if (len(tup) == 1):` `return True` `for j in range(len(tup) - 1):` `for i in range(len(a)):` `if ((tup[j] == a[i] and tup[j + 1] == b[i]) or tup[j] == b[i] and tup[j + 1] == a[i]):` `return False` `else:` `pass` `return True` `t = input()` `for i in range(t):` `a = []` `b = []` `li = raw_input().split()` `n = int(li[0])` `m = int(li[1])` `x = int(li[2])` `new = []` `ctr = 0` `for j in range(x):` `li_2 = raw_input().split()` `a.append(int(li_2[0]))` `b.append(int(li_2[1]))` `i = 10 ** (n - 1)` `j = 10 ** n` `print i,j` `while (i &lt;= i + m):` `if (div(i) == True):` `k = i` `break` `i += 1` `while (k &lt; j):` `if (spl(k) == False):` `ctr+=1` `k+=m` `x= len(filter(div,xrange(10**(n-1),10**(n))))-ctr` `print x`
This post is better suited for r/learnpython
This post is better suited for r/learnpython
&gt;No, pickle is a set of protocols. And it's speed is arbitrarily dependent on the object it is serializing. It's not arbitrary, that's the point of the article. If library authors spend some time to think about how their classes will be serialized by pickle, there's an opportunity to optimize things like \`\`\_\_reduce\_\_()\`\` and provide a better experience for their users.
it does not look like a list of edges to me '&gt;&gt;&gt; print (NGM.edges(keys=True)) [(1, 2, 0), (2, 3, 2), (2, 3, 'second'), (2, 3, 'third'), (3, 4, 0)] &gt;&gt;&gt; &gt;&gt;&gt; &gt;&gt;&gt; NGM.adj[2] AdjacencyView({1: {0: {}}, 3: {2: {}, 'second': {}, 'third': {}}}) &gt;&gt;&gt; NGM.edges(2,3) MultiEdgeDataView([(2, 1, None), (2, 3, None), (2, 3, None), (2, 3, None)])'
`MultiEdgeDataView` is basically a list of edges. You can see the duplicates there. Also, if you specifically need a graph with no parallel edges, why not use a simple `Graph`?
Continuing working with u/pythonHelperBot. The readme is decently fleshed out and I'm building an FAQ. Last week I worked on the changelog and roadmap and they are a nice pair: I'm much more interested in writing about what I plan to do than what I've done, so I'll plan it out in the roadmap, implement it, then copy the roadmap note to the changelog. It helps a lot with maintaining documentation, and planning out and prioritizing what I'm going to work on next. Short term goals for the bot are probably going to be pushing it to the raspberry pi to run on. I'll need to add GPIO interaction so it'll reboot on a button press, and light up status LEDs. I'll also need to make it run on startup. It's infrastructure that shouldn't change how the bot interacts with reddit, but it's necessary if the bot runs long term. For a bit longer term I want to add scripted question responses to handle frequent questions. Among them are "How do I install python?" And "Is python worth it?". It should feed into the long term goal of a loose question&amp;answer bot. 
&gt; PyCharm has some refactoring tools that make things quite a bit easier. Like what?
So you agree with me that Adj was not the answer :-) I think you have a point, I can look at that vie and extract only the ones that I am interested in 
To be honest, after Instagram switching to Python3, and concurrently that is, I don't buy any of these arguments anymore. If they want to, they can.
So should i move it or just keep it here? I'd like to document a lot of historic events and display them + associated connections in order to see how historic events lead to one another So i think it would make it a lot more easy if you'd have a GUI to handle all that
Thanks you
`adj` is also the answer - you get a list of edges as dictionary keys in your example. 
I FINALLY created an account just to upvote this. AMAZING!
You're the hero we need. 
Just added a PDF formatted doc
`numpy.ma.stack` this will be fun, I built my own version of this
i think i need more help i have to read a file and that file contains lots of pixels like this [https://pastebin.com/HVK9srhS](https://pastebin.com/HVK9srhS) and then i need to store the 255 255 255 in R G B and then mod by 2 like 255 % 2 to get a 0 or 1 for the LSB please help in implementing the loop
Modular arithmetic with dissimilar moduli will use these things ALL THE TIME. In my case, I was working out periodic alignments, finding integers that would have particular values or particular value differences modulo several different bases. 
Just beginning to learn python and django. I have an idea in mind id be open to suggestions as to where i need to focus or libraries that i need to look at using..In my city alot of women do hair and nails and just post in facebook groups to find people to do their hair and nails..and women looking for new clients...I want to make an app to bring them together...Will be like a social platform where women can showcase their skills and get new clients. and women can find someone to do the style they want done.. Not sure where i should start as this will be my first program writing..
People still use pickle? I avoid it and excise it wherever I find it. 
yes it could be interpreted like that both methods still require iterating over the list to see if the new edge that I want to add is already there and that complicates my code assume that I have the below for (MultiGraph, undirected) (a,b,'a-b') (b,a,'b-a') these are links that are reported when I collected the data that I need to graph For a multigraph (a,b) and (b,a) will be the same edge unless the key (in my case 'a-b') differs
I'm going to throw some things out here without knowing your timing needs. If periodic is okay, this could be simple. Client has to initiate the request for the config files on the server...scheduled on the hour, half hour, daily, whatever. * 2 REST endpoints on server. * Client regularly calls server asking for new config instructions from endpoint 1. * Client does the needful, then calls a 2nd REST endpoint on the server to deliver the txt results you mentioned. * Schedule of looking for new config instructions continues as before calling endpoint1 on the schedule. If you need something more realtime (because you are constantly pushing out new config instructions to the clients at quick intervals), then I'd suggest looking at something like websockets. The .NET world has had SignalR for a long time...I've never actually worked with these Python equivalents I'm about to suggest below so YMMV. * Pub/Sub pattern with websockets or the like. * This looks like a great article with lots of Python specific examples and resources for various frameworks. [https://www.fullstackpython.com/websockets.html](https://www.fullstackpython.com/websockets.html) It shows the way callbacks were done in browsers, then moves into territory of non-browser client apps and long-running keep-alive sockets. The key is it's TCP, not HTTP. * Django channels looks nice. [https://channels.readthedocs.io/en/stable/](https://channels.readthedocs.io/en/stable/) * TRAC may be too much [https://twistedmatrix.com/trac/](https://twistedmatrix.com/trac/)
Then why aren't you using a simple `Graph`? That way, when you add an edge that already exists, it will simply be ignored. 
What do you use instead?
These are network devices, so from A to B for redundancy I can have pairs of parallel links
JSON or a database, depending on use case and data model. 
&gt; doesn't take much to ignore the writing on the wall though Instagram had a interesting presentation about switching from python2 to python3 in Pycon 2017: https://speakerdeck.com/pycon2017/keynote-lisa-guo-and-hui-ding-python-at-instagram?slide=85
Any chance I could contribute? I need something to do in my free time.
Thank you! I'll certainly do this!
Cool. Dataclasses looks downright useful, and it's good to see annotations becoming more practical. 
Its good that you changed it.. having logging statements helps especially for long running apps. If the project is small.. my feeling is that print statements are better, because there is some more overhead to writing out proper logging statements, and configuration.. but at some point.. you want to switch over to logging statements. I have been thinking of converting my file paths and their file paths to `os.path`. Another option you might want to look in (if you are using python&gt;3.4) is the `pathlib` library. It seems to be quite powerful http://blog.danwin.com/using-python-3-pathlib-for-managing-filenames-and-directories/, http://journalpanic.com/pyhi/posts/pathlib-and-ospath/
Finished setting up the jenkins pipeline on my Windows VM. Because the program being run in a windows program, I pretty much did the simplest thing possible to get the thing done. Put a batch script that startsup jenkins in the `Startup` folder in Windows which startsup the jenkins server and put a simple batch script that 1. creates a virtualenv 2. install thenecessary libraries and then runs the scripts to do a single test. Not sure whether this is the best way to run CI tests, but I wanted to do the simplest thing possible, so this was good enough. Also finished debugging the excel script from last week. What I kindof learnt today about passwords in Excel is scary.. Seems like even if I put a password on Excel, I can easily bypass it in 2 mins, because passwords in excel really dont mean anything. The plan for this week is to get the search functionality in Excel working, using pandas to search for recipes amongs a lot of recipes. I will have to then figure out how to build a button using xlwings so that non-coders can also use the plugin. Shouldn't be too hard as I have already figured out and tested the search functionality. 
1. Giving some new team members a data center tour. 2. Meetings with vendors about potential new Operations/monitoring tools (OpsGenie and Sensu). 3. Building a check in Python that pulls a given Graphite target from the Carbon API and uses algorithmic anomaly detection (most likely stdev-based) to find issues without static thresholds. 4. My Q2 review (wish me luck)! 5. Hopefully helping get our team caught up on processing full backup tapes. 6. Opening a pull request with the LibreNMS project to add VPN statistics for our particular VPN solution. Of course there's probably a chance I won't get all of this done, this week, but I'll be trying my darnedest.
/u/efmccurdy, /u/Meefims and /u/Paul_Dirac_ gave me some great suggestions on when to use logging which I have been using.. Maybe you will find these useful as well: https://old.reddit.com/r/learnpython/comments/8n3028/what_role_does_logging_if_you_already_have/?st=jjzx68o9&amp;sh=c646a104
"Stable" bug fixes, if any, will be made available as patch releases, so 3.7.1, etc.. There are none so far.
if you want to do gui automation.. while also being able to work on your computer. use a virtual machine.. I do this all the time. You have to have a powerful laptop though.. I code on a Gaming laptop. There is a tradeoff here in that the battery life is not that great.. but it allows me to do a lot of automation.. which would have crippled any other laptop... and plugging it into a powersupply is not too much of a hassle when necessary.
If these are internal systems and not exposed to the internet, or doing 3d modelling inside Maya, then there is no justification to port.
Do you have any suggestions for learning TDD? Just do it?
I'ver you're planning on building a website with any sort of stateful information, you'll need a way to store your data. I'd get familiar with the MySQL connector library, and if you aren't already the basics of MySQL itself.
I think what you are looking for is optical character recognition.. you can use something like pyautogui to take screen shots https://github.com/asweigart/pyautogui and use https://github.com/tesseract-ocr/tesseract to recognize characters from images. 
That's pretty cool. I've always wanted to generate ringtones for songs, this will come in handy.
Dictionaries now preserve order. What about sets?
This is what you are looking for https://github.com/binux/pyspider
https://docs.python.org/3/whatsnew/3.7.html
i don't pickle objects. i persist data
Any capchta worth a damn is gonna be resistant to ocr because the whole point of them is to verify the person solving it is human. 
Yeah, but those that I included in my post seems pretty simple.
You've changed my life. Thanks.
Best explanation of Dataclasses I've seen. It's nice to have a simple and typed simple object. Coming from a JS background JSON like things are really quick to create, these are even better.
True. Try pytesseract 
I would rather use it actually but that would require approval from either our director or senior vp to "pip install click" on all of our production vm servers which is unlikely to happen so I opted for the standard library.
Sorry for the snarky reply, but I simply must... Pythonic code.
Not enough love for Cherrypy. I am writing plugins to compile sass, jinja and mako templates, adding a pelican blogging plugin with a online rst-editor. Why you ask? Just for fun I guess. Also I learned cherrypy before flask and it has a built-in wsgi server which makes running multiple apps on it kinda nice. 
They might just not come out with a 1.17 for Python 2.7. And so any environments running Python 2.7 just wouldn't be able to upgrade - so no risk of an environment breaking. 
Are you trying to get out of front end development, or learn python for full stack?
I love this guy. [Top to Down, Left to right](https://youtu.be/BRn6UCw35og) is definitely my favourite talk from him and is perfect if you want to know how python works under the hood.
Hey, I said I was sorry. :-(
I mainly use clustermap and boxplot/violinplot from seaborn
Who cares what they are using?
Finally Python getting what other good languages have
&gt;That's breaking a lot of backwards compatibility in minor versions. Numpy 1.17 comes out after Python 2.7's end of life.
ELI5 how is the dictionary order maintained while still keeping the constant time look up? 
 python3.7 -m pip install --user --upgrade pip or sudo python3.7 -m pip install --upgrade pip If you're unfortunate, sudo python2.7 -m pip install --upgrade pip
arguably pip's api is the command line, but people don't always use it that way.
they've switched to calver, which I learned was a thing.
Here is a tutorial and code that might help https://www.scrapehero.com/how-to-solve-simple-captchas-using-python-tesseract/
IKR? I actually learned about calver and ubuntu's adherence because I'm on the distutils-sig and when pip announced this change I was like, "What is this thing??!" I do wish calver had a better "why cavler instead of semver", though you can suss out the information there.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Like "Microsoft Office" skills :P
I'd be interested if Python 3.7 is any better from your perspective. Personally CLI is almost all I do, and I still &lt;3 Python3
Because `and` and `or` short-circuit, so they're not always binary operations.
Because membership checks can be very different depending on the object, whereas `and` always compares something boolean-y with something boolean-y with a defined operation.
https://youtu.be/npw4s1QTmPg TLDW: A faster, more efficient hash table algorithm is now used by the CPython interpreter. One of the side effects of this algorithm is that key insertion order is maintained.
IIRC the cheeseshop was also fairly unstable and prone to crashing..
As perfect as possible*
Nobody is - you just have to learn and practice.
I am a big fan of this guy, very knowledgable. Long lecture, but I stayed engaged the whole time. Thank you for sharing this video. 
I tried PyQt but then I gave up because my left pinky got too tired. True story.
Most database systems have built in functions to generate DDL. Might try perusing through the documentation of your DB and then running some simple queries. More specifically the DB driver you're using in Python should contain some sort of data type logic in it. So also peruse the documentation for the specific DB package you're using. Using that knowledge you'll have to develop a custom solution that fits your needs. Also no magic answer here.
backend development is more than a specific language. in addition to the CGI language, you need to know about databases, web servers, caching, load-balancing, and more. focusing just on python will essentially make you a backend-of-the-frontend developer more generally and importantly though, good software development principles apply across problem domains. if your code is idiomatic, tested, standards compliant, and abides by best practices, it won't be that difficult to cross over to backend or something else also, demonstrating curiosity in other languages and paradigms will set you apart, particularly in ones that are relatively dissimilar (i.e., 3 repos in rust, kotlin, and f# will be more interesting thant 3 repos with javascript, dart, and typescript) 
School is fine if you can get grants and scholarships. Student loans are garbage and you don't want them. Learning how to write English is important. Being able to communicate is actually way underrated. It doesn't much matter how smart you are if you can't tell people how smart you are. If that's not interesting to you then you probably want to just get someone *else* to tell people how smart you are, which usually entails getting a job for someone else, by talking with someone who knows how to figure out how smart/hard working you are.
Python 3.7 Changelog * guid-0: BDFL is now deprecated.
Trying to slowly work out of the beginner phase. I took a class at my local cc. Learned all of the basics. I had a friend look it over and he cleaned it up a bunch (mostly using argparse to clean up the menu, and making the code more efficient with classes, which I don't know a ton about). Here's the code: [it's a pomodoro timer.](https://pastebin.com/XkcLjxif) It's the first project in 100 days of python. I know it's not perfect but I got it working and am currently using it for work :)
They aren't really dictionaries ;) as hettinger describes it, it is a database A compact ORDERED list of entries (aka rows), together with a hash based index. So when you lookup a key you hash the key, and then check the index for the row within the list. That provides the O(1) lookup you expect from a hash while preserving the order when you need full traversal.
For whoever is interested I needed this to work with pygraphviz and the solution was to add edges with a key (a,b,key='a-b') Since this is a multigraph (a,b) and (b,a) are equivalent I decided to test A.has_edge(a,b,'a-b') and A.has_edge(a,b,'b-a') if the above is false the edge can be added. I had to test both since my info is stored in a DB and I do not know (or care) which link was added first
Porting a script from Ruby for checking the health of load balancers over to Python. Not done much Ruby before but there is just enough similarity to Python that I have been able to figure out most of it, now its just a matter of polish and testing before its ready to be slotted into Icinga for some checks. 
You can overload __bool__?
So where is it? Somewhere behind that weird questionaire? Do you have the source in a repo, maybe on github?
thanks! this was a great watch
the times when reddit becomes useful. thanks for sharing 👌
naa it's reddit that's odd. bit weird the relationships.
Nice, has anyone tried this in real time? Maybe combine it with some effects (delay, echo, ...)? Or is python to slow for this stuff?
yes, commandline behaviour is an api that should not change without a proper version change; breaking - major, non-breaking - minor.
I'm super happy about all these changes!
I was, like, cool. I hate running old software. Install, install....
Thanks for the summary. I am not sure how everyone else feels, but I am very excited about all of the changes! 
Yeah just noticed it too. No wonder I am getting so many down votes.
Nearing the end of the tome *Learning Python.* As well as wrapping up the last of an online, 4 part course on C# /.NET. The latter being on the job training. I've been working through the new to me language for the last 5 months, and I am starting to feel the pressure fading as I near it's conclusion. 
&gt; Recently did a 30 day challenge in which I sat down for 30 minutes daily to learn about Tkinter and Pygame. &gt; I just wanted to have a huge project that I could work on daily. I know music players have been around for a long time and nobody will use this one in real life but this one was for my soul. &gt; [Melody Music Player](https://i.redd.it/ycxrdwl2mxb11.png) &gt; Also, I’m working on a project that will help developers create in-depth python projects, and would love to get your opinion as a python developer. &gt; Here’s a link to the survey - Survey link, it should only take a couple of minutes to complete. Really appreciate your feedback, thank you! 
My view is that this is an inherent problem with mocks, ie. that mocks don't necessarily do what the thing they are mocking does. And although there might be a solution for this particular case, though I don't know it, the long term solution is to have a way of running a particular integration test without it being too slow. Mocks are great when you need to try out your code if testing against the actual system is troublesome, but when it comes to making sure the code still works after upgrades it is of little use - and can even be bad, as you have to maintain additional code.
Sets are not guaranteed to preserve order. The reasoning is that sets have a number of optimizations to speed up things like intersection and union that (apparently) preclude preserving order.
I think you're looking for the 3.7 source branch [https://devguide.python.org/#status-of-python-branches](https://devguide.python.org/#status-of-python-branches) ? But until a real official bug-fix release is made, I would not put 100% trust in a version built from the current state of this source branch
It was suggest in [PEP 335](https://www.python.org/dev/peps/pep-0335/) but, as noted on the PEP, [rejected](https://mail.python.org/pipermail/python-dev/2012-March/117510.html): &gt; We've had many discussions in the past about PEP 335 and they always ended in non-action. I'm cutting any future discussions short and officially rejecting the PEP. Amongst other reasons, I really dislike that the PEP adds to the bytecode for all uses of these operators even though almost no call sites will ever need the feature. &gt; &gt; PS. The NumPy folks brought up a somewhat separate issue: for them, the most common use case is chained comparisons (e.g. A &lt; B &lt; C). If someone wants to propose a PEP that makes this case overloadable I might be amenable to accepting it, since chained comparisons are used much less frequently than the and/or operators. &gt; &gt; -- &gt; --Guido van Rossum (python.org/~guido)
Is it your own computer or a company one? Are you trying to install it to a place where you don't have permissions, e.g. in the root of C?
&gt; I'd be interested if Python 3.7 is any better from your perspective. As stated in an earlier reply elsewhere in the thread, it *should* solve a lot of the issues because it will default to UTF-8, not ASCII, in empty environments. (About a decade after everyone else realised this is the way to go.) OTOH, I have completely lost faith in the Python core developers at this point. I mean, there's no way they aren't aware that the "all text is Unicode" assumption underpinning Py3 is fundamentally bollocks. And consequently, they're a pack of wankers for entirely failing to give programmers the tools they need to unfuck Py3 `str` objects when that assumption breaks down, while pretending that Py3 is just fine. Bottom line, in Py2: 1. You can pass input unmolested through your program using `str`, and 2. *any* `unicode` object can reliably be encoded to UTF-8 and written to a file or otherwise output by the program. Py3 can do neither. In Py3, you can get at the raw input of *some* APIs via unnecessary hoop-jumping, but not all (e.g. ARGV). But `str` objects that contain surrogate escapes are not tagged in any way, and will often simply explode if you try to encode them. In short, Py3 replaces Py2's `str` and `unicode` objects with "equivalents" that are in most respects fundamentally inferior. (The following is *not* directed at you, only at the "Py2 was terrible, but Py3 is the best thing since sliced bread" crowd.) If I may reference the Py3 fanboy crowd (mostly webdevs who've never been near an IO boundary in their lives, I suspect) and their "Py3 is perfect and Py2 is dogshit, and you're a clueless, despicable traitor for daring to suggest otherwise" attitude), I'd sum it up as: Py3 is a language built by delusional developers for clueless developers. 
contextlib.nullcontext 😍
I think networkx all_simple_paths will help. Please note, however, that the number of possible paths can grow very large quickly.
It's on my own computer, using my own administrator account. It's installing to "C:\Users\x\AppData\Local\Programs\Python\Python37" ... I tried to change it to "C:\Users\x\Program Files\Python" and the same problem occurs.
Okay, I've got no idea, then. Have you checked the log file that it recommends?
Isn't that making Python (and other dynamically typed languages) inferior in terms of development when short iterations and quick results are crucial because even fastest integration tests will be slower than unit tests? Additionally from my experience, errors related to incorrect types are ones of the most common in Python, particularly upon refactoring. Such issue makes it very inconvenient to practice TDD along with Python in any bigger project (because of unacceptably slow tests and nobody expects integration tests to be fast). Using TDD along with Python is one of my reasons, why I want to achieve this. I guess that no one is insane enough to use integration tests for TDD cycle
You mean the cannon fodder? I jest. This is actually a point I have to deal with next year, for a Master’s course. Except we have our own departmental IT so I’ll be fine (sorry to those of you who aren’t so lucky). Sometimes our uni IT more resembles “Bring Your Own Server” than “Bring Your Own Device”. Central IT hates it but it works.
The general problem is not limited to dynamically typed languages, although a statically typed language might solve your particular instance of the problem. In general I think type hinting does help with general type issues, but maybe not in combination with mocks. I don't know in exactly what situation you are where your integration tests are so slow. Cloud services are making this a lot easier and fast. Basically what I do is I have an instance of the system I'm integrating with running and I write integration tests that connect to the running instance. And although an integration test might be several factors of 100 times slower than a single unit test, if it still only takes 200 ms to run it doesn't hinder my workflow. 
https://pastebin.com/FDABDxA3 here it is. [4964:4594][2018-07-24T12:57:59]i371: Updating session, registration key: SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{f684de81-73c2-4924-ad43-e7ae400d47b5}, resume: None, restart initiated: No, disable resume: No [4964:4594][2018-07-24T12:57:59]i399: Apply complete, result: 0x80070641, restart: None, ba requested restart: No** I don't really know if this helps :/
No, doesn't really tell me anything, but I don't really use windows outside of when forced to at work. So that might now mean much.
 There are better ways which are parts of software you can use today. Things like x-fade and automatic loop detection in kontakt and other samplers, click and pop cleaning and removal of dc offset...
&gt; automatic loop detection Indeed this is available in many (but not all!) samplers nowadays. The goal here was to implement it manually &gt; x-fade you're right, this can be useful too, but often, when creating instrument sample sets, we first try if we can have a good loop *without any modification of the sound*, and if we can't find a good loop, then we do a crossfade (this modified the sound).
Just released version 2.4, which added Button Images, among other things. pip install --update pysimplegui [https://user-images.githubusercontent.com/13696193/43161977-9ee7cace-8f57-11e8-8ff8-3ea24b69dab9.jpg](https://user-images.githubusercontent.com/13696193/43161977-9ee7cace-8f57-11e8-8ff8-3ea24b69dab9.jpg) Here's an image of sample media player application that's included with the source.
Might want to try reformatting your post. You can look at some answers to a similar question [here](https://stackoverflow.com/questions/11892729/how-to-log-in-to-a-website-using-pythons-requests-module). 
ok
Tried it a couple of times. Want to buy my own set :)
file name are done like this: my_file_name.py you can also just mash them together in many cases: myfilename.py
&gt; errors related to incorrect types are ones of the most common in Python Isn't that a driving force behind [PEP484](https://www.python.org/dev/peps/pep-0484/)?
I’ve tried it with requests and that won’t work. Does it have something to do with the callback function in the &lt;form&gt; tag?
Don't use mySQL, use postgreSQL. Open source and much more capable. 
Could be. If it's executing Javascript, you could try looking at `requests-html`, which has Javascript support.
The whole page is rendered with JavaScript. I’m using a proxy service to render the page for me. Can I still use that service for the proxies with requests-html?
That's past my knowledge, I am sorry. 
I haven’t played since my big brother moved away. But I enjoyed it the times I went out 
Yeah, I believe it is. I'm using them however there is no point in using them unless they are verified during unit tests (because they will be detected anyway during integration tests and it isn't always possible to check them before runtime). Do you know any way to make unittest.Mock check each method call against type hints (like setting spec/spec_set during construction checks method existence on a type)?
Yeah man, I have a course about a quarter mile from my house. I play about 3 or 4 times a week. Never dyed a disc before though! 
https://www.python.org/dev/peps/pep-0008/#package-and-module-names &gt;Modules should have short, all-lowercase names. Underscores can be used in the module name if it improves readability. Most of the time a .py file is a module dot his rule applies.
That's quite the caveat.
Pep-8 gives guidelines for coding style including naming conventions. https://www.python.org/dev/peps/pep-0008/#package-and-module-names I generally follow pep-8 because i agree with most of it. Therefore i use only lowercase for mudule names.
pytest.approx() against a numpy array flips the absolute and relative tolerance arguments. so \`assert np.array(99) == pytest.approx(100, abs=0.1) \` passes with no issue. 
Does your Windows system is 64-bit or 32-bit? Maybe you need Python for 32.. 
- off-topic - you have a great website!
Waay back in the day, learning to find ways to make samples loopable was a key skill in making music with trackers.
Nicely done! Pomodoro technique is an awesome way to stay productive on big projects, good luck on your 100 days of code
Thanks a lot! It uses a small blog engine I've done: [bloggggg](https://github.com/josephernest/bloggggg).
Maybe I'm not using english correctly, but in my mind if it is up to the author, it is an arbitrary implementation as the author sees fit.
Used to play when I was in school. It was fun. 
I agree on the loans. I'm just starting at the local CC so fed grants should cover it all. I'm actually a public speaker/facilitator by profession so the communication part is no prob. It's the hard dev skills I need. 
I'm "unfortunate" now ? waaaaaaahhhhhh
Yep I love it!
##r/flask --------------------------------------------- ^(For mobile and non-RES users) ^| [^(More info)](https://np.reddit.com/r/botwatch/comments/6xrrvh/clickablelinkbot_info/) ^| ^(-1 to Remove) ^| [^(Ignore Sub)](https://np.reddit.com/r/ClickableLinkBot/comments/853qg2/ignore_list/)
Nice! Yeah this is my first dye. I play as often as possible
Got a hole in one the first time I played. It's been an obession ever since. Nice disc. How did you do it?
&gt; The normal `dict` should now be able to replace `collections.OrderedDict` in most cases. I feel like "most cases" is not enough of an explanation here. If your program truly depends on the order of the dict, then the built in one should only be used to replace `OrderedDict` if you will also require (and check?) that it is python 3.7+. If there is a chance your code will be run on anything else (and I would argue that *includes* 3.6), used OrderedDict
I may have to look into that, if it's available for public use. Wordpress is so bloated that I was thinking of using a static site generator.
Yes totally available / open-source, feel free to use it!
I've defintely wished that a tool in the realm existed before! from the docs is hard to tell if it supports many of things I would ideally get from such a tool, so list of such things follow * wildcards or regex. I don't want to define every module, if my project has a well defined structure * exclusions. per above, i can wildcard enable constraints for a set of subpackages, exclude any that fail, then gradually remove the exclusions and here starts where I may be misunderstanding the tool * non local package constraints. "a.b.c can import from a, a.b, and y, but not other things" * disallowment rather than rules. e.g. express a rule like, "no modules anywhere may import datetime or pickle" * ideally I could enforce non module use (this might be out of scope and/or hard to do well). "disallow use of eval, os.environ, pdb.set_trace"
Eventually but not yet. There's a lot work I want to focus on first and good habits I want to get use to and bad habits I want to kick. I've been thinking about this bot for a bit more than a year now, and have been working pretty heavily on it for three or four months. Once I meet a specific milestone I'll be ready to open source it. That said, [estimating project time isn't easy](https://xkcd.com/1658/) 
Working on a wrapper for a Rest API. Been working on it for a good while now, and I think I'm the only user. Still, great learning experience, and it's useful for me. https://github.com/Acurus/pnvdb
It probably will. The problem is that my current graph is in Pygraphviz I have tried a couple of conversions from NetworkX to Pygraphviz and the method does not really work for UnDirected graphs I discovered NetworkX (much more powerful) after I wrote my script. I am planning to take it to a new level and use D3.JS for rendering my networks and then I will use NetworkX
Can be != is. Good grief. 
Seaborn is targeted toward statistical plotting. If you are doing stats and EDA then seaborn is a good choice because the things you'll want to do are easy and built in. Matplotlib does it all -- it has to cater to a much wider range of usecases, from oceanography, to astronomy, to sankey diagrams, each of which can tend to have specialised needs. That means things aren't necessarily easy because the goal is to make a *lot* of things possible. Seaborn is built on top of matplotlib and is essentially the statistical plotting frontend for matplotlib if you want to think of it that way.
If they only supported __slots__...
That's awesome! Still waiting on my first ace. I talk about the process here: https://www.reddit.com/r/discgolf/comments/91ij0t/first_time_dyeing_a_disc_i_think_it_turned_out/e2ywjnm/?st=jk08ic3d&amp;sh=47bcc84d
Absolutely, but very few people write their serialization and unserialization methods in Python with performance in mind.
Correct.
depends on the context of the company/work. Some positions are better than others for accommodating this. First start with learning unit tests and understanding what is a unit and how to test it in isolation using mocks [https://docs.python.org/3/library/unittest.html](https://docs.python.org/3/library/unittest.html) [https://docs.python.org/3/library/unittest.mock.html](https://docs.python.org/3/library/unittest.mock.html) as you will quickly notice, often it's about interfaces and understanding the code separation well. You want your tests to be short, quick and testing only one thing, but likely you will find that it takes a lot of effort to set up state and your tests will test for many different items because it's easy. Complicated tests is a code smell. More around this can be found in books like clean code, but there surely are more recent ones out there. Only when you understand the basics start using libraries like pytest [https://docs.pytest.org/en/latest/](https://docs.pytest.org/en/latest/) This will just simplify and allow you to write better tests, however if you jump too quickly to it, it might encourage you to write tests that test too much. To drive this, start using code coverage reports. There are plenty of tools that can report you code coverage in some website or your IDE, but the simplest one and the one that most depend on is this [https://coverage.readthedocs.io/](https://coverage.readthedocs.io/) Try driving your code coverage to a certain point for each feature/ticket/pull request. Different companies will have different targets (if any). In my case for e.g. we use the target set by sonarqube tool ([https://www.sonarqube.org/](https://www.sonarqube.org/)) and that is 80%. There are arguments of course, weather such target is of use or not, but I think it's a good thing to start with. Eventually you will notice that some tests are better than others and will catch more stuff. Again, if you ask someone if you should test interface if the function accepts the right amount of variables, some will call you nuts and some will praise for "double book keeping". This is source of flame wars, but I recommend discovering the usefulness of such things for your self over time. We are talking years here... It's easy to write many tests, but the point is that the test that will not catch anything is also wasted effort and cpu cycles and your time each time you run it. Now coming back to TDD, well, you can start it sooner or later during this journey. Purists will say from the get go, hippies will say don't do it because it's an art or some other code craft bs. Again find it at your own leisure. Try from time to time and discover when it's of use and when it's not. If you're prototyping something together, TDD can be a strain, but if you are implementing something that will be consumed by others or you know the exact outcome in advance, TDD makes it easier because it forces you to draft the contract first and then step by step make it complete and safe also will force you think about functions you're about to implement and how your code should be shaped in terms of function calls and abstraction layers (ignoring code re-use) because you will want to make it testable bit by bit and not in a big massive chunk. Now then, sorry if some of this does not make sense as it's getting quite late here and I need to go to sleep, hence it's just a stream of thoughts that first came to mind without reading any of this once again.
&gt; I guess that no one is insane enough to use integration tests for TDD cycle I do it. Far from insane, it feels like the best way of doing it.
Write up an api using django rest framework that does something interesting. Maybe do something with machine learning and a nice data pipeline. If you want you can use something like twisted and do an async api but you'll have some problems working with a database asynchronously. The big thing about backend is showing that you know how things work together like Redis, Varnish/Squid, Postgresql, Django, Celery, Gunicorn, Nginx and so on and so forth. Write something that covers as many of the big things as possible and then push it to a server. Show that you know how to setup a server properly. This may be sysadmin work but a backend developer should know a good bit about it. 
Would it be that hard for the installer to do that for you? `python -m pip install -U pip` (at least on windows) 
Just another stream of thoughts on this... Use tools that bug you when you write your code. There are many IDE's and they can be extended and configured to provide quite a lot for you during the time of code writing. Here are some items I like to use to produce better code: * set max line length to 79 as per PEP-8. If you need more, likely something is wrong. Too many indentation layers? You probably can't test that easily, move stuff to functions. Too long names? Do you really need all that information or a lot of that is smurf naming? * Use pyflakes linting * Use black * Read your diff of the commit, is it too long? are you sure your commit is a single change? How atomic the change is? Reading diff will make sure that you commit only the right stuff and it will be your own code review. Get the right tools to view the commit diff if you don't use any or learn how to do it with ease. * Run tests locally before pushing * Write tests if it makes sense/contains risk * Check coverage report for the new code * from time to time fuck up your IDE and modify code with basic tools (this is incidental most of the time), this will highlight any code layout issues, if it's easy to navigate and understand the code base without any tools and tag jumping. * I personally like to use //TODO: within the context of story I'm working on so that I will not claim something is done without completing all corner cases * Validate the requirements yourself before informing QA/Product people/Others about feature ready to be merged.
Have you heard of Haskal?
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
this phone's battery is at 5% and needs charging! --- ^^I ^^am ^^a ^^bot. ^^I ^^use ^^OCR ^^to ^^detect ^^battery ^^levels. ^^Sometimes ^^I ^^make ^^mistakes. ^^sorry. [^^info](https://np.reddit.com/r/phonebatterylevelbot)
Thanks, this was actually pretty useful
Thanks, this was actually pretty useful!
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Frolf is fun as hell, as long as you keep your discs away from the treetops that is 
Rewrite as in start from scratch. Rewrite the whole thing. Rewrites are done with the benefits of hindsight and now you can finally do it “the right way”. I get it that it can be impractical, but there is an opportunity cost with trying to incrementally improve a poor design vs making the good design. Don’t de afraid of starting over. Just a thought...
Yehh. Where I'm from we call it frisbee-golf. Love the game. 
I feel like I'm the only person here who hasn't ever heard of disk golf. I image it must be fun tough, and what a perfect pattern - the symmetry is made for a disk!
Trying to keep busy at work by automating what I can but that's just causing me to have even more free time. So currently in this downward spiral I was gone yesterday which happened to be busy and came in today and had both days work done with only 2 tickets needing requester follow up by 3. I'm also trying to convince my boss to let me add OCR to our inventory system because Its surprisingly easy. I love Python
Great post, I look forward to future posts for this tutorial series. 
You can start with a single mid range disk and a bottle of water. 
Heck yeah. I love the idea, but would constantly be worried about loosing it if on a driver. Putter maybe less likely to get lost.
My boss and I had automated many things in our specific area of responsibility. The company eventually went out of business and on the last days of the systems, they were backed up one last time and shut down permanently. Our automation on the monitoring side even sent out the last cries of certain servers being downed.
Did the company fall because you had automated many things?
[To quote J. B. Rainsberger](https://youtu.be/VDfX44fZoMc) , "Assertions in the layer above become expectations in the layer below." What he means by that, if you don't be time to watch an hour long video, it's off you provide a test double to a system under test and you assert it got 5 as an argument and produces a Foo, you write a test against the implementations of that double that actually recieves 5 and it better produce the same Foo. This leads, for me at least, to the conclusion that you could write a collection of doubles for your interfaces and use that collection to both verify the interaction between A and B *AND* run that same collection against actual implementations. 
&gt; It's very exciting to get my coworkers into the mindset of "do I really have to do this manually?" as it is a win-win situation! Someone brought a spreadsheet to my boss, and I was in on this at some point.......The spreadsheet is pulled from the system, which actually emails it to this person. This person then takes this data to create 3 more reports to be emailed out. This once per week job took this employee about 2 hours, not a lot of time, but it is still 2 hours of the mundane....... The reason for this employee's visit was to clarify some details. The employee walked out of my boss's office with never having to do any of the reports, ever.......The guy was present while my boss whipped up some code based on the discussion of the 3 other reports. The guy later brought 5 other tasks to my boss's office and was later re-assigned to bigger and better things that have been meaning to get done. This went on and on for months and the guy was finally promoted after getting his position fully automated and all reports out well before the office opened for business the next day.....emails were waiting for all the C-suits
yeah, long time disc golfer. Throw a 175g blue boss what you throwing?
I haven't frolfed. 
I hope you're joking? Just because you're not fucked doesn't mean you can't sympathize
I came across [ddl-generator](https://github.com/catherinedevlin/ddl-generator) before. It hasn't been updated in a bit, but it may be worth trying out.
 PS C:\Users\LivedAllOver\Desktop\calendar&gt; .\Scripts\activate (calendar) PS C:\Users\LivedAllOver\Desktop\calendar&gt; .\Scripts\python.exe Python 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:06:47) [MSC v.1914 32 bit (Intel)] on win32 Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; import requests &gt;&gt;&gt; dir(requests) ['ConnectTimeout', 'ConnectionError', 'DependencyWarning', ... &gt;&gt;&gt;
Whoa Why?! 
I hope you don't lose that in a tree on your first tee off.
Mainly, what Blazerboy65 said, you need to reduce duplicating your code everywhere, also known sometimes as writing **DRY** code (*Don't Repeat Yourself*). The opposite is **WET** code (*Write Everything Twice*), which is bad. Look for other places where you repeat yourself, and factor them out. For example, you repeat `choices = ["Rock","Paper","Scissors"]` a few times, each time you repeat it, you're giving yourself an opportunity to make a type. Instead you could declare a global and use it everywhere. Alternatively you could declare it in `main()` and pass it to the game mode function, but given it's value is constant, the global might make more sense. Another example is `if (choice &gt; 2 or choice &lt; 0):` and `while (choice &gt; 2 or choice &lt; 0):`. This is tedious to write, and tedious to read. Create a simple function, eg. `valid`, and then your code becomes: `if not valid(choice)` and `while valid(choice)`, which is eminently more readable. Another prime candidate for factoring into it's own function is getting (and validating) player input, eg. `choice = get_choice()`
With the time available to me, I would deploy something like this to AWS and use a cloudwatch schedule to either run this in the serverless environment (Lambda), you could build it into a Docker container and schedule it to run with their Fargate service, or even boot up a server instance, run your job, then shut it down again. Any of these things would cost pennies. Failing that, if you want to run it in your local environment, both windows and Linux distributions have a basic scheduler available to run a script at predetermined times.
just discovered that somewhat worse, it also recalculates the tolerance with respect to values on either side of the == regardless of where the pytest.approx() is. so \`np.array(1e7) == pytest.approx(1, rel=1)\` passes. 
I just mean it doesn't matter. Using 2.7 instead of 3.7 won't negatively impact students as they'll learn the core concepts anyways and it won't negatively impact any other codebase as university courses aren't producing code that other people depend on. So it doesn't matter. 
simple typo `init(self, rel=y, abs=z)` was called as `init(self, z, y)` and tests that didn't check for cases where abs tolerance != relative tolerance. 
How did you dye it!?
On windows, you can schedule it using Task Scheduler. (You can even convert them into executable so they execute without installing python.) For refreshing data connection on Excel, I'd recommend macro. Basically, you will have a .bat file that runs macro.(opens workbook and closes it silently) For linux, there is crontab. 
They actually failed due mismanagement. 
good bot
64-bit.
This. It only costs $1.40 per 1000 solved CAPTCHAs via [http://www.deathbycaptcha.com](http://www.deathbycaptcha.com). Just implement a system like this in place and you basically have CAPTCHA solving on EZMode.
This is an Innova Eagle but I also throw lots of Trilogy plastic. Big fan of the Explorer, Hatchet, and Harp!
I go through how I did it in this comment: https://www.reddit.com/r/discgolf/comments/91ij0t/first_time_dyeing_a_disc_i_think_it_turned_out/e2ywjnm/?st=jk0hnqpd&amp;sh=44c32f85
Already played a round with it, so far so good!
Been re-writing all my financial APIs for Cython. I can see the improvement in performance already.
Thanks - didn't know about .iterrows and .itertuples. Feel kinda silly now for having written for i in range(df.shape[0]) all this time
create a cron job or systemd timer
Do you think the automation helped make your job easier or harder (by harder I mean like it would have been more time efficient to just continue doing work over trying to automate)
Aah. Just yesterday I was telling some guy on reddit that he needs to learn how to write tests haha. 
So, you banged the chains, and...you'll have to guess with what.... the python disc! looking awesome!
Disk in barrel was the bonus hole, free drinks for a solar year. Barrel was a PAR one...so you had to ace it. Most games played at night and have seen dude tomahawk that hole at 330 after many drinks and about 13hrs of nonstop disks and riffs. I miss disk golf. 
Curious what kind of documents you're scanning. I've thought about it, but I get invoices/orders from many different companies with different layouts/quality/fonts. Are you in a situation with predictable document structure or is this easier than I'm imagining?
No mention of `asyncio.run` which makes bootstrapping async apps so much easier. `contextvars` will also allow things to become easier for async apps.
What error do you get e when trying to install it? Have you tried these install steps? http://docs.python-requests.org/en/master/user/install/ 
I see. Thanks.
haha, it took me years to get over my fondness for CamelCase.
you could download an ide to run the file or use the command prompt
I've been following eve since it's infancy, and I would say that today, it has some a fair bit in development. It's still active. It now has 4-5000 git stars. As for the it's pro's, it handles all the standard CRUD operations data validations, and most importantly, all the data queries via url params, operations for you. Along with some other micro features such as pagination, authentication, request throttling etc... You pretty much just define python dictionaries to define all your model schemas, implement an authentication class to protect your routes (they offer various auth methods) and define any custom hooks functions on CRUD events and set some config settings to define your api routes and you're REST API is up and running. It even has and SQLAlchemy extension developed now. Plus if you want to use any flask features, or host a few html pages, you can easily do that as well. In a way, Eve is just removing all the cruft/broiler plate work that you would write for every project using flask-restful, and allowing you to just focus on business logic. I will say this, if you're wanting to learn python and becomes a better developer, I would use flask-restful so you can get experience with python. But if you're already familiar with python and you're looking to just quickly build an MVP or quickly test a project, than Eve is definitely the way to go. What I can't speak to is Eve in production use. At the time when I was following it, it wasn't meant for main stream production. 
If you’re ever up in FoCo the course near the old CSU football stadium is awesome!
...he needs a python interpreter, you cannot just run a .py file (unless he's talking about viewing the code, in which case you could just use any text editor). I assume you're on Windows OP, goto https://www.python.org/ and download Python 3 
OrderedDict has different semantics. Two OrderedDicts are only equal if they have the same content \*with\* the same ordering, whereas normal dicts compare equal with the same content regardless of insertion order. So if you \*need\* that behavior of an OrderedDict, you still need to use an OrderedDict.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Serial numbers mostly but I tried to use stuff like the "Designed by Apple in California" to find exactly what it is. so I would get a decent number of fonts but I only made it for Dell and Apple which is just 3 currently. Though it worked okay without specifying a font it was mistaking stuff like 1 for I or 7 with my garbage photos Honestly it's only like ~60 lines and took less than a day to learn what I needed in pytesseract and opencv to have it spitting out text. If your like me you've already spent more time thinking about it than it would take to see if it's possible, and I'm sure a MINDMOLESTOR thinks a lot.
Working on a tool in work to qualitatively inform managers on a given team how productive the claims handlers on their team are (I work in the insurance industry). Extensive use of Numpy, Pandas, Matplotlib and a cheeky bit of seaborn too. 
Hell, might even be better if you start with a single putter (and the bottle of water). Probably won't have good enough form to make use of mids or drivers until you can throw a putter reasonably well.
Why? DI is a pattern and does not require a library. Leave that architecture astronaut bs to the Java dweebs.
Neither. No dashes in file names, ever.
If you want to prove you're worth hiring, do it without Django. Use something less magical and hand-holdy, like Flask. Being able to do something in Django (or Rails) is a very low bar.
I always thought that bokeh was more for interactive graphs? Seaborn is, as some others have pointed out, an extension of the matplotlib. As far as I understood they don’t do any plots themselves but rather customize matplotlib‘s code. 
Or just leave xml alone and let it die in peace...
Run your code in an AWS lambda function that stores the output in S3.
Use a good editor/IDE. No more indentation errors.
Agreed. If you use a good IDE, you’ll catch all the basic stuff before you even hit run, and it will be easy to indent correctly. (I like Pycharm, but there are lots of good options out there)
Well that table did not post like it looked when i copied it in there. Let me see what i can do about that
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Shit, use a *bad* ide. Anything remotely resembling an IDE will solve that problem immediately.
Oh? What? jQuery is out of fashion? Then how do you manipulate DOM on runtime? 
I was pretty confused when I saw this wasn't the disc golf subreddit. 
I never used Celery before. Is it efficient for website like E-commerce?
It'll be interesting to see if other languages adopt the compact-dict implementation approach of Python (just as a number of them adopted Timsort).
I don't get it. If there is no justification then there is also no need to port to Python 3. It seems to me that this is a circular argument. It's not worth it -&gt; Hence needs backport -&gt; We have a lot of Py2 code. -&gt; We can't port to Py2 -&gt; It's not worth it 
Beaver Ranch in Conifer by any chance? I've been meaning to get out there
Yeah. Worst decision made in python. It can kick you from surprise when you need to edit some file remotely having some basic editor like nano, vi(not vim). A specially when someone before you mixed spaces with tabs few years earlier when marking some minor change. In 1kLOC file. What is wrong with {}, begin/end is beyond my understanding :-)
It might be low bar but not if you're doing a data pipeline and adding machine learning. Just because django makes a lot of things easy, doesn't mean you can't do something difficult with it that isn't out of the box. Seriously a data pipeline is very impressive to employers when it's well integrated into BI tools. Combine it with some machine learning and it's as fashionable as can be. And as we all know, HR is all about hiring based on what is fashionable. I agree it's not mega impressive doing a simple blog app, but for a lot of employers it demonstrates that you know how to use a common framework and if you test and write your code properly they'll see you can at least write maintainable stuff. That's a lot more than what most can do.
Backport means add the new language feature to Python 2.
How can you even program without and IDE. Try Spyder or Pycharm(both available for free). There is also visual studio code and atom and others but the first two are specifically for Python. 
Agreed, but you probably don't know how much indentation matters on mobile IDEs. It makes code supremely cumbersome to copy paste (since, for some reason, at least in my IDE, a copied function definition reindents itself into an abomination). It's just a train wreck when you don't really have the luxury to use a legit IDE. 
Working on a reporting tool which emails our resellers what services their customers have subscribed too. 
But your arent a Python Developer if you have have atleast one indentation error an hour. Or that might just be me...
So your eagle hunt down python. `from eagle import anhyzer`
Very nice - personally I would have liked a little more discussion about the criteria required for a perfect loop - namely that both the value and the gradient of the time series matches at the transition. Hence why you use multiple points in your correlation rather than just a single value. Since the time series oscillates, if the initial cut is at a time when the first time series is close to zero, you can have a very large number of candidates even in a short space of time by advancing the second cut approximately one zero-crossing. That will let you quickly check for optimal transitions given a fixed initial cutting point, although the interesting algorithmic part as you mention is when you allow some flexibility in varying the initial cut. 
https://pypi.org/project/dataslots/
If you really want to overload something with that meaning, just overload the &amp; operator.
LOL
It can fit so many imported libraries. 
Pycharm
`:set syntax=on`
Or just get some fucking glasses
Who the fuck uses mobile ide 
I don’t think I’ve had one in years
I just googled for mobile IDE. I found lots of sites with random lists of the "5 best mobile IDEs" but no-one could explain why they exist.
you program on a smartphone?
https://i.kym-cdn.com/entries/icons/original/000/022/978/yNlQWRM.jpg
Tool can't really correct missing braces either. Although it can detect them more easily.
Screw that, just type in spaces manually and [count out loud](https://www.youtube.com/watch?v=2AoxCkySv34)
&gt; 0.4 lines of Perl How does one even-?!
Every editor that I have used in the last 6 years has had auto indentation for python. I don't really remember having indentation errors at all. What editor are you using OP?
I can confirm, I have to use notepad to fix bugs on a remote windows server 2003 that is only accessible trough citrix, since there's no way to copy the files locally since the clipboard copy or remote transfer isn't allowed. It's pure hell. 
Improving my Instagram bot. Unfortunately i found a bug on onegram and I'm trying to solve it 
Why not use a web IDE in that scenario?
Well yes but you don’t program
this is not a problem you need to have
Copy/pasting much?
I used to work across 2 machines; a laptop running Linux and a desktop machine running Win7 and before I switched to (the pythonic and [PEP 8 recommended](https://www.python.org/dev/peps/pep-0008/#tabs-or-spaces)) 4 spaces I would run into *endless* headaches because the 2 OSs don't interpret tabs the same. 
I have encountered similar scenario plus added bonus where the server isn't connected to the internet. Funny thing is it just need a simple proxy pointed to my computer to solve the internet access 
If you're having indentation errors, then either you're using a really bad text editor, you're copy/pasting code from web sites (You don't learn much from this, imo), or you're failing to grasp what indentation means and are just plain doing it wrong. In any case, those problems go away with just a modicum of experience.
I hope so!
I have written plenty of GUIs for those kind of devices. Check this repository to find some inspiration: https://github.com/uetke/ Or this website with some tutorials (&amp; a book): http://www.pythonforthelab.com/ If you need to plot real-time data, go for PyQtGraph (plenty of examples) or VisPy (newer, more buggy, fewer examples). Qt is great for scientific applications (signals and slots, etc.), so I would definitely check PyQt5 for building GUIs. 
Python doesn't really have "data types" for object attributes - it's generally better to rely on duck typing in cases like these.
I'll try that! seems interesting!!
Thank you. Does it have any third-party modules which offer a robust OO system?
If you do business intelligence you should consider setting up a data pipeline with something like django and it's rest framework. You can add celery for periodic tasks and offloading operations for non-blocking purposes. Knowing a Web framework will also be incredibly valuable as a means to let clients access your tools and products in addition to being a means of archiving and storing data. Plus it means you can integrate things tightly with other tools. Also, don't forget that by having an api you can ensure that you don't need to repeat yourself in code or maintain a ton of internal libraries and keeping them in sync between devices. 
Thank you, that's the answer I was looking for! from boring to challenging!
What do you mean by "robust" here? Runtime type checking? Visibility levels? All this stuff is essentially considered un-Pythonic. The logic behind Python classes is "we are all consenting adults", as in "we all agree to not do things that are obviously stupid". Assigning a string to a `Point`'s `x` coordinate is not something you should be trying to protect against.
Great ideas! Thank's man!
Not exclusively, but I also code on a smartphone, yes. 
Well, just because they're in the top five doesn't mean they solve indentation hassles for you. 
😂 
Thanks! Exactly what I needed, right when I needed it.
I'm just surprised because: * The arguments you provided were used against Perl's core OO system for years * Perl now has non-core OO systems providing those features and they're much easier to use * When I'm hacking on a million line code base, I very much want to have my objects guarantee their integrity
One thing you can do is use [type hints](https://docs.python.org/3/library/typing.html) - they won't do anything at runtime, but they will allow your IDE (if supported) or [mypy](http://mypy-lang.org/) to typecheck your code statically. If you really want runtime type checking and understand the costs, you can use [typeguard](https://github.com/agronholm/typeguard) to automatically typecheck your functions, but I really don't see much reason to.
Python forces readable code
What sort of diagnostic information are you trying to print out? Is it too long to pass it as a message to `assertEqual`?
I don't know. If OP is running into indentation errors enough to complain about them in coursework, I'd suggest refactoring into function calls over getting an IDE. IDEs can't solve all indentation bugs, and the kind of bugs that beginners make are different.
The pythonic way is what you've done. It's natural to want to do what you've done in other languages, but try not to do it, it doesn't make sense in python. Just do your business with you point class, and if at some point you try to add strings with ints you'll get an exception, that's it. That being said, if the rest of your program is good, you should not end up with a string there.
Use Chocolatey I've never in my life encountered a software with Windows dependency I was not able to install using choco. And for people that complain its a security measure, well after python is installed, you can uninstall chocolatey later. Step 1) Install chocolatey https://chocolatey.org/install Step 2) Run this command in powershell.exe choco install python
No it's not, I'm an idiot, I never realised you could pass a msg parameter to assert methods, thanks for pointing it out though!
Use VSCode with Anaconda and you will never have to worry about it again :D
It would be necessary to install a web server + php or whatever o a windows server 2003.... Which is also strictly closed due security reasons, so it's not an option, probably the company will migrate to Linux, but it's not currently planned. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Writing and properly starting to think about architecture of an API I've created to use a trading platform. It started off as a cool proof of concept to allow algorithmic trading but is now moving into the, let's make this nice and usable stage. [https://github.com/boyan-soubachov/tastyworks\_api](https://github.com/boyan-soubachov/tastyworks_api)
The terminology is CamelCase. The old term is PascalCase Upper CamelCase is CamelCase Lower CamelCase is camelCase Python recommends underscores (_) with no Camel/Pascal Case test_file.py Source: Inventor of Python, Guidos own style guide [PEP8](https://www.python.org/dev/peps/pep-0008/)
&gt;* The arguments you provided were used against Perl's core OO system for years When people want to hate, they will find a reason, whatever it is. That never prevented perl or python from becoming successful languages.
I remember starting out with python, seeing all the hate over tabs/spaces, and thinking, "You guys are programmers, right? You're, like, supposed to be good at computers and stuff?"
Some new technology still choose XML, like [Network Configuration Protocol (NETCONF)](https://tools.ietf.org/html/rfc6241).
I remember when I was first learning about python and I didn't know anything. I was using both IDLE and TextWrangler to edit the code (I told you I didn't know anything) and I ran into problems with mixed indentation, when I moved from one to the other, because while you can obviously use either tabs (which are clearly superior) or spaces, you have to be consistent. That caused me a lot of pain in those early days. I mean, for a language that prides itself on being newbie-friendly, this was an extra hurdle that wouldn't be present in any other language, because the code looks just fine without doing a hexdump or using something like emacs `whitespace-mode`. I didn't know at that time how to do a simple search-and-replace for the literal ASCII tab character, since I was using a GUI and the Tab key would just move to the next field, so I think I ended up having to do it manually based on the error messages in several iterations. Nowadays, I would know to use something like `expand`, `sed` or `M-x query-replace`, but would know better to begin with. I solved the problem by changing to Textmate and quickly stopped using IDLE altogether (I did miss a few of the debugging capabilities but IDLE is a piece of crap). Anyway, syntactic whitespace was a mistake.
Using the self._var notation and @property is pretty common. 
I would like to announce a new book we are working on `Essential Python Tools`. This is a book for intermediate python programmer who has worked with Python for a while but needs to know all the tools professional Python developers use. The book covers the (basics of) - Ipython - Jupyter - pdb and ipdb - pep8 - pycodestyle - pylint - pyflakes - flake8 - black - autopep8 - yapf - virtualenv and virtualenvwrapper - pipenv - pip, requirement.txt and pipfile - Deployments using bare metal Docker or fabric - Deployments on AWS and GCP We are still a work in progress, but it is completed enough that I would love to get some feedback. This is our 5th Free Python/Django books this year. You can read our previous books: - [Django Admin Cookbook](https://books.agiliq.com/projects/django-admin-cookbook/en/latest/) - [Django ORM Cookbook](https://books.agiliq.com/projects/django-orm-cookbook/en/latest/) - [Building APIs with Django and DRF](https://books.agiliq.com/projects/django-api-polls-tutorial/en/latest/) - [Building multi tenant apps with APIs](https://books.agiliq.com/projects/django-multi-tenant/en/latest/)
*Slaps roof of programmers head* This bad boy can fit so much lack of common sense in it! Seriously bro, who has indentation errors? Any reasonable person will use the right tool for the job. You have so many options with Python 🐍!
Hi Ovid! As a fellow Perl user, I've also been underwhelmed by native class creation in Python. I've not used it in production, but I have played around a little with a *Moose-like* for Python called [Elk](https://pypi.org/project/elk/) from elk import Elk, attr class Point(Elk): x = attr(mode='ro', type=float, required=True) y = attr(mode='ro', type=float, required=True) point = Point(x=7.0, y=3.2) Like Moose, this gives you an `__init__` for free that requires named arguments, and enforces correct types and required attributes. Unfortunately doesn't seem to be actively developed (or much used in the Python community) so maybe it's only interesting as an example of what's possible with a bit of sugar.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://pypi.org/project/elk/) - Previous text "Elk" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
N00b. You need nothing more than a magnetized needle and a steady hand.
I have tried the steps. The error looks like a timeout. It says connect timeout error along with the ‘pip._vendor.urllib3.connection’ followed by ‘connection to pypi.org timed out I’ve tried installing with a proxy but that doesn’t seem to work either. 
you could try [this](https://www.usenix.org/node/190937) if you wanted to look cool
You could also use pytest as a test runner. It will show the values and where they came from in it's message. You can then also use simple asserts like assert expected == something() 
Thanks, that looks really interesting. Too bad experiments like this aren't more widely used.
Need to clean up the kvm cli tool I made last week to make the try/except blocks out put more useful information on failure. Then I'll start scripting a lot of our raid/hard drive troubleshooting/replacement stuff. Script all the things!
Thanks for your comments. Responding to each: 1. Wildcards - not possible at the moment, but in the pipeline. The workaround is just to specify each relevant module in the packages section of the contract. 2. Exclusions - absolutely agree, it needs to be possible to move gradually towards adherence of the contract. There's a GitHub issue for this already. I'm also thinking of making it possible to configure contracts to warn instead of error on failure. 3. Non local package constraints: to clarify, are you suggesting a contract that says 'module x must not import anything *except* modules y and z'? Interesting idea. 4. Forbidden external modules / other practices: I think these are good ideas but outside the scope of what layer linter should do. I think the limit is to analyse internal dependency graphs. The other stuff you describe could be easily done with a simple text search I reckon.
Why would you need a web server to get an IDE (or text editor) running?
*replace tabs with spaces*
It gets way easier once you get through the beginner phase.
Hey all, I wrote a post summarizing what I understand the relationship between different dependency management tools to be. Hopefully it can help someone figuring out which tool to use for what. I'm slowly getting into writing blog posts, and I'm very open to feedback :). Also about the content itself: I'm sure I got some things wrong, and I'd be happy to correct where needed.
very few programmers outside python don’t indent correctly, so this is pointless
[removed]
&gt; tabs (which are clearly superior) Burn the witch!
Are you coding in notepad? Im pretty certain that about .001% of my errors are indentation errors. Thank you, pycharm
Serious question: why?
You will be interested in the module attr, and by the new built-in dataclass (&gt;py3. 7) 
A certain type of woman does dig a man in prison stripes...
I would recommend pytest very heavily, it's insane how much easier it is to write tests when all the extraneous stuff can be removed. It's clever and extensible and really encourages a lot of very good testing practices.
I haven't seen an indentation error in forever. What are people using?
Looks good, worth a shot for 9.99 ^^
[The obvious solution](https://github.com/csvoss/onelinerizer/blob/master/README.md).
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [csvoss/onelinerizer/.../**README.md** (master → 31a8692)](https://github.com/csvoss/onelinerizer/blob/31a86922b41842eaea4c6256cb810abaa6ab4bf1/README.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e302kf7.)
Tell that to people who have visual impairments that can't be fixed so easily. I mean, yeah, me personally, I couldn't give a shit about the whole whitespace thing. But I know people with visual impairments for which it is the bane of their existence, because they are much more used to just dropping a braces based scope in and then using their IDE to automatically indent the file.
This not only doesn't *force* readability (I can use indentation very, very disgustingly), but also hurts those with visual impairments.
OMG there's a python emoji 🐍🐍🐍
Serious question. I read that 'spaces' are preferred to 'tabs'. Which one is it?
There is a good amount to unpack here, and I appreciate your thorough response. I will be practicing this soon. Thank you.
Can you install other things with pip?
real programmers use notepad
Imma go with "because I have it with me"
CTRL+SHIFT+ALT+L
I’m using a MAC. And yes, I already have python downloaded, but I can’t figure it out. I’ve watched a bunch of YouTube videos and no cigar. Maybe I’m just an idiot. Lol most likely 
Another huge benefit is creating your own validation functions. Asserts are great, but even pytest doesn't always give you all the context you want. Say you want to verify that a HTTP code is correct in a test: import requests def validate(x, y): # This removes this function from pytest's traceback, improving test readability __tracebackhide__ = True lookup = {200: "OK", 404: "Not Found"} msg = "Expected {} ({}), got {}({}), details: {}".format(lookup[y], y, lookup[x.status_code], x.status_code, x.text) assert x.status_code == y, msg def test_get(): ret = requests.get("http://httpbin.org/status/404") validate(ret, 200) And the output: __________________________________ test_get ___________________________________ def test_get(): ret = requests.get("http://httpbin.org/status/404") &gt; validate(ret, 200) E AssertionError: Expected OK (200), got Not Found(404), details: E assert 404 == 200 E + where 404 = &lt;Response [404]&gt;.status_code test.py:15: AssertionError ========================== 1 failed in 0.39 seconds =========================== 
He's replying to the advice to use a web IDE. 
You're awesome, thank you.
Are you working in MS Word?
Serious advice time: If you have a good computer to code on, download PyCharm and use that. Since you're a student, you can get the Professional edition. Use PyCharm for bigger projects- ones that have more than a few files, more than a few classes. However, for smaller things, if you don't want to wait the 10 minutes for it to boot up... Download Sublime or Atom (your call, I use Sublime but have heard Atom is great too). This is just (just?!?) a simple text editor, but has syntax highlighting for just about any language. On the bottom bar of the window, you can set indentation for tabs or for spaces. If you choose spaces, the editor will insert 4 (or whatever other number it's set to... Choose 4 for python ) spaces every time you press the tab key. PyCharm should convert your file automatically, but as a student, a good text editor should be plenty good enough for all your needs. I didn't need to start using an IDE until after I graduated and started working. Sublime/Atom should have ways to convert your whitespace back and forth between tabs and spaces. Choose one and stick to it. You shouldn't be getting so many indentation errors once you choose a standard for yourself and stick to it. Good luck!
That's the spot. One of the best mountain courses. Not free, I think $10 per round, but I just get season pass, since I play more than 10 times per year, usually a lot more.
what about caching?
Installed BeautifulSoup4 with no problems 
I only found this out the other day And have been writing python for years! 
This is why we have Pycharm people
According to [pep-8](https://www.python.org/dev/peps/pep-0008/#tabs-or-spaces), it's spaces.
Been using python for years, never ever had this issue. Just use an IDE. Indentation is not supposed to be the hard part of programming.
I'll bet you use both tabs and spaces too. Sublime Text. Any .py files will auto indent when you hit return, and there's plenty of linter extension to highlight any syntax errors.
Plain javascript has functions for most of it now. It's generally more verbose, but dependency-free and easier to debug.
 M-x python-mode
Atom is the bomb. ⚛️
Thanks, well done.
Use python 3 -- Any indent inconsistency is an error.
I find that Pycharm often has difficulty auto-intending my code correctly. Imo, significant white space is the biggest negative about Python overall.
nice try vladimir
He's not saying to install anything. As long as the machine can browse the web you can remote access to it and use its browser as an IDE. Check out https://codeanywhere.com
Like this https://www.foo.be/docs/tpj/issues/vol4_3/tpj0403-0017.html 
Perhaps you should offer to pay people for this service. Just sayin
Send me a quote
Sadly it's on a network that is completely isolated :\\ Only way to do anything there is via notepad ( it doesn't even have idle to be used. )
Heretic!
A suggestion: I think you'reshowing too many linters. As a reader I would you would select the one (or two) that you think are the best and explain those and why it/they are better than the rest. May also a typing tool, e.g. mypy or similar?
Heathen!
&gt; OMG there's a python emoji 🐍🐍🐍 And it looks like a '2' REKT!
I've never had an issue with indentation, pibcak
If you're applying for a data pipeline or data science job, why would you show off your skills with a Django REST API app, though?
Hallelujah?
No worries
What's the issue with braces anyway ?
Great idea regarding mypy. We will add it. Re: linters, I am using increasingly using black these days, but there are still a lot of people using different tools. A lot of time the tool choices depend on what your team is already using, so I don't want to cover only what I consider the best. 
Still using python 2 in 2018 smh
Hmmm. Only one post in all of reddit history. I give this is 98% chance of spam from OP.
https://i.imgur.com/jQPWx6r.jpg
i could also do it if you pay! 
check out [nexten.io](https://nexten.io) – the platform where CTOs and Tech Leads contact talented devs for jobs. 
Seeing as how IDLE might be a new learner's first python editor/code editor, it should be at least as good as gedit. IDLE does not have even have options to turn on line numbering or visible whitespace and these two are probably the most important features of a python editor. Without line numbers, it is nearly impossible to debug a script.
&gt; very few programmers outside python don’t indent correctly, so this is pointless. I don't think the downvotes were from python fanboyism, but from that comment being obviously incorrect. If that's what you've experienced, then you're lucky.
Thanks so much for sharing! - Daniel
configure your environment to input the appropriate number of spaces when you press tab. find and replace all tabs after zero or more spaces at the beginning of a line with the appropriate number of spaces every time you open a file someone else has touched. try to get each function and method down to a size where it can be displayed on your monitor all at once (a vertical monitor helps with this).
Hell, you can even set up Vim to do it for you. So you don't even *need* an IDE.
Can fit so many hello worlds in it
/r/learnpython. Also, look into `elif`.
Hi. I think you would want to use an [elif](https://docs.python.org/3/tutorial/controlflow.html), or "else if', statement here. If you change your second if to elif, it will only execute if the first if statement is false.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Maybe, but I really don't think so. Every coder I've worked with professional indented correctly. You can pick any random project on GitHub and it will have correct indentation. Only the most n00bish copy-and-paste from Stack Overflow style script-kiddies might not format their indentation. But, if they're that bad at coding it doesn't matter if Python forces them to indent or not, you really shouldn't be working with them anyway. I've been coding for 18 years, and indentation is not something most engineers struggle with, so baking it into the language serves only the most n00b programmers. For everyone else, it's just a source of annoying errors when working with someone who has a different indentation style (i.e. spaces vs tabs, etc). Sure an IDE can help most of the time, but there's those times others have mentioned, like SSHing into a limited environment, or whatever. Because it's baked-in its just a source of frustration, online designed to help absolute beginners. I.e. training wheels for pro-riders
What do you code on. Notepad++?
Well at least you can mangle a dead meme.
*me copying a small chunk of code from the internet*
Making teaching easy was a central goal of the ABC language from which Python descended, and is still a central goal in 2018 as witnessed by recent PEP discussions.
FTW
Is no subreddit safe from this shitty image macro?
Yes! Thank you!
Turnings things into functions will 100% help, but I’ve not found an indentation error that Pycharm has failed to fix.
I know the concept but I just don't understand why people don't spend the limited energy on switching to Py3 instead of backporting everything back
Things I found interesting: &gt; The thirst for these skills is not without risk. Cesar Brea, a partner at Bain &amp; Company, a consultancy, warns that the scariest thing in his trade is “someone who has learned a tool but doesn’t know what is going on under the hood”. Without proper oversight, a novice playing with AI libraries could reach dodgy conclusions. This is a good point - but this really goes for any language. &gt; Perhaps unnerved by a future filled with automated jobs, 90% of American parents want their children to study computer science. I wonder how they came up with this number. If it's accurate, that is incredible.
As per the data in https://wiki.qt.io/Qt_for_Python it seems that Pyinstaller will be the way to go. Ctrl + F. Pyinstaller.
Python 3.7 was just released and it includes a new library called dataclasses which makes it straightforward to put type annotations on classes. Read about it here: https://docs.python.org/3/library/dataclasses.html Python's solution to the problem you're trying to avoid (assigning an invalid type as an attribute value) is with a type checker (mypy) that you run at compile time or as part of your test suite. This catches problems earlier in your development process. Read more here: https://docs.python.org/3/library/typing.html
It's not a bad way to ingest data into your pipeline and to output results to people if they need something processed. It also gives you a great means to access data previously stored, great way to build dashboards and so on and so forth. That's what I do a lot of the time for smaller clients. 
 Installing 64-bit python3... ERROR: Running ["C:\ProgramData\chocolatey\lib\python3\tools\python-3.7.0-amd64.exe" /quiet InstallAllUsers=1 PrependPath=1 TargetDir="C:\Python37" ] was not successful. Exit code was '1601'. See log for possible error messages. The install of python3 was NOT successful. Error while running 'C:\ProgramData\chocolatey\lib\python3\tools\chocolateyInstall.ps1'. See log for details. python v3.7.0 [Approved] python package files install completed. Performing other installation steps. The install of python was successful. Software install location not explicitly set, could be in package or default install location if installer. Chocolatey installed 2/3 packages. 1 packages failed. See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log). Failures - python3 (exited 1601) - Error while running 'C:\ProgramData\chocolatey\lib\python3\tools\chocolateyInstall.ps1'. See log for details. Python is definitely still not installed :/
Why the fuck are you in a proerd group? proerd isn't even people. 
Because differently from the universe the zoeira is infinite.
Pay more attention. 
So, that's yet another product?
Are you running PowerShell as administrator?
Sounds like any Javascript project.
White space sensitive languages such ass.
Windows 64 bit pro. Yes I'm running it as admin. I think I will just use the reset option in Win 10 because it seems like my windows installer is corrupted slightly... very odd.
I'm new to programming and looking for something to dive into, I'll give it a try =) 
Can you elaborate on using functions to avoid indendation errors? Thank you!
Thanks!
I've never found this to be a challenge, so I don't quite understand why it's hard for others. Could someone perhaps explain to me why? I'm not being accusatory, I just don't understand why managing whitespacing is hard.
Interesting idea. Would be really cool if it had some way to triage issues, ranking from easy to hard, and maybe also somehow ranking the 'benefit' of said feature. Benefit / Difficulty = Priority
Atom😘😘 
That's a great goal, but most languages use curly braces and I personally prefer them. For me, it makes it easier to clearly see where one scope ends and another begins. Python definitely teaches correct indentation, but eventually everyone moves onto a language that has curlys anyway. I feel like Python would be better with curlys, and an indentation-warning to help teach beginners, but not enforcing it. 
Interesting. I'm curious as well. 
I'm out of ideas. First time I've seen choco fail.
In python they are more verbose: { is : } is pass
This is what I was expecting.
Visual impairments. Give me a break.
Lol, python compiler
[removed]
Erm, I say compiler cuz my day job uses one, but I mean interpreter. Like when you run the python code, it could easily lint and print something out before the code runs.
My favorite IDE!
&gt; eventually everyone moves onto a language that has curlys anyway. Not in my field (machine learning).
A LSTM for time series prediction. And its damn hard.... started in april with ML and new nothing. Went through a couple of basics and this step is still pretty hard. Am about to finish my physics MSc. so math/theory is not the problem... its the coding/python. I don't know why, but it seems like I have never fully understood the very basics of data structures like arrays, lists etc. Trying to grasp lists(list(list(..))) type of things is so hard for me, I dont know. On the other hand it really fuels my ambition and I love the subject. So from that perspective finally something I enjoy sinking my teeth into...
What's citrix?
You might want to take a look at [descriptors](https://docs.python.org/3/howto/descriptor.html)
The idea is that all of the issues are fairly easy to implement (see the Github page for a quick explanation of how it is that it finds issues). Since the information about the issue is often fairly limited, the issues are sorted by a mix of total comments, issue age, and repository popularity (based on Github stars). I plan on touching up the sorting algorithm in the next few days to improve the issue relevance. In terms of triaging, there are services like Code Triage which already address that niche well; I just wanted to help newcomers find a plethora of issues quickly and kickstart their coding. Thanks for the feedback!
I'm reworking all of my data analysis and industrial math homework that I had done in Matlab in Python. There are a lot of minor differences but I find Python to be a bit easier to read and I already use it for scripting and automating tasks so it's been fun. I'm considering giving my teachers the Python copies of my homework because neither teacher is very familiar with it and if they continue doing similar types of homework assignments they could support students who may choose to use a different programming language. 
I was born yesterday but no thanks anyway.
What about R? I guess R is on it's way out for ML, but still uses Curlys for sure. Also, ML is kinda a niche field at the moment, I'd say 90% of other engineering professions have some language that uses Curlys. 
&gt; Which one is it? It’s a religious question that cannot be answered by science or technology.
Great resource! Thanks! 
I don't usually have any problems with pycharm indentation, could you give an example? Also I think that significant whitespace is amazing. I've seen so much terribly indented code in other languages that I enjoy the piece of mind that at least there is some enforced structure.
Ok, I'll give you a pass
I can't crack it, it's messing up my saves and i don't have time to fix this issue that's probably *really* easy to fix, so **please** help!
Very cool! I like this a lot :)
Thank you sir. I was looking into the websockets option as I need realtime updates. I'll look into the links you provided. 
You should check your import statement as you can see MIMEMultipart is not defined in runtime 
r/learnpython 
Put people's data in shared storage (NAS) and then update it outside business hours with elevated rights (so you're able to change different user's data). Solves all distribution problems, and also makes a backup of that data feasible.
You can use a language with curlys != Everyone moves to a language with curlys. Most people in machine learning who use Python stay with Python. R having them doesn't have anything to do with the statement above
Your file has lost contents because you are calling `truncate(0)` on your file object, deleting everything. See [the documentation](https://docs.python.org/3/library/io.html#io.IOBase.truncate).
Did you save/compile?
Your program reads the old file into the Variable List, it empties the file and then writes one of the contents of the variable List (which are made of the old file contents) into the file again. So you would end up with old contents into the file. I am not really sure what you are trying to achieve with your program. 
Holy shit I'm retarded 
/r/learnpython and read the sidebar
You should consider using [context managers](https://jeffknupp.com/blog/2016/03/07/python-with-context-managers/) when working with files. I'm not sure what your application is supposed to do but here's quick rewrite in more idiomatic way: with open("questAns.txt", "r") as f: List = [] for line in f: line = line.strip().split(',') List.append(line) with open("questAns.txt", "w") as f: for line in List: first_two = ','.join((line[0], line[1])) first_two += '\n' f.write(first_two) 
Python design conventions basically say you need spaces instead of tabs. What I do I just use soft tabs and suck it up. Can't imagine myself smashing enter four times in a row every 3 seconds.
sorry, ima head to r/learnpython i feel really stupid :)
Nuclear bomb*
If you are poor on resources you can use vim and try out some plugins.
They are both reasonable choices and that choice is very unlikely to make or break your project. In my personal experience(now a couple years old since I don't use either much anymore) a large enough flask project eventually contains a stitched together version of most of Django and in my opinion Django has a lower learning curve because it has strong opinions on project and app layout and integration of models, forms, etc. that you would be doing yourself in flask and don't have to think about in Django.
lrn2spacebar, it's really not that hard. I mean you're posting on Reddit. Code in markdown is basically hit the spacebar 4 times. Further indentation is just multiple of that. tap-tap-tap-tap, tap-tap-tap-tap. How hard can that be. Indentation is to force you to write clean, legible code. If you've got code where you've lost track of indentation, you probably need to refactor.
I agree. IDEs is what made bad Java stay bad Java. "Oh, self documenting classes, `LetsCallOurClassWithSelfDocumentingNameReference ({});`
Platform for desktop/application virtualization =) 
IDE’s don’t automatically fix errors, but they give the user immediate feedback as they time rather than having to run the code and find out it doesn’t work. And they do a lot more than just report indentation errors. 
It's a small thing, but the native touchbar support is great. Previously that bar was useless (and I still would prefer regular function keys), or I had to use BetterTouchTool which set up static accessibility shortcuts. But this is now dynamic, configurable and finally makes that touchbar not feel as useless.
https://xkcd.com/927/
However braces nesting problems in other languages... ouch.
PyCharm and all the other JetBrains IDEs are also free for students.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Probably because they haven't decided is CS is the major they're sticking with, and they don't want to invest in proper hardware until they decide. I've heard that excuse before. Of course, those are generally the people who drop out.
And if you have a slow computer as a student, you can try getting your free Azure student credits and running a Windows VM on Azure for your dev tools.
I love PyCharm, but do people really use the built-in git stuff? I always just tab to the terminal.
get new eyes lmao
I'm sure you know more about ML than me, but I just mention R because it is a traditional ML language, and, if ML is anything like other engineering disciplines, eventually you run into legacy code, or switch jobs to a house that uses something else like R. But like I said, I'm sure you know more, since I don't work in ML. I'm just spitballing here, not trying to be argumentative ;) What do you do, if you don't mind me asking?
Do people actually prefer indentation over brackets? Whenever I use Python I always find myself wishing I had indentation as it's just so much clearer for me to read.
Working on a new social network that will be revolutionary in the way it operates and manages data. If any talented developers like to contribute let me know. Equity available.
&gt; very few programmers outside python don’t indent correctly Lol...
I use it a lot, maybe because I'm too lazy to open a terminal at all. With some good custom shortcuts defined (which isn't the case by default), those features are very convenient and fast. 
I've never had indentation errors and I just use Notepad++.
What a strange thing to say. To me, and "indentation error" is when the indentation doesn't match the semantics of the program. Python is just about the only language that *doesn't* have indentation errors, because the compiler won't allow it.
Thanks, i shouldn't have even posted here and you helped me :) I will not do it again.
Notepad and grep.com :)
How are you finding/sourcing the data? What does your data pipeline look like?
Pipenv support and pytest fixtures recognition: what's more to ask? Really, I use both Pipenv and pytest daily, it's awesome to integrate them even more
I found it easier to pick up indentation then the other codes format. But to each their own
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Spaces, but set your IDE to input spaces when you press tab
I'll stick with pipenv
I have used both Pyinstaller and py2app without any issues
Instead of cutting the stencil by hand if you ever attempt this again, find someone with a Cricut machine and get them to cut it for you. Cleaner lines. Give me a shout in the future and I’ll see if we can get it done for you or try posting the request in /r/Cricut 
Here's a sneak peek of /r/cricut using the [top posts](https://np.reddit.com/r/cricut/top/?sort=top&amp;t=year) of the year! \#1: [Made my first shirt! Got my Cricut Maker on Mother’s Day &amp; I’m super proud of myself!](https://i.redd.it/pczhso5anl011.jpg) | [14 comments](https://np.reddit.com/r/cricut/comments/8mq36w/made_my_first_shirt_got_my_cricut_maker_on/) \#2: [Succulent banner I made](https://i.redd.it/3w9c2zi2aas01.jpg) | [5 comments](https://np.reddit.com/r/cricut/comments/8co1vk/succulent_banner_i_made/) \#3: [X-Post](https://i.redd.it/9yzc0scyuvv01.jpg) | [5 comments](https://np.reddit.com/r/cricut/comments/8h4q7t/xpost/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
Check out the [csv](https://docs.python.org/3/library/csv.html) and [difflib](https://docs.python.org/3/library/difflib.html) modules to start. May also have to roll your own algorithm depending on requirements, but likely won't be too involved. Also, you'll want r/learnpython 
Good bot 
Your best bet is pandas import pandas as pd `df1 = pd.read_csv('file1.csv')` `df2 = pd.read_csv('file2.csv')` `diff = df1 == df2` `same_ids = diff[`[`diff.ID`](https://diff.ID) `== True]` This will match the IDs `new_ids = diff[`[`diff.ID`](https://diff.ID) `== False]` This will show new IDs `job_changed = same_ids[same_ids.job == False]` This will show if the job is different
Talk to me, what is your idea?
I have a buddy with a Cricut! 
It's whatever you configure your auto format tool to use. Just pick one and never worry about it
I used to but then I won a key for GitKraken.
Thanks /r/Python mods - sorry for posting in the wrong pace
The behavior you describe seems incorrect, or at least non-portable, and for me, on both Python 2 and 3, I get zero bytes read when opening a file as "a+". Append mode means the file pointer is placed at the end of the file, so you would expect reading or writing to occur from the end of the file (at least initially). If you "[f.seek](https://f.seek)(0)", before reading, you will be able to read the content of the file (although you will also overwrite it, unless you first seek to the end again).
You would be well served by telling us generally what it is. Keep the details private, if you want. A little info will really help people know if it fits their interests and skills. I.e. do you want an app built, do you want data pulled from the web, do you want stock prices analyzed, do you want a script to control your pet robot...?
This guy knows what’s up🙄
Tell that to [this guy](https://youtu.be/iWXebEeGwn0)
Tell that to [this guy](https://youtu.be/iWXebEeGwn0)
&gt; If you can't write code with proper indentation unless the ~~~compiler~~~ interpreter forces you to, you're a moron. This feature is pretty damn pointless on Python, but I like other things about Python. I always wonder why people feel so strongly about this. I agree, it's easy to get indentation right... so what's the problem? Who cares that it *requires* you to get the indentation right? Your experience won't change at all if you're not screwing it up. If I had to rank language design decisions in terms of importance, I think [whitespace vs curly braces](https://en.m.wikipedia.org/wiki/Law_of_triviality) would be one of the last items on the list. It just happens to be one of the simplest topics to understand which makes gives it a low barrier to entry for absurdly passionate stances.
Non-Mobile link: https://en.wikipedia.org/wiki/Law_of_triviality *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^203875
Yeah, why is that? Tab is just 1 char, vs 4 spaces...?
Emacs user says Clang format in your save hook
Thank you for sharing! Even more happy that it's by James Powell, the man is excellent.
Can’t say I’m batting very high. I’ll highlight a block of code and it often won’t indent it correctly so I end up cursing significant white space while I fix it.
I'm merely a data science grad student, lol. R is used for machine learning alright, it's just that people aren't switching to it from Python in any kind of serious quantity
1: read the sidebar
I didn't write that document and I don't know the motives behind that decision (if there were any). It's really a matter of preference. But they did have to settle with one to ensure consistency in the standard library.
Im looking for a script that can capture video from an HDMI input card.....then edit that captured video into a deliverable small .mp4 video. the same edit everytime... something like this the script captures 15 seconds of video from the hdmi input... then kicks out an .mp4 that is 10 seconds. it slows down seconds 1 and 2 200% from the capture. Ten plays seconds 2-6 speed up 300% then plays regular speed for 1 second of second 7 Then slows down the last 5 seconds by 200% Then goes to black with an embedded logo for the final 1 second of the deliverable video How hard will this be to code? 
Read the sidebar.
Where in history do the educators branch from the guild mentality hoarding knowledge?
noted....maybe ill try /r/learnpython
Fluent python
I have a friend that isn't 100% blind but he's close. he's a developer and I've never heard him complain about indentation. In fact, I've never heard him complain ever; a true inspiration.
That's the one I'm most likely to pick up, thanks!
https://effectivepython.com/ 
I didn't know people weren't allowed to suggest braces would be a nice thing to have without people assuming it's a complaint.
Unexpected expectations error
I'll stick with poetry
Better joke would have been threads
The editing is definitely doable with the right libraries. The part I'm struggling with is the capture from hdmi input card. That would take some looking into. I think the project could be done in something like 30 hours. 
Python was designed to use indentation instead of braces, parenthesis, semicolons, etc. For those that know what happens from code to machine language you know both aren't necessary. I'm sure it's no stretch to say having more than one option is not feasible either. And if you try to tell me other languages use braces **and** indentation you don't understand what's going on. Not to mention Python had the PEP8 style guide.
This is not the finished product(if it worked :p) just a part of it. I was establishing a method of writing content into a text file for future use, i was keeping the content traveling in and out of my code constant so that i did not have to rewrite it. 
Ahh, I see you're a man of culture as well.
I agree with dingoliv, this really is the best resource for levelling up your Python skills. If you don't mind an electronic format and would like to save money: You can get a free 10 day trial subscription to O'Reilly's [https://www.safaribooksonline.com/home/](https://www.safaribooksonline.com/home/), without needing to enter a credit card number and worry about forgetting to cancel later. I'd reading Fluent Python on there, and clipping each chapter into Evernote to read whenever I want later. Another advantage of reading it online is that Mr. Ramalho provides tons of excellent links to other resources. I just started on Eloquent JavaScript myself, it does seem like a great resource!
I like Pycharm. I use it a lot. It's decent, but it does some odd stuff with the vim plugin installed. Anytime I do a column select and insert text (ctr-v, shift-i, &lt;insert text&gt;, escape) the cursor jumps up 50 lines and all my closed folds open back up.
Unless you argue that vi is an IDE, I can code quite happily without one. However for very large projects, gotta love an IDE and its auto-completing.
Actually what I meant was what was the intention of this particular piece of software rather than its role in the overall logic. I guess I may not understand the problem exactly. 
Isn’t the Community Edition of Pycharm free even if you aren’t a student?
The answer is probably "split it into multiple classes".
Never tried tweetpy but i wrote some scripts for auto tweet image with webdriver selenium. 
Da ta looks like a scam!
Who paid you
There is no scamming here. I just looking for a topic that will be relevant to the python community. I appreciate your comment.
I've come to shill Pycharm.
No one will help you cheat in games.
No, I know that hence why I put that I have good intentions. I want to know because i'm an admin for a league (in rainbowsix if that matters) and it shows up in someone's moss. We want to make sure it's not being used with malicious intent and that's why I posted here to see if anyone could help me
Then I'm not sure what the question is. Are you asking if you can cheat with Python? Yes, you can absolutely cheat. You can also _not_ cheat. It's a programming language, it does what you tell it to.
Second this. I switched over to PipEnv a couple weeks ago to do a better job with vnenv management, and my only gripe was that it didn't seem as well integrated into PyCharm. But this is a timely and awesome addition to the IDE.
I know that you can cheat with python. My question is if someone uses a cheat through python, does it show up in their moss-file? Or does moss not pick it up? (my programming knowledge is close to non-existent hence why i'm posting here) 
Looks like a 3 fallen over backwards, to me
Relatable
I don't know about that specific anticheat system, but in general it's the same as any other programming language - if you're smart enough to figure out how to bypass the anticheat, you can do so; if you're not, you'll be detected.
I just upgraded, and while loading my projects and indexing, it crashes. I also tried a fresh download (rather than updating from the previous version), and it's still crashing. I've never had PyCharm crash like this before. :(
This
Sure use VIM or an IDE and make it use a majorly different color for whitespace. Make it put a dancing lama between each indent or 4 spaces. 
Yes maybe too many meetings I guess
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
You could ask the developer... [on github](https://github.com/pyinstaller/pyinstaller)... but [expect a nasty response](https://github.com/pyinstaller/pyinstaller/issues/3634); he is grumpy and unfriendly (and that's putting it lightly). 
Agree with you :) Finally "MacBook Pro Touch Bar is now supported" make me little more happy
Useful resource :) thank you
Best to ask in r/LearnPython . This subreddit is dedicated to discussing python and not helping users with specific issues. Whats giving you grief though?
Well... yes. [There was a talk on this at PyLondinium!](https://youtu.be/p0Fc2jWVbrk) 
I normally use the terminal, but one nice thing is that PyCharm manages repos at the project level, so if you commit, push and pull in PyCharm it can perform that operation for all repos included in the project. That’s useful when for whatever reason there are tight couplings between repos and say, developing a feature requires synchronised changes in multiple repos (yes that suggests there should only be one repo, but usually the fact that this happens is outside your control...!)
As long as people keep coming up with solutions to the various Python version and dependency problems, eventually all possible solutions will have been implemented, and we can finally agree on the best one. :p
Abandon hope all ye who enter
On my laptop that shortcut doubles as a log dump for the track pad driver and every time you press it it freezes the machine for a couple seconds to do it. 
Use xlsxwriter for that, you can position df on worsheets the way you want
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Because for the "1 char" the editor can be configured to show it as how many character spaces it chooses. This makes tabs _visually_ inconsistent. If I open a file in an editor and I suddenly see 2 spaces (that is 1 tab) but in a different editor (or maybe in the terminal) I look at the file and it's 4 spaces, that violates POLA. Whereas with spaces you _know_ what indentation level you're at when looking at the code in any visual format, since it's always the same as 4 space widths worth of space..
Have you looked at CPAN modules lately? hell look at the majority of javascript even. (Yes "full-stack"programmers are still programmers). Easy to devolve into unread-ability is one of the reasons why most people hate Perl now. (There's a reason why "perlmonks" is literally a thing.). Braces encourage laziness. How many ajax calls have you seen where it's all crammed in on a single line? I have to deal with that shit every day. If they'd been forced to indent, they would have factored out their nested callback hell ages ago, but here they're content relying on an IDE tracking the number of braces they're inside of.).
 :set syntax=on shiftwidth=4 softtabstop=4 tabstop=4 expandtab smartindent smarttab
Have you modified your PyCharm JVM settings for additional stack/heap space? Maybe you ran out of RAM.
This is odd (and a bit unexpected) but I don't see cpython in there. Its not under Python or C++ (it should be under Python and C... because one can contribute to Python with both of those)
In use nano...FML
I appreciate first class support for the `attrs` module. Fills a real void before data classes catch on.
Rust is missing from the language dropdown.
Generate QR codes from the files, scan them, bada bing bada boom you got the files
The languages are obtained from the Github API, which only returns the most used language in a project. I'll look into getting multiple-languages-per-project implemented somehow.
You can just inherit a chain of classes and organize methods by file. It makes for an unhappy pylint, but not a huge deal. The other way is to totally redesign your class.
Not sure how I missed that- I'll add it soon
I used pastebin for an entire project in first year
Space bar
Looks nice. One suggestion is to move subreddit, keywords, api details into a configuration file. I have never used Jinja before. I might start using it for simple projects. Thanks for that!
Lol I know right, people can’t take a joke on this sub community. Hopefully other python communities aren’t like this.
glad you liked it :) , Yes I was thinking to do that, Jinja comes with Flask, it's nice and fast when you want some server-side rendering. Also, give it a star please if you liked it ;) 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
soft tabs?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
There are two ways to do this. Probably the better one is to use composition: factor related methods and variables out into their own classes, and compose them together in the large class. Simple example: class DataFetcher: def __init__(self, a): self.a = a def fetch(self): # do whatever you need to return data class DataProcessor: def __init__(self, b): self.b = b def process(self, data): # do whatever you need to return processed class DataFetcherAndComposer: def __init__(self, a, b): self.fetcher = DataFetcher(a) self.processor = DataProcessor(b) def fetch_and_compose(self, c): data = self.fetcher.fetch(c) return self.processor.process(data) This is called composition. The other alternative is to split functionality into which bits you think might be reusable by other bits of code, at various levels of complexity, and make a chain of inheritance where you only have to add a few methods at each level of the hierarchy.
`:set noexpandtab` ಠ_ಠ
This is the best book on Python IMO. Close second is Effective Python
&gt; You ~~could~~ **should, always without exception, why do we even bother with `unittest`** also use pytest as a test runner
That doesn't sound very grumpy to me; I think expecting emotional work on top of that pro bono work is a little much.
Indentation errors are a non-issue. Y u no code good?
Seriously my biggest frustration with Python
Imo, it's kind of pointless to a degree. Something shouldn't just not work because of spacing. It causes me a fair bit of frustration at times and I'm pretty seasoned
Is python your first or forest really hard language. Most other languages don't have such an emphasis or no emphasis at all on spacing conventions. So for me it's challenging because I learned Python after learning languages where spacing wouldn't blow you up
Not really, I've seen plenty of very ugly Python code
Just YAPF and move on with your life.
Imagine you write a script that requires 5 levels of indentation. Now you refactor, and decide to put everything that was in the 3rd level of indentation, and beyond, into its own function. This function is defined at the top level of your script. Now you have one helper function, containing 3 indents, and a main with a call to that helper, only 2 indents. Thus, pulling code out to a function reduced the overall max indentation in your script. In general, code should be put into functions for reasons other than indent level, but if you find yourself indenting excessively it's a sign that the code may be due for a refactor.
why switching to PostgreSQL ? to save license money ?
&gt; use only the core what do you mean by "the core" ?
I learned Java first, then Python, then revisited Javascript (es6 and higher). I'm entirely self-taught (a side from cs50 and internet resources). My Java code was always well-indented and -spaced because it helps me read what I wrote. I always viewed making the code readable and consistent as a primary part of programming.
I mean I know readable code is important, but I would at least in part argue that comments are for more issue than spacing conventions. I can clean a lot more high level from comments than I can from just reading through lines of code
Ah got it. Thanks. Any suggestions for work arounds or other .exe converters?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I'm not sure where comments fit into this (do doc strings also count?). For me, they sit at the same indentation as the code block it describes. My comments discuss why I chose to do something or a one-liner for large, important but obvious code blocks. I also sometimes use them to section out blocks as a brief summary for easy quick scrolling. It sounds like managing comments can also be a challenge when learning. 
&gt;Is there something you wish you knew early on Not really. You don't really need to be a software engineer to use Python in a non-tech field. You just need to get familiar with what will be useful.
"Jump through all these hoops, some of which won't even assist people depending on their condition" Vs "Propose optional bracing functionality in python. Instead of colon, newline, indent being a group, allow the use of two grouping characters and the already functional semi colon to designate new statements"
looks cool,good idea! :)
Adding another option, specifically braces, is simple. There already exists a transpiler from Bython, literally Python with braces, to Python. Now it's just a matter of modifying the actual C parser instead of having it at a higher level. The Python style guide is irrelevant to the writability of code by people with visual disabilities.
Serious question, why don't we want the developer to have control over the indentation level? Why is it preferable that you get to control the indents on my screen? What if I prefer 2 and you prefer 4?
As someone who sometimes programs on my phone I'll give you my reason. * It's easy. All you *have* to have is termux. It's got the ssh, git, editor, and interpreter. I enjoy programming. I do it for fun. So if I'm ever in a situation where I have some downtime and I'm away from my computer I'll play on my phone. Right now my setup is mgit, quickedit, and codeboard. It takes no effort at all to pull whatever I'm working on and start editing. Plus being familiar with the process has helped out a couple times when I was able to push a quick fix or make a small change at a moment's notice. What I think a lot of people in this thread are missing though, is that everyone keeps saying that they "sometimes program on their phone". But people keep reading it as "I exclusively program on my phone." The majority of the time I'm working from my home computer. But if I own a device that I carry around all day; and it's capable of performing development functions; why on earth wouldn't I program on it?
it's really convenient for pulling up a quick diff/history
PEP-8 again. 4 spaces.
Edit: 26 downvotes?
Does PEP-8 answer the question I just posed?
Yes.
I've had indentations problems in Python files twice, both times were my fault, and both times, my ide caught them. The first time was when I decided I only needed 2 spaces worth of indentation so I could nest more deeply. Then I had to change all my code from 4 to 2 (that vim script too my like 5 minutes to figure out cuz I was new). The second time was when I learned to refactor and went back to 4 spaces so I'd be in line with common style. That time, the vim script took slightly longer because it kept infinitely recursing. Neither time led to an actual indentation error being thrown by the interpreter because the interpreter never saw the code.
But just as soon as we decide what it is we value most it becomes an optimization problem with (in this case) a single global maximum. ;)
out of curiousity, what do you mean you "highlight a block of code and it often won't indent it correctly"? I'm trying to understand your issue since I can't recall ever having an issue with whitespace in Python.
doesn't work for me, I get this error, &gt; TemplateAssertionError: no filter named 'date'
I wish it natively supported poetry :( But all these other improvements are awesome. Can’t wait to try out the pytest stuff 
I’ll stick with Docker. 
Not major but definitely a timesaver... Working on a script that reads a database and determines if backup is needed to be uploaded for our customers. If it is, the script uses the requests library to upload the necessary files. Currently, our receivables system isn’t well supported so, I’m the Accounting guy trying to get the efficiencies!
Sounds reasonable. 
Any Python-based tool to control Python dependencies is intrinsically poorly because the bootstrapping is a pain in the butt. Pex is almost okay but it gets screwed up when you upgrade your homebrew. Honestly, I think if you want something that really works in this realm, you should just write it in Go and distribute a static binary. 
r/learnpython A bit of a search in that subreddit as well as this one will yield enough results to get you going, as this sort of question gets asked a lot as you can imagine.
this doesn't work on Windows ?
Yeah I was aware of that sub. I guess I just wanted to hear if there was anything someone wished they knew when they first started out. 
Let me guess...suit and tie in every single one of them videos ;)
Some (not all) editors are configurable such that pressing tab enters a configurable number of spaces (rather than an actual tab character)
because in the [real world](https://thedailywtf.com/series/code-sod), [other people](https://github.com/torvalds/linux/pulls) than you will probably need to be able to read your code.
Yes it perfect for that. You need to choose a backend for it I recommend you choose RabbitMQ(Best Option) or Redis. 
&gt;If you can't write code with proper indentation unless the ~~compiler~~ interpreter forces you to, you're a moron. This feature is pretty damn pointless on Python Python "forces" you to indent as much as other languages "force" you to use braces. It's part of the syntax, not training wheels. It lets you not worry about matching braces.
Oh look, a condescending non-answer. *why not use tabs and let me worry about indentation?* Are you not answering because there isn't a good answer? 
I'm not at my development machine at the moment, but unless I misunderstand the way the auto-indent feature works in Pycharm, you must select the code you want auto-intended first. Sometimes I'll copy and paste from one part of my application to another and so the indenting is off. I'm anal retentive, so I always fix the indenting anyways. Sometimes you just want to see what happens with your hacked code though and worry about indenting later. 
You can combine regex with the or operator |. re.compile('[a-z]|[0-9]') will match lower case letters and numbers. And follow snake_case convention while naming variables. 
Can you explain what this is demonstrating?
Thanks everyone. Decided to go with just the task scheduler for now as that is easiest to implement. Where we are in the development stage is like a baby crawling versus you guys who are full on marathon sprinters.
#1 Ask for help. Lol. Never knew I was a master!
Aside from your posting this in the wrong forum, no one is going to help you if you post unformatted (and thus un-indented) Python code.
Fair enough, figured it out. (Was using i as an index rather than as an iterator!) I’ll delete it now. Thanks.
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Couple tips: 1. you should deploy this to heroku so people can use a single account you control. 2. also, you dont need the \*.pyc files in your repo, add them to your .gitignore. 3. finally, i would suggest you give it a more robust structure in case you want to expand it. /home/user/Projects/flask-tutorial ├── flaskr/ │ ├── __init__.py │ ├── db.py │ ├── schema.sql │ ├── auth.py │ ├── blog.py │ ├── templates/ │ │ ├── base.html │ │ ├── auth/ │ │ │ ├── login.html │ │ │ └── register.html │ │ └── blog/ │ │ ├── create.html │ │ ├── index.html │ │ └── update.html │ └── static/ │ └── style.css ├── tests/ │ ├── conftest.py │ ├── data.sql │ ├── test_factory.py │ ├── test_db.py │ ├── test_auth.py │ └── test_blog.py ├── venv/ ├── setup.py └── MANIFEST.in
Amazed at the number of Pycharm devotees that come out of the woodwork when editors/tooling gets brought up. I like it fine - a little slow perhaps, but I work for the government so every laptop is slow. I will say - and please keep in mind that I’ve hated everything M$FT since elementary school - VS Code is getting damned good. Robust community, tons of extensions (I think it poached most of Sublime’s PackageControl.io); including many useful Python ones. The best extension, though, and the most germane for the this question: [Black](https://github.com/ambv/black). It’ll solve your indentation problem very quickly. And many others you don’t even realize yet. 
Look into the PEP process a proposal for that would never pass
Fuck heroku, the entire app can be done client side. This can be put on something like github io pages with a few lines of javascript instead of python, and replacing the auth flow with "installed app" (name is garbage, it really means 'any app where the authentication to reddit is completely client side') oauth2. I mean good job and all to this guy but in it's current state an actual backend server of *any* kind is complete and utter overkill.
I thought you were going to share news about pyinstaller and python 3.7...
Yes, it may be an overkill but they have set out to do something and applied learnt knowledge to accomplish it. That's what projects like this are for; accomplishment and learning. Originally they may not have known that you could use client side authentication but now they do; they have learnt.
The merge tool in pycharm I found to be way better than git kraken
\*claps\*
lol, I know, right? So many haters / indentation fan boys
Perl is horrible. I don't think braces encourage laziness, at least I've never really seen it. It's not hard to get braces right. JavaScript is a hack to begin with, even when written well it's making the best out of a shitty situation. Even when there's call back hell, I still see proper indentation for nested callbacks... And besides, JS engineers (worth their salt) love their promises, specifically to avoid that. Soooo... only n00b JS coders would have call back hell to begin with, and the worst of the worst wouldn't properly indent it.
Python was designed to be readable so it kinda makes sense
The music adds so much drama - Go nodes go!
Not arguing at all... Just saying four space indents don't make code much more readable... I've seen ugly Python too... So is it worth it
Breadth First Search, its a graph traversal algorithm that uses a queue to iteratively go through nodes in the distance they appear from the node you start at
Data is sourced from a server in work, all claims data is automatically batched once a month and sent to this server. That's an IT process that's been in operation for donkeys' years. It's then just a matter of manipulating the data on our end from there. Through legacy processes that have existed since well before I started at the company the data is pulled off the server and then our SAS processes pump out various CSV files for our various reports. Obviously, there's quite a few inefficiencies here but the Claims Analytics team is quite young and we haven't had time to migrate to a better process yet, but we're getting there.
I'm not shitting on OP-- it's great that he did something he enjoys. I'm just saying that it is overkill, and the comment's recommendation is also overkill, so I'm providing the cheapest (literally free), simplest (easy to change to snoowrap or something else) solution.
A meta language does exist, Bython. It's also simple to put into the core parser. You can't claim it won't ever pass until you try and bring up the actual reasons why you want it.
Thank you. Only Python coders are so obsessed with indentation. For every other language it's par for the course. Many people replying to me make it seem like Python is a sanctuary of proper indentation, and any code written in other languages is chaos with no indentation at all. It's not hard at all to get indentation right, and for all the great things about Python, it's strict enforcing of indentation is not one of them.
wut? this is obviously r/ProgrammerHumor material. I mean the only reason one would have indentation errors if they went across IDEs with different indentation formats.
/u/Trollabot DeadLantern-
/u/Trollabot DeadLantern-
I've seen several different styles of indentation within Python. Tabs vs. Spaces for instance. But when talking about spaces, there's many variations based on the number of spaces. Of course, Tabs vs. Spaces is a topic of debate in all languages, so that factors out. Whats left? Well some people like their opening brace on the same line, like: someFunction(){ and others like it on the next line: someFunction() { Outside that distinction, braces don't affect coding style at all. Both languages can debate Tabs Vs. Spaces Vs. Number of spaces, so it's moot. Python is one of many languages I work in, and outside Python I really don't run into problems with indentation. Anyone who thinks non-Python languages have indentation problems has psychosis.
Open up dev tools on the browser and just look at the post request the browser is sending and mimic that in requests
Maybe post what your algorithm to calculate the parabolic SAR is? Have you compared your derivation to the reference? Is it possible that IG has tweaked or made theirs custom?
pyproject.toml and or poetry integration. pipenv is great but it and Pipfiles, but are * not standard * have no PEP (pyproject.toml has two, provisional) * pip doesn't support Pipfiles, but does support pyproject.toml. Talk about irony * the author has controversy on this subreddit because he shat on us and never apologized to anyone. Oh and I can't wait for better mixin based duck typing support and documentation support. PyCharm currently uses their own custom renderer, but I'd really wish they use sphinx's to xml if available, then just apply style to it (documentation in PyCharm can look wildly different than in actual sphinx output because it is extremely limited in what it knows).
The built in diff viewer is nice because you can edit in the diff and have the changes propogate. Great for quick fixes that need a before and after to double check on. Other than that, I use the built in stuff sometimes merely because it's faster to use keyboard shortcut and press enter than to type out the command. But anything complex I use the terminal.
That reminds me, did they ever fix the bug where some html/js templates in mako/jinja/whatever can eat your ram and stall the IDE? I just don't know because I haven't used such in a long time, but it was a damned problem. I had to change my stack size to 2.5 gigs just so it wouldn't crash on viewing those files and leaving them open for a few minutes.
I’ve already mimicked the requests but it’s not logging in. Any ideas?
&gt; Did you know the PyCharm debugger can attach to any running Python process on your computer? If you’re running a lot of different Python processes simultaneously this might get unwieldy. Specify a filter for your program’s name in Settings | Build, Execution, Deployment | Python debugger and get to your target quicker Holy fuck I think I just had some kind of IT-gasm.
People shitting on an Open Source project? Throw in a PR if you don't like something or STFU. Kudos OP
I was skeptical at first also. Then one day I turned on the Annotate feature which displays the name of the person that committed each line next to line number of that line. Being able to immediately see who the hell wrote this garbage (surprise! It was me 9 months ago!) is *so fucking handy*. Clicking on the name opens a dialog showing the commit message for the commit that line belongs to as well as the tree of files changed, and then that dialog has a diff button that shows me the diff if I still need it. All without having to go anywhere else. It seems so mundane, but really it’s just so handy. I use his probably four or five times a week, sometimes I just leave it on when I’m in a file I edit constantly just to see who else has been there recently. I love this feature. 
They set out to solve a problem, but only contributed to making it worse. https://xkcd.com/927/
Helps if you show code and the request being sent from the browser also
Learning to use Python because, I am a complete noob at programming but I seriously wanna get into it and I’m struggling, but still optimistic and having fun!
I'm still waiting for pytest.mark recognition but I saw on youtrack that this is in progress ;)
I use it a lot to check code before commit and merge tool is awesome too.
¯\_(ツ)_/¯ 
You dropped this \ *** ^^&amp;#32;To&amp;#32;prevent&amp;#32;anymore&amp;#32;lost&amp;#32;limbs&amp;#32;throughout&amp;#32;Reddit,&amp;#32;correctly&amp;#32;escape&amp;#32;the&amp;#32;arms&amp;#32;and&amp;#32;shoulders&amp;#32;by&amp;#32;typing&amp;#32;the&amp;#32;shrug&amp;#32;as&amp;#32;`¯\\\_(ツ)_/¯`&amp;#32;or&amp;#32;`¯\\\_(ツ)\_/¯` [^^Click&amp;#32;here&amp;#32;to&amp;#32;see&amp;#32;why&amp;#32;this&amp;#32;is&amp;#32;necessary](https://np.reddit.com/r/OutOfTheLoop/comments/3fbrg3/is_there_a_reason_why_the_arm_is_always_missing/ctn5gbf/)
&gt; "Code is more often read than executed" I'm pretty sure this is supposed to say "than written".
The website "practical business python" is probably worth some of your time, it has several articles about how to do in python tbonfo you would have done in excel, I found it helpful while I was getting started.
Kinda. The idea of PEP-8 is to make Python code consistent everywhere, in order to ease the understanding of it. If you're used to use 2 spaces (or any other PEP-8 requirement, like two blank lines between functions), and I'm used to 8 spaces, we're going to face some difficulties when trying to read each other's code. Of course, this isn't a must, but I think consistency fits well the zen of Python as it makes it much easier to read and share code.
Exactly the relevant xkcd I was expecting to see when I saw the OP. 
So ELI5: what makes lore better than other solutions like pipenv? I'll settle for what makes it different in any meaningful way, whether that difference is good or bad. 
Yes fuck heroku 
Not a bad idea. It would be nice to have a venv and dependency management system that isn't a Python dependency itself. 
vote on https://youtrack.jetbrains.com/issue/PY-30702
Try /r/cscareerquestions 
vote on https://youtrack.jetbrains.com/issue/PY-30702 and maybe it'll happen
Also: 1. You don't need the `.idea` folder 2. `db.py` appears to be empty
&gt; the author has controversy on this subreddit because he shat on us and never apologized to anyone. This sub gets its knickers in a twist over the dumbest things sometimes.
Thanks man, I will delete this post.
Now.sh is really nice for these kind of stuff
Look into Django or Flask for this sort of thing.
should we start a fund-raising campaign to see Fluent python v2 already?
although I don't (yet) see the point of DI libraries, I wanted to comment on "pattern does not require a library" thingy. Patterns often require implementation, like https://pypi.org/project/singledispatch/ I believe such libraries even become a part of stdlib sometimes. Again, my comment is not about this DI thing.
/r/learnpython/wiki
Can you post a link on an example of how to do this or exactly what I would google to understand how to do something like that?
Try Visual code. It's like sublime but better. I used sublime for years then tried Visual code and never used sublime again. Everything is more organized, works almost out of the box. Give it a try someday. 
I can see a lot of use cases for this, but sadly it would not solve my problem.... Since there's no way i could upload or send the files back to the server after some aditional development.
Now.shhh Let people enjoy things.
Agreed. I just starting learning the Flask framework and I just deployed my first Python web app. It is very easy and well documented. Go give it a try! :D
Yea, I get ya. Just saying, we can't forget about these important moments and how much they teach us.
I really wanted to try poetry but I'm not sure where to start. Maybe next new project
There are couple of python Free E- books that might help you. 1. [Learn Python Basic , IPython, NumPy, Pandas, Matplotlib, Scikit-Learn](http://www.learnfreecourses.com/2018/07/2-e-books-to-learn-python-basic-ipython.html) 2. [Learn Python Programming for Beginners](https://www.learnfreecourses.com/2018/02/learn-python-programming-for-beginners.html) 3. [Free Python books for novice and expert Python developers ](https://www.learnfreecourses.com/2018/01/free-python-books-for-novice-and-expert.html)
Agreed 100%. This is a subreddit and not your mother he talked about. Just let it go already.
In Java when you have a line length limit for checkstyle, it's not always clear how to indent when you add a newline character to roll over to the next line, so from this alone you can end up with wildly differing indentations.
Tab set to four spaces and be done with it. I've seen too many people use space bar for indenting. 
Dude, move to vim. Joke aside, vim can have absolutely fantastic auto-complete. Don't underestimate it. Vim makes a great working environment... And then there is emacs.... Emacs.... 
Dude you're using it wrong. Pycharm will even fix poor indentation when pasting from another source as well as smart pasting in general. Let's not forget that reformatting the entire document to be pep8 compliant is like three key strokes or a single button in the menu. 
I use tab... It's just mapped to four spaces or in most IDEs to indent and not actually output \t
Thank you for the amzing advices man, I'll look into that :D
Thank you for the amzing advices man, I'll look into that :D
Nice! Can you do the same for flask?
First time you open a new editor, find the tab/spaces setting and set tab to input 4 spaces.
Windows has services, GNU/Linux is mostly systemd now, macOS has launchd plists. They're all policy-based. You want a single command that invoked the start/stop command of all three? Or are you looking for something agnostic to all of them, like dockerd or supervisord?
My coworkers have recently introduced me to AWS Lambda and it looks like it could be used as the center piece of an "API as a Service" business very quickly. I'll let you read up on it but if I understand correctly, your setup would look like this: - Put your model and its files on an EC2 instance - Put your function on a Lambda and have it reference the model and its files in the EC2 - Wrap your Lambda around an API Gateway (another AWS product) and there you can manage access keys, usage plans, etc. If you decide to go this route, I'd love to hear about your progress. I'm hoping to do something similar (not forecasting) but haven't had the time to put it together. Best of luck!
Termux is cool ... but I wouldn't say it's easy... \*lots\* of things work on termux, but enough don't that it gets slightly weird. And typing is painful whatever keyboard you use.
Personally, I absolutely loved the following 2 video courses from Jessica McKellar. She's a great teacher and it totally worked me. - http://shop.oreilly.com/product/110000448.do - http://shop.oreilly.com/product/0636920049852.do
If the start and end are indented differently, then things tend to go wrong when you paste, I guess because there isn't really a correct answer there, though they could probably do better.
Because the majority of projects involve more than one developer. Imagine if spaces and tabs are mixed (which invariably happens if one person uses tabs).
I think systemd and friends all require root and are system-wide? I want something that runs unprivileged, per user. So `foo.py start` would start the process to run in the background (store a pid file somewhere probably) and `foo.py stop` would stop it. Functionality wise what py_daemoniker provides is what I want/need. The code in question is on [github](https://github.com/ojii/blackfast/blob/a517fb11818f9a71dd9a0ccdccb076cf844b5ce3/src/blackfast/server.py#L222-L238).
It was a short answer but it is correct. Indentation will break, how should python interpret a function with 2 spaces for two lines, and then the next lines are tabs? For one person it will look like they have the same indentation (mr 2 spaces) for the next it will look wrong. Easier to have no ambiguity and use spaces.
This is really inspiring thanks for sharing. As someone who is still 'learning' great to get inspiration like this.
The downside? &gt; javascript instead of python
Improving horrible python in other subs: 
https://docs.python.org/3/tutorial/index.html
Where is the "nasty response" and the grumpyness? I don't see it.
https://github.com/LonamiWebs/Telethon
Thanks. It seems great. 
I removed the '|date' on line 64 in templates/results.html.It was working but time is in epoch.i think OP forgot to add code for rendering date in jinja.
Yes. Solve the whole problem instead of applying another bandaid. 
If you found that easier than curly braces then I'm not sure what kind of a creature you are. 
We use it all the time at my company (15 Python devs. About the same in Java devs using IntelliJ) - working with branches is a doddle. Rebasing onto latest master is a couple of trivial clicks. Commit and push is nice and easy. Submodules are handled really well - easy switching between branches and commits of any or all of the main repos/submodules at a time. The diff / merge UIs are wonderful. And so on! I do switch to the terminal to do gnarly stuff with the reflog, or to rebase-squash/reset/cherry-pick something.
You should be able to do something like below, using the PIL package. This function takes the name of a file, the x and y pixel bounds of where you want the shading to occur, and an RGB tuple specifying the shade. Then, it reads in the file, loads the pixel data, and applies the shade by looping through each pixel in the range. from PIL import Image def shade_image(image_file_name, x_lower, x_upper, y_lower, y_upper, shade): # open image im = Image.open(image_file_name) # load image's pixel data pix = im.load() for x in range(x_lower, x_upper + 1): for y in range(y_lower, y_upper + 1): pix[x,y] = shade return im # call function on a particular file shade_image("some_image_file.jpeg", 200, 400, 250, 350, (255,255,255)) 
My recommendations... * Use objects * Add tests * Improve the package manager (use pipenv?) * Use Env. vars instead of the ini file * Use more/better exception and raise as mentioned * Use the coding standard as other mention * Add logging as other mention 
If you're honestly going to claim a major difference, fine. But not on such a small project
ELI5 why I'd use this please?
Which part?
The using JavaScript to run the python on github.io. Or am I completely lost in what you described?
Continuing along the 'look and feel' improvement effort.... today 2.5 will be released with new color options. Tweak your form's look easily with new settings. [https://user-images.githubusercontent.com/13696193/43260055-4c24bf0e-90a6-11e8-86e2-888a2b4be2da.jpg](https://user-images.githubusercontent.com/13696193/43260055-4c24bf0e-90a6-11e8-86e2-888a2b4be2da.jpg)
To call 200k people assholes, not take any responsibility for his absolute dick attitude, and to claim it was all bipolar disorder, is disgusting on many different levels.
Unfortunately pyproject.toml does not mean poetry, so I don't really agree with the specfics
you should take a look at "telepot".
i really like the built-in git stuff from Jetbrains IDEs, i even like them more that gitkraken or sourcetree for example 
I'm saying instead of using Python, use Javascript. This "server" and site has 3 paths to 4 different pages and maybe 1 *simple* html template total. Code wise, the template is rendered by taking a look at the query parameter, searching a modified version of it on reddit.com/search, and then for each result showing some html. The literal exact same thing could be done 100% client side with JS, and Github pages supports static websites with any amount of client side JS.
So what if this is a subreddit? He personally insulted each and every one of us, all at the same time writing off all his wrongdoings on his condition, which is an insult to people that have it. He started a disgusting shitshow because he took something that wasn't personal and was constructive and made it personal and saw it as only negative. He has and had infinite chances to simply apologies and everyone would let bygones be bygones. But he hasn't. I can not actively support someone like him, whose behavior is this disgusting.
I looked at it. It seems like a "bot-only", which I don't look for. 
I looked at it. It seems like a "bot-only", which I don't look for. 
This is fantastic. Thanks so much. What if my area is not a rectangular region but is irregularly shaped? How would I go about defining it?
Maybe try clicking on the links and read like I just did: https://github.com/ets-labs/python-dependency-injector/blob/master/README.rst
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [ets-labs/python-dependency-injector/.../**README.rst** (master → 8cc00de)](https://github.com/ets-labs/python-dependency-injector/blob/8cc00dee8351e624fa0929186c76e38be82f6d38/README.rst) ---- 
This new language construct will help me reduce vertical space, already premium real-estate by virtue of semantic whitespace. This is a genius move. I am disheartened to hear that so many have pushed back.
"Rewrite the code from scratch"
also https://github.com/pyrogram/pyrogram
hes in a Python sub sharing his work with the language so give him a break, there will always be better ways to get something done.
\*deep breath* tab set to tab.
If you are a sysadmin, look after the modules "os", "shutil" and "pathlib". The best way to learn is doing it. Instead of Bash scripts, try to write Python scripts. You can read tons of books, without practice they are nothing.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Dude give it a rest.
"Give him a break?" I'm not shitting on the guy! You suggested something which is overly complicated for an already overly complicated project. I merely provided commentary to expand his horizons to maybe learn a very small amount of JS, and then he can more easily share his project to be used by all. There is *nothing* that deserves praise but can't be improved. I am making aware of a way to improve.
no
“What does writing pythonic code mean and why is it important?” If someone can’t answer the question directly, they probably don’t know.
"Pythonic" doesn't really mean much in the first place - it's just a fancy synonym for "idiomatic". And what is and is not idiomatic is at least in part a matter of taste. The part that isn't has two sides: agreed-upon community standards like PEP-8, and using the language "the way it's meant to be used". For example, instead of checking for types ("is this thing of type 'duck'"), check for methods ("can this thing 'quack'"). Or, name things even if no name can possibly add any valuable information - simply because anonymous things tend to make for clumsy and confusing syntax in Python (and this seems to be by design). Or, instead of having long chains of `elif`, use dictionaries to dispatch method calls based on some value. Stuff like that. The best way to check for this is to simply look at code samples - and really, "Pythonic" isn't a goal in itself, it's an attempt at summarizing strategies for keeping code readable and maintainable without sacrificing too much efficiency. So instead of presenting candidates with a quiz about Pythonicness, or having them recite `import this`, how about you just read their code and see if you can easily make sense of it, if you could easily refactor it without breaking anything, but also if there's any accidental complexity, boilerplate or clumsiness that could be expressed more clearly in other ways. You may then want to talk about the design choices that led to the code sample in question, and hopefully this will spark a professional discussion about strategies for code maintainability and all sorts of related topics.
Ask them to sum a list of integers. Do they do this; total = 0 for index in range(len(mylist)): total += mylist[index] Or this; total = 0 for number in mylist: total += number Or this? total = sum(mylist)
How did you decide/figure out this project?
There are a lot of things I would do if I wasn't stuck on 2.7.
Learn to indent properly. I seriouslty hated other CS students in the middle of the screen with identation, and code just everywhere, and then wondering why their code didn't work with the stupid excuse of "oh but i can just get the editor to fix it for me". The fact Python **forces** you to pick up this good habbit is a really good thing.
It doesn't make anything better for CS students. They'll just throw braces everywhere and complain their code doesn't work.
Its not like he can't use typescript. Hell, even on the cutting edge he could compiler it to webassembly
Everywhere. PyCharm checks them by default and tells me about bugs before they get committed
Haha, thanks for the info. I'll look into it. Might be able to streamline scanning our own documents, but 50+ other formats from other companies might a TON of work! You're using photos? Not Scans? Seems like the contrast would vary. Thanks again, N8DuhGr8.
Yaml is trash, agree.
This. 
I sprinkle them in when I'm cleaning up the code. I've found that when I'm developing it gets annoying changing them when I am refactoring. I love that they are optional. It is the best of both worlds. Rapid development by default, but extra security and speed when you want it. 
Author here. You could interchange ‘written’ or ‘executed’ here as the point is still the same. I’m quoting a brief conversation I remember having with him where he said ‘executed’. It’s possible I remembered incorrectly but for now I’ll stick to it. 
Yes. I have been using the mypy syntax for types nearly everyhere in mycode for quite some time now. I'm quite happy with it. Python 3.7 even makes the syntax simpler with from __future__ import annotations
Only learned about those recently. Been trying to use them on larger scale project more vs. smaller, one time use ones. 
What a useful hotkey!
Thanks for your feedbacks guys! I'm gonna take aat your advices! Thanks a lot! 
[the core](http://docs.sqlalchemy.org/en/latest/core/)
Yes, and as a matter of fact I just published a blogpost about it: [https://blog.daftcode.pl/first-steps-with-python-type-system-30e4296722af](https://blog.daftcode.pl/first-steps-with-python-type-system-30e4296722af). Quite basic, more advanced one is coming next week. Hope it helps :)
Why still on 2.7? 
I've been experimenting due to Pycharm, but I still really don't like them. They make the code verbose with, in my opinion, low real value. And I end up writing extra to make Pycharm happy.
JSON is really a typing.Union of all basic python primatives
Pycharm uses its own type checker, sadly. Have to run mypy as an external tool :-(
I don't see that as a problem. You get double checks this way.
Regarding json parsing, I haven’t used it myself, but the mypy_extensions contains a typeddict. It allows you to represent a *schema* in a dict. See [github](https://github.com/python/mypy/blob/master/extensions/mypy_extensions.py) &amp; [docs](https://mypy.readthedocs.io/en/latest/more_types.html).
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [python/mypy/.../**mypy_extensions.py** (master → 0725333)](https://github.com/python/mypy/blob/0725333d60a753bc0b7dfd0401de37f3395cc66f/extensions/mypy_extensions.py) ---- 
That's an unsolved problem with things like JSON. You could use XML there, which has an actual schema.
Yep
An array, a string, an integer of float, a bool and a null are also a valid JSONs. In my experience the best way to express unspecified JSON is to use \`Any\`.
Have you installed `matplotlib`?
Yes. Made sure I did that first
Your JSON issue is one of the fundamental problems with static typing. You'd have to go into the trouble of making a python object with all the type information in it (like in java). There was a long [discussion](https://github.com/python/typing/issues/182) about it on the typing github. 
But I installed it in terminal. Do I have to install it in sublime text editor? 
https://stackoverflow.com/questions/18176591/importerror-no-module-named-matplotlib-pyplot
I don't agree. It is quite close. But I think it less helpful to write Union[int, str, None, bool, dict, list, tuple] # all-ish basc types except for bytes compared to Dict[str, Any] A realy definition of JSON would need a recursive data type definition. But AFAIK that isn't possible in mypy. There is beauty in simplicity though, so I'm fine with the compromise. 
You can't send requests to some pages using API because you show API key in the request! Sometimes you cant use javascript because CORS!
I wish Pycharm supported completion of dict keys using this :(
I don’t think that the whole story is being represented here. I recall the events being referenced, but remember quite a bit more to the story. I didn’t feel insulted at all. Much less ‘personally’ insulted. (Kenneth has no idea who I am. I’m would be difficult for him to insult me.) As I recall, the events began with scathing commentary about his work and attacks upon the recognition that one of his projects was receiving. I found his reaction a bit strong, but being an outsider, I don’t know what has gone on outside of my sight so I evaluated the strongly worded response as outside of my desire to care. Your response to Jetbrains announcement feels very much like the last incident. It sounds like a personal attack on an individual. Last time it stirred up the whole subreddit. If you have a personal beef with an individual in this community please deal with it elsewhere. Polluting this subreddit with crap like this is disrespectful to the community. If you feel compelled to trash talk someone write a blog, create another subreddit, start a Skype session, but leave those of us who are here for things actually about python out of your personal vendettas and campaigns. 
How did you install it?
I read the post, but it was a little over my head. Basically, instructions unclear. Can you tell me what to do in noob terms?
Is this running on the VMs in question? Or are you remotely scanning the VMs?
pip --user install matplotlib
I heard there was a newer RFC for JSON that allows scalar values as the root of an JSON document. However, all the code I work with still produces JSON to the old standard where the root level of the document must be a dict or list.
remotely
Your submission has been automatically removed. Accounts must be older than 2 weeks. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
What's the output of `pip --version`?
pip 18.0 from /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/pip (python 3.6) Copied and pasted directly
Nice ! I couldn't pause the video!
Initially I used them everywhere, but at some point I had to admit to myself that they are not really that useful, or at least that the significant increase of verbosity is not worth it. Although I made sure everything is annotated and ran mypy in stricter mode, I haven't noticed less programming errors and my code hasn't become more maintainable. The only (passable) benefit was better autocompletion in my text editor. This experience only confirmed my general observation that static typing is vastly overrated by recent wave of hype peddlers and Haskell zealots.
What's the output of this code: import sys print(sys.versioninfo(), sys.executable, sys.path) When ran in Sublime Text?
systemd supports running unprivileged services via the `--user` flag, e.g. `systemctl start --user foo.service` I'd recommend Monit if Docker or Supervisord don't work. I think you can use that without root access, and I think it runs everywhere.
VM platform?
The easiest way to understand it is probably [to look at some examples](https://pyformat.info/).
(sys.version_info(major=2, minor=7, micro=15, releaselevel='final', serial=0), '/usr/local/opt/python@2/bin/python2.7', ['/Users/roberto257/Desktop/python_work', '/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python27.zip', '/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7', '/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin', '/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac', '/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages', '/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk', '/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old', '/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload', '/usr/local/lib/python2.7/site-packages']) again, copied and pasted directly
Surely, you can type this in at the top: ``` JsonType = typing.Union[...] ``` And then use it elsewhere... 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
sorry it is going to be local 
So Sublime Text and your `pip` install are using different Python installs - Sublime uses your system's Python 2.7 binary, and `pip` uses the Python 3.6 I assume you installed. You'll need to configure Sublime to use the Python 3 install.
No, I didn't feel the need for type hints
Not that you mention it: I realize I have seen it before and decided not to use it. It seem to be kinda duplicate/conflicting with Namedtuples and Dataclasses. This kinda violates the simplicity of Python for me which I like so much. It also seems to have effects during runtime from what I understand. The other type annotations to not. Another thing I think goes into the wrong direction. 
This did not happen at all. People had constructive criticism on pipenv which he shut down and shut people up in extremely rude manners, then claimed he gets a pass because of his mental health issues. I feel personally insulted because I was one of the specific people he directly tried to shut down Lets bring in the whole story then, instead of spitting bs and downplaying the disgusting behavior. I will continue to call out Kenneth and his defenders for his absolute BS over the whole thing until he apologizes to this community. A copypasta of my last comment chain when Kenneth was brought up, with links to the event and within, links to specific atrocities. Every odd indent quote is me, even quote is someone defending Kenneth: https://www.reddit.com/r/Python/comments/8w3rga/everyone_should_take_the_time_to_browse_through/e1svwrd &gt; He's great at writing things for humans. &gt; He's not so great at interacting with them. He [shat on this entire community](https://www.reddit.com/r/python/comments/8kjv8x/_/?sort=top) when he couldn't take some criticism, and hasn't apologized whatsoever. &gt;&gt; I don't see what is so unreasonable. What to you is him shitting on the community? &gt;&gt;To those downvoting, I would rather hear your thoughts about it. &gt;&gt;&gt; * he took comstructive criticism of pipenv as personal attacks &gt;&gt;&gt; * he implied this community as overwhelmingly negative and toxic &gt;&gt;&gt; * he decided to make /r/positivepython to circlejerk himself &gt;&gt;&gt; * he decided to egotistically brush off any criticism of him, which mind you only occurred after he flew too close to the sun, as garbage. &gt;&gt;&gt; * consistently calls himself "Kenneth Reitz, of Requests fame" as if he is marketing himself, but then he denies it. &gt;&gt;&gt; * fosters negativity in many of his own communities, and there are various links of him doing so in multiple comments in that post, to both Github discussions and reddit discussions with him &gt;&gt;&gt; * rallied his twitter followers to his side, holding an "open" hangouts discussion where they circlejerked him to oblivion &gt;&gt;&gt; * disgraced everyone with bipolar disorder, constantly blaming many of his long term actions all on his condition &gt;&gt;&gt; The entire thing was a gigantic disgrace. And I didn't even mention all of it. &gt;&gt;&gt; And while I personally would more than gladly let bygones be bygones, if only he admitted his mistake and apologized to /r/Python, but no, he doubled down and defaced the pipenv repository for a little while in protest. And to this day, he still hasn't apologized, because he holds himself on that high horse. &gt;&gt;&gt;&gt; Honestly, I don't have a horse in the race (although I do use and like pipenv so conclude whatever you want about my own bias), but I think that's a bit harsh. He definitely didn't have the most mature reaction, but I think it's hard to have work you've done (for free?) criticized so heavily. Most of the comments were totally reasonable, but there were some that I think past constructive criticism. &gt;&gt;&gt;&gt;&gt;No. The large majority of comments on pipenv were completely constructive. The second he perceived it as a personal attack and got all offended, then people started actually attacking him. And, that, was too far to some extent. But not without reason-- he shut down their constructive criticism first in a completely narcissistic way. &gt;&gt;&gt;&gt;&gt;It does not matter if he puts the work crafted by God himself out there for free. It is great work, and we appreciate and applaud him on it. But we have the right to criticize it as well. &gt;&gt;&gt;&gt;&gt;He acted above all, as if he was the patron saint and God of Python himself. And thus, he was struck down. He had a glass house, and decided to throw stones.
How do I do that?
For me the great benefit is that I can read a function easier. I can see immediately what goes in and what is returned. If you read your code a few weeks later, it helps a lot. "It returns a list, but what is in that list? I don't remember...". But if you see " -&gt; List[Image]", then "OK, it returns a list of image objects".
Why do you think?
Right, in this case `Union[Dict[str, Any], List[Any]]` (or `List` instead of `List[Any]`) would be enough.
....this isn't true at all. If using installed app oauth2 the oauth token per request is the user's themselves, there is no security issue in letting them access it. Some android apps, like reddit sync, already show the full request info upon error to the user, including the oauth token, in case the user wants to figure out the issue / privately report it.
Ever heard of search engines? Just a few seconds to find [Water network model](http://wntr.readthedocs.io/en/latest/waternetworkmodel.html).
Yes. I just wanted to keep my comment short for simplicity.
Right :)
&gt; It gets annoying changing them when in developing when I might change from passing a list to passing just a string for example. I found this as well, I try to write utility functions to work on multiple types, usually so I can do things like call a function taking a number and give it a fraction to check my maths. It is kind of annoying adding type hints and having to lock a function down to a single type when it could do multiple early on. I once had to write a markov chain builder and runner for an assignment and later realised I'd written it in a way that I could just pass in a fraction and it would work perfectly, outputting fractional probabilities after for easy readability. That flexibility is one of the things I like about Python.
It also works with Python 2.7, but then you need an alternative syntax. Type hints must be written as comments, which is not so pretty.
I'm not too sure, to be honest. [This](https://gist.github.com/zaemiel/4fbd8b5125fda7a140be) might be helpful.
Because we love Python and we don't want to use anything else? ;)
Thanks for everything man. Still can’t get that link to help me either tho :(
Checkstyle is not part of the language. If you enforced a mandatory line-length on Python, it would suffer exactly in the same way. What's your point?
"Executed" means run by a computer, while "written" means written by a human programmer. And while it's true that code is more often read by human programmers than written by human programmers, it's not at all true that it's read more than executed: computers can easily execute the same script or software billions of times. Also, you're quoting Guido van Rossum, so if you're going to change the wording, the convention is to add [brackets] around the part you've changed. I don't mean to be a stickler, but this does change the meaning, the new meaning loses the insight of the original meaning, and you're also attributing it to someone.
&gt; And I end up writing extra to make Pycharm happy. PyCharm is happy without type hints too. Type hints are completely optional. You can also annotate just a part of your code and leave the rest un-annotated. It's up to you. IMO the real value comes out when you use it in a large(r) project.
One thing you could try is just using a different editor. For example, Visual Studio Code is great, has native Python support and a built-in command to choose the interpreter you want to use (Ctrl+Shift+P, Python: Select Interpreter).
Json can have schema. Just google json schema.
While I agree that I haven't seen any quality improvements from using type hints + mypy and mostly only use type annotations for dependency injection (see [molten](https://moltenframework.com)), I think this is mainly an issue with the fact that type checking is optional and most of the Python ecosystem is untyped. Having used Haskell and Elm a bunch, I do think types are valuable and they do seem to improve code quality in those languages. 
Virtual environments are not portable between computers. If you want to build a redistributable version of your program, look into PyInstaller. If you want to set up a development environment on another computer, look into Pipenv.
As I mentioned in my other comment here in the thread, I've stopped using type annotations for anything other than [dependency injection](https://moltenframework.com/#dependency-injection) (disclaimer: I make molten). The tooling is slow, types tend to be extremely verbose in Python and I haven't observed any improvements in code quality. Though I like typing in general (I've used Haskell and Elm a lot in the past -- and have even contributed to mypy), I think gradual typing just doesn't add all that much benefit.
I use mypy as linter in vscode. I annotate mainly function signature or in code if I need autocompletation. It seems to me that mypy is getting better and better. The same goes for vscode. I am absolutely happy with my settings.
Guys don't downvote it's a valid question. Google App Engine standard doesn't support Python 3.
Google App Engine standard doesn't support Python 3. I'm in the upgrade if you can camp, I don't get why so many people _choose_ to cling to 2.
I think you're missing my point. In most other engineering careers, you will move to a language with curlys. Machine Learning is a niche, and not the norm. R is an example of a machine learning language that has curlys, and like I said two posts ago: I guess it's on it's way out. So yea, nobody wants to switch to it by will. I never said that. But in the real world, after school, jobs are hard to find. Somebody might take a job at some house with legacy code written in R, and they'll move there, even if they don't want to.
For documenting exported/public functions, yes. I find it more elegant than using, say, Google-style docstrings with the types in there. That always felt like half-solution to me. Type hints help with that. mypy will pick it up when I write tests. For under/dunder methods I usually don't bother.
Thanks for the tip. It was very easy to set mypy as a linter in VSCode. I found the docs [here](https://code.visualstudio.com/docs/python/linting).
Extra security -- absolutely. Extra speed -- nope, typing is designed not to affect runtime and there are no compiler optimizations, at least not yet.
Do you have any referece how stable/production-ready the (python)-tooling around json schema is? 
I'm half and half on this. The nice thing about dynamic languages is that you don't have to declare types, and type hinting is sort of antithetical to that, but for any code that you're sharing and that others will read, it's nice to have hints so they can follow the basic idea of how your code is flowing.
Every time someone says this it makes my a little annoyed. You do realize static type checking isn't the ONLY criteria that people use to make decisions about languages? What if I want to Tensorflow, but also make sure I can catch simple type checking bugs?
&gt; Python 3.6 has a syntax extension that allows one to add static type hints. These hints can be checked with Mypy. A feature available initially for Python2, with the type notation in comments. What Python3 brought to the table is moving that notation from the comments to regular syntax.
Oh I don't contend with the idea that you should learn it, then. And yeah, curlys will be used in most others. That all makes sense. I thought you were claiming that because it exists, and because it uses curlys that somehow that meant the Python people would change to it, lol. Misunderstood you indeed I did. Yeah, I personally am making sure to have at least a background in both(r and Python), even if I prefer Python for most of what I do.
&gt; There are a lot of things I would do if I wasn't stuck on 2.7. http://mypy.readthedocs.io/en/stable/python2.html
My attitude is that type hints have no place in well organised code, except to conform to a style guide in a code base that also has poorly organised code. The type of an object is not material if it's purpose is expressed clearly. It's like when your refactoring a gnarly block with an extensive comment attached, you know it's time to move on when you feel comfortable deleting the comment.
It would not suffer in the same way, because in Python you can not just add arbitrary whitespace and indents. e.g. String alphabet = "abcdefghijk" + "lmnopqrstuvwxyz"; Arrays.asList(arr).stream().map(...) .filter() .collect(..); In Java you could have all kinds of valid indentation for those rollover lines.
This might be good news then! www.google.com/amp/s/www.theregister.co.uk/AMP/2018/07/25/google_app_engine_python_3/
I agree with your conclusion about typing in python to an extent, but I don't agree with your point about static typing in general. Sticking static typing onto what is a truly dynamic language isn't going to go so well, as there is so much that can't be done with types due to uncertainty about what the types actually are. I am a long time C++/Python guy and I have recently been dabbling into the more functional languages as a learning tool and it's been very nice working in a language (scala) that is statically typed, but has very powerful type deduction. You can still do the `val x = &lt;thing&gt;` just fine without having the verbosity of the types littering everything, but also get the compiler to make sure you aren't calling a function on something that wouldn't work with it. The one downside I will admit is that generics are harder (to get "duck" typing), using either direct subtyping or the more complicated type classes to do it. Once you grok the style it is pretty elegant, but getting there takes a little bit of time.
Except that *I* would be just as happy with *no* type hints, but I've been working with Python for about 20 years on large (up to 50-man) projects. 
I add type hints to all new code, but I am not running mypy in CICD yet.
I can read snake case better than CamelCase at this point, but the guy down the road prefers CamelCase. Function reading is definitely not easier with annotations for *me*.
That is awesome, thanks! I knew it was kinda on the roadmap but didn't realize it would happen so soon.
Yes. Our team started using them about a year ago, and basically any time we touch a new piece of code, we add type hints. We're still using 2.7 for the majority of our code, so we use use the comment syntax and `.pyi` stubs. A big reason for doing this is to help prepare us for the Python 3 transition; we expect that having type hints will make the inevitable mess with strings, unicodes, and bytes more tractable.
That's a completely moot point; python is dynamic. Static type checking provides a false sense of security that you've actually put together the code properly.
Yeah I would prefer Python as well. I briefly learned R and it's horrible. My friend asked me to describe what it's like, if we speak english, is R like german? french? japanese? I answer was "pidgin english" lol. R is a mess.
You can disable whatever inspection is complaining.
I find they are most useful for method and function signatures and class properties, especially when writing code other people will use. It slightly helps prevent bugs, but the primary benefit is speeding up the development process since you won't have to refer to docs for every little thing. For one-off scripts or scooped variables, almost never
Don't judge someone on whether they already know such a thing, judge how readily you think they could pick it up. Someone that already understands all the underlying concepts and is familiar with other languages will be able to figure out a list comprehensions and the distinction between `==` and `is` without much effort. 'Pythonic' is a stylistic thing, and an experience programmer will generally be able to handle picking up a new style guide just fine because they already understand the importance of stylistic consistency in general. Style guides are fairly simple to teach/learn, knowing what sort of code to worry about writing pythonically is the harder part.
My co-worker spent 2 weeks and a herculean amount of effort designing a framework in C++11 that allows creation of computation graphs with inputs and outputs of arbitrary types and size. The template code - with SFINAE, decltypes, variadic templates, etc. is absolutely filthy to look at. That code is probably only readable by him alone and if he leaves the company - I guarantee you pretty no one will be able to make significant changes to that code without an equally substantial effort. Such a thing is possible in an afternoon with python. People often downplay this aspect of static typing and over-emphasize the benefits.
Perhaps that could be interpreted as refactoring speed
Im a normal person..even when codding with curly braces you should be indenting...also dont forget the ";". 
Are you familiar with the concept of linters?
I wouldn't. Nobody even really agrees on the definition of "pythonic".
Good point, smart annotations can speed-up refactoring.
Thank you so much for your explanation, much appreciated!
I would think you need to use something like iloc to get the data into specific rows and columns. Basically you need to get the data frame the way you want it to look before df.toexcel If it's an existing worksheet that you just need to add data to specific rows and columns you could use openpyxl to open it and access specific cells using coordinates, change the value then write the workbook and close it.
Yes! Simplifies docstrings too
R is a mess indeed. But has a few redeeming qualities. Mostly it's designed to be useful if you are doing a series of very short scripts for specific analytic tasks. The more involved the purpose is, the bigger a pain in the ass it becomes, lol.
What's your reasoning behind the `sys.path.append`? Because there is almost always a better alternative than manipulating the Python path like that.
The older I get, the more I want static types. I like that the hints are optional, but I'd like them to be enforced if I do add them.
Oh god yes. I would **love** if they came out with a small stand alone git GUI with the features in their IDEs. Their diff viewer is really nice too. 
A virtualenv is _disposable_. They're a directory of stuff that's specific to _this_ computer - paths, libraries, etc. The portable part is the list of packages required by your project. *On the old machine, `python -m pip freeze &gt; requirements.txt`. Commit code to git (or some other SCM). *On the new machine, install pycharm, maybe install a python, make a new virtualenv, `pip install -r requirements.txt`. 
I use them most places on new code. I tend to not use them on existing projects that have to support python2, because I find the comment version ugly.
One of the main drivers for adding type hints as a standard to the language was that bigger companies using Python were already implementing their own static analysis tools. Their own research found that adding static analysis found bugs. If you have a project with many people contributing, you can't know everything in it, so enabling tools to help the humans actually trying to understand the code makes complete sense. And doc strings only go so far... Having type hints in the code and actually checked with a tool makes sure they don't go out of date. Another thing I like about static typing is being able to reactor with greater confidence. If you change the signature of a function I really want to see everywhere it's going to break.
Having better auto complete in your editor is absolutely a reason for type hints. It'll make your organized code easier to work with.
I typically type everything except those kind of dark magic utility functions. So it's maybe 95% typed, 5% untyped. You don't *have* to add types everywhere. 
Can you specify multiple types? Something like myvar: str | list
Huh, TIL
[Floating point arithmetic](https://en.wikipedia.org/wiki/Floating-point_arithmetic) and how floating points are represented in programming is inherently inaccurate as floating points are just an approximation of decimal value. There are two ways to go about this, don't really care about the floating point inaccurates or transform the decimal values into integers that you can more concretely manipulate.
[`Union`](https://docs.python.org/3/library/typing.html#typing.Union)
Great stuff! A nice tweak would be to line up the refresh rate with the music so the nodes populate to the rhythm of the violin!
I understand how floating point fractions would of course be an issue in that way but this is simply defining and reprinting and it's different. Why am I not getting the same decimal I just defined the line before? Also, how can an int have a decimal wouldn't that make it a float? Should I be using the Decimal module?
This has nothing to do with case. If you do not type hint, the only other way to tell what a function returns from it's signature would be the function name ( assuming it's super verbose ). The second best would be having a docstring, at least then it is close enough to the function declaration that you can easily see what it accepts and returns. Arguably the worst is none of the above, meaning you actually have to dive into the logic of the method itself to figure out what is being returned. List[Image] tells you instantly what you are expecting. 
I use type hinting only in narrow places where there could be errors. I think that using of type hinting for all arguments, variables and methods is also a bit paranoiac. All we like CPython for its simplicity 
The official documentation has a bird's eye view: https://docs.python.org/3/howto/pyporting.html This website/book references all the changes and potential strategies (simultaneous support, conversion) http://python3porting.com/bookindex.html http://python3porting.com/strategies.html The official "what's new in 3.x" of every version https://docs.python.org/3/whatsnew/index.html The cheatsheet for writing code compatible in both http://python-future.org/compatible_idioms.html check out the whole python-future website http://python-future.org/index.html 
I have not used it, but I've heard if you use type hinting with Cython you can get significant speed ups because the compiler can generate tighter code. 
&gt; Why is it rounding when I simply PRINT a straight up float value? `print()` calls `str()` on its arguments. In Python 3, `str()` on a float rounds to the smallest number of decimal places that will produce an identical number when parsed. (Note that your `print(num1)` example produced exactly the same number of digits that you typed.) Your `num2` has 34 digits in the literal. CPython stores floats as the C `double` type, which is almost guaranteed to be IEEE 754 `binary64`. That format is accurate to about 16 decimal places, so you simply can't represent all of the digits you typed. If you need 10 digits after the decimal point when you have more than five or six digits before the decimal point, machine floats won't work for your problem. The `Decimal` type in the Python standard library allows you to set the number of digits that are stored, which might be enough for your use case.
If I'm going to use type annotations why am I using a dynamically typed language?
I somewhat agree with you. I actually love static typing, but I don't care for it in python. Even in bigger projects, just document your code, and you're fine. When I code in Python I want it to look like Python and not Rust. I suppose the option is nice though.
This
I know nothing but I use them in my code as an extra reminder to myself about what I was expecting when writing the function.
Oh that's so cool.
I’ve started using them and I like them; I feel like it makes my code more readable, which is definitely important to me. Does anyone know if you can get Pycharm to use the type hints to form docstrings? Currently, if I start a doc string for a method, this is what Pycharm fills in Foo(bar: str) -&gt; bool: “”” :param bar: :return: “”” While I’d rather see something like this: “”” :param bar: :type bar: str :return: :rtype: bool “”” Is there a way to set that up?
This was a great read! I will certainly document my code better from now on. I just have one question. Do you feel that sometimes adding these documentations can make the source code too big? For example, if I have a small function, the string docs refering to the parameters etc can become bigger than the actual function. Do you see this is as a positive or negative thing, or something in between?
Because the [IEEE 754](https://en.wikipedia.org/wiki/IEEE_754) format has "floating" precision, and you're demanding from it more than it can provide. And yes, you should be using the [decimal module](https://docs.python.org/3.7/library/decimal.html) if you require better precision.
**IEEE 754** The IEEE Standard for Floating-Point Arithmetic (IEEE 754) is a technical standard for floating-point computation established in 1985 by the Institute of Electrical and Electronics Engineers (IEEE). The standard addressed many problems found in the diverse floating point implementations that made them difficult to use reliably and portably. Many hardware floating point units now use the IEEE 754 standard. The standard defines: arithmetic formats: sets of binary and decimal floating-point data, which consist of finite numbers (including signed zeros and subnormal numbers), infinities, and special "not a number" values (NaNs) interchange formats: encodings (bit strings) that may be used to exchange floating-point data in an efficient and compact form rounding rules: properties to be satisfied when rounding numbers during arithmetic and conversions operations: arithmetic and other operations (such as trigonometric functions) on arithmetic formats exception handling: indications of exceptional conditions (such as division by zero, overflow, etc.)The current version, IEEE 754-2008 published in August 2008, includes nearly all of the original IEEE 754-1985 standard and the IEEE Standard for Radix-Independent Floating-Point Arithmetic (IEEE 854-1987). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I'm 46; the older I get the more I never want to go back to statically-typed languages. 
You are my hero.
That makes sense and I probably just mis-remembered. I've updated the article. Thanks for the input. Love your book BTW ;)
Humans just don't make the vast collection of type errors that static typing fans insist we must. It's been proven in study after study... no statistically significant difference in errors, but coding in a dynamically typed language is much faster. Even "Uncle Bob" Martin conceded that with test-driven design, he's found he simply doesn't need static type checking anymore. 
I'm pretty sure it's not the case. I may be wrong, but I need proof ;) 
As for the int representing a decimal value, all rational decimal values can be represented by an integer divided by some order of 10. So 10.23 is 1023 / 100. For small decimal precision, this can be used. But the decimal module is probably the better solution.
No.
Huge sprawling codebase, no time, it works. New things can be written in 3.x, but no one will dedicate the resources to rewrite old code for not that huge of a benefit.
My point was totally missed, I suppose; it's not about case, it's about preference. You seem to prefer a language which requires static types. Annotations are _not_ static types. They're annotations. They mean nothing when the code is run. You can argue that it helps other developers. My point is that good code absolutely does not *require* type annotations, and additionally that type annotations make the code less readable. And again, this is preference, but it's also based on decades of experience with Python. Docstrings additionally make the code more verbose. It's especially apparent if the docstring is longer than the code itself. But on larger projects, there's an expectation that documentation can be generated to understand what the code is doing...without looking at the code. And in this case, that seems completely counter-intuitive. You *should* look at the code to understand what it's actually doing and not rely upon typing, linting or otherwise to make a choice on how the code is supposed to work. I'd even go so far as to state that you need to exercise the code before you can really understand what's going on there. Annotations really only give you a false sense of security about what's happening under the hood, because they're totally ignored by the interpreter.
I use typing in one of my projects [1] and enforce them on CI, very happy so far. Probably possible to have more strict configuration but settled with following: ``` mypy aiozipkin --ignore-missing-imports --disallow-untyped-calls --no-site-packages --strict ``` [1] https://github.com/aio-libs/aiozipkin
If you don't know what a function/method does or returns then that is a failure of naming/interface design. Using type hints to cover up code smells / poor design is not a "good" practice. Things like type hints lead to more complex code because they allow complex code (esp poorly designed complex code) to be "manageable". Instead of developing the skills needed to write great code and applying them to refactor poor code, we become dependent on crutches. Also, get off my lawn.
Not who you are replying to, but maya still uses 2.7
I'm using type hint annotations and mypy in my latest project and loving it, especially with some of the deeply nested data structures in the code. The extra time it takes to get the annotations correct is vanishing as I climb the learning curve. Minor criticism: the name "mypy" is dumb. Does anyone know why it was named that? I think "typy" (pronounced tie-pie) would have been a better name and more appropriate since it includes the first three letters of "type" or *TY*ping-*PY*thon. 
I'm sure there are some major technical differences between the two. The only major coding difference i found while using python 2.x to python 3.x was using print. TBH, just start coding in python 3.x i doubt you will have any trouble moving over.
It is easy. The next tip would be autoformatting. I am using yapf but it depends on your taste, 
Java kool-aid in Python plate. Lap it up :D
Beats me. What about few example I am sure of. VS Code use schemas for its settings. https://code.visualstudio.com/docs/languages/json#_json-schemas-settings MongoDB supports them: https://docs.mongodb.com/manual/core/schema-validation/ I am positive that IntelliJ supports them as well. I guess they use them in production but cannot give you more references. Sorry.
To me it depends on the project. I've written medium scale realtime projects in C# that would have been an absolute nightmare to manage in a dynamic language due to a highly sophisticated interplay of systems that need constant refactoring (a videogame with many interacting sub systems). And I've written data pipelines in python that would have been excruciating in C#. They were essentially very functional, linear pipelines that pass inputs to outputs and therefore the code has very little cross dependencies and thus refactoring are largely trivial and self contained. TLDR; static typing allows for safe refactoring in systems with many long-lived, interacting parts.
Absolutely - I use it everywhere I can. The syntax works with 3.5 (it's just ignored, I tested with 3.5.3) It becomes a very effective IDE linter when they are present, and prevents oh so many defects before they have a chance to cause problems.
Will evaluate it for wuy ([https://github.com/manatlan/wuy](https://github.com/manatlan/wuy)) ! for sure
Yeah - I thought I remember something like that existed. So then, why would it be hard to make methods that can take in multiple types?
In general you should probably use something other than an EC2 instance, as you pay for the time it is running not how much you use it. There are instances where you may need to use one, but in most cases there is probably something else that is more efficient. If you need a database, prefer a managed scalable one. Like if you don't need a relational database, then DynamoDB is probably a cost efficient option. Storing files on S3 is most likely preferable too. And to /u/wearefarming101 I'd recommend using a framework if you're interested in building serverless applications. There are several of them out there, a Python specific one is [Zappa](https://github.com/Miserlou/Zappa) and a more general one is [Serverless](https://serverless.com/). There's also AWS SAM, if you're looking for something specifically for AWS. I've had good experiences with Serverless.
JavaScript is pretty good now actually. 
Too soon
I'm a bit green if you can't tell haha but very fascinating to know these limitations. I was under some false pretenses for sure. I will go with Decimal as most seem to agree there too haha! Thank you very much :)
Man I didn't even think of it like that. So true, but yes the precision matters here so Decimal it will be! Thank you very much :)