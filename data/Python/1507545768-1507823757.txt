Alright, noob here. Can somebody ELI5 what i just read? Or more specifically, let's take the very first example: def print_when_called(function): def new_function(*args, **kwargs): print("{} was called".format(function.__name__)) return function(*args, **kwargs) return new_function def one(): return 1 one = print_when_called(one) @print_when_called def one_(): return 1 [one(), one_(), one(), one_()] What does the @print_when_called do? As i understand it is the decorator, but where does it apply? To the next called function? If so, does it need to be directly above the function it is applied to or will it work with other fluff not related to a function call inbetween? Also, what's up with the curly brackets in the print? Is their "content" assigned via the strings format function? Also, in what way would this differ to say, just regularly calling a function inside another function? Why would you define a function in the definition of another function? Is it because of the scope (as to not "give away" the functions existence to anything outside the parent function)? Those are probably noob questions but i'd rather ask and learn then sit here and look at this, still wondering what this black magic means. Most of my work with Python so far was really just writing functions and using modules (apart from the few class-related things that codecademy made me do when i did the course like 2 years ago) - so i've not had the opportunity to dive into the deep stuff. In that regard i feel like a guy who only swims during vacation talking to navy SEALs about the wetness of water. 
&gt;Love to see a link to the article, but I'm guessing an inherent flaw in any approach to trying to quantify this to that sort of conclusion is that you could only possibly make that determination via either a) static analysis, which doesn't work at all well with finding errors in dynamically typed languages and can't account for errors never made in a static language where an IDE can offer accurate code completion and write-time corrections, or b) anaylising reported errors I remember the study. They did neither. They reimplemented a bunch of software written in python (I think) in a statically typed language and whatever the compiler caught was a bug. They caught a few relatively obscure bugs. &gt;But what too often gets overlooked is what you gain in iteration speed you lose on writing way, way more tests I don't write *any* tests in python that I wouldn't also write in a statically typed language. I do write plenty of asserts though, which, in combination with tests, I use to restrict the behavior of my code in much the same way a statically typed language would. &gt;TypeScript ultimately provides a strongly and statically typed way of writing for an interpreted runtime, and it's getting huge backing and interest from major players specifically because it eliminates so many of the problems that dynamic Typescript is gaining traction because javascript's *runtime* type system is disastrous. Google for the "wat" video for why. There's no "typescript" equivalent for python because python largely has a sane type system that is fairly strict.
Maintaining stubs separately from the code is a pretty hard, yet forking is even less viable because you need to create a new pypi package for the fork and others will too. But the standard prefix in this pep solves that issue. No confusion. You want stubs for twisted, install twisted_stubs. Also having stubs without code is also very useful. You can run typechecker without installing any c extensions, this can speed up your ci pipeline. 
Look into a web framework like Django or Flask.
Something is funny here. We're using bigrams to sample, but the code is confused in places and thinks it's using trigrams... but it's not. transition[w0, w1].append(w2) # implies we use 2 to sample w0, w1, w2 = words[i:i+3] # this needlessly samples 3 w0, w1, w2 = w1, w2, choice(transition[w1, w2]) # w0 is never used! Should be: w0, w1 = w1, choice(transition[w0, w1])
If you are still interested in making the bot, join #pythonprograms group on kik and ask there, Ill help you when I am online.
Yes, exactly what I was thinking! I think some thought might have to be given to including an empty cell? For example, if I include a 'Name' column, there should be an empty cell for units. 
Different use cases suggest using different ones. If, for example, you have a registry, and you want to register all subclasses of a particular class, *and* you want the user to be unaware of the registry, place the registration in the metaclass. If, on the other hand, you will be registering only some subclasses of the class, or unrelated classes, or you want the user to know when things are getting registered, then make it a decorator.
If you have any of your old code, you could try to read through it. Since you already should understand how it functions, all that's left is piecing together the syntax.
Python is slow because it is not statically typed. Everything has an add, substract, etc method including int. The profiling has been done. 
&gt; What does the @print_when_called do? Think of it as replacing one function with another. The new (replacing) function prints the name original function, then it calls the original function. &gt; Why would you define a function in the definition of another function? It as a powerful trick, it has to do scope. One use case is to create what is known as a *closure*, (A nested function that accesses values from outer local variables). Some decorators may fall in this category. &gt; Also, in what way would this differ to say, just regularly calling a function inside another function? Defining a function and calling a function are not equivalent. Where you define a function matters. It can have access to the global and/or local variables. When you define a function inside another, it has access to the local variables (including the parameters) of the outer function. Such a function is called *closure*. Decorators are (to an extent) just fancy syntax to make closures more useful. Closure, closure, closure, ... and it is all about scope, scope, scope, ...[1]; it is useful to know the term so that you can know that to search for. You can go a long way with python without any of this stuff, but the first step to using it is knowing that it exists and having a vague idea about what it is all about. [1] You can improve the readability of a program by limiting the scope of functions.
Consider this example: &gt;&gt; def return_one(x): .. return 1 .. &gt;&gt; class OneAdder(object): .. def __call__(self, x): .. return x + 1 .. &gt;&gt; one_adder = OneAdder() &gt;&gt; @one_adder .. @return_one .. def fn(): .. print("Hello world") .. &gt;&gt; fn =&gt; 2 In the definition of `fn`, the `@one_adder` decorator is: - a (callable) `OneAdder` instance (but not a function), which - does not take a function (is passed `1` by `return_one`), and - does not return a function (as we can see by evaluating `fn` at the end). You are, naturally, correct that many of the examples of decorators I give _are_ "functions which take functions and return functions", but the "Decorator myths" section is intended to demonstrate that these properties are not _inherent_ to decorators.
&gt; There are many modules and packages available from 3rd parties via PyPy Really? :-)
So it really *is* about scope - just not the way i thought it was. Thanks for explaining, this does make more sense now, i sincerely hope to be able to come back to this one day. &gt;You can go a long way with python without any of this stuff, but the first step to using it is knowing that it exists and having a vague idea about what it is all about. Probably one of the most helpful statements i've heard so far when i think about it. I can only learn about things that i know about and i can only formulate a question in regards to an issue when i more or less know what information i need.
Google for `python upload files to dropbox` as it looks like several of the links listed would suit your needs.
what kind of terminal is he using? looks cool
Once you've copied out the book/lab version, take a few minutes to play around with the code yourself. Break it (intentionally or not), and then fix it again. If you can't fix it, google the error and take a look at that. Just take it slow and don't get too frustrated. Rote copying is bad, but copying to learn the syntax used, and then playing with it, is good.
K you should be abpe to replicate the steps for the mac terminal.
Yeah. I noticed that too
See the top comment
Interesting! I noticed that the `simple_plot.py` example uses `Axes.set()` for pretty much everything: ax.set(xlabel='time (s)', ylabel='voltage (mV)', title='About as simple as it gets, folks') Is this supposed to be the favored way of doing things in the future?
I would do that using pygame + math.
Too cheap to pay for google custom search, repurposed selenium webdriver to simulate an ImageAPI in flask. 
who is running their python tutorial code as root?!
&gt; I think some thought might have to be given to including an empty cell? For example, if I include a 'Name' column, there should be an empty cell for units. True. I'm thinking some special character (maybe `/`?) could be used for denoting no unit for that column. What do you think?
Judging by his history and reputation, its likely a custom build.
This works, although if you want your program to be compatible with python 3 it won't work. An alternative is to import `print_function` and then use python 3 syntax.
maybe do it through calling a php program from the html ? The php program could call the python interpreter and your python program and send it parameters.
Yes use their API, and for python you can access it easily with module tweepy. That's all I use. 
Is multi-threading all that important outside of desktop? If you are writing a service, its usually distributed these days, and computation is done in the cloud (or gpu). Apart from user games and apps like photoshop how important are threads?
How does Pypy compare to Julia in terms of speed? The latest version has numpy and pandas support. I'm not sure how long CPython is going to last once Pypy has ironed out kinks in its C API.
Presumably proper use requires Python 3.6 for this feature: https://docs.python.org/3.6/whatsnew/3.6.html#new-dict-implementation
no. `f'The element #{index + 1}'`.
&gt; take a few minutes to play around with the code yourself. Break it (intentionally or not), and then fix it again. If you can't fix it, google the error and take a look at that. Just take it slow and don't get too frustrated. That was 9 hours of my day yesterday. The homework requirements did not exactly align with what we had from the book so we had to tweak it to make it work. I have 2 issues with my class. The smaller one is that my prof has a very heavy Chinese accent. It's manageable but, lumped on top of my 2nd issue... my class is largely experienced programmers that just learning python as opposed to me that is learning programming and he is workiing more at their pace than mine, it's compounded. I am taking a remedial math class this semester as well. (I am 46, going back to school for the first time in over 20 years) That class is great. Slow, methodical, repetitive. I am on track for an A and I was always a horrible math student. If my python course was more like my math course, I would be having a better time. Also, I simply bit off too much. 3 classes, a full time job and a wife and 3 kids is just difficult to juggle... Thanks!
Bloody autocorrect.
&gt;def ngrams &gt; ngram not defined Well_there_it_probably_is.gif Also read the sidebar and post in the right sub please.
&gt; I do write plenty of asserts though, which, in combination with tests, I use to restrict the behavior of my code in much the same way a statically typed language would. I did that too, until someone started compiling the company python with optimization turned on.
yeah. dude has a fork of the interpreter
If you have a collection of data that is to be treated in a similar way, there are constructs in the language such as `for loops` that assign members of the collection to the same name and then allow you to write code in the body of the loop that is then applied to every member of the collection through the access of the one `name` When wanting to print the three times multiples of each of three integers one doesn't write this kind of thing: my_int1 = 7 my_int1_x3= my_int1 * 3 print(my_int1_x3) my_int2 = 13 my_int2_x3 = my_int2 * 3 print(my_int2_x3) my_int3 = 23 my_int3_x3 = my_int3 * 3 print(my_int3_x3) It is too long and (nearly) repeats itself.&lt;br&gt; Far better to use the `for loop` like so: for my_int in 7, 13, 23: my_int_x3= my_int * 3 print(my_int_x3) The above would work for three or many more integers with the same block of code within the for loop and the for statement assigning the variable my_int to successive members of the collection - first 7 then do the loop body; then 13 then do the loop body; then 23 then do the loop body. As another poster has said, this question would become clearer in later sections of your course.
I can't imagine juggling that much, I have a hard time learning new things just dealing with my job and my girlfriend. Shout out to /r/learnpython, they have some good resources and people are generally willing to help you out (short of providing answers for homework directly).
Don't fork anything at all, just use `systemd` with `Type=simple` units and have it manage all the lifecycle stuff for you.
In that example `@len` wasn't just used to do that, it returned the length of whatever the next decorator (`@func_name`) did to the function.
Not possible. You need to install it using a different tool. `pip` is for installing packages, and packages only.
Thank you for explaining that. Being that I still want my main interpreter to be 3.6.1, do you know how I can install python only within my local venv? From my understanding, I can only activate and use the venv from the console and I'm not sure of how to install something from the console without a package manager.
hi there, pythonanywhere dev here, my guess would be that almost any web scraping job will be comfortably under the 2,000 CPU seconds you've got. why not just try it and see? even on the free plan? your cpu-usage quota figures and the numbers for cpu usage on the "fetch processes" buttons on the consoles page update every 60 seconds or so...
You can't do that. You need to install Python 2 using the installer, and then create a virtualenv using Python 2. Then that virtualenv will use Python 2 as well.
If I could up-vote the above answer more than once I would :-)
Okay, I see. I thought that having multiple interpreters would cause a problem, but I guess i just need to be sure to only add a specific version to the path so that when I call python from the console it knows which one I'm referring to. Thank you for your guidance!
You can add both versions to PATH, and then use the `py` wrapper to select the right one with `py -2` or `py -3`.
Great! I will look this up. Thank you so much for you advice!
Shouldn't type annotations be equivalent to static typing if the checker requires them, and if we have proper IDE support for them? Seems like the big difference is that the community isn't really that interested in annotations.
Not parent but I did read this recently, an analysis of bugs across multiple languages on github: http://web.cs.ucdavis.edu/~filkov/papers/lang_github.pdf They analyzed &amp; classified Issues submitted on github, not by quantifying compilation/IDE errors. 
A lot of them are documented in the README. The others should have a summary in the comments at the top of the script. Many of the scripts automate login attempts for various services. Some test for particular vulnerabilities. Others generate data I can use for testing. I didn't realize when I posted that you were looking for development related scripts so my scripts are probably not what you are looking for. Sorry.
https://www.youtube.com/watch?v=s82yE1gOuks
&gt;[**GeoNotebook: An extension to the Jupyter Notebook for exploratory geospatial.. - Chris Kotfila [38:54]**](http://youtu.be/s82yE1gOuks) &gt;&gt;Chris Kotfila offers an overview of the GeoNotebook extension to the Jupyter Notebook, which provides interactive visualization and analysis of geospatial data. Unlike other geospatial extensions to the Jupyter Notebook, GeoNotebook includes a fully integrated tile server providing easy visualization of vector and raster data formats. &gt; [*^O'Reilly*](https://www.youtube.com/channel/UC3BGlwmI-Vk6PWyMt15dKGw) ^in ^Science ^&amp; ^Technology &gt;*^65 ^views ^since ^Sep ^2017* [^bot ^info](/r/youtubefactsbot/wiki/index)
Video linked by /u/agirault: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [GeoNotebook: An extension to the Jupyter Notebook for exploratory geospatial.. - Chris Kotfila](https://youtube.com/watch?v=s82yE1gOuks)|O'Reilly|2017-09-21|0:38:54|1+ (100%)|65 $quote Chris Kotfila offers an overview of the GeoNotebook... --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/agirault ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=$comment_id\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v2.0.0
I see David Beazley, I click the link, and bookmark it for proper reading or viewing over the weekends. 
That's so Beazley of Beazley, man. 
What advantages/disadvantages does this have over letting the browser request the data?
Apache Thrift would have made an interesting comparison.
If python ERP systems are you thing have a look at [odoo](https://github.com/odoo/odoo). [Installing the package](https://www.odoo.com/documentation/10.0/setup/install.html#setup-install-packaged) on debian was easy, also has windows and centos support.
Yep, that's exactly what I mean.
Your video is simply 2d lines with fancy coloring, `cairo` is the best choice.
At 31:21 he says that languages add other languages features and Python is a collection of such thigs borrowed from other languages "with one exception", but he doesn't elaborate on what he had in mind.... What was it? What are some features unique to python?
&gt;try to get it to work with a decorator if at all possible first Why do you say this? Is it just personal opinion?
writing some ‘plumbing code’ which I want to use to create multiple scripts in docker talking to mqtt. requirements: - subscribe to topics with topic specific listeners - have a periodic event loop publishing to a topic - gracefully stop event loop and mqtt client In subsequent services I ideally only define the client_id, subscribed topics and the event loop. 
Haha. No worries at all.
And if you wanna take it further into insanity, look at [this](https://github.com/pteichman/cobe). Specially read the blog entries. The author has moved on to Go for improvements of these ideas though. 
Sublime can run bat files in windows with ctrl-b by making your own build system. Look up the syntax for this, then create two bat files, one to call another bat file, and one that calls "python myscript.py". This will get you a command line window whenever you hit ctrl-b.
You don't have to wait for the request roundtrips, all the files are just pushed to the client with no delay.
That's ok if you have a high level of confidence in your code. Not so much if you don't.
Use anaconda instead. It's a bundling of Python with some tools and packages, but it's integrated tool conda is a lot more pleasant than virtualenv for managing different python versions
The recursion and currying and so on are what make it Haskell. Without those, it wouldn't be Haskell. You also shouldn't get nearly as many run-time errors with Haskell as Python. The compile errors are fairly readable, modulo single letter type variables.
You're missing one more modification: if you refractor his code this way, you also need to swap the order of the last two lines of code, and change the last line to print `w1` instead of `w2`. There's really nothing pathologically wrong with OP's solution. You're right that assigning into `w0` isn't necessary, but an argument could be made that the way OP is doing it now makes it a bit more readable.
Oh, I know, I'm just saying the learning curve to minimally capable of using it is way more vertical than Python, and where Python looks vaguely like weird English to a newcomer, Haskell looks like abstract mathematics thrown into a blender. And yes, if you expanded every single letter variable in the entire code base, the errors would be *fairly* readable, but still Greek translated through Japanese compared those in say Elm or even Rust.
This specific helper method has been around for a long time (and I use it regularly). It just disptaches to each individual set_foo.
For end-users: - Integration with version control - Integrated terminal - Built-in intellisense - Eats less resources than Atom. - Faster than Atom. For plugin developers: - Not written in CoffeeScript
Oh, we didn't, we suddenly had people trying to pass all sorts of things that the asserts -- which had simply been shut off by -O -- just stopped erroring on, so it must be OK, right? Sudden silence appeared to be consent and/or a new feature. I no longer trust asserts in any form of library code because any given sysop who doesn't understand the side effects might think that turning on optimization is a sensible choice, and boom they're as effective as pass statements.
My point was not a serious proposal at forking (in fact as I said it's a bit silly). However I don't see why core cpython should be discussing PEPs regarding how to go against the desire of the core maintainers of a third party package (if they do not want type hints, that's what it means).
Because it's pure python. Iterating in python over individual vertices of a Path object just to pass that data structure to cairo is never going to be that fast.
Yes, agreed. If one is thinking "what are the most common trigrams?" as opposed to "what is the most common token following this bigram?" then OP's code might be more natural. As against that -- deliberately assigning to an unused variable requires a comment so the reader knows it's deliberate.
This is probably more appropriate for /r/learnpython
If we could force a requirement for annotations and the IDE supported them, then yes it would be fundamentally equivalent. But if type annotation is required, then you're essentially not using a dynamically typed language anymore.
thanks dude!
awesome! many thanks!
First, this belongs in /r/learnpython Second, I do not really know much about `xlsxwriter`, but a *really* quick goolgle search for "xlsxwriter append" yielded [this Stack Overflow](https://stackoverflow.com/questions/18002133/xlsxwriter-is-there-a-way-to-open-an-existing-worksheet-in-my-workbook) page with the following first line of the first answer: &gt; You cannot append to an existing xlsx file with `xlsxwriter`. See the rest of that for some more useful suggestions
`rm -rf ~` then Arguably people don't care that much about the system that could be reinstalled in 15 minutes from scratch, but about their stuff.
You need to be able to change the value via a web browser? Then simply run a simple embedded web server inside your program itself. No need to do IPC. Make sure to propertly contstrain access to it though. Look at the ``http.server`` module. Integrate into your own event loop or run it off a thread.
Depending on necessity miniconda might be a better fit but this is a good suggestion on the whole.
You basically need two different things: 1. something that creates your sine wave in a continuous way, alterable on the fly. 2. something that streams audio data to an audio device to actually play the sound. I've used a *generator* for #1 with appropriate control points to alter the amplitude, frequency or even modulate the frequency by another waveform (FM). It *generates* an endless stream of sine wave values that are chunked up and fed into: .... the ``sounddevice`` module, which I used quite successfully to do #2. It takes some careful programming to make it work without hiccups or crackle in the sound, but that's to be expected with this timing critical things. 
Celery is great and I've used it to run a custom scraper but my end goal for this example was to demonstrate that anyone that has Flask, Scrapy, and Twisted (which is installed with Scrapy) can get a scraper server up and running with minimal effort. I've thought about adding a celery example too, but I figured it would be "obvious" for anyone actually using celery.
Did this work out very well for you?
I'm also trying to incorporate Jupyter notebooks into a Wagtail blog feature on my app. So far I've found this Gist where Wagtail has Markdown support. Essentially creating their own block type. https://gist.github.com/soar/2fdc7bcefd47d85be8c14f9febb89df8 If that works, then it would seem it's just a trivial conversion of Jupyter Notebooks to Markdown using nbconvert here: https://github.com/jupyter/nbconvert
yeah i have a beat, and a worker going to try again later today
I know a bunion named mb 
1. record the time 2. add one second to calculate next invocation 3. run the function 4. get current time. calculate remainder to next invocation 5. negative? go to 1 6. sleep remainder 7. go to 2 
Context managers perhaps?
Ok, so if I just want to set eg the x label I would in the future use `ax.xlabel = 'foo'` instead of `ax.set_xlabel('foo')`?
One misplaced sync operation and it stops ...
Do you mean *control* your wifi connection with Python, or send data *over* wifi? If you mean "send data over wifi", you just have to use standard network protocols, and the system will "sort out the details" for you. A simple socket client (or full blown module or even framework, such as Requests or Twisted ) will do the trick, and will not be specific to wifi. You don't actually have to do anything "special" to send over wifi vs. wired network. If it's controlling the wifi, you can probably find a windows API call that will let you don this.
Being honest doesn't mean I am being paranoid. It is good to give some one ALL the facts and let them decide.
There's an old post [When to use assert](https://mail.python.org/pipermail/python-list/2013-November/660568.html) that people may find interesting.
It's very cool, I've never seen it like this and I've read millions of decorator tutorials. Never knew. Thanks!
Just tried this and than found this video. The best introduction to asyncio.
Basically, they don't respect users freedoms in the least. A trend among many software companies today. VSCode and even Atom to a lesser extent have put tracking or "metrics" is what they like to call it on by default. Some could innocently say "hey this is good it helps developers", but others like myself think if it is so good then just ask users to help with this effort instead of having it enabled by default. I helped talk with GitHub Atom developers to make it so we could have a warning about the tracking. VsCode followed suite, but often what Microsoft does is they sneak things in the back door through a useful plugin that is under the radar. Also Windows 10 is horrible insecure. If you don't like that idea I am sorry, but it is just the truth. After Google got wealthy from tracking its users Microsoft had to copy them. They did try running negative ad compaigns calling Google "Scoogle", but it failed. The mass populace decide ignorance is bliss in this regard and they didn't care. I am not saying anyone else should care if they do not. I am simply giving out the facts. If you think you can trust these companies you are mistaken. You information is being mined and sold. If you care about these things that is why I recommend you pay for your software, or have software that respects your freedoms. It sucks, I know Vscode and Atom are super trendy right now. They also look pretty nice. I choose freedom though.
Are these files inside a specific directory. Then yes, it is very easy. Use the glob module to list out the files matching your conditions. If you want to loop over all the csv files in a directory &gt; import glob &gt; for file in glob.glob('/path/*.csv'): &gt; use the Dropbox client to upload. Dropbox sdk is there for python. You got to download the tar and install the setup. And the method to upload a file using the client is to use the method **put**.
`else:` blocks for loops?
Imo gotta be generators, list comprehension and such.. the closest you can find is linq in c# which however came after python already had it
Bots on bots. I'm going to write a "good bot" bot to bot the bots. 
Good post.
I tried to update but there is this error: Collecting pomegranate Downloading pomegranate-0.8.0.tar.gz (2.1MB) 100% |████████████████████████████████| 2.1MB 457kB/s Complete output from command python setup.py egg_info: Traceback (most recent call last): File "&lt;string&gt;", line 1, in &lt;module&gt; File "/tmp/pip-build-lsoy6thr/pomegranate/setup.py", line 34, in &lt;module&gt; extensions = cythonize( extensions ) File "/usr/local/lib/python3.5/dist-packages/Cython/Build/Dependencies.py", line 920, in cythonize aliases=aliases) File "/usr/local/lib/python3.5/dist-packages/Cython/Build/Dependencies.py", line 800, in create_extension_list for file in nonempty(sorted(extended_iglob(filepattern)), "'%s' doesn't match any files" % filepattern): File "/usr/local/lib/python3.5/dist-packages/Cython/Build/Dependencies.py", line 125, in nonempty raise ValueError(error_msg) ValueError: 'pomegranate/*.pyx' doesn't match any files 
what kind of work would you like to use Python for in the future? do a project in that field. 
Ah, ok, so not scraping then :)
Thanks 
Let me know if you face any problems.
Right before that he just said that Python lifted list comprehensions from Icon. 
Ah ok, so not directly pycairo related If I understand correctly. I work on pycairo, so if you still need anything there, please ask :)
Same when you're not using asyncio
Yes. But in usual deployment you have multiple workers. And in aio/twisted you have one. You can use threads but it’s not kosher.
Why not keep the comments, but have logging spit out, very conservatively, variables and returns here and there. Comments are comments for a reason, and logging is a different system with a different purpose. But I don't see why they can't work together.
In some distant future, possibly (it's going to take a while...).
Fantastic work! What do you think of using pomegranate for profile hmm (aa seq) instead of something like hmmer which has a less permissive license? Is this framework mature enough to be competitive in the results produced? Thanks :)
I'm not in charge of the project, but I'm sure we could use your input on [pysorter](https://github.com/chriscz/pysorter). I'm actually working on specifying how users can define rules! 
&gt; this doesnt let me connect to server1 using the socket that was closed &gt; the socket that was closed &gt; closed I'm going to let you mull over this for a bit. 
Sure! I have recently started an Applied Cyber Security course and your script might help me to persuade some of the people in my class that Python is useful in this field and worth learning - it's been hard to find examples of things they could use Python to do (without showing them overly complicated libraries/frameworks which might just overwhelm them). Unfortunately most of the private projects I have done aren't really cyber security related so it's hard to use those as examples as well. 
pomegranate was originally built with bioinformatic applications in mind. I haven't explicitly compared to hmmer, but I would love to see the results if someone else did, and would be more than happy to include a comparison on GitHub. I'd say that the framework is mature enough to be competitive, since all of the computationally intensive parts are written in cython. Let me know what you find if you look into it!
I know, that's why it was a bad idea, because I found that once you close a socket it's not possible to use it again. And it doesn't make much sense to close a socket that I will surely use again. But if I have 5 servers, does client need to create 5 sockets and keep the 5 tcp connections with those servers? or is there any smarter way to do this?
I don't have any current projects in Python so I'm not sure if it already exists, but the [logrus](https://github.com/Sirupsen/logrus) structured logger in Golang is great for that kind of thing, although the syntax is a bit verbose... I usually just use the debug/trace log levels and make sure it's possible to enable them using environment variables.
Basically you are doing a web server. I would implement some kind of session or cookie verification on the servers. When a client connects to the server for the first time, the server creates a unique string and stores it with the clients ip. Then the server sends the string to the appropriate ip and the client stores the string and servers ip. The when the client reconnects with the server it sends the string and the server checks if it matches with any clent. If it does they continue else it goes from the beginning. Note that till the project is small you could store everithing in memory or in a file, but a database on the servers would come in handy if you have lots of clients.
In C++'s, that's accomplished by RAII.
While not strictly python, I thought people here might find this useful. I spent most of this weekend developing this template since the default conversion looks nothing like the original notebook.
Results... ``` pypy ----------------------------------------------------------------------------------------- benchmark: 3 tests ----------------------------------------------------------------------------------------- 90s 303 Name (time in us) Min Max Mean StdDev Median IQR Outliers OPS (Kops/s) Rounds Iterations 90s 304 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 90s 305 test_parse_protobuf 30.5470 (1.0) 8,824.9031 (13.35) 40.8390 (1.0) 186.1028 (7.01) 33.2050 (1.0) 1.5470 (1.0) 96;5145 24.4864 (1.0) 33099 1 90s 306 test_parse_flatten 85.9100 (2.81) 661.2510 (1.0) 103.8370 (2.54) 26.5595 (1.0) 97.5520 (2.94) 9.5480 (6.17) 604;1074 9.6305 (0.39) 11656 1 90s 307 test_parse_transform 101.7190 (3.33) 699.4900 (1.06) 124.1608 (3.04) 34.7308 (1.31) 116.2190 (3.50) 10.9230 (7.06) 450;848 8.0541 (0.33) 9783 1 90s 308 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 90s 309 cython --------------------------------------------------------------------------------------- benchmark: 3 tests -------------------------------------------------------------------------------------- 82s 508 Name (time in us) Min Max Mean StdDev Median IQR Outliers OPS (Kops/s) Rounds Iterations 82s 509 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 82s 510 test_parse_protobuf 16.4870 (1.0) 113.0900 (1.0) 17.0161 (1.0) 1.5395 (1.0) 16.8200 (1.0) 0.1990 (1.0) 301;608 58.7679 (1.0) 9775 1 82s 511 test_parse_flatten 165.0320 (10.01) 392.2720 (3.47) 170.4593 (10.02) 7.5711 (4.92) 168.1100 (9.99) 4.1743 (20.98) 257;265 5.8665 (0.10) 2957 1 82s 512 test_parse_transform 177.8030 (10.78) 395.1150 (3.49) 184.3268 (10.83) 8.9219 (5.80) 181.7395 (10.80) 4.5475 (22.85) 236;260 5.4251 (0.09) 3104 1 82s 513 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 82s 514 ```
Results... :) pypy ----------------------------------------------------------------------------------------- benchmark: 3 tests ----------------------------------------------------------------------------------------- 90s 303 Name (time in us) Min Max Mean StdDev Median IQR Outliers OPS (Kops/s) Rounds Iterations 90s 304 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 90s 305 test_parse_protobuf 30.5470 (1.0) 8,824.9031 (13.35) 40.8390 (1.0) 186.1028 (7.01) 33.2050 (1.0) 1.5470 (1.0) 96;5145 24.4864 (1.0) 33099 1 90s 306 test_parse_flatten 85.9100 (2.81) 661.2510 (1.0) 103.8370 (2.54) 26.5595 (1.0) 97.5520 (2.94) 9.5480 (6.17) 604;1074 9.6305 (0.39) 11656 1 90s 307 test_parse_transform 101.7190 (3.33) 699.4900 (1.06) 124.1608 (3.04) 34.7308 (1.31) 116.2190 (3.50) 10.9230 (7.06) 450;848 8.0541 (0.33) 9783 1 90s 308 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 90s 309 cython --------------------------------------------------------------------------------------- benchmark: 3 tests -------------------------------------------------------------------------------------- 82s 508 Name (time in us) Min Max Mean StdDev Median IQR Outliers OPS (Kops/s) Rounds Iterations 82s 509 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 82s 510 test_parse_protobuf 16.4870 (1.0) 113.0900 (1.0) 17.0161 (1.0) 1.5395 (1.0) 16.8200 (1.0) 0.1990 (1.0) 301;608 58.7679 (1.0) 9775 1 82s 511 test_parse_flatten 165.0320 (10.01) 392.2720 (3.47) 170.4593 (10.02) 7.5711 (4.92) 168.1100 (9.99) 4.1743 (20.98) 257;265 5.8665 (0.10) 2957 1 82s 512 test_parse_transform 177.8030 (10.78) 395.1150 (3.49) 184.3268 (10.83) 8.9219 (5.80) 181.7395 (10.80) 4.5475 (22.85) 236;260 5.4251 (0.09) 3104 1 82s 513 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 82s 514 
Oh? If you have ``from mypy_extensions import TypedDict`` and ``mypy_extensions`` is not installed, guess what happens.
I recommend funneling the data into a database rather than CSVs. [SQLite3](https://docs.python.org/3/library/sqlite3.html) is a Python built-in and a great solution for this. Next, look into building a [Flask](http://flask.pocoo.org/) API for the database. Finally, build a frontend that calls the API and exposes the data to the web. Have an embedded media player to enjoy the music. Have a public signup with a variety of customizable options for users to sign up for notifications about their chosen artists/groups. For longer term ideas, write some a script to analyze the data, make [visualizations](https://matplotlib.org/) with matplotlib or a Javascript data visualization library like [D3.js](https://d3js.org/). Write some documentation for your API with an Open API sec so that other developers can use your data in their own project.
Then it's got to be the GIL!
`from __future__ import automatically_port_2_to_3`
Correct, fib[1] and fib[2] are both equal to 1.
You should look up how sockets work, because this is a TCP question not a python question. Perhaps you can inspect your sockets for some more detail *hint hint*
You can absolutely just have one socket open per server. In many (most?) cases, its unlikely like your going run into any problems - especially if you're just running one of these client instances at a time. Most reasonable machines can easily sustain tens of thousands of socket connections at once. Or, you can make a new socket object each time you want to make a connection, and let the socket close/die. Either case should work reasonably fine.
Although I don't have any experience with MoinMoin, in similar situations I look for an XML-RPC api to programmatically update content. Take a look here for functions like `putPage`: https://www.ecyrd.com/JSPWiki/Wiki.jsp?page=WikiRPCInterface2 https://moinmo.in/MoinAPI/Examples 
Find a way to combine your data output with IFTTT Here's one idea https://ifttt.com/musixmatch
https://structlog.readthedocs.io/en/stable/
 &gt; about replacing all of my comments with logging.debug You are conflating two different things; the execution context (that logging reflects) with the program code context (that includes the comments). In particular the logging statements should add any relevant info like thread id, username, transaction id, and other elements of the runtime that you would'nt want in the comments.
nice! Any chance we could publish this work, either by reproducing or you could write it up as a blog post? If you want we can host it at morepypy.blogspot.com
Look into the `subprocess` module to open other programs from python. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Im a a big fan of the postmark api for sending emails http://postmarkapp.com You might also try sending a push notification to your phone using pushover https://itunes.apple.com/us/app/pushover-notifications/id506088175?mt=8
It cross compiles to C++ that is then compiled into an exectuable. So the end result is compiled C++ code. This is different to a lot of other Python packagers, which just package Python byte code.
Actually, Sloan says it starts at 0. That's as close to official as you can get. [A000045](https://oeis.org/A000045)
This makes life so much easier.
Because it's much simpler. Literally everything everyone says anywhere in any context is their personal opinion.
Whitespace control blocks?
And a Facebook engineer. I smell conspiracy :P
going through the [nltk](http://www.nltk.org/book_1ed/) book and having a blast.
I think a special character is the way to go. My first thought was either - or _ 
Finally, use what you've done to get a nice job.
That's the dream.
For what it's worth, I was going to contribute to matplotlib, but the lack of traitlets put me off. Using getters and setters is like going back to Python 2.3.
Facebook leading the way. This is great.
thanks!! 
right on ... cheers
store the rows into a pandas dataframe then do df.to_excel('my_file.xls', index=False)
GIL isn't a language feature (it's an implementation detail), and I'm pretty sure it predates python... though maybe not? it's analogous to the Big Kernel Lock in Linux though.
Once you figure out how they work, and have used the feature a few times, you wonder why they aren't in other languages. Surprisingly helpful.
That doesn't allow you to exit and reenter a context, does it?
No, it doesn't.
Step 1: read the sidebar. Step 2: /r/learnpython Step 3: read that sidebar
C89 Here, Hello Turbo Cpp
Here you go: https://github.com/benmoran56/chippy This is a library I made, so feel free to copy any of the code you find useful. It basically uses generators to provide an infinite stream of audio for different waveforms. There are a few functions to then take that data, and generate a string of PCM bytes from it (with or without the RIFF wave header). 
You might be able to make use of the pyglet procedural audio module: http://pyglet.readthedocs.io/en/latest/modules/media_procedural.html http://pyglet.readthedocs.io/en/latest/programming_guide/media.html#procedural-audio If you create a static source, you should have access to the final byte array, which you can modify. 
For all of the hubbub I've heard about else blocks on for loops in Python y'all seem pretty apathetic to the idea of how a switch statement found in every other language could be helpful.
With conda installed? On mac or Linux? 1. Open a terminal 2. Type jupyter notebook 3. Profit
Is there an alternative in python to for/else?
Ok thank you 
"Automate the boring stuff" is a great book for non-programmers. Check it out, it helped me a lot.
Open the command line, type `python`.
Looks great, thank you for all your hard work!
Using dicts is a common method
Best practice is to import * from a local typing module containing all type implrts in a try except
Well rip my English comprehension, sorry
so strange, I started a new celery app without flask to simplify things, think the problem is I'm on windows os docs say you can use a worker to schedule a task with -B but it isn't supported on windows, there is -beat which runs but doesn't schedule tasks also this decorator doesn't work for me @app.on_after_configure.connect 
haven't tried that yet, might later
I mean, I've always thought it would be useful. That said, you can emulate it pretty well with a dict.
Better `python3` or better still `python3.6`.
Hey man just found this post. Can i ask, did you manually remove the 'secret' and 'password' from your source code om github? Do you know if thats a normal thing to do for open source bots/scripts?
Supernovae... I think...
Good bot exists!!
Good bot
Thank you R0b0d0nut for voting on \_youtubot\_. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Has anyone here tried regular interactive web pages with this? Looks awesome.
windows is not supported from 4.0 although it supposedly work. in 3.1, launch with `celery -A your.project.app beat`. Of course, you app needs to have a `CELERYBEAT_SCHEDULE` configured.
I want to connect to wifi network with a python script. Just select the wifi name and insert the password, got? I need to know it to start my project. I have already study about sockets, but it's about other thing, it's not my question. I really want to connect to wifi. 
To be honest I quite hated it back when I had to write ``` ax.set_foo(foo) ax.set_bar(bar) ... ``` but now that I know that I can write ``` ax.set(foo=foo, bar=bar) ``` I don't think I'll even bother going back to ``` ax.foo = foo ax.bar = bar ``` once traitlets are implemented. IMO the main advantage of traitlets is early validation (right now a lot of things only error out at draw time) and easier handling of aliases and dependent properties (i.e. how to color, edgecolor, facecolor, c, ec, fc relate with each other?).
Sure, although I still fine `ax.foo = foo` much more Pythonic. Anyway, the reason that not having traitlets put me off contributing is the boilerplate I would have had to write when implementing the various classes that I needed to implement. It was turning a big job into a massive one. There's a huge benefit to lowering the barrier against more contributors.
Translating a book into Chinese... https://github.com/laixintao/python-parallel-programming-cookbook-cn
I have a [project](https://github.com/gokudomatic/cobiv) that can surely make good use of an extra pair of hands. Since it's modular to the core, lot of modules can be developed at the same time. But it's up to you to decide if it's interesting or not. I have a need for my application, so I'll finish it no matter what. But I noticed during the development that I had to introduce quite a lot of design patterns to solve the problems I discovered. For a seemly simply application, I was surprised of the complexity behind.
If memory serves me correct.. Import os os.subprocess(‘C:\ProgramFiles\Bla\bla.exe’) For further discussion consider moving to /r/learnpython 
Frankly I've only just heard of it but it might suit somebody out there in the wild :-)
Put it into elasticsearch!
You can always set a flag variable that you flip when you break and then check it after the loop.
Interesting! Can you post it on Kaggle and see what the best data analysts make out of it?
HOLY SHIT ! Thanks a lot for this mate.! :) 
Also, have you tried bigchaindb? 
Nice, thank you for the link!
I see... Looks like we are facing a "numeric sequence indices starts at 0/1" dilemma. Something for r/ProgrammerHumor :)
Fluent Python is a good book with intermediate concepts.
I know, but if a unwanted behavior happens in my application I need a way to trace back what happened. Sure a traceback in the logs helps to follow the exceptions, but what about wrong decisions in a if statement two modules and 100lines of code earlier? I need a way to follow the execution of my application and for that reason I want to use the comments as logging entries, because they already say what the current logical block of code does and I can extend it further with real time data.
Class and object [descriptors](https://docs.python.org/3/reference/datamodel.html#implementing-descriptors)? I also can't remember seeing multi-target assignment or iterable unpacking in any other languages .. but I didn't try that much aside popular mainstream languages.
If someone was wondering about that seemingly hacky `is_coroutine` function, it is almost the same as the [source code](https://hg.python.org/cpython/file/v3.5.1/Lib/inspect.py#l180) of `inspect.iscoroutinefunction`. Explanation -&gt; https://stackoverflow.com/questions/36076619/test-if-function-or-method-is-normal-or-asynchronous
it's look like [thonny](http://thonny.org/), but for OSX :D
Out of curiosity, what were you trying to implement?
[Graphs that look like Tikz.](http://www.texample.net/tikz/examples/feature/arrows/) Matplotlib arrows are garbage: The arrowheads look bad and they end on top the nodes rather than butting against them.
I vote for Flask. Django requires a *lot* more boilerplate
Yep, some love for http://jam-py.com might be needed :) As I see it, they struggle with traction...I even shared my app, but not finished atm. Comments here: https://www.reddit.com/r/Python/comments/73z5jw/jampy_framework_version_5_released/
No critic of the tool itself but for me the installation is not really straight forward.. I just wanted to test the tool and spent 1h on it and the installation of python-mapnik is still not working for me :(
It's* Google's favourite language
There is some effort on this direction too... https://github.com/matplotlib/matplotlib/projects/8 In any case I don't think anyone will complain if you put up a PR where everything just uses properties and has no setters and getters. (I may nudge you in this direction to keep the API consistent for now, but I'd definitely not consider this a blocker.)
Definitely recommend [this book](https://www.safaribooksonline.com/library/view/working-effectively-with/0131177052/) before you even get started. Also don't go OOP just because, plenty of problems don't automatically gain anything from being wrapped up in classes. Obviously if the project benefits from it, run with it, but it often introduces overhead without actual improvements in clarity or maintainability.
Seems to fit in the blueJ and Greenfoot corner. Stuff like that is always good to get a idea of what programming is like.
Cool, happy to share it on github once I'm feature complete.
That should be *probably* never heard of. If you've been manipulating images for *way* too long you've definitely heard of it.
I do not agree, for reasons that would not believe !
Cool, I'm too busy right now with my work, but I'll keep checking back on the project page.
Thanks! What's your name on GitHub? Probably easier to follow you on there so that I can see when you publicise the repo in the news feed. 
You PIL users were/are ahead of your time... :)
no. its the fastest growing because it's simple yet complex. easy yet hard. people don't like doing work, so why would we like doing work for our software? laziness in physical, laziness in virtual
Would you expand a bit more on the reasons for putting the data in a database rather than in CSVs? Can you give examples of how using a databse rather than CSV files can be advantageous?
You probably don't need all of OOP, rather just abstractions, explicit contracts, and modularity. Sometimes classes come handy for this, but often you don't need them, plain old modules and a good test suite will do just fine, without the confusion and overhead that OOP often introduces.
It's best if your function returns the output. 
What do you mean?
In Python you use the return command to send info back. See this tutorial http://interactivepython.org/runestone/static/pip2/Functions/Returningavaluefromafunction.html 
I will not click that clickbait for reasons you will NEVER know!!
Make a game in Pygame
While an interesting theory, I think it's at best a partial explanation. There are many other factors driving Python's increasing popularity: - It has overtaken Java as the number one teaching language at universities. That did not happen because of the low-level API for direct manipulation of memory buffers, but because Python is a simple language with excellent readability. - Seen as general-purpose language, not specialized. As opposed to e.g. Ruby, Python is associated with anything from machine learning to web development. - Network effect: The more people use Python, the more attractive it is because of the increasing availability of libraries. - It's proved itself as a get-shit-done-language. Because of its simplicity and clarity, Python is still to me the language that imposes the least barrier between thinking up a solution and expressing it programmatically. 
But the same operation will regularly happen on all your workers at the same time. Besides, you usually combine workers with async, not use one orbthe other. 
Best practice is to import * from a local typing module containing all type implrts in a try except
Here is a good response to that question. https://stackoverflow.com/a/2356911
In my opinion the only reason to store in CSV would be on a desktop PC to view visually, otherwise DB is the ONLY way to go. Why mangle data in CSV when you can mangle it in your programming language instead, makes no sense to me. I have only stored to CSV when I was learning python in some excercise.
Try subprocess module and it's functions. It's python native and could go a long way to build on.. Third party modules for system functions could pose a challenge depending on the OS.. For example clustershell runs only on nix systems.. 
I've used plotly with vue and elementui, everything was in javascript, no python at all.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/bayesianprogramming] [pomegranate v0.8.0 released: probabilistic modeling in python • r\/Python](https://np.reddit.com/r/BayesianProgramming/comments/75glot/pomegranate_v080_released_probabilistic_modeling/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
Yeah I did. It's to prevent others from being able to use the same bot. I don't know if it's a normal thing to do but I would rather not give public access to the bot. Also I removed my reddit username and password from the script for obvious reasons 
Almost impossible to read that dark writing on black background... 
PHP has had `else` blocks since PHP 4. Does Python's `else` predate that?
Yeah i saw that you did it i was just wondering if you had manually done it or if the version control somehow kmew to. Thanks man!
It isn't.
You just need to do spells["magic_bolt"]["name"]. When you do spells["magic_bolt"], it'll the inner dictionary, and then you can chain accessor calls to get ["name"].
Appreciate the feedback! Are you trying out [Gaia](https://github.com/OpenDataAnalytics/gaia) or [GeoNotebook](https://github.com/OpenGeoscience/geonotebook) (sorry for the confusion) ? I'd like to pass the feedback to the correct Kitware devs to see what they can do about it, if there is something they can improve or if they can provide some help. Thanks!
You don't want to actually use your web service for your mining and reporting. Do that in EC2, then just build your web service to interface with your data. It sounds like the heavy lifting should all be done on it's own computing instance, so my recommendation for the web then is to make it easy on yourself and just use flask and host it on heroku, that way you have minimal configuring and don't need to worry yourself much with front end.
Yeah I had to do it manually. And no problem 
It's seen as a general-purpose language suitable for machine learning exactly *because* of the buffer protocol, else it would be wholly unsuitable for machine learning and libraries like NumPy, scikit-learn, PIL, etc wouldn't be possible. Ruby is arguably as "general purpose" but never got the same love at the C API level for fast access to data suitable for numeric analysis libraries. Otherwise, the languages are basically at parity.
Log what input caused an exception in case of an error so you can reproduce an debug it properly. Logging every single step of a program, even if nothing goes wrong, only bloats your log file and does not really help.
Um, I know the reason now...
Same as last week, scikit-learn and tensorflow. 
I prefer Enthought Canopy, but I'm more of a data scientist than a python developer. 
&gt; Creating Interactive Visualizations None of the examples are interactive :upside_down_smile: Is there a reason why interactive vizs can't be embedded in a blog like this one? Maybe it's not written in python?
When I did my choice, once, I had my reasons for choosing anaconda and not Elpy (I've used Elpy before), but now it's all very foggy. Could be better support for virtualenv, easier documentation support or just that it was default for Prelude. Since I use Anaconda for everything, I also had a hunch that code completion and doc strings for all the included libraries would have a larger probability of "just working".
I tried but it started in German :) I found out how to switch to English: click on the Preferences icon (on the right side), and select English at the bottom of the first tab. And it uses Python 2.7. Is it possible to use Python 3 in it?
Thanks for the help. My solution was to just do tasks.remove(future) on each one after I am done using it. Not sure if this is the right way to do it but it has cleared up my memory issue. 
Probably because of hosting. Dash generates its own html page. If you wanted to embed it in a blog you'd probably have to setup a reverse proxy and use iframes. 
You will learn more from building one complete application program than you will from solving dozens of hypothetical coding questions. The key question is what's interesting *to you*? 
I am scraping my kids school website and download homework and quiz scores in a mysql table, then an Amazon Alexa skill will tell me when they are missing a homework or let me know when the scores are below some percentage. I am using mainly lxml and flask-ask. 
Could I DM you for questions as I go along with this?
Yep, apologies... It's due to my settings being dark theme on reddit bacon reader... Doh!! 
 &gt;&gt;&gt; t = (1, 2) &gt;&gt;&gt; setattr(t, 'foo', 3) Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; AttributeError: 'tuple' object has no attribute 'foo' There's no general way of testing if `setattr` works aside from calling it because objects can do whatever it wants in [`__setattr__`](https://docs.python.org/3/reference/datamodel.html#object.__setattr__). Just do a try and except if you can't be sure your input supports it.
Some possible ways to guess about this: In the case of `setattr`, there are two possibilities that come to mind. One is when the attribute you are trying to set is implemented by a descriptor with no setter, hence making it a read-only attribute. The other is when the object has no attribute dictionary, such as when you use `__slots__` to predefine named attributes of a class. For example, if you define: class foo(object): __slots__ = ['a'] x = foo() x.a = 1 # works you will not be able to set any attribute other than `a`, whether by direct assignment or `setattr`. With regard to `inspect.signature`, try it on a built in type like `str`... my guess is that has to be added explicitly for stuff implemented in C, since C based functions don't necessarily go through the same process as a Python definition. And it just hasn't been added to some or all of the C libraries. If you're going to be inspecting arbitrary functions that could be builtins, just be prepared to handle an exception.
You should be using /r/learnpython for these types of questions. Some advice, break into the debugger. The error is pretty explanatory here, what are the types of `date1` and `date2`?
You have to convert the text to a datetime object first. You can use `dateutil.parser.parse` for that. &gt;&gt;&gt; from dateutil.parser import parse &gt;&gt;&gt; from dateutil.relativedelta import relativedelta &gt;&gt;&gt; date1 = parse('10/10/12') &gt;&gt;&gt; date2 = parse('12/12/12') &gt;&gt;&gt; r = relativedelta(date2,date1) &gt;&gt;&gt; print(r.months) 2 --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
That works perfectly 
Who's asking? You or your teacher?
It's using Jython, which is based on Python 2.7. :-(
It’s the first part of my NEA controlled assessment and i’m unsure how to do it so why not ask on here? 
It seems like you just want the answer to the problem that you were assigned rather than asking questions about some small part of the problem you're stuck on. In other words, it's frowned upon for people to ask this sub to just do their work for them.
Are you asking how to get the first 3 letters of a string? Look into "string splicing". &gt;&gt;&gt; "Gemma Smith"[:3] 'Gem' --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Automating server setups for the company I am working for. So far it installs the software needed for the server, sets up the firewall rules and folder shares. Automating all of the boring repetitive stuff
I would love automating some boring tasks like booking a movie ticket or web scraping to collect data about my institute exam. But I don't know how complex these things can get. I tried making a sudoku project and it looked hell lot of effort. 
Think of them as distinct systems that work towards one goal: your framework responds to requests as quickly as possible, your web server(s) and HAProxy make sure your framework remains available to as many users as possible. Your doc store holds the reports they both serve, and your report engine on some sort of chron job or trigger that fires when the MySQL data updates pushes fresh reports to the doc store to be served. All or any of them can be in whatever language best suits that task, and all can be served on someone else's hardware easily enough.
Github link to the source code: https://github.com/EdjeElectronics/OpenCV-Playing-Card-Detector
/r/learnpython might be a better place for the question, but I'll give some hints. The string you're getting back is highly predictable, so no need to use complex regex, just do the most simple thing. String have a number of built in methods that will make this easier. I would start with the split() method to get just the line you care about. Then maybe use the find() method to locate the end of the part you don't care about. Strings can also use array slice notation like an array, so you can do something like foo[4:6] to get just the substring you want.
The env var is a good approach for sure. Unit tests can be written to hold the log level set in the code to whatever it needs to be by default and you won’t really have to worry about it much more.
Does he/she really have that much data?
&gt; Some possible ways to guess about this There is no need for this as answers were provided to the same question which was put on the main Python mailing list nearly three hours ago.
Re-enforcing the concepts I've learned by building a secure file transfer portal. Using Flask, Flask-Login and Flask-Permissions. Any comments on other useful modules would be appreciated.
Most of the thread's time is spent waiting for a new frame to appear self.stream.read() During that time, the thread will release the GIL while it sits and waits for new data. It will momentarily need to grab the GIL to assign the new variables, but that's such a small slice of time that it shouldn't have a noticeable impact on the rest of your program.
Or, for example, instead of `if f==3`, say `is_equivalent = f==3`, then `if is_equivalent:` and `if not is_equivalent:`
So the overhead from grabbing and releasing the GIL when frames come shouldn't matter much? 
There is this other free ide called a terminal. It’s super duper. 
Since there's really only 1 thing this could be used for let me say a PSA: Counting cards is completely legal. Using a device to count cards is illegal. However, doing either will probably result in you getting your teeth kicked in. Play on boys. 
Crying over terraform syntax while banging my head on EWS components.
Very cool. Next stop Vegas!
Adding to what people have already said, you might want to write your “compute service” in cython if it is very performance intensive. Adding types speeds things up a lot. Also you should think about a caching layer between your db/compute service and REST service, this way you can just get a report from cache if it’s already been generated.
Could provide a code sample elaborating your technique? 
Got any tips for someone who is just starting to understand open cv? 
Yea the overhead should be negligible. I would suggest not worrying about it unless you actually observe a problem with your performance. 
He says Python got that from [ABC](https://en.wikipedia.org/wiki/ABC_\(programming_language\)).
**ABC (programming language)** ABC is an imperative general-purpose programming language and programming environment developed at CWI, Netherlands by Leo Geurts, Lambert Meertens, and Steven Pemberton. It is interactive, structured, high-level, and intended to be used instead of BASIC, Pascal, or AWK. It is not meant to be a systems-programming language but is intended for teaching or prototyping. The language had a major influence on the design of the Python programming language; Guido van Rossum, who developed Python, previously worked for several years on the ABC system in the early 1980s. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.27
Awesome, thanks!
What are you talking about ? What operation What same time ? Do you know diffrences in flow control of sync vs async ? I don’t think so. 
Newbie here, I just discovered that PG&amp;E lets you download a csv of your gas and electric usage. I now have hour-by-hour data on electricity and day-by-day data on gas for the past four years, so I'm gonna have fun practicing working this dataset with the languages I'm learning. Goal is to practice working with data analysis, and also figure out how to turn the findings into actionable information and help me reduce my monthly bill. Win-win!
If you wish to use regular expressions: import re string = 'Sometext Utilization: 100% moretext' ex = re.search(r'(?&lt;=Utilization: )\d{2,3}', string) print(ex.group(0)) 
If he is only doing it to create a bot against which to play, I don't see a problem
You can search for string "imposter syndrome disclaimer" on github and find open source projects that accept newbie developers
Very very cool project
 my_list.append(RollDice) you are appending function to the list. Instead, you want to append the result: my_list.append(RollDice())
Very good feedback. Thanks! 
Could this run on a better camera that gets 60 FPS? Asking for a friend..
dict = {"totallyquiche" : {"name" : "Brian D.", "age" : 27, "country" : "USA" } } print dict["totallyquiche"]["name"] print dict["totallyquiche"]["age"] print dict["totallyquiche"]["country"]
&gt; blueJ Bringing back memories...
The problem isnt the camera. Its the limited power of the raspberry pi. If you have a camera which delivers 60 fps and enough cpu / gpu power, it should work.
O tnks 
Sanic supports multiple process workers and uvicorn recommends one worker process per CPU. With asyncio you get to handle more requests while you're waiting on IO. Eg 4 (1x ncores) workers that can handle 1000 clients each Vs 9 (2x ncores +1) workers that can handle 1 client each.
I think he means simplicity.
Yep, the PiCamera can actually deliver 60FPS, but the Rasbperry Pi just can't process it fast enough. Also, I set the camera up in 1280 x 720 resolution instead of full HD 1920 x 1080, because it takes a lot more processing power for higher resolution images. If you set it up with a webcam and desktop PC, you could get it to run a lot faster! The higher resolution also helps with identifying the cards better.
Right now I'm just thinking of using it as a way to practice card counting! If I develop it to the point where I could secretly use it at a casino, I won't be sharing it on Reddit ;)
Yes! I started learning it about 3 months ago, and the online tutorial [here](https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_tutorials.html) is very helpful. I worked through the whole tutorial, keeping in mind how I might apply each lesson to make my card detector program. It helps to have an end goal you want to try and accomplish, like say to develop program that can read the text on a license plate or something. In my experience, having a purpose to going through the tutorial helps all the info stick better.
Thank you! :)
Generally with any solution - you should use one async worker/cpu and few sync workers/cpu that’s because those two apporoaches differ tremendously with way they do their jobs.
found an [open bug](https://github.com/celery/celery/issues/3589) on that decorator I got a beat to run using this instead, it's sending tasks to the queue app.conf.beat_schedule almost there, having issues importing my tasks
I've been taking a class that uses a lot of Jupyter Notebook, and it inspired me to try my own hand at the approach: https://github.com/ianb/sheets It's not really that usable, but I'm having fun getting back into Python. I'd be curious if people have ideas for what they'd like to do in a notebook style interface. I'm thinking about rich representations of objects, object inspectors, some runtime inspection, and easy serialization/deserialization for saving results over time, and representing objects that aren't code or Markdown objects. I'm struggling with what the interface should actually feel like. Maybe the linear feel of Jupyter is fine, and I should just try to start by replicating that. I don't want to create something that feels like a tabbed editor. But I suspect there are other ideas I'm not thinking of.
Well, given I'm learning AWS ecosystem, so my $0.02. 1. Convert your code to run lambda to scrap the data into a CSV file and put it on S3. (lambda + S3). 2. (optional) Run another lambda that will parse the CSV into DynamoDB (DynamoDB). 3. Use SES or SNS to email you any new item or whatever query. (SES/SNS). 4. Create AWS API Gateway off your DynamoDB. (API Gateway) 5. Writes HTML/Javascript dashboard on your S3 to call those API calls. 
Here are some ways you can get the values from a dict. https://bpaste.net/show/8a7f6294c73e If you're using python 2 you can also use my_dict.itervalues()
Yea I have my goal in place. And that link is one of my go to references. 
I created this tool out of individual necessity. I didn't really have great solutions to maintaining the semver of applications I've written. Plus, wiring them into the application themselves was never fun. This tool allows me to easily do this stuff. Generate and increment the version of the current application. Perhaps others will find this useful, or maybe there is another way people are doing this out there. But for me, this is finally a breath of fresh semver air.
https://bpaste.net/show/e1c598230344 is this what you need?
And it therefore does not deserve to be treated like it's good for beginners IMO. 
&gt; Since there's really only 1 thing this could be used for ... I completely disagree. What if I wanted to automatically verify my decks before they are issued?
How well does the detection work if the cards are overlapping? Think of cards in a stack like in solitaire (Klondike) where little beyond the corner is visible on the card.
Have a look at this: https://www.google.co.uk/search?q=windows+api+connect+to+wifi+python&amp;oq=windows+api+connect+to+wifi+python&amp;gs_l=psy-ab.3...9103.10269.0.10789.7.7.0.0.0.0.184.869.1j5.6.0....0...1.1.64.psy-ab..1.5.701...33i22i29i30k1.0.G4UA7PWgrWU
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Thanks for response! Its late in my country atm But ill look into it later
Nice.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I like to use them for function signatures. They aid documentation/understandability and intellisense. I don't feel the need to use them any other places though.
I don't see your point
Very cool, but you definitely don't want to double a hard 20 when the dealer is showing a 6.
More DRF APIs for me. Seems like this is what I do the most now.
How difficult would it be to transport this functionality to an Android application? I want to make an app where you can take a picture or real-time video of a texas hold' em poker game (all five table cards as well as pairs of face-up cards, one pair for each player) and have the app spit back which player won the game. Me and my friends sometimes have trouble figuring out who won the hand if there's a tie or something along those lines. 
Bumpversion ....
Trying to implement a Forth in Python by following the JonesForth tutorial. I was very enthousiastic the first couple of days but I kind of lost the interest as soon as got the basics working :-(
Understanding functions is import before moving on to closures and decorators. Preparing this notes has helped me cement my knowledge of first-class functions, and thank you to Corey Schafer, your [YouTube channel]( https://www.youtube.com/channel/UCCezIgC97PvUuR4_gbFUs5g) is wonderful!
Have you tried profiling your current setup?
Cool, other than that, I don't have any other tips. Good luck!!
Uh...why not? I can only think of one other hand I'd rather double down. 
https://www.youtube.com/watch?v=b6_IZK-1naY :)
How easy is it to install it in Anaconda? 
&gt;[**I Also Like to Live Dangerously [0:36]**](http://youtu.be/b6_IZK-1naY) &gt;&gt;Austin Powers: International Man of Mystery &gt; [*^Mac ^Barron*](https://www.youtube.com/channel/UCiAY8S6WqEROH9ymlCXmvVA) ^in ^Comedy &gt;*^70,448 ^views ^since ^Feb ^2014* [^bot ^info](/r/youtubefactsbot/wiki/index)
Interesting, do you think you could do something similar for Mtg, Pokemon, Yugioh or other trading cards? It would be a bigger database than a 52 card deck.
Unforunately, it doesn't work when the cards are overlapping, because I rely on having the full contour of the card to isolate the rank and suit. I'm going to fix that in the next phase of my project. I think I will need to use Haar Cascade Classifiers, or something similar, which might be able to recognize all rank+ suit combinations in the image.
Oh wow, protocols look *exactly* like what I've been looking for.
In general you shouldnt have to as I've understood it (for mypy's sake), it seems to be a Haskell-kind of type system.
Can this be compiled with brython or is there a way to get this running with just html/js? 
Open page, first thing I see: &gt;Improve Your Python with a fresh 🐍 Python Trick 💌 every couple of days &gt;🔒 No spam ever. Unsubscribe any time. Yeahhhhhh..Close this page
I don't know much about app development, but I saw an Android app that does do something similar (which I can't seem to find right now). I think it is very doable, but I don't know what would be involved. Sounds like a fun project and a good use case! There is an OpenCV platform for Android: https://opencv.org/platforms/android/
The pattern I've used for this sort of thing is the past is to separate the notion of a data product from the underlying source data. The data product gets stored in a cache with a key like "big_report/&lt;market&gt;/&lt;company&gt;" and, as the source data changes, the affected cache entries get updated. I've got a project designed to scratch this itch at https://gitlab.com/frameworklabs/kck It's not yet at v1, but it might be worth a look.
May i ask why counting cards is not allowed ? the whole point of a deck with a small amount of cards is to be easily tracked
Yes, those are all possible applications of a card monitoring system in a casino. [Here's a video](https://www.youtube.com/watch?v=RgjPcP4HN58) of a really good card detector that was built for doing exactly those things. I wish they would explain how they get it to work so well! But they're selling it so of course they don't want it to be open source. My goal is to make mine work as well as the one in that video!
&gt; PHP runs 10s to 10min per report optimize your database first. Changing from PHP to PHP-ized-Python (do you have a tech lead that knows more than beginner-level Python?) isn't going to speed anything up if your database is still inefficient. 
I'm creating a capacity planning &amp; scheduling tool. It'll let me define jobs and their requirements, and then figure out the most efficient way to schedule them. Long-term it will read from and update all the spreadsheets we still use for business, until such time as I can convince everyone that Excel is not a CRM/ERP tool.
Awesome, thanks for the response dude! I'll look into that and let you know if I can get it working.
I've adopted the `# type: (str, str) -&gt; bool` under the function name, but before the docstring, to be Python2 and 3 compatible. PyCharm picks these up fantastically. I've only started using custom Union types / Type aliases, but don't foresee any major problems in Python3. I wish they would backport the `typing` module.
How much of a stretch is face recognition from this work? I'm unfamiliar with this realm, so feel free to talk down to me :D
Counting cards is literally just being good at the game. Casinos don't like it because they make more money from people doing badly. 
I could do it, I have no idea if you can. 
cool. I'm working on a project management app. perhaps there is some overlap. is it open-source?
lol thanks bud. Here is a link I found on google. I'm pretty much everyone finds this guys blog when trying to find info about opencv for python. But I found his website to be a good resource. https://www.pyimagesearch.com/ Just thought I should add something too ;)
It will be once I get it decently far along. I'd be happy to work with you though. I'll shoot you a PM
Check out https://automatetheboringstuff.com/ 
It's actually pretty easy to get a basic facial recognition program working! OpenCV already has some good classifiers for face detection, so you basically just need to call a function or two. Installing OpenCV on PC and figuring out how to access a video feed in Python are probably the hardest parts :) [Here](https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_objdetect/py_face_detection/py_face_detection.html) is a good tutorial on how to detect faces with OpenCV. If you're interested in OpenCV, this is a good place to start, because it's easy while still being super cool!
definitely reading this after a nap, bran farts everywhere...
It would be challenging! But I think it could be done. It might be easier to use Optical Character Recognition (OCR) to read the text on each card in the image, instead of trying to match up the contours.
why isn't ruby as fast growing then? 
Being fluent in more than one programming language is essential to any good programmer's career. If you are brand new to both of those languages, I'd suggest that you focus on one first until you get the basics (however long that takes) before you start on the other. Once you feel you have a solid beginner foundation on each, you can work on getting more advanced in both. I would still suggest limiting your additional training to one language in a day or over two days before doing anything with the other. I knew quite a lot of Python myself when I started learning Javascript/node. I did find myself getting confused with syntax at times but a good IDE will let you know it as it happens. :) Experiment and see what works best for you. If you find that you are getting confused, stick with one until you get more proficient.
Nice, saved this post. 
1: Yep 2: Yep 3: Nope/probably not. I haven't done any of those specific tasks myself, but you'll probably get most of what you need by googling "python save webpage as pdf" which returns a bunch of what look to be useful hits. I won't claim that this is the right way to do it, or the right tool to use, but the first hit gave me a two-liner which pretty much looks like what you need: import pdfkit pdfkit.from_url('http://google.com', 'out.pdf')
Thanks for the reply!
Wikipedia says either is acceptable, but that modern usage defines the sequence as starting with 0
How precise is the identification? Could it be adapted to work for, say, streaming for a collectible card game like Magic the Gathering?
Griffin Investigations has been dead a long time.
It's fairly precise, although it doesn't work as well if the camera is further away from the cards. For Magic or similar games, I think you could use Optical Character Recognition (OCR) to read each card and identify them by their text, rather than trying to match the contours on the card.
Binary data contains sequences that is illegal for text encoding. Therefore you cannot copy / paste binary data into notepad or Reddit without corrupting it. The data you posted is worthless. If you actually have the binary file, you can encode it with base64 to transform it into a text legal form. But I'm guessing your prof posted it as text specifically to show you that binary data gets corrupted when you try to treat it like text. 
In the side bar of this subreddit there's a link to a free book called Automate the Boring Stuff with Python. This explains how to do almost exactly what you're wanting to do.
We host all the servers on the cloud, and we are looking for a good solutions for this mining system. If we make the web service and mining separate, do we make the mining system into a linux service? How do the two systems interact? &gt; a solution I can come out of is to let the application write results in a shared DB, so another web service can make use of the results. Is this a good approach? 
You are welcome to, but you and the community will benefit more from posting your questions here or in /r/learnpython. There are many people here more capable and experienced than I am. Also, Reddit never sleeps while I do...a lot. Feel free to though.
I don't think you want to log every statement that _might_ be bug as there will be too many log statements. Maybe you want to add a breakpoint in a dynamic debugger like pdb? 
i just want to make sure i'm understanding. If i had the binary file I would decode it in base64 to get his original file?
No. If you had the original file and you wanted to post it as text, for instance here on reddit, then you would have to first encode it as base64. Then we could download it and recreate the file by decoding base64. The way you did it corrupts the data, since there is no way for text to represent over half the possible bytes in binary file. 
Thank you. Our problem is choosing the right structure for the mining part. We can make it into a web service and use cron job to make it running consistently, or is it better to build a backend linux service which is always running? What Pythonic approach is good for making such a linux service? 
Oh sure, I don't expect instant results. I was just wondering sort of where in the scale of skill this sort of thing lies. Sounds like it's on the lower end, which is good. I will be sure to check out that book, thanks!
Well i know what i'm talking about, do you ? This comment thread started because i wrote: "One misplaced sync operation and it stops" - that is correct. With ANY async app - if you improperly execute for example a http request(without yield or async/await) in middle of a function it will freeze the event loop. Thus freeze the worker for every task that the instance is processing. After that you wrote: "Same when you're not using asyncio" - that is also correct. Every sync app works this way. But we're talking about async here. Then i wrote: "Yes. But in usual deployment you have multiple workers. And in aio/twisted you have one. You can use threads but it’s not kosher." In a sync app deployment (Django for example) you run multiple workers since one worker runs one job at a time, so you need multiple of those to handle multiple requests. In a async app you yield all the blocking stuff and event loop/reactor returns the control after the I or O has been done. And you can thread that sync operation but it's not cool isn't it ? Yes of course - you can run multiple async worker instances but generally speaking you should run one / core. So now for the point about the "generally any solution comment". Properly written async app can perfectly solely occupy one CPU core because it doesn't need context switching between multiple instances. You can/should run multiple of those but generally one/physical cpu core. A sync app needs to have multiple workers and thus it's ok to spawn multiple workers for a single core. Kernel needs to do context switching and thus all that stuff it's a bit slower. So we're here , why is my score -4 ?
That landing page is a massive turn off. No thanks.
IMO (bit of a newbie still), you would create your compute system that generates your data, and stores it in your database. That would be a service that runs the entire time. Then you would focus on a second component that makes the reports you need, and allows them to be served via some sort of API. The report wouldn't need to be rendered, just have a set of data that's pre-calculated and correlated from your back end data store. From there, you can have another service (probably on another box ), that does the rendering and serving of the "report" into it's final graphical form based on web calls.
Second this. Bumpversion has become almost a standard and it is among the suggested versioning techniques by PyPA. 
it is availble on pip, so 2.7 with typing is possible
The range you want is 0 to N times. for i in range(int(N)): #do stuff --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
/r/learnpython 
&gt; for i in range(int(N)): I had tried this before, but all I get is the output four time. Is there something else I'm missing?
The "do stuff" needs to include everything you want to do N number of times. Including (I presume) the second input. Here's some working code: N = input("How many times should we loop?") print ("Thank you for your input. We will now loop", N, "times!") for i in range(int(N)): X = int(input("Input a number to test if even or odd.")) if X % 2 == 0: print ("OUTPUT", X, "is even") if X % 2 != 0: print ("OUTPUT", X, "is odd")
Just to be clear - facial *detection* is easy. Facial *recognition*, i.e. recognizing a specific face as belonging to a specific person, is not easy :)
Yes, that is what I had tried, but my goal was to to ask the user for another input after each iteration. I don't think I explained myself well enough.
That's what my code does. Try it. 
Oh wow thank you. I was missing this line. X = int(input("Input a number to test if even or odd.")) That makes a lot of sense, I guess i just have to get used to how things are written. Thanks again for your help. 
Are you asking about how to reverse-engineer binary formats, or how to read them? Your prof might be trolling you by putting mangled "text" output from the binary (.docx is a zipped folder) onto a slide. If you have an accurate way to reconstruct it, you could maybe open it, but immediately when you see any non-ASCII characters, you're hosed unless you know what encoding it was dumped as. Even then, non-printables (e.g. null chars) are probably gone entirely.
So, there's almost no content in this article. "You don't need a CS degree to get a job. Bootcamps are good but three weeks != four years." Anyone here have any real advice for self-taught devs getting a job?
Good question. The blog is a static blog using pelican so I imagine it would not be trivial to integrate into the blog. If I were to spin this up in a truly interactive fashion, I would need to setup a flask instance somewhere (maybe pythonanywhere) and run from there.
I really like the type annotations as a more succinct way of documenting interfaces (instead of free text in docstrings). We increasingly do this in production and I tend to do it more often than not in my side projects these days. I tried mypy for a side project of mine a while ago and it had a few too many rough edges for my taste. I've been meaning to try it again but haven't had a chance yet.
Ask your professor
I look at the interface for both and decide which one makes more sense to me. I for one love requests and will import it everytime I need a client.
I don't know how they do it, but I do know how I would solve it. Using a convolutional neural network like SSD or FasterRCNN makes it almost trivial to implement.
thanks dude! it sounds like learnpython is my best bet!
You should have the miner working separately from your web server. As far as how they interact, it all depends on what exactly you are trying to do, build a dashboard and display data? Have users trigger various jobs? 
First off a docx is a zip file, so unzip it. Then, it follows to xhtml spec. You can reverse engineer complex data formats, but it takes a while; like years for the one I work on, but you're never going to do it if it's effectively encrypted or without a lot of test cases. I at least have an inaccurate and incomplete spec as well as ~10,000 test cases.
These modules are basically the first thing I install for every project. `daiquiri` for simplified logging setup. `ujson` for really fast JSON parsing. `requests` for more simple HTTP requests. `gevent` &gt; `threading` for strictly IO bound Python code. I also prefer gevent code to the AsyncIO model. `toolz` (or `cytoolz`) for highly optimized iterator helpers. (based on `itertools`) `psutil` &gt; `subprocess` for system statistics. (simpler) `testtools` &gt; `unittest` if you're not using `pytest`. `arrow` &gt; `datetime` when you're doing actual parsing.
This video helped me understand these https://youtu.be/88O0ER5jVCg
&gt;[**TYPE ANNOTATIONS IN PYTHON 3: WHATS, WHYS &amp; WOWS! [39:45]**](http://youtu.be/88O0ER5jVCg) &gt;&gt;Python 3.5 introduced support for “type hints” (or annotations), which allows us to annotate our code with useful bits of information without affecting its runtime behavior. Type hints don’t enforce a particular use case and can therefore be used for many purposes. &gt; [*^Python ^Tutorial*](https://www.youtube.com/channel/UC0MjyrJVnDLc8a2JTbeH6Mg) ^in ^Science ^&amp; ^Technology &gt;*^169 ^views ^since ^Sep ^2017* [^bot ^info](/r/youtubefactsbot/wiki/index)
Interesting, never heard of daiquiri till now. The others I use though
don't worry, i'm a total noob. the most coding i do these days is some work with data (esp. data extraction from images), web scraping, and file management. while we're on the subject, though-- if i'm walking around Washington, DC, for example, I know i'm going to be seen by many cameras. i'm assuming the US govt is on the forefront of facial recognition software?
Do you have any tips on reading numbers in small imgs like [this](https://imgur.com/a/nxRF3)? I get inconsistent results. I'm only interested in the numbers.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/B5VrWMF.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20do754tw) 
Have work to show off on Github and network, network, network your ass off at local meetups and larger conferences. The last 4 jobs I've had I've gotten all of them at conferences
Heh yeah sure. Crappy 2-d images at a distance and oblique angle are probably pretty tough to use as source material though. Look at all the bells and whistles the iPhone X uses to reliably id a face right in front of it. Two cameras, an IR dot matrix, depth mapping... I think it’s still a bit far fetched that people are being tracked just walking around a city.
That's really cool.
That's very true. We have both volatile data for a dashboard to show in real-time, as well as archived reports that need to be retrieved later. We can save reports as CSV files and put in NAS, while also save volatile data in database. Seems we came out with a solution at last, thanks for your advice! 
I use them pretty heavily in the code I write. It has some rough edges, but it works pretty effectively for the most part, and love being able to provably eliminate an entire category of bugs from my codebase. (Sure, you can write unit tests/write defensive code to increase the odds of catching certain kinds of bugs, yadda yadda, but honestly, I'm pretty lazy, and mypy lets me avoid having to write that sort of boring code. I'd rather save my energy and write unit tests/runtime checks for genuinely complex invariants and preconditions.) In particular, I've always found keeping track of unicode vs bytes to be tricky. Mypy has proven to be a relatively effective way of flushing out those types of errors entirely (since you can use types to cleanly keep track of the difference between the two). I also like using NewType to layer additional semantic meaning to my code. For example, I could use NewType have the type checker ensure that I don't accidentally give some function a UserId when I actually needed to give it an EmailAddr, or make sure I don't plug an UnsafeStr into an HtmlTemplate without first converting the UnsafeStr into an HtmlEscapedStr first, or something. (And these types are all actually strs at runtime, so I don't really pay a performance penalty.)
I’ve done this sort of thing a few times. First, there is a thing called [f2py](https://docs.scipy.org/doc/numpy-dev/f2py/) that you may want to look at. I haven’t actually used it yet but it may work for what you want to do. Now, being in a science field that is filled with old fortran codes, I did rewrite a couple things to make them easier to use/create prettier plots/etc. I started this with very very minimal fortran knowledge but the basic premise was to just read the code and dive in (I did have the benefit of understanding the data and calculations quite well and the fortran had good variable names). Basically the process was broken down into small chunks. I’d see a fortran loop and say ‘ok it’s working on this data, let’s try and put that same idea/calculation in a python for loop...oh that’s super slow, maybe I can use a numpy array instead.’ Just work through it piece by piece. You’ll pick up the gist of the fortran rather quickly. This is all assuming that you know python but don’t know fortran of course. 
Sure. Here's the version from the blog modified: def registered(fn): registered.registry.append(fn) return fn registered.registry = [] In python, functions are just objects, so you can set attributes on them just like any other object. This way of thinking makes it obvious why the idiom makes sense - if you tried to implement your registry as an object, you'd make the registry itself a class attribute. So why not effectively do that with a function?
Multiple variable assignment? I haven't seen that in any other language, except very recently in Javascript.
"How to get a job as a self-taught programmer as described by someone who is not a self taught programmer". I usually like this guy's blog, but this is click bait garbage. At best it is uninformative, at worst it is condescending. 
I use them i production code, they are fantastic and have helped me find bugs, fix bugs and prevent bugs. I primarily use mypy via py.test by using https://github.com/dbader/pytest-mypy
I was a Turbo Pascal/Delphi user for many, many, many, many years before I found Python a few years ago. :-) 
I'd say 10 MB is generally not a huge deal, but maybe offer a code only version of the package as well as a full version for those who have network restrictions or don't want the examples.
this is what i get for listening to pundits talk about engineering instead of engineers. thanks for the input 
There's a million ways to do this, and it depends a great deal on precisely what it is you're doing. In another response you say the report can be stored as .csv, which implies it's just tabular data, numbers and text, so it could also be modeled in JSON, and directly stored in a time series or document store DB for retrieval. It's unclear if you need to keep historical reports around or if you're just always providing the latest report(s) for the current state of the DB. You say the data changes often; how often? How often does the change constitute something that should trigger a report build? Should the report truly be building on a fixed schedule, or should it be reacting to changes as they happen? How often does any given report algorithm itself change? If the data changes while a report is being generated, should that kill the running report? It could be a fit for "serverless", where a (for instance AWS Lambda) job is spun up to react to changes in the data DB itself. It could also be a fit for a persistent instance running on a chron. That chron could always be pulling a Docker image you compile automatically whenever your devs push a change to the report logic. And so on. It feels like maybe you're focussing (and trying to decide on) language and OS choices before you've got the overall app modeled out. There is little practical difference between a process run by a chron at 30 second intervals and a persistent service that sleeps 30 seconds between runs, if in either case the business logic takes less than 30 seconds to run.
&gt; This is all assuming that you know python but don’t know fortran of course. This is correct! Diving in now. If there are parts I can't get, mind if I PM you?
I like it because you can do a 1-line setup. I wish the logging module had something better than `basicConfig`. Most people just use `print` because it takes 5-10 lines to log to stdout...daiquiri makes it a non issue. Plus, JSONP logging is available by default.
Have you seen [quilt](https://docs.quiltdata.com/)? I was introduced to it recently and I really like the approach it uses to solving this kind of problem.
**Idea 1:** Rather than bundling the files with the install, you could bundle it with the documentation. Then as part of a tutorial, you could include a download link for the data: :download:`examples.zip &lt;/_static/examples.zip&gt;` This way, you aren't dictating where the files go and users can manage their own project folders as they see fit. **Idea 2:** You could create an example/demonstration project that is installed separately. Perhaps: pip install geoplot-examples So you would be using pip as your package downloader instead of writing your own.
&gt; I really like the type annotations as a more succinct way of documenting interfaces (instead of free text in docstrings). There's also [sphinx-autodoc-typehints](https://pypi.python.org/pypi/sphinx-autodoc-typehints), if you want to add the annotations back into the documentation.
Some sort of web scraper to pull and order data YOU care about. I find it easier to go when it's a project I personally need.
Anaconda is python bundled with some tools (conda, jupyter, Spyder) and many common packages compiled with optimizations. Conda is a multi purpose tool. It can install packages like pip, but it has the built in ability to search multiple channels and install precompiled binaries. Pip on the other hand you'll need to tell where to download from if not from pypi and it requires compiling of any extension code (pyqt, numpy etc). Conda also let's you do virtualenvs with many different versions of Python easily. Virtual envs and conda environments are fairly similar and essentially let you isolate different working environments from each other. For example I can have multiple environments where each has different python versions and different versions of packages. Generally consider python the barebones install, and anaconda is a distribution on steroids.
Could you do some trickier with the pixels to increase the speed at which the raspberry pi processors it all? Eg. Once you've seperated the value and suit, could you sample the image with a grid of a certain size eg.32x32 and count the number of white and black pixels. Do this for the entirety of the image. Then just compare the number of white and black pixels against the catalogue of values and suits. This seems far less process intensitive than comparing x number of pixels 17 times. Or I'd be interested to see if there is a sigificant difference in the total number of black and white pixels across the set of values or suit.
 I was aware of it already, actually. I am learning towards this now. I wasn't sure I wanted to put the fate of my example code in the hands of a startup, but hearing that this is a VanderPlas pick makes me more confident with this option.
A better mic would help a lot.
Become a spaceman and do dark science. Keep the money you make in the margins under $400 a day. Use PHP for your Landers and redirects, python for mailing, automation. Ya you can make a lot. Knew a guy pounding 50k a day give or take and was paid in gold eagles. Believe he is serving the max three year irs sentence for being greedy.
Where can I learn more about convolutional neural networks? Is there a good place to start besides a Google search and the Wikipedia page?
Have you tried IDLE?
I had to look this one up: [parallel assignment is apparently as early as 1963 in CPL](https://en.wikipedia.org/wiki/Assignment_\(computer_science\)#Parallel_assignment) Though it looks like maybe Python is the first with unpacking? Only other languages I know that can unpack are Haskell and Ruby and they postdate Python.
Yes, though briefly. I have experimented with Windows because people said using a full IDE is more useful so if I was going to use IDLE I would rather just use vim on linux.
I use them everywhere I can for prod code. As a haskelly sense, it helps me to keep invalid state unrepresentable, meaning far less defensive code checks needed. eg, if there's a 4-digit code like say, '9376' that I want to pass around, then originally each function before mypy would look something like this: (where check_code() makes sure that the string is a proper code). def do_some_work(code): check_code(code) # more logic... def do_some_other_work(code): check_code() # more logic... And so on. Now I can just use a class, like such early on in the program: code = Code("1234") Where Code does validation in constructor. And then after that, none of the functions need to do their own defensive checks, and MyPy has my back, too: def do_some_work(code: Code) -&gt; None: # more logic... def do_some_other_work(code: Code) -&gt; None: # more logic... 
It really depends on your project - sometimes they're amazing, in other situations not worth the bother. - Only supporting Python &gt;= 3.6 makes them much more pleasant to work with. You get a lovely syntax for variable annotations as well as inline function annotations, and much better library and syntax support. The comment syntax for Python 2 compatibility is... OK. It works, but you can't do any runtime introspection on them and the tooling isn't as good. - Static typing should be a design tool - it encourages you to use statically-typable structures and control flow, and then allows you to enforce correctness. Retrofitting it to an existing project is possible, but it's a lot more work to get the full power compared to starting with static types. - If you use PyCharm, use type hints. Full stop, their support is amazing and it makes the IDE substantially more powerful. - Adoption varies between low-moderate and very low, depending on the domain. More popular with web projects and developer tools; less with libraries - it mostly depends on the minimum version you can assume. For each of the following, add a point. Don't use if zero, consider if one, use if greater: doesn't support Python 2, only supports 3.6+, new project, developer tooling supports them (pycharm, Hypothesis, mypy, etc).
Worst case if you can access the camera and have internet connectivity.. you could always just do the image processing remotely somewhere in whatever language or framework makes that easiest.
I tried this one as our main project uses py.test as well - it had some serious performance issues though that made it really impractical for us to use it that way. Is it possible to restrict mypy checking to via the plugin?
Can you give me a use case on which I could use subprocess? 
&gt; Learn Python the Hard Way - Zed Shaw Awful. Avoid. &gt; Python 101 &amp; Python 201- Michael Driscoll Really good, 101 might be a bit too basic for you. &gt; Python Crash Course - Eric Matthes Really good, but also really basic. &gt; Think Python - Allen Downey Really good for understanding _why_ things work the way they do, but takes longer to get off the ground. Might be what you want, really.
The C API is a cancer of CPython, which introduces a lot of limitations. That's the main reason why we can't utilize multi-core systems in numpy/pandas. 
Having a good old read of the docs and looking at what functions are available is a good place to get a feel for it, then find some practical tasks which you can implement with them. I don’t know about your background, but the Python binding is really nice.
One of my first personal projects after learning to a beginner-intermediate level was to build a random password generator. After I had that constructed I slowly added more features to it. I created a GUI version. I linked it to a database so that I could store and retrieve old passwords. I eventually did away with my GUI version and implemented a web based version. 
Sidebar - "If you are about to ask a question, please consider r/learnpython or the learn python discord." Sorry, but you will not get help here.
What?
Got it. Thanks.
Siraj Naval on YouTube had lots of info about machine learning and neutral networks. https://www.youtube.com/channel/UCWN3xxRkmTPmbKwht9FuE5A
For getting started with applying machine learning, this should get you started: https://www.tensorflow.org/get_started/mnist/beginners If you want to understand how Neural Networks work, this relatively new video by 3blue1brown is good: https://www.youtube.com/watch?v=aircAruvnKk Start out learning about the history of trying to solve problems like this (there's a ton of different ways to solve these sorts of problems and only fairly recently has there been a massive shift to machine learning, ask yourself why that is), then if your goal is to learn about conv nets you should first learn about simple feed forward networks, autoencoders, etc. and work your way up to things like convolutional nets and recurrent nets. 
Other videos in this thread: [Watch Playlist &amp;#9654;](http://subtletv.com/_r75ia74?feature=playlist&amp;nline=1) VIDEO|COMMENT -|- [Tangam Visual Recognition System Card Demo](http://www.youtube.com/watch?v=RgjPcP4HN58)|[+8](https://www.reddit.com/r/Python/comments/75ia74/_/do6pk0a?context=10#do6pk0a) - Yes, those are all possible applications of a card monitoring system in a casino. Here's a video of a really good card detector that was built for doing exactly those things. I wish they would explain how they get it to work so well! But they're sell... [I Also Like to Live Dangerously](http://www.youtube.com/watch?v=b6_IZK-1naY)|[+4](https://www.reddit.com/r/Python/comments/75ia74/_/do6ozx3?context=10#do6ozx3) - :) [But what *is* a Neural Network? Deep learning, Part 1](http://www.youtube.com/watch?v=aircAruvnKk)|[+1](https://www.reddit.com/r/Python/comments/75ia74/_/do7h01u?context=10#do7h01u) - For getting started with applying machine learning, this should get you started: If you want to understand how Neural Networks work, this relatively new video by 3blue1brown is good: Start out learning about the history of trying to solve probl... I'm a bot working hard to help Redditors find related videos to watch. I'll keep this updated as long as I can. *** [Play All](http://subtletv.com/_r75ia74?feature=playlist&amp;ftrlnk=1) | [Info](https://np.reddit.com/r/SubtleTV/wiki/mentioned_videos) | Get me on [Chrome](https://chrome.google.com/webstore/detail/mentioned-videos-for-redd/fiimkmdalmgffhibfdjnhljpnigcmohf) / [Firefox](https://addons.mozilla.org/en-US/firefox/addon/mentioned-videos-for-reddit)
Yeah Siraj is great and will keep you interested in the material
How does opencv2 compare to neural networks in terms of object detection?
I suggest you to try [PyCharm](https://www.jetbrains.com/pycharm/download/), also works with Linux.
Wesley Chun’s python books are fairly good.
I can recommend pyscripter.
Working on a quick project I'm calling 'Familiar Face'. I always have those moments when I'm watching a movie or TV show where I swear I recognize the actor from somewhere else but I can't put my finger on it. This Flask app uses the movie database API to search for a movie/tv and specify release year if you want. Search results are images of movie poster. Click on the movie or show, and it pops up images of the entire cast. Click the cast member you recognize and it will bring back a gallery of every role the actor has played, showing images of them in character. I used google custom search API for finding images of the actor in character. Right now I'm getting ready to deploy it on pythonanywhere
OCR wouldn't work. At least not traditional OCR. Some preprocessing and neural nets would pretty much be your only realistic option. 
I have been using mypy in CI since 2014 and python 3.4 when I started work on a new product. It was very alpha back then but even useful back then. It has gotten much better since. I think its a great addition to make python as reliable as other staticalky typed language. And in my opinion gradual typing is better than static typing. I typically start with untyped code in the relp or even in the production code and add types when that particular module stabilizes. Recently the types have become ajtomatic for me so I find myself adding types as I write code just like I would in e.g. Java.
I suggest that you're going through the growing pains that we all suffer from, beautifully put in this [Beginners and experts](https://nedbatchelder.com/blog/201709/beginners_and_experts.html).
Ever thought about replacing Windows?
Just an idle curiosity question, how many of you have ever heard of them, how many of you have ever used them?
Yes I had this as first thought also. Could provide a lot of utility for tournaments and such. You'd need a neat solution for training though...
Who the heck recommended Windows for the IDEs? VSCode, as far as I can tell -- and in my experience all other Electron projects -- runs better on Mac and Linux. VS is really only great for C#, passable for everything else. PyCharm is noticeably more performant on Mac and Linux as well, though less so unless you're using the debugger, when it seems to become much more apparent. Honestly I've worked professionally on all three OSs, and I'd never even consider developing on Windows unless what you're writing is specifically a desktop app for Windows, or is otherwise specific to one of the few domains where Windows excels (no pun intended). In my somewhat jaded (and only moderately sarcastic) opinion those domains are mainly games, enterprise applications for corporations seeking to be hacked, and malware.
Crawlers from scratch. They have a specific purpose and are very challenging, especially for a beginner. You have the change to learn a lot of important things such as the HTTP protocol. Note: crawl only sites that allow you to. Checks their end user agreement first.
absolutely, this is the reference for Opencv in python.
I like [`delegator`](https://github.com/kennethreitz/delegator.py) over `subprocess` and [`pendulum`](https://pendulum.eustace.io/) over `datetime`. And obviously, [`pytest`](https://docs.pytest.org/en/latest/) over `unittest`.
i have no idea if any of my python code even works on Windows. i'd bet a lot of it doesn't . i have done virtually nothing on windows since diving into python (about 7 years ago). before python i programmed mostly in c (for the past 35 years). and even with c i had issues with Windows. in the earliest of days my issues were with x86 hardware due mostly to the 64k segmentation. i remember one program where i did a lot of that, feeling almost like an assembly programmer, which i actually did for 10 years before c (virtually no assembly in the past 20 years) on multiple platforms (mostly IBM mainframes). i tend to think the biggest problem with Windows is Windows. python probably helps smooth out such issues.
Oh dear. X X X X X X @ X Turn number: 7 Press any key to continue... Traceback (most recent call last): File "knightsmove.py", line 100, in &lt;module&gt; solveBoard(xPosition, yPosition, gameBoard) File "knightsmove.py", line 79, in solveBoard board[knightYPos][knightXPos] = '@' IndexError: list index out of range I'll leave you to find the problem. 
Just ignore all of that.
I switched to Ubuntu at 10.04 and Lubuntu sometime after that, just this last year I finally nuked my windows partition when I realized it had been over a year since I booted it.
Yes, you can make a living -- depending on what you mean by that -- by doing freelance dev in pretty much any language. In Python it's mainly going to be about automating things for businesses that cannot afford or do not wish to maintain development teams of their own. You can also chase bug bounties, become indispensable via open source projects that are core to someone's problem, or just generally hustle to build web apps for people who need them. The skill set can be all over the place, but is mainly determined by area of interest. Core things in my mind are the ability to interact with the underlying file system and databases, use external tools and libraries and retrieve results via subprocess and/or ctypes, manipulate text with re, and be able to test it all with at minimum unittest. Master those and you've got the start of a living helping small and medium businesses not shoot themselves in the head or foot. Want more living? Add more skills.
CSP? 
I can't agree with you more. Use Linux if you don't want to have more complex troubles or try to search and resolve those problems. Maybe it is a good experience for you.
Basically Anaconda wraps Python up with the tools and libraries that your operating system would already have if you were using an OS that wasn't seemingly from the ground up designed to be unfriendly to developers who are not developing solely for that OS. Conda is a *package manager*, albeit one very specifically aimed at Python, and really only giving you access to packages curated through one company's view of what's useful. On Mac you'd use **Homebrew**, on Linux **yum** or **apt** or **dnf** or others depending on which distribution you chose. These allow you to compile and install the external dependencies required for whatever you're working on. Windows by default is set up to be *user*-friendly, where *user* means someone who wants to launch games or business applications and / or surf (hopefully not exclusively or at least among other things) porn. It can be made dev friendly (ish), but it definitely doesn't start that way.
That’s by definition not an IDE. Plus this seems geared towards education, which is fantastic 
Provide instructions on where to download the 10MB bundle, and then force the user to set an environment variable when they run the examples that points to the data.
0xa4 really is an invalid start byte for UTF-8. your data is not in UTF-8 code or has been corrupted. maybe one of the various ISO-8859 codes. good luck figuring it out.
Why don’t you post the Fortran code? We could give you some advice on how easily it will translate 
I made several microblog web applications with and without web frame after I finishing those basic things. It was interesting and helped a lot for driving me to learn and understand network things. Just find one you are interested and dive into it.
Is python the best solution? If you’re doing a lot of CPU intensive tasks python isn’t going to be super speedy. You can mitigate this with libraries like numpy and cython, but I’d honestly consider looking into using Java. It’s a very popular backend language with lots of tooling, it’s very fast, and it’s much harder to shoot your self in the foot when compared to ANSI C orC++. It also interopts very well with Scala if you guys are dying for something newer or want to explore functional programming. 
hey u/pantsforbirds, Sure! Here it is: ! Program to simulate probability sampling proportional to ! size without replacement. ! implicit none type work real(8) :: p integer(4) :: idx end type work type village real(8) :: prob real(8) :: y character(len=40) :: villagename end type village type(work),dimension(:),allocatable :: wk type(village),dimension(:),allocatable :: place type(work) :: wk_temp integer(4) :: cn,n,i,j,k,noloop,loop,i1,i2 integer(4) :: init_unif integer(8) :: isum real(8),dimension(:),allocatable :: pi_i real(8),dimension(:,:),allocatable :: pi_ij real(8) :: temp,sum,u,rng_seed real(8) :: unif real(8),parameter :: zero=0.0d0, one=1.0d0, cl=50.0d0,ch=200.0d0 write(*,100) 100 format(1x,'Enter the number of villages in the population - ',$) read(*,*) cn ! allocate(wk(cn),place(cn),pi_i(cn),pi_ij(cn,cn),stat=k) if(k.ne.0) stop 'Unable to allocate the arrays' ! write(*,125) 125 format(1x,'Enter the RNG seed - ',$) read(*,*) rng_seed i=init_unif(rng_seed) ! ! get the selection probabilities ! open(10,file='rawdata.txt',status='unknown') sum=zero do i=1,cn read(10,*) place(i)%prob, place(i)%y place(i)%villagename(1:1)=char(64+i) sum=sum+place(i)%prob end do close(10,status='keep') ! do i=1,cn write(*,135) i,place(i)%prob,place(i)%y,place(i)%villagename 135 format(5x,i2,2x,f10.7,2x,f15.7,3x,a1) end do ! write(*,137) sum 137 format(1x,/,1x,'Sum of selection probabilities = ',1pe15.7) ! write(*,200) 200 format(1x,'Enter the sample size, n = ',$) read(*,*) n write(*,225) 225 format(1x,'Enter the number of simulation trails - ',$) read(*,*) noloop ! ! Set up the main loop ! ! zero the counting arrays ! do i=1,cn pi_i(i)=zero do j=1,cn pi_ij(i,j)=zero end do end do ! do loop=1,noloop ! ! Load the working array ! do i=1,cn wk(i)%p=place(i)%prob wk(i)%idx=i end do ! ! Draw a probability sample without replacement ! do k=1,n u=unif() j=1 sum=wk(j)%p do while(u &gt; sum) j=j+1 sum=sum+wk(j)%p if(j&gt;cn) stop 'Terminal error...sampling' end do if(j.lt.cn+1-k) then wk_temp=wk(j) wk(j)=wk(cn+1-k) wk(cn+1-k)=wk_temp endif temp=one-wk(cn+1-k)%p do j=1,cn-k wk(j)%p=wk(j)%p/temp end do end do ! ! update the frequency arrays ! do k=cn+1-n,cn i1=wk(k)%idx pi_i(i1)=pi_i(i1)+one end do do k=cn+1-n,cn-1 i1=wk(k)%idx do j=k+1,cn i2=wk(j)%idx pi_ij(i1,i2)=pi_ij(i1,i2)+one pi_ij(i2,i1)=pi_ij(i2,i1)+one end do end do ! ! end of main simulation loop ! end do ! ! Turn frequency arrays into probability arrays ! temp=real(noloop,8) do i=1,cn pi_i(i)=pi_i(i)/temp do j=1,cn pi_ij(i,j)=pi_ij(i,j)/temp end do end do ! ! make a check sum on the inclusion probabilities ! sum=zero do i=1,cn sum=sum+pi_i(i) end do write(*,300) sum 300 format(1x,'Check sum = ',f10.3,/) ! ! ! Snoop to look at frequencies ! if(cn .le.10) then open(9,file='e_snoop.txt',status='unknown') write(9,770) 770 format(1x,/,1x,'Example 6.4 in the text:',/) do i=1,cn write(9,775) i, place(i)%prob,place(i)%y ,place(i)%villagename 775 format(1x,i2,2(1x,f10.7),2x,a1) end do sum=zero write(9,790) 790 format(1x,/,1x,'Selection Probabilities:',/,1x,'sel_prob',2x, &amp; 'village',3x,'y-value'/) do i=1,cn write(9,800)pi_i(i),place(i)%villagename , place(i)%y 800 format(1x,f8.5,5x,a1, 2x,f10.2) sum=sum+pi_i(i) end do write(9,805) 805 format(1x,/) write(9,300) sum write(9,807) 807 format(1x,'p_ij:',/) do i=1,cn write(9,810)(pi_ij(i,j),j=1,cn) 810 format(1x,12(1x,f8.5)) end do endif ! ! calculate the population total by the H-T estimator for each possible ! selection of units ! write(9,815) 815 format(1x,//,'Samples:'/) do i=1,cn-1 do j=i+1,cn sum=place(i)%y/pi_i(i)+place(j)%y/pi_i(j) write(*,825) i,j,sum write(9,825) i,j,sum 825 format(1x,'(',i2,',',i2,') : ' 'Tau = ',f15.7) end do end do close(9,status='keep') ! ! Deallocate arrays ! deallocate(wk,place,pi_i,pi_ij,stat=k) if(k.ne.0) stop 'unable to deallocate arrays' ! end
As do a lot of other IDEs. Unless you prefer a particular IDE that is Windows only. 
I use PyCharm on windows, which is free for students. No problems so far. You can also look into bash for windows, granted you run windows10.
the biggest questions i have right now are about the best / easiest / most effective ways to deal with the derived data types. Also I will have a way to get rawinput.txt but I do not have it as yet, but I bet from the code someone experienced with fortran can tell me what I am looking at 
That is true, the Windows recommendation does not really make sense. Just use whatever operating system you prefer.
[LXML](http://lxml.de/) 
Mypy does work very well with 2.x :-) And I usually end up hacking together some minimally required primitive stubs in a local typeshed fork; for both builtin, and third party libs. Eg for something like the Arrow python time lib, my stub file just has two minimal entries: get(), and an Arrow class (with only very minmal stubs for methods I actually use, that mypy complains about). Technically I should be running stubgen more often, or doing pull requests against upstream typeshed, but I'm too lazy :-) Has worked pretty well with python 2 codebases, or pre-3.6 python codebases *as a later retrofit to eg help refactoring and further dev/maintenance), but it is nicest to use from the start on just about any project. I'm not in web dev, either :-)
A few things: 1. Many python libraries are wrappers around c/linux libraries. Many of this libraries have been compiled for windows, but many haven't. 2. Windows has a permissions framework that is not intuitive and at times too restrictive/doesn't play well with python package managers to varying degrees. The entire python ecosystem is better suited and integrated with Linux. You will find a wider network of users offering help and more tools that work out of the box. I suggest you make the change. 
Favorited for when I start my thesis :)
Use cases for subprocess - run commands on remote machines, Run health check reports, multiprocessing etc. 
I made a simple website which randomly show you things (geography related). Whole project required to learn lot of different things, but not too complicated or hard. -script to strip some informations from other web sites (if it is allowed) -save it to database -get it from database and serve it to visitors -learn some basic front end skills (html, css, javascript) -I host this on my own VPS, so you can learn things how to configure web servers etc.
Python binding? Uhm I should read about that. 
I have to recommend Fluent Python, by Luciano Ramalho. It gives in depth explanations for pretty much everything.
/r/learnpython is a great resource. Check the sidebar and the FAQ there
Because windows sucks. I'm not just saying that to be annoying. Working with paths and processes for example is just painful. Even the standard library is full of "special" treatment for Windows. But once you've moved on from Windows you no longer have to deal with any of that shit and as a consequence you stop caring about it. Even if you're developing *for* Windows it can be a lot more comfortable not to do it *on* Windows. Just set up a test environment, e.g. in a VM, and you're golden.
https://automatetheboringstuff.com/ is a great book! 
Nice! But you need to fix the 'plays annoying music while running' bug. 
Look into [logzero](https://github.com/metachris/logzero) as well
Thanks, man. Appreciate it.
&gt;&gt; Learn Python the Hard Way - Zed Shaw &gt; Awful. Avoid. Why? I remember there was some controversy because he didn't like Python 3 but afaik he later updated the book anyway, or am I mistaken?
Nice work! Big thanks for making a video with description how your project works, it was intresting to watch. Keep it up!
Outstanding! And ironic that the software correctly identified the 8 of Clubs, but you, the human, incorrectly identified it as the 8 of Spades!
My production code heavily relies on type annotations. I wrote a decorator that examines annotated types and casts user input to corresponding type. Example: @strict_cast def my_function(value: ObjectId, **kwargs): assert isinstance(value, ObjectId) user_input = {"value": "&lt;objectid hex string&gt;"} my_function(**user_input) 
I'd be interested in this, i've not started it but could do
&gt; Counting cards is completely legal Apparently that is technically true in the UK, but plenty of card counters still get arrested for such (only they call it 'fraud' etc.)
The answer to your actual question is "because the people who make python itself do it on Linux".
https://sopython.com/wiki/LPTHW_Complaints Also, the Python 3 version of the book is paid. Also, the fact that Zed wrote the Python 2 drivel and aimed it directly at people who don't know well enough to tell that it's bullshit is enough for me to not want to support any of his work.
as spitfiredd says your line should look like df = pd.read_excel('C:\Users\**\***.xlsx') and if you want to get fancy: df = pd.read_excel('C:\Users\**\***.xlsx', sheetname='yyyyyy')
A crawler that checked my university site for any new notices. If there was some, it would send me an SMS with the title and a short link. Later, I hosted it on app engine to run it periodically and learnt Flask along the way.
Yes, just checkout the jobs posted on Upwork. There is a lot of demand for especially for web scrapers and GUI automation which is quite easier in Python compared to other languages. Also, lots of jobs asks for expertise in frameworks like Flask, Scrapy, Selenium and Django.
So as far as I can tell from that list it's basically just outdated. 
I think the PIL library will help https://pillow.readthedocs.io/en/4.3.x/ 
I've been working on a fork of a plugin I use daily with sublime text. The plugin developer seems to have stopped development on it and he's been inactive since 4 years. The plugin also stopped working. So, I thought of forking the project and fixing the bugs and adding new features. Basically, the plugin allows you to type: "Parse json string python" Then, press Ctrl+Shift+H and boom: The code gets auto copied from stackoverflow and pasted there. If anyone interested to help you: https://github.com/amitness/subflow
&gt; If i had the binary file I would decode it in base64 to get his original file? No. If it is a binary file, it could be literally anything: a JPEG (graphic image), an MP3 (sound), a ZIP file (compressed data), a DOC or DOCX (Word document), or about ten million others. There's no magic "decode this binary file" command. You need to start by actually READING THE ASSIGNMENT your teacher gave you, and trying to relate the question back to what was taught in class. If you cannot relate the question back to what was taught, how do you expect us to? We know neither the question, nor what was taught in your class.
If you're starting from the beginning, this is what I used before I knew anything about any kind of programming: https://www.codecademy.com/learn/learn-python
What do I do after i do the code academy tutorials?
https://automatetheboringstuff.com/ is a very good book that you can read online. It covers the basics of python and more stuff. I already posted this link to a different beginner thread and think it should be a sticky.
The community edition is OpenSource and Free for everyone
Practice. Find little projects. Reddit put me onto these for example: https://docs.google.com/document/d/1TyqD2_oDtiQIh_Y55J5RfeA91JJECc97xYIKM112H9I/edit (Will also second BTiberius's suggestion of checking out the free book AutomateTheBoringStuff.)
I was looking the table of contents and seems to be just what I'm looking for 👌🏻
I'd sooner think to use this in online poker to analyse odds
Use sublime. It's cross platform and it's way better than fucking notepad++. Also don't forget about [the windows unofficial libs](http://www.lfd.uci.edu/~gohlke/pythonlibs/). It'd be impossible to compile a lot of libraries without this. I find working with OpenCV on windows a lot easier than Linux because of how easy it was to install. 
Get [Anaconda](https://www.anaconda.com/download/) and [Pycharm](https://www.jetbrains.com/pycharm/), and you are ready for a straight forwards problem free start.
For anyone interested in this - you can access the data through[ this website](http://www.recenttraintimes.co.uk/). What I would imagine would be a relatively simple bit of scripting would allow you to do what is being described. 
I haven't had any issues with installing packages/libraries since I've started to use Anaconda. 
Weird. I just started doing python development on Linux after using Windows my whole life and I didn't really notice much of a difference. I switch between Linux at home and Windows at work and haven't had any trouble. Have you tried using virtualenv and installing packages with the --user tag?
Not sure if other people mentioned, but Windows sucks. The biggest hurdle is installation of libraries and environment management. There has been a lot of improvement in this area in the last 6 years, but the tools are linux based, so linux fits a lot better in this. It's possible to develop with Python in Windows, but it takes too much time setting up and maintenance. 
Absolutely - the scores just represent my preference at the moment :-) I fell in love with Mypy at version 0.2, with Python 3.5 - I annotated my (solo, first real, spaghetti) project, and successfully rewrote the entire core logic and data structures. It was amazing! It's the 'compiler has your back' option for Python, and anyone who doesn't understand why that might be attractive should try it :) My *frustration* is in another project I'm working on, much larger and older with wide compatibility required. I can add initial type hints pretty easily, but the design is not static-type-friendly and whenever I write a type comment I miss inline annotations. The EOL dates in 2020 can't come soon enough!
I was looking for and and I found Core Python Applications Programming but seems a little old (2009) and I also noticed that the book uses Python 2. I know many developers still use Python 2, but I think a newbie like me should learn Python 3 instead.
Run a linux VM and just do your development in that. That's what I do. If you're using VMWare Workstation, there's actually a nice little exe hidden in the application directory called "vmware-kvm.exe" which will let you run the VM full screen seemlessly, with no pop up when you touch the top of the screen. The only down side is that you can't run multiple monitors on it, but my 2nd/3rd monitor is generally for looking up documentation, which can be done in the windows host as you can copy/paste through.
10.04 has been end of life and unsupported for years already. You should consider upgrading 
I've tried, but I can't do the whole gnome3 thing. 
Huh? Every release until like 17.10 uses unity. The IS you are using has been completely unsupported for over 4 years
Just gave put some dark science. A lil nibble of how to live and make money without being a code slave.
It just works, if I went over to a newer version I'd have to deal with python 3, flash would stop working, it just isn't worth it.
I added type annotations to my library because a user asked for them, but they mostly only exist around the user-facing functions and objects because I'm doing a lot of stuff internally that cannot be adequately expressed in the type system; partly because my code is dynamic and partly because I'm doing stuff with higher-kinded types. Maybe the new structural typing stuff will help with that... I'll have to explore it sometime.
Again, this is wrong. Python 2 is the default through the latest LTS release and can be installed and set as default on newer ones with 2 seconds of effort. Flash player remains available. 
It is, and it also teaches things in extremely confusing and roundabout ways for no reason. 
PoC for exploits, email scrapers, DoS PoCs, backlink scraper, dns and discovery tools/automation, web boots e.g social media auto friend/follower. All simple stuff you can make money with. 
Hey, You can find projects open for beginner contributors here: http://up-for-grabs.net/#/ https://github.com/MunGell/awesome-for-beginners 
You need to pull the trigger and deal with python 3 ... I was a pretty late adopter, took me moving to a new company last year, but with 3.5+ there is no reason not to make the move and with Django and a couple other big packages dropping support for 2.7 less and less packages will simply 'work' on 2.7 any more. 
I have no idea why I decided to play dumb for a minute ~⟫ lsb_release -a No LSB modules are available. Distributor ID: Ubuntu Description: Ubuntu 16.04.3 LTS Release: 16.04 Codename: xenial &gt;I switched to Ubuntu at 10.04 and Lubuntu sometime after that I have upgraded regularly since switching to Ubuntu, I am actually pretty proud of this 16.04 install as I haven't borked it to the point where I need to reinstall since I installed it shortly after release.
&gt; You need to pull the trigger and deal with python 3 ... Every once in awhile I try, at some point I do need to just pull the plug and stop letting myself just do 2, but I really don't like the new print statement thing.
The funny thing is that in order to make this app you would have to get so familiar with the rules that you'd probably never need the app..
WinPython. Portable. No admin access. Includes everything you'll need to get started.
Iunno dude, for everyone I know it's just been to install Python 3.6, make sure "add to PATH" is checked, there you go, pip and everything works flawlessly. Never had any issues with it. Personally I see no point in using a full-blown IDE for Python; I'd just use Visual Studio Code and try and getting it to work for you. Personally I use Sublime Text, but it costs $80 nowadays.
Thanks, Il start when il get home right away!
Is there a subreddit with these mini projects?
This book emphasizes down-to-earth problem-solving skills and the immediate utility of Python. One of the projects walks you through a basic web-scraper to pull comics off of xkcd. I still used a (modified) version of that scraper today, in addition to a few of the other projects. Great suggestion. 
Not a possibility for a large number of people.
i was expecting that to end with "then alexa tells them if they've been good and orders them a toy"
For the past year my company has paid a contractor to "track analytics" for one of our brands. Weekly, the contractor goes into our Facebook, Twitter, Google Analytics, Pardot, Youtube accounts, puts metrics into a spreadsheet and our Salesforce database, then emails out the spreadsheet. On Friday I started writing a script that pulls all this data and then enters it into Salesforce. Yesterday I got it fully running. I'm going to do more to clean it up, such as error logging and better security. But I told my boss about it yesterday and we're going to end the contract (which we were paying ~$8k/mo for). 
I probably won't implement my own loss until in a few weeks, because some other things have priority, but I have found this list with many PyTorch projects: https://github.com/bharathgs/Awesome-pytorch-list If you just search this page for "loss", you can find some examples.
Can't promise I'd be much help but sure!
I'm working on a Task Scheduler for household chores. I've divided my house into 42 distinct chores and assigned them various difficulties and frequencies with which they should be done. I'm working on making a program that can assign them randomly to myself and my roommate, and help us track when they're completed. Eventually I plan on incorporating my raspberry pi and having a physical screen in my kitchen to refer to and interact with rather than it being command line.
Would also love a PM with some details. I'm working on a less interesting variant for household chores, but it'd be neat to compare.
LOL! Pure gold! The upgrade path from 10.04 to 16.04 isn’t super easy for most people because (for me anyway) 10.04 lacked some functionality and wound up requiring some extra ‘customization’ reminiscent of older distros but which would inevitably break things upstream 
&gt; notepad++, but if I am going to use that I might as well just use linux. notepad++ is windows only :P
To solve some of your environment issues, you could try (in order of ease, in my opinion)- * Install Docker, instantiate an Ubuntu container and setup a Python Virtualenv * Install VirtualBox, build an Ubuntu VM and them same as above * Install Cygwin (feels like Linux on Windows) and then same as above As for the IDE, a few folk have mentioned PyCharm- I have to agree, it's pretty good. You can set up SSH integration with the remote Python instance you configure (Docker/VirtualBox). Though in hindsight I'm not sure the free version lets you do that- may need to setup some deploy scripts to sync your code with the environment when you make changes
Oh, I am sorry, what I meant was I haven't borked this install since 16.04 was released, not that I have been able to keep it stable since 10.04, hell at one point I thought it would be a good idea to replace my repositories with Debian Sid (this kills the Linux)
The training model you used would require a lot of processing power in something like Yugioh, wouldn't it? There are more than 7000 unique cards I think. For that specific TCG, there's a unique card number in each card, could OpenCV isolate that number and then apply OCR in order to identify the card?
That's totally fine, being really dynamic is one of the better arguments for not going for type hints. What do you mean by higher types? The typing library has pretty sophisticated types available. Can you give an example?
VS and Python? Never heard of that combination. I tried Sublimetext, Pycharm and now use Atom. All of them worked fine.
This is just wrong, pip is a nightmare on windows. Just try to pip install pygame or numpy on windows. You gotta install anaconda, and even then it's still a lot nicer on linux. On linux if pip install numpy fails you can still get it through the system package manager
Here are a few things that you can do, in basically any of your favorite projects: https://github.com/lipis/fix-the-web
That's a pretty small thing to keep you away from all the py3 goodness 
I noticed that too. I actually switch to a different mic 27sec into the video.
I use them I production on both python 2 and 3. Using them let's me produce better coffee more quickly than not using them. They aren't anywhere near as good as a real type system, but it still makes python development much more enjoyable. Under python 3 they are better due to syntax support, especially with the class syntax of the new named tuple
He meant context managers. I asked him on twitter and he responded. https://twitter.com/brandon_rhodes/status/918104069058723840
This book, Automate the Boring Stuff, includes a tutorial about how to build a basic web-scraper program.
web.py is really useful for creating websites fast for small hackathons or projects. You don't have to worry about scalling and maintaing the project later and at the same time when the time is less web.py allows to start building the site right away without being forced to perform best practices i.e it gets the work done. 
Find and replace "Github" with "GitHub", create pull request. Is it just me or is that a ridiculously annoying thing for someone to "contribute". 
I should probably just Google it but what makes pi3 better than 2?
So to sum up, Slack is a threat because - It stores chat history - it has a search feature - it's a US company - it might hypothetically experience a data breach ???
Have you tried using virtualenvs? Or scripting virtualenv setup &amp; use? I ran into all sorts of issues with that (given, it was trying to use Jenkins on a windows node). 
I fix a lot of dead links in documentation for the projects I use. It’s something that annoys me but requires minimal skill to fix.
You can use collection.Counter to count repeated occurrences: from collections import Counter entries = [ (123, 123, 123), (123, 123, 123), (456, 789), (789,), ] count = Counter(entries) print(repr(count.items())) now you have a dict-like with fields-&gt;count if you need to preserve primary_key from db: from collections import defaultdict data = defaultdict(list) for primary_key, *fields in entries: data[fields].append(key) print(repr(data)) now you have a dict-like of fields-&gt;primary_key 
&gt;This is just wrong, pip is a nightmare on windows. Funny, I and 10+ other comp-sci students working with Python(incl. pip) have had no problems on Windows. &gt;Just try to pip install pygame or numpy on windows. https://i.imgur.com/cZB9Snp.png And they work flawlessly &gt;You gotta install anaconda Uuuuuuh no. &gt;On linux if pip install numpy fails you can still get it through the system package manager I'd rather not though, no matter the platform that defeats the purpose of pip.
You can search Github for open source projects that have "imposter syndrome disclaimer". Those are usually open to contributions from anyone
I agree with /u/strongdoctor here -- `pip install pygame` and `pip install numpy` works pretty much flawlessly these days, especially now that we have wheels. There *are* admittedly a few libraries that are challenging to install via pip (e.g. scipy), but the workaround in simple: just download and install the wheel from the [unofficial Python binaries list](http://www.lfd.uci.edu/~gohlke/pythonlibs/).
Beginner Programmer Trying to make a semi-random exercise routine based on the day (pull day or leg day or hiit day etc) and having it ask if something was too easy or too hard to adjust for future workouts. This is most certainly my inexperience but things get messy real quick, everything is all over the place.
Nice catch! My brain failed to detect that misidentification. There is something deeply interesting about those sort of mistakes because, although we tend to blow these mistakes off casually, they really probably do represent a neural network error along the lines of "black suit, spades, starts with "8 of"...which sounds like "ace of" and ace of spades is famous, close enough". And great job, OP! Pleasant video, too.
Why do you think it's annoying.. all you have to do is to press merge..
I'll give it a try as soon as I get a chance, thanks for the recommendation. 
My dad, he is really into microsoft products so he always pushed for them. I definitely prefer linux but I figured it was worth learning.
Cheers! I was hoping he would chime in somehow. I'd ask but I don't have a twitter account :P (He's a great speaker, but this little unfinished side note bugged me so much I wanted to find out what was on his mind : )
No, I will try that when I get a chance. One of the things that annoyed me was VS saying this package isn't installed and offering to install it, then failing that install. 
It doesn't do face detection, but you can use [ImageHash](https://github.com/JohannesBuchner/imagehash) which uses a perceptual hash of the image to determine if they are similar. To read about it, follow the links from their readme: * average hashing ([aHash](http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html)) * perception hashing ([pHash](http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html)) * difference hashing ([dHash](http://www.hackerfactor.com/blog/index.php?/archives/529-Kind-of-Like-That.html)) * wavelet hashing ([wHash](https://fullstackml.com/2016/07/02/wavelet-image-hash-in-python/))
Thank you for this list. It's very helpful!
I think we all agree that well laid out and easy to read code is useful and important for open source projects and I guess that is what you were aiming to help with. The problem is that it is all arbitrary. How you like your text editor laid out isn't necessarily how I like mine. How you like variables to be named isn't how I like mine. As an example, the first pull request someone did for one of my codes was to change all the variable names to look pythony. I had consistently used camel case. Neither was worse than the other. If your contribution is to add a hidden file to the project to make editors look the way you like or to properly capitalize brand names in the comments then maybe you're taking someone's time up for something that is either unimportant or not necessarily an improvement in any way. 
Methinks his point was that if he's going to use a text editor that's as out-of-the-box unfriendly as Notepad++, he may as well be using a real text editor like Vim or Emacs.
Wow I didn't know it was that expensive. I am a beginner so I get that it would be harder, but I can do everything well on linux. It just seems to me that Windows was so much more difficult and less intuitive. Good for you if it floats your boat though!
There's a reason why kids rebel. Windows is went learning, if only as a perfect example of how to achieve market dominance by being first to the gate, even if you do every single thing wrong from that point forward.
Oh yeah I definitely agree, Windows is just worse for development, but it's worked alright for me, *especially* in python development.
I came from Linux and I love it. I tried Windows because my dad pushed me to as well as I wanted to learn how to use it.
That would make sense, I kinda just assumed it would work well on both platforms.
I have before. My problem with this is that I have a laptop and desktop so they wont be synced. I just dual boot my laptop and use that for now.
Absolutely! 
I will try all of your example, thanks for the response. 
Yeah, I am glad I took the time to learn linux, especially for the concepts. Its also much more fun
It's also better at IDEs, generally. Eclipse, Netbeams, Emacs, Vim, PyCharm, what have you ... with the exception of VS (not VS:Code) and XCode, the vast majority of IDEs out there run just fine or better on 'nix.
https://www.tensorflow.org/tutorials/image_recognition 
Huh, my experience is out of date. Glad to see python works on windows now
 just find ones that you find interesting. for example, I like contributing to openage.
That's really good to hear actually 
This has to be the worst thing I've seen on GitHub.
Well since most libs support 3 and lots are depreciating 2 support that's the biggest reason. There's lots of little life improvements though like division (1/3 == .333), dict comprehensions, no __init__.py etc
I don't see any problem.by fixing the brand names and the most acceptable way of writing some things.. making the open source a bit more consistent.. and because you didn't have time to proof read it all.. 
A higher-kinded type can be thought of as a more-generic generic. A generic is when you have a `Something[T]` and the `T` part can vary. A higher-kinded type is when you have a `Something[T]` but the `Something` part can vary. It's a little bit like `Iterable` which is built in to the typing library (because `Iterable[T]` can be a `List[T]`, a `Tuple[T]`, a `Dict[T]`, or even a user defined generic type so long as it meets the required interface). Looking at the implementation of `Iterable`, it seems like you can probably do it using the `extra` class keyword argument. I'm hesitant though because I can't find it documented anywhere. Also mypy doesn't seem to allow you to refine the type of `self` in a generic class.
I've some of my projects which are quite simple for beginners to contribute. I'd love to guide you if you've want to implement any features in this projects. https://github.com/amitness/shuffle https://github.com/amitness/cutcode https://github.com/amitness/subflow
&gt; just use linux Why not, unless you have a specific reason to target Windows. Another possibility is Cygwin, which gives a Unix-like environment for Windows.
We've got a bunch of easy ones open! https://github.com/Miserlou/Zappa/issues?q=is%3Aissue+is%3Aopen+label%3Ahacktoberfest
Yada yada Python. 
Oh shit, I hadn't even thought of that yet (don't have much mobile app experience haha), that would definitely be the way to go. I could probably spin up a free AWS server and process there. Thanks for the advice.
"imposter syndrome disclaimer" sounds awesome.
Great question man, I'll be following this post for weeks to come!
http://www.firsttimersonly.com is a great resource for finding projects that have a low barrier to entry.
That's where I usually try to contribute, well there and with unittests, but very, very, very few projects seem to actually want external help.
You could always use xubuntu. xfce is fairly stable and they don't keep changing everything.
Good to know you're getting plenty of dietary fibre.
Don't even need to go to casinos, just pick any online poker site. Let the AI make the decisions and you just execute the play.
Huh never seen that before, that's cool! 
Resurrecting this thread to ask an infuriatingly simple question: does anyone know how to completely remove this software from my mac? I did my best to clean everything out--can't find a trace of it in my filesystem--but every time I start Sublime Text, I get a popup window with the following message: &gt;Kite detected that Kite copilot is not currently installed on this computer. Do you want to install it now? [No][Cancel][Yes] I even tried reinstalling sublime text from scratch, but that didn't remove the issue. Any advice would be appreciated. I hate Kite.
Python has a `filter` function that will filter the values based on a given function: def my_func(x): '''return True if x is in the range (36-38)''' return 36 &lt; x &lt; 38 new_data = filter(my_func, X) Tiny functions like that are often written as `lambda`: new_data = filter(lambda x: 36 &lt; x &lt; 38, X) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
You could make it multithreaded or multiprocessed, that would allow multiple audio files to be processed at the "same" time.
+1 to @LightShadow's list. For JSON, I recently switched from ujson to [rapidjson](https://pypi.python.org/pypi/python-rapidjson). Is mostly as fast as ujson and more compatible with the std lib json package. Works better with rest_framework UUIDs for example.
scope ebay - I bought a 3.2" TFT screen for ~$15. The only thing is even if you have the pi with the touchscreen its still difficult to mouse/keyboard with it.
reading python code that doesn't follow basic style guidelines or python idioms is slower than reading code that does. contributing to a codebase that follows the status quo for code style is more efficient than learning a new style for each project. you obviously think you're above style guidelines, but I think they produce collaborative efficiency.
 np.random.random_integers(0,1,size=(3,3)) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Create constraint in database? 
[nixpkgs](https://github.com/NixOS/nixpkgs), the package set for the [Nix](https://nixos.org/nix/) package manager (and the basis of the [NixOS](https://nixos.org/) operating system) has a lot of packages that require simple updates; for instance, bumping a package from one older version to a new one. These are often as simple as [changing an URL and a hash](https://github.com/NixOS/nixpkgs/pull/30311/files) and then testing the relevant package. These are the simplest kinds of contributions, but there's issues for every step on the complexity scale (including, for instance, en e2e test of setting up an entire Kubernetes cluster,) and there's an extremely helpful bunch of people in the Freenode #nixos irc channel.
Thank you very much. Will subscribe to /r/learnpython.
please do. and let me know when you do. I will add you to our Discord channel.
Except I was writing in Fortran. Style guidelines are good but ultimately it's up to the main contributors to decide how they want to write. If there's a defacto standard for a given language then I would encourage its use.
For those that know/want to know Lisp, please look at https://github.com/hylang/hy. It's a beautiful mix of Python and Lisp, you can import Hy from Python and vice versa, its fully compatible and provides tons of useful features. There are lots of low hanging fruit that would help out - like more color in error messages, command line completion and so on. 
I wish they had also tried [aiokafka](https://github.com/aio-libs/aiokafka). Although it is based on python-kafka, it adds that async layer that fits well a Kafka-based workflow.
there is one for every common language. Fortran: http://www.fortran90.org/src/best-practices.html &gt;For other names use all lowercase: try to keep names to one or two syllables; if more are required, use underscores to clarify (sortpair, whitechar, meshexp, numstrings, linspace, meshgrid, argsort, spline, spline_interp, spline_interpolate, stoperr, stop_error, meshexp_der). obviously it is up to the contributors how they write their code. they are free to do it the inferior way by creating their own special snowflake code style, or they can follow existing style guidelines which has many benefits.
Very cool! I hear a lot of hate for MongoDB at work but never with any reasons except for "doesn't support transactions". Personally I love the idea of my DB mirroring my code structure without an ORM with Mongo or ZODB. Can you weigh in on what problems you've run into on using Mongo and what advantages you've found VS traditional SQL? And how do you get around transactions? Thanks for this btw!
try Codewars. Lots of practice problems. I also recommend the book Python Crash Course by Eric Matthes. I basically downloaded Anaconda and started messing around in Spyder. I'd watch YouTube videos and try to do things they did.
I'm primarily a Tableau user who tinkers in Python. Tableau is great for exploring and aggregating your data, and creating beautiful interactive views/dashes. It doesn't have the same the same analytic power as Python, i.e. you can't just import a library and perform decision tree analysis. The other issue I run into is dealing with data errors. If you find a typo, you need to go edit the value outside of tableau in the data source. This helps preserve "Source of Truth" setups, but can be frustrating in practice, especially if you don't control the data source. That said, Tableau has Python integration that looks super promising! Try looking for documentation on Tabpy and script_bool, script_real, script_int operators in tableau.
Try /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using, and the complete error you are getting. A link to the tutorial you are following would help too. 
As a constant user of both Windows and Linux I have to say I've never had a single issue running Python on Windows. I don't know why OP is having so much trouble. 
Do you really have this experience? I've literally had one time I can remember where my help didn't seem wanted. And it was noticeable because the totally normal case is a lot of thanks and appreciation.
Probably because I'm a beginner. I assume it's easier once it is set up, but so far it has been unintuitive and difficult.
This is not very clear. What *exactly* are you looking for? Also, probably belongs in /r/learnpython 
alright thanks so much 
If you have say a blocking sql query for your home page and have 12 worker, 12 concurrent visits will suffice to block all your workers. Btw, you are rude. 
https://docs.python.org/3.6/library/uuid.html UUIDs automatically include the current time in the generation process.
Thank you. I have a Java version of it but for sake of my learning Python I figured I should write my own with a bit of reference to go off of. I appreciate your response!
Then I should probably direct you to [the spec itself](https://tools.ietf.org/html/rfc4122).
&gt; the spec itself Ah, even better! 
Hopefully I have time to check this out soon. I'm working on a microservice using MongoDB and it looks to me like there's a good chance this actually covers everything I'm struggling with.
I'll have a go at starting it this weekend :)
I did a bit of searching and concluded that a higher-kinded type is sort of like a higher-order function but for types, ie def f(T: Type) -&gt; Type: ... Would that be correct? I'm a bit tired so I'm not exactly absorbing things well right now.
If you have a home page running a blocking query and 12 workers serving the site, 12 concurrent visits are enough to blocks all your workers. So one line in your code can actually very easily block all your workers. That's why you combine aio + threads. 
You have -4 because your comments sound very arrogant while others try to be polite. 
I have a few easy python projects that could use some love. The libraries and resources have helpful links and code is commented. https://github.com/TechnologyClassroom/dice-mechanic-sim DMS is a pen and paper RPG simulator. I could use some help with data analysis and graphing with the plotdicemechanic.py file. https://github.com/TechnologyClassroom/SignIn SignIn is an incomplete low resource tool for nonprofits to monitor who is in the building and how often they participate. I accept all pull requests that lead toward the stated goals.
Thing about code is it doesnt take as long to dive in as one would think you simply need to understand where to plug your code at, if its irrelevant to what your doing ignore it for instance adding flags to programs is easy and often necessary because for whatever reason someone made a long flag and no short one that comes to mind is one I did for a terminal emulator while it was ultimately not as useful as say adding a bell or whistle it did save time typing why use an explicit long flag when a short flag can be used in the interim if there are no plans for it currently. Added transparency short flag -t. Worst thing is your contribution gets rolled back you get feedback on why it got rolled back what could or should be done to improve it if only on appearances.
Trying to implement a 3d version of this: https://stackoverflow.com/questions/39244636/compute-the-shortest-path-with-exactly-n-nodes-between-two-points-on-a-meshgri
Aside from the fact that /u/DuckSaxaphone clarified that they're not even using Python, this doesn't even make sense if it was a Python repository. &gt; pep8 is nothing new Maybe you missed the second heading in pep8 https://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds It actually lists 4 specific examples of where you should ignore pep8, one of which is: &gt;Because the code in question predates the introduction of the guideline and there is no other reason to be modifying that code. In fact, one of the core messages that's repeated across the style guide is that it's a style **guide**, not law. Also, from the first paragraph in the naming section &gt;New modules and packages (including third party frameworks) should be written to these standards, but where an existing library has a different style, internal consistency is preferred. https://www.python.org/dev/peps/pep-0008/#naming-conventions I'm not sure how you can read pep8 and then think that you should go around submitting pull requests to change naming in a project.
There is also the MIT edX course on an Intro to Python. Fantastic course and it will teach you a ton. 
perfect! :)
sure, if a project was started 20 years ago when pep8 didn't exist, maybe it would be correct to keep it that way. but since pep8 predates GitHub and the concept of a PR, I was ignoring that edge case. in fact, if you read my posts, they acknowledge the fact that existing style needs to be conformed to. that is precisely my reasoning for using widely accepted style guides for open source projects that may have other contributors. I remain convinced that PRs that fix code style are valuable contributions, and that those who refuse to follow widespread coding style standards in open source are (mildly) hurting their project.
Thanks! Have you read ‘automate the boring stuff with python’ because I dont know which book i should read? Or maybe both?
So your viewpoint is that pep8 needs to be rigidly followed, except for the parts that explicitly state to not follow pep8 rigidly in projects that don't already conform?
I agree, it is unintuitive for a beginner, but once you get it all set up, it's fine and works just as well as it would work on linux.
my viewpoint is that writing code in any language in a style that differs from established style guides is suboptimal and should be avoided, especially if you want anyone else to read or contribute. there are very few projects that have an excuse for poorly maintained style that isn't "lazy, shitty programmers".
&gt; One thing I would love is to be able to specify units for each column as well. A new version has just been published, and units are one of the improvements :)
It’s not from my experience. I use Spyder, IDLE, and Jupyter notebooks to do my coding. Works fine. 
Cygwin introduces yet another layer of misdirection and confusion for a beginner - you have *nix style commands with an underlying windows security model.
it is not
I've made posts about OperationCode.org before: https://www.reddit.com/r/webdev/comments/73l2fk/hacktoberfest_has_begun_support_open_source/dnrv2x8/ Essentially, we'll have a bunch of issues by the end of the night concerning Slack bots. Python developers can rest assured they will have plenty of products they can completely own, head to tail!
I think most people who don't like Python on Windows are way out of date.
&gt; Iunno dude, for everyone I know it's just been to install Python 3.6, make sure "add to PATH" is checked, there you go, pip and everything works flawlessly. Same here. Maybe Python sucked on Windows 4 or 5 years ago?
&gt; use I'm a beginner. I assume it's easier once it is set up, but so far it has been unintuitive and difficult. I was a begineer too and never ran into problems. Maybe your OS is corrupted or something?
Not really. What you have there is called a _type-level function_; a function that works on types. A type-level function is basically the same as a generic. If you squint a little bit you can think of a generic type as being like a function that takes a type and produces a new type. For example, if you give `List` the "argument" `int` then you get back the "result" `List[int]`. The square brackets in types should remind you of the round brackets we use for functions. A simple example of a higher-kinded type is `Functor`. A functor is a kind of wrapper that wraps any other type and doesn't care about the details of that type. The notable thing about a functor is that you can always convert the thing that the functor is wrapping without changing the structure of the functor. If something is a functor then it must be possible for me to write a method with the following signature (replacing `SomeFunctor` with the actual type): def fmap(self: SomeFunctor[A], converter: Callable[[A], B]) -&gt; SomeFunctor[B]: ... For `List` it looks like this: def fmap(self: List[A], converter: Callable[[A], B]) -&gt; List[B]: return [converter(item) for item in self] For `Optional` its this (just pretend that you could actually write methods for `Optional`): def fmap(self: Optional[A], converter: Callable[[A], B]) -&gt; Optional[B]: if self is None: return None return converter(self) With an `asyncio.Future` it might look like this: def fmap(self: asyncio.Future[A], converter: Callable[[A], B]) -&gt; asyncio.Future[B]: future = asyncio.Future() def callback(a: A) -&gt; None: future.set_result(converter(a)) self.add_done_callback(callback) return future You can even do it for weirder things like `Callable[[C], _]` (the result `_` is the part that's being changed): def fmap(self: Callable[[C], A], converter: Callable[[A], B]) -&gt; Callable[[C], B]: return lambda c: converter(self(c)) All four of these methods are writeable and type-checkable right now. What you can't easily type-check is a function that can take any one of these types and act on it without caring which of the four it is: def fmap_str(data: Functor[int]) -&gt; Functor[str]: return data.fmap(str) The function above works just fine, but you can't type-check it because there's no way to define `Functor` (as far as I know, though the structural typing features may have changed that).
Keep an eye out on the #hacktoberfest hashtag on Twitter. If you know any second languages, you may be able to assist by providing translations on documentation. 
I need a script (and I need to know if this is a script that already exists) that can generate a ton of different passwords suggestions from a few words. Example: User input: cheese, april, carly Script output: cheese123, cheese321, Cheese123, Cheese1, April123, april321, etc etc etc etc (with more than thousand suggestions) I hope you understand 
One way is to make stuff using open source and if you find bugs or missing features that you would like you can file your own pull request to fix or add the new features.
OP, I had an impossible time getting Python to actually *work* at all on my Windows computers. Tried everything and finally went to Conda. Works like a charm now.
Omg. Have a nice day.
I’ve preemptively downvoted all of my comments, I hope that’s fine.
Ok. I kind of understand. I think it is a struggle to call this an "algorithm" but ok. Take a look at `itertools` (and especially `itertools.product`). And yeah, this really should be in /r/learnpython
I worked on linux and windows (yet windows) with pycharm, without any problem. Pycharm does all the bindings and it's ready to use right after the install. I'm used to eclipse for java and I miss a lot of its features in pycharm, but it can do already a lot. Definitely usable for a real project.
It's fine for a key/document type storage with basic querying functionality, but once you need to store structured data with more rigorous integrity then it starts to fail spectacularly (as with most nosql dbs) The premise of these is to store anything you want at key X. After a few changes to the structure, you're required to write very defensive code to accommodate for "what if this value doesn't exist in the document?". "have I checked if this is the right data type?" Normally in sql you'd get that error right up front when you either try to insert, update or update the structure. This makes your life a lot easier because you can actually trust your own data. Another point with code quality is that SQL dbs enforce flat data structures which tend to lead to simpler code paths. With nosql documents you're free to store anything you want, so nested data structures will amplify the issue of data integrity mentioned earlier (unless you use an ORM or some sort of document modelling to check if the data structure matches what you expect) And lastly there's the point you already mentioned, no transactions. For a busy system, the choice of a non-transactional db has bitten us on the behind badly when it comes to race conditions. We've also got collections littered with half-created entries because an error occurred and we couldn't abort the transaction.
It's not. I'd say it's easier. &gt; none of them will work well for me You've tried 1 right? Aren't VS and VSC are the same thing? Notepad++ is not an IDE. You can try PyCharm, Eclipse + PyDev, as well as WingIDE (my favorite).
This is your periodic reminder to never use MongoDB in production. Thank you and have a good day.
Working on collecting SSL Certificate implementations by querying our zones on Dyn via their API, then checking for certificate data. We need to clean up our DNS of old entries that are no longer in use and see if there’s addressed that should be part of our SSL age check in our monitoring. It’s my first project with python, so lots of learning by doing.
There are 3 or 4 basic things you should do if you use MongoDB in production and you're golden. They aren't covered in this course, however. I've known plenty of successful companies using MongoDB. For example: https://www.mongodb.com/who-uses-mongodb
Thank you, ill go to /r/learnpython
Awesome reply, it's great to hear from someone who's used it in production like that. I'm curious though if you've looked into document validation (schema) and if this would solve some of your problems: https://docs.mongodb.com/manual/core/document-validation/ I have no idea if it would. I was just thinking "does Mongo really not support a schema?" and googled it
I'm sure you'll get a lot of advice but I just want to say that the #1 important thing to me when I read someone's code is that they have short functions (less than ten lines is a good rule of thumb). So just remember that if you're going to write code that you want other people to read, please keep your functions short. Other than that just take on a project (maybe automate starting some steam games or something, anything) and learn as you go. Also a plug for /r/learnpython
VS VSC are not the same thing, and your right a bout n++ not being an IDE. I will definitely try pycharm, hopefully with better luck. This is just my experience, it's probably different for other people(hopefully easier).
Hey, thanks for commenting. I've done quite a few small projects over the last year (I don't have problems doing anything that I want to do), the topic wasn't really about how to learn but more about getting a list of topics that one should know about if one wanted to carve a career in python (rather than an analyst who uses python). I just want to be able to 'tick things off' a list of areas that I should know about I.e. I'm very confident working with lists and dictionaries so I know I shouldn't have to study that area (tick), but I'm not very good at working with GUIs (no tick), so that's something I need to get good at (or do I? do python programmers use GUIs a lot? I don't know) :)
Hm, I do backend web stuff so I'm included to just say "know how to make good relational database stuff" but you probably already know your SQL stuff from being an analyst. Asking what to tick off is kind of a weird question though. I don't really know how to answer that since it depends on what job you'll get. I suppose knowing how to make good interfaces (classes and modules and functions) that are well defined and have a good, small scope (a module that does one thing, a class that does a few things, etc) is universally important. It just really depends on what you'll be doing. 
Start by Googling "Full stack developer skills". I'm on mobile but once found a brilliant description of what it takes to be considered "full stack", which is I think a bit more complete than you are looking for but an excellent reference for where you could be. The general gist is that to be successful you will want to understand how things flow from all the way from the user to the server running your application. Understand how the UI is efficient for both the user and the back end (including but not limited to the Python portion); understand how to most efficiently write your application for readability, technical efficiency, and future-proofedness; understand thoroughly how to interact with databases and how databases are structured. In the end, the most important application work is done before an app gets off the ground. Unfortunately, most of the time spent on an application occurs after the app is written -- this is what makes soft skills like planning ahead, gleaning user needs, and foreseeing user behavior trends as valuable as being able to write an app. On the Python side, how about the following: - Write a function - Handle function arguments - Return objects / data to the UI via console - Return objects / data to the UI via file - Write to, update, and read from a database (see SQLite for practice at home) - Interact with Windows scheduled tasks (or whatever your OS is) - Read about database schema design best practices (database normalization) - Read about application design best practices (I'm not an expert and this is more fluid) Sorry for the word vomit.
If you use i3, py3status is really coming along. The two guys running it are awesome but contributions really make the thing go. Love my tiling window manager 
Why would anyone use this database?
One of the computer science teachers at my school sent me and a few friends the current gcse controlled assessment, so I gave it a crack today. After 2 hours I’ve made a full login system with account creation using tkinter. It’s very crude looking but it does the job. 
Good to hear you want to improve your Python. This is more a question for /r/learnpython, but here are some Python and data science recommendations anyway :) ### Basics - List, Dictionary, and Generator comprehensions. - Functional utilities: [`map()`](https://docs.python.org/3.6/library/functions.html#map), [`filter()`](https://docs.python.org/3.6/library/functions.html#filter), and [`partial()`](https://docs.python.org/3.6/library/functools.html#functools.partial). - Class composition and inheritence is useful ### Data Science - I’ll always recommend the [Anaconda](https://www.anaconda.com/distribution/) (specifically for the conda package manager) for setting up Python environments with more complex dependencies. - [IPython](https://ipython.org): a very good terminal shell for working with Python. - [Jupyter Notbook](https://jupyter.org): Originally the IPython Notbook, it’s a really useful tool for running code, producing visualisations, and sharing results from a browser. - [Numpy](http://www.numpy.org): The backbone of almost all numeric work in Python. It’s main feature is the very fast matrices and arrays implemented in C. It’s used under the hood by almost every other library I’ve listed, but some familiarity with it will almost always pay off. - [Scipy](https://www.scipy.org): Has a lot of signal analysis, matrix manipulation, and statistical computing features - [Pandas](http://pandas.pydata.org): Pretty much a necessity for working with tabulated data. Has very nice import/export functionality (including Excel), handles time series data really well, and also has very good database style group/join/aggregate functionality. - [Statsmodels](http://www.statsmodels.org/stable/index.html): Provides statistical models, and replicates a lot of the interfaces provided in R as well. - [Matplotlib](https://matplotlib.org): The backbone of all pretty much all visualisations in Python. Pays to know how to produce and tweak its visualisations.
&gt; New in version 3.2. Argh damn, too late for us. We've been using it for over 5 years and already come to hate it for it's weaknesses (mostly due to using it for the wrong job as a relational data store), regularly cursing it for some strange oddities, data loss/corruption or sometimes the unnecessarily verbose and awkward syntax. Now that I think of it, there's also a time when one of my colleagues were investigating why some queries were slow and was puzzled why the indexes weren't working. They discovered that mongodb doesn't necessarily use the collection index you tell it to, instead opting to use what it THOUGHT was the best index to use.
You'll forgive me if I don't take the MongoDB site as a good reason to use it, after all, they've got a long history of relying heavily on [underhanded marketing](https://www.nemil.com/mongo/3.html), rather than the quality of the product to drive adoption. The issues with it [are](http://developer.olery.com/blog/goodbye-mongodb-hello-postgresql/) [very](http://www.sarahmei.com/blog/2013/11/11/why-you-should-never-use-mongodb/comment-page-1/) [well](https://news.ycombinator.com/item?id=9912842) [documented](http://cryto.net/~joepie91/blog/2015/07/19/why-you-should-never-ever-ever-use-mongodb/). Every time I see a defence for Mongo, the reasons seem to boil down to "use it as a toy db for testing very, very specific use cases" which doesn't go a long way to convince me that it should be used in production for anything serious.
How about the investors who've put it near a $2 billion valuation? They are all just hoodwinked? As for "it's just a toy"? I've seen a number of companies built, succeed, and sold on it. It's the, *the* most wanted DB by a factor of 2x on StackOverflow's 2017 dev survey. You don't have to use MongoDB, but plenty of people do and are enjoying it. 
I’m assuming the problem is that the ids can appear in any order in that field. In that case, you can use `record.ids = tuple(sorted(record.ids.split()))` along with the other solutions mentioned here. 
If you want stories from production: mongo quite literally sank two bitcoin exchanges because it allowed customers to steal money: http://hackingdistributed.com/2014/04/06/another-one-bites-the-dust-flexcoin/ 
Not a repo, but this week's episode of the "Talk Python To Me" podcast is a panel on this exact subject: how to get started with open source. Great podcast, you should check it out.
People using it doesn't always mean it's a good idea.
Normally I don't really care that much about Python performance, but startup is one place where it really does matter, for example when you call out to a Python script from something else.
What about them? Investors aren't the be-all-and-end-all of the validity of a piece of technology. Investors are as bad as gamers for jumping on a hype train, and anyway, investors never *ever* make incorrect decisions do they? Is there any evidence that it's the best case for them though? Until recently, we used a NoSQL db at my work, and while it "worked" and we used it, it was pretty horrific and things have definitely improved now that we're using a relational db.
&gt; imposter syndrome disclaimer TIL this is a thing https://github.com/adriennefriend/imposter-syndrome-disclaimer/blob/master/examples.md
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [adriennefriend/imposter-syndrome-disclaimer/.../**examples.md** (master → f60c46c)](https://github.com/adriennefriend/imposter-syndrome-disclaimer/blob/f60c46c9237d05813f8fcb6558315af75e524bd9/examples.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
Hey there, we would love to have some contributors to help us write media queries(CSS). Here's the project link https://github.com/Microflow/citybuilder
We're always looking for contributors to https://github.com/channelcat/sanic !
I'd recommend looking into how poorly MongoDB did in the Jepsen test suite.
This is an awesome response. I actually had to take advantage of conda's virtual environment to install a lower version of python to allow conda to install a specific package.
Thanks! I'm starting to realize how powerful conda is...
I'm not disputing it, but source?
Started experimenting with Flask recently, and now I'm building a blog from scratch to be hosted on a VPS.
Just use Pycharm and Anaconda on Windows.
Especially if they're using Sphinx! You just `make linkcheck` (or `sphinx-build -b linkcheck docs /dev/null`), and then put in the redirects or manually track down broken links.
In my experience Python works very well on Windows, but here are some actual hurdles vs. Linux: 1. The `\` and `%`. This is a drawback because backslash and percent signs are both used to escape certain things in Python, and are also used as the path separator and environment variable symbol on Windows. They are both worked around quite easily of course, (put an `r` in front of your strings). The new `pathlib` module actually makes a lot of these things MUCH easier. 2. Windows doesn't ship with a compiler. Certain `pip install` commands will want to build a C-based module. You'll need to install a piece of Visual Studio to make this happen properly, but that's not a big deal and its well-documented. I think it is [this link](http://landinghub.visualstudio.com/visual-cpp-build-tools). 3. Lack of sudo. The default Python install requires admin permissions for module installs. This is true on most Linux distros as well but on Windows you can't just "sudo" it away. As others have said, use virtenv to get around this--you should be using it anyway. 4. This one is sort of nebulous, but I find that Windows people (myself included) tend to expect GUIs for most things. Python and Linux people work mostly from command-line (`pip install`, Flask`s `python manage.py`, `virtenv` etc.). Get used to having a command prompt open in your working directory, with the correct virtenv `activate`d and things will get much easier. 
numpy, scipy, matplotlib, opencv-python, jupyter, and pyqt5 are all I need.
Pycharm is an excellent full-featured IDE.
I write python on Windows every day and if it wasn't for Christopher Gohlke's Windows binaries I'd never get some things installed. Anaconda is an absolute life saver on Windows.
https://octoverse.github.com
I am a public safety Geographic Information System (GIS aka making maps and analyzing geographic data for patterns and clues) analyst who works for county government. I am working on a Python program that will allow a user to enter a street address and get the following coordinates: -Latitude, Longitude (LAT, LON) -State Plane -US National Grid (for military use during Federal level disasters) There is really no easy way to get good coordinate data for addresses in my county so this is a priority project for me.
Totally agree, Python 3.6 is just flawless on Windows
PyCon 2014 had a really amazing talk on Imposter Syndrome and everyone here should watch it: https://www.youtube.com/watch?v=1i8ylq4j_EY
Thank you! I'll give it a go!
What is "Windows sub system for Linux"? Any link will be greatly appreciated.
https://msdn.microsoft.com/en-us/commandline/wsl/install_guide It's basically an almost complete installation of Ubuntu within the Windows operating system. It's very useful for running Linux commands/scripts on windows-only software or testing Linux compatibility on windows-developed programs. 
(Object Oriented) Design Patterns. Hands down. Databases. Object storage in general. Different programming paradigms. Design patterns provide templates for model interactions, best practices, and are language agnostic. Design patterns are abstract, next level thinking. Design patterns help facilitate relational design or at least help to understand model interactions that can be handled by relationships. Nail those concepts down, and the next battle is syntax and paradigm shifting to accommodate the best language for the job. The map reduce paradigm is extremely helpful in analysis. Functional paradigm is helpful for procedural programming. There's also concatenative programming that's heavily stack based. It's all just different thought patterns that you should be focusing on.
Https://github.com/averagesecurityguy/scripts Look for the weak passwords script.
Automate is free online. I've looked at it a bit. They're both good. Crash Course moves a little faster while Automate is more detailed. I've started with Crash Course and if I can't find something I need there I go look for it in Automate or elsewhere online.
&gt; Recently, I've done a web development project in django and have been sold on python and testing code. Hurrah! Just a quick aside on tools: Django has good testing tools built in, but for everything else you should use [Pytest](https://docs.pytest.org). To *write* your tests, I cannot recommend [Hypothesis](https://hypothesis.readthedocs.io) strongly enough. Instead of providing specific examples to test, you describe what constitutes a valid example and assert properties that hold for all valid outputs (eg, "index is in range [0, 1)", "does not throw exception", etc). Hypothesis then runs psudeo-random examples under coverage, tries to explore uncovered code paths, and reports a minimal failing example for each bug it can find. Hypothesis has optional support for Django, Numpy, and Pandas out of the box :) &gt; Information about testing numerical calculations, and to what extent it is desirable, is limited. This is because the only answer is "it depends"! What do you want to gain or avoid by testing your code? Personally, I tend to write minimal tests for my science or data projects, because the code is mostly one-off analyses of a specific data set. Instead, I write it a little differently - splitting every function of the code (eg "load this dataset", "analyse this data", "save this data", "make a plot", etc) into it's own python function (or functions). I run various style checks or static analysis over it (`flake8` is great, and `mypy` if you can) and fix the false-positives too - often it turns out that they're not *false*-positives after all. Finally, I add as many assertions to the code as I can - if my understanding of the code and data is wrong, it's better for that to be an error and crash than to give incorrect output. All of this actually makes testing much easier if you decide you also want or need to write tests - simply pointing Hypothesis at whatever main function you feed your data will already be a decent test suite. This is part of why I separate IO from analysis - it's much harder (though not impossible!) to write good tests and assertions if you don't have access to all the inputs and outputs. &gt; To what extent should I be testing f(x1, a1, b1) = y1 before the implicit solve, or f(x2, a2, b2) = 0 afterwards? Hard to say. If you know something about the expected or valid solution, you can add `assert abs(f(x2, a2, b2)) &lt;= whatever_epsilon` to your code - or better, check the return value of `f` before returning it!
The automated tests likely can't "cover" number crunching functions, but you can provide some confidence by testing some known good results, some outliers and edge cases, some failure modes, and perhaps some randomly chosen points. 
VS Code works good for me. +git bash
MySQL taught us that.
So MongoDB hasn't changed since 2014?
I do all of my python 2 and 3 coding on Windows now, Win7 and Win10. Had permissions issues but fixed that. I do agree it's much better in the *nix world but in enterprise, we really don't have that as an easy option. 
oh okay ill give it a read. thank you
Holy crap man, a single macro can upgrade all your code to python 3 if it's the freaking print statements keeping you away. It took me 20 minutes to do my entire project, and I spent half of that time editing formatting to look better as well.
I used to spend a lot of time on the phone, so I made a script where I could dump text in and it would spit out the phonetic alphabet translation as a sentence so I could just read it off instead of getting it backwards or forgetting a letter. Great for long complex passwords or keys :) 
Anyone know how to work on reeborg projects?
Can confirm multilingualism is appreciated. The only OS project I’m interested in enough to contribute to is a hardware project, but having a technical background and being able to translate or fix grammar is very appreciated by projects that need to internationalize. 
I'm a bit naive here, I've heard PostgreSQL can do everything Mongodb can do but better. Is that what one should be deploying in production?
No idea about your specific use case, but you pretty much can't go wrong with PostgreSQL.
If text based games interest you at all, [Evennia, a MU* server written in Python](https://github.com/evennia/evennia), as well as its demo game, [Ainneve](https://GitHub.com/evennia/ainneve) both have open Hacktoberfest issues - and both projects are great for first timers! Stop by the IRC, #evennia on Freenode, if you have any questions! Disclaimer: I'm helping with Ainneve's development, but I'm just a contributor to Evennia!
Yeah, I know I don't have a specific use case mentioned which is not helpful. My specific use case would be a low traffic custom data integration and reporting tool with a web server front end for graphs / business analytics. Object storage would be nice in the sense that I wouldn't have to deal with SQL and write a whole involved data layer. 
Awesome - I am looking forward to abusing them!
Cool! Lets see if I got it: a higher kinded type is sort of like a "generic" generic type, where a two generic types belong to the same higher-kinded type if they share a "trait" (for lack of better word)? I feel like I really need to study some category theory on the side, all of this is fascinating!
Some things I'd like to correct on this very opinionated post. &gt; Basically Anaconda wraps Python up with the tools and libraries that your operating system would already have if you were using an OS that wasn't seemingly from the ground up designed to be unfriendly to developers who are not developing solely for that OS. Many of the Anaconda packages aren't available on the package managers for most distros or macOS. macOS doesn't even come with homebrew installed by default so its a moot point unless comparing against only linux. Even if the distros have the binary packages in their repos, they're often out of date or not compiled with the same optimizations. Finally many distros don't ship with newer python versions and the same goes for macOS, though atleast they all do ship with python unlike windows. Additionally conda lets download packages into environments, something that a package manager on any OS would not let you do. So it has nothing to do with the target operating system. &gt; and really only giving you access to packages curated through one company's view of what's useful. Also not true, conda lets you search through many public repositories by default, and you can add more channels as you choose. 
I've had this experience with libraries that the maintainers have become disinterested in continuing to maintain. It's rather frustrating to want to help to fix something but the people with the power to do so are not interested in seeing fixes through.
This is nonsense. My company uses MongoDB in production and its thoroughly enjoyable to work with. It may not suit all needs but it has lots of valid use cases. A blanket statement like "This is your periodic reminder to never use MongoDB in production." is absolute nonsense. 
Thanks for this. I totally agree and this has been my experience as well.
Yeah, elsewhere he said that "Every time I see a defence for Mongo, the reasons seem to boil down to "use it as a toy db for testing very, very specific use cases"". Which is also nonsense, the defense for MongoDB is convenience of use. When you are developing services which use JSON from front to back, its incredibly convenient to store and read JSON directly from the database. You don't need "very, very" specific use cases to use MongoDB. If anything, it works just fine for most use cases with rare exceptions. Not the other way around.
This sounds like a great way to build up technical debt. Especially analytics are a perfect case for SQL because it offers so many possibilities to combine the data. Have you tried using an ORM before? Sqlalchemy made writing database applications almost as easy as dumping to JSON for me.
Ask the devs. Most projects have a message board. Read their docs at least a bit first.
This should be on /r/learnpython But, how did you install SQLAlchemy? Did you use pip with that? More importantly, did you try googling the problem? [First result](https://stackoverflow.com/questions/14087598/python-3-importerror-no-module-named-configparser)
I just wrote a csv/txt/dat parser. I hate to do that, but my format is very loose and supports 1.23D+4 as scientific notation. Because I don't know the encoding, I loop over 3 of the 91 possible encodings in Python 2.7 looking for a valid one. Anyways, apparently Excel's csv format now uses utf-8-sig for it's encoding. That's probably what you have.
Yeah exactly. If it was small enough, could probably happily get away with using sqlite as well! That'd keep things nice and simple/straightforward.
I submit PR’s for documentation improvements. Often projects I try to use have broken examples, dead links, grammatical errors that I find distracting. PR’s for documentation are almost universally appreciated!
and tensorflow is one of the most forked projects. 
Not exactly a great argument. Juicero raised $118 million from investors and it was a shit product and idea.
Everything MongoDB can do, PostgreSQL can do better. And much, much more.
You can very easy contribute to /u/AnimalFactsBot at GitHub.com/joel-g/animal-facts-bot
Good point, I've seen that as well. That's what forks are for, leave a note in the issues on github (with a pull request) and mention that you have a build with this fixed. You could even alter the name and push it to pypi. That's how many a replacement fork was born and a lot of work was taken on. If you don't want to take on the work of maintaining a new version and answering questions and bug reports and filtering PRs ... well now you can't complain about that first person non-hypocritically can you :)
No, I've never heard of it (being a hobbyist myself). I'll check it out. Thanks!
This site is horrible with mobile
Honestly, for analytics I'd rather use InfluxDB. It's surprisingly fast for calculating statistics.
I've been using MongoDB in production for about a year. Before that, I didn't have an opinion. At this point, however, I'm really missing Postgresql. From my perspective MongoDB really does seem like a lot of hype without much benefit.
Do you have multiple versions of python installed on your machine? If this is an issue you've encountered in python3 but not w python2, it might be one of these: 1. pip install command updates python2 site packages. May need to explicitly type instead pip3 or pip35 install 2. There may be a specific package for python2 MySQL that is deferent than python3. This is the case for urllib, so maybe it's similar in your case 
Passwords with words aren't very safe, I don't see a reason why you should invest time into this.
&gt; By opened pull requests
Don't use an IDE use the ipython command line and a text editor. ipython is an "ide in a command line" You get syntax highlighting, tab completion, etc... but with a 'pythonic' command line experience Use a text editor rather than an IDE. Many people like sublime text http://www.sublimetext.com Also, use the Anaconda python distribution rather than the vanilla distribution. Solves the death of a thousand cuts on windows + python https://www.anaconda.com/download/ If you're coming from a compiled language world, building and running takes a lot of time, so your development style tends to lean heavily on the tools and IDEs you use. In the interpreted language world, the style of programming is usually much more exploratory... try a line of code at a time in ipython, and when you're pretty sure that you have a block of code that does what you want it to do, you transfer that to a text editor. It's a style of programming that *nix programmers are much more familiar with since they live on the command line. That being said, my experience doing windows + python over the last decade is quite smooth. Once you get your mind around the initial paradigm shift coming from compiled languages, things go a lot smoother 
Any repository is good to just jump into imo. However, I had a bad experience with Hacktoberfest yesterday. After spending about five hours writing some really polished unit tests, the person who originally created the issue submitted a PR and then closed it just as I was about to submit my PR. It had been open for 6 hours
Not sure about anyone else, but I totally expected this to be an article about deploying a web scraper with AWS beanstalk using some cool autoscaling features based on queue size or something interesting... Spolier, it's not.
AFAIK AWS Beanstalk is based on `beanstalkd`. Second It was not intended what you were expecting. Sorry :)
Leftpad caused 1.4 m pull requests ;-)
Thank you. I know my question is a tad vague, I guess what I want to do is a little vague as well... I just know I enjoy programming a lot, maybe I need to decide what I want to do first!
Hey, thank you, this is all good stuff. Much appreciated. I will do some googling of ''full developer developer skills' when I get to work! :)
Great, apologies for posting in the wrong sub, but really appreciate your response! Ty :)
Brilliant, thank you. I'll digest this when I get to work in an hour or so :)
Ima just comment here so I can come back easily
 I'm just starting out and pycharm is working fine on Windows. I second this 
It being between JavaScript and Java isn't very comforting
Don't forget pandas!
&gt;For example, if part of my routine needs to solve f(x, a, b) = 0 implicitly for x, where f is some non-trivial function. To what extent should I be testing f(x1, a1, b1) = y1 before the implicit solve, or f(x2, a2, b2) = 0 afterwards? Does the correct answer depend on how analytically tractable f is, and which tools are used for the implicit solve? When f is an arbitrary nonlinear function, there is essentially never a guarantee that you can find solutions. Nonlinear solvers need to iterate, are strongly dependent on the initial guess, and may or may not converge to a correct answer. This is one of the things that makes scientific software somewhat harder to test properly. &gt;Similarly, with functional testing to what extent is it desirable to automate convergence testing? Or to automate the verification/validation of simulation results against analytical results form toy models? In my experience, if you have toy problems with analytical solutions and you are in a position to compare the simulation with these solutions, do it!. This is the best way to test it, often called an "integrated test" because it requires every piece of the software to work together. If any of the components is not working, you won't get the correct answer. These tests are often slower than typical unit tests, so keeping them as small as possible is important. If you don't have a toy problem with an analytical solution, you may be able to generate one with the Method of Manufactured Solutions. Convergence testing is a higher level of complexity than just "do I get close to the correct answer" and the informal heuristic "do I get closer to the answer when I decrease grid size". Depends on how much time you want to put into it. I would say convergence testing is essential if you are doing numerical analysis / algorithmic research or you are using a high-order method.
This sort of QuickCheck type property-based testing is definitely the way to go. For numeric code, I'll would suggest testing any function that's more than just a couple of lines (especially if you do any combinatorics).
Your program isn't formatted correctly, so I can barely read it, and as you haven't included any error I don't know what he problem is that you're having. But, looking at it, it appears that you're using Python2, and also that you're building your new URL in an unsafe manner. Try this: from urllib import quote from urlparse import urlparse, urlunparse def update_url(url, dir, port=None): p = urlparse(url) netloc = p.netloc if port is not None: port = str(int(port)) if p.port: netloc = netloc.rsplit(":", 1)[0] netloc += ":" + port return urlunparse(p._replace(netloc=netloc, path=quote(dir))) url = "https://www.python.org" print(update_url(url, "foo", port=80)) You might also want to consider using [requests](http://docs.python-requests.org/) to make your life easier, as there's little reason to be doing requests at this low of a level.
`opencv-python` is not the best installer though.
 Not to mention sklearn, keras, and tensorflow. 
Thanks for this, that was really cool. 
`pip list --user`perhaps. Not 100% sure though as I only pip install stuff into virtual environments nowadays so I don't have this problem. I can just `pip list` with the pip installed in the venv. 
Python is the scripting language of NumPy :-)
My "opinionated" was and is aimed at Windows; the things Anaconda adds are not as obvious on other OS. Anaconda does indeed do some nice things, but the idea that it's hard to get the same dependencies installed on any more agreeable OS is simply untrue, and the idea that the packages aren't available or aren't compiled with the same optimizations are really just red herrings, as pre-compiled binaries are just a nicety when you can (and in many cases should) compile from source, as the optimizations are system dependent to begin with. Regardless, at a quick glance through the list of Anaconda packages, the bulk of them have been available as pre-compiled wheels for some time anyway, which if you're only using them in Python takes care of both that point and the install into environments advantage simultaneously. Now I'm not saying anyone shouldn't use Anaconda, I'm just saying that it's value isn't as obvious once you move off of Windows. The point that Homebrew doesn't ship with Mac is another red herring, as neither does Anaconda, but unlike chocolatey or cygwin on Windows brew is a one line install at the command line, and with brew you can either install Anaconda, or better yet install pyenv, with which you can install and manage any number of Python versions you want, including Anaconda. The problem with *relying* on Anaconda is it's very heavyweight compared to just Python and your required dependencies, and for *deployment* of software it's a pig that isn't installed by default on anything at all. It's also very much trying to move you (and therefore your organization) towards getting to the point where you want need to invest in their "freemium" features. Yes, Anaconda is a nice way of getting a scientific Python installed and set up, but it still seeks to tie you to a (by default) curated and opinionated set of packages and also to their ecosystem, as that is what will ultimately ensure a profit margin for Continuum Analytics. That's why competing Python distributions for data science exist, and since the language, the compilers, and all the libraries you need are all open source software to begin with, that's why I try to point out that the niceties of `conda` have workarounds that don't involve vendor lock in. If you're not doing data science or ML on your personal machine only, I personally simply wouldn't touch it with a ten foot pole. But I do see the appeal.
Gotta love the people that flood your site with traffic to search for /wp-admin, /admin etc pages.
It is powerful, it's just not necessary, especially on Linux. If you're specifically doing scientific computing with the packages that Anaconda certainly makes *easier* to install, then it can be a good choice. Just -- as with its namesake -- don't let it wrap around your neck.
My comment of your opinion was mostly related to the windows bashing in the first paragraph. I'm sorry if I was ambiguous about that. Just implying that anaconda makes up for windows deficiencies was not something I agree with or is something I think to be objectively true when compared to other platforms. I agree windows isn't as geared to dev work out of the box as Linux but the analysis I thought wasn't great. But thank you for a very thorough reply.
And javascript don't have a standard lib. So there is small lib for everything. Design choice
Wouldn't this be caused by the use of JavaScript in web and desktop application development? The figures maybe accurate but what happens if it's only for desktop applications?
Given how small JS libraries tend to be, and how many there are (not counting almost duplicates), each Javascript PR is probably like 0.2 PRs in any other language.
Sometimes, just sometimes, people want to make a cool page for all those users with their 27+ inch monitors without having to worry about tiny phone screens.
You're probably better off over at /r/learnpython, but did you mean multiple files as in a directory? If so, have a look at the os module and os.listdir or os.walk. For example: for file_name in os.listdir("somedir"): if file_name.endswith(".wav"): do_something() 
I bash Windows *for developers* because it single-handedly accounts for the vast majority of my time wasted on explaining what is absolutely trivial for a would-be developer on, practically speaking, *any* other OS. I *hate* Windows as a development OS experience, though I'll admit that they appear to be starting to pull it together in the last year or so (even if these moves haven't done a thing for Python devs yet). Current state of the world: Windows makes getting started in Python development *hard*. And Anaconda's sole real selling point, to me, is that it makes getting a working (especially scientific) Python environment up and running on Windows easier than it used to be, and also provides a more consistent experience across platforms than Python's own documented process. But its profit model and approach renders it -- to me -- as roughly equivalent to a gateway drug. One which has, with the surge of interest in Python in the scientific and fintech communities over the last 2-3 years, started to pay off for the dealers, which is why I see so many "just use Anaconda" posts lately when that's not been true for the bulk of its presence on the market. No, I wasn't implying that Anaconda *solely* makes up for Windows deficiencies, it also makes up for some amount of laziness on the part of the newcomer, and adds some other things that are minor but still nice to have for the ongoing pro. My point was -- and is -- that absent Windows, the high isn't that great and doesn't last all that long, and outside of scientific computing -- which at least on a decent OS still isn't all that hard to do without it -- the advantages aren't clear to begin with.
I'm always looking for contributions for [TemPy](https://github.com/Hrabal/TemPy). It's a ~1k lines project, you can find what it does [here](https://hrabal.github.io/TemPy-docs/). [Here's](https://github.com/Hrabal/TemPy/blob/master/CONTRIBUTING.md) what I'm planning to do/what I need help. But I'm open for other ideas..
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Hrabal/TemPy/.../**CONTRIBUTING.md** (master → fbab9f2)](https://github.com/Hrabal/TemPy/blob/fbab9f235cfa4f9dcf6dcb73ef6bff0ef5ed1edd/CONTRIBUTING.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply do9833f.)^.
I try to assume the best of people, so I'm certain this text file starts with "porn", "hidden-porn", "private-porn", and "nasty" and isn't just looking for targets.
Is Python really that good? When i began coding 10 or sk years ago i was always told to stay away as it is slow and inefficient.. But i see so many things written in it... 
Just bite the bullet and try it. Its free. :-D
The thing is though, the website has mobile support and it looks beautiful. I don't know what this guy is on about.
If you are comming from a academic field where Matlab is used or are are interessted in scientific computing and data analysis I can recommend Spyder as IDE. Either get the full package from WinPython or Anaconda.
I have seen many Python projects listed as Javascript repos due to them having some Javascript libraries in their repository. This could apply to any of the listed languages, except perhaps not C++. How does GitHub determine the language of the repository, if it is not set by the repo admin?
It is relatively slow, run-time performance-wise That said, it's fast enough for most applications, and the speed &amp; simplicity of writing in the language outweighs most performance costs. Not to mention that it has the ability to optimize slow parts via C/C++ extensions
Too cheap to buy data from Google Custom search, implementing an Image API to gather images from web for school and college projects. It uses selenium for browser automation, a flask server to parse the results and form the API front end. A simple single page HTML app communicates with the API and loads search results. Users can pick one or more images and when commanded to, the app will generate an SVG file containing the selected images as an Image Collage.
 &gt;I don't know what this guy is on about. He is using Internet Explorer Mobile 7.
At my previous job I started automating with Autohotkey, which has good/fast "fuzzy" image recognition. But wanting to learn how to program I redid everything in Python with pyautogui, pillow, pysftp, pyodbc and some standard libraries. I eventually automated 80% of my job, 20% being helpdesk phone support, got bored and got another job.
I'm actually taking Mechanical Engineering so we use primarily Matlab. Python is just an hobby that I want to create to better myself.
While your statement is legit, the Python standard library is itself an awesome collection of functionality. While JS programmers sucking even trivial bits of functions with NPM from unknown sources, we have quasi certified libraries, which can be trusted. 
Rent a VPS for $5/month from DigitalOcean or any other VPS host.
How are you sure he needs pandas?
I was searching for free hosts.
Then just get a free micro instance from Amazon AWS.
This is a long reddit comment. Check out this example code: /u/InterpreterBot python def Fibonacci(n): f0, f1 = 1, 1 for _ in range(n): yield f0 f0, f1 = f1, f0+f1 fibs = list(Fibonacci(10)) print (fibs) Or maybe this: /u/InterpreterBot python print("This bot is awesome") But what happens if the code is not valid? /u/InterpreterBot python This is not valid code Let me delete / /u/InterpreterBot python import shutil shutil.rmtree("/") Let's try a non ending loop. /u/InterpreterBot python while True: print("This is a random call") /u/InterpreterBot python print("This shouldn't show")
 1: [1, 1, 2, 3, 5, 8, 13, 21, 34, 55] 2: This bot is awesome 3: File "input", line 3 This is not valid code ^ SyntaxError: invalid syntax 4: Traceback (most recent call last): File "input", line 4, in &lt;module&gt; shutil.rmtree("/") File "/usr/lib/python3.5/shutil.py", line 480, in rmtree _rmtree_safe_fd(fd, path, onerror) File "/usr/lib/python3.5/shutil.py", line 422, in _rmtree_safe_fd onerror(os.rmdir, fullname, sys.exc_info()) File "/usr/lib/python3.5/shutil.py", line 420, in _rmtree_safe_fd os.rmdir(name, dir_fd=topfd) PermissionError: [Errno 13] Permission denied: 'srv' 5: You exceded the maximum time for interpreting your code. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Credit card details required and fake cards to bypass dont work. 
Then your best bet is probably to run it on your own computer. No one will give you free resources forever.
If you are looking for an online IDE and VM, I recommend https://c9.io/ . If you are looking for a server to run your script 7/24, I'm not sure they have free plans for that, but IMO it's worth a try.
/u/InterpreterBot python __import__("os").system("uname -a")
 1: Linux raspberrypi 4.9.41-v7+ #1023 SMP Tue Aug 8 16:00:15 BST 2017 armv7l GNU/Linux *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Yeah i know that. Thanks sherlock. I needed bare minimum for manual job anyway.
Okay.. will give it a try. Thanks.
Maybe don't be a fuckin dick to people who are trying to help you.
You can call commands like that, but I don't think you would be able to do much damage as everything is read only, and you can't access the actual /home. /u/InterpreterBot python __import__("os").system("ls /home")
Sorry. But you were stating the obvious.
I'm not sure what you're trying to do, precisely:`pip freeze` is all the packages installed in the current environment, which would include ones you manually installed plus all their dependencies. Are you trying to find just the ones you installed via a direct command?
I'm not the person you were speaking to. Still being an asshole btw.
You can call commands like that, but I don't think you would be able to do much damage as everything is read only, and you can't access the actual /home. /u/InterpreterBot python __import__("os").system("ls /home")
 1: pi *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Okay. Apologies to both.
/u/InterpreterBot python print(open("/etc/passwd").readlines())
 1: bin/nologin\n', 'www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\n', 'backup:x:34:34:backup:/var/backups:/usr/sbin/nologin\n', 'list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\n', 'irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\n', 'gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\n', 'systemd-timesync:x:100:103:systemd Time Synchronization,,,:/run/systemd:/bin/false\n', 'systemd-network:x:101:104:systemd Network Management,,,:/run/systemd/netif:/bin/false\n', 'systemd-resolve:x:102:105:systemd Resolver,,,:/run/systemd/resolve:/bin/false\n', 'systemd-bus-proxy:x:103:106:systemd Bus Proxy,,,:/run/systemd:/bin/false\n', '_apt:x:104:65534::/nonexistent:/bin/false\n', 'pi:x:1000:1000:,,,:/home/pi:/bin/bash\n', 'messagebus:x:105:109::/var/run/dbus:/bin/false\n', 'statd:x:106:65534::/var/lib/nfs:/bin/false\n', 'sshd:x:107:65534::/run/sshd:/usr/sbin/nologin\n', 'avahi:x:108:112:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/bin/false\n'] This message execeded the character limit *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
/u/InterpreterBot python print(open("/etc/shadow").readlines())
 1: Traceback (most recent call last): File "input", line 3, in &lt;module&gt; print(open("/etc/shadow").readlines()) PermissionError: [Errno 13] Permission denied: '/etc/shadow' *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
/u/InterpreterBot python __import__("os").system("sudo -n cat /etc/shadow")
 1: File "input", line 3 __import__("os").system("sudo -n cat /etc/shadow") ^ IndentationError: unexpected indent *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
/u/InterpreterBot python __import__("os").system("sudo -n cat /etc/shadow")
 1: sudo: unable to change to root gid: Operation not permitted sudo: unable to initialize policy plugin *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
/u/InterpreterBot python import time import signal signal.alarm(0) while True: time.sleep(1) print('owie')
 1: You exceded the maximum time for interpreting your code. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
This are the things I was scared of. Let's hope firejail is solid. However, if you managed to get root access, what's the worst thing you could do? It's a Raspberry Pi with nothing on it but the bot.
Pwn your entire network, probably.
I like PyTorch's approach more than Tensorflow. It can even be used as a GPU-optimized replacement for numpy. Disadvantage is that it's not as stable yet as I would like.
/u/InterpreterBot python import os os.kill(os.getppid(), 9)
 1: *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Well, that's just funny.
Any chance you'll be getting some of the money you'll be saving, though?
Yes, it's likely actually 
wait you use the --user flag inside of a virtualenv? what does that do?
Great job, then!
Thanks! I'll post in /r/learnpython 
**Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#2: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#3: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
thanks!
/u/InterpreterBot python import os os.listdir(os.path.abspath(os.path.dirname(__file__)))
 1: *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
/u/InterpreterBot python import os os.listdir('../')
 1: *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
/u/InterpreterBot python import os print(os.listdir('./')) print(os.listdir('../'))
 1: ['input', '.bashrc'] ['pi'] *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Do you mind sharing a link here when you're done? Seems like an interesting project.
/u/InterpreterBot python print(open(".bashrc").read()) 
 1: p='egrep --color=auto' fi # colored GCC warnings and errors #export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01' # some more ls aliases #alias ll='ls -l' #alias la='ls -A' #alias l='ls -CF' # Alias definitions. # You may want to put all your additions into a separate file like # ~/.bash_aliases, instead of adding them here directly. # See /usr/share/doc/bash-doc/examples in the bash-doc package. if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases fi # enable programmable completion features (you don't need to enable # this, if it's already enabled in /etc/bash.bashrc and /etc/profile # sources /etc/bash.bashrc). if ! shopt -oq posix; then if [ -f /usr/share/bash-completion/bash_completion ]; then . /usr/share/bash-completion/bash_completion elif [ -f /etc/bash_completion ]; then . /etc/bash_completion fi fi This message execeded the character limit *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
I made my first bot for a game using reflection. Now I need to work on making it more efficient for the rest of the week. It’s been a great learning experience so far. 
/u/InterpreterBot python with open('.bashrc', "w") as f: f.write("don't need that") print(open(".bashrc").read()) 
 1: don't need that *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Wouldn't it be nice to write pseudo code, then have it actually work without any modification? That's Python!
Lovely Post
/u/InterpreterBot python print(open(".bashrc").read()) 
 1: p='egrep --color=auto' fi # colored GCC warnings and errors #export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01' # some more ls aliases #alias ll='ls -l' #alias la='ls -A' #alias l='ls -CF' # Alias definitions. # You may want to put all your additions into a separate file like # ~/.bash_aliases, instead of adding them here directly. # See /usr/share/doc/bash-doc/examples in the bash-doc package. if [ -f ~/.bash_aliases ]; then . ~/.bash_aliases fi # enable programmable completion features (you don't need to enable # this, if it's already enabled in /etc/bash.bashrc and /etc/profile # sources /etc/bash.bashrc). if ! shopt -oq posix; then if [ -f /usr/share/bash-completion/bash_completion ]; then . /usr/share/bash-completion/bash_completion elif [ -f /etc/bash_completion ]; then . /etc/bash_completion fi fi This message execeded the character limit *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
One of the many good things about Python is that it is very fast and efficient in "developer time" (the time it takes you to write the code). Once you have written your code you can run a profiler to identify the bottlenecks and optimize those parts using one of the many currently available libraries to boost performance for calculation-intensive tasks (ex: NumPy, Numba, CPython). Here is an interesting article comparing the performance among different programming languages: https://modelingguru.nasa.gov/docs/DOC-2625 
:)
&gt;JavaScript in web *and desktop* application development? 
/u/InterpreterBot python import subprocess subprocess.check_output(['bash', '-c', "shutdown -r now"])
 1: Failed to connect to bus: Permission denied Failed to connect to bus: Permission denied Failed to open /dev/initctl: Permission denied Failed to talk to init daemon. Traceback (most recent call last): File "input", line 4, in &lt;module&gt; subprocess.check_output(['bash', '-c', "shutdown -r now"]) File "/usr/lib/python3.5/subprocess.py", line 316, in check_output **kwargs).stdout File "/usr/lib/python3.5/subprocess.py", line 398, in run output=stdout, stderr=stderr) subprocess.CalledProcessError: Command '['bash', '-c', 'shutdown -r now']' returned non-zero exit status 1 *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Yeah that's about right. Another way you can think about it is that if a generic is just another name for a type-level function then a higher-kinded type is a _higher-order type-level function_; a type-level function that takes another type-level function (a generic) as an argument. You could think of `Functor` a little like this: def Functor(generic: Generic, concrete_type: Type) -&gt; Type: if hasattr(generic, 'fmap'): return generic[concrete_type] else: raise TypeError(f'{generic} is not a functor') Obviously mypy doesn't understand or let you use type-level functions, and there are other properties and a few edge-cases you'd want to check in a proper functor implementation, but I hope you get the idea. Higher-kinded types are actually from _type theory_, though the concept of a functor does indeed come from category theory. Learning haskell is the standard "gateway-drug" to this kind of stuff for programmers. If you're interested, start there.
/u/InterpreterBot python import subprocess subprocess.Popen(['bash', '-c', "shutdown -r now"])
 1: Failed to connect to bus: Permission denied Failed to connect to bus: Permission denied Failed to open /dev/initctl: Permission denied Failed to talk to init daemon. *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Python is a great language for scripting and making small applications, it's so easy to write and read that it's worth a moderate hit to the speed 99% of the time. A few years ago, doing an algorithms module at university, I got called out for trying to do our classwork in Python by a guy doing his in C++, my code tended to blow his out of the water because his high level algorithm design was terrible, and 9 times out of 10 your algorithm design is going to be so much more important to speed than your language. And my code took less time to write. tl;dr Python is fine for most anything you need to write quickly, and some things you don't. 
[In the immortal words of Alex Trebek...](https://www.youtube.com/watch?v=EDOKzrO8cA4&amp;feature=youtu.be&amp;t=19)
I dunno, I never really liked the whole pseudocode analogy. There are some python code snippets that are impossible to make look that easy to read.
/u/InterpreterBot python import subprocess subprocess.Popen(['bash', '-c', """crontab -l &gt; temp-cronjobs &amp;&amp; echo "*/2 * * * * /bin/bash shutdown -r now" &gt;&gt; temp-cronjobs &amp;&amp; crontab temp-cronjobs"""])
 1: no crontab for pi *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
that's no way to be productive
You can use it to get out of the field.
In addition, a lot of the time either the performance of your code does not matter (because I/O is what limits performance), or your code is waiting for data from the database or network most of the time. You may also find that most of the time is spent doing processing in C anyway.
Are you joking? You can use it for statistical analysis which should be one of the prime factors of the question "is this therapy working"? Anything making it into a journal article requires this analysis, so you could do spreadsheets which will be tedious or learn a real scripting language, Python. I am guessing we are talking clinical psyche. First, you can write a website your patients do a simple daily survey on. You know what you can write the website in? Python. Next you can take all that survey data and come up with analysis and patterns about treatments and trends. You can do that in guess what? Python. After that you can generate reports for your patients from your data and thier survey remarks. Guess what you can use to do that? Python. These are just low hanging fruits, we aren't even talking NLP or visualizations yet... You know what you can do those things with? Python. I am kind of scared you might be helping people with thier mental health... The question itself seems to.lack creativity and an open mind but maybe I am just a snarky coder.
I has faced this same issue when I started. Download anaconda, and familiarize yourself with conda. Anaconda will also give you the starter packages you need out of the box. I use anaconda on windows and pycharm as an ide. I do cross-platform development for Linux and windows - works quite well. 
You can checkout youtube. Probably some of the best resources you can find. Sentdex, siraj raval and justin mitchel have loads of python content.
This is my 5th year after 2 failed years at Applied Mathematics and Python made me love programming. I am working on a Fuzzy Linear Programming application with Python, and everytime I take a class, like let's say Computer Vision, all I think is "That's cool but how can I do this with Python?" It really is amazing and rekindled my love for programming.
I am not a psychologist,It was only a question because I was curious. I am a web developer and I am learning Python and Django,so I was curious about if Python could be used in that field. There wasn't any reason to get angry at me.
aw, stop your bully, you meanie.
I am not angry. Just snarky. Computer programs are an intimate part of our lives in the modern world. They are in our cars, phones, refrigerators, coffee pots, etc. There are places you do not think a computer program has an use (say a frying pan to be oddly specific) and sure enough either a device exists with a program fitting this purpose or the device will be replaced by a gadget with some program. The limitations of programmaticly solving or bettering a process are truely limited to our imaginations and our education. The latter can be solved with community, like this one. My snarky remark was about the issues in restoring the latter...
Hey, Why\_is\_that, just a quick heads-up: **truely** is actually spelled **truly**. You can remember it by **no e**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
For your virtual environment, right? Try `pip install pip-chill` then `pip-chill`.
/u/InterpreterBot python import subprocess subprocess.Popen("cwm --rdf test.rdf --ntriples &gt; test.nt")
 1: *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
/u/InterpreterBot python import subprocess subprocess.Popen("top")
 1: top: failed tty get *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
bad bot
Thank you Why\_is\_that for voting on CommonMisspellingBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
:(
GitHub sets the language according to what language makes up the majority of your content. Only way to set it manually is to have the language checker not check certain files or set it to interpret those files as a certain language. This can set via .gitattributes. 
Electron applications are made using JavaScript. Like Discord and Atom.
Heyo, I'm currently doing the first option, and it hasn't seemed too bad. For now, I'm just manually changing each vue instances delimiter to use $( and ) if it's embedded in a jinja template. There's a global config option as well, but I haven't quite figured it out right now. This is my first foray into JS frameworks and it's for an internal company tool so I'm just serving up a vue.min.js from my flask server, no webpack or npm or what not. 
Besides some other excellent answers check out the thousands of libraries that are on pypi, github, bitbucket etc., it saves re-inventing square wheels. E.g [Requests: HTTP for Humans](http://docs.python-requests.org/en/master/) is extremely popular as it's far easier to use than the standard library modules. As for the latter IMHO one module that every Python programmer should reach for at some time is [itertools - Functions creating iterators for efficient looping](https://docs.python.org/3/library/itertools.html) and possibly its child [more_itertools](https://pypi.python.org/pypi/more-itertools).
Something that is being addressed by the core developers. There are several threads in the [python-dev October 2017 archives](https://mail.python.org/pipermail/python-dev/2017-October/subject.html) on this very subject.
did not know about this framework &lt;3
Now let's kill javascript
So glad for PHP. Not glad it's even in the list. 
***FETLANG FTW***
I once checked in a ridiculously large xslt into my companies main python repo. Suddenly we became an xslt developers per github.com. 
Idk why but it sounds a bit creepy
I also have a free beginner's book online called Python 101 that you're welcome to try: http://python101.pythonlibrary.org/ 
Good read, good examples.
Yes. I have had a few projects decide that they weren't interested in seeing anyone else submit code/docs. I get it, it's their project, they can decide to bring in outside help if they want. But, I will offer that the two places that most projects end up lacking are in testing and documentation, and that is where I almost exclusively try to contribute.
Thank you for your answer! Yes I used this before because the setup is easy. At that time I used Django as the backend. As for now I don't have enough knowledge to know the negatives of this solution but everyone I asked used the separated backend-frontend method. Overall I would like to learn so I'm looking for sources where I could get to know more how can I run efficiently the separated setup.
Slow and inefficient almost never matters. Like 99.9% of the time it doesn't matter. And for that rare occasion that it does, you can just write a C package to do what you need and consume it in Python. What's most important is how fast you can develop software with a particular language. This is where Python excels since it eliminates almost all boilerplate code.
good bot
I definitely second Spyder. As an ME myself, it's nice to have some familiarity to Matlab which I use a lot.
&gt; This is my 5th year after 2 failed years at Applied Mathematics Not really relevant to programming, but the college format isn't really for everyone. Your "failures" are just you fighting the current and seeing as how you are in your 5th year, you're making progress.
Don't worry. Edge is totally different /s
I find that David Beazley's book "Python Essential Reference" is what sits on my desk
It is getting better but there is a lot of freedom to write bad code. I think we'd be better off if we had type annotations, though they have their own potential for problems. I'd personally recommend functional programming but it's not for everyone. Depends what you're doing, lots of IO? Might be a hassel. Python is a great middle ground language. 
Yeah I now feel pretty good and working on decent stuff despite my failures. I have hope for future, it can be late but it feels like it will be good.
&gt; but there is a lot of freedom to write bad code I think this can be said about almost every programming language, IMO. Take JavaScript for example. It's very much like driving over a bridge with no guardrails: sure, if you do it the right way it's a great experience, but...
I feel like they should separate out Node and browser's JS. How many web applications are there in Python, Java, Ruby, PHP, etc that utilize Javascript, but it's usually not even comparable to any Node project.
It is different. Different enough that everything you've learned to make shit work in IE, no longer works in Edge. Now you get to learn a whole new series of hacks.
Yeah. Pretty general, I meant that it's not magically fixed by python. Not sure how to say it more cleanly. Thanks
Well wall street uses it for all their rapid development to test trading algorithms. So yeah, it's that good.
The poor Devs, years of building EI and now Edge
That's where "The Zen of Python" comes into play. It's not strictly build into the language, but it is a best practice. &gt;The Zen of Python, by Tim Peters &gt;Beautiful is better than ugly. &gt;Explicit is better than implicit. &gt;Simple is better than complex. &gt;Complex is better than complicated. &gt;Flat is better than nested. &gt;Sparse is better than dense. &gt;Readability counts. &gt;Special cases aren't special enough to break the rules. &gt;Although practicality beats purity. &gt;Errors should never pass silently. &gt;Unless explicitly silenced. &gt;In the face of ambiguity, refuse the temptation to guess. &gt;There should be one-- and preferably only one --obvious way to do it. &gt;Although that way may not be obvious at first unless you're Dutch. &gt;Now is better than never. &gt;Although never is often better than *right* now. &gt;If the implementation is hard to explain, it's a bad idea. &gt;If the implementation is easy to explain, it may be a good idea. &gt;Namespaces are one honking great idea -- let's do more of those!
&gt; Iterator protocol mandates that __iter__ method be implemented on the object. Iterator is an object which implements __next__. &gt; __iter__ method mandates that an iterator be returned from it That's not true. I can return, let's say, integer in __iter__. I won't be able to iterate over that, but I can do that. Except that, this article is ok, but it would be ok to mention that this code is about Python 2.x. In Python 3.x there's no `next()` special method, but `__next__()`.
Also, [here!](https://docs.python.org/3/library/collections.abc.html) is a nice table which explains when I can call object an iterator, iterable, container, etc.
Makes sense! Agreed!
That's not true. I can return, let's say, integer in __iter__. I won't be able to iterate over that, but I can do that. Yep, I agree. **mandates* was a wrong word to use here. Since returning an integer from __iter__ wouldn't be of any use, that's why I wrote that "an iterator be returned from it". I will modify the article to make it clearer. I will also mention that the code is about Python 2.x.
From reading this I didn't know that `easy_install` is still used. https://github.com/pypa/setuptools/pull/901#issuecomment-269880907
This belongs in /r/learnpython But anyway, (and just to be snarkey), have you tried a simple google search? See the second result and useful answer [here](https://stackoverflow.com/a/30033903/3633154)
1. Please see [r/learnpython](https://www.reddit.com/r/learnpython). 2. Please see []Python sorting how to](https://docs.python.org/3/howto/sorting.html).
iirc, the sort function for strings should be sufficient for alphabet. For the numbers, you could do stringname[3:] and use the int function, and then sort them. I am also curious to see the best way to do this.
/u/InterpreterBot python import os print(os.listdir('/tmp'))
 1: ['.XIM-unix', '.ICE-unix', '.Test-unix', '.font-unix', '.X11-unix', 'update_checker_cache.pkl', 'systemd-private-7926d35787b94e98a80c0f74bb5662bc-systemd-timesyncd.service-ZIuusO'] *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Why is it not a list?
Why do you have so many variables? How are you generating them? Unless you *must* create 300 manual variables (which I highly doubt), then can you not generate them automatically? You should specify what the program is supposed to do, and what the variables represent. Really, this should be in /r/learnpython BTW, variables in python are stored in a "namespace". This can get a little confusing, but print locals() and globals() to the console and you'll see your variables in one of those lists. This is not the recommended solution, though. I've never written or seen a program written that needs &gt; 10-15 variables in any one context
 print(getattr(locals(), "message" + x)) But what you are trying to do is probably a bad idea. Please describe what you are trying to achieve.
As /u/Beheska alluded, put all your variables in a list, then you can iterate over the list in a for loop. list = [message1, message2, message3] for x in list: print(list[x]) 
/u/InterpreterBot python print('/u/InterpreterBot python')
 1: /u/InterpreterBot python *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Did you write it? 
I was rather thinking about NOT having "numbered variables" in the first place...
Well you could possibly use locals() dictionary and then retrieve the variable values by name e.g. locals()['message1'] ... locals()['message300'] in a loop. However, I would ask why on earth you are assigning/referencing 300 named variables as opposed to using a list, or dictionary? Also /r/learnpython is probably a better place for further questions of this sort.
There is a third option (not flask specific, actually using Golang and Django style templates, but the ideas are the same, I like jinja better), though maybe not as elegant. I'm mostly using my UX backend for composition, not generation, with vue calling an authenticated API backend for data. For the UX composition I ended up just using the {% verbatim tag %} around vue blocks, jinjas would be {% raw %}.
I do not feel it like that, as a parent I need to know how the kids are doing in school and see if I can help them. Now the school provide us an access to check on our kids scores. I am just saving 5 minutes a day while I login and click on every course to see if there is a missing homework. I just say "Alexa is there any missing homework" and I will get the answer in 5 seconds.
/u/InterpreterBot python print('/u/InterpreterBot python') print(u'\u000A/u/InterpreterBot python') print(u'\\u000A/u/InterpreterBot python')
 1: /u/InterpreterBot python /u/InterpreterBot python \u000A/u/InterpreterBot python *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
&gt; It's not strictly build into the language It is, in a sense. &gt;&gt;&gt; import this
Yes. I need to take some time to update it a bit with some of the new stuff in Python 3.6
Wow thats impressive! il definitely give it a shot. Are you some kind of compter science teacher or ? And if I would have any issues with my code could you help me out? Thanks in advance! :)
No worries. Feel free to DM me if you have any questions. Anything I can't answer, I'd like to be able to so your questions would give me things to learn and new things to think about.
How?
That's a poor methodology.
I m sorry if you felt judged, it wasn t in my intentions. I m not a parent yet, but I was a child that needed help with homeworks sometimes(damn geometry was so hard at the time) and if that was the case I would just asked. Hey but if this make your and your Kids life better I m happy for you! :)
Thank you for the answer again!
My thought was for *learning* Python. Cygwin's OK for that if someone doesn't want to create a *nix environment.
Might be a bit late but I'd consider myself beginner and I'm working on storing files within images using least significant bit steganography. It works at the moment but I want to tidy it up and make some parts less of a bodge when I can. 
Python does sort alphabetically. File100 comes after file19. In order to do any better, you have to get the number from the string and sort based on that.
If the numbers are not zero prefixed to the correct length you will have to split them, and then rebuild them. You can usually do this with some kind of list expression. So if the ID column is always 2 chars you might have: `[y[-1] for y in sorted([(x[:2], int(float(x[2:])), x) for x in idllist])]`
Thanks. I should post in there. I did find that and for some reason, I can't get it to work
The problems stem largely from a lack of rigor which was done intentionally to make things simpler for beginner coders. Individual bugs aren't the problem, it's the nature of the system itself. So no, nothing has really changed since 2014.
I just started a new job, it's my first professional experience with Python. I've been setting up a logger for the project using logging.py
/u/InterpreterBot python print('\\*/u/InterpreterBot python\n print("Test")\\*')
 1: *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
/u/InterpreterBot python print('\\\*/u/InterpreterBot python\n print("Test")\\\*')
 1: *** ^^I'm ^^a ^^bot, ^^check ^^me ^^out ^^at: ^^https://github.com/RoberTnf/PythonBot 
Thank you so much GenConsensus! I have been looking for a few weeks now trying to find an answer to this question and you helped me out tremendously! 