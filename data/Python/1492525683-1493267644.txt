That's a pretty interesting library you've got there. I can confirm that it works pretty well on my machine running wx 4 and python 3.6, that's a pretty quick turnaround on getting it supported and released =)
An ESP8266 and a relay is less than $10.
What's the advantage of cowquotes over doing the following? $ fortune | cowsay
If you haven't done so yet, please submit a ticket - https://github.com/wxWidgets/Phoenix
The more help the better.
There aren't a lot of choices. You have the original book by the creator of wxPython called "wxPython in Action". I still like that book and I suspect the examples would still mostly work, but they don't really follow the current way that wxPython is written any more. Other than that, there are two wxPython Cookbooks by Cody Precord from Packt Publishing. They use wxPython Classic, not Phoenix...but that shouldn't dissuade you from checking them out. I also wrote a wxPython Cookbook that's on Leanpub. One of these days, I want to write a beginner's book though.
Still my image organizer in Kivy for very large repositories of images, powered by an extensible VI-like user interface and advanced search feature with tags. I'm still fighting with performance issues when I display a list of thumbnails, both in speed and memory usage. Since I'm aiming to use it on devices with limited resources, it needs to be optimized. After struggling a lot with caches, I finally decided to not cache anymore, at the price of a little slowdown when I load more thumbnails.
The classic way to learn it is through the demo https://github.com/wxWidgets/Phoenix/tree/wxPython-4.0.0a1/demo which shows off all the widgets and source code to use them
Its running Perl 6, can't you tell? :-P
The quotes are fetched from internet (http://forismatic.com/en/ and Forbes). Actually it is no difference, if you don't care about the contents, I just combine cowsay and fortune for fun and practice Python too. 
Trying to figure out a way to figure out a way to project a maze puzzle picture onto a 2d array which would later on be used to make an actual maze in a game's server in real time. So far, I've only tried the PIL library to get argb values. Now I have to try to interpret those multi-pixel thick black lines as a single pixel thick lines.
It's customary to create two supported versions, slowly deprecate the older version of your software. Let your users decide if they want to upgrade to Python3.6, still do bug and security fixes on the old code, but new features go in the new code. It's also worth considering, are some of these features going to get backported to 3.5? I'm not sure how the python devs handle backporting, but I think it's certainly possible.
That page cleared up a bunch of misconceptions for me about Python, many thanks. I always wondered why Numpy chose shallow copy as their default, now I see it's inherent to Python.
can you link an anaconda download? having trouble finding it
yeah is this a joke? 
There's no difference between a website and a web application, although "web application" suggests something more interactive than just "a website". Major python web frameworks are Django and Flask, less popular ones are Twisted, Pyramid, Bottle &amp; others. Yes, a web application can be stood up locally &amp; listen to the localhost. You can make it accessible by IP using a reverse proxy (like nginx).
It's ordered as the result of an implementation detail, but it isn't an OrderrdDict
This is incorrect. The *dict* type is ordered by nature of the implementation in Python 3.6 but it's not in the spec for it the stay ordered if the implementation changes in the future. _OrderedDict_ is a separate class available from the _collections_ module.
Yeah. I should have mentioned that I usually used the demo and the documentation to figure stuff out. If I got stuck I would ask the wxPython group. Now there's StackOverflow too.
Python 2 does support wsgi as well as python 3. As you said wsgi is a standard api. Yet python 2 has a very old python and unicode interface. It sometimes a pain to work with, especially for non-english jobs. If there was no python 3 but 2.8, I'd probably switch to another language. 
People are gonna start relying on that though. :/ Maybe it'll become part of the spec, but I hope not as it'll potentially cut off other optimizations that could be made 
Why does Reddit show an image from the wxPython Cookbook on this post when on mobile? Screenshot - http://imgur.com/a/ayTh0
I start by not making any assumptions. I have an OCR module that receives image data and it's not aware whether it's a full frame or just a region. The process, simplified: * Preprocess: Convert to grayscale, mild contrast stretching, local thresholding and border clearing * Character Candidate Detection: Get bounding boxes using SKImage labeling on the preprocessed image data * Character Candidate Normalization: Pad the black and white image data to reach a 1:1 aspect ratio and resize to 16x16 (no antialiasing) * Character Candidate Classification: Send every normalized piece of image data to a multi-class classifier that we have manually trained on that custom font. Get the prediction and associate it to the bounding box. * Word Candidate Detection: Same as Character Candidate Detection but we perform morphological closing first using a custom shape that covers most kernings on that font. * Word Reconstruction: Fit the character bounding boxes inside the word bounding boxes. Map the character predictions and join them. Some notes: * Using a simple SVM classifier. Built a tool to annotate image data in Jupyter Notebook and persist it in Redis. Have some functions to build a training dataset out of the Redis data. * There is a class for "Not a character" in the classifier. This allows us to map it to an empty string. Early code drafts are on GitHub: [https://github.com/SerpentAI/hehag0n](https://github.com/SerpentAI/hehag0n)
Oh yeah! I forgot to mention that it supports Python 3 in the post...fixed!
Make sure you use canonical links when linking to a file/directory on GitHub. On GitHub, you can press the "y" key to update the URL to a permalink to the exact version of the file/directory you see -- [source](https://help.github.com/articles/getting-permanent-links-to-files/). I've tried to fix your links: Relative | Canonical -|- https://github.com/qutebrowser/qutebrowser/blob/master/doc/userscripts.asciidoc | https://github.com/qutebrowser/qutebrowser/blob/b82aada50b11e438a2a4bc9259352a38a1c3ce93/doc/userscripts.asciidoc Shoot me a PM if you think I'm doing something wrong.
Cool!
I wrote a package for doing this. It's much more focused on something larger than what you probably need so you'll need to figure out how to adapt it, or gain whatever insights you need from it. It does have the capability of executing commands remotely and even editing files remotely(in a way) https://github.com/Wykleph/Oyster I actually have 2 different connection objects that handle sending/receiving data for the server and client. One uses headers(the better method) and the other uses a termination string. Basically, the idea is to turn the message you are sending into bytes, then get the amount of bytes being sent as an integer. Send that number of bytes to the connection you are communicating with followed by a `:` character. The connection receiving data should receive data until it encounters a `:` and then it should stop receiving data(it will receive more shortly!). This will ensure the connection receiving data knows how many bytes it needs to receive next. Then it should start receiving chunks of bytes that add up to the total bytes sent in the previous message. This will allow you to handle progress bars as well.
Yeah, that beard definitely looks like Zoidberg lips.
&gt; how it performs compared to matplotlib? I only made enhancements to the `wx.lib.plot` module, I didn't write the entire thing. That said, in my experience it does seem to be faster than MPL. I haven't done any benchmarks so I can't say by how much. The goal of the `plot` module is to allow for simple plots inside of wx without needing MPL or any other plotting package. It's definitely not as comprehensive as MPL nor is it as pretty. It's also not as fast as PyQtGraph. It does leverage Numpy so it's at least faster than pure-python. You can see a demo by running ``` python -m plot ``` from the `Lib/site-packages/wx/lib/` directory. With the demo you can get a feel for how it looks and how fast (or slow) it is. The demo (`/wx/lib/plot/examples/demo.py`) also gives you some (admittedly poor) examples on how to use it. ---- &gt; would there be any way to get some of those speed improvements into the WxAgg backend of matplotlib? Sadly I can't speak to this - I know very little about the MPL backends.
did you create the animation that starts at 0:30, or did you use a tool that reads in a commit history? If so, what tool is that?
It's [Gource](http://gource.io/)! 
why would we want this? it looks like the way /u/The-Compiler does it opens the page in branch master whereas canonical opens it up in a tree. All-in-all, I'd say this is a useless bot unless there's an actual reason for this?
thanks man. qutebrowser looks pretty cool, I'll check it out
It makes a lot of sense when linking with a line highlighted or something, because that changes a lot. For links to files, it doesn't make any sense IMHO, as - at least in this case - that file isn't going anywhere, and I actually want the link to point to the *newest* version of that file...
You may consider adding support for 2.6 too, since it's on RHEL 6 and CentOS 6 (supported until 2020!) You probably won't need to change any code.
I love qutebrowser! per-domain setting is the main thing keeping me a way from being my main browser, so this is perfect. Seems like the whole thing is getting together really nicely! Been willing to start contributing but time is short, I guess I can at least contribute with euros for the time being. God speed! 
[removed]
How does it differ from an OrderedDict?
A simple solution, especially given that you can already transfer a file, is to use text files that are placed in a specific directory to issue commands. The receiver periodically scans for new files and processes them in order and then moves the file to another directory (or deletes them if you don't care about a paper trail). 
Another option for you to explore is a message broker library. They were purpose-built to do the task you're doing. If you want to implement one of your own, there's a good article on the architecture of [zeromq](http://aosabook.org/en/zeromq.html) here. It explains how it works, and you may find it helps you.
I don't have a direct answer, but I will suggest another way if you are interested. If you know how to use LaTeX, you can make .TeX templates and make your python script change required fields inside .TeX file, then compile the file into .PDF by command line utilities comes with your latex bundle. I used this approach to generate Software Requirement documents from our xml file format.
This is something I've been needing/wanting for myself. This is rather "minimum viable product" that I just whipped up. I'm very open to suggestions to make this a nicer delivery.
Lambda has been the sole thing preventing my group from completing the migration to Python 3 (everything else has made the switch for well over a year). This is really great news!
According to Raymond Hettinger on Twitter, the ordered side effect of 3.5 will be codified in 3.6.
You have trouble finding them? They managed to be the number 1 google hit for anaconda! Yes, even before the wikipedia article about the snake. 
reportlab
Im not too sure how familiar you are with google's search algorithm you are but your past search history has a lot to do with what shows up at the top of the search, and if someone preferred to not have what they search logged and used something like duckduckgo then the Anaconda that you and I are talking about would be very far down a list of search results about the snake. 
In their documentation I'm not seeing a way to use a template PDF, is there a way to do that or would I have to make all the objects myself in the code?
You could use BeamNG.drive for more realistic driving, also it is only 25USD.
Always good stuff from your channel. Thanks a lot for helping me learn
I guess i am swapping to 2.7. Found a tutorial for multiple item tracking hope I can get it to work.
Replying to customer support tickets :/ 
[f-strings](https://www.python.org/dev/peps/pep-0498/)!
Been following since you uploaded. Fun stuff.
Has anyone ever told you that you look like you could play Dave Grohl in a movie about the first Foo Fighters album?
&gt; their behaviors are pretty much the same You shouldn't expect this to be the case.
I am glad that I could help you!
I haven't found good introductions to OpenGL + Python so far. [learnopengl.com](https://learnopengl.com) looks pretty good, but you have to use C++. Also, /r/learnpython is the sub for questions.
What do you guys use it for?
Dawg ima lambda so hard rite now
https://www.continuum.io/downloads
/r/learnpython 
Try /r/learnpython . Include all your code, or enough that we can run and test it, and be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Are you calling it as just Fibonacci(), or [CLASS NAME].Fibonacci()? 
I'm pretty sure PyPy also preserves insertion order. IIRC Python 3.6's dict implementation was either taken from or inspired by PyPy's.
You know there's already a module for that in the standard library: [timeit](https://docs.python.org/3/library/timeit.html)
So happy for this!! Can finally use one version in our hybrid Django / lambda system!
Hope this expedites Google App Engine's python 3.6 support
I love how you couldn't even read the first lines of the README before posting that...
Not meant to be an advertisement. I'm more looking for discerning eyes that could tell me if I'm doing things pretty well with my Flask. I just want somebody to take a look at it, see if they notice any errors, and ideas for improvement.
Not sure what you mean by multi-way decisions. Can you provide an example?
Really interesting, just subscribed to your channel
Stupid question perhaps, but what kind of applications would Lambda be useful for?
Thought this might be interesting. Skip the first minute if you get bored with the demonstration. If you have any questions, ask away, I made this!
It's basically a way to run a script on AWS without the need to have a server to run it on, hence why it's sometimes referred to as "serverless".
One of the best use cases I have seen is event processing. As an example, you could have a thumbnail generating lambda that generates image thumbnails when an image is placed in an s3 bucket. (This was presented at a meetup I was at a while back, it's not my original non-trivial example)
If you use the macros the the online game, sure, but you can do anything you like locally. 
Python is a high level language that resembles natural human language. The term high level defines Python. Helpful article shared &amp; it was a great learning data science. 
http://imgur.com/gallery/0w5UAMX
Where's the source code?
/r/learnpython
My thoughts are that: You sir, are an evil genius! I love this script and will be using it everywhere soon!
Web application refers to a JavaScript heavy web page basically, in my experience. Like, google maps is a web application. A Wikipedia entry is a web page.
Thanks
I have an example: I'm building a web service that takes some json data from a (as yet unbuilt) front end and then uses the configuration/data in the json data to query a database, run some analysis on it and then return the results to the user. I use API Gateway and lambda to receive the json, check all the necessary fields are there (fill them in with defaults if they're not) and check that they're all the right format and data type (dates formatted correctly, etc etc) and then puts that in a queue and start a container (that runs the query and analysis) and returns results to the user) before shutting down. It's great, because it was super straight-forward to set it up, expected usage means it will stay within the free tier (and it only runs when it's called for), didn't have to mess around with frameworks at all etc.
You should make a version for binary logs (a la systemd) and name it after me.
Ugh. That background.
Numba
Friend ! Check out here -&gt; [Python Tutorials](http://gainfromhere.com/python-programming-language/) 
Hello. You coule write a function which will produce a PDF. This function accepts parameters (or a dict if you have many) and parse parameters before making the PDF. Have fun with ReportLab !
You should check out https://github.com/kennethreitz/pipenv
Why not just start with python?
This is about as cool as it gets - definitely subbed! 
Oooooooooooooooooooooooooooooh! Dear god! Finally! 
Many apps and endpoints that don't need (or don't want) a 24/7 server, either because load is too small/infrequent or to big (or peaky). Also zero server maintenance! Fire your linux server guy :)
asyncio io, sane unicodebytes,.. so many things! All the things! Starting with 3.6 is pretty dope, it was taking so long was afraid they would turn up with some outdated 3.4 or 3.5.
Pretty much any notebook will do, I wouldn't bother with a Chromebook for learning to code though, you will find yourself pretty pissed off with the constraints of it after a short while. My recommendation would be a cheap Thinkpad notebook, like the excellent Lenovo X220*, secondhand from eBay. A quick search on eBay shows me a bunch of them for far less than €200 in good nick, although you might have to replace the battery, and its often worthwhile doing a cheap 8gb RAM upgrade (which is super easy on those, they are designed to be "user serviceable"). Optionally chuck Ubuntu or another Linux distribution on it and away you go :) \* the X220 is seemingly absurdly popular amongst hacker/programmer types due to it being super cheap, absurdly durable, having a decent keyboard, and being insanely easy to install Linux on. Almost felt out of place with my not-thinkpad at CCC!
Hi Roy Thank you for your reply. I should specify that I'm looking for more of an all in one setup, and want something that I can use if I'm travelling on the bus, for example. Also, I would prefer to use a keyboard, I've tried to code using a phone but I found it really clunky.
Hi Pacotes Thank you very much for your advice. It is much appreciated =) 
anything that is not 24/7... with EC2, if you use it once, you are still billed for the full hour lambda only charge per 100 milliseconds making this far cheaper alternative 
sure 
Ha! I've been told I look like a lot of people, but that's a new one. I definitely see the resemblence. Apparently I have a very look-alike face.
SQLAlchemy has also ORM support, but you compared SQLAlchemy Core to Django ORM.
Working on cli for [`parsel`](https://github.com/scrapy/parsel) which is selector for `xpath` and `css` selectors. The use case of this tool is to test your selectors, e.g.: parsel &lt;some_url&gt; &gt; //h1/text() [some_values] Related to that also been learning a lot about [`promp_toolkit`](https://github.com/jonathanslenders/python-prompt-toolkit) which is really lovely but I really don't like the default completion and have been working on improving that. 
Why FreeBSD if you don't mind me asking? I've recently switched myself from Ubuntu to arch for my python projects and would never go back and couldn't imagine working with python on even more restricted environments than Ubuntu. 
i am interested. But after registering, cant login....
You can use Zappa, that permits that you migrate django, flask or another wsgi (web application) app, almost cleanly and include aws events in your programs workflow. By now zappa supports only Python 2.7, but implement 3.x support was in discussion and basic implementation months ago. Now, this will go faster.
Oh, yes. My mistake in putting the title. Till now I found SQLAlchemy core better than Django, as there are things which are much easier and intuitive with SQLAlchemy core than with Django. I understand everything which is possible with SQLAlchemy core would still be possible with ORM? And would it be as intuitive? Please correct me where I am wrong.
**+1** for Lenovo ThinkPads.&amp;nbsp; They're solidly built &amp; made to last.&amp;nbsp; Also; once you get used to the TrackPoint, it's way more efficient than switching between keyboard &amp; mouse. &amp;nbsp; Something to keep in mind: if you go for the cheapest option (*no matter the manufacturer*), you'll definitely notice some performance setbacks.&amp;nbsp; For example, I'm currently writing this post from my E545 ThinkPad (*$400-ish, refurbed a few years ago*).&amp;nbsp; It works fine for basic web browsing &amp; simple Python scripts. &amp;nbsp; However, I definitely notice some lag in: * **Chrome** (*page loading time can be up to 10-20 seconds when opening more than a few tabs.&amp;nbsp; lots of lag/stuttering if you try to scroll before the page is fully loaded*) * **Sublime Text** (*takes about 20-30 seconds for all of my plugins to load*) * **Android Studio** (*borderline unusable... 3-5 minutes for the app to load, 5-10 minutes for the first build, 2-3 minutes for any subsequent builds*) * This [**Python Script**](https://www.reddit.com/r/Python/comments/65c3h7/script_concatenate_videos_alter_video_speed/) I posted the other day took about 1 hour to generate 2.5GB of video on my desktop @ 60+ FPS.&amp;nbsp; The same script runs at about 6 FPS on the laptop. So... 10+ hours and/or laptop explodes? &amp;nbsp; None of those lag/initialization issues are present, at all, in my [**Desktop**](https://pcpartpicker.com/user/enteleform/saved/JNLrHx). (*although to be fair - it's decently maxed out given today's available hardware*) &amp;nbsp; If this is going to be your main rig for a while, I suggest getting something with an i7 processor and a max capacity of at least 32-64GB of RAM; even if that means saving up for a bit longer and/or skimping on the RAM initially &amp; then upgrading later.&amp;nbsp; Make the stuff that can't be swapped out easily (*CPU/GPU*) a priority. &amp;nbsp; (*for context: The ThinkPad was my main rig for about 3 years.&amp;nbsp; The considerations I've posted above are in retrospect after upgrading to a much more powerful machine.&amp;nbsp; A budget laptop is definitely a good option when that's what's within your means, but there is a price paid in efficiency/time-spent-waiting.*)
Same here - thanks.
Ah, thanks!
Not sure about the problem, but this one worked for me http://textminingonline.com/training-word2vec-model-on-english-wikipedia-by-gensim
 # check and process input arguments if len(sys.argv) &lt; 3: print(globals()['__doc__'] % locals()) sys.exit(1) inp, outp = sys.argv[1:3] if not os.path.isdir(os.path.dirname(outp)): raise SystemExit("Error: The output directory does not exist. Create the directory and try again.") I believe this is causing the error but i dont really understand what is going on here
/r/learnpython Basically your dictionary ("all_data") has no key called "media". Try print(all_data) before the error occurs to see what your dictionary contains
My current setup is Python 3.5 with Tkinter for GUI apps on Windows. I build using PyInstaller and can deploy as a single .exe for clients to run. None of my users need Python for anything. It isn't on their system. Just on my development machine. They actually run the application from a network drive, where I push new builds into YYYY-MM-DD folders. A startup program looks at a config file and runs the right version. I'm talking to SQL Server, various Network Zebra label printers, a half dozen IP based RFID readers and other pieces. All works great with PyInstaller built .exe
great I'm thinking about setup.py but haven't got a good tutorial to understand that. And I have in mind to attach gifs instead of streams but again cricgif not working for me :(
You're probably expected to give an input file/folder and output file/folder.
Thanks friend
You are right. 
Great job man.
cranking on a theme generator for clients that use our software using jinja2 and csv as a data store (don't ask).
very, very cool idea. thanks for putting this together.
Thanks for this feedback, totally agree with you. Would be amazed if you PR a patch for that.
Work in progress, still need to mage the profile and check out pages.
I think because in as3 at least replace only worked in the first instance. I'm glad replace works well out if the box in python. The broader idea is you can chain string manipulation functions by having join be an array function instead of a string function. Split returns and array and join puts it back together. Maybe a better replace solves that better, but I certainly looked for join as an array function first.
At first I thought "Why would that matter on Windows?" and then I saw `yum`
Author here, thanks for your comment. This will be part of a [longer series covering several other fundamental data structures and where to find them in the Python standard library](https://dbader.org/blog/fundamental-data-structures-in-python#.). I want to grow this into a helpful resource and update all posts in the series based on feedback like yours. I plan to extend the post with more examples, a note on how Python 3.6+ dicts preserve the key order. Performance-wise all implementations should be the same because they use the same underlying C hash table implementation, but it's a valid question and worth addressing with a quick note.
I would never uninstall the system Python (I'm on a mac), but I recently decided to move to Anaconda from Canopy (I got the higher level Canopy through work, but I was having issues). That was a scary time. I made sure to have everything backed up (and important stuff backed up in triplicate), but it was still scary. I was actually presently surprised. The uninstall and reinstall went smoothly and, after `pip`ing a few packages I use often, I was on my way!
Yeah, I've heard a lot of good things about ZFS. well best of luck!
I feel like this would be a bit hard to detect right? Maybe I am wrong but you never altered any game files, you are just sending control signals...
That's good to know. It was just a quick and dirty script that fixed an itch at that point in time. Who knows, I may get around to updating it to use the API. Thanks for the input.
Crazy idea, amazing work. Next up: webcam input and USB output so you can run the script on a laptop and drive any computer driving game without running software on it.
I don't fully understand. So lambda is useful for one-off events? What if you have a long-running stateful server? For example, when the user log-on, they send and receive data for a long period of time.
kindly get a mac book pro
i might try and program a version of this on my own. well done on this 
We use it for event-handling in a variety of situations. One such example would be tracking active user state. We have a Redis ElastiCache that get's updated (keys with an expiry associated with them) via a Lambda function that's triggered by an API Gateway. It's great when you can write a script and know that it will automatically scale through a variety of loads. In a given month, our highest and lowest activity levels could vary by 100x or more.
Yay. Thanks for the input though. 
Don't think bandwidth is priced differently than the rest of the ecosystem. Maybe this [article on pricing](https://www.trek10.com/blog/lambda-cost/) will interest you.
So use a neural network to stop a neural network? 
Yes, that's how Google manages dependencies with Bazel (or Blaze) internally. Pants (and Twitter) follow(s?) the same principles on dependency management. But, for others, copying every dependency into source isn't sensible, I think.
if i read your problem right this seems like a simple solution for line in fhand: if state in line: print line
You should put an SSD in it. I have an X201 which is over 7 years old and it still runs plenty fast. I don't notice much difference between it and my VR ready desktop PC for chrome/pycharm. 
While this is bad advice for OP (a cheap lenovo will work fine) it's great advice for people with more money. They're well built machines and OSX is great for coding (brew and a real terminal). I'm probably going to make the jump for my next laptop. But I may just stick with a lenovo X1 with ubuntu. 
It's more for running a given function any number of times. You don't need to provision a big server if your load is uneven.
Well done! It's good to see people working on their skills by making useful projects. Btw is there a GitHub link? I would love to have a look
Bu we switched to zsh on our prod servers and linked bash dash and sh to zsh :( /s
If you have an AMD card it'll be more difficult. You're looking for something like PyTorch or CUDA (more generally). 
 Python_development &gt;&gt; web_develpment
Weeeeeeeell, it works most of the time, but think about what happens if there is a John Kansas from Ohio, and you try to output all senators from Kansas.
and the blog post: https://blogs.technet.microsoft.com/dataplatforminsider/2017/04/19/python-in-sql-server-2017-enhanced-in-database-machine-learning/
I think you guys should check how /r/cpp does it. Apart from location it is also included if working remotely is available and if there's any kind of visa sponsorship.
awesome
Same error for Owner, and ID too. Something changed with Instagram......
That's aw**e**some!
Maybe tangential but how do people feel about implementing a typical RESTful database API in Lambda &amp; API Gateway? Most of the prototypical examples of Lambda I see are for things like data processing pipelines. I know in theory Lambda should be able to handle just about any kind of request from a browser or mobile app short of a websocket connection, and Amazon does have some sample code and a brief case study on their site. But I'm wondering if it's really ready for this or if people have experiences going near-100% serverless for their apps.
Thanks. I've found very limited resources for this kind of thing. I did find something that someone started converting from some c++ tutorials to python but I'll be sure to check out this other reddit. Thanks for the links. This learnopengl is nice but I have been looking for non c++. Thank you for the effort of trying to help!
That was (mostly) a joke. I am just starting my journey into machine learning, but this did seem like it would be possible to me.
I see only 3 variables? Clue: you have multiple possibilities to deal with user inputs: - use arguments provided when the script is executed like python myscript.py "Tampa" 2 200 In that case, you can use proper library (argparse, optparse and so on) - use input() as you say, you can deal with it with something like if __name__ == "__main__": city = input("Which city ?") days = input("How long will be your trip ?") extra_money = input("How much do you expect to spend as extra?") print(f"Your trip will cost {trip_cost(city, int(days), float(extra_money))}$") You will certainly have to deal with shitty user inputs and use extra line to coerce or validate the inputs. Some library (as click) provide a way to parse, coerce/validate scripts arguments, and possibly ask for user input if the argument is not provided. [See by yourself](http://click.pocoo.org/5/)
The generated cat-monsters are adorable.
I'll try it. Now i got another errors... Yes You're right - there are 3 variables (days and nights are 'sticked' together).
That's the correct one
It says: for AMD64/EM64T/x64, not Itanium processors which ran just fine on my Acer Core i7
AMD64 is used interchangeably with x86_64 in most instances. That's the version you want. 
Python 3.6, Sir.
Installed it, working perfectly, thanks :)
Sorry, here it is: from flask import Flask,request,session,redirect,abort import smtplib,sqlite3 from flask_bcrypt import Bcrypt import stripe from uuid import uuid4 as uuid from subprocess import call from os import chdir, remove stripe.api_key = "" context = ('/home/user-data/ssl/ssl_certificate.pem','/home/user-data/ssl/ssl_private_key.pem') app = Flask(__name__) bcrypt = Bcrypt(app) gph = bcrypt.generate_password_hash cph = bcrypt.check_password_hash emcxn = sqlite3.connect('svalinn.db') emcur = emcxn.cursor() emcur.execute('SELECT * FROM email_credentials') emcreds = emcur.fetchone() sendadd = emcreds[0] sendpass = emcreds[1] with open('secretkey','rb') as f: app.secret_key = f.read() @app.route('/profile', methods=['GET']) def profile(): if 'logged_in' not in session: return redirect('/login') username = session['username'] cxn = sqlite3.connect('svalinn.db') cur = cxn.cursor() cur.execute("SELECT confirmed FROM users WHERE username=?", [username]) if cur.fetchone()[0] == 'False': with open('templates/confirm_needed.html','r') as f: html_file = f.read() cxn.close() return html_file else: cxn.close() return "I'm getting there." @app.route('/confirm', methods=['GET']) def confirm_email(): token = request.args.get('token') cxn = sqlite3.connect('svalinn.db') cur = cxn.cursor() cur.execute('SELECT * FROM confirmations WHERE token=?', [token]) if not cur.fetchone(): cxn.close() with open('templates/bad_confirm.html','r') as f: html_file = f.read() return html_file cur.execute('SELECT * FROM confirmations WHERE token=?', [token]) match = cur.fetchone() username = match[0] cur.execute('UPDATE users SET confirmed="True" WHERE username=?', [username]) cur.execute('DELETE FROM confirmations WHERE token=?', [token]) cxn.commit() cxn.close() return redirect('/profile') @app.route('/') def index(): with open('templates/index.html','r') as f: html_file = f.read() return html_file @app.route('/login',methods=['GET','POST']) def login_page(): if request.method == 'GET': with open('templates/login.html','r') as f: html_file = f.read() return html_file if request.method == 'POST': username = request.form.get('username') password = request.form.get('password') cxn = sqlite3.connect('svalinn.db') cur = cxn.cursor() cur.execute('SELECT * FROM users WHERE username=? COLLATE NOCASE', [username]) if not cur.fetchone(): cxn.close() abort(401) else: cur.execute('SELECT * FROM users WHERE username=? COLLATE NOCASE', [username]) match = cur.fetchone() secret_hash = match[2] if not cph(secret_hash,password): cxn.close() abort(401) else: session['logged_in'] = True session['username'] = match[0] cxn.close() return "Success" with open('templates/login.html','r') as f: html_file=f.read().format(session['error']) cxn.close() return html_file @app.route('/registration',methods=['GET','POST']) def registration(): if request.method == 'GET': with open('templates/registration.html','r') as f: html_file = f.read() return html_file if request.method == 'POST': username = request.form.get('username') if len(username) &lt; 6 or not username.isalnum(): abort(504) cxn = sqlite3.connect('svalinn.db') cur = cxn.cursor() cur.execute('SELECT * FROM users WHERE username=? COLLATE NOCASE',[username]) if cur.fetchone(): cxn.close() abort(501) password = request.form.get('password') confirmpass = request.form.get('confirm-password') if password != confirmpass: cxn.close() abort(503) if len(password) &lt; 8: cxn.close() abort(502) passchecks = [] for i in password: if i.islower(): passchecks.append('lower') if i.isupper(): passchecks.append('upper') if i.isdigit(): passchecks.append('number') if not 'lower' in passchecks or not 'upper' in passchecks or not 'number' in passchecks: cxn.close() abort(502) emailaddress = request.form.get('email') passhash = gph(password, 12) cur.execute("INSERT INTO users VALUES(?,?,?,'False','Not Set')", [username,emailaddress,passhash]) confirmtoken = str(uuid()) cur.execute("INSERT INTO confirmations VALUES(?,?)", [username,confirmtoken]) cxn.commit() smtpserv = smtplib.SMTP('noreallyitis.me', 587) smtpserv.starttls() smtpserv.login(sendadd,sendpass) msgtxt = '''From: Svallin VPN &lt;svallinvpn@noreallyitis.me&gt; To: {0} &lt;{1}&gt; Subject: Confirm Your Email Hey there, {0}! Thanks for signing up for Svallin VPN. In order to make sure I got your contact deets right, you gotta click the link (or copy paste it into a browser, if that's your fancy) at the bottom of this email. Before you skip down there though, you gotta agree to these TERMS OF SERVICE Svallin VPN ("the Service") is being offered to you ("the User") by Donald Brown ("the Operator"). Use of the service constitutes agreement to all terms as presented in this email. Any changes to the terms will come no later than 30 days before the effective date of new agreements. While the service is currently open to the public, it is still in "beta". Service outages may occur throughout the period of use of service. Short outages will not be compensated for and are expected from time to time. Outages lasting longer than 2 hours will result in compensation by extending each user's expiration date by 1 day for every hour that the service was unreachable. The operator accepts no responsibility for any illicit or illegal activities performed by the user. The service shall not be used to facilitate any activity that would be considered illegal computer use or violate any computer laws in the United States, Netherlands, or any future geographic regions in which the service may operate. If the user is reported to have violated any laws while using the service, the user's account will be terminated without notice or refund. Access keys used for accessing the service are for the user's own personal use only. Though the service does not impose a limit on how often an access key can be reused, if the user's assigned access key is found to be shared with any other party, the user's account will be terminated without notice or refund. If the user has any complaints or objections regarding the service, they may be directed to the operator through electronic mail at the address me@noreallyitis.me That's it. I tried to keep it short, sweet, and to the point. If all of the above looks good, you can verify your address at the link below and get started. https://vpn.noreallyitis.me/confirm?token={2}''' msgtxt = msgtxt.format(username,emailaddress,confirmtoken) smtpserv.sendmail(sendadd,emailaddress,msgtxt) smtpserv.quit() cxn.close() return "Registration Succeeded" @app.route('/send_email',methods=['POST']) def send_email(): name = request.form.get('name') email = request.form.get('email') message = request.form.get('message') smtpserv = smtplib.SMTP('noreallyitis.me', 587) smtpserv.starttls() smtpserv.login(sendadd,sendpass) msgtxt = '''From: Svallin VPN &lt;svalinnvpn@noreallyitis.me&gt; To: Donald Brown &lt;me@noreallyitis.me&gt; Reply-To: {0} &lt;{1}&gt; Subject: Svalinn VPN Contact Svalinn VPN: {0} writes: {2}'''.format(name,email,message) smtpserv.sendmail(sendadd,'me@noreallyitis.me',msgtxt) smtpserv.quit() return "True" if __name__ == '__main__': app.run(host='::',port=8380,debug=True,ssl_context=context)
 while True: eat() sleep() code()
Everybody should. It's common knowledge to not mess with the system python.
click might be of interest to you: http://click.pocoo.org/5/ also /r/learnpython
Really awesome to see the integration with Jedi!
r/emboldenthee
Mind=blown
lol this article again. What perfect for one person is terrible for the next.
Nice one
what does `sys.version_info` with the Python 2 kernel says ? IPython 6 on Python 2 should crash (invalid syntax), if it worked (or was installed) then it's a mistake and you might get into trouble. Feel free to open a bug report. 
No Jupyter is the UI and IPython is the Kernel. Jupyter can control IPython, IRuby, IJulia, IHaskell... 
There's no such thing as a wildcard key, you'll have to loop through all the keys.
Since you are running a simple script, I would assume this is entirely a Visual Studio Code question. Stack Overflow is a good place to find answers to these kinds of questions. Here is an answer on Stack Overflow that looks promising: http://stackoverflow.com/questions/29987840/how-to-execute-python-code-from-within-visual-studio-code/42180398#42180398
Thank you, [check it out here](https://github.com/photoshopped/python-autoliker). I have this tweaked specifically for my machine, but I may go back in the future and add other social media and make the script adjust to any computer. You could try it yourself too, just make sure to pip install pyautogui
That was a bit strange, Python 2 kernel was telling me sys.version_info(major=3, minor=6, micro=1, releaselevel='final', serial=0) [imgur](http://imgur.com/03YFd38) it says Python 2 in the top right corner! I reset my Jupyter kernels and now everything is as expected :)
/r/learnpython 
o_O - Do you mind opening an issue on github (jupyter/notebook) or (ipython/ipython) and ping `@carreau` on it ? We can look into it.
Jupyter is the notebook interface. But you can use IPython without all that. It makes an excellent interactive REPL on its own. 
Sorry, I missed that "everything was as expected". The kernel names are independant of their versions and an upgrade (of anaconda?) may have upgraded the kernel without upgrading the kernelspec name. Sorry about that.
This stuff gets cooler by the day.
You could scan through all the drives and look to see if a directory called "usbbackup/" exists in root and make that folder in the root of the USB, im sure there's a better way to do it but....
Yeah gotta get a head of the game.
I don't have any familiarity with spyder, unfortunately. This looks like your issue: http://stackoverflow.com/questions/10729116/adding-a-module-specifically-pymorph-to-spyder-python-ide How are you installing btw? Through pip?
VFX (visual effects &amp; graphics) is still stuck with Python 2 as it's embedded into Maya and other such irreplacable apps. How do we we deal with this issue?
1. Badger the vendors 2. Accept the vendors will never upgrade and you'll be stuck on ipython 5 forever :(
What?
&gt; python.python-debug.startSession' not found Check out the last response on this thread. Generally googling the error works well: https://github.com/DonJayamanne/pythonVSCode/issues/708
What?
Which version of Python? Python 2.x? Python 3.x? IronPython?
As an addendum to the other answers what is now Jupyter started as IPython Notebook.
Disney has been trying to bring some pressure to bear on this, if you're really interested in helping on this DM me and I can get you in contact with folks there that are working on it.
[r/learnpython] (http://www.reddit.com/r/learnpython) is probably the place you are looking for in order to find more focused information and help about getting started with Python. I think the two programs that you are thinking of are the interpreter and the editor (IDLE). In this case yes, IDLE is bundled with the Python installers. You can use IDLE to edit scripts (with basic syntax highlighting, etc) which are then run with the interpreter. IDLE can also provide a graphical interface for running the interpreter in interactive mode (like a command prompt). However, if you don't like IDLE for some reason, there are hundreds of other editors/IDEs that can be used to develop Python code. They can range from big extensive IDEs like PyCharm, (which includes debugging features, auto-completion, intelligent refactoring, etc) to more minimalist graphical editors like Atom (which I quite like for small projects) and on to terminal editors (like Vim). Play around and find one which you like - most of them are far nicer (and more importantly, configurable) than IDLE. 
My experience is that the resources are very minimal. All the tutorials are in c++ and you can translate it to python if you want. Really the ideas are totally translateable. I just discovered winding verticies myself because there's no tools in python except for 2d sprite classes. If you want 3d, maybe blender is helpful? All the opengl tools and tutorials are c and c++. I found jonathan hartley the most helpful explaining basic pyglet rendering. The opengl community in python is really languishing. Lack of community (tools, tutorials, support) is 90% the reason people don't make AAA games in python. Anything you learn, please contribute back. I wrote https://github.com/Permafacture/data-oriented-pyglet if you find that helpful.
oh heh thanks! fixed.
Thanks again, this is great! I'll change my startup program to a batch file and incorporate the .exe build into my release script. This will simplify a lot of things in the long run. Now that wxPython is released for Python 3 I can finally ditch the old ways.
Make them fight among themselves :)
Derek Banas has this series; https://www.youtube.com/playlist?list=PLGLfVvz_LVvSj3Nn_zeqWFnBusqvsjMqF Which I found useful (its in english though)
IRkernel 😇
Do you want to remake undertale?
Also, when you use this syntax `["some key"]["settings"]` you are not really using `json.load()` any more. `json.load()` returns a nested dict representing the parsed JSON, and dicts use the `[]` syntax to access values by keys. So to navigate the value returned by `json.load()`, read up on using dicts. Or at the Python console prompt, just enter `help(dict)` to see what you can do with this structure.
No but maybe like the base levels or like a demo of a demo
It was like a shower thought
But that's what you want to do, right?
If you want to learn super basic game making in Python, I suggest you use Pygame to create [Pickin Sticks](https://www.youtube.com/watch?v=PYrS54WH96Q), which is a super simple game Rachel Morris tends to use to teach basics. If memory serves, her implementation is in C++, but it's a good game to do fairly early in any language.
Nk Edit No
Cool! Don't plan to make it though
Despite this release I feel that Ipython on it's own fell behind quite a bit behind `bpython` and especially `ptpython`. `ptpython` also offers [`ipython` support](https://github.com/jonathanslenders/ptpython#ipython-support) so ipython's magic functions and other bells and whistles are also available there. 
It's a doggy dog world out there.
I guess it will be a long winded process of reading and trying things out then :D - I will play with Python and 3d a little more before I attempt to translate some of the C++ stuff though. Thank you for the input, I really appreciate it. I just love Python and wanted to be able to dabble with some 3d and editing vertecies, nothing special, just for learning purposes. That seems like the next logical step from drawing quads and triangles yet lacking on anything beyond that, so strange.
They remain with the eggs until they hatch, wrapping around them and twitching their muscles in such a way as to raise the ambient temperature around the eggs by several degrees. Once the hatchlings use their egg tooth to cut their way out of their eggs, no further maternal care is given.
Wrong Sub?
are you aware that jupyter’s default console *is* ptpython?
Thanks, I'm going to look into it
This sub is not for python as in animals/snakes. It's for the Python programming language!
This is what happens if people post something in a sub without having a look at it first - it's hilarious :D
a behavior i've seen in some environments (don't remember which) was applications printing something like "Ctrl-C received, shutting down; send again for immediate shutdown", which in my mind translates to the application setting a dedicated signal handler that sets a flag towards the application (or consequently raises a KeyboardInterrupt from the .run_until_complete/.run_forever part), and immediately restores the original interrupt handler (for impatient users; processes managers will send SIGKILL after some timeout anyway). is something like this possible with trio? (i've got to admit i only read about the first 30% of the article and skimmed over the rest).
You read "server" and think Windows? Something is seriously wrong with you...
 a, b, c, d = (_XOR_TABLE[n] for n in mask) is not needed to be computed in each loop, if I don't mistake
The mask3 version could probably enhanced by treating fixed size bulk of data, and cutting special case the end of the data
It's not pointless - most of the knowledge transfers easily, and there are areas where Python 2 is still important. IPython will continue supporting it with 5.x releases. But I would recommend most new programmers start on Python 3.
I haven't tried, but I doubt that would make it much faster. Could be wrong...
forgotten this point, was sure that the mask did not change during a whole stream
If you know it is not the right place why post it? If you need help with the code go to r/learnpython. If you want someone to code it for you go to r/forhire.
What kind of programming are you interested in? I would recommend - [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/) to start - [Fluent Python](http://shop.oreilly.com/product/0636920032519.do) for more in depth knowledge - And the new [Python in a Nutshell](http://shop.oreilly.com/product/0636920012610.do) when it is available
Is trio compatible with libraries such as asyncio or a replacement? Can I use use libraries such as aiohttp? 
They are by different authors but the same publisher. Yes **Automate the Boring Stuff with Python** starts at the beginning. Also FYI the online version has interactive Python prompts starting from Chapter 2. I'm not sure why not Chapter 1. https://automatetheboringstuff.com/chapter2/ 
I working on getting Home Depot survey done use selimum and some way to take photo of them and parse the text out. 
that's the only reason why I use ipython actually
Never heard of you.
there's a lot of research libraries yet to be ported. I'd love to be able to move on but... 
Hopefully this will be used in academia too. The number of times where i edit some scripts with args[2] and that kind of stuff is too da*n high
Interesting.
I thought python was using wheels instead of eggs now ?
[removed]
Fixing and shaping up a small package I wrote for persistent caching of function return values using a decorator. I wrote it for myself, but I like using it to learn and practice proper package development (documentation, continuous integration, testing and coverage, etc.). :) https://githucontinuousb.com/shaypal5/cachier
If you're staying in Windows you can use the Win32 Python bindings, it will probably have the least learning curve for you and its look will be as native as it gets.
the “pt” stands for “prompt toolkit”. so you mean ptpython uses more prompt toolkit features than the newest jupyter-console?
Arch Linux says hi. Comes with 3 by default (Actually, I don't think it comes with *anything* by default, but python3 is called `python`, so anything asking for python will get python3).
You're asking for subjective opinions, which is OK, but it would be easier for you to just form you own. Read and try a chapter of each. whichever works better for you, roll with it. 
There's "Modern Tkinter for Busy Python Developers" by Mark Roseman that's a pretty decent book. I also liked "Tkinter GUI Application Development HOTSHOT" by Bhaskar Chaudhary
To piggyback off OP's question, what would be the difference between using PyQt and PySide for developing a GUI in Qt? Is one more widely supported than the other? More recent? More functional? 
Ah, apologies. Last time I tried ptpython, it was less than Jupyter console is today
PyQt is GPL and PySide is LGPL as far as licensing goes. You need to buy a license for PyQt if you plan to monetize the project and distribute with a license that is not compatible with GPLv3. I think the fee is on the order of $500. PyQt is generally quicker to update and implement new features. Pyside tends to lag behind a little bit. However, both of them work quite well. I can't comment too much on the development team for PySide but PyQt is developed by Riverbank Computing Ltd. They do not provide paid support IIRC but give precedence to support emails from paid licensed customers (at least I think). I haven't kept up with Pyside but if I remember some time back they had made an effort to create a version of their bindings for Qt5. I am not sure the status of that project. So if you want to use Qt5 I would currently recommend PyQt5. I'd be eager to hear more if someone wants to chime in about the current status of using Pyside for Qt5.
The python wiki [has this on GUIs](https://wiki.python.org/moin/GuiProgramming). Note that the page is a little dated. PyQt5 is in active development. Tkinter is the "standard" python GUI. Wxpython has just released a version for python3. I have used wxpython, tkinter and PyQt5. They are all similar in how you use them. If you want a straight desktop GUI I would recommend PyQt5 (or PySide). I have never used Kivy but it's the newest and I would look into it if you need mobile support.
Pretty great book. One thing that truly made me enjoy it more was that they print in colour with syntax highlighting. I have a hard enough time reading code on my screen without syntax highlighting (where at least I can search). b+w text on paper is a great way to get my eyes to glaze over.
Yeah that's what I've noticed with tkinter, I'm torn between pyqt and Kivy. Thank you!
I backup to an external USB drive. The backup script looks for a particular drive name (not sure if that's possible on Windows) and also looks for a 'hidden' file `.diskid` on the external drive. The `.diskid` file contains the string 'BACKUP x.y' where 'x.y' identifies the version of the backup script just in case I need this in the future. You could try something similar.
Pyside still works fine for me.
Sure, all of trio's signal handling is ultimately done by calling `signal.signal` to get notifications, and it's pretty careful to play nice with anyone else calling `signal.signal`. If you want to go directly to that layer, that's fine. So for your example in particular, you could use `trio.catch_signals` to get the initial notification and start the shutdown, and at the same time call `signal.signal(signal.SIGINT, signal.SIG_DFL)` to switch from that signal handler to the operating system's default "destroy this process without mercy". [Edit: added missing underscore]
Yeah, absolutely. Especially when used with an editor with great support for it.
Good to hear a heavyweight like Disney wants to see change. Especially that come 2020 it's going to be a question of paying people to support a python2 legacy fork - so either pay the cost now of updating to Python3 or pay the cost of maintaining a python2 fork forever.
That's the joke I was making, yeah. I guess I should have added the '\s' to make that more clear.
Specifically scientific stuff is normally easy to port since strings are mostly used as identifiers (like dict keys) instead of data to transform, and the brunt of the code is numeric. Only IO heavy code that has to deal with messily encoded data sources (e.g. the web) really suffers from the changes, because they uncover latent bugs that didn't surface when just using bytes strings everywhere
A while back, I contributed to a github repo for a python project that scraped for animated shows. I learned a ton, and IMHO, I improved the functionality quite a bit.
I once executed a script while on Safari with some Afs. We were walking through the tall grass and just as I had compiled everything, a black mamba was sighted on the opposite side of the field we were crossing. I quickly found my USB killer and fucked that bad boy up. True story. 
PDF does as well...
Honestly, these online courseworks never worked for me personally. Reading "Learning Python" in combination with online exercises worked best for me. (Or should say is working the best for me currently)
Probably simpler (and cheaper) to port in a Matlab script. 
Thank you, I see that he has LPTHW for Python 3 coming out soon. 
The things that seem not so great about type hinting (lack of automatic enforcement) are one of the things that make them so powerful, because they can be applied by frameworks in different ways, for example: https://github.com/timothycrosley/hug - which allows using them as an incredibly succinct way to define validation and parameters for Web APIs, Python APIs, and command line tools.
Updated version: https://github.com/Readdeo/PyBannHammer/blob/2bfd17a200cbc678fb45bfdc3bfa18ac53af003d/BannHammer.py
What?
This should be moved to r/learnpython
Nice thanks for the example!
Yeah, there is [code in aiohttp](https://github.com/aio-libs/aiohttp/blob/master/aiohttp/_websocket.pyx) that does something similar, and it is a *lot* faster...
I've done LPTHW3, and honestly I'm not a huge fan. I think the Crash course does a better job explaining concepts without focusing too much on typing and retyping code. 
I made an automated twitter bot that took form submissions from jotfrom and posted them on twitter. I passed it around my school and it caused a school wide panic about who was being talked about on the bot.
Hi! I can't find anything about Ali Linux - do you mean Kali Linux? Kali is based on Debian, and Python 3.5 [appears to be available in its repos](http://pkg.kali.org/pkg/python3-defaults).
This may be a good option. Wmi a good module for this or is this something that can be done with os?
Having spent some time trying to work on Debian packaging, kudos for seeing it through!
&gt; Ali Linux I assume you mean Kali Linux. That's a pen-testing Linux distro, not a general purpose one. It's number 23 on the Distrowatch list. 
thank you, this is bit of opinion is what I was hoping for.
A surprise, to be sure, but a welcome one.
Kali 2 is a pretty much debian with tools preinstalled, that isn't really true anymore. Although I wouldn't recommend it, there are better ones out there. 
Get the Solo Learn app. It has been tremendously helpful for me. I am still a noob, but, I'm a noob with a certificate. 
/
PyQt for standard, WinForms-style apps.&amp;nbsp; Kivy for mobile-style apps. (*Regardless of the actual target platform. Mobile-style UIs work well for certain kinds of desktop software.*) &amp;nbsp; Mentioned some of my favorite Kivy implementations in [**this post**](https://www.reddit.com/r/Python/comments/64dawz/what_library_can_be_used_for_building_android_app/dg1u965/).
I think my proudest moment is probably when working on a third revision of one of my modules, and my tests found a bug in [dateutil](https://github.com/dateutil/dateutil) (one of the most downloaded packages in python) which I [then fixed in dateutil](https://github.com/dateutil/dateutil/issues/346) :) Also proud of the popularity of [whereami](https://github.com/kootenpv/whereami), but I guess mostly because it is using machine learning. Either way, I think it is quite okay code :) Sparse on docs though. Another thing I'm proud of is [loco](https://github.com/kootenpv/loco), mostly because I think it is unique in what it offers: a way to do safest possible sandboxed SSH port forwarding; share a port but do not allow the other person to do anything on your machine. Proud of [access_points](https://github.com/kootenpv/access_points) because it is a super small building block (really following "unix philosophy"). [spacy_api](https://github.com/kootenpv/spacy_api) proud because it is not a standalone, but helps with the existing [spaCy](https://spacy.io) project. They're showcasing it on their website. I'm proud to be adding value in open source. [neural_complete](https://github.com/kootenpv/neural_complete) because it is using interesting technology (angular 2 frontend, neural network with keras in Python), and I think is one of the most appealing small projects I made :) I think I could go on and on, as every single project has something I am proud of. Then again, being proud of the quality of the *whole solution* is usually not the case for me, there's just some things you appreciate in each. Most of all, these projects really helped me grow as a developer, and it's good to know what things you did right in each project, and in what regard a project is lacking. Thanks for taking me down memory lane \^^ 
So idk if the people above me were on the joke, but I was doing stuff like this: http://languagelog.ldc.upenn.edu/nll/?p=3933
Bout to buy a PC just for coding :)
To access OS clipboard use wx.Clipboard class.
Being that auth0 is the domain, looks like an article with a commercial in the middle.
Oh lawd, half that dateutil bug is me. Sorry about that. 
You might want to consider: https://github.com/kootenpv/loco . Its goal is sharing localhost with machine(s) of choice, rather than completely public.
FWIW he did update it to cover Python 3, but it was not very polished on release (still had Python2 only in code snippets, etc), I have not looked at it since.
How about jupyter? http://jupyter.org/
(Dunno but perhaps you could contact the organizers and volunteer to work the show?)
What exactly is "wrong"? Do you get an error? Does it not behave the way you want it to? Also, /r/learnpython.
I know that tangent just came out of nowhere for an article on Pillow.
I did the timedelta half of that add method
I have no problems with removing asyncio, but async/await is wonderful
edited 
This seems very elegant. I'll give it a try. But I was wondering if there was a standalone / light tool. Its not super pleasant to open a browser window on a 800x600 remote desktop. :)
It *is* strongly typed, a boolean is just a subset of integers - both practically and semantically. 
I haven't tried this, but it might be along the lines of what you're looking for? https://qtconsole.readthedocs.io/
They do throw... StopIteration :D
Unfortunately, PyCon does not work that way. All of the organizers (with the exception of two permanent PSF employees), volunteers, speakers, the conference chair, etc. (Even Guido AFAIK) register and pay for their own tickets. That helps hold down the cost for everyone else, and fits in with the ethos of the Python community. I am a (very junior) staff member and paid my own reg fee, hotel, and airfare. But your best bet is still to contact the staff email address and see if there is any kind of wait list this year. pycon-staff@python.org. Also, anyone can go to the Sprints, and there are often off site events not directly run by PyCon. A couple of the west coast user groups hosted a social event last year. Good luck. (And you can always join us in Cleveland next year).
Else does exactly what you expect in try. It's more awkward on loops, though 
I used to think arrow was great... And then I read the open bugs on github and wat. 
Datetime may be ugly and not super full of features, but I'm not aware of it ever doing actually the very wrong thing. 
Well, next time you try filtering a 9GB list and end out with 15GB of memory used maybe you'll find the iterable just fine.
Not more bait-and-switch than a commercial, after an interesting program.
uh duh *facepalms*
Is there really any difference in skill sets between hats? How are the black and grey books different?
That's a good thing! The more people hate working in py2, the more pressure there is to join this decade.
That seems unlikely. Extraordinary claims require proof.
I agree. I'm merely providing my personal approach that I would've taken. I can see how that assertion would be easy to debate.
&gt; Moving 2.7&lt;-&gt;3.0 is relatively easy, 3.0 and 3.1 were not worth touching with a 10 foot pole. They were incompatible messes. Why did they have to go and break `u'this is a unicode string'`? 3.2 was the first barely usable version and really 3.3 was the first usable version.
Trio's an alternative to asyncio, with a different and incompatible API, so any libraries would need to be ported before you could use them. "Well, that sucks", people say. Yeah, I know :-/. "So then why did you write a new library?" I'm hoping to write up a more canonical answer soon, but there's some hints in the [original announcement](https://vorpus.org/blog/announcing-trio/). Or if you just want to know why I think asyncio specifically should be replaced, then [I wrote about that pretty comprehensively last year](https://vorpus.org/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/) (and for whatever it's worth, Guido [has said](https://mail.python.org/pipermail/async-sig/2016-November/000175.html) he'd like to see a new non-asyncio async API be designed and standardized).
Its not about skill but rather intent. Gray Hat = doing illegal things but not malicious. (Think morally gray) Black Hat = doing illegal things maliciously. I think there is also a while hat for the good hacking. 
Also you can install things via apt (Debian) using python3-, so pip would be installed sudo apt install python3-pip
How do you detect the ssh attacks? What about the IPs that attack you, but aren't listed on blacklist.de? 
my beef is mostly with the mixed case: def foo(bar: str, baz: List) -&gt; Union[int, Set]: ... ^ as an example, I think it'd be cleaner and more consistent if builtins like `str` and `int` had representations in the typing library. 
Recently, getting over 150 stars on my [Box](https://github.com/cdgriffith/Box/) project that allows dot notation access for dictionaries. Overall was probably figuring out I wasn't doing something wrong when I discovered a bug in the Python source code for `os.urandom` in Python 3.3 dealing with how it handled file descriptors. Was bummed that someone else found and reported it first, but still got to write a white paper and do report on it for work. 
The books teach different ethics? Never mind, I'll check out the contents on Amazon.
This is a floating point precision error. It's from the hardware, and not Python. Don't test floating point for equality using `==` because of errors like these. Use [`math.isclose()`](https://docs.python.org/3/library/math.html). A better solution If you require precision is to use something like the [decimal library](https://docs.python.org/3/library/decimal.html) or try to work in integers where possible e.g. for money use cents. Read up on [IEEE754](https://en.wikipedia.org/wiki/Floating-point_arithmetic) if you want the detailed explanation of why the precision errors occur.
The first time i noticed the problem was when i logged in to my vps via ssh and i saw 463 failed login since the last login (an hour before). The other ip's blocked by Denyhosts. EDIT: Since Denyhosts running, and bans ip's after 3 failed login, i still get around 20-30 failed login in an hour.
I'm working on an add-on for Blender to create a camera and scene setup that I like to use when displaying low poly 3D models. It's just intended for me and the code is pretty unoptimized at the moment, but I'm happy that scripting in Blender is getting easier.
You're looking for r/learnpython. When you post there, please read the section in the sidebar about formatting code (sorry, it's annoying to do on reddit) and include the error message you get. See you there!
You're looking for r/learnpython.
Thank you :)
It's interesting that if you google some of the language in this post, you find that it is just paraphrased form more popular tutorials: &gt;A crucial class in the Python Imaging Library is the Image class. It is defined in the Image module and provides a PIL image on which manipulation operations can be carried out. **An instance of this class can be created in several ways: by loading images from a file, creating images from scratch or as a result of processing other images.** We'll see all these in use. &gt; &gt;To load an image from a file, we use the open() function in the Image module passing it the path to the image. &gt; &gt;from PIL import Image &gt; &gt;image = Image.open('unsplash_01.jpg') &gt; &gt;**If successful, the above returns an Image object. If there was a problem opening the file, an IOError exception will be raised.** &gt; &gt;After obtaining an Image object, you can now use the methods and attributes defined by the class to process and manipulate it. Let's start by displaying the image. You can do this by calling the show() method on it. This displays the image on an external viewer (usually xv on Unix, and the Paint program on Windows). &gt; &gt;image.show() &gt; &gt;You can get some details about the image using the object's attributes. &gt; &gt; `# The file format of the source file.` &gt; &gt;print(image.format) # Output: JPEG &gt; `# The pixel format used by the image. Typical values are “1”, “L”, “RGB”, or “CMYK.”` &gt; &gt;print(image.mode) # Output: RGB &gt; `# Image size, in pixels. The size is given as a 2-tuple (width, height).` &gt;print(image.size) # Output: (1200, 776) &gt; vs &gt;The most important class in the Python Imaging Library is the Image class, defined in the module with the same name. **You can create instances of this class in several ways; either by loading images from files, processing other images, or creating images from scratch.** &gt; &gt;To load an image from a file, use the open function in the Image module. &gt; &gt; import Image &gt; im = Image.open("lena.ppm") &gt; &gt;**If successful, this function returns an Image object.** You can now use instance attributes to examine the file contents. &gt; print im.format, im.size, im.mode &gt; PPM (512, 512) RGB &gt;... &gt;**If the file cannot be opened, an IOError exception is raised.** http://effbot.org/imagingbook/introduction.htm 
Here's an easier one: &gt;&gt;&gt; 0.2 + 0.2 + 0.2 0.6000000000000001 
Wow. I just ran that command, and there are so so so many entries. Thanks you /u/lasercat_pow and /u/readdeo
You are welcome! Yes, if you use the all.txt, its around 57000 ips. My pc did the job in an hour, but my vps is still working on it after 6 hours... I have no idea why is this much slower.
I use Pycharm Pro and use type hinting somewhat religiously (like a mass on Christmas &amp; Easter person and a few other sundays sprinkled in). It's especially useful whenever interacting with sqlalchemy, as the autofill suggestions from query results are amazingly useful.
You want your project to be installable with pip, even while you're developing it. That's how things will know how to import it. But that doesn't mean you have to release versions and upload it to PyPI and stuff right away -- pip has features for developing locally. It's a bit of a silly hurdle to jump over but pretty soon you'll have a template `setup.py` that you copy around to start new packages, and it won't be hard. When you install your package into your virtualenv with `pip install -e .` or `python setup.py develop` (they do basically the same thing but the first is recommended now), that makes the directory you're working in *be* the installed version of the package. Which is the same way it works in your IDE. https://packaging.python.org/distributing/ is the current packaging guide. You can ignore the stuff about "twine" if you want, I've never heard of anyone using it. There are some tricks I've seen for running code with its dependencies outside a virtualenv, but they're for specialized environments like AWS Lambda. I wouldn't go that way. Just specify your dependencies in your `setup.py`, so you can `pip install -e .` it in an env on another dev box and its dependencies are automatically installed. `__init__.py` is for whatever you should get when you `import project`. It should have `__version__` and the functions that are the main things you're likely to use. Those functions could be imported from other modules that actually define them. Don't make your `__init__.py` too complicated, because it's imported whenever you import anything under it.
I am still pretty new at Python and am quite new at html - could you maybe help with some sample code of what it would generally look like and I can go grab the elements from the html page. Thanks for your help with that. Any thoughts on the other challenges?
Or if your problem is embarrassingly parallel you may not need much communication between processing, in which case multiprocessing works great. 
I don't see what the "or" is here for. Embarrassingly parallel falls under "your computations are fairly independent". And if they are short running, no matter how embarrassingly parallel they are, the overhead of processes isn't worth it. 
It's when I've worked on a module for a long time; having nursed it from its first prototype to a usable library, then slowly shook out most of the bugs and refactored it again and again to make it beautiful. First putting it up on Github, then pypi. Then, at some point, some colleague or student will tell me, "hey, that's a really cool module you wrote". Knowing how much time it took to get there, those are my proudest moments. 
Simplest way would probably be to create a while loop and check if a next link exists after the initial url is requested: from bs4 import BeautifulSoup import requests paginated = True page_url = "URL" while paginated: response = requests.get(page_url) soup = BeautifulSoup(response.text, "html.parser") # Do your data gathering on the contents of the page here # Keep in mind to append, not overwrite or data will be lost # every loop # Grab the linkNavigation element # May or may not exist if there is only one page of results # so we use an if to check that page_nav isn't None before # attempting to set the next page url page_nav = soup.find_all("span", {"class": "linkNavigation"}) if page_nav: page_url = page_nav.find("a", text="next")['href'] else: paginated = False # You will reach this point if there is only one page of results # or there are no more pages left, at this point you would take # your gathered data and make your spreadsheet I would recommend collecting the data and formatting it into a dict for easier appending while iterating over each page and easier access later when creating the spreadsheet. As for issues actually getting all the data reliably from what I see you only need the third child of the table with the id of "result", from there its just a matter of using a find_all to grab ever tr element (which will give you a ResultSet of every row, which acts as a list) then you can iterate over that and do a find_all for the td elements within each giving you all the statistics. From there its a matter of extracting the text from each td which you can do by iterating over the second ResultSet and using .text. It would get hard to keep track of pretty quickly if you don't use something like a dict to organize things. I might have missed something and I wish I could give some good examples for the actual data gathering/processing but its 12:47 PM haha. 
I am. My suggestions would be to always take into consideration good software practices. I have a list of YouTube videos which particularly helped me become a more disciplined programmer. python: http://www.youtube.com/playlist?list=PL9E0FASXyOCYWc_YdFCvFs7AGqw2wVn1s Knowing good software practices and sticking to them is what separates a novice programmer from a professional.
Speeding up numpy code by having all array operations vectorised (i.e. removing for and while loops as far as possible). Always makes me happy every day :).
I think I was mostly concerned about the new behaviour of the division operator since it could produce wrong numerical results that are hard to find. Can't remember if I had to check all of them myself or if the tools gave some warnings.
2 way: 1. #!/usr/bin/env python3 # 1. line in your script 2. python3 myfile.py # run so from command line
&gt; PS: sorry for my broken English. Not an english speaker. I do wish people would stop apologizing for their English, it's difficult enough for us natives :-)
The way it should work is: List in -&gt; List out Iterable in -&gt; Iterable out
Actually, the exact opposite. Did you read it?
I get you, but I thought you were saying it's the opposite of that. I think he meant the same thing. However he's not grammar correctly when TLDR
Did you check already wikipedia (https://en.wikipedia.org/wiki/Linear_programming) ?
Yes, I already checked a lot of stuff, but unfortunately I'm not that firm in Python, pip, libraries, etc. to really understand how it works :/
Pretty good article. Thanks for sharing. Here is my favorite, 3 line super easy way to get concurrency for I/O: from multiprocessing.dummy import Pool as ThreadPool pool = ThreadPool(16) res = pool.map(one_arg_fun, [arg1, arg2, ...])
Well, I support that decision. I don't want to destroy the universe by mistake. 
21.4.2017 I will probably get trolled for this, but getting rid of the space indentation and usr some sort of block start/end. I just do not like spaces being used as blocks.
Have a look at [pendulum](https://pendulum.eustace.io).
Nice, didn't even know about it!
 import string string.join(['1','2','3','4'], ' ') There ya go. :) Edit: there are actually a bunch of other string method in there as standalone functions, too. It's worth checking out when methods feel awkward.
Why a semicolon? That was the old COBOL block end after an if. Perhaps the old C {} or BEGIN / END would be much preferable. Better - make the block definition selectable in the Python options. I have had problems with the space indentation pasting pyhon from another programme. 
In terms of big companies, I know people who have gone to Google and Microsoft Research and done cool stuff. 
+1 for pyenv, especially with pyenv-virtualenv. been using it for all my projects for the last couple of months and now I wonder how I survived without it previously
Recently found this "starter-pack" http://djangostars.com/blog/python-and-django-beginners-pack-books-tutorials-newsletters/
fail2ban is made for that. More than x failed attempts and it gets banned.
 import string string.join(['1','2','3','4'], ' ') causes: AttributeError: module 'string' has no attribute 'join' in Python 3.6 &amp;nbsp; ----- &amp;nbsp; join = str.join join("---", ["1","2","3","4"]) however, works fine, and was promptly added to my collection of terrible global things in `_magic_.py` &amp;nbsp; also included some lazy casting &amp; flipped the arguments: def join(iterable, delimiter): return str.join(delimiter, [str(x) for x in iterable])
I'm most proud of having introduced Python at the academic institution I work at. When I started a few years ago Matlab reigned supreme (with C and C++ mixed in where necessary) and my first "Do X with Python" seminar was met with quite a lot of scepticism (welcome to academia ;)). Today I think Python is about as common as Matlab, and it increases all the time. At least one of our undergraduate courses have been converted to use Python as well.
Im just getting started in Python and I created an acct. just to help me achieve what I wanna do in the lang. Im starting to finish a project about Big Data/Data Analysis/ other stuff for a presentation. Im a beginner so right now Im using Spyder's IDE to compile data from past stock market prices, percentages, etc. to graphs for each company. Can't seem to figure out how to separate stock, stock prices into separate graphs for an individual company... I need a bit of help doing that. If anyone who's free to help a freelance high schooler presenting a project in two months (whenever they can) will be nice. :) Otherwise, Ill keep asking when I can here. Thanks. :)
Probably, you could write everything your self. But why? It will be slower and take a lot of work.
Not having numpy will be a big loss,l in terms of convenience, but yes, it's absolutely possible. I mean, researchers had to computer neural networks for a long time without neural network libraries, although they did all have a numpy-like tool to use. I'd say let yourself use numpy, but even if you don't it's definitely possible. At the end of the day, it's just a bunch of arrays (of arrays... Of arrays... Of arrays), multiplications, and additions. You could also choose to code backprop for yourself (which isn't TOO too tough if you don't try to automate or generalize it, theano style or Tensor flow style) or you could just skip that and resign yourself to wasting a bunch of computations by inefficiently (but effectively! Non backprop will arrive at the same solution as backprop, it just takes longer) calculating gradients. I'd say go for it. It's a great way to learn in depth how neural networks function and some of the hidden (har!) challenges involved. 
anything is possible. but many things are stupid.
Other than data related work, what other business applications would use this? Running applications inside the database seems like a bad idea to me.
Write a Tetris in textmode. :)
Its a python library that I have used in the past and it's very nice! Check an example of [a solution to the knapsack problem](https://www.pastery.net/hbyasp/) i wrote some time ago.
Fast Forward Labs in NYC does some neat stuff. I know they have an internship open this summer. You could apply now and see what you need to improve on or just have a great internship for this summer. https://fast-forward-labs.workable.com/j/0799EF2C19
Is there anything to do with IPython besides the REPL? I've seen examples of people importing IPython, but haven't seen a reason to do it. Also, JupyterQT console is better IMO than the IPython. Code completion and the auto pop-up doc-strings are awesome. Can't wait till JupyterHub gets stable.
Nice! I'll remember to try it next time I have the same problem.
thank you 
Thanks for your help. I just installed pyomo (at least I hope so). Would you be so kind to tell me, what exactly your script does? I cannot really figure it out just from looking at it.
Use a set?
If you like math and puzzles, check out [Project Euler](https://projecteuler.net/). It's a site of math problems that are designed to be solved through programming (you could do them by hand, but you'd hate yourself for it). It won't give you a "look at this thing that I did" at the end (if you get to the end of it. There are 500+ problems), but it'll get you aquainted with a lot of ways to solve a problem.
Yes. Numpy isn't doing anything you couldn't do with lists, loops and/or list comprehensions. It's just going to be harder (much more verbose and hard-to-read syntax) and slower. Numpy does its heavy lifting with highly optimized C code, which is a lot faster than what you'd get using native Python lists and floats. If you're interested in understanding how neural nets *work*, I really recommend using Numpy. The hard part should be understanding the math and operations, not implementing them. That said, if you don't know what a dot product is, then by all means, take some time to write it by hand if that'll help you understand. Then use numpy.
The two programs I've used are Pyomo and PuLP. You will need a dedicated solver in addition to the above. Use glpk, CBC or SCIP. Both Pyomo and PuLP are great. They allow you to model a LP problem formulation. I've used Pyomo extensively. Pyomo's code base is hard to go through though. My impression is that PuLP is a more readable source code base. That said, you may not care about that. In terms of what your program will look like - for Pyomo you'll have to write a file "Model.py" that will resemble closely to your formulation. Use a concrete model to experiment with simple examples. You can then call `pyomo solve Model.py --solver=glpk` from the command line. There are other ways to solve a model - you may want to do the same using an abstract model if your data is coming from another program. Finally you can solve it within Python itself. There are code examples online for everything. 
`frozenset`s are.
If the requirement of the "hash" is simply to differentiate between two lists in both content and ordering, wouldn't a simple loop and concatenation of each item suffice? Naive sure, but suitability depends on what your requirements are. 
You're right - I missed that sentence in your statement. Though I would point out that "long" and "short running" are pretty relative, and a "long running" process that works great for multiprocessing may only be running for 4-8 seconds but you'd like it to run in 1 second.
thanks 
automate the boring stuff with python
Took about 45 minutes to update 67500 banned ips with the pybanhammer script. Worth it. 
I'm going to run them all. All the securities. 
to save you a search, [here](https://github.com/pyenv/pyenv) is the link to the pyenv project. there are installation instructions specific to your linux distribution on the wiki. just a quick aside, working with Python 3.0 may not be recommended, as most modern packages usually only support 3.3 onwards. it's usually safe to work with 3.5.x or 3.6.x to enjoy some of the newer features.
Sounds nice, thanks :)
[kissgrab](https://github.com/wlan222/kisscartoon)
Write a Markov chain generator and then train it with your favourite author.
Yeah I was confused as to why he was using multi*prosessing* for I/O bound tasks so I looked it up, for those that don't know the `multiprocessing.dummy` module is the same interface as the multiprocessing but is a wrapper around the threading module.
did you consider contributing to open source projects? there's a whole github full of them and some even have welcoming communities and guidelines on how to get started.
So, like, Starcraft? If so I imagine the most complex calculation you are doing in the AI is pathfinding (waypoint navigation on the map). I would precompute several routes and bake them into the map, otherwise you will have 60+ units doing pathfinding every frame. Units now just have to navigate a relatively straight route to the nearest precomputed point. Determining overall strategy doesn't need to be run often, and is generally not that complex a calculation. Do we need more resources? Do we need to make a base expansion, etc. That doesn't seem computationally intensive to me. Expect to have to tweak your AI a lot during development. You really want to think about some kind of script specification so that you don't need to recompile or even know Python to fix it.
SimulateMe! gonengazit
More like Civ, but yeah. Pathfinding is one of them. And precalculating is definitely a reasonable solution. But Paradox games are famous for slow AIs due to things like 'should this unit of population be enslaved or not?', 'if I declare war, which alliances will be triggered, and which alliances will have superior forces', and 'who should they propose marriage to?' which often sets of O(n^(2)) or worse checks to predict the effect of the action on the rest of the population. Doing these more serious calculations don't have to happen every tick. But when they do happen, they tend to block if you're single threaded.
give this a try http://www.pythonchallenge.com/
i will give it a try, thanks 
I also wrote up this article on fun free stuff for Python - https://www.blog.pythonlibrary.org/2013/07/11/free-books-and-other-free-resources-about-python/ I am planning on putting together a new article though as there is a lot more new free content available.
Pypy is a good replacement for CPython and does not suffer from thé GIL issue. For concurrency, twisted is great. For we services, celery to have a pool of worker for async task. For pure performance, use go or better, rust.
On a similar note, [Rosalind](http://www.rosalind.info) for bioinformatics challenges. 
I could see this being pretty helpful for me, though I recognize my situation may be fairly particular. I write queries to pull data and drop it into excel where I do additional formatting and manipulations to then distribute out reporting. I'm learning python to automate some of this, but this news sounds like I can maybe cut out some of the intermediate steps. Now, getting IT on board to upgrade from SQL Server 2012 might be the biggest challenge.
Anyway good luck with your game. I hope it all works out for you. I still think the hardest part of game of this nature is tweaking the AI to give a good game experience, and essentially a problem for the content team, not the programmers.
&gt; Thonny comes with Python 3.5 built in &gt; Built-in Python version has been upgraded to 3.6.1 no direct criticism but this stood out immediately. im still looking though, but im about to have to leave, so that's why i haven't said anything more
### [**All Of The Challenges**](https://www.reddit.com/r/Python/comments/5waim7/python_competitiontasksprojects/de8yij3/)
Upvote for visibility. Turn wasted (albeit fun) time into useful productivity for everyone
The moment you're thinking about writing a C extension you should look into [Cython](http://cython.org/). And even if you end up using some other language for those, Python is still a good glue for most cases, and Cython makes wrapping C-libraries much easier.
Could Cython help?
`from multiprocessing.pool import ThreadPool`
As someone who has done this too, you might want to explore running a django or flask app to do the additional back end stuff in a pandas data frame or something and have different options for outputs, like an HTML table or json, or excel file. Bit annoying to set up compared to what you're likely doing already but it's nice having every stage automated.
Are you using IronPython? If not, it's an implementation of Python on the .Net DLR which gives you access to all of the .Net framework. It's pretty awesome since you can just use the Microsoft provided DB drivers and programming objects.
Unfortunately, no. The only data to join on is string based. As an example, one service has the data "World of Warcraft" and the other "World of Warcraft: Legion". I originally thought to join using contains, i.e. if "World of Warcraft: Legion" contained "World of Warcraft", but this won't work because: The first service has "Star Wars Battlefront", "Star Wars Battlefront II" and "Star Wars Battlefront III" and the second service has "Star Wars Battlefront II" and "Star Wars Battlefront III". So it seems like I'm going to have to do some weird multi-join.
Never suggested the contrary
I finished the codecademy.com course on python this week and I now I realize that me a two week noob to python, I will have to adjust to python 3 too and have been learning python2 this whole time. Specially this print stuff now I dont even know how to print again lol but will fix it soon. There is so much stuff online is awesome but I really hate that a lot of content doesn't say what version of python they are for!
&gt;Running applications inside the database seems like a bad idea to me. Then you haven't seen the massive gas factory of a mess that is of TSQL stored procedure in your typical MSSQL enterprise application stack. I've seen systems where over 80% of the application logic (about 500,000 LoC) and code base was all in stored procedures. There are benefits though for some classes of problems when you can run application logic on large datasets without having to stream it in over the network.
Resource wise... you know, like computational cost... or is that not something people try to do anymore? A well parallellized script could easily be ported with matlab, seeing as how matlab has a built-in markov function that is already incredibly optimized. Or you could even use a black box method which has pretty good foundations already, if you're 100% dead set on using markov. https://www.jstor.org/stable/1390766?seq=1#page_scan_tab_contents I just think that, outside of exercises, it's not nearly as efficient to use straight python to do something a mathematics language could handle better. I don't mean to seem like I'm telling you that you're doing it wrong. I'm just providing a different approach you could try. Holy downvotes above!
Why did he hard coded the number of processors? Doesn't Python map one process to one core?
How about if you import Spacy and load the large model? :P Thanks btw, thought this was the case.
I see that the mapped function is implemented in Python and not io bound. Presumably this achieves parallelism despite the GIL, otherwise it would be pointless. Anybody know how it does that?
B 
you can try saltstack. It provide you more flexablity.
No pics, no description of functionality... If as much thought has gone into it's development as has gone into it's announcement, then why would anyone bother?
Yeah a lot of stuff I send out is just an excel sheet saved as a PDF once I've done all the extra calculations and formatting and such. I'm still new to python but I'm hoping to at least automate some of that stuff at some point.
I'll have to look into this, thank you for the suggestion. I've only started learning python in the last month or so, in between other projects, so it's slow-going. But something this flexible might be quite handy.
I write a blog at www.pythonforfinance.net which runs through the creation of backtests for a few different trading strategies... There's a mean reversion strategy, MA crossover and a couple more. Might be helpful to get you started... 
Awesome! Is there is a recommended order to work through these? 
Hey Harrison... I just wanted to mention, I started learning python about a year and a half ago in order to use it for algorithmic trading and finance in general, and one of your videos was the first ever resource I came across and learnt from... And so a year and a half later I have my own blog (www.pythonforfinance.net) which wouldn't exist probably had it not been for those first few taster sessions following your YouTube vids. So a big thanks man... I've thoroughly enjoyed the journey so far... 
I made a couple of scrapers of different sources (from pdfs, to csvs, and some csv-like texts from county-level public data). They are run by a cron, they download, process and save data. They all have similar data from different regions. The thing is, i kind of standarized the methods i use in all of them, and now i'm refactoring them into a class to make it easy to extend the system by just implementing a few functions. All of the extra details, including regenerating the cron, setting the frequency of updates, and other things that are not directly related to scraping o reporting per se, should not be a worry anymore in the future, i hope :)
You'll be there sooner than you think
Oh mate, I feel bad for you. Big hug. 
&gt; I just think that, outside of exercises, it's not nearly as efficient to use straight python to do something a mathematics language could handle better. PyMarkovChain is actually very efficient, and furthermore this is an almost entirely I/O-bound application. Computer time is far, far less valuable than human time, and it will be decades before the cost of electricity wasted by the inefficiency of Python catches up to the cost of purchasing and learning Matlab.
Its not difficuly to see what it's about - http://thonny.org/
Thanks for the info! I was mistaken. 
&gt; Zappa makes it super easy to build and deploy all Python WSGI applications on AWS Lambda + API Gateway. Think of it as "serverless" web hosting for your Python apps. [Zappa](https://github.com/Miserlou/Zappa)
The other night (Wednesday night) I felt motivated to do write some python code. I wanted to try and create a Tic-Tac-Toe game. I had no idea how I would go about it, but I just started to see what I could do. I knew I wanted more than a simple: x|o|x style board. I wanted some ascii X and O. Most of my time was figuring out how to build and update the board. I eventually got a functional two-player game. I had my boy test it out; his first comment "Oh, the computer doesn't play against you". I thought, maybe I should try my hand at some basic Tic-Tac-Toe computer artificial intelligence. After a while, I got some AI up and running, but it was dumb. Basically the AI just chose a random row and column, checked if it was open, and made its play. If was not open, it just created a new random row and column until it found an open spot. When I realized that this was not fun, I decided to make a smart (smarter..) AI that would calculate a basic score for each row, column, and diagonal. The highest score was where the AI would play. The score algorithm looks at every spot (1-9, on the 3x3 matrix: Tic-Tac-Toe board). Depending on whether the spot is open, played by 'X' or played by 'O' determines the score for that spot. Each spot score is used to create a row score, column score, and diagonal score. With the max being where the AI should play. Its not perfect, and the AI know nothing of strategy, but I thought it might be interesting. I had another reason to do this, a friend of mine's son is in college and some of his HW requires Python. I have been helping him (since they are really fundamental type problems). I am no expert by any means, but I know enough to help him with HW. I thought he might like the Tic-Tac-Toe game to see that Python can be fun, and not just making functions like bubble_sort() or some grocery store simulation.
Sounds fun, thanks
I actually started studying bioinformatics, very interesting subject, but sadly not exactly my optimal subject (I was not into chemistry too much). Switched to a somehow similar subject now.
This article is from 2009....and it sounds like the course it is talking about isn't even given any more. Why is it being posted now?
Getting back to the first remark - you should not print to `stdout`, but use the `logging` module instead. That's a good practice, not just a debugging aid. Let's say you run your code on the server and an error occurs when you're not looking - the logs will allow you to see what really happened. At the same time, proper usage of log levels will enable you to control how much stuff gets logged. The verbose `debug` level entries will be suppressed if you switch the log level to `info` or `error`.
Thank you!
If you expect potential users to SEARCH YOUR &amp;*(&amp;^ SITE to figure out what you're trying to advertise, then may I suggest a new career? Perhaps something in the fast food service industry? You have 10 seconds to capture the user's attention. Do you really want to waste those few seconds by sending them to a pointless (To them) blog page?
Since this thread comes quite often, you might want to write a generator of cool ideas to develop as a side project.
"This eliminates barriers of security, compliance, governance, integrity, and a host of similar issues related to moving vast amounts of data around." That's hilarious! Who needs security, compliance and integrity?
oh btw, if you consider an OOP approach ... rethink it. It will absolutely not make things easier for you. :D
&gt; //a[contains(@href,'/installs')]/text() This would return all of the install names. I'm trying to select only the install names that are "locked". If you look at the HTML in Codepen you will see that only the &lt;tr class="install even"&gt; has the below. //div[@class="install-details"]/span/i[contains(@class, 'password-protected')] In the other &lt;tr&gt;'s, this is not present. So I'm just trying to select the middle TR using this criteria
I did just this. My bosses love it - I've been running crazy these past two weeks making all these fancy reports and dashboards and using plotly to graph. Highly recommend.
It is. Both R and Python run inside the database now.
So you are saying that only the tr with class of "install even" have the information you want? If that's the case you can do it like: //tr[contains(@class, 'install even')]/td/a/text() In your codepen example, it doesn't work because you need to add the &lt;table&gt; tags in your HTML if that's not the case and you can't differentiate between the parents you can do something like this in python: rows = xPath("//tr[contains(@class, 'install')]") protected_data = [] for row in rows: if row.xpath("./td/div/div[@class='install-details']/span/i[@class='password-protected']/"): protected_data.append(row.xpath(".//td[@class="install-name"]/a/text()"))
What program would work? Your the creepy maintenance man. 
I don't think you understand. The alternative is to download data into a csv file on your local machine. This is a security/compliance risk. If you keep all the work and data in the dB you don't run that risk. 
If your file is named "shapes.py": import shapes print(dir(shapes)) Will give you a list of the objects in "shapes.py". I don't know what you mean with "calculate the total area". You would need to make instances of those before they have any data associated with them. BTW, your 'getters' (methods that do nothing but return an instance variable) are useless. You can cut those out. If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
You are correct. To add to what you said. Since you are developing the GUI and business logic separately you can offer a GUI-less version of your application. Further broadining the range of people who can adopt and use your application.
Okay just found a better solution: //tr/td[div/span/i[contains(@title, "Password Protected")]]/a/text() works with your codepen example if you fix the table tags This is literally select all &lt;td&gt;'s that have an &lt;i&gt; that has the title we want and from those get me all the &lt;a&gt;'s text
Ok 
couldn’t find the American Dream.” I smiled. “That’s why we rented this car. It was like rolling through midnight on the plane and I could hear myself talking to a Polynesian bar, where my attorney on his belt. “Stand up!” she pleaded. “Please stand up! You’d be a part of us. I wondered if they could buy Peace and Understanding fot three bucks a head full of sounds, all of them has to do it. ‘Why should I call?” “Don’t worry,” I said. “The minute you hear me?” I yelled. “We can’t stop here. This is the kind of shit… hell, I tried to sit down with him. We have a bad jolt. For a moment of nasty silence, then she began screaming: “Don’t give me five bucks. I want to make the bastard away, either. A good Kristofferson tune was croaking out of five or six billyclubs coming down on the turnoff to the World.” First Lennon, now this, I thought. This is a godsend!” I fixed him with my surroundings. Something ugly was about ready to go through there so fast that nobody would believe them anyway. The idea that two heroin pushers in a jail and beat me on the turnoff at the Flamingo… I thought as I pulled over. The radio was screaming: ‘No! No! It’s suicide! Stop the crazy gringo!’ “I woke up about two eights more than I could almost hear myself talking to a white Cadillac and checking into another Vegas hotel, with press credentials to mingle with a thousand pigs. Why not? In every gig like this, you don’t know anything about dope!” My attorsey laughed. “Come on, Doc – let’s smash the bastards… right in the actual flesh – a stainless-steel hunting knife with a knife in your hands. 53 ••• About thirty minutes after our brush with the American Dream. Horatio Alger gone mad on drugs in Las Vegas at once, mumbling, “Cool it, cool it, come on back to the end.” “Indeed,” he said. “It is” I assured him we knew what was inside. No sign of recognition and she wants us to call.” He stared at me. “She’s perfect for this show, and we’re goddamn well going in.” The tux-man began jabbering about “fire regulations”, but my attorney screamed. “Turn on the main ballroom of the Drug Conference. The bulk of the water, the hunting knife in one of us who had “rights to the beach. Get out of bed with what appeared to be that all we found were two dune-buggies full of esoteric lights &amp; dials &amp; meters that I was watching the distant figure of whoever was actually talking up front, on the freeway, gripping my normal daily intake of booze, drugs, sun, no sleep and caught the first gas station is Tropicana. Take a right on Russell, then a known drug authority) what sort of walking around that deserted waterhole by myself for no reason at all… I tell you that was 22 that. I'll probably play around a bit so that the creation of the text is not case sensitive anymore and that punctuation is factored out, too.
heh, clever idea
Disregard - they updated matplot and it can handle pyinstaller now
Just an observation - shouldn't this be the home directory of the user? I think Vim will look for the .vimrc file in your shell's $HOME variable (~ on Unix for the current user)
Sorry. Yes, I meant home 😊 I've been using root and home synonymously lately, thanks for the correction!
[Have an upvote you old friend.](http://thonny.org/img/unclosed.png)
He means you can define data source as SQL query using ODBC and bypass the "Python" step entirely. 
Disclaimer: This is merely a novelty, constructed for nothing more than to possibly make another human being smile. Thanks :) About four months ago my first son (our third child) was born just under 5 months pre-mature. With everything going on I found it _very_ hard to concentrate on much more than just practicing my chops on sites like [checkio](https://checkio.org/) and [projecteuler](https://projecteuler.net/). Of course, there was a lot going on in my day and my "chops" aren't exactly the greatest to begin with, so I found myself spending more time de-bugging (see: `print("variable =", variable)`, or `print(locals())` ) than solving and it was kind of a bummer. Especially after many short stints over a long time on the same problem. I thought, what if I could print all these local variables in one go, not have to pass in `locals()` (to avoid excess typing) and have the whole damn thing pretty-printed in a text bubble with a cat next to it!! So basically it's equivalent to `pprint(locals())` with a slightly therapeutic twist. So I built on a script that I had put together some time ago that attempted to emulate f-strings in py2 by reading back through the stack, and came up with CatsAss! It's pretty sweet, and if you use pycharm then it's just as fast as a builtin if you use the ctrl-space-space auto complete+import feature. Here's a small plug you can use with the [try](https://github.com/timofurrer/try) package: from CatsAss import the_cats_ass def CatsAss(): its = [ "The ", " cats ", " ass.. ", "Seriously." ] print(the_cats_ass()) CatsAss() That will pretty print all the variables in the function for you, no need to pass in `locals()`. Then when you're done, it's easy to remember to delete because it's still just a print(). The past few weeks have been looking way up and I'm proud to say we expect little Dean-Allister to be home _juust_ in time for my birthday and I thought what better way to celebrate then by sharing the love with you guys. It's on PyPi, the code is on GitHub, and the somewhat zany API documentation is on pythonhosted.org. Python is the best community to be a part of and I'm so happy to be able to contribute in these ridiculous ways. Love y'all. Duroktar Github - [release](https://github.com/Duroktar/CatsAss/releases) [source](https://github.com/Duroktar/CatsAss) PyPi - [link](https://pypi.python.org/pypi/CatsAss) pythonhosted.org - [API documentation](http://pythonhosted.org/CatsAss/) note: edited for further clarity
So I went ahead and downloaded it, and ran their test script after configuring the environments. Their example did not work since they used an R assignment operator: exec sp_execute_external_script @language =N'Python', @script=N'OutputDataSet&lt;-InputDataSet', @input_data_1 = N'SELECT 1 as col' This did work: exec sp_execute_external_script @language =N'Python', @script=N'OutputDataSet = InputDataSet', @input_data_1 = N'SELECT 1 as col' It's interesting (and somewhat hopeful) they are using Pandas dataframes to transfer data from Python (as OutputDataSet). This will be fun if we can run sockets in the Python scripts...
Do your own homework. 
/r/learnpython The error you are getting means you are passing in a `list`, which does not have a `split()` method. If you pass in a `string`, you will avoid that error. I am not sure exactly what you are intending to do, but lets look at what your code is doing: &gt;&gt;&gt; url = 'https://www.reddit.com/r/Python' &gt;&gt;&gt; for i in url: ... print(i) h t t p s : / / w w w . r e d d i t . c o m / r / P y t h o n &gt;&gt;&gt; for word in url.split(): ... print(word) https://www.reddit.com/r/Python if you just want to count the `/` and `-` in the string, I would use the `count()` method: def count_levels(url): slash_count = url.count('/') hyphen_count = url.count('-') print(slash_count) print(hyphen_count)
[CVXOPT](http://cvxopt.org/examples/tutorial/lp.html?highlight=linear%20programming) is a convex optimization library you might find interesting. I've linked a linear programming example from their docs.
Ah yes, I see. I do have some worksheets set to pull queries through macros and that's been pretty helpful. But I have some other resources that aren't SQL based and I'm hopeful that Python will integrate those sources into a script as well.
That sounds horrible. Wasn't the whole point of a database to decouple code from data? 
Yeah, dunno why the 8 year old post and not sure about the course but I know MIT CS degree is mostly in Python still today.
You might want to try https://github.com/J535D165/recordlinkage or https://github.com/dedupeio/dedupe - they are for just this purpose. https://github.com/jamesturk/jellyfish is also excellent for calculating how similar two strings are but probably won't work for your example when the strings differ by just a few characters.
I suggest starting out with a nice soft tutorial video: https://www.youtube.com/watch?v=rkx5_MRAV3A Also welcome to python. When I was your age (young) I started out with C++ and it was a big mistake. C++ was too hard. Here's the most basic example of running python on Windows: https://www.youtube.com/watch?v=UPZvzlfsiaY It's 2 minutes long. I suggest that first and then the long video I linked. 
[removed]
Well yeah, using 500 is essentially telling it to repeat the process 500 times which isn't needed. Heck the while loop itself in the original code isn't needed for anything. As for missing team in your code the `.strip` for team is missing `()` so I am assuming the whole thing breaks at that point and jumps right to the exception.
I can highly recommend https://jiffyclub.github.io/snakeviz/ 
Awesome. I will add to the post as an update.
import pdb; pdb.set_trace()
I considered whether to include real debugging tips but decided against it since this package doesn't really do anything besides printing variables. the author might know something about debugging, but they clearly missed `locals()`
Speaker Recognition. Data Analysis to follow grid trends, so when things go wrong, you'll know by patterns being off. Phones are emulated on computers, so any time you want to make calls, they become API calls, meaning you can write python code to do those calls. What specifically do you like, not in telecome, but about electronics &amp; computers
Maybe not what you are looking for but you can use Python with Twilio's API. You can place calls, send texts, answer calls etc. https://www.twilio.com
Yeah, it's not really for any sort of real debugging :D. This started as more of a thought experiment "how to get at the locals() of the calling function without explicitly passing them in". 
Thank you!
Ah okay, I did not realise. Thank you. In this example, why is the count 2 and not 4?
I generally avoid `sudo pip install` in favour of `pip install --user`. This installs globally _for my user_, which avoids system-level conflicts and lets me do everything with my regular user. I just need to add the right directory to my `$PATH` (in my case it's `~/.local/bin/`) and I'm good to go.
Hey, I just watched one of the Clean Coding videos that I mentioned, and the topic was refactoring, so I decided to refactor your code as an exercise based on the Clean Coding principals (*to the best of my ability, at least*). &amp;nbsp; Here's the refactored code: # [@Gist](https://gist.github.com/Enteleform/ad3bd4408509cf64d639b48ada76e7cb) &amp;nbsp; **Changes:** * consolidated the script's core, high-level logic to `main()`; extracting functions for each individual stage of processing to improve modularity and ease of change * implemented `.yaml` settings instead of the `.txt` settings which had to be manually parsed &amp; manipulated * replaced all string-based argument/path validation with appropriate `os` implementations (*adds benefits of system-based validation &amp; error checking*) * removed the global `try/except` block and implemented error checking for [valid files, existing files, invalid filetypes, invalid files] * also prints a [**Status Report**](http://i.imgur.com/jhAbjvT.png) based on the error checking
No, so my rooommate could :D
[removed]
Oh now you're on programming subreddits? I see how it is
Oh okay. That's good to know.
I couldn't find anything about parsec but I understand that [pyparsing](http://pyparsing.wikispaces.com/) is similar so maybe give it a try. Failing that please see the list of [Python Parsing Tools](https://github.com/webmaven/python-parsing-tools).
I'm using OpenCV to make my own facial recognition / emotion detection software for a science fair! 
PyFilesystem developer here, if you want to AMA.
I've heard good things about [lark](https://github.com/erezsh/lark).
Scratch pad code: import sys sumlist = [] def sum(n): if n == 1: sumlist.append(n) return n else: step = n+sum(n-1) sumlist.append(step) return step sum(int(sys.argv[1])) print(sumlist)
Yep (https://pyfilesystem2.readthedocs.io/en/latest/guide.html#moving-and-copying).
Your solution will only work for the first function call since it relies on global variables. Something like this would be a more self-contained solution: def cumulative_sum(n): if n == 1: return [1] prev = cumulative_sum(n-1) prev.append(n + prev[-1]) return prev 
Ok, I removed the part about creating the folder.
Here. def sumdigits(x,li=[]): if x&gt;1: li=sumdigits(x-1,li) # Get the new item value by # adding the current value of x to the last item from # the end of the list - if there is one yet. li.append(x+(li[len(li)-1] if len(li)&gt;0 else 0)) return li print(sumdigits(5)) Using a keyword and default value is a useful capability that Python provides. Or it can be done by making the list of integers into a global - which works differently in Python 2 and Python 3. *Pynotes*: Anman notes that the last item in a list li[len(li)-1] can be retrieved as simply li[-1]. This probably would be a good topic for /r/learnpython 
I think I have the shortest one so far def sumlist(n): if n == 1: return [1] prev = sumlist(n-1) return prev + [n + prev[-1]] print(sumlist(5)) #[1, 3, 6, 10, 15]
A related point, but the Python ecosystem is very under-funded. So many huge corporations depend on Python but where is the money? How many core devs are paid to work full time on Python? Pypi didn't even have a real CDN until it got attacked by hackers. Now it has a CDN as a result of a donation, but it's a lower tier that doesn't support download metrics so you can't see how many DLs a package has anymore. This is key infrastructure for a top 5 programming language.
Does fs work within a virtual environment? I keep getting type errors claiming that the path is a byte when I know that I am handing the OSFS a string. 
What?
Sorry, what does Bonobo do again? The examples all just *yield 1* or something. Why do I need a library for that?
That's the next thing on my list. I don't work full time in this, so I'd guess 2 months or so.
Yea i switched to pyparsing due to lack of documentation for parsec.
What does this do that toolz.pipe doesn't?
The python-future documentation has a really good overview about writing 2- and 3-compatible code and where the versions differ: http://python-future.org/compatible_idioms.html The [future](http://python-future.org/overview.html) library itself is also very helpful for writing code that runs on Python 2 and Python 3 without changes.
While in this specific case OP is probably better off at note using vim, since he appears to have enough trouble using a regular keyboard, generally I think that using vim while you're still learning the basics is a good thing. Once you get used to programming with standard keyboards (key maps? Idk what the right term is) you won't want to switch to vim. At least that's been my observation/experience. Although now that I'm thinking about it I was using IDEAvim + IntelliJ. So yeah I guess you're right. Using cmd line vim from the get go is probably too much to learn at once. 
It's a solution to the [knapsack problem](https://en.wikipedia.org/wiki/Knapsack_problem), which is an elementary LP problem in combinatorial optimization. The above program formulates the problem, passes in some data in AMPL format (knapsack.dat) and then calls the [gplk](https://www.gnu.org/software/glpk/) solver to solve it. Check the equations in the wikipedia entry to see how they correspond to the code in my reply above.
To understand recursion, you must first understand recursion.
And thats's a picture of a gorilla. Shows poor attention to detail.
This sounds perfect for something I had in mind for uploading packages! Cheers Will
This seems like a less powerful version of [dask](https://dask.readthedocs.io/en/latest/)...
As others have said, it isn't too difficult to write scripts which run under both Python 2 and Python 3. For converting Bash scripts in particular it might also be worth learning a package such as [Plumbum](https://plumbum.readthedocs.io/en/latest/) which makes it easy to do system calls, piping, etc. It doesn't support 2.4, though. 
Yeah... [skim their source code](https://github.com/python-bonobo/bonobo/tree/0.2/bonobo). If dask is a sports car, this library (in its current state) is a soap box derby car.
Does this integrate nicely with pathlib? If so, how do you handle paths for things like zip files (a new PurePath child maybe?)?
[Wrong.](https://youtu.be/--szrOHtR6U) Pwned by Veggietales
Thanks! It's good to hear there are others out there. I'll keep that in mind.
 if sorted(lst1) == sorted(lst2) /r/learnpython in the future please
If you're using non atomic operations, then lock it while you need it. But you don't need to lock a dictionary to update a key or a file handle while reading a line because the GIL handles that for you. I think that's what they mean by fine grained locks. Edit: I don't actually know what operations are atomic or not myself. Not knowing means either find out or just be safe. So you're probably right.
I think I prefer cffi to cython. Divining how to make all the yellow go away eludes me. Just writting C is easier in my opinion. And numba is pretty awesome too. Id use cython not if I want to release the Gil but if I wanted to weave python dictionary access into C code.
Or concurrent futures.
That can't be called multiple times. That keyword default is persistent, so if you mutate it it will change the result when you call it later.
Like mentioned previously, just think out loud, and if you don't know something and you're stumped - just tell whoever is interviewing you that you don't know but you assume this and that based on what you know. In most cases if whoever is interviewing you is looking for someone for long term employment, then it's much more important to find someone that can be worked with and who is willing to learn. 
That's exciting! I love it when enterprise systems adapt to better technology. 
Beware of the many traps of treating S3 as a filesystem. For example there are major differences in how the regions treat eventual consistency, directories don't exist, lifecycle rules can mean objects are unavailable, Glacier-backed objects can take hours to retrieve, and some operations can be expensive in real money if not batched or naively implemented. Thread here. https://www.reddit.com/r/aws/comments/2pkv2l/s3_misconceptions/
After recently learning Python two weeks ago, I decided to combine my newly found coding skills with my love of chess. The problem I chose to tackle was the knights tour - something I saw a post about on r/chess ! In a nutshell, the problem involves finding a path for the knight such that it covers every square of the chessboard in a minimum amount of moves (64). The project took me about 4-5 hours to write and I would really appreciate some feedback on the code, maybe some tips on how to better display the chess board. Anyway, check it out: https://github.com/TripleExclam/Knights-Tour/blob/master/Knight_aTour.py
Completely agree. I need to work on better examples. I copypaste my answer on HN about this: Bonobo runs each functions in the pipeline in parallel and make the fifo queues plumbing and thread pool management completely transparent. The TLDR would then be "Write some generators or functions, link them in a graph, and call them in order on each line of data as soon as the previous transformation node output is ready.". For example if you have a database cursor that yields each line of a query as its output, it starts to run the next step(s) in the graph as soon as the first result is ready (yet not stop yielding from database until the graph is done for the current row). I did not find it easy to do with the libraries I tried. The docs clearly lacks completion to say the least, and would need an example with a big dataset, one with long individual operations and one with a non linear graph, so it's more obvious that, of course, it's not made to process strings to uppercase twice in a row. 
Great, feel free to send me a message if you have any questions.
I use it, not to say small (because a transformation could be not so small, or even very large even if you usually want to avoid that), but to denote it's not splittable at usage time. What I try to imply is that you can trust that if you have [i1, i2, ... in] inputs, your "atomic transformation" will be called on each input in sequence (few exceptions to that, including KeyboardInterrupt a.k.a Ctrl-C, and probably some control flow tools in the future). With also means you can easily write a test on the "atomic operation" that will be run on each input. You're right that it may be confusing, I'd be glad to change it if you have a better term describing the idea? 
It's just an introduction to CEF Python's off-screen rendering features, a mini tutorial. Maybe I wasn't clear about it, edited post.
You can use for example the "pipe" function from the toolz package to chain functions. But it's a bit different. In bonobo, data is streamed. Functions in the graph runs in parallel (you can disable that, but that would not be very useful), and there are i/o queue buffers that transport data rows between the nodes. Think of unix processes connected by pipes (ok this is only a list here, but it's for the sake of the example). All processes have their own lifecycle, and can read from stdin and/or write to stdout. While a process work, others continue to work too. Here the default strategy (and only reasonable strategy in v.0.2) is based on threads, but the plan is to have more strategies (subprocesses, workers ...). I need to work on how to explain all this the simplest way possible. And of course, there can be branches in a transformation graph.
If I needed that for parallelism I'd write map_parallel using multiprocessing, then feed that a pipe function, right? Not sure why you need a new module altogether for that. 
There is a book that covers some basics of Linux system administration http://www.goodreads.com/book/show/4050126-python-for-unix-and-linux-system-administration You can read the comments there to see if it fits your needs.
Just curious, how does it compare to lxml? Edit: Downvoted for asking a honest question, I see.
They claim the use case is organisations with large amounts of secure data. Doing the calculation in the database means not having to download the data to the local machine, with all the security and regulatory compliance that entails.
Having worked for a few firms where this was exactly the case, it is a good thing to have around. 
My colleagues are using Python to optimise network configuration. Eg Fenton M., Lynch D., Kucera S., Claussen H., O'Neill M. 2017. Multilayer Optimization of Heterogeneous Networks Using Grammatical Genetic Programming. IEEE Transactions on Cybernetics. http://ieeexplore.ieee.org/abstract/document/7893786/
Tkinter (with Tk 8.5+) is not what it used to be. Grids and auto resizing are a breeze. ttk widgets look nice.
Thanks, I got something working with Flask. Now busy with sql database. This might be a bit overkill but nice to learn about sql.
Personally found sqlite to be among the least painful ways to implement persistence in many scenarios. 
Noted.
Only one of the examples even has an import bonobo but it doesn't use it. 
1. This belongs in /r/learnpython not here. 2. Format you code so that it's readable; see the "formatting code" link or the sidebar. 3. Don't use file sharing sites to post code. Use pastebin or gist, or better, just point to the actual repository. It looks like [this is what you're trying to use](https://github.com/nabla-c0d3/iphone-dataprotection). 4. You're missing the [`construct` module](https://pypi.python.org/pypi/construct) which is [listed as a dependency in the README file](https://github.com/nabla-c0d3/iphone-dataprotection/blob/master/README.txt), among others. 
In the readme file there is this section, you need to follow this command to install all dependencies including CONSTRUCT &gt;Install dependencies: &gt; sudo easy_install M2crypto **construct** progressbar setuptools pyasn1 protobuf
Will do!
got his error Temporary failure in name resolution
Some exciting news! 
Thanks, I'll try to find a better way to describe it. One first step is of course to describe it, then I'll see if I can find a better term.
Thanks for the info! Imho it would be useful to mention this in some way in the documentation; maybe even at the starting page. I do find this library interesting, but I think it's currently not clear from the website what it does exactly, and a comment similar to the one you just provided would get a potential user a better feeling of what this library can do for him or her. &gt; In bonobo, data is streamed. Functions in the graph runs in parallel Regarding the comment above, say I have a graph as given as an example somewhere in the documentation: &gt; iter(['foo', 'bar', 'baz']) -&gt; str.upper -&gt; print If my machine has &gt;= 3 CPUs, it would spawn three parallel processes to run "upper" on each of the three items (from iter) in parallel? And are the results immediately passed to "print" so that the pipeline (may) run asynchronously? I.e., is the output always Foo, Bar, Baz, or could it be Bar, Baz, Foo (for the sake of the example that foo.upper is computationally much more expensive than bar.upper or baz.upper) 
that's very nice ! since you are in the field , i want to know some tasks in telecommunication that could be done easily in python rather than using matlab ! in other words, things i can't do using matlab but i can do with python ! 
python is very helpful tool when it comes to API's , even in SDN the most powerful script language in this field is python! i like digital electronics ,VHDL ,since i'm telecommunication student i like the things which are related to communications . 
&gt; Heterogeneous Networks what is your college name ? actually , i'm thinking about taking hetnet project for my master degree , problem that the information about it in the internet are not available everywhere , i need some books about hetnet. 
What about Xvfb? https://en.wikipedia.org/wiki/Xvfb
Python what?
my input is:stringÇid decimalÇscore ****by using below code I separated all fields and I got output is datatypes with column names. and I want exactly id string, score decimal. But am getting string id decimal sore. please help me how to achieve an above-mentioned format. import codecs import re import sys infile = r"in_file.txt" outfile = "desired_file.txt" delete_list ["NUMERIC","CHAR","CHARde",".","0","2","1","6","8","4","5","40","7","3","/*","NO T NULL*/",chr(34),chr(44),chr(40),chr(41),chr(195),chr(59)] fin = open(infile) fout = open(outfile, "w+") for line in fin: for word in delete_list: line = line.replace(word, "") fout.write(line)
You're trying to split the string `"|"` by using `t` as a delimiter. I'm pretty sure you want the opposite. Also, /r/learnpython
So in other words, just a brain fart on my part...OK, thanks.
Security isn't necessarily worse if the interpreter is embedded into the database. Certainly you open up the possibly of 'escaping' from the interpreter, but if that interpreter analysing your data isn't in the database, it would still need permission to access it, so they're still going to be able to get the data. Getting the machine instead of the data might also be harder for an embedded interpreter that's sandboxed by the database. Also as I said elsewhere, since you are using python, and not SQL, to process the data, you need to download the data first, which means additional security for the data in a second location. Having the interpreter in the database removes that requirement. Think of the organisations where you can't take a laptop out of a building before it's been checked by IT, to make sure you're not stealing their data (or breaking the law that requires them to have safeguards in present for the data, which you don't have at home, in case you accidentally forget to erase). That problem doesn't exist if you're running approved queries on an embedded interpreter.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Ah okay. Thanks for the link and sorry for putting it in this sub!
No sweat at all - there's also a discord (listed in the sidebar I believe) that's great for more immediate answers to things like this. 
Unless you are doing this for educational reasons, just create a cron task. 45 05 * * 1-5 /path_to_script will wake you on weekdays only. When you need to change it connect via ssh and edit your crontab.
Read the Wikipedia article on monkeys. That group includes Catarrhines, which in turn includes apes. Schools still teach obsolete science :(
Sqlite was made for the case here, where you don't want to write your own file format, but also don't want to use a database server (because it is overkill) - and it is included in python.
Any plans for adding some platform agnostic interface to inotify/FindFirstChangeNotification? There are packages for both windows and linux right now, but no package which covers both.
yeah, that would be it. Thanks.
It's monospace by default for me, so no idea.
That's even better! I shall definitely check those out.
a single script that does all of this? &gt; - checking to see if a service is running and reporting the status - what ports a service is running on - lists traffic to the server - runs scans for large files - creates files and inputs information into them - whitelist or blocking IP addresses - creates FTP, SSH, and email users - checks memory and CPU usage - displays software versions - parses log and other file information. abort now, and instead write separate scripts that are each dedicated to a single task, no matter what programming language you decide to use.
From your description, I would say you are a beginning developer. As long as you make sure you are not applying to things way over your head, you'll be fine. If it won't work out, just figure out why it didn't work out and learn from it.
Not to mention that you can decide which programming language you want to use for each item. For example, you can parse the log files with python, while listing the running processes is done in bash.
You need to bring up your mic a lot if you're going to use a music bed.
And I thought Amavis, at about 7k lines of perl was bad. A bash script that long is probably rather a mess. Doing a lot of those things you mention in Python would probably be a lot easier (and thus less lines of code), but you should modularise it. Few programs need to be that long, especially system automation scripts. It's incredibly inefficient for the interpreter to have to load and parse all that code, and probably not even use much of it on any given run...
Thanks for your response. I appreciate it. I'm trying to learn more in this space and your shared experience is helpful. 
https://leanpub.com/python_101 ([Buy it direct from Michael](https://www.blog.pythonlibrary.org) for cheaper if you don't need a platform like leanpub) The book I'm using to start my journey. I look forward to purchasing his 201 book after I'm done. I'm probably gonna buy his wxPython cookbook too, since apparently it's compatible with Pheonix. I'm half way through Python 101 and his writing style is really working for me. I've read material in the past that had (what I assume was) great code, but I've had a hard time understanding the written material or other times it was lacking. Michael does a great job in this area. Between that, websites like http://pybit.es, and [Pycon lectures](https://www.youtube.com/results?search_query=Pycon) you will be set to in any direction you want, whether its web development, application development, or data science.
postgresql had this for more than a decade ... 7.0-7.4 https://www.postgresql.org/docs/current/static/release-7-3.html
Settings &gt; Editor &gt; Colors &amp; Fonts &gt; Font
Imposter syndrome is real, but so is being genuinely unqualified (or simply uncompetitive) for a particular role. You'll never know which is which until after the interview, so don't sweat it. If you can possibly avoid it, don't hang too much hope on these interviews, that way you can go in without being nervous about a long-shot. Absolute worst-case scenario you get a good look at where you're short.
Is your data simple enough that you can just split on the comma?
Are Ansible modules like writing a shell script. The different is that I use Ansible to run the script in one or more servers at the same time? 
It might be helpful if you posted a sample of the data you're trying to parse.
Hiring Startup based in Fukuoka, Japan. Pretty flexible in terms of contract type, from internships to full time. If you're looking to work in a startup in one of the most liveable city in the world, DM me. 
Totally being a shithead here but `:set heretic` would be the vim way and then you could close it off with `:set heretic!`. 
Knowing libraries aren't that helpful for entering industry. More important things that arent emphasized in academia: * source control * standards and best practices * style guides * design patterns * databases * how to effectively use an IDE * clean code * auxiliary tool chains
Why PyMySQL instead of sql alchemy? Ease of use? Or just a personal preference?
python3 &gt;&gt;&gt; len(filter(lambda x: x%2==0, range(10))) Traceback (most recent call last): File "python", line 1, in &lt;module&gt; TypeError: object of type 'filter' has no len() bummer. You have to pass filter() to list() first so you get something len()-able but producing a potentially huge list only to get its len() is not pretty either.
&gt; csvfile can be any object which supports the iterator protocol and returns a string each time its __next__() method is called — file objects and list objects are both suitable. according to the documentation so yes, you can give it a list of lines to parse.
Does it supports path-like objects? https://docs.python.org/3/glossary.html#term-path-like-object
Don't have experience with alchemy, but why not sqlite3? 
Thanks for pointing this out! Where would be the best place to mention knowledge and preferred usage of such tools? In the motivation letter it might even stand out up front while in the auxiliary section of the C.V. it might get overlooked...?
Sqlalchemy is just a toolkit and object relational mapper, it works with sqlite3, mysql, pgsql, etc. 
I completely agree! Have been working in the industry for a little over 3 years (not long but I've arrived) and I've never used 3 out of those 5.
Sort of goes along with using an ide, but I think effectively using a debugger is important enough to add to the list. 
Testing! Unit testing and integration tests. 
Not at the moment. It would have to be a namespace package, because I'm trying to keep the core relatively dependancy light. To be honest, its a tricky thing to do right, because it is very platform specific functionality. That monitoring functionality wouldn't be practical on most filesystems; ftp, memory etc. Have you used `watchdog`? As far is I know that supports Windows and Linux...
input is :string prdpor string medclc string cbwind decimal crbeff output is :prdpor string ,medclc string ,cbwind string ,crbeff decimal i tried with line.append(line.split()) and after i tried to assign array but its failing. Help me how to achieve. 
Since [PEP-342](https://www.python.org/dev/peps/pep-0342/), generators are not *just* iterators, they're coroutines so you can feed data (and errors) back into the generator as well as shut them down via the `.close()` method. I don't know that that's what the interviewer was thinking about though.
You forgot tests
If you're looking to go from academia to industry, libraries are the least of your concerns. Far more important is code maintainability, source control, ability to work with others on the same codebase, etc. Also (and somewhat industry dependent) you're likely to encounter a real database rather than MySQL. Either Oracle or PostgreSQL.
&gt; Don't quote me on that, but I think generators are a subclass of generators based on the convenient `yield` expressions to make the construction of an iterator more convenient. &gt; For instance, you could implement an iterator by defining a class that has a `__next__`/`next` metnod and an `__iter__` method. However, using the `yield` expression (e.g., instead of a functions `return`) you get that "for free." &gt; &gt; The interviewer said that there are other implications and differences. &gt; Maybe there is a chance that the interviewer misspoke and was referring to iterables, not iterators? ~ */u/sbt_*
Veeerrry hard to learn all that first stuff though on your own. That comes from experience. At least, that's how it went for me. Having a toolbox was way more important.
IMO, the obvious thing to say about this (Iterators vs Generators) is that _every_ generator is an _iterator_, but not vice versa. Going on the same path, an iterator is an _Iterable_ (which requires an `__iter__` method that returns an iterator).
Yeah, they are similar to shell scripts. The syntax is YAML with Jinja2 templates and IMO way more maintainable than a set of shell scripts even if you only have 1 host in your inventory. Ansible works by sending the remote host a set of python files and then executes the .py files. There are modules for just about anything and if there isn't you can send raw shell commands. You can even copy over templated shell scripts.
Not a resource but a good way to get used to source control management, standards/best practices, clean code, etc. is to follow/contribute some open source projects on github. You'll start to see how a project is managed by the contributors and if you contribute, you'll experience working together with a team with less risk than as an employee. 
I plan to put my current project on Github soon and ask for collaborators so this is encouraging! 
I think if you read some quality library source code and write quite a few toy projects (or write your own libraries you use) you will quickly learn about how important maintainability is.
Maybe you should change your focus then. Especially because you titled the Reddit post *Looking to transition from* **academia** *to industry?* you should probably ask your college/university why they don't teach this stuff there. When I went to college here in Germany there was quite a bit left to wish for from the list of skills mentioned by /u/snaftyroot and /u/iluvatar but at least I had a course about databases in general (primarily about the relational model). IMO the education system is way too far behind what's actually happening in the real world. They should actually be ahead. Not only in research but also in teaching real world operational things.
Also, everything in Python is an object, generators included. Generators have methods such as `.send()`, `.throw()`, and `.close()` as well as all the usual dunder-methods. 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [akittas/presentations/.../**func_py.ipynb** (master → d500b44)](https://github.com/akittas/presentations/blob/d500b44bf0cb931c07f3cd7b7eb910ae656c35e7/pythess/func_py/func_py.ipynb) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dgogv8n.)^.
I worked for an enterprise that was an Oracle shop and management made the decision to explicitly ban PL/SQL from development (apart from a few rare exceptional circumstances) because it just made maintenance a nightmare.
https://www.python.org/downloads/release/python-361/
It's one click away from that page. Click on the version you want (e.g. "Python 3.6.1") and you're taken to a list of all the downloads for that version. 
Have you looked at this? http://stackoverflow.com/questions/2776829/difference-between-pythons-generators-and-iterators
While SQLAlchemy _includes_ an ORM, it, itself, is not one. SQLAlchemy's core (upon which the ORM is built) provides an expressive way to build queries that resemble the underlying SQL but with just enough abstraction to make them portable. 
Hey, thanks and sorry for posting it to the wrong sub
&gt; how to effectively use an IDE I would put effective use of Unix tools here as well. Can make you 2x more productive when you know how to effectively use the Terminal. 
Take your state (user position, current map, enemies etc) and store it to a file. You don't need pickle, any file format will do. If you don't want users messing about with the savefile, you'll need a binary format.
&gt; IMO the education system is way too far behind what's actually happening in the real world. They should actually be ahead. Not only in research but also in teaching real world operational things. Not necessarily, because that will depend a lot on the aims of your education. If you education is "vocational" (programmer, database administrator, etc) then sure, it should teach what you need to do that job. Since you mention the word university I am however going to assume that you are talking about an academic program in computer science or engineering. Here you are supposed to learn more general (broader) theory relating to your field. Operational things are therefore slightly out of scope. But life and education are obviously not just black and white, so I think you should expect to get *some* industrial training even in a more theoretical education. And vice versa.
...ok?
It's not completely useless. It's for when your loop is searching for something - the `else` handles the "not found" case. You can do that with a flag of course but `else` is more compact. I agree that it's unintuitive and a bit confusing at first, but it's absolutely not completely useless.
New to Python and this reddit. Working on the basics right now through codcademy. 
* https://dmarx.github.io/reddit-map/ * http://dmarx.github.io/map-of-reddit-by-active-users/
I was surprised at how incredibly well done this notebook was, then I read your username and I'm no longer surprised. HDBSCAN is an awesome library and I've been using it for ~ two years now. Thanks for all your work and this is a really cool post! Also happy to see Bokeh being used over matplotlib for the interactivity.
That's a nice point regarding close method. I've been asked on the interview to limit generator (yielding infinite number of elements) not by imposing limit on while True loop.
&gt; How about that generators are a form of lazy execution so you can't know what is coming next. You can't len() a generator. But this also saves memory because the generator is basically just a pointer to the next step in an iteration. These are not generator-specific and they're pretty common properties of iterators e.g. you can't `len` the result of `imap` or know what comes next, steps are computed on the fly. &gt; generators are consumed and destroyed. If you call a consumed generator later it doesn't start over. You just get the stop iteration exception. That's not really specific to generators, in fact iterators aren't normally restartable though the source itera*ble* may (or may not) be able to yield multiple iterators e.g. a list can be iterated any number of times, but a file can't (unless it's reset). Not that a generator is an itera*tor* not just an itera*ble*.
Fair enough. I see how it wouldn't fit into the current package. I'll give watchdog a look at, thanks!
I would make a character.json file, load it on start, and keep adding to it as you find more things that add to the in-game context, like... {'missions': {'act1': {'has_started': False, 'has_completed': False}, 'act2': {'has_started': False, 'has_completed': False}}} Then change it as your player progresses, and flesh it out as your find more things to add. Then on game exit, just dump the json back into your character.json. Maybe if things get to complex (because of game states having to react to other game states), maybe create a game context class to handle the save game format, but will be more easily expandable.
The game isn't complex at all, it's literally walk in a straight line until you get to an encounter. Each encounter is a fight. After 3 fights you fight the boss and that's it. He want to be able to save map position and the encounters that he completed.
what have they done to make scripting easier?
Ah, sorry for wording that poorly. I meant to say that *I'm* getting more comfortable with coding in Blender because I'm slowly getting the hang of it. As far as I know, they haven't made any changes to the API that made scripting in Blender easier per se. Sorry for the misunderstanding.
Books like [Violent Python](http://www.codecalamity.com/book-review-violent-python/) have basic port scanner tutorials that use sockets to tell if a tcp port is open or not. Past that it's easier to just subprocess Nmap itself. 
I just started learning python, first week(sort of). Programming is a hard skill, it takes time repetition and patients. Here is what I doing. Tracking my progress with [github](https://github.com). Max time learning new things each day is 30min-2hr. If you try and load your mind with to many new things you won't retain it. After you've learned a new skill try and apply. Play around with it, break it and try expand on it with previously learned skills. Problem solving is a huge part of programming. Being able to find the solution if you don't know one is as important as being able to program is the first place. https://pastebin.com/nAZjDWxi From what I've gathered github is very important to be able to use * https://github.com * https://pythonprogramming.net/ * [MIT OpenCourseWare](https://www.youtube.com/playlist?list=PLUl4u3cNGP63WbdFxL8giv4yhgdMGaZNA) edit1: learning how to use reddit formatting... edit2: added pastebin link to my first 1hr30min of learning
The input data isn't even UTF-8. You have double escaped characters in them. print u'Epis\xc3\xb3dio' gives me *EpisÃ³dio* which looks like double-encoded UTF-8 to me. Given a unicode object, to fix this do this: print u"Epis\xc3xb3dio"\ .encode('raw_unicode_escape')\ .decode('utf-8') This gives you: *Episódio*
Absolutely, although the code to actually call a mouse click, keyboard press, etc. is often dependent on the API of the operating system/windowing system. For example, [this thread on StackOverflow](http://stackoverflow.com/questions/1181464/controlling-mouse-with-python) discusses mouse click events. The purpose of this blog post was to demonstrate how the blink is detected -- once you understand that, you can apply any sort of action you wish.
Why do you need to know column indices? Also, /r/learnpython
The engine is still C++, but most of the game logic and UI is Stackless Python.
This line: intFDSIDColumnNumber = intFDSIDColumnCounter should probably be: intFDSIDColumnNumber = intColumnCounter 
And that is big reason why such features should available as option.
Thanks for your response. &gt;But writing your own Python code and running it? Absolutely. Your code will do your bidding. I figured this would be the response. Just a case of not clicking on destroycomputer.py! I'll definitely be asking as I believe I'll need to get our IT team to do the actual installation, plus its much easier in the long run to just say 'hey this is what I'm doing and why, let me know if you don't like it and we can talk it over'.
In addition to what the others have said, simple put, it's used everywhere. Even companies who don't use python for their flagship projects, more than likely use python somewhere
Thanks. I am interested to know how blink detection / eye tracking might be integrated to allow for control of a user's desktop / any UI really. I'm an absolute beginner , but found your guide really interesting. 
Thanks ! It will help in solving a linear regression model in Python
Thanks! I'll try to do more blink detection/eye tracking tutorials in the future, especially ones that can be used for UI interaction.
At a very basic level you can just have a save function that stores the current values in a separate variable Save_player_hp = current_hp Save_player_location = current_location Then when they load from a save you just do the reverse... Current_location = save_player_location My first game I think I had checkpoints, as you got through the game certain flags changed to true and saved the current state If dragon_dead = True: Load_player_state(4) (which turns all current variables into the ones saved at that checkpoint I hope that makes and sorry for the awful formatting 
Awesome, thanks for the feedback!
So this works but only if it finds the if statement first. So for example if my table is ID, "FDSID", "STORE". it would work but if it were "ID", "STORE", "FDSID" it would not. How do I fix it so that it finds it regardless of what order the columns are in. I hope that make some sense. for row in num_fields: print row[0] + str(intColumnCounter) if row[0] == "FDSID": intFDSIDColumnNumber = intColumnCounter print "FDSID column counter = " + str(intFDSIDColumnNumber) elif row[0] == "STORE": intStoreNameColumnNumber = intColumnCounter print str("Field Name = " + row[0]) print "Store Name column counter = " + str(intStoreNameColumnNumber) # print "column counter after return = " + str(intColumnCounter) while row: print str(row[intStoreNameColumnNumber]) + " " + str(row[intFDSIDColumnNumber]) row = cursor.fetchone() break intColumnCounter += 1
Will continue working on my OpenGL 3.3+ framework: https://github.com/Contraz/demosys-py Been hard at work the last days documenting. 
No command line access...? https://gfycat.com/EmotionalSatisfiedHarrier
Just as an FYI, there's also /r/flask for Flask related questions!
No that's actually perfect, thanks. So after an enemy is killed you just implemented an auto save?
I've used Animation Nodes before (such a great add-on), but I have yet to dig deeper and do some scripting with it. It's definitely on my to-do list, but I'm kinda hesitant to take a closer look in case Blender 2.8 breaks things. It'll probably take a good while before it comes out, but still.
[Freelance Python Projects on Experfy] Experfy is a Harvard-based Data Science consulting and Training marketplace with multiple python, data science, machine learning projects. View projects here -https://www.experfy.com/projects/category Sign up to become an approved provider to submit proposals - https://www.experfy.com/accounts/signup/expert Here is a link on how it works https://www.experfy.com/howitworks#providers
You could say so. Both embed Chromium engine, Electron comes with Chromium v56 while CEF Python with Chromium v57.
You are my savior! I'm so glad I posted what I was doing because you saved me so much time and effort.
That actually sounds really useful. I guess I'll check it out soon after all. Thanks and happy blending/pythoning!
Sorry; what are auxiliary tool chains? Genuinely don't know. 
Assuming you are using python3, `input()` returns a string, and a string will never be equal to the integer 1. &gt;&gt;&gt; '1' is 1 False Try this: if input() == '1': Note that I used `==`, not `is`. `is` does something completely different; you want to always use `==` when comparing things. If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
[Organizations Using Python](https://wiki.python.org/moin/OrganizationsUsingPython).
In addition to other answers I'd use [enumerate](https://docs.python.org/3/library/functions.html#enumerate) on the for loop to save manually incrementing the counter:- for intColumnCounter, row in enumerate(num_fields):
I just finished up my Python (Flask) based VPN service website. Everything, including rendering web pages, making Stripe payments, and issuing/revoking OpenVPN keys is done with Python. https://vpn.noreallyitis.me
Bloody Susie, ruining it for everyone!
it's a blanket term i came up with on the spot because I couldn't think of a better way to describe "everything else." they're tools related to development that aren't directly programming. things like servers, code respositories, virtual machines (vagrant, docker, etc), deployment tools, configuration management, collaboration software, project management, cron jobs, monitoring and visualization tools, continuous integration, and probably more. they're all independent tools, but usually are linked together in ways that trigger actions in each other when certain things happen
I thought reddit switched away from Django?
whats stata q
Innovative thinking? Since when does EA lay claim to that?
Perfect use case: blink reminder so your eyes are less likely to dry out, or eye strain/fatigue detection to remind you to take a computer break
 filename = "{}.jpg".format(datetime.datetime.now().strftime("%Y-%m-%d-%H-%M")) You've got a weird quotation mark in there too. Next time try /r/learnpython for stuff like this.
I'm using influxdb to store and grafana to view the time series in order to record/view that I have GPS lock With modules pyserial and using pynema2 for parsing the sentences, requests to connect to influxdb http API https://github.com/DavidLutton/Python-Dataloggers/blob/master/NMEA-GPS_Serial.py
Gub'ment you say? python is probably a no-go. Source: Gub'ment - Like to know if you actually get it!
think of `sqlite3` as an analog to Python's standardlib `csv` module; can be handy sometimes, but typically you'd probably always prefer sth. like pandas' `read_csv` -- both `csv` and `sqlite3` are useful though if sth prevents you from installing/relying on external packages or if installing them is simply overkill for very simple things.
I really would hope that pip would be on their path. 
Interesting, thanks! BTW, - Your "Conditionally print observations with ‘or’ operator" section for Stata is wrong, you seem to be missing a few words there. - Using `x&gt;=.` is not kosher in Stata anymore (hasn't been for at least 10yrs), and `missing(x)` is preferred. - `reshape wide` is also missing some stuff 
Right: My bad. #sumdigits def sumdigits(x,li=None): if li==None: li=[] if x&gt;1: li=sumdigits(x-1,li) li.append(x+(li[-1] if len(li)&gt;0 else 0)) return li print(sumdigits(5)) print(sumdigits(4)) Works. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
You might get more replies at https://www.reddit.com/r/cscareerquestions/
you can also look into numpy. if you are dealing with alot of matrices. 
Exactly my first thought. Remind me to go to bed if I'm sleepy
More a case not to write destroycomputer.py.
I can see applications in phone number input with binary with this. 
GF and I broke up an hour ago. I'm over it now. Thanks for the hearty laugh my friend!
That would be amazing for quadriplegics and lazy people alike. 
&gt; iterators are the more general concept and are usually objects *Everything* in Python (including ints and None) is an object, so they're always objects. Iterators are objects which obey [the iterator protocol](https://www.python.org/dev/peps/pep-0234/): the object must have an `__iter__` method which returns itself, and a `__next__` method (`next` in Python 2) which returns the next value. Generators are objects created with the `def` keyword, containing the `yield` keyword in their body. The object created by the `def` itself is technically not a generator, although everyone calls them such. Its actually a *generator function*, and calling the generator function returns the generator object itself. In Python 3.5: py&gt; def gen(): ... yield 99 ... py&gt; type(gen) &lt;class 'function'&gt; py&gt; x = gen() py&gt; type(x) &lt;class 'generator'&gt; The generator object itself is an iterator: py&gt; x is iter(x) and hasattr(x, '__next__') True but generators can also be more than that. They can be co-routines, which means you can fire values *into* them with the `send` method, as well as extract values with `next`. (But in general, you shouldn't do both with the same generator. It's bad style.) 
The idea is that we are deploying a buoy in the ocean running a chemistry method that is controlled by the pi, the result of that chemistry being performed is the output from the script. I do want to set up a web page that displays the results as they come in, but power consumption is a problem, so would it be better to host the server elsewhere?
 def naivehash(l): return 1
If the string contains both types of quotes, you need to either escapt the quote character you're using (use a \\ character before the quote), or use triple-quoted strings (ie. `"""` or `'''` which only get closed by the same quotes). Eg: text_2 = 'No. “What\'s gotten into the hot dogs?” is on second. “Who\'s on steroids?” is on first.' Or: text_2 = """No. “What's gotten into the hot dogs?” is on second. “Who's on steroids?” is on first.""" Though note that this is probably a question better suited to the /r/learnpython subreddit.
Look more closely at those quotes. There's a difference between `"` and `“`.
Ouch, this was the first time i was posting question on python. I felt the questions in this subreddit was different. I'll see to it next time that i post in /r/learnpython subreddit. Thank you.
&gt; Strings are bytes that the computer stores. Not in Python 3. In Python 3, strings are Unicode strings whether you use the `u` prefix or not.
Spyder, Anaconda, rodeo
As far as data science and scientific computing goes, there are 2 workflows/environments that are common. 1\. Text Editor + IPython + Jupyter Notebooks When people refer to IPython, they usually are referring to an improved REPL. What is a REPL? It's an interactive session where you can type Python expressions or commands, and it will let you interact with the results. Go here to try: https://repl.it/ Python comes with it's own repl, but IPython is an improved version of it. Jupyter Notebooks (formerly IPython Notebooks) takes IPython REPLs and put them in your browser. It lets you create a virtual notebook for Python code with results. It can be shared with multiple people. Also, Jupyter notebooks supports other languages too. 2\. Spyder Spyder IDE is an IDE that is specifically made for Data Scientists. Unlike other IDEs like PyCharm, this one is lightweight and operates under the assumption that your products are mainly number crunching and analysis. Other IDEs are purpose-built for developers make full-blown applications. Finally, let's talk about Anaconda for a bit. Anaconda is a distribution of Python (for a lack of a better word). What I mean is this: Anaconda comes with Python and all the popular libraries/tools for scientific computing/data science. This is helpful because installing Python can be difficult or even time consuming. Anaconda has almost all that you need precompiled and ready for you to use no matter if you are running Windows, MacOS, or Linux.
Don't confuse. In Python 3 the equivalence to strings in Python 2 are of course byte sequences. Strings are always unicode objects in Python 3.
Pyglet has a very handy "Image Grid" class for easy working with sprite sheets: http://pyglet.readthedocs.io/en/pyglet-1.2-maintenance/programming_guide/image.html#image-sequences-and-atlases For easy scaling, you then put the image into a sprite: http://pyglet.readthedocs.io/en/pyglet-1.2-maintenance/programming_guide/image.html#id30 Pyglet uses bilinear scaling by default, but any of the OpenGL scaling modes can be used. 
Thank you VERY much for such a detailed comment! ❤
Yes, list comprehension is what you are looking for...
Cocos2D is actually based on pyglet, but contains a lot of useful game specific functionality. Pyglet is a bit more general in scope.
Very interesting Do you suggest I go with Cocos2d then?
I haven't use cocos2d myself, but it depends on what kind of project you want to make. Are you making a general graphical application, or an actual game? If it's a game, I would look over their docs and examples, and see if it fits what you want to do: http://python.cocos2d.org/doc.html
How is the list comprehension version appending l? 
I think this would work, but this is untested and I usually don't do list comprehension pythonista voodoo magic. Result = [x for x in list1 and x not in list2] This is untested but I think that would run and do what you want. Edit this doesn't work. Edit2: [x for x in list1 if x not in list2] does what you want. 
Use the set difference: for x in set(listA).difference(listB): ... Don't do this: for x in listA: if x not in listB: ... List membership testing is O(n), so the overall loop is O(n^(2)). If you need order preserved, you can do this: to_skip = set(listB) for x in listA: if x not in to_skip: ... Set membership testing is O(1), so this does not have the problem that the previous example exhibits. edit: typos
your demo isn't working for me, I'll look at the source code, did you used any sort of lag compensation and prediction?
I'd recommend the YouTube channel "Sentdex" https://www.youtube.com/user/sentdex Great guy, great videos.
Here's the tutorial series i learned with: [LearnPythonTheHardWay](https://learnpythonthehardway.org/book/) read through, follow the examples and if you're feeling good about your skills try putting them into practice [here](http://codingbat.com/python)
Honestly, if you don't want users messing about with the savefile, you basically need DRM. I think you're better off storing it in a format that is easy to understand and debug when things break rather than trying to make life harder for your users. If you want to have players competing against each other, that really argues for some client/server architecture where any code that would allow a cheat lives on the server side.
interesting Thank you!
Works fine for me. &gt; did you used any sort of lag compensation and prediction? No. It redraws every 100ms. Try to run it locally it only depends on tornado.
Could you be more specific with what you want to code
I need a little more info, but if you can access through SSH: The buoy has internet acces? It works in a local network? If I must to do something similar myself, I suppose that I would program the python script to send the CSV data to my MAC as email or as a file/connection to an Internet server. Obviously you need to keep the destination computer turn on. But if the connection fails, you can store the CSV in the PI and grab it latter manually. If power consumption is a problem, you can activate/deactivate the network to send the data. The perfect method would be a little flask app to check your buoy status: - Battery - Sensors - The data that you store in the csv - etc... With buttons to download the data from a time slice. You will need to test it for a time to see if it drains many batteries. But as you say, if the PI has Internet connection, you can host the flask webapp elsewhere, and the PI could send the data via HTTP connection every hour, or every day just like it could do to your MAC. Only remember that when you make a cooler system, you are getting more places to make an error that could break the system. So test it a lot and make backups...
dictionaries are the best bruh, wanna fight? 💪🏼
This really has nothing to do with Python specifically. (Even if it did, it belongs in /r/learnpython, not here.) Python is just being used as the build tool. Read the "formatting help" link or the sidebar for how to format code without it being completely mangled. The error is telling you that it's trying to execute a program that doesn't exist or isn't in your PATH. If you look at `xenia-build` around line 610, it's trying to execute `msbuild`, which is part of Visual Studio. That isn't in the PATH by default, so you're probably meant to run this from one of the "VS tools" command prompt shortcuts that adds all the toolchain stuff to your PATH. But again, you should ask at a Xenia forum, not here, as this isn't really Python related. 
Replace `foo(x )` with what you want to do NewList = [foo(x) for x in y if x not in z] Or, if you have several lines of stuff to do to x: for x in [x for x in y if x not in z]: Stuff(x)
Cython, numba and numexpr can speed things up. Also, if you use pure Python (no packages except I think Numpy might now be supported), pypy is maybe 10x faster than pure Python.
def match(words): for word in words: for folder in folders: if word in folder: return word it's formatting the whitespace weirdly, but last line is deepest indent
ok. this makes sense. So now I just need to add an "if" statement to see if anything matches and then call match(words)?
that already does it for you; the line that says "if word in folder" checks to see if the word is somewhere in the folder name if you have a different matching function in mind, then yes, replace that "if" statement with that
Especially since you can use dictionaries to im implement sets but not vice versa. Java's OpenJDK does this. I don't know if CPython does this, too. 
This solution is in O(n²). If listB is big, then this will be a problem. 
This is basically what happens: dankEmote = [l for l in dankMemes if 'dank' in l] | ^^^^^^^^^^^|^^^^^^ ^^^^^^^|^^^^^^ '-------------|--. | dankEmote = [] | | | for l in dankMemes: &lt;------' | | if 'dank' in l: &lt;---------|------------- dankEmote.append(l) &lt;-' This also means that any valid Python expression can appear at the very first place like: ['some text before' + l + 'some text after' for l in dankMemes] (Also as you may have noticed: conditions are optional) 
Another vote for sentdex but I've also been watching Trevor Paynes python videos too and those are pretty solid too
Learn Python The Hard Way isn't really recommended anymore. The author has an irrational hatred of Python 3 and supposedly the book also teaches some bad habits. 
I'm *guessing* what I'm making count as games. Interactive experiments maybe. Like a silly little hand-glider simulation I'm working on that you can control with the arrow keys.
tl;dw AFAIK all python objects passes by reference. What this video is about? 😄
yes, or zip method as it turned out: zip(range(10), generator())
It is always good to remember that O(n²) or O(n³) can be faster than even O(1) depending on your value of n, and the size of your constants. Big-O only describes the runtime trend, not the absolute runtime. In the case of short lists (n in the order of 10 or so) using only lists (i.e. your O(n²) version) is slightly faster than the `to_skip` version using sets, because construction of the set takes some time too. But if you expect the B list to be large, then using `set` is going to be the best choice. Also good to remember is that unless it actually matters whether your function runs in 1 millisecond or 1 microseconds then choosing the more readable solution is preferable.
Open or not isn't a difficult task. My question, is about telling whether it's tcp or udp. Why do u not advice running python script as root?
Actually PyPy supports quite a bit. More to come I guess. http://packages.pypy.org
https://thenewboston.com/videos.php?cat=98&amp;video=20106 In my opinion is TheNewBoston by far the best free tutorial.
It's possible to define something like this: def contains(x): return lambda c: x in c so you can do `filter(contains("dank"), dankMemes)`. I wouldn't be surprised if there was something like this in functools already, although it seems likely that it's too trivial to be included.
I think the C/++ preference might come from the very restricted set of languages allowed in the IOI. (I think it is that or Pascal?) Generally the difference between a correct solution and a too slow one is supposed to be in the complexity of the algorithm. I.e. the wrong solution well take hours and the correct one will take 2 seconds at most. No matter programming language. So the constant factor that Python introduces should not matter. In theory at least... 
It is taking you time to *comprehend* it.
i see you're a man of culture as well
Thanks a lot, flipstables. Is it common with people who code to have more than one IDE, each one to a certain goal? Don't IPython and Jupyter Notebooks coexist with Anaconda? =) 
+1 Most Dreadful Pun Of The Week.
Could you explain why it's n^2? An if statement doesn't make you loop through list A again. If list B only has one or two values while list A has a million, it surely wouldn't be n^2.
It seems like there's some confusion here. [Anaconda](https://www.continuum.io/downloads) can be thought of as a distribution or package manager for Python, that will help you with installation of Python. Installing Anaconda will actually install Jupyter, IPython, and Spyder as well. Follow the instructions for your platform and you should end up with everything you need: [docs.continuum.io/anaconda/install](https://docs.continuum.io/anaconda/install)
I'm more of a statistician then a programmer, but surely this wouldn't be N^2 right? It would be a\*N + b\*N\*M or something similar.
There's no need for a for loop using a set: `listC = set(listA) - set(listB)` or `listC = set(listA).difference(listB)` 
&gt; One aspect of Python programming that trips up those coming from languages like C or Java is how arguments are passed to functions in Python Doesn't he go on to describe more or less exactly how it works in Java? You pass in a reference to an object and the object can have methods called and state modified, but the reference you pass in cannot be changed to refer to another object entirely. Similar to passing in a pointer in C. I have heard this called "passing-reference-by-value" as the reference (location in memory) is passed the function/method by value.
Just [Atom](https://atom.io/) works well for me.
set(a) | set(b)
Pycharm is amazing. It has support for pretty much everything. 
ah, that explains the downvotes then. Thanks for heads up, i've done a bit of extra reading on it, i honestly just remember this being the first python tutorial i ever looked at. never realized it was universally hated.
Your post title can be translated to python almost literally: `[do(x) for x in y if x not in z]`
I second this, except I would recommend EMacs so you don't have to constantly switch tabs between Ipython and the editor. Either that or VIM is the way to go for sure.
As a slight syntactic improvement, I'd recommend: for x in set(listA) - set(listB): ... It's just a little more readable, and at least asymptotically performs the same.
Python(x,y) and Anaconda with Spyder IDE are the two options I would explore. Python(x,y) is 2.7py only, but it comes with Spyder and all the standard libraries you might use plus a working install of the pyqt/qt5 modules, which are a PIA to install yourself unless you really know what you're doing. Spyder is used either way and is basically the defacto scientific computing enviro for python. It's pretty great. I use it daily for 2.7 and 3.5 work. Works great. Happy to answer any questions you might have - I currently work as a R&amp;D eng.
O(#listA * #listB). You are right, I cannot assume that both lists are the same size. 
Go to your admin.py in your Post Model and add this: admin.site.register(Post) edit: Sorry, took another look at your pastbin and saw that you already had that. I would try removing the YourModelAdmin from the admin.site.register() and see if that helps. Not like that class is doing anything anyway, it's just passing. Another thought: Looks like you're calling admin.autodiscover() several times. Try removing those, and see if it works. Not sure which version of Django you're using, but here are the docs for 1.11: https://docs.djangoproject.com/en/1.11/ref/contrib/admin/ Check out the "Discovery of Admin Files" section. It basically says you shouldn't have to directly call autodiscover(), because it does that for you when you have django.contrib.admin in your INSTALLED_APPS. Good luck to ya! 
1 horse is all i need 
that's wrong though. somehow when I opened it up later, my original was correct. 
What a time to be alive 
Thank you so much for the diagram. I always meant to get to the bottom of what was happening in lines like this. I'm too lazy to test right now so I'll ask, does dankEmote need to be defined as an empty list before this line? Like dankEmote=[]
Guys, this is a research I've done on how a python code could be automatically visualized. What do you think of this?
I had done that. No change. Do update
If you're like me when I first learned them, the first thing you'll forget is the different between the generators `(item for item in items if item.mine)` and list comprehensions `[item for item in items if item.mine]` but the description above is good for that. :)
I wouldn't say it's universally hated...he's just managed to rub a lot of people the wrong way
Calling your module 'pookeeper' is a great way to be dismissed out of hand. Nobody with any responsibility is going to sign-off on a liability like that.
People don't like videos longer than 5 minutes in general, it's not just programming videos. Many larger educational firms have a hard rule of "never longer than 10 minutes," where the goal is ~5 minutes to satisfy average video attention spans. I think rules like these are silly. Why would I try to cater to someone with a short attention span who is trying to learn to program? I'd rather focus on the people who have the passion and real interest. I also just plain get annoyed when we're JUST beginning to get into something, and the video maker cuts for the next video. This is just for padding total channel views and ad revenue. Lame. I'll record for as long as it takes to cover whatever bit I wanted to cover. I rarely get complaints on time, but, whenever I do, I just point people to the text-based tutorials on pythonprogramming.net which cover the exact same content. The videos are meant to be the most complete and full versions of the tutorials. If you just want more of a reference material, the text-based versions are definitely more superior.
/r/learnpython
An XML/HTML scraper using XPath queries. It applies nested extraction rules defined in a dictionary syntax (what's the name of the data and how to get the value from the document) and produces a dictionary with the given names (as keys) and values: https://piculet.readthedocs.io/
That sounds pretty cool. If power consumption is a concern, and planning ahead for the scenario where you'd have several buoys, you could host a web server somewhere else, that exposed an endpoint that was able to take data uploads via POST requests. You could extend the idea with several POST endpoints, one for the buoys to send status data (batery, etc), and another one for receiving the actual results from your science stuff. You could then include an additional step in your Pi's script to make a POST request to your central server, uploading whatever data it has gathered, either at the end of an experiment (experiment results), or in a scheduled fashion (sending buoy's status data) Your central server could store the data it receives from all the buoys in a database. It could also expose endpoints that would let you explore such data (like a web interface or API) I don't know what volume of data you're moving, but I bet you can get away within the free layer of AWS, at least for testing purpose.
Worth noting for the sake of completeness that in addition to Anaconda, ActivePython is another distribution that also has recently been updated with a focus on data science and machine learning. Also available for Win/Mac/Linux. Comes with Komodo IDE. This is a big focus moving forward for this distro. As outlined, lot of factors here, and a lot depends on your particular workflow, use-case, etc. *Full disclosure: am Dev Evangelist for ActiveState.
When I first came across matplotlib I was so confused because I was constantly being shown a mix of the two styles. I knew what I wanted to do with it, but making it work was dark magic. Painfully, over the past few years, I've learnt how to use the OO matplotlib paradigm, and now I can appreciate the utility, but for a long time I resented matplotlib because of the global style. How I wish I had read this article sooner.
Thank you for expressing concern on the matter. I mention looking for feedback on the naming in the readme.
1. Having fun with a new CD process. *Every* commit on master that touches ./src/ is a new release on pypi. Yes, the test suite is excellent. No, that hasn't stopped build issues or packaging problems. It's calming down now though... 2. Putting together some teaching materials and marvelling at how much nicer it is to use the libraries I found two years *after* I did this course myself.
&gt; Honestly, I think it's like good chefs grind their own meat for burgers, or made their own sauce rather than buy pre-made. It's about control the underlying structure/ingredient. Then they would (should?) be using C. Competitive programmers use C++ because it's fast and has a great inbuilt library (STL). It also helps that C++ has first class support (guaranteed to have a solution) in many (all?) platforms and contests (ICPC et al.)
All good points. I agree 100% that stack overflow isn't the sole problem - the matplotlib docs are confusing as well. No doubt about that. As far as matplotlib vs. pandas what I was trying to convey is that pandas provides a thin wrapper around matplotlib and gives you "training wheels" to get the initial plot in place. Then you can use the underlying matplotlib object-oriented API to do the customizations you need. The actual plotting mechanism used by pandas is just a thin wrapper around matplotlib and seaborn is just another wrapper on top. I do agree that this is not ideal and the state of python visualization is not completely settled yet. So, I'm just trying to provide a little guidance in a non-optimal world.
I am not sure I understand what you are asking? Why people bother with languages other than Python when working against time? As I said, the IOI, which many competitive programmers "grew up on" only allow C, C++ and pascal. Pascal is quite far out of the mainstream and has been for many years. C does not have build in Hashmaps or sorting which is really inconvenient. This leaves C++ as the by far most used languages in the IOI, and therefore as the most prevalent language in the competitive programming scene. When people get too old for the IOI, the next thing is ICPC. Here I think the languages have been C/++ or Java until this year were python has been allowed. So until now you would still have to keep training in C/++ or Java. I think the competitive programming scene is actually quite separate from the professional developer scene and CS academic scene. People in the competitive programming scene do not care about code quality like a software developer, or nifty programming language features like a CS academic. On the contrary they care about already knowing the language and how to do all the common things you need to do in a programming language competition very quickly (as in typing from memory very fast. There are a few common patterns you do over and over again. Macros also help with this). These things together gives little incentive to change away from C++ Also competitive programing problems are also often designed so you don't need to do dynamic memory allocation at all (you get bounds on the input size). This eliminates a huge chunk of the potential problems of using C++ instead of something like Python.
First off, this belongs on /r/learnpython. Second, the code formatting is really off, tough to read.
I am amazed anaconda is that old. It completely failed to register on my radar until last year! I definitely heard about pip long before it. You learn something new everyday...
Even if they are not of similar sizes, it's still O(n^(2)). Consider if list A contains a million times as many items as list B. That's still O(n\*n/1000000) which is O(n^(2)). Essentially, as long as the sizes of lists are variable it's O(n^(2)). The only case where it's linear is when the size of one of the lists is fixed, e.g. if one list *always* contains three items. And that's an additional constraint that was not specified and can't be assumed in the general case. 
Added to [the Python OOP list](https://github.com/metaperl/python-oop/blob/master/README.md) along with the other dependency injection option.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [metaperl/python-oop/.../**README.md** (master → 5b58f2a)](https://github.com/metaperl/python-oop/blob/5b58f2a5e6ef2c2ccfddefdbcb0cdc13737ec511/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dgqe3bx.)^.
Am a big fan of the qtconsole. Never quite wanted to have a browser instance for coding and the console is what I got used to. Inline matplotlib is also nice.
Damn I defiantly should have posted here. I did Google for pages but couldn't find the answer 
In a situation like this, I think the correct default is to optimize for readability, and then optimize for that sort of small scale performance improvement only if you actually need to. Both operations are linear time, and unless this is the bottleneck of performance critical code, it's really silly to care about that sort of performance difference - the performance loss will be imperceptible; the readability/maintainability gain *is* perceptible. If the set difference isn't the performance bottleneck in your code, but performance is critical enough that you still care, then probably Python is the wrong language for what you're doing.
Oooo is that "or" part of the code? Or is that two different examples .. this is interesting. I defiantly have a lot to learn
I have no idea what you're talking about. --- Sincerely, Andy
No the 'or' isn't part of the code, they're two separate examples. Note that using the .difference method doesn't require the second arg to be a set, it will take any iterable. The output is the same for both.
What exactly are you looking to do with Python? "Automate the Boring Stuff" is an awesome book that the author was kind enough to release online for free. It is a great introduction to using Python for practical applications. 
I'm a data scientist and I've tried virtually all the different options. No one really seems to be mentioning more lightweight options like atom, vscode, and sublime. Both atom and vscode have excellent jupyter integration, and I've found that the mix of lightweight fast text editor plus integrated ipython console/ability to embed jupyter notebooks in the editor to work the best for me. Check these packages out: [Hydrogen for Atom](https://atom.io/packages/hydrogen), [Python for vscode](https://github.com/DonJayamanne/pythonVSCode/wiki/Jupyter-(IPython), and [SublimeREPL for Sublime](https://github.com/wuub/SublimeREPL) to easily use an ipython terminal, though no jupyter support as far as I know. 
So, I threw my Flask Pingdom-esque clone dashboard on Heroku. I'll be working on getting it actually running. https://pumpkin-pudding-63900.herokuapp.com/
Awesome diagram. How long did it take you to create it?
[Hiring] Berlin, Fintech Our stack: Python3, Elasticsearch, Django, Mysql, Ansible on aws. More information and apply: https://fincompare-jobs.personio.de/job/9379
Pyqtgraph is your best bet. Web-based plotting tools generally can't handle updating that fast in my experience (with the possible exception of the no longer actively developed flot).
A program that scrapes all messages posted in a GroupMe chat (popular group chatting app) and trains a markov chain language model for each user. It then creates a new group chat and fills it with bots for all the users and simulates discussions between them, just like /r/subredditsimulator!
I'll give another recommendation for Spyder especially after the most recent version upgrade to v3. It really takes advantage of IPython now and makes it a whole easier to keep track of what values your variables have after a script has run.
amazeballs
No need to be so defiant.
haha. those are my morning fingers :)
But... why? What problem are you trying to solve?
Thank you! :) 
This is better suited for /r/learnpython. In the meantime, check out [Hitchhiker's guide to Python, structuring your project](http://docs.python-guide.org/en/latest/writing/structure/).
I'd like to know how Jython and others use PyObject*.
Now that's something new and interesting :)! I think that's quite well thought of. Even the whole idea about hierarchy of injections, and being able to remove. I'm surprised though you have written it in Hy, also really fun to see. I still think it's not smart to write it in lisp if you expect others to work on it, and that comes from an avid Emacs user ;) Actually... it looks nicer than Emacs lisp at least and it's great that it compiles into Python :D
If you are not afraid to dig in new and kind of experimental, try vispy.
That's an xml file ... so use an xml parser to read it. The `xml` module ships with python, or you can install the much more user friendly `BeautifulSoup` module: &gt;&gt;&gt; test_data = '''&lt;?xml version="1.0" standalone="no"?&gt; ... &lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" ... "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"&gt; ... &lt;svg version="1.0" xmlns="http://www.w3.org/2000/svg" ... width="1280.000000pt" height="800.000000pt" viewBox="0 0 1280.000000 800.000000" ... preserveAspectRatio="xMidYMid meet"&gt; ... ... &lt;g transform="translate(0.000000,800.000000) scale(0.100000,-0.100000)" ... fill="#000000" stroke="none"&gt; ... &lt;path d="M0 4000 l0 -4000 6400 0 6400 0 0 4000 0 4000 -6400 0 -6400 0 0 ... -4000z m7367 644 l28 -21 3 -482 2 -481 -187 -1 -188 -1 68 -21 c37 -12 67 ... -24 67 -27 0 -6 -29 -18 -151 -61 l-86 -31 -7 -60 c-3 -34 -6 -76 -6 -94 l0 ... -34 -145 0 -145 0 0 505 0 505 -220 0 -220 0 0 -505 0 -505 -145 0 -145 0 0 ... 29 c0 15 -3 48 -6 72 l-6 45 -119 33 c-65 19 -119 38 -119 42 0 4 54 26 120 ... 50 66 23 123 46 126 50 3 5 -105 9 -240 9 l-246 0 0 478 c0 527 -4 495 60 521 ... 16 6 354 9 952 8 925 -2 927 -2 955 -23z"/&gt; ... &lt;/g&gt; ... &lt;/svg&gt;''' &gt;&gt;&gt; &gt;&gt;&gt; import bs4 &gt;&gt;&gt; soup = bs4.BeautifulSoup(test_data, 'xml') &gt;&gt;&gt; soup.find('path')['d'] u'M0 4000 l0 -4000 6400 0 6400 0 0 4000 0 4000 -6400 0 -6400 0 0 -4000z m7367 644 l28 -21 3 -482 2 -481 -187 -1 -188 -1 68 -21 c37 -12 67 -24 67 -27 0 -6 -29 -18 -151 -61 l-86 -31 -7 -60 c-3 -34 -6 -76 -6 -94 l0 -34 -145 0 -145 0 0 505 0 505 -220 0 -220 0 0 -505 0 -505 -145 0 -145 0 0 29 c0 15 -3 48 -6 72 l-6 45 -119 33 c-65 19 -119 38 -119 42 0 4 54 26 120 50 66 23 123 46 126 50 3 5 -105 9 -240 9 l-246 0 0 478 c0 527 -4 495 60 521 16 6 354 9 952 8 925 -2 927 -2 955 -23z' If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Think concept. I assume Jython uses java references which are pretty much the same thing, they're pointers to heap-allocated content which the VM refs/derefs for you. In fact you can even see the "belly open" version in Obj-C where your objects are literally `Type*` and you send messages to the pointer rather than the pointee.
Thanks for the advice could you show me how to implement it briefly and I will branch out from there ? I will make sure the code is formatted properly in future.
I did ... what part of my example are you confused about? 
Just realised you have already done so haha. Thank you ! 
Use an editor "snippet." In mine I now type less: pr&lt;TAB&gt; --&gt; print('&lt;CURSOR&gt;', ) &lt;CURSOR&gt; etc.
~~Does it really matter though? O(#listA * #listB) is O(#listA * #listA * x) for some x = #listB/#listA. I don't remember my complexity classes very well, so someone correct me if I am wrong.~~ edit: I was wrong, see reply below
You can use an editor that shows whitespace to help with that when needed. What you're suggesting is to hurt everyday usability, to solve problems that happen vary rarely.
Awesome, thank you!
https://www.youtube.com/watch?v=C_Kh7nLplWo
It isn't *a little* shorter to write, it can be like ~70% shorter. They are more secure, and faster. Moreover, the Zen piece is not a hammer to prevent innovation in Python.
The idea was proposed and implemented two years ago, just after 3.5 was released. It took two years to get it into a distribution near you.
Okay so I don't get any error with the code below but still not getting print of what I'm looking for, it just prints nothing. I used pastebin is that how it should look ? import xml.etree.ElementTree as et svg_data = open("test.svg") str_data = svg_data.read() xml_data = et.fromstring(str_data) path_list = xml_data.findall("SVG") for x in path_list: print x.find("g").text
Use an editor "snippet." In mine I now type less: pr&lt;TAB&gt; --&gt; print('&lt;CURSOR&gt;', ) &lt;CURSOR&gt; etc.
Could not have been done nearly as elegantly with a library! Benefits are not dubious but plentiful every fucking day! DRY. Real drawbacks to your 0.001% usecase. 
The author already posted about the series here. 
K
&gt; I assume Jython I never assume anything, least of all in the computing world.
Yeah, the fact that other libraries are building on top of matlplotlib (and that sometimes this creates more than one way to do something) is really just a testament to the power of the platform that matplotlib built. Even ggpy (ggplot for Python) uses matplotlib under the hood to do the rendering.
I've never used it this way (largely because Jupyter Notebook integration makes it unnecessary), but it looks like you can call .show() on your figure object. This means that the only reason you *need* to access the global scope is to use it as a factory to create new figures.
Maybe just because I come from a more computer-science, object-oriented background, but matplotlib made total sense to me. You have a figure, the figure has a number of properties that can be changed and contains a set of Axes. Each Axes has labels, ticks, and Artists (e.g. Line2d). And so on. I've used ggplot a few times and even sat through a tutorial on it and I'm still kind of confused as to how it works. Things like 'aes' just seem weird. Adding other components to your plot seems like a general way to achieve very specific effects that appear to be arbitrary and require you to memorize the side effects. I'm sure it all clicks eventually and is very nice (since a lot of people use it and love it), but it all looks very foreign and strange to me.
I've seen it, but it's much lower level and really more for serious visualizations. Pyqtgraph has things like widgets built in and is much friendlier for quick plotting.
Extremely dank
Ok, wtf dude. I'm asked what I don't like and tell why. I don't care if you like it, I don't care if you don't like me not liking it. It's there, and my opinion too. What's the point of writing no less than 4 comments for... for what? To tell me I'm wrong not liking it and insult me? Or is it that you really can't get over the fact that someone doesn't like what you do? Are you so insecure? Grow up, not all people have to think like you and there's no reason for you to be rude about that.
That's exactly what I use now. But if this lets me push the refresh, that'll better
Thanks so much for this :) I'll incorporate your suggestions, if you don't mind.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
This post would be better suited in r/learnpython and /r/learnprogramming 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
SimulateMe! Blomhonung
What is a dev Evangelist?
i haven't used funcformatter before but it's nice to know about it. everything else i've learned by trial and error over the past 2.5 years. i wish i would have seen this a couple of years ago to save me the time. i like the way you brought up how confusing the stackoverflow posts are bc there are so many ways to do the same thing. it's difficult to adapt the other styles to the exact syntax i'm using. i usually do the fig, ax and then add everything to my ax object. great post
Can you say more about why I might want to consider ActivePython instead of Anaconda?
I mostly agree with the criticism, but I *really* enjoyed your article. Please don't let divisiveness or the difficulty of tackling something challenging prevent you from tackling something challenging. Really enjoyed your content. Thank you!
This is awesome, I love how simplistic it is. All the other python D.I libraries I've looked into seem way more complex then they need to be. The layering is very cool and simple as well, and the mocking support is great. Nice job. 
&gt; %matplotlib notebook You are right, I was thinking about the people that just call 'pd.desc' at the end of a cell without 'print'. There's a different magic for that, but I was remembering the wrong thing. What do you mean by "interactive" version of the figures? I've only seen static images so far, but I'm also new to all of this.
Interesting. Would this work in ipython, and would I have to have another library?
Double this. It appears you're building your inheritance system from scratch.
Python has made me a better person for several reasons. But at its core, I would like to think it has helped me think in a more concise manner. If you cannot explain something simply, you do not understand it well enough. 
I think you mean icmp packets with pthyon :) 
What timeline are you looking at and how much effort are you willing to put into mastering your toolset? Emacs org-mode plus org-babel is a general-purpose, jupyter notebook on steroids that will last you the rest of your life. Even ignoring programming entirely, learning emacs for org-mode can be life-changing, especially in the scientific disciplines. The investment is worth it - but the upfront cost can put many off. Spacemacs, the editor I use, combines vim and emacs and is what I would recommend. It runs on every OS. It is a huge improvement on every workflow mentioned in the comments here.
No easily in user space. You need to do something like tcpdump and put the interface in promiscuous mode. Generally this is handled in the kernel or with something like ovs. 
being a freelancer is hard not only to a begineer. I'm working with python for the last 7 years, not a beginner any more, and working as a freelancer scares the shit out of me (having 3 kid and a house to pay for doesn't help in that regard). If you are a student I would suggest looking for internship in a some big name , or testing (that's how a I started)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
This is going to come off harshly, so I apologize up front for that. I do mean to be constructive. Your answer actively paints ActivePython in a negative light. You had a direct question about why someone "might want to consider ActivePython instead of Anaconda" and you said nothing that responds to the question. Even if there is an answer, your long paragraph devoid of such an answer gives the impression that there is no answer, i.e., no reason why someone might want to consider ActivePython.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
As a regular ggplot2 user coming to Python's world, I cannot appreciate it more. Thank you for sharing!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Scapy? I'm pretty sure it wraps libpcap, but it's easy enough to use. 
Yes, this works, but (as far as I understand) it does not permit a Mapper instance to inherit attributes from a Dataset instance, without recreating the Dataset instance.
The naming conventions in matplotlib are sadly poor. I think this is a result of two things - being an open-source project with many volunteer developers, and the fact that plotting terminology in general is ambiguous. My goto example gripe of this is `subplots` returning a list of figures and axes. Why is it not returning a list of 'plots'? (These are the complaints of a dedicated matplotlib user. I have much respect for the developers, but I pray for an interface redesign in mpl 3.0)
Matplotlib is hugely powerful. But it is also confusing and frustrating!
You'd think it would make sense, but remember that matplotlib originally mimicked the Matlab state machine and still has much cruft associated with it. Try creating more than 20 figures in a script and matplotlib will complain at you about having too many figures open. This happens, if I recall correctly, even if you re-use the variables that refer to the figures. You have to call `plt.close()` otherwise the figures still persist in the state machine. Annoying as hell when doing large batch runs.
Or, since this is a forum you could just post your question for everybody to see and answer?
Of course it does, that is the whole point of subclassing. Hopefully reading this [An Introduction to Classes and Inheritance (in Python)](http://www.jesshamrick.com/2011/05/18/an-introduction-to-classes-and-inheritance-in-python/) will help. Note that my use of "super" above is preferred to their use of the superclass name being hard coded.
And giving it a sensible title would help (no pun intended) as well. "Need help" is about as much use as a wet fart in a thunderstorm.
Seems like we're getting into PEP20 territory. It's better known as [The Zen of Python](https://www.python.org/dev/peps/pep-0020/).
what do i need to install along with update python with the new winedows subsystem so iuve done apt-get python update pytthon apt-get pip what else 
Thanks!
i ran the program and it said try easy_install pycrypto i did that and got this at the end #include "Python.h" ^ compilation terminated. error: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1 root@DESKTOP-4OJGEP2:/mnt/c/Users/H.A.L.9000/eggshell#
I'm terrible at mathematics but I know this is correct syntax is Python and will return the desired result 
&gt; I'm here to listen to devs as well in terms of what they want to see, especially in the data science field - what tools, packages are you interested in? What sucks about your current workflow and how can we make it better? This is entirely related to Komodo... Ignore it if you don't want to hear it :). I typically check out the Komodo trial every time you guys do a major update. Fix your vim emulation! There are too many quirks. Set a real vim user down and the keyboard and watch how irritated s/he gets. * Copy and paste is wonky about removing the highlight from copied text and does not always react as expected when using visual mode. This leads to overwriting the highlighted text when not intended and is a MAJOR irritation. * In many cases you have to hit escape multiple times to go back to command mode. Just edit and debug some python code in V10.x in vim mode and you'll see. * Your color schemes sometimes result in unreadable code. Specifically, the 'Dark Chalkboard' scheme makes some things unreadable when it highlights matching braces/parens/brackets. When you click in another window (say, to add a watch) the current line in the editor becomes unreadable reddish on reddish. Other of the schemes have similar quirks. * Make it an option for the cursor to move in virtual space and have that option actually work. Flapping cursor syndrome drives me crazy. If the vim emulation was up to snuff I'd actually buy Komodo again.
Thank you
try using ctrl shift c/v to copy and paste in your terminal.
Why would you think "Herpetologist" would be a good name for serious software? It might be correct but it sounds like a specialist in crusty sexual diseases (Herpes Simplex). Choose something that won't get sniggered at in a developer meeting (from people outside your own circle) and won't offend client and stakeholders if it accidentally turns up somewhere (errors traces, audit reports etc).
Managing object dependencies is a huge pain in the ass in bigger projects. DI frameworks want to solve this problem by managing it for you. 
Hey - no problem, I definitely didn't intend to come off as "dodging the question" - I was just hoping for insight into use case to be more specific, since I also didn't want to be sounding like a spec-sheet, but I guess that was not clear. :) So, to answer it directly: while Anaconda is popular among the data-science crowd, ActivePython has been around for a very long time as a general purpose distro and has just recently had a big update to give it a huge boost specifically in the data science and machine learning space - with another big update coming as well. And it includes pre-compiled packages from across the whole spectrum of use cases (that said if there are ones we are missing - let me know). ActivePython, on Windows especially has always been the distro that "just works". It also offers commercial support which is important to some folks (again depending on your use case) - offers multiple versions - so you can get either 2.7 or 3.5, and wide package compatibility between versions. It also now ships with Komodo IDE which is a fully featured dev environment. ActiveState has always been engaged in the Python community, being a founding member of the Python Foundation - and continues to be deeply committed to working with devs to make it the best distro - I know that sounds like a marketing line but it is honestly true. :) Anyway - appreciate the feedback, and hopefully that at least starts to answer the question? Different aspects become more important depending on your situation. Always happy to chat more - if anyone is at PyCon next month come by and say hello!
I am not into his Python 3 content, so I can't really comment on that, your suggestion (Learning to Program by Alan Gauld) I am also a fan!
Great link. Thanks 
how it helped you to think in a more concise manner?
It depends what you're trying to do, and in particular with how much data, but I've spent a lot of time in the past year trying out the various options and finally settled on my own simple process reading shapefiles with pyshp and [descates](https://pypi.python.org/pypi/descartes) to plot elements via matplotlib. This is similar to the geopandas approach but gives me more flexibility in what I do. The quick-and-dirty hack in this instance is that I don't both worrying about projections, which makes the process much faster, but I can get away with it because the scales I'm looking at are close enough to Euclidean. I think Cartopy probably has the nicest interface, but when plotting 100,000+ shapes it is very slow.
OSMnx has some pretty neat tutorials and examples. https://github.com/gboeing/osmnx/tree/master/examples 
Can confirm--easy to setup and easy to understand the output.
I am an idiot, thanks! I used " " at the datetime too!
You'll probably want to explore and understand the built-in functionalities a little more before adding 'clever' helpers and work arounds with unaware side-effects.
How do you generate ping with Python? 
Cannot confirm, have heard government likes Python. Source: CIA, via WikiLeaks
Cool. How is this different from something like stan or pymc? Or probilistic programming? 
Cannot confirm, DoD at least does not like anyone to have python. Source: DoD
The reference is that a number of the tools the CIA used were written in Python. I very well imagine that more regular jobs take security very seriously. 
Yes, [the official Python documentation](https://docs.python.org/3/index.html) has what you're looking for. Specifically the [library reference](https://docs.python.org/3/library/index.html). *(note, this is better suited for /r/learnpython)*
I don't work there. I follow their CEO on twitter and was at a talk of hers.
Why do people use the requests library for REST?
Not to be a dick about if but if you google any of the function names in the standard library you're basically guaranteed a hit to docs.python.org within the first 3 search results. Have you even tried?
After looking at your questions I think you don't really understand what is REST/GraphQL/HTTP/etc. I would suggest you read about those things first, this will give you a better understanding of how it works why there is no "rest client" libraries or "graphql client" libraries. Because in real life whenever you are picking technology/approach you should always understand how it works to be able to compare it to other solutions to pick the best one for your case, not just the most popular one.
This looks pretty cool... I'm an agronomist doing data work with Python and without formal IT education, this looks as an awesome tool to help evaluate the code structure and logic through the generated diagrams. I read it's made for projects in Python 2 and runs on Linux. Are you planning on supporting Python 3 and other platforms? Edit: Forgot to congratulate you for your work.
This is the source of my questions: "As your application becomes more complex, and you add GraphQL endpoints that take arguments as described in passing arguments, you will want to construct GraphQL queries using variables in client code". http://graphql.org/graphql-js/graphql-clients/ "GraphQL Client" is the name of the page describing how to make complex queries on the GraphQL.org website. It does get complicated. Hence the need to variablize the arguments, hence client code. 
trying to decide on pico tui, python ncurses, urwid, or npyscreen for a text based user interface for a custom login shell.
So I finally managed to get something working. if I go into the svg file its self and take out all the stuff at the top and just leave &lt;g ....... &gt; &lt;path ........ /&gt; &lt;/g&gt; It works, but obviously that isnt that helpful because I would have to go in and edit every file manually at which point id be as easy just copying the path out. note: I am still using et. is there anything I am missing here ? it seems to be the &lt;svg&gt; and other tags that are stopping it from functioning. 
I use 1. emacs with python-mode and IPython.
I bet it is too. I'm going to go and research xml documents a bit more but unfortunately I'm struggling to find much on svg's specifically. Is beautiful soup native and if so I would be happy to use it. I noticed that in your example you had the SVG already in as part of the code I assume opening an egg file reading it and holding it has the same result ?
Link to csv for reference https://drive.google.com/file/d/0B7Iw8QIWHfFXOHNrT0dHZUFKWEk/view?usp=drivesdk 
After trying to find a program that wasn't a garbage web or mobile app, or a dos program that I couldn't get working in dosbox, I've decided to make my own program to keep a catalog of all the books I own. I think that's a doable project for someone who's just barely started learning python as long as I keep it simple, though it's probably more of this year than this week. 
I wrote [geoplot](http://www.residentmar.io/geoplot/index.html) for this. `cartopy` is excellent, but low-level; `geoplot` is an abstraction on top of it that tries to pre-bake some common chart types. You can see some examples in the [gallery](http://www.residentmar.io/geoplot/gallery.html). I'm hoping to eventually land it in `geopandas` core.
The [sorted](https://docs.python.org/3.6/library/functions.html#sorted) function lets you specify a custom function that takes an element from the iterable to be sorted (e.g. one row of your table) and returns a comparison key (e.g. `row[2] * 3 + row[3]`). Btw., /r/learnpython is more appropriate for beginner questions.
Sometimes you have to cut your losses and just do it by hand for a one-off (esp. when it's only ~5 pages). 
It's still pretty fresh. I hardly ever stumble over a cool project hours after it was committed :P I'm not sure if simon is down for pull requests, i'll leave him a note and ask looks neat already!
&gt; And what the heck is an axe? noun, plural axes [ak-siz] 1. an instrument with a bladed head on a handle or helve, used for hewing, cleaving, chopping, etc. 
Check out a trial account with Twilio and you can cut out the Twitter steps
Here you go: https://pastebin.com/t3063Lw5
Are you looking to extract the data in this table specifically, or would something like [en.wikipedia.org/wiki/List_of_nuclides](https://en.wikipedia.org/wiki/List_of_nuclides) suffice? Instead of atomic mass, it list the mass defect per nucleon compared to the mass of a neutron in MeV. Alternatively, I extracted the data by copying all the text from the pdf (Ctrl-A + Ctrl-C) and simply performing the following Regex: (?:(\d+)\s\n)?(?:(\w+)\s\n)?(\d+)\n(\w+)\s\n(\(?[\d.]+\)?)\s\n([\d.]+|\*) (You can edit it yourself at [regexr.com/3fr7m](http://regexr.com/3fr7m)) Which yields the following (tab-separated) table: [pastebin.com/cEyTrQ0c](https://pastebin.com/cEyTrQ0c). EDIT: To get the atomic numbers, you just need a little script (in Python, for example) to loop through each line and copy the name and atomic number from the previous if it isn't present. Something like this: import re regex = r'(?:(\d+)\s\n)?(?:(\w+)\s\n)?(\d+)\n(\w+)\s\n(\(?[\d.]+\)?)\s\n([\d.]+|\*)' Z_group = None name_group = None for match in re.finditer(regex, text): Z, name, A, symbol, mass, abundance = match.group(1,2,3,4,5,6) if Z is None: Z = Z_group else: Z_group = Z if name is None: name = name_group else: name_group = name print('{}\t{}\t{}\t{}\t{}\t{}'.format(Z,name,A,symbol,mass,abundance)) Which produces: [pastebin.com/SeKDU3XH](https://pastebin.com/SeKDU3XH) 
?
Doesn't Python pass simple types by value too - str, int, and float?
We're talking about the time to compare all the elements in list A with all of those of list B, right? Wouldn't that work out to: for each item in A: # n iterations for each item in B: # m iterations compare itemA with itemB # O(1) Which is plainly O(nm)
Columns = (release, date, price,) '''release is the number of data points which ranges from 1 to 78 z.exeucte ('SELECT * FROM biotech WHERE release BETWEEN 1 AND 15 AND MAX(price); However, say I want to select data from the largest release number (could be 78, could be 72, could be 64) and then subtract 20 to create a 20 data range for each data set and then select MIN(price) z.exeucte ('SELECT * FROM biotech WHERE release BETWEEN (Largest?) AND (Largest -20) AND MIN(price);
Yeah - I like to use sets whenever it makes semantic sense. Whenever I have a collection of items and the order or frequency doesn't matter. Helps keep the concept clearer to me.
Highly recommended. I used this to debug some memory issues in my dissertation research and found it very easy to use and understand the output.
A 'certification' is beneath a degree. Your degree is your certification. No idea what GIS is, you should write out acronyms.
tl;dr - udemy course
This doesn't work because x ends up being depending on #listA and #listB, so it's not a constant. If you wrote O(a^2 x), it suggests that double a would quadruple the runtime - which isn't true. If an algorithm has two key numbers that can vary independently, it's fairly standard to use something like O(nm). You're basically saying this is linear in 'n' and linear in 'm'. Though if you put forth the assumption that the lists are approximately the same size (or same order of magnitude), then O(n^2 ) is a decent approximation. 
Thank you very much! It's really useful to know how to do this properly.
I was wrong then, thanks for the clarification!
Building an interactive data viz dashboard for nyc taxi rides using flask, bokeh and datashader, and MongoDB for the backend. 
You choose the name "ax" there. It's just conventional to use "ax" as an abbreviation for "Axes".
GIS - geographic information system. Basically a degree in mapping technology / software, although that's a gross over-simplification. 
Yeah thats just the formatting on reddit. It is properly indented in the script That is called at the bottom i.e if __name__ == '__main__': function() function2() function3() The problem is that pycharm does not output anything. Literally nothing. If that was an issue it would have told me, and it should have told me about intentional syntax errors I put in. 
Im a mix of frustrated and relieved, that worked like a charm! I have been banging my head against the wall for days now trying to get that to work and it took you 2 minutes and you did it the way I wanted it. It is for a slicer I have that is spitting out PNG files that I am trying to convert to SVG files (or get it to spit out SGV files instead) so that I can extract the path and then turn it into coordinates that I can send to my electronics to guide a laser. I'm an EE so hopefully when the software is done il be in my element. Thanks again !
As a tip, I always put the files into the same folder as the script. Python will look there first usually. Saves with having to deal with the hassle of different OS's. I use my scripts on both Windows and Linux, so this works best for me. Some interfaces (Spyder and PyCharm comes to mind) will sometimes need to have their "working directory" set. Usually just closing the script file and reopening it works. 
Try install modules in PyCharm settings() for your choosen version of Python. https://www.jetbrains.com/help/pycharm/2017.1/installing-uninstalling-and-upgrading-packages.html
Gutenberg project has dozens of free, full books in txt format. The only problem is that you may need to strip headers and other stuff.
YOLO or SSD
For those types it is similar to pass by value because they are immutable.
Not really. Never heard of a Python one worth the space on a resume.
This is not strictly a Python problem - it's a SQLite problem. If you only want the largest value, you can use an arithmetic expression (presumably you mean MAX again?): SELECT * FROM biotech WHERE release BETWEEN ( select MAX(release) from test) - 20 AND (select MAX(release)) AND MIN(price); But you're probably better off just using `&gt;` for efficiency, if you're always looking for BETWEEN MAX(release) -20 and MAX(release): SELECT * FROM biotech WHERE release &gt;= ( select MAX(release) from test) - 20 AND MIN(price); The other alternative, would be to read everything into a Python list, and use a list comprehension on it, but that kind of goes against the point of having a SQL database.
The `COPY server.py` should be after the one for requirements and running pip install so docker can cache those layers and not run everytime. I wrote some about [common mistakes with docker and python](http://justanr.github.io/mistakes-when-dockerizing-python-apps) most of it is general purpose docker advice with a focus on python
Nice catch, thanks! I'll update it when I get the chance tomorrow. Nice article btw.
I wrote an algo on CloudQuant.com. It was a good start but I have some work to do. This was sample code in the hopes that other developers would take a challenge and clone it, and try to make it profitable. The algo can be found in the Public Scripts / profitable_strategies folder for cloning. 
Talk to your boss to establish business need. She needs to be on board. Maybe build a few examples on your private box with fake mock data. Find out how IT works in your company.. approvals etc. big banks for example already have it available.. but you have to ask the right people..
Suggestions: 1. Don't include `accounts.db`, but instead a `.sql` file that generates the database. Or, since you're using SQLAlchemy create the database when you run the application if it doesn't already exist where you expect it. 2. Set up a proper `views` folder with Blueprints instead of including routes in `app.py` 3. Lift the whole project into a module instead of having everything be in the base of your git repository. 4. Have proper Python function names, `getSession` -&gt; `get_session` 5. Fix your database import logic. In `app.py` you're using `from tabledef import *` where your connection string is hard-coded in `create_engine(..)`. Then, you're creating the engine again with the same hard-coded string a few lines later. Instead you should have a `get_session(..)`-like method where you can request connections to the database you've already instantiated. 6. Don't use tabs, use 4-spaces. 7. This probably isn't doing what you think it's doing `app.config.from_object(__name__)` Good start though! Oh, also, /r/flask exists if you have specific questions about the framework!
So a note up front: it's been a while since I've done it myself but... There used to be pretty good portable Python versions available. Pre setup packages which you can just extract on your desktop or whatever folder you have write access to. Now I wouldn't know how to use it without a terminal/command line, but I'm quite certain those are also available in portable versions. Hope this helps you!
nice, altough the snake can eat itself when steering in the opposite direction. how ressource intensive is this thing?
Python has a module for reading / writing ini files built in: [`ConfigParser`](https://docs.python.org/2/library/configparser.html)
Yes I know about configParser, but I am looking to write my own parser, because I plan to change the format in the future, and it may not resemble an INI file.
Howdy. Packages like PyStan and pymc implement Bayesian statistics, basically where you use a probability distribution to represent a parameter instead of a single number. Doing this requires sampling based approaches, such as a Gibbs sampler, and can be very time intensive. pomegranate doesn't implement Bayesian methods, it implements probabilistic models, which are models based on probability distributions. For example, a hidden Markov models is a probabilistic view on sequence modeling by representing a distribution over sequences, but its parameters are simple numbers, not distributions themselves. It is possible to implement Bayesian versions of these algorithms, such as a Bayesian hidden Markov model, but it would be very complicated. In short, while difficult, you can implement Bayesian versions of the models in pomegranate using PyStan and pymc, but you can't do Bayesian statistics in pomegranate. Let me know if you have any other questions!
That is very strange - I never had a problem like that with Pycharm To confirm : you get the right output when you run the script in a terminal outside of pycharm but no output when you run the script inside pycharm. - You are not using virtual environments which might be different ? - You are not using command aliases which might impact the output. - Within Pycharm - have you restarted the terminal, and run the same command ? - Are the terminals inside and outside of Pycharm using the same current directory, and the same PYTHONPATH ? - Within Pycharm in the python conssole, can you import the module, and run the functions within the console - do they do what is expected ? 
Looks sweet. Thanks for sharing. I'll definitely keep this in mind for future projects! I'd rather it wasn't using sqlalchemy, but maybe that's just me. 
Poked around with async a bit. Maybe my understanding is incomplete, but it doesn't appear to solve problems in user facing applications very well. For example, how would you use it to create a GUI driven program where the GUI lives on one core, and the processing is on another? You can treat the processing like it's IO, but it isn't really. And what if it needs to update the GUI while processing?
No problem!
I was looking into the whole automated trading thing last night, it doesn't seem like this subject has any easy entry point, any place you'd recommend to start with?
My understanding is imcomplete too. I recommend Fluent Python's chapter on async to understand it more. The whole book is awesome anyway. Async is suppose to get "[cooperative multitasking](https://en.wikipedia.org/wiki/Cooperative_multitasking)." Where processes yield control to the main loop. The problem with regular threading is that the OS can high jack control at any moment. With yielding, you explictly say where you hand control to other routines. Async is met to achive clearer cocurrency not parallalism. All coroutines are running on the same thread, meaning one can sink everything else. It's met to be a clearer way to deal with I/O blocking code than threads. For example, expection handling in threads is complicated while with coroutines it's not that much different than normal code. People are still figuring out what's the best way to use async. Async might not work well for gui and processing right now, but that could change in the future with better libraries. I haven't played with async yet. This is just me recalling what I read in Fluent Python.
Please, please, please don't use regexp to parse html. It's unreliable, and Pandas has a much better reader built in! 
This looks good until you need cython/cffi/c-extension/dev installation/custom package namespace name and so on, and so on… but I hope you (or similar pojects (like setup.cfg)) will have enough enthusiasm for feature-rich tool. 👍 
 Python 3.5.2+ (default, Sep 22 2016, 12:18:14) [GCC 6.2.0 20160927] on linux Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; from itertools import izip Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; ImportError: cannot import name 'izip' Python 3 vs 2 aside this doesn't work. A trivial example are the strings 'abcde' and 'bcde'. The longest common substring is 'bcde'. What you have is the longest common prefix. 
Looks great! I second /u/LightShadow's recommendations and add: please [choose a license](https://choosealicense.com/). Responsible folk can't use your code without one.
Ah yes good point, completely forgot. Will do now.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I'm really happy with [pip-tools](https://github.com/jazzband/pip-tools), which does similar things. 
ah k, i figure if no one has been able to pass, i probably wont. they look like they want someone who is battle ready with deep learning, still working on that. i can msg them to see for next summer tho
`izip` became `zip` in Python 3, and is now a built-in. I removed the import line, removed the 'i' in front of 'zip', and put parenthesis around the print stmt, and it ran just fine.
2 player snake game like http://www.best.io/splix-io