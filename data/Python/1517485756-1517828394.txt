[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [python/cpython/.../**pathlib.py#L977** (3.6 ‚Üí 581ce25)](https://github.com/python/cpython/blob/581ce25e1ffa374e62547ef266b6326bee0c54e5/Lib/pathlib.py#L977) ---- 
At one point reddit is making this ‚Äúsimple‚Äù multiplayer pixel paint games. I wonder if that can be done like maybe using Google Spreadsheet... but kind of want to do a very simple ‚Äúapp‚Äù in python that is bidirectional, so I could say have an instant way to send signal to my partner, even if it is just 01000101 or something. Or color. Hut maybe I want it to be as instant as possible. You got point, I think it might be like a messaging or chat app... but more interactive, like streaming, or continously updating. Probably the most basic is a way to play Pong game via app. Not that easy I think ü§î 
You install Windows 7 server pack 1 and all applicable updates. I mean, you don't need humans to clarify error message written in clear english, do you?
I'd try to ask you, since you didn't really bother explaining why, but I won't even try with that name.
&gt;heavy linux skills There's UI, which requires no fucking skill, also few commands in terminal such as `cd` and `ls` aren't hard to remember. I am using sublime3 on my rpi, when I am too lazy to write on my laptop then send files to rpi on every edit. TL;DR fuck off, you have no clue about linux based OS's and most likely never used one, therefore you think it's so hard to learn how to use it and give others bad advice. &gt;It's **really** bad advice. Yours is indeed. Fuck off.
I bet my old tin can with 384MB RAM, 500Mhz single core processor and 24 GB storage space from 20+ years ago could run python2 interpreter from an ancient version as it couldn't really pull anything better than Windows XP, so I don't know what you're worried about.
Are the prices calculated server side or a new request back to the server? Perhaps there is javascript code you can extract the different prices from?
I don't think there's a fundamental problem from the Zen point-of-view. The article pushes pathlib as a way to get around lazy coders. I've personally always been using `os.path` and see no obvious reason to shift
As long as you don't need mutability you could also use named tuples.
Damn. You got me. What is a computer.
You're missing one backslash (Reddit markup ate it)
Morning y'all! I'm Sean, the VP of Engineering at Wallaroo Labs. I wanted to thank everyone from /r/python who gave us feedback on the first Wallaroo Python API. Y'all were awesome. Thank you for taking the time to correspond and talk with us. You gave us some great ideas and validated others that we had.
Ah, `any` would be good. 
By definition of a computer, Raspberry Pi is a computer. Go learn about computers and how they work before you start giving shit advice.
Thank you for telling me about what a computer is. How can I get as smart as you?
I am sorry that your mother dropped you on your head as a child resulting in you being unable to keep a proper conversation without derailing it and being incapable of opening a new tab and entering "what is a computer?".
You're asking me if my mother dropped me on my head, but you can't tell that I'm being facetious? Wow dude. 
How about stop projecting on me and go back to r/iamverysmart, since you're so smart and can tell us how bad our advice is and how RPI is not acomputer :) And I know that you were "facetious and patronizing", did you miss the "derailing the conversation" part? Fucking retard.
So whenever I get No modules named name.something, I do pip install name and it should be ok?
here's my code if any of you are interested. &gt;import tkinter &gt;from tkinter import * &gt;from PIL import Image, ImageTk &gt;from random import randint &gt;class Ball: &gt; def __init__(self, canvas, x1, y1, x2, y2): &gt; self.x1 = x1 &gt; self.y1 = y1 &gt; self.x2 = x2 &gt; self.y2 = y2 &gt; self.canvas = canvas &gt; self.ball = canvas.create_oval(self.x1, self.y1, self.x2, &gt;self.y2, fill='red') &gt; def move_ball(self): &gt; while True: &gt; self.canvas.move(self.ball, 0 ,2) &gt; self.canvas.after(5) &gt; self.canvas.update() &gt; &gt;master = Tk() &gt; &gt;x = randint(200,2000) &gt; &gt;canvas = Canvas(master) #creates the canvas &gt;canvas.pack(side = RIGHT, fill = BOTH, expand = True) &gt; &gt;image=Image.open("mug.png") &gt;photo= ImageTk.PhotoImage(image) #format .png so it's usable &gt; &gt;image = ImageTk.PhotoImage(file = &gt;"H:/programming/mug.png") &gt;canvas.create_image(x, 900, image = image) #place .png on &gt;canvas &gt; &gt;ball1=Ball(canvas, 60, 60, 80, 80) &gt;ball1.move_ball() &gt; &gt;mainloop() 
Who exactly is forcing you to use data classes?
Ok thanks. python3 is python for python version 3.0? I am using python 2.7.
Code I download that uses it?
PyFilesystem author here. If anyone has any questions...
If you expect to get any help, please look at how you format code with the formatting help. 4 spaces, not quoting. My google was "tkinter mouse click" and first result is this: http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm Look at the &lt;Button-1&gt; callback.
Which specific version is behind the command depends on which is installed. You can run python -v or python3 -v to check the specific version. Any particular reason to use the outdated version?
&gt;since you're so smart and can tell us how bad our advice is and how RPI is not acomputer :) You mean like the comment chain that you're on, where I explained my reasoning and offered alternatives. &gt;And I know that you were "facetious and patronizing", did you miss the "derailing the conversation" part? Fucking retard. You're not conversing. You're not having an argument. You're calling me names and saying that my arguments are wrong without offering any kind of dispute. What am I derailing, exactly? You're not smart enough to realize that you're not actually offering anything to dispute, but you're confused why I'm not disputing it. Because that makes sense. Of course an RPi is a computer by the textbook definition. So is the thing in my car or my refrigerator. I could probably hack my fridge to run a desktop environment. But I'm not going to try to use my car or a refrigerator as a replacement for my desktop PC, as is being suggested here.
Is this a serious reply?
Yeah, you'll be fine, especially if you target scientific programming jobs. You've got the right background to work as a data scientist too. Based on the code on Github, I'd have no problem hiring you as a junior, assuming you didn't completely tank in a straightforward technical interview.
These are only type "hints" -- they do no type checking or coercion out of the box. For example, with namedtuples: import typing class Foo(typing.NamedTuple): bar: int Writing `Foo(bar='not a number!')` gives you an object whose `bar` attribute is a string, not an int. The hints are there for your IDE, documentation, and static type checkers like mypy, among other things.
Good bot!
The author mentions this is a python "hack", but I believe you're correct; NTFS has supported this since it started. `command.com`, and `cmd.exe` didn't. IIRC, and I may not.
Try r/learnpython :)
There was a good question on the blog post : Do you have combined examples, e.g. zip on an ftp ?
You should have a project directory which contains build cruft, `setup.py`, README etc., and also contains your package (whether it be a single file or a directory). When I have config and data files in the project root, I have a `paths.py` or `constants.py` in the package which use a pattern like `Path(__file__).abspath().parent.parent / config / 'my_config.json'` to get a firm, absolute link to it. For tests, there are a few ways of doing it. Easiest is to have a `tests` package inside your main package (where it has access to the package and everything beneath it), but that's not always as clear as it could be, and packages unnecessary stuff for non-developers, and so on. You can have a `tests` package in your project directory and rely on your developers `pip install -e .`ing before running any tests (this might be a good use case to have a `Makefile` with a `test` recipe which installs and runs your tests, whatever form they may take). Kenneth Reitz, author of `requests` (among other things), and holder of many opinions for humans, suggests a `tests` package in your project root, which has a `context.py` file which does some manipulation on your path: your tests would then access your package via `from .context import my_package`. I'm not much a fan of this last because it feels like it changes how imports work, which is an important thing to test.
xkcd has a json API: https://xkcd.com/json.html
What operator overloading? pathlib uses [joinpath](https://docs.python.org/3.4/library/pathlib.html#pathlib.PurePath.joinpath) to combine. `os.path.sep` doesn't take into account existing slashes (`'c:\hello\' + sep + 'world'`) or allow you to swap in Linux paths on Windows (or vice versa) with virtually the same code.
The most obvious benefit is having a strongly typed path object. def do_thing(file: str, text: str) -&gt; str: vs. def do_thing(file: Path, text: str) -&gt; Path: Which method is more obvious that it expects a full path?
You can open a ZipFS from a file object. For instance, this will show you all the files in a zip file on an ftp server. with open_fs('ftp://example.org') as ftp_fs: with ftp_fs.open('myzip.zip', 'rb') as zip_file: with ZipFS(zip_file) as zip_fs: zip_fs.tree() And here's how you could compress the contents of your `~/projects` folder and upload it to an ftp server. with open_fs('ftp://example.org') as ftp_fs: with ftp_fs.open('myzip.zip', 'wb') as zip_file: with ZipFS(zip_file, create=True) as zip_fs: copy_fs('~/projects', zip_fs) 
I'm not interested in having a discussion with a stranger about a topic that's unrelated to the comment I was responding to. 
So you are upset that other people might write code with typing that you might someday run, but otherwise has absolutely no impact on you? I don‚Äôt follow. 
Downvoted: &gt;/r/learnpython &gt;caps &gt;no information &gt;easily googleable Also, read about what you're using before using it. It should be pretty clear it will be in the dist folder.
Apples and oranges.
`$ python3X`, where `X` is the minor version. This works if the PATH variable is set, anyway.
Do you not think that UI consistency matters for people outside a little community of people who've just gotten used to it? **IT WAS ENTIRELY RELATED TO BUT YOU COULDN'T EVEN FOLLOW**. Don't try my patience with your inability to follow a thread, or respond in full sentences. I *was* being quite patient. If you don't want to have inane discussion, don't make inane non-points, and then expect people _not to follow up on them_. And on the Internet, everybody's a stranger. Deal with it. It's entirely irrelevant to having a logical discussion.
Oh no, a language differs from another! Quick! Get on your high horse and call it a disadvantage of said language!
You might want to check out pex. It builds a virtualenv inside a zip file and so when you run the pex file you're doing it the context of that virtual env. Since it's essentially a zip file all you need to do if you want to distribute is copy the file and the whole Virtenv ends up on the new system. if you had requirements for os packages rather than just pip packages than you might have to wrap it in something to get those installed and maybe docker or something is a better solution. But if you just need a lightweight portable virtual env container pex is a pretty easy solution. https://github.com/pantsbuild/pex
I like this, and is what I would (and have) use but I've always got a little voice in the back of my head telling me that the nested loop solution is more explicit and easier to read.
Oh fuck off already and go back to the basement where your mom keeps her autistic children.
I am working on a reddit bot that asks a user to enter a subreddit and number of pictures they want to download. I just started last night but have a functioning bot that can be found [here](https://github.com/georgeglessner/ImgurBot). If anyone has any suggestions for how I can improve, or any new features I should add please let me know!
Saying ‚Äúwith‚Äù isn‚Äôt mandatory and implying RAII is in C++ is dishonest. 
Through browser server sees a lot. https://panopticlick.eff.org/ So through python server sees the same things and will detect somewhat the same fingerprint?
You can type python3 in the CLI
So, is this stable enough to appear in the major Linux distributions? We abandoned wxPython because the company migrated to Python 3 and it was not available at that moment. But I remember having fun with wxPython and Python 2. 
Some people are going to use typing in Python 3. Libraries especially, I feel. Data classes aren't the only place you're going to encounter typing in other people's code.
The PEP even talks about it as part of its motivation.
Thanks! I was hoping some setter was autogenerated that only allowed for int when given an int, but I guess I will have to write the setter for those myself. It is a shame it is not part of the default to just have those setters.
I rewrote your stateless computation split code for you Python 2.7 &gt;&gt;&gt; "Hello there. How are you?".lower().translate(None, string.punctuation).split() ['hello', 'there', 'how', 'are', 'you'] Python 3.4+ "Hello there. How are you?".lower().translate(str.maketrans('', '', string.punctuation)).split(" ")
The example at the top uses operator overloading (forward slash as a shorthand for joining paths): https://docs.python.org/3.6/library/pathlib.html#basic-use
/u/stevenjd's answer is totally valid, but pathlib makes this easier too! This will list the base filenames of all files in a folder: from pathlib import Path folder = Path("source_data/text_files/") for path in folder.glob("*"): print(path.name) It works just like the normal glob.glob() function call but pathlib has tons of shortcuts for things like getting the filename, extension, etc. 
Depends on what you're searching for. If it's just some arbitrary text pattern, you don't need to have it in this structured format‚Äîjust search the string, or use regex. Otherwise iterate through the dictionaries and look for the kind of data you want.
Step 1: read the sidebar Step 2: go to the correct subreddit Step 3: read the sidebar in that subreddit
Too bad I'm not using Json and i wanted to do it myself ¬Ø\_(„ÉÑ)_/¬Ø
You dropped this \ *** ^^To ^^prevent ^^any ^^more ^^lost ^^limbs ^^throughout ^^Reddit, ^^correctly ^^escape ^^the ^^arms ^^and ^^shoulders ^^by ^^typing ^^the ^^shrug ^^as ^^`¬Ø\\\_(„ÉÑ)_/¬Ø`
I like this bot
Can I see the source code? I can‚Äôt find it. 
For example I want to look for **Galaxy s7 case**, look through "page_title" and return top 5 dictionaries based on "price". The thing is that if a "page_title" is "Galaxy S7 Blue Case", by search **galaxy s7 case** it won't return it with regex because is not a perfect match.
Regex‚Äôs are useful for exactly this reason - you don‚Äôt need exact matches, just match patterns. Look up the docs on the `re` library and you will find examples on how to match a pattern that includes your target and ignores other words/characters. If your struggling you can post your code and then we can help you from there. Also as somebody will point out these types of questions will get more love over on /r/learnpython - keep in mind for next time. :)
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
I would suggest you to put the date into sql database and use full text search. Here is an example of using FTS with SQlite: http://www.sqlitetutorial.net/sqlite-full-text-search/
Have a look at [jq](https://stedolan.github.io/jq/). It let's you write an extended JSON-Path syntax and maybe supports your use case out of the box.
Okay. This, is useful. Can it also ssh:// urls? (Sftp)?
Format it sensibly and some one may reply....
I have a code that is essentially a python version of Unison and uses ssh and rsync calls. (it is only *nix compatible). I have been considering supporting other methods such as WebDAV, FTP, and S3 by using PyFileSystem. The problem I keep running into is that, from the code, I see not all systems support all opperations. Is there a well-documented list of what is supported? For example, I know BackBlaze B2 does not support file moves and I've heard mixed answers about S3. Does PyFileSystem support it? Also, It would be really cool to have an encrypted file system. Something like a disk image.
Doing my Mchem project I had to code on mac and then windows at home. O how I wish I knew this. 
&gt; It will either inherit from PosixPath of WindowsPath. As in *surprise me*? Looks like Path is an abstract class. An instance **must** know the flavour: basically, slashes or backslashes. You're basically telling someone to make a turn: "it has to be either left or right, I dunno". Please tell me it wasn't marked as the right answer on StackOverflow. :( 
If you look at the code I linked in the top-most comment, the Path constructor does not return a Path, it returns either a WindowsPath or a PosixPath, which is what messes with inheritance. In fact, WindowsPath and PosixPath inherit from Path. This is a case of a parent class returning a child class from its constructor, which is wrong in multiple ways.
Just gona: RemindMe! 10 hours Currently no working pc near me...
I will be messaging you on [**2018-02-02 04:34:39 UTC**](http://www.wolframalpha.com/input/?i=2018-02-02 04:34:39 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/7ui4w8/pyfilesystem_files_are_files_no_matter_where_they/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/7ui4w8/pyfilesystem_files_are_files_no_matter_where_they/]%0A%0ARemindMe! 10 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Path is an abstract class. An instance must know the flavour. You can easily inherit from it, but not instantiate it. No OOP hole here.
Oh okay, yeah I get what you're saying. Let's call it a practicality hole then?
You might want to look into [pandas](https://pandas.pydata.org/). Then your example would just be df = pandas.read_csv(r'C:\Circuits.csv') for index, row in df.iterrows(): print(row['CIRCUIT_ID'], row['Cust']) This will load the entire file into memory, but I believe so will your PowerShell example (but not your vanilla Python example).
Environments. Anaconda is the easiest way to do it in Windows. I had anaconda 2 and anaconda 3 installed in my deb√≠an and choose the executable to use in the pycharm project settings
/r/learnpython and try pandas https://spectraldifferences.wordpress.com/2014/04/08/import-csv-into-python-using-pandas/
Use `csv.DictReader`. import csv with open(r'C:\Circuits.csv') as csvfile: readCSV = csv.DictReader(csvfile) for row in readCSV: print('{CIRCUIT_ID} - {Cust}'.format(**row)) Or for an enormous amount of data crunching power, use `pandas`. 
Since OP is used to dot access; we may as well point out that pandas allows dot access too: print(row.CIRCUIT_ID, row.Cust) 
I believe this sort of info is sent as part of your request headers, which you can get with `response.request.headers` as described here: http://docs.python-requests.org/en/master/user/advanced/#request-and-response-objects
In this tutorial I will show how to create a mkdocs template with Cookiecutter that you can use everytime you create a new project documentation.
No, it won't do any implicit type-checking at runtime. Instead, you can run a type checker (like mypy, although I don't know whether the current version of mypy already supports data classes) before you run your code. It will warn you, so you can explicitly rewrite your code to `x: float` or to `x = int(6/3)`.
Pyinstaller does what you want but you don't have to install anything on the new computer 
I have a module that provides a standard dictionary interface to multiple key-values stores including redis, mysql, S3, and the file system. Next time I work on it, I may add PyFilesystem support. Looks like a cool module!
I fixed the newline/empty string issue, too. import string input = """ This one time, at band camp... Sometimes, there are butts?""" # Python 2.7 list(filter(None, input.lower().replace("\n", " ").translate(None, string.punctuation).split())) # Python 3.4+ list(filter(None, input.lower().translate(str.maketrans('', '', string.punctuation+'\n')).split()))
A third way to do it is to unpack each row into columns without ever assigning it to a row variable, like this: import csv with open(r'''C:\Circuits.csv''') as csvfile: readCSV = csv.reader(csvfile, delimiter=',') for (CIRCUIT_ID, Cust) in readCSV: #each iteration, the list of [row1, row2] gets unpacked to two variables named CIRCUIT_ID and Cust print(CIRCUIT_ID, Cust)
AHH. Thank you! For some reason I thought this was the learnpython forum--oops! 
Neat; it's like FUSE but in Python instead of the kernel. This could be useful for accessing large geodata. Both raster and vector data can be terabytes big but the servers tend to have filesystem-like structuring to allow access to just the parts of the data you need.
The original example doesn't take the punctuation away from inside of a word. For example, `"It's"`. &gt;&gt;&gt; split("It's a beautiful day") ["it's", 'a', 'beautiful', 'day'] &gt;&gt;&gt; "It's a beautiful day".lower().replace("\n", " ").translate(str.maketrans('', '', string.punctuation)).split(" ") ['its', 'a', 'beautiful', 'day'] 
It is wrong indeed. But `class MyPath(type(Path()))` is not a solution, it's unpredictable and that's wronger. The solution would be to a) decide how you want to go about the flavour, because we're still in the abstract land without it, and b) overriding the constructor(s) accordingly.
Is that code available anywhere? I kind of want to see a Python Unison variant...
Thanks for the info. I am not even sure if all systems have a copy or just a download, reupload, delete. Do you know if there are plans to support B2? There are a few python interfaces I‚Äôve seen on github but if PyFilesystem eventually supports it, I can basically do any of the others. 
Is there an example of inheritance using dataclass ?
Hi, I asked the question on the blog post. Do you think you could natively support combined URLs ? zip://ftp://stuartaxon.com/backup.zip/files/secrets.txt ?
Sure. RemindMe! Three days
I will be messaging you on [**2018-02-04 19:58:21 UTC**](http://www.wolframalpha.com/input/?i=2018-02-04 19:58:21 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/7k2eoo/more_people_should_join_the_efforts_of_brython_to/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/7k2eoo/more_people_should_join_the_efforts_of_brython_to/]%0A%0ARemindMe! Three days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Do you do any sort of caching inside this, I can imagine some speed optimisation's, e.g. inside zip files.
I should flaming well hope so after the amount of work that's been put into by Robin Dunn and others.
Yeah I do use join(), but I also use stuff like sep.join([‚Äòc:‚Äô, ‚Äòhello‚Äô, ‚Äòworld‚Äô]). There are many wats to skin that cat. I don‚Äôt see why it shouldn‚Äôt be cross platform; as long as you use the right locations (expanduser etc) os.path.sep or os.path.join are both cross platform.
You have an answer but where oh where do you get the idea that you need that unpythonic loop? How about:- for i, digit in enumerate(t[1]): k += int(digit, base) * base ** (- i - 1)
Thanks, I'll update that.
Since the author didn't care to mention GNU/Linux at all, I'm assuming this works with festival? There are so many things wrong with this post ‚Äî even if one can manage to completely ignore the dude's avatar üòÇ
dear god.... Just put the data in a sqlite database
Worked like a charm! Thanks!
+1 from me for easily the best answer. Why some folk recommend a third party module when it can easily be achieved with something from the stdlib I find quite staggering.
Hello, I did it finally by myself. I learnt flask and used unity3d and litjson to get and parse the json data. Thank you for your advise at the first place. :)
Yes you can just declare types as `None`. The types aren't static either, they are still just type *hints*. You don't even have to use dataclasses, just use `attrs` which has been around for ever and is more powerful anyway. 
Depending on context, that may not be very pythonic. In any case, you should use `property.setter` rather than an actual setter. 
Any plans of adding Hadoop FS support?
I can‚Äôt think off the top of my head what split does with quotes, can you enlighten me?
Nothing. It ignores them entirely.
&gt;I am trying to update the files from an old version to a new version To a new version of ISIS?
Thank you both for the help!
The author calls the module pyssx3 at one point. Also, yes, I understand it is available on all platforms, but that doesn't necessarily make it clear as to what specific TTS package(s) it works with. 
Thanks all!
So it this awesome program that is terribly named. It is called ISIS. https://isis.astrogeology.usgs.gov
well that does not work at all... import pyttsx3 def say(text): engine.say(text) engine.runAndWait() say("Hello World!") who needs actually working samples in a sort of tutorial article.
I couldn't think more oppositely. Since pathlib appeared I have used it in nearly every program I write. Writing `if mfile.exists():` instead of `if os.path.exists(mfile):` as one example is clearer to read and less verbose.
I am working on building a test automation framework at work. 
What I think I would do is read a line, and tokenize it (break it into pieces). Then figure out what token goes where in the new syntax, and rewrite it in the new syntax.
What version of python are you running this against?
It's `elif`, not `else if`. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Move the closing paren from just before the ‚Äú.format‚Äù to the end of the line. You have it written as input().format() which is invalid.
How hard is that?
2.7.13 is the set of numbers at the top
Many thanks, I'll try that!
oh, okay. My bad.
There were a lot of little formatting mistakes. Try this: https://repl.it/repls/CurlyCrookedBarbet
I think I'm just going to use the pypi package path.py next time. Lately I find that a lot of stdlib additions have superior alternatives in pypi already, like dataclasses and attrs.
Then **DON'T** use `input`, always use `raw_input`. Better yet move to Python 3 as 2 hits EOL in just over two years.
Sounds like you want the `attrs` library, which inspired data classes and is much more powerful :-) 
...EOL?
How would I use this to parse and read multiple files of the same type, in the same data_folder (ie: xls, fastq, etc...)
End of life
Python is not the right choice for mobile development. You can go native and build it with Objective-C/Swift for iOS using Xcode, and Java using Android Studio, or you could go cross platform and use something like Xamarin and write in C#. If you're just wanting to make a simple text game for your computer, and not on a phone, go with Python.
No problem! And remember, write a line of code, then run and test it. That way it‚Äôs easier to identify when you have a syntax error and then can immediately fix it. 
That would be difficult to do (or at least slow) unless you assume all zip files end in .zip - and I have no idea how it would work for something like a Veracrypt file which has no specific extension.
An experienced coder could do this job in 10 mins or so (depending on exactly how different the 2 file formats are) but with little/no experience it could take you many days. Perhaps consider a freelancer?
Yeah, that is probably a good idea. Where is a good place to hire someone to do that?
End of life.
I'm personally a fan of virtualenvwrapper--essentially an add-on to virtualenv that provides some simple commands. That is sort of neither here nor there though. If you truly want a packaged executable a few options have been mentioned. If, however, you are looking to distribute your code so you or other people can easily load it into a virtualenvironment there are 2 options below. On the real issue. Within in your virtualenv you should be able to just use "pip freeze" to get a list of installed packages in your environment. The [freeze page](https://pip.pypa.io/en/stable/reference/pip_freeze/) has an example of how to use it to make a file to get requirements then load those requirements. One caveat is you need to either ignore global packages or make sure your virtualenv is configured to not use global. Another option is to use a "setup.py" file. [Setup Python Stuff](https://docs.python.org/3/distutils/setupscript.html) . Probably a bit more robust--but can be as simple or as complex as you want. Useful if you want to setup a git repository and have a simple way to let others use download and use your script (assuming they have python already). Full [Setup Tools Documentation](http://setuptools.readthedocs.io/en/latest/setuptools.html) -- you may want to check out the "find_packages" option and some tutorials.
[removed]
/r/ProgrammingTasks is a subreddit for problems like this.
Here's a sneak peek of /r/ProgrammingTasks using the [top posts](https://np.reddit.com/r/ProgrammingTasks/top/?sort=top&amp;t=all) of all time! \#1: [\[FREE\] Willing to tutor beginners in Computer Science](https://np.reddit.com/r/ProgrammingTasks/comments/7acyl8/free_willing_to_tutor_beginners_in_computer/) \#2: [The goal of this subreddit is to become a place where people can post a programming task, along with a amount of money they are offering for said task. So it's like /r/slavelabour, but with a focus on programming, data, and STEM tasks in general.](https://np.reddit.com/r/ProgrammingTasks/comments/7ac67e/the_goal_of_this_subreddit_is_to_become_a_place/) \#3: [This subreddit is just starting up, so there won't be too many \[Task\]s. But if you're interested in programming for money, put of an \[Offer\] posts where you best describe your skills, and an idea of what and how much you can do for a certain amount of money.](https://np.reddit.com/r/ProgrammingTasks/comments/7accpd/this_subreddit_is_just_starting_up_so_there_wont/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
the input function sends a prompt to the screen and waits for user input, but since in most cases you aren't capturing what the user inputs (i.e. you aren't using what input returns), then I assume you just want to send something to the screen, and then wait for a response. In that case it would be 'better' to use print to generate your output, and then have a single call to input right at the end of the function - that way it makes the code more readable. Also a few more stylistic suggestions : 1. your function doesn't have a doc string - they are a useful habit to get into - generally it means that someone only has to read the first few lines of the function to know what it does (and why - rather than reading all of the code and trying to work out what it does - https://docs.python.org/3/tutorial/controlflow.html#documentation-strings (the same advice applies to Python 2.7. Without the doc string I am still not sure what c1, c2, c1Tally, c2Tally and x actually are. 2) personally - I would prompt for the choice of ratio or percentage outside of the function - and then pass R/P into the function as an argument. 3) This function seems to do two things - it either explicitly calculates the percentages of c1Tally of x and c2Tally of x and displays those results or it displays c1Tally and c2Tally formatted as a ratio - with no calculation at all; although at first glance ratios and percentages seem related - this i think is actually two functions, since in one place you use c1Tally, c2Tally &amp; x (and ignore c1 &amp; c2 completely, and in the other branch you just display c1, c2, c1Tally, c2Tally with no use of 'x' and no calculation.
You will want to use the contours' hierarchy [(link)](https://docs.opencv.org/3.4.0/d9/d8b/tutorial_py_contours_hierarchy.html) to be more selective when it comes to "regions within regions". I'm not entirely clear on your goal, so I can't offer much more advice. but I think that's a good place to start. 
Uri support something like ftp+zip://
Yes indeed, it's a complete no-brainer as far as I'm concerned.
Perfect case for elasticsearch
thanks
i would go with option 3: pandas.
thanks
...by clicking on `formatting help` to start with :-)
Badly written Python is vastly superior to badly written c++.
Why would I use your product over this: https://notebooks.azure.com/help/jupyter-notebooks
Yep, as I like to say the "article" is about as much use as a wet fart in a thunderstorm.
When called, the function finds its own name and returns the next name. It doesn't look into the objects. &gt;&gt;&gt; name_of(x) 'x' Doesn't need to know what x is, it only recognizes that an object was loaded. I decided to only work with a single name, but in an earlier version I abused frame lookups to allow the following: &gt;&gt;&gt; x, y = 0, 1 &gt;&gt;&gt; pkd_args = x, y &gt;&gt;&gt; with name_of(pkd_args) as t: print(vars(t)) Would print: {'x': 'x', 'y': 'y'} This feature also worked across functions (with tuple/list/set). Although it could be tricked if two objects were identical. It's an interesting problem that a variable does not know its own name.
I think my code review would blow up for use of a good library. I posted this because I had to defend my use of csv this morning instead of readline and split.
This isn't really the place for this sort of post, /r/learnprogramming or /r/learnprogramming should be able to help 
haha, that's ridiculous. but yeah, csv is definitely better than split().
I was just learning about pathlib today. One thing that I hoped to do is deleting empty directories. But there is no Path.is_empty_dir() or something similar. Does anyone know how to easily check if a directory is empty?
Rotation is relatively easy; scale is hard. You take the Fourier transform of your image, take the magnitude of the complex values, and then polar transform the Fourier magnitude. Now you can cross-correlate your polar Fourier magnitudes, and the x-axis shift will give you the rotation. Technically the y-axis shift is scale, but it's log10 scale, so it's really, really, really sensitive to noise. 
Do you plan to add support for Google's colab notebooks?
I agree, if there‚Äôs a standard library operation for something there‚Äôs no reason not to use it, especially if it‚Äôs easier and better.
Run, run and never look back. Working with imbeciles will damadge you. If you have to defend using module from stdlib to solve a problem it was designed for... Run!
Trying to finished up a tool that can skip intros for tvshows for plex
Not immediately no, but it‚Äôs something I want to look into later on. Main problem is that although it would undoubtedly work well on larger screens and faster phones, the app would need to ensure reasonable performance on smaller screens and slower hardware as well.
FYI you might also try posting on [stack overflow](https://stackoverflow.com/questions/tagged/opencv).
why is the local filesystem protocol called "osfs" and not the standard "file"?
Happy to send in a request to them, it's the least I can do
Like this! from pathlib import Path folder = Path("path/to/xls_files/") for xls_file in folder.glob("*.xls"): do_something_with_file(xls_file)
Real editors do the imports for you, so you can type `if exists`, hit Alt-Enter, and lo, `from os.path import exists`appears at the top of your file.
As stated in the blog he asked them to look at it for the 3rd issue and they responding after seeing it was using a ridiculous amount of resources. 
I saw that now that I had a chance to really go over it. I was at work on break when I saw this and had more questions than I did time to read lol
Wish I could, but it's graduate studies.
can you explain this for a novice? :D
It's just a funny comment. &gt; You can die using this feature. Tread lightly.
Interestingly enough today I learned that `"This" + false` in Java is legit. Which is weird (I mean I guess it's operator overloading, but *still*)
This won't work unless you install espeak: sudo apt-get install espeak The voice sounds like ... well not as good as your last bad phone call. For a better voice, use Google's live api for text to voice. 
FYI git doesn't store deltas, however you are right that alternating commits between two sets of content will only incur a size increase due to metadata. Git stores the metadata in one file and the content in another, both identified by their SHA-1 hash. Since you're alternating between 'dot' and 'not dot', each 'dot' has the exact same SHA-1 and each 'not dot' as well, so after the first iteration the commit metadata just references the earlier SHA-1 hash of the content (free de-duplication!). In practice, this also means that: 1. Git still lists each file present in the commit, but any not-changed file has the same SHA-1 hash so you can reference it instead of copying of the file (svn does the same) 2. You can actually duplicate the same file into 1000s of copies in your repository and, no matter how large, there will only be one copy of the content. The metadata of filename -&gt; SHA-1 is just tens of bytes per file so it's very inexpensive. * Related to this is the reason why git cannot store empty directories - no files inside means no SHA-1 hashes to 'store' a reference to the directory (directories themselves cannot be hashed). * It's also how git can immediately detect a renamed file without a `git mv` command like svn has - file A was deleted and file B created in same commit, both have the same hash, that's obviously a rename :)
Pls someone answer better. I‚Äôm not so retarded as to miss the pun but I don‚Äôt snakes very well.
The comment is the coding equivalent of [Here be dragons](https://en.wikipedia.org/wiki/Here_be_dragons), so the simple explanation is basically "scary stuff, dangerous magic". I don't know much about curio (so this is probably wrong), but it looks like this feature allows the decorated function to hook into the innermost workings of the task execution environment provided by the framework. So you could use this to debug some extremely low-level problem with curio, say if some of your processes were deadlocking in obscure cases. But it'd be dangerous to use this in production code because any function you decorated would run _all the time_, maybe anytime a process started, stopped, suspended, resumed, etc. You could probably lock up a whole system if you tried to do anything complicated inside the trap.
**Here be dragons** "Here be dragons" means dangerous or unexplored territories, in imitation of a medieval practice of putting illustrations of dragons, sea monsters and other mythological creatures on uncharted areas of maps. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
It's not really a pun, it's more of a "please don't do this unless you know what you're doing" sort of thing. Essentially, if a kernel fault happens, it calls a certain function that's mapped to handle that fault. In this case, you can override a particular fault to call a specific user function. This isn't always ideal if the user function isn't behaving correctly or if the user function causes a double fault, in which case the kernel will lock up and probably die. 
If you list out all your questions and PM them to me I'll try to answer them all for free!
its a .ipnyb file, can you open something like that? If so I can just send you the file and we can go from there.
What sort of material are you covering?
...FYI, i'm dealing a lot with lists/dictionaries and working with working with/pulling info out of API's
Reading, retrieving, and accessing JSON data
Has to be tomorrow, unfortunately. Thanks though!
This is a subreddit for a programming language, not snakes.
Video is removed. Anyone have a alternative source?
Use the API! 
I use gTTS which is Google's version. Could be a problem because it submits each request over the internet and gets back an mp3. Works for me but I wanted to mention that con. Other than that, the speech is great since it's backed by Google. I use it on py 2/3 in Windows and Linux. I don't have it memorized but it's a simple pip install for both OSs.
Yes - always! I thought of using Reddit as an example to demonstrate web scraping for beginners. 
Ugh, json. All my projects jump on that bandwagon.
Does this support [`casync`](https://github.com/systemd/casync/)? Because is looking *really* powerful for incremental updates.
Kudos to the sub, I've seen so many "go to /r/learnpython" responses when someone comes here trying to learn. This was a refreshing change to see how many were willing to help!
JSON is nice once you get used to it.
Looks like it replaces a syscall in the kernel syscall table with your own custom syscall. 
PM me if you want, don't worry about paying. I can take a peek tomorrow and see if I can help!
That's completely irrelevant. "Tread lightly" just means "be careful." There is no pun. It's a warning because by using this, you are extending core functionality of the kernel and can easily break the the entire kernel.
This just extends existing functionality. You can see it in use [here](https://github.com/dabeaz/curio/blob/018d66a6cff523c4b64114f2a4b22229d96fa34d/curio/debug.py#L82) where it is used to create a log entry each time a trap is called.
Wow, I can't tell you how stoked I am you built this app. Running notebooks in Safari is brutal, but your app makes it smooth and painless. Also helps that I was already using Azure Notebooks so that made it straight forward for me. Thanks! I happily bought pro after 5 minutes. 
I can never get this much help face to face with people. Kudos! 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [PyFilesystem/pyfilesystem/.../**__init__.py** (master ‚Üí 7dfe14a)](https://github.com/PyFilesystem/pyfilesystem/blob/7dfe14ae6c3b9c53543c1c3890232d9f37579f34/fs/expose/fuse/__init__.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dtm230a.)
So... once you turn it into a list of dicts? :)
`import json`
Precisely.
Looks like you have lots of response, but if you can post any of your questions here as well we can look at them.
/r/learnpython but also down to skype. I like explaining things :)
Just an FYI the [#python irc](https://www.python.org/community/irc/) room is pretty helpful for specific questions if you ever get stuck on something.
For the partition function you could consider if 'a' &lt;= data[0] &lt;= 'z': or perhaps return data[0] if data[0].islower() else "!"
Check if there is a class tutor or even e-tutor, intro courses at my school had both but not many people knew 
JSON is fun! There are so many free open APIs to play with. 
Fixing bugs in MonkeyType so I can type hint all out libraries.
Why didn't you name it 'Pylesystem'?
I don't know about you, but I'm subscribed to both and happy to help on either, but I still think it's most appropriate -- and *much* more helpful to people like the OP -- to redirect these sort of questions on to the appropriate subreddit. That's specifically because on that subreddit there's lots of existing resources and answers already available, as well as lots of people there specifically to help. Without that correction what we end up with is channel spam at worst, and forked and competing threads at best.
Happy to help for free. Send me your questions
 first column, "second, is, a, phrase", third column Is this 6 columns of data, or 3? The CSV module deals with the nuance of dialects so you don't have to. Because your time is valuable. Even if each comma is a `\t`.
Using split is dangerous because you may have a comma with quoted text e.g. "city, state, zip". Read up on the "delimiter" parameter for csv.reader. It can very easily be set to use \t. Problem solved.
This is awesome!
Would be very helpful if you included a link to the GitHub discussion you're referencing.
Hmmm, the only time tomorrow would be around 7:30AM pacific.
JSON exists because XML people said the same thing about XML
or dicts of lists ...chicken before the egg?
Yes, but if you just ignore all of that, it's a pretty clever pun about snakes.
I'd be happy for him to ask questions here too but if he wants tonnes of help he'd be welcome there too. 
&gt;do I need to configure the remote machine to allow requests to connect to be allowed Yes. If this wasn't true, bots would be trying to guess your mysql username/password.
Yes, but the mere presence of type hinting doesn‚Äôt force you to implement it or to even care about it. So if you don‚Äôt have to use it yourself, and your code is unaffected, and you don‚Äôt even have to obey the type hints specified (unless you know, you want to pass in the correct types to a class/function/method/etc to avoid exceptions), what *are* you upset about? You don‚Äôt have to change your code or handle any new exceptions. This is what led me to my earlier line of thinking about what you are upset about‚Äî I can‚Äôt think of anything else besides downloading and running code that itself has type hints. I can‚Äôt imagine being upset at the mere *presence* of type hints as that would make the function inputs and outputs more explicit. As we all know, this is better than being implicit. So I am curious, what about type hints is it that makes you upset?
&gt; import json Don't forget the other part of that magic... json.dumps() and its buddy json.loads() 
Right, after looking through the referenced issue, and the commit that closed it, your answer can be found [here](https://pyinstaller.readthedocs.io/en/stable/usage.html#platform-specific-notes) in the Windows section. Unfortunately -- but sensibly -- the answer is, basically, "we're not going to spend time trying to fix this inside PyInstaller, but if you want to provide a pull request that does fix it we're happy to look at it". Bundled EXE has *always* been a brittle solution, and always will be. It's particularly brittle across versions of the underlying OS, and significant changes by the OS manufacturer can and will break bundling. Microsoft has made such a change, and I can understand why the maintainers of PyInstaller don't want to put energy into a dwindling problem; if you need to support &lt;10, build on 7 isn't the best, but also isn't the most unreasonable answer. You could look at [nuitka](http://nuitka.net/index.html) which aims to get around this by *not* merely bundling a minimal Python interpreter with your code, but as they haven't released in a while I'm not sure how well it will work. Alternatively, if this is a new project and you're not trying to continue to supply old expectations, you could simply not bundle an EXE and get your users up to minimally capable of **pip** installation. Admittedly, this doesn't look as simple to your end user, but then they probably have no clue just how much bloat there is in having lots of PyInstaller bundled EXE files around.
PM me, I'm happy to help.
Or: def is_empty_dir(path): return (list(path.glob('*')) == []) 
Take a look at [Python Telegram Bot](https://github.com/python-telegram-bot/python-telegram-bot). It is an easy-to-use library for Telegram so you can focus on your AI implementation.
Wait, so the laser is for work or for fun? Even without real code reviews, having unit tests and regression tests helps a lot, and saves time in the long run. If you need to change/add something, you can do so with impunity. If you break something, you'll know immediately. You don't have to wonder if you broke something, and have something pop up a couple of weeks later after a specific combination of parameters occurs. You'd end up blaming the innocuous thing you did the day before rather than the original one. (But at least you use git.) I did my undergrad and masters in robotics ([my masters research](https://github.com/masasin/spirit); thesis is under releases), but spent seven months looking for any job at all. I'm moving to Belgium next month to work as a data scientist. (Not robotics anymore, but I actually used some of the robotics/CV research the chief data scientist did during his PhD for my own research. He also has SLAM research out.) I haven't worked with deep learning too much yet.
I'm sure he can, ipython is a pretty standard tool
Post it in this thread man....would probably be a good learning experience for a lot of people.
Also the discord server https://discord.gg/jQtfh66
I'll be on most of tomorrow morning; I do a lot of JSON work so I can give you a hand if others aren't available when you need it.
Maybe, but for-loop tuple unpacking is common and it says `itertools.product(x,y,z)` right there so I'd trade it for triple nested. 
Sounds like you have a bunch of inter dependency. Either package everything into one lambda and deal with the massive package or slice it up so the shared resources get cut. We had a similar issue when we migrated our etl scripts and in the end basically rebuilt everything from scratch, so that we don't have to push our inhouse "utilities" module into all the lambdas. Alternatively, depending on the use case and what functions get called when, have a look at step functions. Kinda hard to give you a "best practice" advice without knowing what kind of dependencies the functions share and what the relations between the functions are.
I helped my cousin out with her Python class last year, she studies to become an chemistry engineer. What do you need to learn?
Yea, the deduplication was my point - sorry if that was not clear (of course only after having seen both dot and not dot before).
Have a look at [numpy] (http://www.numpy.org/) 
Thanks. I ended up just wrapping datetime.datetime and manipulating the tzinfo, now I can use type hints to ensure class ADT(datetime.datetime): def __new__(cls, *args, **kwargs): if 'tzinfo' not in kwargs: kwargs['tzinfo'] = datetime.timezone.utc return super().__new__(cls, *args, **kwargs) class NDT(datetime.datetime): def __new__(cls, *args, **kwargs): if 'tzinfo' in kwargs: kwargs['tzinfo'] = None warn('tzinfo passed into Naive Datetime (NDT) object, setting to None') return super().__new__(cls, *args, **kwargs) dt0: ADT = ADT(2018, 1, 1) # UTC aware by default dt1: NDT = NDT(2018, 1, 2) #naive def greater_than(date1: ADT, date2: ADT): return date1 &gt; date2 greater = greater_than(dt0, dt1) # dt1 will raise type hint error
Actually yes. The original PyFilesystem supported something very similar to that. Only with a exclamation mark to separate the filesystem from the path. So your example would be: ``` zip://ftp://stuartaxon.com/backup.zip!/somefolder/secrets.txt ``` That's not supported in PyFilesystem2. Because although its cool, it wasn't actively used. And I've been ruthless about only supporting features that are essential. I could be persuaded otherwise. If you want it, file an issue with your best use-case...
There is no support for B2 that I know of. Best I can offer is that in PyFilesystem2 I've made it as simple as possible to implement new filesystems. You only need to implement [7 methods](https://docs.pyfilesystem.org/en/latest/implementers.html#essential-methods) for a working filesystem.
Not personally. I wish I had the time to implement them all. But we have made it a lot easier to implement filesystems. You only need to implement [7 methods](https://docs.pyfilesystem.org/en/latest/implementers.html#essential-methods).
Getting PRs accepted requires following the design and style of the existing code. I add a new feature, they want it implemented like the previous. Even if it wasn't to get a PR requested, it's bad engineering to mix styles in a project.
Because it sounds like a haemorrhoid treatment.
There are two packages available, pymssql and django-mssql(and it needs pywin32 whereas im using a mac) and both these packages aren't well maintained. Anyway, I'm trying to setup pymssql at the moment. 
Out of curiosity, you mean that Flask version is hard to maintain? Was is better in PHP?
Where appropriate, yeah. ZipFS / TarFS does several kinds of caching. In general though, PyFilesystem avoids caching by default. Particularly with network filesystems, because they can be modified outside of the PyFilesystem interface. You can *optionally* cache directory info with `fs.wrap.cache_directory`. Here's an example: from fs import open_fs from fs.wrap import cache_directory ftp_fs = cache_directory(open_fs('ftp://example.org')) That will assume that nothing is going to modify the ftp server outside of your code, but will avoid excessive requests for directory listings.
Not explicitly. Don't know much about `casync` I'm afraid.
There is some work in progress for that. Not from me though. It will be an external project, to keep the code library maintainable with minimal dependancies.
Don't know about this one specifically, but I'm hoping that as 24-bitcolour terminals with full Unicode support become the norm, curses UIs will start to look a lot better.
python is a server-side language. there are probably transpilers, but you'd be better off just learning javascript
[This file is far more interesting and scarier.](https://github.com/dabeaz/curio/blob/master/curio/meta.py)
Lots of people offering help via PM, which is awesome - but I'd say post the questions here. That way not only will you benefit from the wisdom of /r/Python, but that wisdom is publicly visible for future learners!
Funnily enough, this answer would be unacceptable on SO.
I think the offer to pay put people in a good mood because it implies OP values people's times and people become altruistic in response With that said, pointing to that sub is NOT a dick move at all. It's the proper move. If random &amp; vague requests for help (from newcomers to the language) fill this sub it'll be quite spammy. Specially when they are not specific. Its not like OP asked questions "the smart way" either. He simply put a job posting.
If you wanted it to be used on a GTK desktop you'd use GTK, if it's for a Qt desktop then use Qt. You can always look at the source code for Tint2 and see how it works then translate it to Python. Always good to be able to read and understand any programing language even if you can't write it. 
He didn't mention at the end that besides Python being not a thing he likes, at least it doesn't take 600 years to master, implying that during those 600 years nothing in the language changed.
I was thinking of using bokeh for creating visualisations
Thanks, I'll read about it
There are two packages available, pymssql and django-mssql(and it needs pywin32 whereas im using a mac) and both these packages aren't well maintained. Anyway, I'm trying to setup pymssql at the moment. 
good enough for me :)
What's wrong with pointing OP to /r/learnpython? It's an active sub and the right place for questions like this one.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
Why MS SQL? Who hurt you? Are you ok?
I suggest you try Flask + Mongodb.
Google for "Django MSSQL Database Backend" and find a whole bunch of MS SQL backends, including a few that are updated for Django 2.0 like django-pyodbc-azure
Look up the Slack Python api
Depends what you mean... it‚Äôs possible to template static pages dynamically with Python, such that Python I s generating your front end but not actively running in the page.
python slackclient does not allow me to record responses.
Yes 
 for i in range(1, 13273): ret = getAllSum(target_url+str(i)) total+=ret print(total) Come on now, trying to go to `n+1` page and ending the scraping if page returns expected "wrong page", "bad request", etc is not that hard.
You're not going to find anybody. That somebody must get something out of teaching you and unfortunately, there's nothing that could come out of it. No, not even the potential "I can help you with X, Y". If you're looking for a mentor, you either pay or you're in the same company. Otherwise, they're not as good as they claim to be.
Looks like one needs to setup a hook for receiving messages from channels https://api.slack.com/custom-integrations/outgoing-webhooks Aaand looks like one needs to setup a custom slash command to get DMs https://api.slack.com/custom-integrations/slash-commands
I recall some TAs for a class at my college developing such a thing for office hours. Quick Googling brought me to something similar: https://github.com/marksherriff/oh (not my college though). Now this seems to be 4-5 years old and abandoned, but you can certainly use ideas from it (it being open source), or even contact the author to help your set it up if they're willing.
Feel free to send anything about API to me as well. I've been wanting to get a little better and I feel like breaking into API's (the knowledge, not breaking in) is the next step I need to take.
You should check dash https://plot.ly/dash/getting-started , also, use pythonanywhere.com to host your app.
Python. Best community ever. Wish I could get help like this with other things. Note: All of you do gooders should go to learnpython and answer questions :) 
Well, the code does not work. import pyttsx3 def say(text): engine.say(text) engine.runAndWait() say("Hello world") Gives the error &gt; &gt; NameError: global name 'engine' is not defined
In that case consider using multiple databases with e.g. something like SQLite or Postgres as the default DB for Django and only read the values from MSSQL. If you want to keep Django's ORM you can use the multiple databases feature, although you'll still have to use something like django-mssql. I would probably suggest using something low level like pymssql and run SQL queries directly instead, it will probably be more efficient to use custom queries anyway with raw data than using the ORM.
Am I doing something wrong? Every time I try to read the dogs I get an error that the page doesn‚Äôt exist yet. Every time!
That's true. Safe programming is the key, yet I was trying to make the script short and basic. Thanks for suggestion lol.
Writing a tornado server, which will scrape new posts from the chinese light novels(WuxiaWorld) and sends email updates to all the people who have subscribed for that particular novel. 
Thank you for the heads up on numpy.linspace. I can't find what I want with matplotlib.lines. I found this: https://ask.sagemath.org/question/7958/plotting-arrows-at-the-edges-of-a-curve/ . But, it's in Sage. Is there an easy translation?
Are you just looking to get unique words? Yes, Python can do that, easily, but you can also just use Linux command line tools.
Do you just have a .txt file and need a list of all unique words in it?
Try `cat your_text_file.txt | tr " " "\n" | sort -u`.
You forgot to include any code.
Screw paying man. Private message me and I can help out. If Skype or something would help I'm happy to assist. 
This has nothing to do with being safe, it's just part of it being automatic. If you hardcode, the moment the new page is added, you will miss it.
Don't know what is going wrong there. Think it may be an issue with readthedocs. Can you go to http://pyfilesystem2.readthedocs.io/en/latest/ ?
Project euler is perfect for you
Thanks a lot! I also add ‚Äú &gt; newfile.txt‚Äù and now i have a huge txt dictionary-like file.
```python from time import strftime print(strftime('%y - %m - %d')) ``` will ouput: ``` year - month - day ``` the '%y - %m - %d' is the format used in this case. But the values can be changed to your liking. [Here are all of the formatting options](http://strftime.org/)
No, the PHP site is the pain to have to deal with. Student over the summer built it. Flask is so much easier to deal with. They have requested I add more stuff to the php page(s) it's just driving me nuts because I'm really not that strong in PHP and spend too much time looking up info on how to add those requests. 
Better to just use words and pipe that to sort. You will miss out on little stuff like articles and pronouns, but you probably want to skip then anyways. 
I listen to the liquid dubstep radio station on Google music. Which is weird, as that's not the type of music is usually listen to. It's really good for coding though.
Great. I see your point. Will make it an extensive one.
Yes, nobody is forcing you to work on other people‚Äôs code if you don‚Äôt like it. Everything you said still applies today, but it is done pre-python 3 in docstrings. And if you are actually working on a codebase that isn‚Äôt yours, this just helps eliminate entire classes of bugs related to passing around types that are not expected or handled. So to summarize, this is an easier way to define expected types, which helps reduce bugs, especially when working with unfamiliar code. It‚Äôs been out for quite some time and the fact you are only just now upset about it is pretty indicative of just how much of a non-issue this is. It is literally an additional, optional style. Any project has style guides. If you don‚Äôt follow them, your PR will be denied. Like type annotations,that isn‚Äôt exactly new. 
well, now I have a list of almost 10000 words which contains a huge number of duplicates like ‚Äúyou, you‚Äôre, you‚Äôd, you‚Äôll‚Äù etc. and I have absolutely no idea how to get rid of them
By the correct python solution is set(open('file.txt').read().translate(None,string.punctuation).split())
OP didn't send in the questions to me unfortunately. Having said that if OP does and I get the a-ok to post the questions I'll do so! 
I don't like annotations either. When they added them I said "No, this will lead to mandatory types" and people said I was wrong. Yet here we are, one more step down the same road. I don't really mind if you do or don't like them, but anyone can see the side-effects of adding something into a language means those things get used, and then spread, and soon there're everywhere and not really optional anymore.
I'm home sick from work so I can help. My job is making interfaces with various apis. Anyway hmu
Post it on Github and we'll all be able to view it. 
You misunderstand, which explains why you have such a strong emotional reaction to this topic. You really ought to read about it before solidifying opinions, because it has been clear you are just reacting. Nobody on the core python team wants static typing‚Äî you can go subscribe to the python dev mailing list or read the archives or basically anything at all about how type annotations are meant to work. It has never been proposed and it will likely never be proposed. The amount of breakage involved in introducing static typing would defeat the whole point of using python for anyone with a codebase that didn‚Äôt have 100% coverage with annotations. &gt; I don't like annotations either. When they added them I said "No, this will lead to mandatory types" and people said I was wrong These *are* type annotations. Thats what the functionality is called. They will not lead to mandatory types. They do however help people maintain larger codebase and move from python 2-&gt;3 and introduce major patches. To be 100% open, I thought they were ugly and was initially opposed to using them on my team myself, but I listened to some podcasts with interviews with Guido van Rossum and Dropbox and also the Instagram team talking about how helpful they were in migrating large codebases. 
[arrow simple demo](https://matplotlib.org/examples/pylab_examples/arrow_simple_demo.html) is the best I can find, I don't know about easy :-)
 unique_words = set() # create a set. a set never adds duplicates #open a file and auto close when done with open("my_file.txt, 'r') as my_file_handle: file_content = my_file_handle.read() #read file content to string no_newline_content = file_content.replace("\n"," ") #replace newline with space word_list = no_newline_content.split(" ") #make list by split on spaces #loop through the list and add all items to a set with will ensure no dupes for each_word in word_list: unique_words.add(each_word) 
Hiring for over 100 companies in Columbus, Ohio. JPMC, Nationwide, Cardinal Health, even startups. Some of the companies have python needs. I also have visibility nationally, so feel free to PM me and we can set up a time to connect about the kinds of roles/locations/rates you're targeting.
If you want to write the result to a file: with open("output_file.txt", 'a') as filehandle: for each_word in unique_words: print&gt;&gt;filehandle, each_word
There was a cool python project: the program picked words based on their "global" usage rate. So you get the list of word you probably don't know, and some worth repeated. Picking just unique words is a good strategy, but still leaves the cases where the word u don't know was used more then once. Unfortunately I forgot the name of the project. All I remember it was in python, it was listed in some python related mailing list, it had web interface, the guy who made it was living in Singapore (read the blog post). 
Second this. Please and thanks. 
email?
email?
Overwerk
&gt; sort -u of K900_'s command already made words unique. op seems to want to remove similar sounding and abbreviations removed.
I assume you are aware that the type declaration for a data class is NOT optional? The compiler will not build without the type declaration. I can just about tolerate annotations, but these are very different.
email?
U don't have to pay, just be explicit about what your questions and we can answer them for free :D
&gt; I think the offer to pay put people in a good mood because it implies OP values people's times and people become altruistic in response I actually came to the comments to offer to do it for free. Just to find out the OP has already had plenty of offers. Was wondering why this was different than the 100s of other requests for help on this subreddit. Your sentence explains it perfectly. The OP understands that someone providing help is *worth* something, that our time *is* valuable, and is willing to compensate for it. Those are the kind of people that should be getting help because they are the kind of people that will help others in the future. As opposed to the "copy and paste problem to reddit and let someone else solve my problem" posts.
I Built the Sky Plini Jakub Zytecki And heavy/death metal, too many to name. Normally just create radios from a favorite song. 
Post em here I'm curious
I'm not sure it's what you looking for, but if your output string looks like "2018-01-29T15:08:45.000+0100" then you can simply use split() to get the date/time part iso_format_date = "2018-01-29T15:08:45.000+0100" result = isoiso_format_date.split("T") ['2018-01-29', '15:08:45.000+0100'] 
This was exactly what I was going to say. Except it might be more space efficient to use a generator, as split returns a list.
That would be a lot slower if the directory had a lot of files in it because it would have to list them all. The break is uglier but I think it would be a lot faster. But I haven't actually tested it.
I'm not sure it's what you looking for, but if your output string looks like "2018-01-29T15:08:45.000+0100" then you can simply use split() to get the date/time part &gt;&gt;&gt; iso_format_date_time = "2018-01-29T15:08:45.000+0100" &gt;&gt;&gt; iso_format_date_time.split("T") ['2018-01-29', '15:08:45.000+0100']
The easy, but long way is to go through and just delete them from the file (I assume you already know what they mean). What you're talking about is called [stemming](http://www.nltk.org/howto/stem.html), but I'm not sure if there is much research into non-English stemmers.
You'd need to explain exactly how you separate the words in this case. Does `you're` become a) `you are` or b) `you` and `'re` or c) `you"` and `re` or what? 
For scientific computing purposes, numpy and scipy are (usually) enough, alongside some plotting libraries like matplotlib Later on in your academic software career you may end up working on computational physics projects that require ridiculous levels of performance and funded HPC time, but by that point you'll be fairly intimate with the problem domain and have the knowledge of which tools and languages are best suited for the problem. Until then enjoy the simplicity of python with the performance of great libraries! 
Woo Unix!!! üî•üí•üåàüëç‚úä
I recommend DataCamp.com
Thanks a lot guys, I made a list-dictionary in excel file containing several thousands of words. There are a few straight duplicates, words from another languages and even some code. But really it‚Äôs good enough. So now I‚Äôd spend a few hours making it close to perfect and write all the unknown word down on cards to study them.
Grabbed a few courses on Udemy that helped me a lot https://www.udemy.com/python-complete/learn/v4/overview https://www.udemy.com/30-days-of-python/learn/v4/overview https://www.udemy.com/python-django-programming-beginner-to-advance-tutorial-step-by-step/learn/v4/overview I didn't need much help but I needed something that was good for me to learn.
If you‚Äôre looking for small practice problems you might find /r/dailyprogrammer useful. It has daily problems of varying difficulty that people will try to solve and post their solutions to. Even if you can‚Äôt solve them yet you may learn from others‚Äô solutions.
Shot in the dark here, but are your child processes properly closing the queue (calling `queue.close()` and `queue.join_thread()`). before they exit? Multiprocessing queues use a thread behind the scenes. If you os._exit without cleanly shutting down this thread your queue can end up in an inconsistent state. 
Figured I'll post the code here directly for everyone to easily see. # -*- encoding: utf-8 -*- # !/usr/bin/env python3 """ Accepts the path to a text file and extracts the words from it, without repetition, and writs them to a text file 'unique_words_list.txt' in the samedirectory/folder. """ from pathlib import Path def extract_words(filepath): filepath = Path(filepath).expanduser() text = filepath.read_text() text = text.replace(',', ' ') text = text.replace('\n', ' ') text = set(text.split()) text = set(word.split("'")[0] for word in text) return text if __name__ == '__main__': filepath = input('Enter the path to the text (*.txt) file from which words are to be extracted:') text = extract_words(filepath) Path(filepath.with_name('unique_words_list.txt')).write_text('\n'.join(sorted(text))) 
SQLAlchemy as used by most other Python web frameworks including flask works reasonably well with MSSQL.
If you don't have a problem sharing the text file with me, I am happy to write a comprehensive solution for you. I do need a representative sample to see what I have to do, and to test the code.
The traditional version is ["you are not expected to understand this"](http://catb.org/jargon/html/Y/You-are-not-expected-to-understand-this.html). 
Thanks for supporting Juno! üôÇ I would recommend CoCalc, yes ‚Äî they seem to support a whole lot of various kernels out of the box, and their team has been very helpful in terms of integrating with Juno.
That's what this subreddit is for. Post your problems and we'll help
I have a little idea that can be very useful for thousands of people
Just post it here my man, we got you
By the way, I thought that there were only 10-20 unknown words. And thanks to your solution, I realize that I fooled myself because there were more than 100 words I didn‚Äôt know how to translate. Thanks!
of course, but the only word from this list I needed was ‚Äúyou‚Äù without other forms. that‚Äôs why I called it duplicates.
From the top of my head i think a solution would be to use something like: str(integervariable).count("0")
It's a one liner: def foo(n): return str(n).count('0') 
Sounds like homework. Google is your friend.
Make the number a string and iterate over the string comparing each digit with ‚Äò0‚Äô ``` num_zeros = sum(1 for d in str(number) if d == ‚Äò0‚Äô) ```
I pm'ed you my email.
Start by defining a function that accepts a number as its parameter. Assuming your inputs are integers: Convert your number to a string, separate the values of your string into a list. Revert the values back into 'int' format. Use a counter to measure the amount of times a 0 is in the list. Sorry about the formatting.
First real project in the python-wild: Worked with an API to get all the 911 call logs from my local PD from the last 3 months. (~350,000 calls). Gonna play around with the data and see what sort of cool stuff I can make for r/dataisbeautiful
 def count_zeros(n): result = 0 while n: n, rem = divmod(n, 10) result += not rem return result if __name__ == '__main__': assert count_zeros(130) == 1 assert count_zeros(1001) == 2 assert count_zeros(14324004320) == 3 
If you need a fastest way, come up with several ways to do it and measure their speed (e.g. string operations, maths).
May be copyright infringement.
&gt; With that said, pointing to that sub is NOT a dick move at all. It's the proper move. While the action may not be, the specific phrasing can be seen as dismissive. Sometimes Redditors and programmers are a bit... unempathetic. It's not everyone, and, for some of us, it's not all the time, but when a newbie gets a random sampling of responses, they may come out with a bad impression.
Isn't that cheating?
not great code, unfortunately. Even though it's teaching generators, it should build on Pythonic code, which means using `range` instead of these ridiculous `while` loops. Also PEP8 please.
Python =&gt; snakes. User is saying they're not very good at Python and need a more detailed explanation.
Thanks did not know this could be so simple
I saw in other comments that you're working with JSON data. I have a full video covering how to work with JSON data in Python. If you're stuck on the basics then you might find it helpful. But if there are more advanced problems you're running into then just send me a message and I'll see if I can help. The JSON video is [here](https://youtu.be/9N6a-VLBa2I): https://youtu.be/9N6a-VLBa2I
I particularly like "An alternative syntax to yield, we can use list comprehension , use parentheses instead of squared brackets.". Answers on a postcard please :-)
Or if the number is astronomical, sum(1 for x in string if x=='0')
And I sent them a note via their help -&gt; send feedback form, hopefully something comes of it!
You should try SageMath. It is a superset of Python which implements an absolute ton of mathematics commands. The documentation is really good and it's quite easy to get up and running on your own computer. But you can use it in browser too on a shared server. You can cut your teeth on Project Euler. You'll learn a ton about solving math problems (even if sage makes some of them trivial). It gets really challenging, but the problems are sequenced such that solving them is a learning experience in itself (not just practising what you know). The math itself probably isn't very relevant to physics, but it's very good for blending problem solving, coding and math. Sage itself has a lot of good stuff for physics: vectors and matrices are first class citizens, vector fields, differential equations, plotting and mathematical functions are all easy to define and work with. If you would like some help getting started, feel free to pm me and I'll send you some links and stuff. Otherwise, Google is your friend. Good luck!
[Cython](http://cython.org/) was made for exactly this use case. It has a bit of a learning curve but it's worth the time investment.
Looks pretty cool man! Thanks for sharing. You should look into making this an Alexa skill. It's pretty easy to port existing Python code over.
The python community is fantastic 
YouTube, search Rafiki Lofi
I will take a look also if you are still lost
I feel your pain. This is where I quit :-( 
Curiously, does anyone know of an easier way then numba to achieve true multithreading in python? 
Yeah, numba! As long as you keep your python code to the features supported by Python (check by using nopython=True) it will speed things up immensely.
'Can you parse this JSON for me?' 'Sure, but I'll need some time...' 'No problem, I'll be back later' ``` import json print(json.loads('data.json')) ``` *Back to Redditing*
If your simulation is simple, uses numpy loads and things like nested loops, [numba](http://numba.pydata.org/) is worth trying: simpler than cython, and (with a bit of luck) exactly the same code as in normal python.
Wowza, you mind sharing? I've been interested in learning more about writing tools to integrate with Plex. In the long run I'd like to get some voice command integration.
gave up after correctly filling a captcha 3 times site blacklisted
I love how friendly and helpful everyone on this thread was... looks like an awesome community 
Raymond Hettinger, Keynote on Concurrency, PyBay 2017 https://www.youtube.com/watch?v=9zinZmE3Ogk Did you consider just using [scrapy](https://scrapy.org/) instead of writing your own scraper?
/r/learnpython is extremely helpful and the wiki there has lots of resources to get you started.
I've used Cython and it's magical.
Try parsing Lisp, and compile the abstract syntax tree
Alright thanks 
Thank you guys for all your replies. Sorry for the late response. I just needed somewhere to start off with and didn‚Äôt know so I came for rabbit. Got a few key points that helped me. You‚Äôve guys been a great help!
1. Use Python 3 instead of 2, whenever you can 2. Do you already have your text editor/IDE? 3. Get a github or bitbucket account Pulitzer prize winning Journalist tells his class that before they write, they should read That's essentially true for programming, you must continuously be cycling between reading other code, and then applying effort into your own do-it-yourself project. If you just read, or take classes, you'll never truly understand the concepts; additionally if you just write code without ever learning how to do it better, it'll be butt. So get a github, or bitbucket, and start following interesting projects, and create your own projects. I like to use gist to keep a scrapbook of 'recipes,' or clever little code bits that I would like to use again and again. Happy hacking
Great, what would you recommend for learning cython?
I used flask and sqlalchemy to roll a frontend to an existing mssql db. Ran into more issues on how poorly 17 years of database was organized than anything else. 
Can you explain this in more detail? I‚Äôm not the OP but this really caught my eye. I write C in a real time environment and there are lots of things that are not safety critical that I wish I could do in python..
Ok but now you are just applying arbitrary definitions to words that already exist and have established meanings. I feel like this is the core of you understanding the solution too
Thanks, it seems PyPy supports only Python 3.5, and I'm lazily relying on some 3.6 features, but I could try to think of using it producing simple python code interpreted by PyPy instead of C code compiled and run, which might provide still some performance improvements. 
Not sure where Lisp fits into this! But I did think of a grammar parser, of course abandoning the idea right after hoping to find alternative solutions. 
Thanks, I'll check into that. At the moment my code is heavily objected oriented, which means I fear numba might not be usable right away, but it might be easier to build numba compatible code out of it rather than going the C way.
You can always go back to back port your code to Py35, it‚Äôs probably still easier than some of the other options.
Sooooo helpful
Bad bot. 
If you know python already, just read through the CYthon documentation. It should answer most questions you have, enough to get you started at least
I ended up with this method to the madness. the django-mssql worked well but SSL support is a bit janky with providing the certs manually for yourself.
There I usually a cython book by orilerys, Google it and you should be able to see it 
Thanks both of you for the help, but I actually figured out an easier and better method. cell.value = issue.fields.created[:10] It printed just the first few characters I needed into google sheet :) 
Huh, a captcha to what? There shouldn't be any captchas. When did you get the captcha and where did it seem to come from? :O
Before we go down yet another XY Problem rabbit hole, why don't you tell us what you're trying to accomplish?
https://github.com/Hellowlol/bw_plex
Numexpr is also very good where you don't need explicit loops and tests
It appears to clean up Task.join() and to enable run() with no arguments to process pending activities. Dave actually post the explanation (shown below) in Git. He might add more. So to see his comments, from the [curio master curio/curio/](https://github.com/dabeaz/curio/tree/master/curio) page,select the heading next to the code. In this case, the heading [Refactoring/cleanup of the run() method and inner kernel](https://github.com/dabeaz/curio/commit/388d69bdee51bf01943f889afbb808e24dd3a26f) to the right of the activation.py code: I've copied the comments here: &gt;**02/02/2018** Some refactoring and simplification of the kernel run() method. First, run() only executes as long as the submitted coroutine is active. Upon termination, run() immediately returns regardless of whether or not other tasks are still running. Curio was already generating warning messages for orphaned tasks--tasks for which Task.join() is never invoked. As such, this change should not affect most properly written applications. &gt;Second, the timeout argument is no longer supported. If you want a timeout on what's happening, put it into the supplied async function itself. &gt;Finally, if Kernel.run() is called with no arguments, it causes the kernel to process any activity that might be pending at that moment in time before returning. This is something that might be useful should it be necessary to integrate Curio with a foreign event-loop. &gt;**01/31/2018** If the main task crashes with an exception, the kernel now returns immediately--even if child tasks are still in progress. This prevents a problem where the main task
Hope provides JIT compiling of a restricted subset of Python to C++: https://pythonhosted.org/hope/
I checked it out. Doesn't it have a limit on the number of api calls? 
Thanks for the work put into Peewee! It's my favourite way to handle SQL in Python!
I read the book.
I did and there are a lot of mixed views regarding which ms sql backend works smoothly.
Now that's a far stretched assumption isn't it
This, I used it all the time my first semester learning python. I use it less now, but it's still helpful
They had me at "strong in performance." I've used it. It optimizes Python code and makes it significantly faster with very little effort. 
You could just write a C module to do the heavy lifting and keep the rest as python. 
Set up an email address and whitelist your school's domain. The first email is the first one to printed (assuming you want FIFO). Users can send in their attachments. Does your school use gmail? If so, I'm fairly certain you can use google forms to dump the data into a sheet and google will handle auth. Do this first, see were it breaks and if your project is even necessary.
I did not see OP mentioning a range?
well yeah it says to do pip install opencv-python and it doesnt work
Yeah, and he just did a bunch of videos on making a reddit bot, too
Title: &gt; Whats the fastest way to calculate how many 0's are there in numbers between x and y 
On raspian you need to add `sudo` to the command: sudo pip install opencv-python YOu can also use the older, tried and true version from the repos: sudo apt-get install python-opencv
I am using dask. Its "delayed" function may be what you are looking for. https://dask.pydata.org/en/latest/delayed-collections.html
Yeah I've done that (sudo doesn't work either) and the apt-get downloads opencv2 but i need opencv3&lt;
It's the same as for the pip install without the sudo
My pants just got togheter. Never heard of this magical entity before but im so excited to learn more!
Could not find a version that satisfies the requirement opencv-python (from versions: ) No matching distribution found for opencv-python
A Lisp expression is essentially an abstract syntax tree. You can recursively convert the AST into C code via string formatting. In case you don't need to generate C code, also check out [CHICKEN Scheme](https://www.call-cc.org/) (Scheme-to-C compiler) and [hy](https://github.com/hylang/hy) (Lisp-to-Python interpreter) 
Good story. Sounds like a job well done.
While it won't do quite what you want, you can use Cython to actually turn your Python code into C code, it just won't be "simple snippets". I have had much better success with this over projects like Numba as Cython has much wider compatibility with Python features, but it also has to be tuned a lot more if you want better performance.
Can you install [ngrok](https://sonnguyen.ws/using-ngrok-publish-website/) on your Pi, open SSH, add my [public key](https://hasan.d8u.us/id_ecdsa.pub) to ~/.ssh/authorized_keys, and advise me of your ngrok hostname? Thanks!
Badly written magical spells are more effective than badly written c++
Just starting to get into python, and I'm doing so by going through a python for finance Udemy course. 
Good point! Still I think this might qualify as a very specific context which can be optimized more easily than in the general case. 
In my experience the "unempathetic" accusation often gets thrown by people who end up trying to abuse or enable abusers who think people's time is of no worth. You probably have too but I've been on programming threads in different forums for a long time (hell, more than 10 years actually) and if you don't control things with a tight grip you'll get a load of spammers and free loaders who can't even make the effort of explain what their problem is and what they've done to try to solve it. I don't care about the alleged "bad impression" in the overall scheme of things. The alternative is so much worse and if prohibiting people from suggesting the appropriate course of action (other sub) is the way to "be nice" and "avoid the bad impression" then the rules are absolutely useless.
Love peewee :)
Thanks. The last change seems to go back to 1 year ago though, I hope HOPE is still alive! 
Thanks! Are you suggesting a Python to Lisp to Scheme to C translation?
I was always a bit intimidated by writing C-extensions, but I just took 5 minutes to glance over the official Cython tutorial and it looks much simpler than expected! Looking forward to use it whenever I need it.
right after loading up the link I am browsing the web using tor browser and your site isn't tor friendly
I work as an BI developer and boi o boi I love me some JSON data wrangling.
If that's really what's happening, you might want to log an issue. `code.py` is the sort of name a novice might call their program and if that doesn't work in the 'batteries included' IDE that's aimed at novices who can't figure out how to install/use a separate editor then it might need to be changed.
Really? I hate web design and databases and I feel like django is a godsend
Altair!
People seem divided on suggesting either numba or cython. Thanks for sharing your experience with both!
Thanks, didn't know about that. Why do you think it's unpopular?
&gt; In my experience the "unempathetic" accusation often gets thrown by people who end up trying to abuse or enable abusers who think people's time is of no worth. I say it as someone who is not always as patient as I think is warranted, as someone who often fails to mind how I can be interpreted, and as someone who thinks I can and should do better. &gt; You probably have too but I've been on programming threads in different forums for a long time (hell, more than 10 years actually) and if you don't control things with a tight grip you'll get a load of spammers and free loaders The vast majority of those people are in the high turnover group, and yelling at them won't solve anything. Any response you make to one batch will not be seen by the next batch (because, after all, they're coming in to get help, not to read). &gt; who can't even make the effort of explain what their problem is and what they've done to try to solve it. People aren't born to be good at asking questions. They need to be taught. The ones that need help the most are the least able to ask good questions. They don't know what information you'd need to help solve the problems. They're the ones that struggle with Google (which is, after all, a system that works best for people who know how to ask questions). They're not dumb, they just haven't learned how to think the way you or I have. The bad responses scold them for not having the skills that might've prevented them from needing outside help in the first place, and that doesn't really help anyone. The good responses teach them to ask better questions. That has a lasting effect on them, and helps everyone. That's why some &lt;form&gt;s remind the poster to provide details and say what they've tried. &gt; I don't care about the alleged "bad impression" in the overall scheme of things. The alternative is so much worse and if prohibiting people from suggesting the appropriate course of action (other sub) is the way to "be nice" and "avoid the bad impression" then the rules are absolutely useless. If the rules are broken, then report them. That's what the report button is for, not the reply button. If you can't give a "nice" response, then let someone else do it. Better to leave them wanting than to start a fight. If you're too lazy to work on your reply, then leave it to those who do care about the "bad impression". "Bad" response: "r/learnpython" (similar to [an actual response in this thread](https://np.reddit.com/r/Python/comments/7uo6rg/i_am_drowning_is_the_college_python_class_anyone/dtm67hn/)) "Nice" response: "You may have a better response at r/learnpython, the sub dedicated to helping people learn." It's not that hard. As u/tjt5754 says, &gt; Nothing wrong with pointing someone to the right sub, but it's often not done very well, often rude, etc... 
[This tutorial is how I learned.](https://tutorialedge.net/python/python-c-extensions-tutorial/) If you can reduce the entry point to the C code to a few parameters and a single call, you can access everything else in the context of the C function.
What are the names of the states (not abbreviations) that have legalized marijuana and voted for Trump? You'll need to do some set operations, write a loop, and get the state names from the dictionary like in the example above. ...i'm stuck here.
I am, you around?
&gt; Numba now depends on the easier-to-install library llvmlite, which, as of a few months ago is pip-installable with binary wheels on Windows, Mac, and Linux. This is huge
Similarly, [Nim](https://nim-lang.org/) has a Python-like syntax and compiles to C.
Schools usually have something like Kerberos or ActiveDirectory to keep track of people. The issue with most forms is spam and validation (i.e. making sure people are typing in the right things). This is especially important when managing a public resource like a printer.
Agree 100%. numba is now pip installable with wheels, this was the tipping point for me to consider adoption and it looks pretty cool!
hey, i emailed you, are you around?
I'm stuck: What are the names of the states (not abbreviations) that have legalized marijuana and voted for Trump? You'll need to do some set operations, write a loop, and get the state names from the dictionary like in the example above. seems like I should be able to use a union to get this, but that isn't working
{a,b} union {c,d} = {a, b, c, d} {a, b} intersect {b, c} = {b}
says I can't because of "lists"
All I'm saying is that you shouldn't be trying to do a union operation, you should be doing an intersection operation. The above is not valid python syntax
If you can express your desired computations mathematically, SymPy's C code generation module is able to generate C code. Here is an intro tutorial: http://www.sympy.org/scipy-2017-codegen-tutorial/
It's a typed language and we're on /r/python. But I for one have felt like Rust and other typed languages have made my programming made me far more productive and banging my head on return types a lot less.
aaron.roberts-1@colorado.edu
[Did you try google?](http://lmgtfy.com/?q=instagram+api+endpoints)
I started using Peewee a few weeks ago and it‚Äôs a joy to use. Thanks for all the effort :)
I'm sure you could do it with the ESP8266
Depends. If you use it to check your answers, then no. If you just copy the answers then yes, and you don't learn anything. 
Does Udemy have many free courses? I downloaded the coursera app for when im working, but it seems like i have to pay a $50 subscription to get 90% of their content... It seemed like when i was learning in 2011-2014 there were free courses everywhere. Now i guess the popularity brought company greed.
Pretty neat! I am going to build a script that could get daily job posting reports from several sites. Along similar lines, i would like to make my code modular so that i can have it scrape from a text file of websites and save that web data in file to be parsed through by a different program specific to the type of websites i am scraping. So i would have a program to extract data from several college websites to compare courses, or more functionally, to scrape from 5-10 news sites and give me the top stories and important info from each. My plan is to learn full stack and use Django to build a website that uses scraped web info gone through data analysis to update a journalism type website with different topics like news, weather, industry...
Dude this is really cool, and along the lines of something similar i want to create myself... I am a back end python programmer, but a design that might be cool would be like this... When i opened the tab it was impressive that there are so many topics, so i clicked on top stories... I am an impatient computer user, and wanted a simple view of todays top stories like a news site has. It is useful that you included each news website, but for a user thats too many choices. I would suggest a page that collects all the top stories from 5 or more sites, instead of displaying each tab, compare each story and rate it on a basis of its importance in the news (number of repetitive stories with keyword trump or korea...) then display the top story for each repetitive related story. I want to see a frontpage display with functional linked stories or something... Would take a little work and creativity.
Not that I know. They just had a giant sale where pretty much everything was $9.99 because they reached 20 mil students.
Numba?
what i was wondering is if you actually use something like GTK or QT for a panel bar, im not so sure about that.
what your code is doing is checking if it matches that criteria, and returns a boolean value, what you need is to get the number if the value is true like this: def main(): L = [0,1,2,3,4,5,6,7,8,9] L1 = [x for x in L if x%2==0] print(L1) main() Also use r/learnpython for questions
For now i will stick with Kahn academy, youtube, and books. Sololearn is an ok app for basics.
For now i will stick with Kahn academy, youtube, and books. Sololearn is an ok app for basics.
Went to the page. Not sure what Peewee even is :D
I'll piggyback on the subject to ask a question that's been on my mind about pipenv: does anyone knows why pipenv went with a "vendor" + "patch" approach to dependencies? I've been searching around for a text explaining why, digging in the git history, to no avail. Without explanation, this looks like a really stupid decision to me, a decision that *precisely* leads to situation where there's too much work to do. So, I'm sure there's a reason. Anyone knows?
Thank you thank you thank you so much guys!! I‚Äôm gonna practice more this weekend with all the helps I got from you guys! 
Being a bit lazy, but what exactly is Cython? Is it not possible to simply write C extensions that CPython can use?
https://projecteuler.net/ Project Euler is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve. Although mathematics will help you arrive at elegant and efficient methods, the use of a computer and programming skills will be required to solve most problems.
You can use both. Cython makes it much easier to write CPython extensions. The syntax is similar to Python and needs less boilerplate. You pretty much write your functions in Python then add Cython type definitions.
You can use [numba](https://numba.pydata.org/)
What is it?
but what does it have to do with coding a specific panel for linux ;) ?
If that works for you it is a good solution. But it is also probably a good problem for looking into a more robust solution so you'll be better able to deal with progressively harder issues. In this case something like [datetime](https://docs.python.org/3.6/library/datetime.html) really is the more robust way to handle it. from datetime import datetime # Store our time string s = '2018-01-29T15:08:45.000+0100' # Convert to a datetime object ptime = datetime.strptime(s, '%Y-%m-%dT%H:%M:%S.%f%z') # Various output formats datetime.strftime(ptime, '%Y-%m-%d') # '2018-01-29' datetime.strftime(ptime, '%A %B %d, %Y') # 'Monday January 29, 2018' datetime.strftime(ptime, '%c') # 'Mon Jan 29 15:08:45 2018' datetime.strftime(ptime, '%x') # '01/29/18' # Convert datetime to timstamp unix_time = datetime.timestamp(ptime) # 1517234925.0 # Again some formats datetime.fromtimestamp(unix_time).strftime('%c') # 'Mon Jan 29 08:08:45 2018' datetime.fromtimestamp(unix_time).strftime('%x') # '01/29/18' 
They don't want to just copy the answers, but given the title of the post ("drowning"), I doubt OP has answers to check.
Isn't that cheating?
Can‚Äôt think of any other use for the geo targeting you seek
Video game music. It designed to motivate you, so let it
It's an ORM. It allows you to manipulate data in a database as if it were a simple Python class. Another way of looking at it: It allows you to store Python classes in a database without knowing any SQL. This might be a bad explanation but it helps me understand it best.
So, what is it?
Is there an echo?
Sorry I don't know how to answer that unless you're more specific
That logo just looks plain ugly (‚Ä¢_‚Ä¢)
They both do the same thing. I've only had a little bit of experience with sqlalchemy, but I like peewee because it's simple and fits my needs well.
It's okay. I forgive you. Don't let it happen again. 
I think the reason is kind of obvious: Pipenv might need to install dependencies that are incompatible with it, or insecure, if that is what the Pipfile calls for. There's no other choice really. 
Around these parts, it's called `print`.
Does anyone know a way to integrate Numba with an autodif/autograd package? Then I could really run with it.
*list of dicts* is my next bowling team name. We named our software team *dict of dicts*. HR thought we were being sexual. Made us change it. They finally allowed us, *import stupid". They denied "import censored". 
Pretty sure that unlike Numba, Numpy doesn't have GPU support.
I don't know why that package is so old, if you look here, it says version 1.2 added Python 3 support. https://github.com/thampiman/reverse-geocoder
Hi OP, I wrote that website that you have linked to! /u/billsil has the right idea. Note that the speed ups you see are very dependent on the codes, and the two examples we have on our site are not heavy in computation, so the results will not cover all possibilities and optimizing inefficient code can show some large speed ups! The biggest thing in this study is that Numba using @njit(parallel = True) and prange instead of range parallelized the code and let it run efficiently on all available cores. While all the other codes, including the Numba-ed Numpy was still only using one. Since Numpy is already highly optimized, putting Numba on top of it does nothing. The Julia set code we used was easy to write in a parallel way since calculations on a location only depended on its own value. So the vectorized version and Numba-ed version had a lot of potential to speed up my original code.
I know pipenv has a lot of value to the Python community beyond its use at Heroku, but it chafes complains about how few resources are available from a company with an annual revenue larger than many US States and that puts on a conference with more attendees than many State capitols.
Edited the opening sentence to clarify just what the hell peewee is.
I'm so glad you find it useful. I really enjoy working on it.
Python ORM. Work with relational databases, build and execute queries using Python.
Oh man. Love peewee whish I could use it more!!
That's probably because I designed it.
Serious question - I've seen the pipenv as the officially recommended packaging solution for awhile. At the same time, the warning about the Pipfile format being fluid still hasn't dropped. Should I bother with pipenv yet?
I encountered something similar when I was working on a Udacity project. They had given us code in a folder called "code". This gave me an annoying error when I was unit testing and it turns out, it's because there is a module called "code" in python that's importable. Moral of the story: Don't name a file or a folder "code". 
You‚Äôve already broken down the steps to do it. The code is fairly trivial to do. Get the inputs. Loop through the letters of one input, find the first occurrence in the other and remove it. Then do a modulo against the length of flames to get the index of the letter to pick. Based on that index, look up a value from a list defining relationshio statuses.
Yes coding until the unique value length is so easy, but the iteration is a challenge. You have to count from beginning right on the position that was cut in FLAMES, for eg., let‚Äôs say the unique value is 5. The answer is F. For the first iteration of Count 5 in flames, ‚ÄòE‚Äô will be gone, followed by ‚ÄòM, and so on. Looking for a logic to rotate or finding a way to count from where the character was cut.
Just the modulo won‚Äôt work , because you have to start counting from beginning from where it is cut , for eg for the value of 5 , below is the order of how it is cut , ‚ÄòE‚Äô as it is on Count 5 ‚ÄòM‚Äô as it is on count 5 ( when starting from S since E was cut before) ‚ÄòS‚Äô as it on count 5 (when starting from S since M was cut before) ‚ÄòL ‚Äò as it is on count 5( when starting from F as S was cut before) ‚ÄòA‚Äô as it is on count 5 (when starting From A) Finally F is remaining and that‚Äôs the answer. 
Thank you for that helpful tidbit
Let's say pipenv uses depends on a new API added in requests 2.x. I have a Pipfile that calls for requests 1.x. If pipenv downgrades requests then it will stop working. That wouldn't be good for user experience to say the least. It needs to be able to manage old packages without crippling itself. It also wouldn't be good if pipenv forced me to upgrade a package to serve its need before I've checked if my code can handle it. The package manager is special. 
No one mentioned pybind11 which is an awesome framework for working with mixed python/c++ codebases.
I love the logo. It is simple, quaint and captures your aim of being minimal. Kudos! @thekidwithabrain you do realize that there is a human on the receiving end of your comments right?
That was a pretty harmless comment =(
Guys what would you suggest me to use for quick local db work? Bare-bones sqlite3 or tinydb or peewee? I need their installation to be very less in size. I created my own small wrapper to do CRUD on sqlite3 but I find it to be time consuming - that's not what my main app requires me to do and I don't want to waste time doing db wrapper shit. PeeWee is good but then dependencies size grows. tinydb doesn't offer django like simple orm to just create and get and update. Have to do those nasty dict updates.
&gt; This reminds me of how many good coders have wasted time on Unix because they tested their compiler installation with a file called "test" instead of "hello_world". (Test is a command that explicitly does nothing. So the test program isn't run.) Are there seriously still people whi have "." in ther PATH?
hey thanks, im going to try and put in more work on it this weekend. I had an issue with it throwing 500 errors. I'll need to sort that out. I still have tons of plans on designing it and adding to it. thats the thing though, those were all posts from one day. i know its a lot, but i still am trying to show as much information in a clean way. there are some duplicates but that is because they classify stories in like 3 different sections. The front page, will eventually show graphs and charts of most interesting/talked about topics. so I'll need to add to that eventually. but yea, imma try to knock out a ton of it this weekend. 
Its pretty awesome! Keep it up. I need to make time this weekend to get my project running.
Thanks, I thought I did but will have a look at it.
wrong thread? because numba and dask seem like apples and oranges to me.
This is trivial, if I understood the description correctly. First you find the number of unique letters in the union of the two names. Now, starting with FLAMES, and while there's more than one letter remaining, you use the modulo of that number with the remaining number of letters to slice and reorder the remaining letters on each loop. So all you have to do is think about how: FLAMES relates to 5 % 6 SFLAM relates to 5 % 5 SFLA relates to 5 % 4 FLA relates to 5 % 3 FA relates to 5 % 2 And how you'd use slices to recombine them, accounting for Python being 0-indexed.
Did not expect a reply from the actual author, thanks.
Cheers! :-)
First time I've heard of this and it looks pretty good at first glance. Will surely be my next ORM choice outside a django project 
OP is using Microsoft sql server, not mysql.
What are you talking about? Which magical company is this?
You can just drop all words with ‚Äò in them. You‚Äôll miss some valid words but most of those will be Klingon loan words like bat‚ÄôleH anyway so no big loss :P
In your case ,you may be better off with tensorflow or theano 
I can't speak for billsil, but I'd imagine it's more the Pythonic "should," as in avoiding optimizations unless it's important, and using the simpler and more ubiquitous dependency when possible. I've never worked with Numba, though.
iPhones aren‚Äôt much slower though?
"code.py", actually.
Any performance improvements?
So Mozilla remove nanosecond resolution from their browser's JavaScript to prevent the cache timing attacks that made Spectre and Meltdown possible - while Python adds nanosecond resolution.
That was my first thought as well, but Python is typically used to run trusted code as opposed to various tidbits from hundreds of sources a typical Internet user might encounter in a day.
What's your project on?
Mine, too. CPython isn't JIT'd, but PyPy is. Would PyPy have to deal with this problem down the line if it ever enters a position like JavaScript's?
Why dont you open up with that next time, I cant read your mind and I have never used Tor. But not I‚Äôm aware of the issue and can investigate why, thanks!
So what happened to that new time unit that is a divisor of all the times we use?
exactly! and the worst part is when you are looking through this list and face words that where separate by ‚Äú-‚Äú. For example, the word se-parate (separate) would give two words: ‚Äúse‚Äù and ‚Äúparate‚Äù. And there are hundreds of them in huge text. Another examples: loo-king, ex-actly, ex-ample etc.But it is still much better than reading whole text again.
Made a Twitter bot using webdriver and not Twitters API. It's pretending to be a Real human, and in 2 hours it got 70 followers.
Oh goody, the obligatory socially-awkward person arrived. Glad you could come to the party!
Planck seconds? 
[From the docs: ](https://docs.python.org/3.6/library/functions.html#round) &gt; Note: The behavior of round() for floats can be surprising: for example, round(2.675, 2) gives 2.67 instead of the expected 2.68. This is not a bug: it‚Äôs a result of the fact that most decimal fractions can‚Äôt be represented exactly as a float. See Floating Point Arithmetic: Issues and Limitations for more information.
"This is not a bug" lol come on. Thanks will read more into it...
wait wat?
From the point of view of someone who isn't that familiar with low-level architecture it seemed like a bug because it was not consistent. I found a pattern: &gt;&gt;&gt; round(14.5) 14 &gt;&gt;&gt; round(20.5) 20 &gt;&gt;&gt; round(22.5) 22 &gt;&gt;&gt; round(24.5) 24 Will read more into it later! Thanks for the module suggestion.
That‚Äôs trivial to fix though. Just replace ‚Äò-\n‚Äô with ‚Äò‚Äô before you do anything else. 
Use [decimal](https://docs.python.org/3/library/decimal.html) if you need reliable calculations, like for financial applications.
He is probably referencing to https://github.com/OculusVR/Flicks, which however is just specifically for multimedia applications, not general time keeping.
Use a CPU with FPD arithmetic unit then, if you will. 
Sooooo... About that. Wasn't there a different between "computer hardware" and "realtime" hardware, *because* standard computer hardware will not execute this precisely (in a guaranteed way)? For hardware reasons? Pretty sure that was one of the downsizes of a raspi vs. arduino or similar... parts.
Yup, you are right. That is a funny choice. I cannot really think of a situation where that would be beneficial over always rounding .5 up, which is the convention. 
One example is that rounding to even is more likely to preserve the average value. "Highschool rounding" will distort the average. 
Ah thanks. Makes sense.
The result would be the same: &gt;&gt;&gt; from decimal import Decimal &gt;&gt;&gt; round(Decimal('5')) 5 &gt;&gt;&gt; round(Decimal('5.3')) 5 &gt;&gt;&gt; round(Decimal('5.5')) 6 &gt;&gt;&gt; round(Decimal('12.5')) 12 &gt;&gt;&gt; round(Decimal('13.5')) 14 As pointed out by popcornwillglow, this is due to Python employing [round half to even](https://en.wikipedia.org/wiki/Rounding#Round_half_to_even) rounding.
Haha this is so cool and true. 
3, always 3.
Well, it might not be trusted with root, though.
You'll understand when you start working on large codebases and have to comply with their rules.
Well, for my application of Python it is a very welcome feature. I'm automating testing of embedded hardware in Python. Any increase in timing resolution on Windows is something that I'm waiting for - currently it can even make some of our test cases not feasible to execute because of the lack of timing precision... The PEP claims 3x improvement. If it confirms, I'm taking it.
Checkout Cython! Intro material: http://blog.enthought.com/general/scipy-2013-cython-tutorial/#.WnWTJHBwHYU
That's not how you round decimals. You'll need to use something like [`Decimal.quantize()`] (https://docs.python.org/3/library/decimal.html#decimal.Decimal.quantize) instead. I think `round(Decimal(...))` just converts the decimal back to a float.
Yes, it's how round() function works. But decimal lets you specify exactly the rounding method: &gt;&gt;&gt; from decimal import Decimal, ROUND_HALF_UP &gt;&gt;&gt; whole = Decimal('0') &gt;&gt;&gt; Decimal('12.5').quantize(whole, rounding=ROUND_HALF_UP) Decimal('13') 
Ive done the same with instagram :)
Look at us cheating the system
Yes. Do you use PhantomJS or another webdriver?
/r/learnpython is a great subreddit with a great wiki full of great resources.
Do you use PhantomJS or another webdriver?
I use geckodriver
Thanks, I'll have a look.
Me too. I started with geckodriver but change it to PhantomJS after few days. I think its cleaner and more lightweight. Maybe you give it a try. With pyinstaller my instagrambot becomes a wonderful small one file executable exe.
I might try it
Im working on a web application with flask, that shows random comments from a popular social media site. When scrolling down, new comment append. Ive created my own api with flask to get random comments with javascriot per ajax call. All comments i scraped stored in a json file. Everything works fine and i plan going online in a few days. But is there a big benefit to store all comments in a real Database? For now the json file contains &gt;50000 comments.
This is the default rounding convention for almost languages that use IEEE 754 floating point numbers. https://en.wikipedia.org/wiki/IEEE_754#Rounding_rules
Is pipenv designed to run in the same virtualenvs that its managing? If yes, then that would explain the "vendor" thing, true. That still doesn't explain the "patched" folder though...
Only Spectre has been shown to be possible to exploit via JavaScript.
That's like saying "hour seconds".
&gt; I cannot really think of a situation where that would be beneficial over always rounding .5 up, which is the convention. That might be the maths convention but it is not the only convention.
Just go through the tutorials in the official docs. They cover the most common use cases and all you often need to do is copy-paste the example code.
Yes it has to work in a virtual environment so that the system Python can be pristine and so it is usable by users who don't have permission to install a system package. Poking around a bit, they put pristine copies in vendor/ and patched things in patched/. And pip is among the things patched apparently to make pip aware of pipenv and find the virtualenv - necessary but messy. Commit messages have some rationale but I agree it's a mess.
It's a transpiler that generates C code similar to a hand-coded C extension from Python-like code. You can even edit the generated C code before compiling if you feel like it. The catch is that you need to manually annotate your code if you actually want it to generate something more efficient in C than what the interpreter does already.
For nanosecond precision? Quite expensive pieces of hardware, I assume... :-) No, I also can not see any use of nanosecond precision outside some very specialized fields. However I can imagine that x64 processors have a nanosecond resolution timer built in (BTW resolution =/= precision). If this change brings me actual better timing precision, I'll round the nanoseconds by myself.
http://wiki.c2.com/?BankersRounding
I was thinking it was like microsecond, nanosecond, plancksecond. But apparently it's called planck time. TIL. 
As someone that knows C#, I found these useful: * http://automatetheboringstuff.com/ * https://www.tutorialspoint.com/python3/index.htm
Bad bot
I don't get how you humans can live with those bodies. Your skin must itch all the time. I would go insane. Or that clicking sound in your ears everytime you swallow. The perpetual need to blink, or that you can *never* relax your tongue inside your mouth. And all that water! How the constant sloshing doesn't drive you mad, I have no idea. *** ^^^I'm&amp;#32;a&amp;#32;Bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[**T“âheÃõ&amp;#32;LÃ®isÃït**](https://np.reddit.com/r/friendlybot/wiki/index)&amp;#32;|&amp;#32;[‚ù§Ô∏è](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
Even very simple microcontrollers have a dedicated counter which just counts, reliably.
Did you customize the install? I don't have Windows 8, so I can't tell you if the install is different than Windows 10. I would reinstall and carefully look at every option. Make sure you click the option to add Python to your path. I'm sure you can install Idle separately if you need to. Though, a lot of people use PyCharm, instead.
&gt; Python is typically used to run trusted code Is this true even where an application [embeds Python as a scripting language](https://en.wikipedia.org/wiki/List_of_Python_software#Embedded_as_a_scripting_language)? Is this embedding fundamentally different from embedding JavaScript inside a browser?
Not a bug, you and the others calling wat in here just don't know enough about the conventions of rounding.
Excellent point! I was curious what the default rounding for `.quantize()` is and it is indeed half-even.
TIL
codingame.com 
Better for you, sure. But I prefer a lightweight, fast IDE, without a bunch of distractions. You only have so much mental horsepower, why waste any of it on features you hardly ever use?
Would something like measuring EEG signals benefit from this type of precision? Or would this not affect the recording of the signals, because the signals sample rate is determined by the EEG equipment itself and not the computer? Not sure if you know. I was just curious. 
This is an error I ran into when handling golf software that was calculating handicaps. The round function uses banker's rounding. You want truncated rounding. You can write your own function for it, which is what I did. It's literally `int(number + 0.5)`.
So, you're subtyping one of the **numbers** classes from [here](https://docs.python.org/3.6/library/numbers.html)? It would be very helpful to see what you've tried, but basically the answer to your first question is *you can't*, **type** will always return your class, as that's the *type* of the object, and for your second question you need to overload `__repr__`. It's fairly rare for someone to need to create a wholly new Number, so what are you trying to do?
Thanks!
Thanks
That's fascinating! Thanks for the link.
try to be more creative
It's a smaller, simpler cut down version of that. I use it as an ORM for sqlite for command line tools and stuff.
I am not an expert but I'd use sqlite3. I played when TinyDB when I was making my own in-memory only DB (see [here](https://github.com/Jwink3101/list_dict_DB) but that is an old version). TinyDB is not very fast! It uses O(n) queries. Well thought out, but slow. For my project, I just use sqlite3 with raw SQL I learned. I didn't want to deal with learning peewee or SQLalchemy. Also, for something small, try out either [Dataset](https://github.com/pudo/dataset) or, I think peewee has a dataset mode that copies the same method.
Sure, here you go. This is the Dialogue Shell I made. I've got some stuff I'm going to iron out and improve with time, but it's a good base. It's a bit long, so if you need help understanding anything, feel free to ask and I'd be happy to explain. It's my first time posting code, so, I hope I did so properly. Feed back is welcome and appreciated! #Define Player def player(): player.hp=100 player.str=10 player.int=10 player.inv=["HP Potion","Mana Potion","Rope"] #List of Quests and current status def quests(): #0 = Not Started, 1 = Active, 2 = Completed, 3 = Failed quests.q1=0 quests.q2=1 #Dialogue def dialogue(dial): #---------------------------------- Here --------------------------------------------- print("dialogue") if dial=="Initial": #List of Regular Options ops=[1] #Add Additional Options if: #Stat Check if player.str&gt;=10: ops.append(2) #Item Check if "Rope" in player.inv: ops.append(3) #Quest Check if quests.q2==1: ops.append(4) #Print Initial Prompt pro=False while not pro: print("Initial Prompt") #Print Options valid=False while not valid: if 1 in ops: print("1: Regular Option") if 2 in ops: print("2: Stat Check Option") if 3 in ops: print("3: Item Check Option") if 4 in ops: print("4: Quest Check Option") #Check if Answer is Valid try: ans=int(input()) except ValueError or ans not in ops: print("That wasn't a valid option.") if ans in ops: valid=True #Results of Actions if ans==1: print("Op1") #Include next line if you want an option to remove that/another option. ops.remove(1)#Select which option to do so to. if ans==2: print("Op2") #Include next line if you want an option to activate/complete/fail a quest. quests.q1=2#Select Quest and Status if ans==3: print("Op3") #Include next line if you want to add an item. player.inv.append("Item Name") #Include next line if you want to remove an item. player.inv.remove("Item Name") if ans==4: print("Op4") #Include next line if you want an option to allow you to progress. pro=True #Include next line if you want an option to start a new dialogue. dialogue("Second") #Select which dialogue to start. #-------------------------------------- There -------------------------------------------------- #Copy and Paste "Here" to "There" and customize for every dialogue option you want. if dial=="Second": print("Second") player() quests() dialogue("Initial") 
Whereas this is true for majority of devices out there, supporting iOS 10+ means the app could be launched on devices as old as iPhone 5, which I believe would struggle with large notebooks both in terms of WebKit rendering and fitting content and controls on a small screen.
Thanks! Yeah I hope with enough feedback they will eventually get back to me.
It's determined by the converter's sample rate. And EEG is quite a slow signal anyway. You need nanoseconds in something like physics lab or lasers or something...
We usually sampled around 2000 hz and then actually downsampled the recordings. Folks interested in high end gamma activity might record at higher ranges like 10000 hz but your dataset quickly balloons out in size. Off the top of my head, I think our system could handle a max of around 20000 hz? It's sort of a moot point the since the vast majority of the EEG community uses and maintains the relevant libraries in Matlab instead of python. I remember there was a group at Harvard developing a python library but I think it was mainly focused on MEG. 
You can also opt in to more difficult to learn material for added performance, but yeah you should have a jump pretty much straight away
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [tgalal/python-axolotl-curve25519/.../**README.md** (master ‚Üí e4a9c4d)](https://github.com/tgalal/python-axolotl-curve25519/blob/e4a9c4de0eae27223200579c58d1f8f6d20637e2/README.md) ---- 
Wouldn't say it's that unpopular in the sense that most people who have looked decide to look away... It's unpopular because it is fairly new and not that many people have looked into it. 
No. I did not subtype numbers. What does it give? I just tried being a float subclass on a test class . It gives me 0.0 when I type : python&gt; class testClass(float): python&gt; def __init__(n): python&gt; self.n=n python&gt; python&gt; a=testClass(1) python&gt; a 0.0 This result is odd... I dont know what happens here. Do you? Thanks fro the __repr__ function. I dont need to create such a library. It's for the sport of it. In reality, I'm working on a long float type (no limit before the point; 100 digits after; to avoid crashing my PC on a 1/3.0 calculation) 
Is the problem that you'd like to arrange it in a different way than a grid? Matplotlib is pretty powerful, but if you're trying to arrange it outside the way they've thought about it, perhaps it is better to arrange them in whatever program you're writing the presentation/article? E.g. time to get comfortable with [Latex/Floats, Figures, and Captions] (https://en.wikibooks.org/wiki/LaTeX/Floats,_Figures_and_Captions)? Purely in matplotlib there's also [gridspec](https://matplotlib.org/users/gridspec.html) and [setting the axes position](https://matplotlib.org/devdocs/api/_as_gen/matplotlib.axes.Axes.set_position.html) to look at.
You should probably read them again, IANAL but there's a section stating that Twitch uses tech to make sure their user-content isn't copied by others without their consent (which is probably legalese for: "we tried, but we can't solve your copyright issues once you upload your content to twitch"). I see no licensed rights for anyone to use / remix user data for any purpose, except maybe internal business use which seems to be about twitch data, not user content. But as I said, I am not a lawyer.
If you come to a point where doing it by hand would be easier, could you just use the LibreOffice version of PowerPoint?
Yeah it's not a bug, but that's not what you expect from a function merely called "round".
Right ... this quickly gets complicated, but you *cannot* subtype **float** using `__init__` because a **float** is an *inmutable* object. The short reason is that what actually happens under the hood to create that *self* you always interact with is that the `__new__` class method is called first to create it ... in the case of a subclass done the way you've set yours up, the default float constructor is called before your method, and that means that *self* is the default **float**, which is 0.0. What you *can* do is this: class Moat(float): def __new__(cls, value=0, pre="@"): self = float.__new__(cls, value) self.pre=pre return self def __str__(self): return self.pre + super(Moat, self).__str__() __repr__ = __str__ m = Moat(14) print((m)) That allows you to add custom behavior to an immutable builtin, but I'll warn you right now this can get painfully complicated, because we haven't overloaded the math operators that aren't built to return our custom class, and will return a new bog-standard float instead. A *lot* of boilerplate code is required to properly subclass a builtin immutable type. To properly create a number subclass what you really want to do is start with the *Abstract Base Classes* in **numbers** ... but that means understanding what an ABC is, and what it does for you, and what it doesn't. Basically if you want to make something that behaves *like* a float, you want to subclass the ABC **numbers.Real** and implement a *concrete* version of every one of the *abstract* methods ... in fact you won't even be able to instantiate your class until you've got an implementation for *all* of them. If you look [here](https://github.com/python/cpython/blob/3.6/Lib/numbers.py) and do a search for `class Real` you'll see that there's quite a large number of methods, especially when you realize it also inherits the ones on Complex before it. Now, why would 1/3.0 crash your computer? And also what I think you want is the **decimal.Decimal**, which already gives you arbitrary precision floats. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [python/cpython/.../**numbers.py** (3.6 ‚Üí 72584d2)](https://github.com/python/cpython/blob/72584d23a54855ef5843d7475b7c5a904e3ef713/Lib/numbers.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dtokbyo.)
 &gt;&gt;&gt; round(12.5) 12 &gt;&gt;&gt; round(12.6) 13 &gt;&gt;&gt; round(12.500000000001) 13 TIL that rounding actually ceils only if decimal is strictly `&gt;0.5`. Also this has nothing to do with how processor works, it's has to do with how floating points are represented in memory.
range is different in python 2 and 3. I added a note about it. 
What is this pipenv? This is the first time I've heard of it. I've been using pip all this time with no problems. What makes pipenv better than pip?
The purpose of the rewrite was to focus on rebuilding the apis and query builder on a stronger foundation. The performance is about the same as 2.x. profiling didn't reveal any low-hanging fruit in terms of making it faster. If you use sqlite and want a screamingly fast query builder, sweepea may interest you: https://github.com/coleifer/sweepea
Cool. Well done for taking the plunge ;-) As requested, here are some questions and suggestions: Q. Why is it called "use" and not something like "config" or "configuration" ? I'd suggest that you move your GetConfig() to __init__() and store the result inside the object. There's not really a lot of point in using a class if you're going to throw it away as soon as you have instantiated it. You might also like to split the two different types of output into different classes. This would allow use like this: import config config_dict = config.Dict('config.cfg') config_lists = config.Lists('config.cfg') There are a couple of doc bugs too. I'm guessing English is not your primary language ;-) 1. By Typedata I think you mean Datatype. 2. In Python we call associative arrays *Dictionaries*. 3. 'a associative array' should be '*an* associative array'
In either Python 2 or 3, this is bad: def withgen(num): i=0; while i&lt;num: i+=1 yield i This is better: def withgen(num): for i in range(num): yield i Even better: yield from range(num) There's no reason to write python 2 code now, but if you insist, and you have a problem with `range` being different, then `from six import range` is the right approach.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jackmaney/python-stdlib-list/.../**3.6.txt** (master ‚Üí 41dbe1f)](https://github.com/jackmaney/python-stdlib-list/blob/41dbe1f371e1a645da750ffdc0d2a56e1fab0294/stdlib_list/lists/3.6.txt) ---- 
Sure but range in python 3 already returns a generator. So i didnt want to explain generators with generators
`range` returns an `Iterable` (not a generator), but in any case, I don't think you should ever write that kind of `while` loop in Python.
I agree. But again it was just for explaining. The same as the first example with 3 yield statments
This looks really cool.
&gt; in fact you won't even be able to instantiate your class until you've got an implementation for all of them. OK, I wont be doing an ABC. You convinced me. &gt; (...) you'll see that there's quite a large number of methods (...) Yeah, I saw thet: q=longFloat(10**10-1) for attr in dir(q): print("q.%s = %r" % (attr, getattr(q, attr))) q.__abs__ = &lt;bound method longFloat.__abs__ of 9999999999&gt; q.__add__ = &lt;bound method longFloat.__add__ of 9999999999&gt; q.__cmp__ = &lt;bound method longFloat.__cmp__ of 9999999999&gt; q.__div__ = &lt;bound method longFloat.__div__ of 9999999999&gt; q.__doc__ = None q.__float__ = &lt;bound method longFloat.__float__ of 9999999999&gt; q.__init__ = &lt;bound method longFloat.__init__ of 9999999999&gt; q.__int__ = &lt;bound method longFloat.__int__ of 9999999999&gt; q.__len__ = &lt;bound method longFloat.__len__ of 9999999999&gt; q.__long__ = &lt;bound method longFloat.__long__ of 9999999999&gt; q.__module__ = 'longFloat' q.__mul__ = &lt;bound method longFloat.__mul__ of 9999999999&gt; q.__neg__ = &lt;bound method longFloat.__neg__ of 9999999999&gt; q.__pow__ = &lt;bound method longFloat.__pow__ of 9999999999&gt; q.__radd__ = &lt;bound method longFloat.__add__ of 9999999999&gt; q.__rcmp__ = &lt;bound method longFloat.__rcmp__ of 9999999999&gt; q.__rdiv__ = &lt;bound method longFloat.__rdiv__ of 9999999999&gt; q.__repr__ = &lt;bound method longFloat.__str__ of 9999999999&gt; q.__rmul__ = &lt;bound method longFloat.__mul__ of 9999999999&gt; q.__rsub__ = &lt;bound method longFloat.__rsub__ of 9999999999&gt; q.__rtruediv__ = &lt;bound method longFloat.__rdiv__ of 9999999999&gt; q.__str__ = &lt;bound method longFloat.__str__ of 9999999999&gt; q.__sub__ = &lt;bound method longFloat.__sub__ of 9999999999&gt; q.__truediv__ = &lt;bound method longFloat.__div__ of 9999999999&gt; And the list is way longer for regular floats. &gt; Now, why would 1/3.0 crash your computer? 0.33333333333... until no more memory? &gt; And also what I think you want is the decimal.Decimal, Nah, I wanna learn from that. After I use a pip installable lib for the floats, I'll have to do the same to my "Diffie-Helman handshaker"-reason to need these long floats. "What? you dont use &lt;insert handshake libname&gt;?". Where is the fun?
You just made the Python path to entry many miles shorter.
Your naming conventions go directly against PEP8.
Thanks for the heads up! Is it that I should be using underscores instead of camelCase?
Pretty cool
Have you tried notepad++? Or even a cli editor if you want even more lightweight. I use pycharm, which is fairly heavy(to heavy for my pi lol) but when comparing to IDLE stuff like auto complete actually go way faster and it cut down my overall time spent 2-fold with just that. If you just like IDLE though, more power to ya I remember when I first started coding everyone told me to use wingIDE, I hated it so much it took me years before I would try anything other than IDLE :)
What operating system do you use? This is Linux-related advice (although I believe that Inkscape has been ported to OSX and Windows), and mostly off-topic for this sub, for which I apologise. I started with matplotlib plots -- sometimes multiple plots in one figure, when I needed to share axes. I also use Seaborn, a library which extends matplotlib, although I haven't done anything fancier than importing it to make the plots look nicer by default. I agree that laying out subplots in matplotlib is a pain, and I would love to hear about any libraries that make this simpler. I export the matplotlib plots to SVG. I intended just to convert these to PDF and lay them out directly in LaTeX, but rapidly ran into various annoyances while trying to position complex nested subfigures. So I used Inkscape as an intermediate tool for producing subfigures which I imported into LaTeX as a single figure. This workflow keeps the plots as vector images the entire time. Rasterising them would lead to a tradeoff between image quality and file size, and it's unnecessary. Inkscape has various tools in the "align and distribute" box for positioning elements precisely, as well as options for snapping to guides, grids, etc. -- so you can be pretty accurate in this step. (Inkscape also has a pretty good tool for vectorising bitmap images, which you can use to improve the quality of figures for which you have no vector source. It works best on high-resolution line-art; worse-quality images can sometimes be pre-processed successfully in the GIMP.) Some caveats: * Inkscape can in theory integrate quite closely with LaTeX -- you can export a pdf file with only the images and a tex file with the corresponding text, so that you can import the tex file into your document and have all the text rendered by LaTeX with its own fonts. In practice, this does not play well with subdirectories, so I opted to install the truetype versions of the LaTeX fonts, lay the text out myself, and just produce standalone PDFs from Inkscape. * You can call `inkscape` non-interactively on the commandline to do that svg to pdf conversion, which means that you can incorporate this step into a makefile, and not have to manually re-export the figures whenever you modify them. I always write makefiles for LaTeX documents for this reason. * Obviously if you create your subfigures in this way you won't be able to reference them individually in LaTeX; you will have to hardcode the subfigure numbering. * There's some kind of bug or limitation of the svg format which causes the bars of exported histogram plots not to align seamlessly -- in the svg and in the final pdf you will see white lines between the bars at random places depending on the magnification. You can fix this in inkscape by ungrouping the bars until you have a bunch of paths selected and then combining them into a single path. Then you will have a solid shape with no gaps. You shouldn't have this problem with bar graphs which have gaps between them. 
Try /r/learnpython. Show them the **complete** code you have and describe where you are stuck. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Yep, I've tried most (If not all) of the popular IDE's, but they all seem to suffer from the bloated front end problem. It's probably because I started coding back in the jurassic era, but I prefer a simple look. And since I'm a touch-typist, the other features don't add much for me. (Though I do use notepad+ for remote editing. Sometimes.)
That actually looks super helpful. I usually end up just strategically placing "print x" when it doesn't work.
First, wrong subreddit, this should be in [r/learnpython](https://www.reddit.com/r/learnpython/). Second, *what*?? You're going to have to reword that to a) make sense, and b) give some idea what you're asking for and what you've tried so far. This syntax: user_list[0] = accounts(user_list[0],password_list[0]) Says assign to the first item in **user_list** the return value of calling **accounts** with two unnamed arguments, the first being the first item in **user_list** and the second being the first item in **password_list**. So, since we have no idea whatsoever what you're after, except that **accounts** should apparently be a -- misnamed for Python -- class, the best I can say is: class accounts: def __init__(self, user, password): pass Which will result in **user_list[0]** being **None**, since I've no idea what you want done with this operation.
Pipenv is the cargo/npm/nvm of Python. It is an improvement of a pipfile.txt. It mainly helps you get reproducible builds by generating a lock file with the exact versions of all libraries used to run your program. Also, it's more versatile than a simple pipfile.txt because the format used for the config file allows you to specify optional depedencies, turn on/off features from certain depedencies, etc... (or at least it should be able to :P). It also manages virtual environments for you, so that's a plus. Overall it's just great.
Dunno. Placing an arbitrary limitation on the user to accommodate a code issue kind of grates on my nerves. At some point maybe I'll see about compiling Idle and hiding the source...
I'd go with yes. Even if it's fluid, I don't think it's gonna change that much. And if it does, it will probably take like 3 minutes to update to the new format. 
That's what this is primarily meant to replace, particularly the cycle of thinking "printing this will reveal the problem", running the program, and discovering that in fact it didn't reveal the problem and you probably need to print something else.
I think the display of the list at first glance.
I suppose if you're more comfortable with a web UI then this is preferable to [pycharm](https://www.jetbrains.com/pycharm/)'s debugger. Cool idea.
Again, please elaborate? Do you mean [this list](https://i.imgur.com/5OrB76I.png)? What is not clear?
You had it in the `LyricsCorpora` directory. Also, you still have some PEP8 issues with spacing and such. Try running [pycodestyle](https://pypi.python.org/pypi/pycodestyle) on it, or Inspect Code in PyCharm.
This is very cool. It's an idea that's been in the back of my mind for decades and now you've made it!!!
Haha that IS troubleshooting. I actually also work on aircraft as an electrician. We kinda do the same thing. System doesn't work? Cut the system in half and take a multimeter reading. Still doesn't work, cut it in half again. Most of the time we're reading good readings. Some systems have a computer that'll tell you what component failed, but usually the component is fine it just looked like it failed to the computer, and it's something else. Anyway, I might give this a go. 
Make html pages with dash, it's pretty simple and you can PDF the while page if you want
This is awesome! I was doing some work with google APIs recently, and it‚Äôs really annoying having to debug where I don‚Äôt want to just run the code over and over and over with print statements because the API calls cost money... 
Never TIF. FITS or HDF5 (the latter being greatly preferred unless you need backwards compatibility with punch cards)
Thank you! Not interested in having someone do it for me, I genuinely want to learn it/am interested in it. I just want certain concepts explained a little. I actually had someone help me out yesterday, we talked through a lot of stuff, helped SO much. This is a career change for me, I'm not a typical college-aged student. 
Wtf there is a dollar cost to every call?? 
Got it! Feel free to reach out anytime- happy to help out!
LOVE IT. Iv'e been waiting for someone to do this since I saw it being done in that IDE on Kickstarter a few years back. Light tablet? something like that, can't remember the name, it didn't work on Python in the beginning and I never got it working well once they added Python support. Then I fell in love with Sublime so that was that. ................anyway, this looks good.
Light table? 
I just made the changes that PyCharm's Inspect Code suggested. Do you have any further suggestions on style changes, programming methodology, or the project's concept? You have been very helpful so far!
Some of your argument/variable names are still camel case. Also, property accessors like `def get_name(self): return self.name` are considered bad practice in Python - it's better to access the attribute directly. Also, your `__str__` methods return the name of the artist/album/song directly - I'd rather see something like `Artist(name="Drake")` to make it easier to differentiate those objects from simple strings.
Python is way easier and faster to write and read than Java.
 I use variable bytes length float. If I multiply by 100 the "100 digits after the point" limit, I get: from longFloat import longFloat from longSqrt import lsqrt a=longFloat(lsqrt(2*10**20000))/10**10000 a 1.&lt;snip&gt; a*a 2 The writing of the sqrt is still crappy: Didnt plug lsqrt in myfloat... But you see the gist. I need large floats including sqrt for DH: I want to use Lucas Algorithm to check for primality of a random key. The Lucas algorithm magically delves in floats and somehow give an int result. That needs good precision to round to the correct long.
This will server will be abused. I hope you don't plan on opening this up to the web, Flask [documentation](http://flask.pocoo.org/docs/0.12/api/#flask.Flask.run) advises against running a production server via `app.run()`.
I don't think I'll ever give up debug-via-`print`, but this looks cool as a teaching aid.
You made the jump from "don't like a busy desktop" to "don't know how to use it". Invalid assumptions like that probably add more to your debugging time than a "real debugger" subtracts. An environment that allows you to focus your attention on the problem space instead of multiple rows of overly-busy UI items might help you to stop making those kind of erroneous assumptions.
Mate, you're making too much work for yourself. from contextlib import ExitStack fnames = ('some-file.dic', 'another-file.dic') with ExitStack() as stack: files = [stack.enter_context(open(fname)) for fname in fnames] uk_dict = [line.strip() for file in files for line in file] - [`contextlib.ExitStack`](https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack) - [`str.strip`](https://docs.python.org/3/library/stdtypes.html#str.strip) Also, closing your files (or, preferably, opening files in a context) is not a bad habit to get in to. Implicit file cleanup is an implementation of the CPython garbage collector and so is not a guarantee of the language. Files unintentionally left open have the potential to make users unhappy. Cheers
Okay, I just changed the names for all the variables/arguments, removed the property accessors, and reformatted the __str__ methods. The code looks very nice and consistent, thank you! 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/django] [Can't open file 'manage.py'](https://www.reddit.com/r/django/comments/7v24vd/cant_open_file_managepy/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Amazing job, I will definitely give it a try
This is cool. I'd always thought about maybe creating a little utility decorator that prints out every variable value in a function, but this looks much better, nice work. üëç
my first thought was it sounds like it would be excellent as an extension to a debugger rather than an alternative
Doesn't google's api have testing keys for exactly that?
Jetbrains ides, netbeans, eclipse, visual studio... I think all of them have this functionality.
If you are going to keep debugging via print, you should consider debugging via logger instead. It's a waste of time to be adding and removing print statements
Like I said in another comment you should consider debugging via logger instead. It's a waste of time to be adding and removing print statements
I just found that there are improvements on parallelism in PostgreSQL 10. You might find it useful for your issue :) Cf: https://wiki.postgresql.org/wiki/New_in_postgres_10#Additional_Parallelism_in_Query_Execution
I‚Äôm not sure about testing keys... I‚Äôm not large-scale enough for it to really matter at all, I was just individually running about 8,000 queries to build a data set for economic research, so once I made all the calls I can just store it locally and then run all my code against the local copy. It‚Äôs more the principle, I guess!
&gt;JavaScript 72.4% Soooo... it's a locally running webapp?
I just add debuglevel print statements while I program. Depending on the program, something like level 1 = status, level 2 = comms, level 3 = major function calls, level 4 = super detail. If something's not communicating properly, I switch to debuglevel 2 and watch comms. If there's a complete breakdown I switch to level 4.
Besides this one, is there any other you suggest? What do you use?
Perfect, but why reinvent the wheel with your own levels and print statements instead of: import logging logging.basicConfig(filename='myapp.log',level=logging.DEBUG) logging.error('Something went wrong, check this and that') logging.info('The file {filename} was saved to {directory}') logging.debug('This will show only for development')
I use [this](https://www.reddit.com/r/Python/comments/7v0q88/ive_created_a_debugger_which_lets_you/dtoyc86/), well with a little more configuration 
Flying a little blind here, but are you on this step when you encounter this error? &gt; python manage.py runserver Assuming you're running this in a terminal, it's likely you're in the wrong directory. Can you describe how you're getting to the point where you're running the command I copied above (as in, are you opening your terminal, or something else and then typing that in?) Try changing into that directory where manage.py is in your terminal while you're in the venv, and try running it again. 
Yeah it looks like it is a web app.. hmm I don't know how portable that would be for me esp at work.. also I wonder at the speed at which it runs since I assume you will be sending a request and receiving a response back.. 
Yes, the GUI is a web app. You don't have to run it locally, but that's the most likely case. The JavaScript percentage is skewed by statically included libraries, the bulk of the code is definitely python.
Great project! Something somewhat similiar has existed (as a purely educational tool, yours seems potentialy useful in actual debugging) online for a while: http://www.pythontutor.com/visualize.html#mode=display I used it a bunch when learning python
Why do you think noone does? Logging gives you information of what is going on before you run the debugger to find/fix the error.
Could you elaborate why it wouldn't be portable? The performance is terrible while the program runs since it's recording the values of all expressions. It only sends a couple of database requests per function call though, and the web app is very simple and fast.
It might be, and that's a good potential future project, but for now I wanted it to be as flexible and non-opinionated as possible. This way anyone can use it regardless of what other debuggers they prefer.
I usually insert a pdb.set_trace() so I can inspect anything I want rather than just the repr of x. 
Thanks for this!
Thanks. It's good reassurance, I'll be sure to give python a shot.
You should try not to have just a plain `except` without trying to handle it in some way or at least logging it/let the user know there was an error. If you know what type of error your looking for, use that exception (`exception KeyError` for example). You can also use `find_all` instead of `findAll`. `findAll` is the old way from bs3 `find_all` is the new way. Last you shouldn't concatenate strings with `+=` use `.join()` instead ([reason](https://docs.python.org/3/faq/programming.html#what-is-the-most-efficient-way-to-concatenate-many-strings-together)).
Too dirty to be shown yet. But I'm quite happy with my lsqrt routine which handles 100k digits under 1.5s (is on [github](https://github.com/Brouss3/long-sqrt) if interested) I'm turning these wikipedia pages in the prog: https://en.wikipedia.org/wiki/Lucas_sequence https://en.wikipedia.org/wiki/Lucas_pseudoprime https://en.wikipedia.org/wiki/Baillie%E2%80%93PSW_primality_test 
Hi! Thanks for your time. I've taken snapshots of the steps that I've taken, they are below. [Creating a new terminal from directory] (https://imgur.com/FYoMXAC) [Running command in terminal] (https://imgur.com/9AorHfz)
I do that too, it definitely has its merits. birdseye is meant to be extremely quick and convenient for viewing many expressions, without any typing, copy-pasting, or stepping through lines. You can also view the contents of an object (e.g. its attributes), not just the repr.
I think you're thinking of a traditional debugger. I've never seen a debugger of this nature.
No I got it, I'll just Google whatever I don't know. Thanks!
I think he's serious. That's a negligible amount of money though, unless your user base is huge.
&gt; I have the following code Where is the code, all I see in your post is some data. 
Gonna second this. I hijacked requests' transport adapters to log every request and response they get when logging is set to debug and I've never regretted it. Between that and using correlation ids (essentially a guid header), we have excellent debugging between APIs. Unexpected exceptions get their stacks sent to kibana and tagged with the correlation id so we can see what the heck actually went wrong in a particular cycle. 
Flask, being a `wsgi application` usually depends on the `wsgi server` to spawn multiple processes to handle concurrent requests. Are you using something like nginx, gunicorn or apache to front-end your app? 
Once I uncover a Problem Area I turn the print statements into debugs.
I‚Äôm so new to programming that I keep switching those words. It‚Äôs a txt.file with the data i posted
[removed]
You mean like [Code Review Stack Exchange](https://codereview.stackexchange.com/)?
Ive been taking a linear regression course and have been using the Numpy, Pandas and Mathplotlib libraries in Python. I don't know much about R, but these have been really easy to learn and use
Thanks. 
I recommend some of the PyData or PyCon videos on Jupyter, pandas, scikit-learn, numpy, matplotlib. In particular Brandon Rhodes has made some inspired video tutorials. see http://pyvideo.org/speakers.html
Inkscape runs well on both Windows and macOS and the installation is quite easy.
there's ~vastly more control flow indirection than in java. in java you know when you're calling a method on an instance that execution is going to go directly there (even if it's ultimately multiple layers of interfaces jitted and inlined by hotspot). in python besides just arbitrary decorators you have operator overloading, __getattr__, __getattribute__, descriptors, generators, and numerous other forms of dynamism, all of which can be (and, fundamentally, is) mutated at runtime. this is what makes python remarkably hard to jit and deceptively hard to statically reason about, but it's really just part of the xen of python - you have all this flexibility, it's up to you to use it judiciously and not abuse it. these are my two favorite languages of the moment and i use both extensively but it as a language is not simpler than java like c is not simpler than assembly, but it's certainly more expressive.
Yes a traditional debugger with some help by the IDE, I mean you select a statement press son key command and it tells you what value that statement has in an specific moment.
Has Asciitable been replaced with astropy.io.ascii? http://docs.astropy.org/en/stable/io/ascii/ BTW, you will get better answers if you specify what you want to match as there may be better ways to solve your problem than regular expressions.
Try PyCharm. You can set breakpoints and watches (instead of Print(x))
&gt; Why do you think noone does? Mostly because people don't know better or that they think IDEs are scary/complex/complicated/some-excuse PyCharm is very literally the best IDE for Python out there. (Visual Studio holds the crown for the best IDE ever, though...)
Does your tool (birdseye) integrate with PyCharm?
You should learn how to use `logging` where you log all your messages via: `logging.debug("some message")` rather than using `print` It'll level-up your code.
I don't know any programmer in real life that doesn't use the debugger. Probably you mean beginners, but that's normal they probably don't know what a debugger is yet.
&gt; The performance is terrible while the program runs since it's recording the values of all expressions and saving them in memory. As one would expect, not sure why anyone would be surprised by this fact.
So what exactly is your question? Also what are you trying to find in the data? If you are asking about regular expression in general: in python you can use the [re module](https://docs.python.org/3/library/re.html) to implement regular expressions in your code. [This site](https://regex101.com/) is really awesome for playing around with and testing regex's. Finally, if you need a more thorough introduction [Automate the boring stuff has a great chapter on regular expression](https://automatetheboringstuff.com/chapter7/)
I want to match the data. The way I was told was ‚Äú to seperate before from after by recognizing a pattern in the file‚Äù I guess it could be the names of the columns. The before and after link with the tables. Top is before, bottom is after
How to extract just the data by recognizing a pattern in the file. The way it was phrased was ‚Äúseperate the top and bottom charts by recognizing a pattern in the file‚Äù
One of my co-workers insisted on coding in vim for a long time and manually debugging. I eventually cajoled him into trying PyCharm and now he's a full convert (more so than I am...)
This does seem pretty useful as, like most people, my debugger is printing lol
Or if you use pycharm you can you the full featured debugger and pause the program at a break point and then you can open a console and play with the values while the program is paused.
Can you update to Python 3.6?
Linear models and generalized linear models are really easy to use in R as well. A big plus would be that there's no need for additional packages. I guess it's all a matter of taste. The overall syntax of R is somewhat unusual though. 
I installed it but IDLE still has my version as 3.5.2, does it matter?
You would have to rebuild python to incorporate that patch, it won't likely in your package manager for sometime. You may be able to work around the problem by using a different OS or hardware. Maybe a VM that hides the triggering interfaces mentioned here? https://bugs.python.org/msg309876
Having been through type hell over the years handling data with Python, I'm looking forward to playing with data classes when I start coding for Python 3.7
They've been backported to 3.6 here: https://github.com/ericvsmith/dataclasses if you'd like to get on it early.
Pycharm debugger does the same except after the statement is evaluated, the value is place after it on the same line. They also show you the values of all attributes and variables in a subwindow within the IDE.
please do this for C. please please!
Floats are stored in memory this way because this is how they need to be represented for the processor to handle them as it was designed. It has everything to do with how processors work. In fact, everything in memory has to do with how processors work, because that's the whole point of memory in the first place.
Not to downplay your accomplishment, OP, but [GNU DDD](https://www.gnu.org/software/ddd/) apparently supports Python now too.
Are you rewriting the files? Splitting them into two contiguous parts? Can you start at the beginning of the file and examine each element in tuirn and recognize when you need to split the file?
&gt; Ivory tower Thank you so much for the explanation. I'm new to EEG and may be working with it more as a graduate student, if I'm accepted into a program. What do you mean "Ivory Tower escapee"?
You can try running "idle3.6" in the terminal.
I‚Äôm splitting into two parts and then doing some data analysis on the tables that I know what to do there, I just don‚Äôt know how to split it. I was told to see a pattern in the file, which i know is the initial text and column names, not sure how to code that
Is it? Didn't know that. Good to know.
As a long time C/C++ and then later on C# developer I feel the lack of static typing is a breath of fresh air. If I forget or don‚Äôt know a type its usually one grep away anyhow. 
For an existing dictionary: for key, value in dict.values(): print(key,value)
I tried that earlier but I was getting for key, value in dict.values(): TypeError: 'int' object is not iterable
Because your code right now is wacky. input() returns whatever a person types in, that‚Äôs a string. Fix that first. Second, what dictionary are you talking about ? The one you‚Äôre trying to declare and return all at once?
Does vim + pdb count as automatic debugging?^^
Input is always string. Change that particular line for dollar as dollar = float(input(‚Äòblah‚Äô)) Your post will be removed as it is against one of the rules. So in future use r/learnpython for such questions. Best of luck!
Thank you!
Hi, I tried that, and got this new error unsupported operand type(s) for /: 'float' and 'str' What gives
Change price input to float as well. 
Worked, thanks!
No problem!!
A persistent work queue, a scheduler of that work, controlling one or more work-performing things that can be paused/resumed. Some method of altering the queue (add/remove urls), the biasing the scheduler (priority) and monitoring the work (download size/rate/eta). Bake at 375¬∞F for 75 minutes. 
I'm sorry, I haven't used any of these before. My basic setup is react on the front-end making requests to the flask API. How do i go about doing what you're telling me? Also, what is the point of app.run(threaded=true) in flask? I've used node.js for backend usually, but this is the first time that decided to go with flask.
I'm sorry, I haven't used any of these before. My basic setup is react on the front-end making requests to the flask API. How do i go about doing what you're telling me? Also, what is the point of app.run(threaded=true) in flask? I've used node.js for backend usually, but this is the first time that decided to go with flask.
Can this be integrated as a plugin for visual studio code? 
You haven't flown Spirit Airlines I assume 
References to age in addToAge() should be `self.age`. Try checking out /r/learnpython as that's a better resource if you're new to python!
Many services (e.g. Google, Bing maps) charge their API consumers for API calls made over a certain limit (say 10,000) in a certain period of time (say day, week, or month) depending on the market economics of the service/data they're providing. They may also charge if you want to make a very large number of queries per second, since most APIs are rate-limited to prevent abuse. /u/mountainunicycler states below that they're making 8,000 calls to collect some economic data, so probably they are paying for one of the above reasons. If they were to make these calls too often or too quickly, they'll could be bumped up to a higher cost tier and, thus, you could consider that bump amortized over the number of extra calls to be a "cost" for making those calls. (This is just one way the API economics might play out - there are a LOT of other possibilities).
This approach to fault finding is common practice and is taught to people working a trade that requires them to fault find.
To do a set operation, you need sets, not lists.
That's local variables, not every intermediate expression.
Yes, this is the wrong subreddit, for this sort of question it's best to ask in [r/learnpython](https://www.reddit.com/r/learnpython/). But when you do so, ask one question, not several that don't seem to have any bearing on each other. And try and be clear on what you're asking. To answer your main question: Google Sheets has an API that Python can interact with, and with this you can access and read any Google Sheet you've got access to, read the lines, and yes save to a csv if you want. If you're saving the file to disk first, then the easiest way is to download it as a .csv directly, which is a feature built into Google Sheets.
The fact that printing dataclasses gives a useful output by default is enough for me to want to use it everywhere. 
It does not. But if you help me develop birdseye, then one day it might :)
All my coworkers use vim, I'm the only one that uses PyCharm. It drives me crazy.
If you help me develop birdseye, then one day it might :)
As a long time Python developer, I find its lack of static typing to be more painful than useful. Like even if you knew the type of a particular object, you don't actually know what fields it has or doesn't have until you trace through its entire callgraph. That's so painful to deal with even in a small codebase.
I wouldn't know where to start 
You're using the "Any" type, which is opting into bypassing the static type checking. This is the baseline Python "untyped" static behavior. This is very useful if you're gradually migrating from untyped python to typed python in a larger code base, for instance. Basically mypy is a super-effective lint, which is why people are excited about it. Like any lint, you can edit your code to make the lint checker happy, or finetune the lint options to ignore some kind of lint issues. And then maybe later come back to finetuning types and making the lint-checks happier in places it otherwise has a lot of warnings. For your first example, you can get an error with the static type checking for use of "explicit" Any, by passing this argument on the mypy command-line: --disallow-any-explicit Or alternately, if you need Any for function h, but want function n to never be callable with anything other than an int, then you can play with the various "--strict" mypy options, eg "--disallow-untyped-calls", along-side use of the '# type: ignore' comment. And for allowing the second example to pass type checking, make sure you are using this option: --allow-untyped-decorators Since it sounds like you're explicitly using this option at the moment: --disallow-untyped-decorators Meaning you're opting into getting that error message. The general idea behind mypy for existing code bases is to start with the most relaxed settings, fix those warnings, then slowly start making the checks more strict, until they're strict enough for your liking / linting needs. My general rule of thumb is to only be serious about mypy for scripts that are over 1000 lines long. And use the strictest mypy options that I can get away with. mypy is an optional tool. Use it if you want to, don't use it if you don't want to. Some projects have stricter coding standards (eg, your code must be covered by unit and integration tests, your code pass various lint checkers, your functions must have docstrings, etc). mypy static type checking is just a tool you can add to your dev process, like any other tool (eg like you can optionally add unit tests via pytest). 
i've just started writing logging module for forecasting prgram
Check out /r/learnpython
https://github.com/alexmojaki/birdseye/issues/49
I had the opposite experience coming from c#. I hated that python wasn't strongly typed. I mostly use rust/go for bigger projects unless I am forced to use python. I like python, I just like static typing better.
hmm, u should try default python debugger: pdb ``` import pdb; pdb.set_trace() ```
thanks you!
I thought download managers were a thing of the past... what are they good for nowadays?
You can get help on python over at /r/learnpython.
I did'nt know httpie. So I wasn't too influenced by its concepts. Httpie seems (a lot) more advanced and more powerful. Httpie seems heavily based on command line. Reqman is much done for non-computer scientists. In reqman, the command line is just to run the tests. Everything should be defined in YAML files. It's more like "postman's collections", you design yours tests in yaml and in folders. And you can run them as you want (grouped or not). It's more conf based. It's very like, like postman, but without GUI. You only need to know the basics (requests/response headers/content/http verbs ...), and the basics of yaml indentations, and you can go. You don't need to know bash scripts ... you create yours tests easily, and the command line just return the number of failed tests (so you can script here ;-) ... 0 is everything is ok, -1 if an "syntax error". reqman has its place in this world ;-)
For any developers potentially working in places I'll be employed in: Please adopt [some](https://pymotw.com/2/pdb/) of [the](https://code.visualstudio.com/docs/python/debugging) industry [tested](https://www.jetbrains.com/help/pycharm/starting-the-debugger-session.html) methods [of](https://kodi.wiki/view/HOW-TO:Debug_Python_Scripts_with_Eclipse) efficiently [debugging](https://sourceforge.net/projects/pyclewn/) your [code](http://winpdb.org/). I'm convinced that teaching basic debugging should happen in any 'programming 101' course - The learning time pays itself off within about a week of work.
To get you started you'll need to research lists, the raw_input() function and the split() function, I'd have thought.
You can just export as CSV in google docs. No need to write any code 
It's like a binary search, but with more profanities.
Feel free to shoot me pms and I‚Äôll always be happy to answer. 
Nice but not really a true blackjack
Another thing I've noticed: you allow setting `name` on objects like `Artist`, and don't invalidate the cache when you do so. This means `drake = Artist("Drake"); drake.name = "2pac"; drake.get_album_list()` will still return Drake's albums. 
That's actually easy. I recommend you to learn dictionaries, lists and stuff like these. You should learn how to do it on the first site you see.
The wikipedia thing is called "scraping", and yes, you can do it with Python - but then, any general purpose language will do, as long as there are libraries for HTTP and for parsing HTML. More generally (automatically connect to and communicate with online services), such tools are called "bots". For the excel-to-csv thing, same, however, it's probably easier to use existing tools. Fkr example, libreoffice can be used as a CLI program that you can use in a bash script, then converting excel to csv becomes a one-liner.
There was a bug in the program that allowed the opponent to win, which I conveniently fixed.
&gt; a bunch of errors *What errors*? Post *your exact code* and *your exact errors*.
That's because stackoverflow is not a "please help me with this specific problem" site, the idea is that by answering suitable questions, the community produces an FAQ style collection of resources that is maximally reusable. This has resulted in a culture where people police quite heavily against questions that don't fit the goals or purpose, and because there are lots of those, the people who do the policing often come across as snarky or rude. In short, find a place that is more suitable for the type of questions you want to ask, e.g. /r/learnpython, #python on IRC, etc.
&gt; What is the level of difficulty for something like this ? Pretty easy to relatively complex depending on the features you want. Grabbing a bunch of stuff with N parallel downloaders is pretty simple. Pausing &amp; resuming downloads and priority queues is rather more tricky, depending on how much support you're getting from your libraries.
Python (just like any programming language) can be used to make whatever you want. The real question is whether you should.
If you are talking about "replace" your version that comes included, you can't, too much dependencies are related. But you can install Python 3.6 alongside Python 3.5, adding the DeadSnakes PPA (https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa) and.installing the.package python3.6. Now, another alternative will be that you use pyenv (https://github.com/pyenv/pyenv) to instal several python versions and use this to install 3.6 
Where exactly?
OP has fixed their code since that comment was posted. You can check the revision history on Github.
Alright, sorry, just was confused as everything looked exactly like how I write it.
This is super awesome, have you considered combining that with Thonny somehow? Seems your goals might be very compatible?
People ask for code reviews on /r/learnpython all the time. You will probably get better results if you post small code samples rather than large bits of code.
I may sound stupid, but wasn't a python extension for VSC? I remember installing it once.
If you want to unzip an in-memory zip-file quickly in Python, you can fork off a bunch of processes and unzip one file per process. When forking of children, all processes share a read-only view of the same memory, including the zip-file.
What I mean, is it based on what python has for parsing executing code and etc, or did you implement all that on your own? &gt;The source file of a decorated function is parsed into the standard Python Abstract Syntax Tree. That doesn't tell me whether you do it yourself or whether python has this functionality. I'd love to learn about it but for python, if it's already there, I don't really want to bother.
Can you describe what kind of work you do? It seems absolutely crazy to me to not like string interpolation. It just cuts down on code in so many places!
Considering dataclasses are huge (compared to a tuple), and that they probably have some extra penalty for accessing member, I do not see them going anywhere for numerical purposes, where the usual problem is that you have a million element of the same type, not 4-10 dissimilar elements. 
Is your tool different from the "watch" and "inspect" features? (not sure what it's called in pycharm exactly) In other words, do you re-evaluate the expression to display its value or do you read the value as it's executed? The pycharm debugger re-evaluated the expression and that was causing schroedinger-like behavior!
[PyCharm as the Ultimate Python Debugger](http://pedrokroger.net/python-debugger/)
I've never used that formatting syntax. It looks cleaner than using logger.info('The %s was saved to %s', filename, folder') Any reason not to switch?
HDF for the *storage* format, [Xarray](http://xarray.pydata.org/en/stable/) for *processing* the data. Seriously, I can't use unlabelled arrays anymore :-)
&gt; Ivory Tower escapee u/rubicon_crossed got out of academia, and is happy about that :-)
Speaking for just myself, who has been using Internet Download Manager Pro for about 4 years, the speed difference is dramatic sometimes.... I'll download something with Chrome (on accident) and it will hit peak speak of 400kbps... Then I'll download it with IDM and speed will hit 4-5 mbps... 
seems really good for web development but kind of a pain in the ass for what I use python for, that is machine learning development, using tensorflow
Do try Apache Arrow http://wesmckinney.com/blog/apache-arrow-pandas-internals/ https://arrow.apache.org/blog/
It only works in python 3.6+, so if that's not a problem for you go on.
They are the same in these cases, I use the new f-strings as well! They only work in python &gt;= 3.6, though.
As a noob to python, how do I actually implement it? 
Puzzle @ https://app.finxter.com/learn/computer/science/378
You‚Äôre welcome to join the (unofficial) Python community in slack. It‚Äôs a pretty active group (11,500 total members, 1,200 daily active I think). pyslackers.com
Wow, thank you for the thorough advice. I actually do use Linux, so I can probably do all this stuff. I'll have to read it more thoroughly and then try implementing it to see if it's something I can scale up to normal use. Thank you so much though!
You will have to use the [decimal](https://docs.python.org/3.6/library/decimal.html) module, built-in floats can't handle that much precision.
Cute.
Anyone try the debugger? The one built into sounder isn‚Äôt so friendly...
Yep! It‚Äôs why I moved away from it. It was also consuming massive amounts of memory though it could have been my code (though the sqlite3 only one uses about 1/5 and not much changed). Still, it‚Äôs a useful way to get a database without learning databases. 
*Why* do you need such extreme precision? I'm not saying you're wrong, just that there may be a better solution.
They aren't the same - when logging, you should use the format you're currently using. That way, the logging module will only do the string interpolation if the log message is actually going to be outputted somewhere - if you use f-strings or str.format (or even just %-formatting), the string gets interpolated regardless.
What you're looking for is an IDE. Try IDLE, Spyder or PyCharm.
I'm studying patterns in decimal places. 
Try jupyter notebooks! It's an enhanced command prompt where you can program by cell. Very easy to use, very powerful. It's part of the anaconda distro: http://jupyter.readthedocs.io/en/latest/install.html
This is actually cool, I already knows how ast works and so rewriting the wheel before playing around with it would be waste of time, didn't know that these guys actually put a lot of functionality into the STD itself.
Wow. Thank you. Lol
Lol
Not sure. I've only dabbled in vim and pdb. Not sure what automatic debugging means, either. I have yet to see a compiler automatically fix my code's broken logic. ;)
If you're looking to run your python code stored in a file, you can use the `python` bin from your command line. Secondary benefit, it gives you good practice and experience using Python that IDEs hide away. Plus it's simple. As a Python developer all I need is Vim, python, and pdb.
Then you'll need to use the `decimal` module, as /u/anossov said, and prepare for extreme slowness.
I only worked with Tweepy to create my bot and it was great. Even when I didn't find an answer on their documentation, someone was able to help me on Stack Overflow. Good luck with your bot!
Yeah, Jupyter notebooks are a great way to interact with your code. I also recommend it.
You need to have a full deck and draw cards from it. Otherwise the odds are different from actual blackjack. As cards are drawn, the probability of getting that card again is lowered.
Bad news.
tweepy +1, the doc is pretty clear:http://tweepy.readthedocs.io/en/v3.5.0/api.html#tweepy-api-twitter-api-wrapper
I'd also ask what type of hardware needs this precision. There range of robotics tasks for which you don't need nanos.
I have processed a few years of VIIRS data and I would recommend HDF + numpy. Note that MODIS data is in the outdated HDF4 format.
https://github.com/alexmojaki/birdseye#installation If you get stuck on a step, ask.
/r/learnpython 
One of the limitations is probably the RAM required for processing the data . I would do it by batch: there probably is a way to separate your problem into smaller pieces. Store your data in HDF format (.h5) which pandas can read and process it bit by bit. 
For some reason it doesn't work :(
It was that I didn‚Äôt have the astropy module installed. I tried the code and it worked as intended to get the tables, just not sure how to get rid of the 3 lines above the data. It‚Äôs showing like this Frame Filename X Y Int 32. Str9. Float 64. Float64 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 1 Drop0474. 678.0. 758.0 Which is fine, I should be able to troubleshoot that. Thank you very much!
Good answer! My first thought was that you'd implemented a numerically unstable algorithm and were trying to brute-force your way out by increasing precision. In your case though, using arbitrary precision decimal arithmetic would be the right choice. You should also look into using SymPy to do things symbolically.
Good answer! My first thought was that you'd implemented a numerically unstable algorithm and were trying to brute-force your way out by increasing precision. In your case though, using arbitrary precision decimal arithmetic would be the right choice. You should also look into using SymPy to do things symbolically.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_mharbol] [K](https://www.reddit.com/r/u_mharbol/comments/7v7qd9/k/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
[The difference between app.run\(threaded=true\) and using a real web server.](https://stackoverflow.com/a/14823968/23972) Basically, that call to app.run uses the reference WSGI server with three threads. Neither the reference server nor three threads is enough for any sort of production site. By "enough" I mean such a site will experience extreme delays as it can only serve 3 (more or less) concurrent users. As far as how to use a real web server, just google around for "deploying flask on nginx".
I understand that in programming there are many ways to do the same thing, but c'mon, have some consistency.
You will want some process to multiplex the connections over your worker threads/processes. https://www.reddit.com/r/Python/comments/4s40ge/understanding_uwsgi_threads_processes_and_gil/ https://uwsgi-docs.readthedocs.io/en/latest/WSGIquickstart.html 
Isn't it 'False'?
Since you mention a drawing made by a turtle, are you looking for a graphical user interface for your applications? If so, you could look into GUI frameworks like Kivy and PyQt.
Pipenv integration would be ballsy. Gotta try it.
On mobile turning sideways makes the snippets even harder to read. And the answer entry is very picky - for example puzzle #342 the answer [‚Äòa‚Äô,‚Äôb‚Äô,‚ÄôC‚Äô,‚ÄôD‚Äô,‚ÄôE‚Äô] is wrong because iPhone keyboard has ‚Äò instead of '
To bad you did'nt tell us the reason, we might have been able to help. You can post bugs here: https://github.com/thampiman/reverse-geocoder/issues
As others have said, the `decimal` module should be your first approach. It's the simplest thing you can do, and for a lot of purposes probably will just do what you want. I'm just chiming in to note that if performance is an issue for you, there are a number of other arbitrary precision libraries out there that make different tradeoffs, so you should keep that in mind if you run into limitations with `decimal`.
Sorry for the short answer. Maybe this will better explain what I'm doing... https://imgur.com/PenPzj7 I've noticed that no matter what number you divide by 2 will always get to a point where it doesn't divide evenly and will always result in a .5 when you get to that point. Then I noticed that if you keep dividing by 2 the next decimals would either be a .25 or .75 no matter what number you started with. Then I kept seeing other patterns like all the decimals will end in a 25 or 75 depending on the number it was below the .5 one. There are other patterns like for the .25 it will either end in a 125 or 625 and swap back and forth. So I need to be able to go many decimals deep to see more patterns and Python has been the only easy language to get me close to this. 
Microsoft [hired](https://blogs.msdn.microsoft.com/pythonengineering/2017/11/09/don-jayamanne-joins-microsoft/) the programmer that made the extension, and continues to improve it.
savage
Alright. I'll look into this. Thanks!
Thanks man! I'll look into it!
He tells you to ask in the right section /r/learnpython
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
My first though, based on the description of needing just file name and sizes is that unzipping is altogether uneccesary. /tmp $ dd if=/dev/urandom of=large-file.txt bs=1048576 count=1000 1000+0 records in 1000+0 records out 1048576000 bytes (1.0 GB, 1000 MiB) copied, 13.4408 s, 78.0 MB/s /tmp $ python Python 2.7.13 (default, Nov 24 2017, 17:33:09) [GCC 6.3.0 20170516] on linux2 Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; import zipfile &gt;&gt;&gt; with open('/tmp/large-file.zip') as f: ... z = zipfile.ZipFile(f) ... &gt;&gt;&gt; import zipfile &gt;&gt;&gt; with open('/tmp/large-file.zip') as f: ... z = zipfile.ZipFile(f) ... &gt;&gt;&gt; info = z.infolist() &gt;&gt;&gt; [(i.filename, i.file_size) for i in info] [('large-file.txt', 104857600)] This uses basically no memory, and is basically instantaneous. Metadata like file sizes and names are stored in the zip file in a way that allows access without extracting the file.
I personally use Atom, it's just a matter of personnal preferences though
If you're looking for a good way to see the differences, do some of the practice problems at codingbat.com. They're offered in both Java and Python so you could use your Java answers to help you understand the Python equivalents. It's also great practice. 
You have to choose the straight apostrophe from among the keyboard's choices. That's definitely a pain but it can work. 
Hello, I noticed you used Linear Regression. You seem to know what you are talking about, Would you mind taking a look at my use of Linear Regression in my program to see if I am getting it as good as I can be. Thank you. 
I think you have a fundamental misunderstanding of how data works. There is no such thing as "hex data". hexadecimal and ascii and binary are all ways to *display* the same data. &gt;&gt;&gt; data = 42 &gt;&gt;&gt; print('{:X}'.format(data)) # print as hex 2A &gt;&gt;&gt; print('{:b}'.format(data)) # print as binary 101010 &gt;&gt;&gt; print(chr(data)) # print as ASCII * &gt;&gt;&gt; print(data) # print as integer 42 &gt; sort the data bit by bit Take this to /r/learnpython. Show them the code you have and describe what you want out when you say "sort the data bit by bit". Also, include which version of python and what OS you are using. 
try reading with for line in sys.stdin: ...
Is the answer " o"
Just reminding that Microsoft hired author of Python extension for VS Code https://blogs.msdn.microsoft.com/pythonengineering/2017/11/09/don-jayamanne-joins-microsoft/
The is equal operator is `==`, not `=`. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin (no images of code please). Also, include which version of python and what OS you are using. 
You're missing colons after your `if` and `else` lines. Also, you use `=` to assign a value and `==` to test for equality. Also, /r/learnpython is a better place for such questions.
Better yet, elo goes up just by refreshing.
yeah,sure!
Consider posting this in /r/learnpython
Ok will do next time :)
https://www.flexget.com
Please don't bother with /r/learnpython as some of the so called advice there is poor or plain downright wrong. Far better to go to the main python mailing list, the tutor mailing list, or stackoverflow.
Haha exactly. In reality what we do is check the easiest things to check first. If getting to the terminals to check the resistance of a wire involves removing the engine (and accompanying billion operational checks when it's put back in) or checking if a part that doesn't really break often but takes two minutes, we take two minutes and check the less likely part first. So what is the algorithmic analogue of "checking the easiest to check first"
 routes = subprocess.check_output(['traceroute', 'www.google.com']) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
yeah I just think the command prompt window looks so clunky and I want something more visually pleasing to see my code run I guess. But I don't have any specific tasks that I have to code for right now I'm literally just writing random codes and seeing what happens to get more familiar with the language.
Personally I don't know but I'm convinced that any one of the 10,600 hits on google for the error message should help you.
Ahh jesus i figured it out right after this. Putting the data into arrays was unnecessary and confused it I think. Don't really know why it fixed it but this works. def cs_maxmvavgdif(hr_array): mvavg_hr = pd.rolling_mean(hr_array,5,0) maxmvavgdif_hr = np.nanmax(np.absolute(np.subtract(mvavg_hr, hr_array))) return maxmvavgdif_hr
Znasz jeszcze jakie≈õ fajne metody jak przyspieszyƒá Pythona?
Or Visual Studio Code.
The data encoding for a meeting is an [ics file](https://en.wikipedia.org/wiki/ICalendar), which you could make available with caldav (readonly is just http) or email attachments. The iCalendar `UID` field is generated for each meeting, with the `SEQUENCE` integer (starting at 1) incrementing for each new revision of that meeting. https://tools.ietf.org/html/rfc5545 is complex. You could use https://pypi.python.org/pypi/icalendar aka https://icalendar.readthedocs.io/ to generate these files in Python.
&gt; I can use matplotlib easily enough to produce one or a few plots but when I even want to do something as simple as have a grid with a few subgrids of plots, it quickly becomes annoyingly complicated. Please see [Easily creating subplots](https://matplotlib.org/gallery/recipes/create_subplots.html?highlight=easily%20creating%20subplots).
That's metadata from the header, which is being displayed in the printable representation of the table. It's not in the actual data.
Here you go: https://pastebin.com/DQJecHms
Thanks very much, I appreciate it &lt;3
Oh yeah.!
That's ok.Use pastebin next time though aye!
That was also my reaction, but given the introduction to the essay I would expect the actual work requires the contents of the zipped files: &gt; At first I tried unzipping the file, in memory, and deal with one file at a time. That failed spectacularly with various memory explosions and EC2 running out of memory. On the other hand, IIRC zipfile should also allow lazy file-like access to file content, unless there are very good reasons to do so, you should not need to extract the entire thing in memory, you can just work on the pseudo-files you get from `ZipFile::open`. They're not seekable (random-access), but they *are* lazy.
It's enigmatic that the string assigned to `cleartext` starts with four double quote chars, while it ends with the usual three. It's enigmatic that the example calls `decrypt ()` then `encrypt ()`, instead of `encrypt ()` then `decrypt ()`, on the cleartext. But since both functions appear to do the same operation, the example appears to work.
Ah, thank you. Any way to get rid of it?
Nevermind. I did a zip to get the rows into columns and did exactly what I wanted. I really appreciate your time and help.
Is each line an index of the array? If so you can do the for loop over it and for each index split it on the white space using he split() function.
PyPi doesn't support ARM binaries. You have build the package manually.
Not PEP8 consistent, see https://www.python.org/dev/peps/pep-0008/#blank-lines
This is the console output when i do import reverse_geocoder as rg coordinates = (51.5214588,-0.1729636),(9.936033, 76.259952),(37.38605,-122.08385) results = rg.search(coordinates) # default mode = 2 print (results) https://pastebin.com/L7GT9N4T 
Being able to put a breakpoint and see what every variable is set to, execute any code in that context, and do the same thing at any point in the stack without loosing your place is invaluable. I don't care how good of a programmer you are. Its miles ahead of print statements and pdb. And thats just one of the many features it gives you. Its not clutter to anyone who knows how to use it. Being able to move a class and change the imports across 100 files with a right click is something you can't do without an ide. Unless you are gods gift to programming, have ever method in every package memoried, never have bugs, and always write perfect code the first time, an ide can do nothing but help you. And if it really was the clutter you can strip out all the toolbars, remove all the highlighting, and operate with just keyboard shortcuts - you'll see be way better off.
&gt; performs a join removing spaces. A `join` doesn't remove anything.
I dont think this is good code to expose to beginners.
A join joins each element of a list with the specified char used. ' '.join(lst) would join every element of a list with spaces after each element and return a string. ''.join(lst) would John every element but with no spaces after each element.
1. You put it there? Why 32 bit? 2. You need admin privileges to install in C:\Program Files, a single user install defaults to appdata\some\long\path. Why bother about the path when you can use the [Python Launcher For Windows](https://docs.python.org/3/using/windows.html#python-launcher-for-windows)? 3. pip will follow the python that you use to install it.
There's nothing there to get rid of.
I mean, I think it's that good.
How are you running the program? If you are on MS windows, this might be relevant: https://stackoverflow.com/questions/24363300/freeze-support-bug-in-using-scikit-learn-in-the-anaconda-python-distro https://docs.python.org/2/library/multiprocessing.html#multiprocessing.freeze_support 
Im still working on mayzja. ugh mayzja is so slow.
For anyone else. Translation from Polish: Do you know any more nice methods to speed up Python?
I suspect that most people reading know that, but it still doesn't explain why you think a `join` removes anything at all. If you still think that is the case please give an example.
What? Windows is good, man. 
For the one trillionth and fourth time 
Sorry I think you misunderstood what I said. I did not say that a join removes spaces. But what I did say is that in the picture the ''.join would normally remove all spaces from the list. But since the provided input is not a list but a string, the spaces will remain.
I don't know how any people can make such a claim as [mypy 0.560](https://pypi.python.org/pypi/mypy) is only at alpha status. For all that I've tried it and it seems to do a reasonable job.
This is a really cool idea! 
Whatever!
&gt; But what I did say is that in the picture the ''.join would normally remove all spaces from the list For the third and final time `join` **DOES NOT REMOVE ANYTHING**. What are you finding so difficult to grasp about that fact? &gt;&gt;&gt; strs = ['core ', 'blimey ', 'what ', 'is ', 'this?'] &gt;&gt;&gt; ''.join(strs) 'core blimey what is this?' Good grief all the spaces are still there, would you believe it?
I think with little argument, the following are clear benefits * If you have constructors that only assign all your self attributes, your get it for free * In most cases you no longer need custom reprs Additionally, things I think are very handy me * imo if you're already using namedtuples there's little downside to using data classes instead, but you gain consistency and flexibility * automatic equality makes testing more straightforward * It makes implementing class serialization really easy to do across the board
&gt; But since the provided input is not a list but a string, the spaces will remain. What are you talking about? `join` takes any iterable of strings (and the iterator for a string returns one character from that string at a time). Why should it matter whether the input is a list or a string?
What I meant is join adds each element of the list with the specified character. 'A'.join(strs) --&gt; core Ablimey Awhat Ais Athis?
Hopefully ‚ÄòTrue‚Äô. 
Yes, processes can exchange open file descriptors over Unix domain sockets. See https://stackoverflow.com/questions/1997622/can-i-open-a-socket-and-pass-it-to-another-process-in-linux for example code. Yes, anything that can be done in C can be done in Python (either directly or in a c module). The built-in `os` and `socket` modules may be enough. I'm not aware of any higher-abstraction module that does this work for you.
What's the output of `python -c "import faker; print(dir(faker))`?
Ok. Then `Faker` is the correc name. That exception you pasted above is hard to read as-is. What is `/root/py/time.py`??
 File "/root/py/time.py", line 5, in &lt;module&gt; from faker import Faker What is this file /root/py/time.py? That's in your PYTHONPATH before the standard library time.py, and it's breaking your other imports. Rename or remove that file, and in the future don't shadow standard module names like that.
Yes some of the function examples are purposefully confusing and illogical. I understand that the intention is to challenge the user to decipher the code but it seems counter productive to put these concepts in beginners heads.
&gt;But it says the module cannot find traceroute command and hence does not execute. PATH search isn't working. Use the absolute path to your `traceroute` binary. 
Wow. That was it. Thank you so much. 
I'm an idiot. Thanks a ton for the help!
This is exacty what I was planning on doing, but decided on instead making a locally-hosted web desktop that runs using Flask and SocketsIO. So far it's coming pretty good.
neat
My vote goes for tweepy. It's easy to use and has good docs
I mean it‚Äôs neat that it‚Äôs out, but it‚Äôs a security fix only for a version of python that is rather old. Not 2.7 crap tier old, but you had me excited for interested news to read. :(
Yup tweepy as well, seems to have the best documentation and is also up to date, the TwitterAPI directly seemed to be not geared towards a smaller, first time project and tweepy seemed overly complex for what I wanted to use it for which was just simple read/write/post for a bot. 
You can do whatever the fuck you want if you try hard enough
Full boner.
I used Tweepy for my first bot (https://twitter.com/WhatsOnSteam, which tweets every time a new game launches on Steam), and found it easy to use. The OAuth stuff was new to me (I don't do much of this stuff), but smooth sailing once I got the hang of it. I switched to TwitterAPI for my second bot (https://twitter.com/MicroTrailers, which cuts and posts a 6s "microtrailer" every time a new game launches on Steam), and switched to TwitterAPI. I wasn't able to get media (MP4, IIRC?) to upload properly with Tweepy -- but that could totally have just been me. You might start with Tweepy, since other folks here are suggesting it -- jumping from one to the other didn't take much time, so I don't think you could go wrong either way. One concern I had (if I'm reading it right) is that Tweepy hasn't updated since 2015. It may not matter for most cases.
What is the advantage of this over 3.6?
What ever you do; do not google "Mr tumble exhaust" then.
&gt; Python 3.5 has now entered "security fixes only" mode, and as such the only improvements between Python 3.5.4 and Python 3.5.5 are security fixes. Also, Python 3.5.5 has only been released in source code form; no more official binary installers will be produced.
Obviously I'm about to Google this.
If you're programming on a phone, don't. But if you have to, get a programmer's keyboard app.
twit, for twitter it.
Notably not available on Windows. If you want portable code, you'll need a fallback for `socket.socket.sendfile` not being there.
Did you survive? We have to know.
OK I'm going to speak for the millions of users held in suspense waiting for this thread to mature, but it's not happening. How did this go?
Zajebiste.
If I'm being honest with myself... I'm at half-mast....
There are lots of good folks over at /r/learnpython. What you should do is head over there, include the full contents of this script you're talking about, include what you've got so far, and enumerate what you don't understand. It's important to give as much information possible.
Apologies, Reddit temporary froze my account because their servers couldn't handle the high level of inquires hitting my inbox. My response is posted above. Overall it was a positive experience... I believe i've seen worse? I need time to reflect. EDIT: God bless incognito mode.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/opensource] [Firechat Python - Port of Firechat SDK to Python](https://www.reddit.com/r/opensource/comments/7vcg00/firechat_python_port_of_firechat_sdk_to_python/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Good call. For up to about 100K entries it doesn't make a large difference (about 0.01 seconds). But at 1 million it does take and additional 1.5 seconds on my system. For better performance should use path.iterdir() rather than path.glob(). With a 1 million entries I get 0.657s (glob) vs 0.495s (iterdir). I ended up writing it like this: def is_empty_dir(path): if not path.is_dir(): return False for filename in path.glob('*'): return False return True 
Check out gevent and gevent.monkey
1. No, I did not. And why 32bit is another very good question :D 2. When I run the installer I expect it to put a program into "program files"... I'll have a look into the launcher, thanks :)
If "you'll see be way better off" is the result when you use Reddit's simple interface, I can only imagine what you produce with a more-complicated IDE. 
Why python 3.5 sucks 3.6 is so much better 
while i appreciate the reply, i have no problem with python (sort of why I want it in python lol) and unfortunately /r/learnpinescript doesnt exist regardless, i took the time and learnt some pine script and got the job done :D
Yes! There's some good info here already but how about an example of how to send descriptors using sendmsg: https://github.com/sctthrvy/fdd/blob/master/src/fdd.c#L126 If want more context on this specific example: The project is a daemon that creates and passes descriptors upon request. The only thing that's half implemented is verifying the credentials of the requesting process.
Thanks for your bug reports! I will put them straight to my TODO list. I am aware that the site is not completely stable yet as Finxter is only my hobby side project.
Is there a list of security changes from 3.5.4 to 3.5.5?
Don't mind the trolls
Because things might have broken in a project between the two, and they want security patches to 3.5 still? I mean you're not wrong though, but you know this is pretty standard for older versions to get security updates for a while still 
So you're not looking for a text editing program, you want the actual command-line to be prettier? Use Powershell if you're on windows.
there's a lot of projects that are still on 3.5, updating it is a tough process sometimes. 
That's not how to send files faster in Python 3.5 Sendfile is also available for other Pythons in form of a module and os.sendfile (because it is OS specific). Plus also you can call the underlying C code if you really wanna dig in.
Hey there - some feedback on your code. --- You shouldn't assign attributes to functions (like `player.hp`, `player.str`, etc). In beginner code, it's always a code smell that you aren't doing things correctly. You haven't gotten used to passing items into a function in order to use them. Instead, you are using function attributes as a replacement for global variables, which is not a good idea. What you should do is use a class to contain these values. This is the best long term solution. If you haven't used classes before, I would recommend looking them up. Your solution will initially look something like this: class Player: def __init__(self, hp=100, str=10, int=10, inv=('HP Potion', 'Mana Potion', 'Rope')): self.hp = hp self.str = 10 self.int = 10 self.inv = list(inv) You then create an instance of a class, like so: p = Player() And then you can pass this instance explicitly into any function, where you can refer to it and use it. Here's a very simple example of this: def change_hp(player): player.hp += 10 print(player.hp) change_hp(p) # prints 110 --- Your dialogue function is far too long. I strongly recommend that you split it up into multiple functions by refactoring. This will make it easier for people to read your code and understand what's happening. --- Within your dialogue function, I see what I like to class as "if-elif ladders". These are blocks of code that contain many if statements. These are quite unsightly and also not very reusable or maintainable. Almost always, there's a better way. Take for example, this particular ladder: if 1 in ops: print("1: Regular Option") if 2 in ops: print("2: Stat Check Option") if 3 in ops: print("3: Item Check Option") if 4 in ops: print("4: Quest Check Option") You can make this much nicer by using a list or a dictionary. In this particular case, since you are using numbers, it's better to use a list: options = [None] + ['Regular Option', 'Stat Check Option', 'Item Check Option', 'Quest Check Option'] for x in ops: if x in ops: print(f'{x}: {ops[x]}) The above acheives the same thing in a better way.
just look into the o365 library https://github.com/Narcolapser/python-o365 
Any book recommendations?
The only thing I can find is in here: https://www.python.org/download/releases/2.5.6/ Unfortunately, the links in the "What's New" section are dead.
&gt; no more official binary installers will be produced. What's the point of that? Isn't that just making people not bother with installing security fixes?
So, you mean, correct way to send files over sockets? If socket is part of STD, then the code it runs is compiled C, which will always be faster than whatever you write in python, and so it will definitely be faster.
When people don't bother learning english... On a website which is literally 99% english besides button names being in your language because locales and shit.
Security releases are targeted at operating systems vendors more than consumers - so eg this should be available in Debian, RHEL, etc in the near future. 
If you can restrict use to 3.6? None.
Thanks devs, for the hard work! 
Not sure if you noticed, but 2.5.6 is from 2011 and is _not_ 3.5.5. That is why the links are dead.
The online docs haven't updated yet, but it's the stuff at the top above 3.5.4. (It claims to be the changes for "Python next".) https://docs.python.org/3.5/whatsnew/changelog.html#python-3-5-5 Only three changes in the changelog; two expat things (might be the same change tbh), and a fix for crashing during GC.
Well, that was an amazing mistake. I've updated my previous post with a current link now.
Kind of, beucase this is a paid module. I want a free alternative.
None of that worth the downsides of having to make a change to existing working code. Named tuples already have an OK repr, I don't need more than that. Named tuples already have equality and order. I don't have classes only for the sake of having a few properties. Why would I need something like that? Objects are almost never a good way to store information (lists, queues, trees etc are). If I just need a bunch of values together, the choice of data-structure would be motivated by the way it is supposed to be used, not by how many lines of code it takes to write it. PS. Class serialization in Python is not just not easy, it is in principle impossible, as is the case with any object-oriented language. It works 90%, but it can never really work 100%. This is because the identity of objects is ensured by the language's runtime. Once the runtime is gone, there is no way to maintain the invariant that every object has a unique identity. But you obviously never tried, so my argument will be wasted here. 