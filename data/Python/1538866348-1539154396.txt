The same is apparently true for django-cms though I havent tried it yet. Its on my todo list to build a new site with. I was playing around with Flask for custom stuff but thats the opposite of Wordpress.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Must haves for a modern laptop: * 8GB RAM minimum. * SSD (no spinning disk = less breaky, plus speed!) * 15" display (for programming) Personally I use a laptop you don't even want to look at, the Dell XPS 15. I hear good things about ThinkPads though - especially for Linux support if you're into that.
&gt; a lot of Amazon AWS's backend are all written in Python I don't think so. Amazon is a Java-first shop.
I guess based on what page people click on after searching for it 
what happened to objective-c?
I liked the syntax and semantics of Clojure, but the performance was horseshit.
I think using ‘.Title() ‘ takes the input and makes the first letter a capital and makes the rest lower, which might be useful for your program
Python also has inheritance and lacks private fields, making it an abomination, albeit a useful one.
No reason not to be specific: \_Fluent in Python within the context of Research\_ As a rookie you should not try to contribute Python code. Your current competency is in reading Python, not writing it. That will come in time and with practice. Your best course of action would be to READ the code of a project and try to understand it. Then read the documentation, if there is any, and submit Pull Requests to help improve that. That counts as contributing to OpenSource Python projects. It also has a significant impact on the projects success, as probably 100 times as many people read the docs as would read the code. The holy grail would be a project where there isn't really any documentation. In that case, your contribution can help significantly!
Pipenv - good for applications but terrible for libraries. Creator prone to overreach (and scope creep) and misstatements about other tools. Poetry - based on standard Python formats and tools. Good for libraries as well as apps. Cares about compatibility with wider ecosystem. At least as stable as pipenv. 
My super-intro university programming course was teaching Python almost ten years ago.
About fucking time 
I thought they taught C at electrical engineering since based on the universities' curriculum I checked they mostly deal with embedded systems whenever they program something. I have never tried C# so I cant talk about that. I can talk about the fact that my Python programs never ran because I was declaring variables with their types without thinking about it when I first tried it lol. 
It grows faster than it runs 
Everyone thinks Java is boring and old. They forget its highly stable, beautiful and meant to be used in large projects where scalability and specially maintenance are what costs the most. 
Look into re.compile().
 *Learning to program is boring af* &amp;#x200B; Mmm... no.
Sublime Text makes you feel like a hacker and actually costs money while Visual Studio is fee makes your life easier and you can also code in C on it as a bonus...
Third generational language vs. a fourth. Same reason that C++ is so slow when compared to assembly.
is my text in reference to the input or . . . ? I've never heard of re.compile() before and I've only just started learning Python 3 days ago. haha.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
That's where I learned python for datascience: in academia :) The labs still using matlab had older professors who weren't willing to learn something new or update their curriculum. Everyone else was learning R or python or both. An open source toolkit is so valuable in being able to reproduce results - so you ship .r or .py files with your paper (and list dependencies). Whereas, shipping .m files with your paper meant you were adding an extra barrier, particularly if you had a lot of addons that cost extra.
&gt; http://deathbycaptcha.com I love that you need to solve a captcha in order to log in.
I agree on all counts! 
I hope Ididn't do your homework here :) Anyway it was fun and I was surprised by the result (it looks better with 10\^5 iterations) from random import randint import numpy as np from matplotlib import pyplot as plt class Dice: def roll(self): return randint(1, 6) class Sierpinski: def __init__(self, vertices, n, x, y): self.vertices = np.array(vertices) self.n = n self.pos = np.array([x, y]) self.points = [self.pos] self.d = Dice() def generate_data(self): for i in range(self.n): v = self.vertices[int((self.d.roll() - 1) / 2)] self.pos = (self.pos + v) / 2 self.points.append(self.pos) def plot_data(self): arr = np.array(self.points) x = arr[:, 0] y = arr[:, 1] plt.scatter(x, y) plt.show() if __name__ == '__main__': S = Sierpinski([[0, 0], [20, 20], [40, 0]], 1000, 1, 1) S.generate_data() S.plot_data() &amp;#x200B;
As long as it's fast enough. 
99.8% this, and 0.2% the shitshow that perl6 was in terms of direction changes, no canonical distribution, and decade+ timeframe.
I'm kind of surprised about clojure, honestly. Thought it had more legs than that.
Swift?
VSCode works well. PyCharm is a full IDE for Python that is great as well.
Sure, but those threads can't run in parallel (except when doing I/O and certain other library calls which release the GIL).
Perl's arcane syntax makes it difficult to maintain. Python is much cleaner and, as you said, does everything Perl does so most people switched. 
You can also check the project out on my \[GitHub\]([https://github.com/justinmklam/recipe-converter](https://github.com/justinmklam/recipe-converter)), or learn how to make a web app yourself through my tutorial \[here\]([http://justinmklam.com/posts/2018/04/python-flask-heroku-tutorial/](http://justinmklam.com/posts/2018/04/python-flask-heroku-tutorial/)).
The issue is that 90% of the time someone says it's slow: * It's still *fast enough* * They've failed to parallelize their process through the use of threads or multiprocessing on a single host, or containers on dask/lambda/kubernetes across multiple. * They've failed to take advantage of fast implementations using numpy, etc * They've failed to explore easy compilation via pypy, cython, etc And 10% of the time it's truly a challenge. 
Good stuff. I tried it around april I believe. There is a way to adjust the code slightly, such that instead of converging into triangles, the points converge into squares. I remember altering the number of random possibilities (1,6) will also generate hexagons instead of triangles. I’ll have to look into that one as it is mind blowing. Although they converge into hexagons, the final shape will eventually “converge” to triangles. 
Django and WordPress are apples and oranges. WordPress is like a word processor for websites - you don't need to do any programming to use it. For Django you do. Django is like Flask but with more stuff built-in.
Visual Basic was once the most used programming language in the world. And then the C++ people convinced Microsoft that it needed to be more like C++. And Microsoft proceeded to shoot Visual Basic in the head. I can see the same thing happening with Python. It's headed in the same direction. 
ikr, interesting choice of words for a post in a sub dedicated to a programming language...
Right but Django CMS looks like its trying to be a Wordpress answer from Python land. https://www.django-cms.org/en/ From what I can tell its the closest thing Python has to Wordpress. 
python = G.O.A.T.
I think part of it comes from strengths that aren't apparent until your system gets above a certain size.
Java actually evolved significantly since then, making it much more tolerable for the sort of “pro functional programmers” who would have otherwise pushed for Clojure. At that point, why use such a niche environment?
They still use it a lot, they recently described how they moved a lot of critical projects to python 3.
Source is the same as every other medium and listicle that reported this. All it really means is an uptick in searches, hence how vb is also high on the list. 
in my experience, once you have code in production, it's very expensive to replace it, so only the most performance critical sections will get replaced first.
&gt; Pipenv - good for applications but terrible for libraries. Ironic because the creator states that it's meant for libraries and never for apps. And then it doesn't work properly for apps. Nor does it work for things that double as apps and libraries.
I wouldn't be so sure about that. I worked in a neuroimaging lab at MIT after college and everything was being rewritten or wrapped in Python. There may have still been a bunch of SPM, Matlab, C, Fortran, who knows, underneath the extensions, but Python tends to be the modern glue that holds it all together and most people interact with. Python has its pros and cons, but Matlab is a dumpster fire that primarily survives because they are good at marketing licenses to schools.
Perl is optimized for writing. Python is optimized for reading. In the long term, you read more code than you write. If you are nostalgic of perl and you don’t like whitespace, you should use Ruby.
[Here's a comment of mine listing the major uses of the setups I currently know of](https://www.reddit.com/r/Python/comments/9gxo8r/after_python_3_pipenv_is_the_best_thing_happened/e6egw6k/) I'd recommend putting them all up there really-- they each have pros and cons.
Oh sorry Django CMS...I missed that. I thought you were talking about just Django. Yes I agree.
After almost 10 years away I have come full circle on java. When I first started writing python I fell in love with how easy and carefree everything was, none of the bureaucratic nonsense hoops that Java made me jump through. I still love python, it's main language I use everyday, but working on very large codebases python becomes a nightmare, and while I have tried many other languages I still tend to prefer java for any large project that needs to be stable and robust. Kotlin is the only alternative I even consider these days, it strikes a nice balance between the safety of java and the usability of python.
Whether or not it's standard depends on the person you're asking. I used to use it quite extensively, but then when I came into multiple scenarios of having to get the last result in a debugger and having such a practice mess with it, I now always do `for _i...` (or any letter, depends on the loop)
I'm currently getting more and more involved with it, so naturally it looks more and more alive to me, not dead. I can't speak as to whether or not that's accurate, though, as its a difficult thing to measure and "I love and, therefore, its spot in my life is growing" doesn't cut as evidence that it, overall, is growing. 
It's also the language I was made in
I believe that Python was in many ways a direct reaction to the problems of Perl. The issue was that code often became an unreadable and unmaintainable disaster. I'm sure you have some very clean perl scripts sitting around that are quite beautiful, in fact I have some too. But the language was designed to be very flexible and support different ways of doing things, and often the syntax shortcuts that experienced developers used made it very difficult for others to understand what was going on. Python reads very much like pseudocode on purpose, and enforces style and structure, to help encourage readable code. There was also the Perl 6 fiasco. 
Still new to Python and almost finished writing my Chess game. Last couple days were spent writing a function to determine if either player is in check. This week will be determining check mate
Ffs, Cpython isn't python.
The author of Requests said AWS uses the library extensively. But I haven't done any more research into it, so, yeah I could be wrong on that one.
I'm on the fence. Python is by far my favorite programming language, but it's not great as a first language because jumping to other languages is more difficult due how much easier it is to learn Python. Dynamic types, list comprehensions, and all sorts of other nice features and shortcuts that won't work in any other language. Starting with a more strict language like C# or something might be beneficial, then jumping into Python later. 
Backend web development (because Node.js and JVM languages perform better), anything typically programmed in C++, data analysis (because R has a better ecosystem for data analysis). Python is great for teaching people coding, TensorFlow and automation.
Node.js and (to a lesser extent) Python are chewing on the neck of PHP.
It's discussed to an almost irritating degree on /clojure. I can't really answer the question by pointing to one thread, but you can search there to get a better sense.
Invite expired 
My wife is enrolled at a local college. It's very intense and she doesn't get to see our son as much as she wants because she's busy studying a lot of the time. I programmed a bot that would select a random photo of our son and send it to her every few hours to help cheer her up.
Have you checked the list of opcodes you just linked? It has opcodes for async, maps, print, continue, unpacking of tuples, file imports, for and while loops, closures, funcions, classes et cetera... That is a VERY high level bytecode and not at all like the JVM one. 
We'll clojure was created in 2007, so your guess really didn't make any sense....
Like y tho
me too
Reminds me of that yearbook quote where they spelled out "Fuck Bitches Get Money" with elements
Instagram using python3 and Django, and they have about 400 million users a day.
I guess we'll just agree to disagree. I love the way Matlab is written and I think it is much more intuitive to scientists that don't have computer silence training than anything else is. 
Where my Fortran gang at? 
This is a dangerous line of thinking and will stunt your growth as a programmer
You haven't really left any room for productive conversation on the issue. For anyone else reading, clojure runs on the jvm, and for applications where that is suitable, tends to perform quite well. 
Is there not some element that links to the next page? If so, you could grab the URL from that. Otherwise, you could use selenium to locate that element and click the next page button. 
Perl's great and all but the underscore is only used for unused values in most idiomatic python. `$_` is usually used albeit sometimes implicitly so it really isn't comparable. JS has the has both the underscore library and jquery so that you can use `$` and `_` like the good ol days. 
in order from a regular terminal \- Python 2.7.12 \- /usr/bin/python \- 16.0.0 \- /usr/local/bin/virtualenv \- command not found &amp;#x200B; from the virtualenv &amp;#x200B; \- Python 3.5.2 \- /home/jak/.virtualenvs/cv/bin/python \- 16.0.0 \- /usr/local/bin/virtualenv \- command not found &amp;#x200B; I'm guessing conda info isn't giving any information because I disabled it in the .bashrc?
Games, finance, VFX, NVidia, Bloomberg, Google, probably has a strong representation at most of the top software development companies tbh
- Unicode characters such as ½ don’t work. - Floating point numbers don’t work in some instances; 1.5 or 2.5 - Not counting for a lot of abbreviations Just did a quick QA and code review. The function def parse_line(self, ingredient): Needs a lot of work for data sanitation. You should take a look at the python-measurement library and use that to expand your tool. As of right now it’s really only usable for the very specific recipe information you’ve basically hard coded for. So far it looks like a promising tool though!
Python IDEs suck balls compared to any language where types are declared in advance. When I write in Java, Obj-C, C++ or whatever, I don’t have to remember what class each argument of a function is - the IDE will tell me. In python, I get to find out about at run time. That is fine when I only have 200 lines, but that isn’t fine for anything bigger. 
You gotta say why since obviously plenty of us don't understand that.
Having worked with YouTube, their python engineering team often work at a snails pace compared to the Java and C++ teams. When you have a decent amount of code, all of that Java verbosity becomes documentation, not verbosity. 
Thanks for the feedback! I'm always looking for ways to improve. For the Unicode characters, it used to work but I think the new font I chose broke that functionality. I just reverted it so hopefully that fixed it. Using a measurement library is a good idea, not sure why I didn't think to look up something like that when I started! For all the other things, this was a fairly quick project, so always need to leave room for improvement ;) I agree that some of my programming decisions weren't the best. Future work is definitely directed to making it more robust. Thanks again! Your input is much appreciated.
I wouldn’t use python for anything except data related stuff, making use of numpy/pandas
Can't write Tokyo. Sad. :(
&gt; It's still fast enough That depends on the scale and processing requirements. I have had plenty of times where python just will not cut it. We then went to either Node or Scala or C# &gt; They've failed to parallelize their process through the use of threads or multiprocessing on a single host, or containers on dask/lambda/kubernetes across multiple. This isn't a defense of python. It's a defense of asynchronous containers. &gt; They've failed to take advantage of fast implementations using numpy, etc Numpy is mostly written in C with a python wrapper. Did you realize you are presenting a perfect example of where it was faster to use another language and then use python as the interface? &gt; You missed the other parts: It's still fast enough That depends on the scale and processing requirements. I have had plenty of times where python just will not cut it. We then went to either Node or Scala or C# They've failed to parallelize their process through the use of threads or multiprocessing on a single host, or containers on dask/lambda/kubernetes across multiple. This isn't a defense of python. It's a defense of asynchronous containers. &gt; They've failed to take advantage of fast implementations using numpy, etc Numpy is mostly written in C with a python wrapper. Do you think he knew he was proving himself wrong here? &gt; They've failed to explore easy compilation via pypy, cython, etc So your solution for python being slow is a python wrapper around C again? Look, the benchmarks don't lie. Python is slow as balls. It's easy to use, and I use it for all sorts of stuff. But it not a hammer for every nail.
Consider using it when writing java in the late 90s.
Too specific. Nothing left to the imagination of the reader. Besides, that's an action, not an attribute. The "qualification" isn't impressive enough to stand on its own. 
Yeah this isn’t right but yolo.
Oops! Thanks for pointing that out. Reddit attaches https onto the front of links which won't work. Fixed. Thanks for the help.
http://redditmetrics.com/r/Clojure#compare=Golang+Rust+Python It’s basically flatlined since 2015
You just need to generate the "page-{i}" URL list. Fetch using requests module from that list.
Even still, other JVM languages usually performed significantly better.
Is this not just saying that people need the most help with Python? 
Ok twisted still doesn't work though
I've updated the post above.
Ok so how do I fix it?
I don't know what it's weaknesses regarding encapsulation and its VM are. Can you summarize? 
Because then the solution to every problem becomes using another library or framework. Sometimes the problems are not big enough to justify the extra dependency and maintenance.
How do I check the version of python I have (32 vs 64)
In many cases, if you launch the interpreter interactively, it will print it in the first lines (it will print things like what compiler was used to compile it etc). Other than that, https://superuser.com/questions/358434/how-to-check-if-a-binary-is-32-or-64-bit-on-windows here are some other methods.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Khan/style-guides/.../**python.md** (master → 4ca79ef)](https://github.com/Khan/style-guides/blob/4ca79efae453a1e41cc9a7c85a6b671059c480e2/style/python.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e7bezhy.)
Why the fuck isn’t javascript dying 
nope, not even then
This is a question for r/learnpython, not r/python
Lmao
Eh, Python can be fast, but think of it this way: you can have 90% of your code base written in Python and the rest 10% written in C or C++, then wrapped around with Cython. This will be wayyyyyy faster than writing 100% of your code in C or C++, and from an industrial perspective, this is much much better than anything that other languages can make. Python is slow as balls, but it's still extremely versatile and if you can't make an application fast enough or meet your requirements given enough time without having to change your entire code base, then you have failed as a programmer. Python isn't the best tool for everything, but that's not the point of the programmer. In data structures and algorithms, you don't find something that fixes all problems, you find one that fixes your problem. It's just that more often than not, it's Python that fix your problem time and time again 
**Encapsulation (computer programming)** In object oriented programming languages, encapsulation is used to refer to one of two related but distinct notions, and sometimes to the combination thereof: A language mechanism for restricting direct access to some of the object's components. A language construct that facilitates the bundling of data with the methods (or other functions) operating on that data.Some programming language researchers and academics use the first meaning alone or in combination with the second as a distinguishing feature of object-oriented programming, while some programming languages that provide lexical closures view encapsulation as a feature of the language orthogonal to object orientation. The second definition is motivated by the fact that in many of the OOP languages hiding of components is not automatic or can be overridden; thus, information hiding is defined as a separate notion by those who prefer the second definition. The features of encapsulation are supported using classes in most object-oriented programming languages, although other alternatives also exist. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Honestly, not so much what I wouldn't develop in Python but what I wouldn't support. Python seems to encourage very poor coding practices that make it quite difficult too understand what is going on. So many useless library's imported and poorly implemented ideas. This of course is not directly python's fault but is increasingly common for me to get a ticket on something some business user made and it worked before but now it doesn't and they want me to fix it. Purely subjective I know but it has left a bad taste in my mouth.
Pic says VB.NET has higher ranking than Javascript? LOL
I've used pfsense before, but I never realised how limited their commandline tools are. I really loved it. Just knowing you don't have proper cli tools for something as trivial as the firewall definitely takes it off my list in the future (although I mostly use Linux routers these days.) Can you not just edit the pf.conf directly? I'm sure you should be able to script that easier than going through Selenium though. That's just my opinion. You could go via sed or still use a Python script with regex or something. 
No big comments. Congrats on finishing your first project. Motivation to see it through to a presentable state is not something everyone have, so good for you :). You probably posted this at a very slow time to get feedback, so don't expect many people to see this post. I guess the only thing I'd say is nice job making it look like a quality piece of code. That's a great thing. If you want to really grind this project to be fully polished, you could try to document the code in a standardized way. Otherwise, I'd encourage you to take what you have learned here and pursue other cool projects. Good luck!
While correct, it isn't meaningless. Developers want to learn the language that has the best future growth prospects. 
But also that's not what I was trying to say. The reason why pythonic code is easier to read and also usually shorter is because it utilizes abstraction very well, and that at the same time is what gives you speed. If you ever write a sorting algorithm in Python you did something wrong (and I also think this is a bad exercise for beginners, because it gives them the wrong idea). And if there's a properly maintained library that fits your problem use it, you can't do it better than that (especially in pure Python). There's no excuse to alter individual Pixels in Python instead of utilizing OpenCV, or interpolating data manually instead of using Scipy.
Because leftpad
There are C libraries for pretty much anything you would want to do. This means a business user so only need to glue together existing libraries which is exactly what Python is good at. Also, speed is not that important for most applications in the business world. Development time, correctness and maintainability are much more important. Why else do you think half of all business software runs on Java, Tomcat/Wildfly, JSP and VMs? Those are all indirections that cost significant overhead.
Perhaps that was a bit harsh. I would agree that Matlab is easier for people without a CS background, with its built-in graphical interface. With more and more students coming out of college having some exposure to Python, I think this might be less of an issue in the future, also projects like http://jupyter.org/ can bridge the UI gap in some ways.
God help us all. 
He mentions the tool at the end of his presentation :) Perhaps, you haven't finished watching OP? 🤭
Or perhaps they were looking for something completely different.
&gt; Think of something simple you want to make and start googling. Oh this is by no means fastest. But it's definitely the best approach. Learning from own mistakes by trial and error is superior to just staring at perfect code written by some guru. The job of gurus is to improve Python itself and write nice libraries with user friendly APIs for us mere mortals.
I think it's better to teach a language that's more accessible first, that way you reach a wider audience. If someone wants to challenge themselves with a more complex language, they can, or they can stick with Python and go really far with that.
Cool!! /u/wingerd33 might be interested 
TheRenamer does this.
&gt; I use a laptop you don't even want to look at, the Dell XPS 15 That's been mine for two ytears and I've been really happy with it. The only downside was to wait for Linux to catchup with its hardware but it's been a smooth ride for over a year now. What don't you like about it?
Yay C is still there, I still prefer C lol No offense to any pythonistas xD
I think you could learn python and never really *need* to learn another language. At least for people who are not going to be professional programmers. There are a huge number of domains where code is just another tool and becoming a fluent programmer is not the objective. 
not discrediting a community, discrediting any reason to want to join that community. i got started in functional programming and reached for clojure/lisp etc and then found out java/c# also have functional language support. why would i go for a niche community when i can play with the big boys with a tool i'm already familiar with? i eventually did play a little with lisp but fundamentally i don't see the need to use that anymore
&gt; Python still has to interpret the code, it's just masked now. In any application where execution speed is a concern, the relevant code will be a binary extension, wrapped with the C API.
braces don't matter if you use a good enough IDE. visual studio code made the transition easy for me
They probably do though based on what the user does. If I am looking for the snake and get the language I will change my search terms to "python snake". 
if \_\_name\_\_ == "\_\_main\_\_": is a bit wonky but it's a lot less shit than Java.
literally no jobs for c++ for beginners from my experience. even if they say they want beginners they assume you're fluent in all the latest language features and will grill you on them exhaustively in the interview
I used to work in perl. Then I got a job in a scientific domain which uses python for everything. All the commercial products have python API's and there is much more of an ecosystem within the language. It just made sense to learn python and I have never looked back. 
i tried learning Perl but i got more articles about why perl sucked than articles of how to use a perl feature whenever i searched for how to implement a feature that and the lack of perl job postings and i saw the writing on the wall
react.js is the latest adrenaline injection. cross platform is the new normal. just wait til crypto becomes the new normal. js is going the way of java at that point
Bingo
Thank God Python is used as a first language instead of Java.
The unfortunate side-effect is that the Node.js ecosystem is starting to look more and more like something that came out of PHP.
Thanks for sharing! Yep, I guess mentioning both poetry and pipenv at this point would make sense. 
Because no hunting down of transitive dependencies.
Well of course, people tend to adopt bastardized languages that use some functional programming techniques like list comprehensions, iterators, comparable, etc. because what people really want is more power. To be fair, the python team has done good work w.r.t mantras/culture, testing libraries, readability, documentation etc. Javascript does this also of course, and you can argue that it is more FP-like because of its constant use of closures and anonymous functions (it's not very beautiful though and its limited). Because of its character as a glue language, implementing APIs is straightforward in Python but let's be honest, python is just a very well organized C++ with great algorithms on its backend (sorted, dictionaries/hash-tables, generators etc.). It's good for average programmers that want to leverage the work of great programmers. But if you want to grow as a programmer you have to move in another language that moves away from OOP and deals with some hot topics but is still fun, Rust(also Go but it is less fun) for systems programming and concurrency for example and Clojure/F#/Elixir for business applications and message brokers. F#/Clojure are even used in machine-learning and can be much much faster than Python. Personally I have only started to scratch the surface of other programming paradigms but I see it's the only way to do some exciting work. Python is very friendly and well-suited to introductory programming but it is severely limited.
Minority? Its python's philosophy. "import this" The zen of python says - Readability counts.
Your original question doesn't really come off as a genuine question. There are tons of resources on that subject. It having a smaller community is the only a issue if that community can't support progress, the clojure community has everything I have ever looked for. it has interop with Java, So, in way, it has access to more libs. Given its a lisp, the tooling, while different, is Imo better. If your looking at it from a pure head to head language front, then I clojure has a lot of advantages over Java. But they take time to understand, and maybe that's not worth it to you, but it's upsetting to see it written off without good reason. There is a talk by Micheal drouglas, at clojure remote, on YouTube, that I think you might like. Even if you never write clojure, it's very informative. I sent two years in a Java shop, and spent the last 3 working
But what if I forgot the naming conventions of Python and looked for it by searching "python snake case".
The JVM executes the Java bytecode in interpreter mode, but then the JIT kicks on hot paths and compiles the Java bytecode to machine code. Bytecode is not machine code, it is closer to "source code in a binary form" that's more efficient to process for the interpreter (although this is a bit oversimplifying).
Sigh, then why say it in the first place?
And sometimes *you* are the one who develop a library to solve this problem.
Sure, it's not actually a big problem. Would still sometimes be good too have when changing levels of whole code blocks / moving stuff around. And on the other hand, it's nice to not have the whole "tabs vs spaces" and "where should the braces be" discussion!
&gt; So **let's just assume that it works well and there are lots of developers who would find it very useful and would use it every day**, even if that isn't the case! That's not a valid assumption. Debugging in a terminal window is little better than just using print statements. It's possible you have a niche market for devs who choose to make their lives harder by resisting IDEs, but very, vey few professional coders fall into that category. You can try to take donations to see if there's interest. If there is, you can look into commercializing it.
Good point. I was taking it for granted that it was system time at process start. :) Thanks for your comment.
You are not getting nearly enough upvotes for that comment.
Isn't there now CLIF, which is supposed to be much nicer than swig?
Networking as in network programming, or network engineering? For network programming, there are plenty of books on sockets, etc.. For network engineering, there are ton of books teach you how network works. Build a VLan in your house. Do packet capturing, etc..
"beautiful"... Good one. 
By networking I mean network programming, maybe later on I'll look into network engineering.
&gt; So your solution for python being slow is a python wrapper around C This is correct, and also why python is so successful. It's the best wrapper around.
&gt; Pretty sure it has more to do with its ubiquity in data science. The question is why did it become ubiquitous in the first place
&gt; Easy to learn and fast to get shit done don't forget free oh, and available on every OS that makes a huge difference too
&gt; Tell that to academia. They already know.
&gt; EDIT: JESUS. Would you want your car to run on Python? Explain yourself, downvoters. No, *but I would download a car with python*
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
A short google for "low level python network programming book" found this: https://www.amazon.com/Foundations-Python-Network-Programming-comprehensive/dp/1430230037 I haven't read it, but at least one of the author (Brandon Rhodes) is known for giving good talks about Python. So i'd suggest you go with that.
4chran 4 lyfe
Checked it out, seems like a good book.
This is a huge reason I use Python today, but it used to be that the API's were in Perl, and Perl had the ecosystem via CPAN. It's a shame to see Perl in its current state. Oh well. Things change in technology. One thing I've learned is to not become to attached to any particular coding language
this phone's battery is at 1% and needs charging! --- ^^I ^^am ^^a ^^bot. ^^I ^^use ^^OCR ^^to ^^detect ^^battery ^^levels. ^^Sometimes ^^I ^^make ^^mistakes. ^^sorry. [^^info](https://np.reddit.com/r/phonebatterylevelbot)
&gt; They've failed to parallelize their process through the use of threads or multiprocessing Threads in python are hit or miss. Unless your writing in C++ so you can drop the GIL or what you are doing drops the GIL anyway. The multiprocessing module is mostly pointless for people who use threads regularly, as now you need a method to share memory between the different processes.
&gt; So your solution for python being slow is a python wrapper around C? Again? A very very small percentage of python programmers know C. Most Python programmers I know, even very good ones, know almost nothing about any other language, or even that a lot of functions in python are wrappers are the stdlib. 
Thank you so much. That kind of feedback is what really moves me forward. Also thank you for the pointers on the other libs — I wish I knew about them earlier. There are good ideas I could borrow from them. 
I work on a multi million line C++ codebase at a large corporation. The fact that it is statically typed has almost zero impact on making the code readable. It is still spaghetti code that barely anyone understands and adding features to it is a mess. I think people tend to rate static typing much higher than it's actual empirical benefits reveal. In my opinion, here's what makes a large codebase easily maintainable: 1. Split into subsystems with well defined responsibilities. The ability to share code between the subsystems without having too many (or none at all?) cyclic dependencies. 2. Well defined interfaces between the subsystems. The subsystem level API should be extremely well documented and kept up to date with the code. The interface is not just about the types that are expected, but also the intent behind the objects that are expected. 3. No global mutable data structures across the system. Any modifications to global data structures should be made explicitly by subsystems outside of the subsystem boundaries, delegated to the one subsystem responsible for modifications to that data structure. 4. Each subsystem should look like a pure function from the perspective of the system - this makes subsystems easily mockable for testing and debugging. I think in my many years of working on large codebase, I've almost never thought: man do i wish i knew all the types of this function. Its almost always me lamenting for one or more of the qualities I've mentioned above.
It doesn’t matter. Seriously. Just go with whatever laptop you like. It will be good enough to learn Python. Programming in Python is not resource hungry stuff.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
The problem with most of these "findings" is they are mostly flawed based on how they acquire their data. Not arguing that Python is a highly popular and useful language, but I believe its application in production systems is limited compared to other languages/technologies. I think the greatest reasons for its rise is, obviously, every Uni teaches it, which results in way more internet searches, package downloads, etc.; and definitely the rise of and its use in Data Science. But I think when businesses think about developing a rock solid code base, they're going to look to either a typed language, something compiled, or at least something with a faster runtime.
I appreciate your input but as I said, I am asking hypothetically, my question is not about whether debugging on the terminal is a good idea or if people think there is a market for this product. My question is about whether it's possible from a technical/commercial perspective to exchange what is essentially just a python module for money given that the source code is viewable for standard python modules. I included my idea for context but perhaps it's just distracting from my actual question! The donations idea might be worth looking, I wonder how much people have actually made using this model... 
Beej's guide to network programming is *very* good, even though it's in C. You'd have to do some work to translate examples into Python though.
Yeah, this is a real issue for me right now.
But why is it false? :/
Use \`result = my\_cursor.execute("SHOW DATABASES")\` and iterate result.
Gawd yes. This (along with how to package the apps) is pretty much the only complaint I have. And yes, it is a visual thing, blah blah blah, but having it would give me a better warm and fuzzy. No reason why it can't be supported.
It's the logical converse of the converse of False. If you apply hidden order of operations (not False) = True, then one more converse of the result of the last equation so not True which equals False. 
Perl is Python without PEPs. Really, aside from syntax and an obsession with being cute, Perl is basically not that different from Python. Oh, and Python has better OO constructs. All IMO
What are some good java IDEs?
Intra-project consistency is necessary, inter-project consistency is very nice to have. There's no better way to achieve the latter than the follow the style guide set out by the creators of the language.
Even though you are correct in saying there's a lot of legacy code out there which needs maintaining, Fortran is still quite widely used in the parallel computing world. I'm currently taking a parallel computing module and we're using C Fortran with OpenMPI. Pretty sure the UK MET office uses Fortran 90 too.
Check out r/learnpython 
One of the comments further down I mentioned that COBOL would have been a better example since Fortran is used in scientific computing. Didn't realize it was used in parallel computing though.
You mean like [this?](https://www.mathworks.com/help/matlab/ref/string.html) Or like [this?](https://www.mathworks.com/help/matlab/matlab_prog/analyze-text-data-with-string-arrays.html) I'll give you a few more advantages that Matlab has *from a work perspective (large firm; manufacturing; mechanical engineering).* I can compile a standalone executable, that I can ship to my customers with a 99.99% guarantee that it will work on their system (Windows, Linux, MacOS). In the off chance it doesn't, I can call customer support and MathWorks will make it work. I tried shipping Python routines before, my customers either couldn't access the internet to download dependencies, didn't know how to Python, or didn't want to manage yet another Python distro on their systems. * Plotting data is much more straightforward in Matlab. I don't need or want every plot to be publication quality, I just need to quickly explore my data. Matlab makes it stupid simple to do this. Every engineer at my work can right-click on some data in the workspace and select "plot" or "histogram". Far fewer can figure out how to get matplotlib to do the same. * So much data we receive (from test equipment, customers, etc) is in some delimited text format or an Excel format. Matlab's IDE makes it easy-breezy to import the data and auto-generate a script or function to load additional data-files. Overall making it fast and easy for nearly any engineer to piece together data processing routines. * While we're on the subject, Matlab's IDE is the best in class. Don't deny it. * Its Profiler GUI * In fact, so many of the [official Matlab GUI apps](https://www.mathworks.com/help/referencelist.html?type=app) make developing advanced functionalities accessible to non-programmers. For instance: [Curve Fitting](https://www.mathworks.com/help/curvefit/curvefitting-app.html), [Deep Network Designer](https://www.mathworks.com/help/deeplearning/ref/deepnetworkdesigner-app.html), [Distribution Toolbox](https://www.mathworks.com/help/stats/probabilitydistributionfunction-app.html), are a few I used this past week. Full disclosure, I handle our Matlab renewal, this year we just barely broke six figures in renewal costs -- making Matlab about the 10th (maybe only &lt;25th?) most costly software renewal for us. Overall, it's about the cost of one FTE, on a total base of \~5k FTEs. It's chump-change compared to the efficiency Matlab provides through its widespread use due to its accessibility -- if people weren't using Matlab they'd be using Excel or no programming at all. Now let me be clear, I love Python -- almost all of my HPC scripting is Python-based. But to claim that the only advantage Matlab has is disingenuous. If we can't acknowledge the advantages that Matlab has over Python, then we Python is doomed to never improve over Matlab. Instead, we should recognize the advantages Matlab has and work to close the gap. Lastly, as a tangential comment, I'm currently learning Julia and it will probably become my thesis &amp; hobby language. &amp;#x200B; &amp;#x200B;
This tool is ideal for cleaning up code that looks like this: import subprocess, os previous_directory = os.getcwd() os.chdir("command_directory") my_env = os.environ.copy() my_env["PATH"] = "/usr/sbin:/sbin:" + my_env["PATH"] subprocess.Popen(my_command, env=my_env) os.chdir(previous_directory) And replacing it with daisy-chained code that looks like this: Command(my_command).with_path("/usr/sbin:/sbin:").in_dir("command_directory").run() 
I'll try an analogy. Let's say that Statement A is "it is raining". Let's say that Statement B is "it is not raining". The "not" flips the meaning of the statement, so meaning of Statement A and Statement B are opposite. Let's say that Statement C is "it is not not raining". Again, the "not" flops the meaning, but here we are flipping twice. So the meaning of Statement C is the opposite of Statement B. A and B are opposite, and B and C are opposite, so we can infer that A and C are the same. The same applies here, we have two `not`s on False (or "raining" if you prefer), so we end up back where we started (still "raining").
Python is good for scripts and small stuff. Java was designed from the ground up for enormous enterprise software made by teams. So if you're working on something with significant complexity, it's designed to save you from yourself or others. Plus, it just feels lower level than Python (and has the performance to match). And fuck yeah, strict typing.
The automation through selnium is nice and working. The other way is to manually generate and enter in the xml in the config.xml file. Although with the rule additions we do we have to add 40 lines of xml per new vm. 
The automation through selnium is nice and working. The other way is to manually generate and enter in the xml in the config.xml file. Although with the rule additions we do we have to add 40 lines of xml per new vm. 
Didn’t know that existed. Thanks!
I love it, but it's way outside OP's budget.
IntelliJ
You tried buddy.. 
Wrong subreddit?
Teach Python, but force people to write type annotations everywhere OR explain in comments why they didn't ("would take 3 lines" is a good explanation). 
But the move to py3 was big enough that others have used it as justification for rewriting. It's significant that Dropbox didn't. Python at Dropbox is likely not going anywhere, which is why they employ Guido himself.
Well if bureaucracy was a problem, we'd better stick at programming assembly directly, because python development is centralized :)
I never understood the obsession of the Java ecosystem with convoluted XML subsystems.
"starting"?
True, its not Python, but it is similar enough that Python can be rewritten as Cython easily, so it makes it easy to write Python, then identify bottlenecks, and then rewrite small bits of critical code in Cython.
Looks interesting and wanting to earn money for something you've created is fair. You have an app; it works and you know other people will want to use it. One issue you'll have is providing a "pay-for" python module, as at any point someone can extract your source. There are methods to convert your python code to something less accessible such as supplying 'pyo' or 'pyc' versions of your code. But there is nothing stopping a developer sharing or hacking it. If you need complete code security you'd encrypt and key your source code using a security tool Of course all this doesn't truly stop someone ripping your pure python module. I have come across pay-for utilities however they are usually bundled under a service - providing the module as a bootstrap. Unfortunately I cannot think of one :/ As options to monetize a free product: * Tip or Patreon - relying on the honesty for those of whom can afford it * Pay gate for download * ads on a product site A more modern method to monetize a free product may be after-sales and service support for paying customers. Everyone can access the module, but buying a license allows requests and feature improvements. With the correct license you can assign law abiding requests. Such as "$5 for personal use, $10 for a small team, $1000 for a corp". You couldn't guarantee this upholds but it will deter orgs from simply adopting your tool without pay. If your product is community adopted you could ask for support funds. Such as (python) Pandas or (js) Vue. 
Budding Flask Dev here, Gave myself a project of cloning Facemash(but for Dog Rankings) It uses sqlite3 for database and the Elo Rating System for the ranking algorithm. Code: https://github.com/sggts04/flask-facemash-clone If someone has the time, I would love seem feedback!
But how would you get untrusted modules onboard a car or medical device?
Correct!
Used any data-crunching software, of late? Hot-tip: they are not built with JS. Nor is your operating system administered with JS. 3D modelling? CAD? Biotech? JS is king of the web (thanks to Netscape), but nobody else uses it, given half a chance.
You seem like a nice kid. Is it technically possible? The fact that you don't know the answer to this basic question may be an indicator of the merits of your inquiry. There are libraries that will encrypt your source and decrypt on import. You could also just distribute a compiled binary. But, emphatically, whether you are willing to hear or not, trying to sell a piece of software built on an open source platform is not something you're likely to have any success with. People generate cool libraries all the time, and give them away for free. Where is the IP in your software, is it the cool color coded display? Cause that can be reverse engineered in two seconds and made free. Think about existing precedents for selling developer software to the Python community, I can think of Pycharm and they give away the community edition of their IDE, is your "product" on par with Pycharm? Consider Continuum, the commercial entity behind much of the scientific Python stack. Their model includes training, consulting, government contracts, and donations. All the software they support is open source. 
Some of my C++ unittests include #define private: public: #include somelib #undef private: &amp;#x200B;
In what direction?
&gt;They've failed to parallelize their process through the use of threads or multiprocessing on a single host Python is not very good for that. GIL limits threading performance, so then you use multiple processes. Then if you need to pass large amounts of data between processes you end up with a lot of serialising/deserialising or managing locks on shared memory as well as managing multiple processes. There are times I really wish i was using Erlang. You are probably right about it being truly a challenge 10% of the time (or maybe a lot less), but when you do have a problem and it comes after you have written a lot of code, is a big problem.
People don't need help with what they don't use. 
But not required to get started
me_irl
The problem is not with the code shown, but rather how your database session is set up. Somehow, you have two sessions being created. It is hard to say what is wrong unless the entire application's code is shown.
Thanks, I'll work on the documentation like you said. I'll also keep my posting time in mind for next time.
Short answer is: use pyenv. Here I googled [guide](https://medium.com/@henriquebastos/the-definitive-guide-to-setup-my-python-workspace-628d68552e14) how to use it. Hope it would be useful. 
This looks exactly like Codecademy but designed for autistic fortnite kids
I would also throw this up on r/learnpython I'm sure everyone over there would also enjoy this
how exactly are you expecting them to solve the first problem? i would use bisect, but i don't think that's what you're expecting from a first year introductory class
Hi, I created this library for doing these kinds of task: https://hitchdev.com/commandlib The whole "be in the right directory, have the right environment variables" thing is annoying to do otherwise.
Huge help. Thanks!
I'm currently learning python, these problems look fun, thanks!
This seems an ideal candidate for putting into a jupyter notebook. 
 If value &lt;= smallest number: Return "F" Elif value &lt;= second smallest number: Return "C" .... Else: Return None
Fair enough, you have to be careful to stay relevant and not lose focus. There is not enough time to specialize in everything. But FP is a growing enterprise and it's definitely worth learning even when you want to stick with OOP. Yes calling it that way an over-simplification, but the impression I want to make is that Python is limited by its OOPness. It has two major flaws apart from concurrency: - case handling -&gt; streamlining -&gt; pipelining -&gt; workflows It cannot handle so-called pyramids of doom efficiently. Sure you can make hash tables for case-switching to flatten the code and that is cool but how do you handle nested events without nesting functions instead of chaining? - exception managing -&gt; type inference Sure it has extensive tools for handling exceptions but all of it could be thrown out the window if it threw errors at compile time through some type of type inference. Annotations have been added that should help while coding but this is not a real restriction. I understand that it is the philosophy of the language and that makes it well-suited for rapid prototyping. Still my main language is still Python so I should not complain too much. It does offer a lot to the mainstream programmer.
r/lostredditors
I'd forget about PEP8 and simply run your code through [black](https://pypi.org/project/black/) before committing: negligible time spent dealing futzing with formatting but everything still ends up nice and consistent.
Rly, we have to sign up?
Why can't they just go through the list, checking the if the next value is greater than the current one?
Afaik it is impossible to get that laptop for inside OP's budget in the UK.
To target web front ends as a supplement to JavaScript. This would hopefully be a friendly competitor to node/express with whatever JS/TS front end framework. Diversity. In languages and tools could only help
What's the point of doing this in one line?
Hey, do you mind telling me about your Python experience so far? Very new to Python but I’m a fan of chess too so I figured it might be interesting to hear about your journey up to now. Message me directly maybe? Cheers
You could replace the whole if/elif statement with this: colnum = val('112233445122334451223344501122334011223340112233401'[wk]) 
r/badcode
From the document: &gt; Remember the good Pythonic style of naming such utility functions with double underscores at the start and end of the name to document that they are internal utility functions not intended to be accessed from the outside, not even between friends and consenting adults. I believe you mean just one underscore only at the start, as [PEP-8](https://www.python.org/dev/peps/pep-0008/#naming-conventions) suggests. One should never invent their own "magic" variables or functions (names that start and end with two underscores), and use existing ones only as documented. 
Sure, but what's their infrastructure bill, and how much lower would it be if they replaced all the python code with a faster language like go, rust, or java?
it was a rhetorical question
Yeah that's better haha.
To give a bit of counterpoint, I rather like the first prompt. It's simple enough to be asked after learning only basic arithmetic in python, what a function is, and what if statements are. Yet there are multiple ways of writing such a function. I suspect you are overthinking the problem --- mentioning bisection, I wonder if you have been learning data structures and algorithms.
Superb work, many thanks for sharing! One minor correction, on physics not Python: in the “fulcrum” question you mean “torque” rather than “momentum”. 
I don't think this would work.
you can call a script which takes another file with your credentials as input.
Security through obscurity eh? j/k. Cool one-liner.
I typically use a config file in the user's home directory. Set the sensitive stuff there and make sure the permission bits are appropriate.
We'll, according to this graph, Java is visible flattening and in another it's falling. But I really really wouldn't recommend switching jobs to python or koltin because of it. I'm saying that tounge and cheek, I don't think this study is very good at highlighting why you should pick one language over another. Considering the opportunity cost can be a is a good reason for you to not learn something. Assuming you dug into lisp enough, you probably have been writing better code ever sense. My impression is that the community is over the hype stage, and is being used at very serious companies to do serious work. It has steady, but slow growth. That it won't become wildly popular unless a huge company buys cognitech. And that lisp won't ever become irreverent in my life time, because it's founded in great ideas. Within 30 miles of where I live in know of 10ish companies using clojure publicly and I get the impression there are probably at least that many more that aren't advertising. 
&gt;Remember the good Pythonic style of naming such utility functions with double underscores at the start and end of the name to document that they are internal utility functions not intended to be accessed from the outside, not even between friends and consenting adults. Shouldn't dunder naming be reserved for magic methods?
It's not meant to be working python.
Industry has always used C/C++ to develop embedded systems. I dont think it makes any sense for them to change to Python since it has no advantages over pure C or C++.
Thanks for the input. I love my types tho . I cant live with them. I have been trying out Python just to experience the "hype" first hand and what surprised me the most is they dont have x++ operands lol. Instead you need to type x += 1
Yup me too C is love and life 
r/learnpython
Did you have to remind me? Years back I took a data feed from a guy who worked in customer support for our sales and marketing crew who assured me that at this pass the data was clean, there were no duplicate company names. I lost count of the number of entries like Acme PLC, Acme plc and Acme Plc :-)
I'm laughing at no advantages over C/C++. Python offers far more abstraction etc.. There's lots of stuff I'd do in an embedded project that I avoid with C because it would be extremely complicated. C has the advantage that it runs with worse hardware and I think that's it. It's very hardware efficient.
True, but that's kinda the worst part of the language :D
That's pretty clever. You could also program it to send erotic photos if you want to spice things up in the bedroom. Just a suggestion ;)
Embedded systems run python well. Look into micro python, runs on a lot of arduino style boards
You can avoid filling a (possibly large) list up in memory by using a generator instead. def is_ascending(items): return not any(item &lt;= items[i - 1] for i, item in enumerate(items[1:], 1))
I can compile an "exe" using pyinstaller and it'll work on my customer's computer. I'm not going to just send over matlab/python scripts and have my customer also buy the signal processing library for 10k + 2k in maintenance per year. A customerr should never pip install your python code. They should click though an installer. That exe builder library is not cheap either. I made an graphical plotter in python years ago and you can edit titles/aaxes/curves/etc. to your heart's content. There are packages out there that do it. If you like the matlab plotting API, matplotlib literally copies it as one of their options. For loading in data, pandas is stupid fast. It had as of a few years ago the fastest csv/tab/space reasder out there. The new jupyter notebook one might be faster though. Things are going toward hdf5 anyways, which is superior and both can do that. Python also has a graphical profiler. It makes a nice webpage and has various ways to understand your code. I'll give you that Matlab's command line interface with variable explorer is well done. That's just not how python code is typically interacted with. It's certainly a weakness in the python ecosystem. When I run in debug mode, I get something similar in WingIDE, but it's not there in command line/ipython mode.
I never said it was and I don't think Python as of now is the way to go for embedded systems. But saying it wouldn't offer advantages over C is just wrong.
I sped up a massive transform of billions of rows a day over 128x through the use of multiprocessing, pypy, and a couple of 32-core servers - and it had no problem out-performing Scala. A bunch of other developers were positive that it wouldn't be even remotely possible. They were completely wrong - and it wasn't even difficult to do. 
In a lot of cases, an if-else chain is perfectly fine. I wouldn't try to hammer first year students for not being clever enough or for not knowing the whole standard library.
Reinstall. You have an incompatible package. Often this is due to 64 bit DLLs with a 32 bit package or vice versa.
Yes, Process Explorer is one of the good ones. I also use System Explorer and a couple of others. I wanted something that was really simple, showing only 3 columns, and was really quick to filter the list items. And it's fun to use your own code right? I can customize all I want now :-) I updated the code today so that you can sort the list by CPU % and fixed a couple of scrolling problems. I thought this would be a good utility to choose since killing processes is something almost all of us need to do from time to time. Thank you for the encouragement... it doesn't go unappreciated!
Hi all, author here. I am working on a Python backend app and I decided to also share some of it in the form of quickstart example. I hope it will help someone to build APIs with Flask! I will also appreciate any feedback on the code itself, as I don't work with Python as often. Thanks!
Check the `configparser` module. There are some examples [in the docs](https://docs.python.org/3.6/library/configparser.html) . Another way to do what you want - store username/password in the environment variables (through `/etc/environment` or user-specific env-file, if your are using *nix system) and access them using `os.getenv` method or `os.environ` dictionary (check the difference in their behavior in docs).
&gt; but I prefer readable code almost always Join the ~~dark~~ Rust side! use std::collections::HashMap; let dict: HashMap&lt;_, _&gt; = (1..=10) .map(|x| (x, x*x)) .collect();
Perhaps I should've instead said: "quickly approaching its PHP-shaped doomsday" ;)
My personal theory (I wasn't part of the industry when this particular madness started) is that it was part of an attempt to create XML-based DSL's in order to enable non-programmers to "program" in XML. I don't think it ever quite took off at the scale the creators' envisioned and was eventually abandoned. I don't have any hard evidence to support this theory, but it would explain the convoluted XML-based subsystems in frameworks like Seam, Spring, Hibernate, EJB, Ant, CXF/Axis, Maven and Struts.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I'd recommend book called "Fluent Python" from L. Ramalho. It discusses advanced concepts plus there is a great "SoapBox" section at the end of every chapter, where he compares Python to other languages or provides some background information. I am enjoying it very much.
Ooh, yeah. good tip!
That's a fair question. There sure aren't that many use cases. I use the git package to automate the Terraform PR creation to save some time to the IT team and ensure AWS users are correctly offboarded. We provision users with Terraform and I wrote this Lambda to deactivate a user when it gets deactivated in Okta, it first disable the user then it creates a GitHub Issue and a PR with the Terraform changes. Hope this makes sense. 
linear programming is an optimization technique, used to get the best outcome ( a maximum or a minimum) drom a mathemical model, it is a part of operatiosn research.
The one in the sidebar wasn't good enough?
Hi fellow Pythonistas! This week I have worked on my "startup" called Contact Cache: [http://contactcache.com/](http://contactcache.com/) In the last days I have been focusing on the backend part which is written in Python. Because I think that the code I put together so far can be of use for other people, I created a sample Flask API app on Github: [https://github.com/stribny/flask-api-quickstart](https://github.com/stribny/flask-api-quickstart) and also wrote a blog post about it here: [https://stribny.name/blog/2018/10/flask-api-quickstart-application-with-json-web-tokens-sqlalchemy-and-pytest](https://stribny.name/blog/2018/10/flask-api-quickstart-application-with-json-web-tokens-sqlalchemy-and-pytest) (I posted it to /r/python too). My app will be written in Vue.js &amp; Flask, so I expect to write more about JavaScript and Python, follow my blog for tips and updates (r/http://stribny.name/blog)!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
This subreddit is for things related to the programming language Python, not for things related to snakes. Your comment has been removed, but if it's cute enough, you might try posting to /r/aww
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I always recommend 3.X for people new to python as all the next generation packages will be in 3.X not 2.X. 
pep 8 is the reason. One of the draws for python is that your code, should seem like I wrote it. Of course that's an impossible ideal, but it works more so then it doesn't. I can go to github and the formatting of 90% of projects will be close enough to pep 8 that I will have no trouble parsing the code. Start throwing in random {}'s and it all begins to fall apart.
Anybody who says a language construct is "hit or miss" just doesn't know how to use that construct effectively.
Depends on the use, perhaps I should have phrased better and said that I dont think the advantages that Python could potentially offer would be worth the change. Most embedded systems do just one thing and trying to make Python do everything from web pages, data analysis etc... to embedded systems seems like a religion at this point. 
I'm suggesting two things: 1. Thinking that you'll never write code as good as the "chopping genius" (so why bother trying) is a sure path to irrelevance. 2. If you never look under the hood to see what your imported modules are doing you'll never learn what's possible.
2.7 will soon be dead so, yeah Python3 &amp;#x200B;
So I should stay away from the 2... thanks dude
thanks dude
It's a field within optimization, a subset of convex optimization problems are linear programs and have well defined methods and algorithms for finding optimal values. 
You are significantly underestimating the number of websites there are. And JS is everywhere. CAD in JS? Honeycomb Machien Learning in JS? TensorFlow.js Biotech? Lots of medical software is built on JS (one of my clients is) Is it the best? No. And Node is often used when there's really a better alternative. Of the hundreds of developers I know, I don't know a single developer who hasn't used Javascript (except maybe that old guy I know who codes B for a hospital company) I would also bet Javascript searches would be more than anything else. First off, there's a lot of newbs in JS and they tend to search for everything. This is also shown by how Javascript searches come up first when searching for things. For example look up ternary operator and the first result you get is for JS. I'm not claiming its the best language, but to say its not the most widely used is plain silly. 
This is actually a strange list of problems for an introduction to computer science. One of the bigger problems we have with fresh graduates is their In ability to understand the very basics. Literally understand at a low level what a bit, bit and word is and how you work with them. Like wise with the basic algorithms and data structures. Python may be a good language to teach programming but it is a terrible place to start somebody out in a computer science program. At this point the language used should be useful for introducing students to “”computer science””, I really don’t see Python filling that role. To look at it another way before you start using the advanced features in Python you really should understand how they are implemented. Do assignments in a computer science 1 class ought to have the students implementing things like linked lists so that they learn the science behind these tools. Honestly it has been a long time since I was in an intro to comp-sci course. As I remember it about half that class covered the very basics of program development. Frankly I couldn’t imagine having enough time to do 50 odd assignments. That school was on the quarter system so we were short a few weeks 
Thank you so much
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Well, if you have multiple programs all calling that function through different pipelines then you have a programming issue on your end. If possible, I'd refactor the code so that all calls to the API are done through a separate, central function that calls the API while simultaneously incrementing a counter. As for the counter itself, it should be relatively facile. Python has a time module.
I dealt with something like this before. You can’t really do it in code unless you have full control of the code. The way I worked around it is by creating a proxy in front of the API server (3rd party). Anyone who calls the function will hit my proxy. Every time my proxy url gets triggered, we increase the counter. Once it hits 3,000, we stop outbound calls and return stale values (program requirement).
On the hand, if you have multiple Black "dialects" it wouldn't have improved the current situation. What if you would merge or manage two projects, would you then have to adapt two shades of Black? As the above comment mentions, the point is to be opinionated. 
We’ll have to agree to disagree. From my viewpoint, JS is nowhere but the web. Node is hipster-popular like Rails was, and it certainly leverages its monopoly on browsers, but the enterprise is doing other stuff. Peace. 
An example taken from [Real Python - Primer on Python Decorators](https://realpython.com/primer-on-python-decorators/#stateful-decorators) using decorators: import functools def count_calls(func): @functools.wraps(func) def wrapper_count_calls(*args, **kwargs): wrapper_count_calls.num_calls += 1 print(f"Call {wrapper_count_calls.num_calls} of {func.__name__!r}") return func(*args, **kwargs) wrapper_count_calls.num_calls = 0 return wrapper_count_calls @count_calls def say_whee(): print("Whee!") Running the above: &gt;&gt;&gt; say_whee() Call 1 of 'say_whee' Whee! &gt;&gt;&gt; say_whee() Call 2 of 'say_whee' Whee! &gt;&gt;&gt; say_whee.num_calls 2
Just use Python's looping / list comprehension mechanism to create and manipulate a list of scalar variables: In [1]: import pulp In [2]: xs = [pulp.LpVariable('x%d' % i) for i in range(5)] In [3]: xs Out[3]: [x0, x1, x2, x3, x4] In [4]: sum(xs) Out[4]: 1*x0 + 1*x1 + 1*x2 + 1*x3 + 1*x4 + 0 In [5]: sum(xs) &lt;= 20 Out[5]: 1*x0 + 1*x1 + 1*x2 + 1*x3 + 1*x4 + -20 &lt;= 0 
Yeah... read my post again. I was praising Python as a *first* language. And there was no talking about web servers.
thank you very much &amp;#x200B;
I really hope this never becomes a thing..
If it's really good I might give it a try, it won't be that difficult as I know C++ which will make it much easier, and who knows I might learn C along the way.
I was giving "first" a different meaning. All languages use similar concepts and claiming Python is a better first language than Java or any other language is just fanaticism. Java was my first ever language and I never had a problem with it nor I ever wished it was easier or I was coding in something else. 
Wow, everyone else is doing something important. Meanwhile, I'm just coding logic to introduce rpg boss battle mechanics into a mod for a clickbaity visual novel, lol.
Great amazing awesome. Simple tool for common job. pip installing it as soon as my poop is done.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [hkamran80/digitalocean-utilities/.../**get_status.py** (master → e129526)](https://github.com/hkamran80/digitalocean-utilities/blob/e1295269f779ec8840cd7267a6452f84b7ab0765/get_status.py) ---- 
Down. They're going to fuck with all of the things that make it appealing which will make it not appealing anymore and then it will die. 
Hey guys, I've had a few responses but I wanted to let everyone know these postings are still in full effect. We have multiple positions open. Please don't hesitate to PM me or reply here. I'm happy to answer any questions I can. Because this is a startup company they're looking for people who can be onsite with their existing engineers. I'd expect there to be more flexibility over time.
https://pythonclock.org for details
It seems like with modern Python type hints will help a lot. Obviously they're not enforced at compile time but it will help ornganizations with a good tool chain.
Suggestion: add some pass-through options to requests, especially **auth**.
RemindMe! 3 Hours
!remindme 2 days
Great point! That doesn't fit our use case so that's probably why it wasn't in this release, but we can look at some of those valuable ones for the next one for sure.
Examples?
Bokeh
Learning using the same book right now. Not really any prior programming experience. It can be pretty tough. Best of luck man. 
Very cool! Looks like a fun first project! Now, I'm still learning myself, but couldn't you store those lists in the program itself instead of in all of those external txt files? Like, in a list or something? Like... appearance = ['clear', 'blue', 'green'] Can you not print random choices from lists? 
Excellent, thanks. I knew about the naming convention; I was thinking as encapsulation as a practice rather than something enforced by the language. &gt;Unlike some languages like Java or E, Never heard if E. Tab opened for later. &gt;[You can literally make 1+6 equal 13](https://kate.io/blog/2017/08/22/weird-python-integers/). Neat post, but isn't the case in any language that lets you modify memory in your address space? E.g. C/C++, the most popular languages for embedded real-time man-rated systems? &gt; &gt;The virtual machine does not give any guarantees with regard to system calls either. You cannot run untrusted programs, because the VM is not constructed to adhere to policies (e.g. don't access the file system). You always implicitly trust your entire library dependency tree. Again, isn't this the normal case with most languages? &gt;Without static types, type checking untrusted data also becomes significantly harder. How so? Example? Untrusted data is presumably runtime input, so i don't see how a static type checker comes into play. &gt;The Python VM is also not suitable for hard real time systems (e.g. cars or planes), because it is not deterministic and predictable enough. Totally true, but I can't think of any gc'd high-level language for which it's not true. &gt;Many ~~Python~~ libraries are vulnerable to exploits FTFY. The current trend in package manager based development is maybe good business but is dangerous engineering. It's why e.g. clojure evangelists advocate rolling your own for everything. 
Bokeh and Plotly are going to be your best options. Here's one article I wrote on using [Bokeh](http://pbpython.com/wine_visualization.html) and another one with [Plotly](http://pbpython.com/plotly-dash-intro.html) &amp;#x200B; Hope that helps.
This is a good opportunity for you to learn a bit more about how to help others help you. As it stands, this is very hard to understand. You might find others more willing to help you if you describe more fully what you trying to do, what you have done in the past, what you expect to have happen, and what is different than what you expect. A minimal example program would be very helpful. In this case, I'm going to guess that by `matplot` you really mean `matplotlib`. And `fc-list` concerns building fonts, which is a bit confusing. I'll note that matplotlib works just fine generically on python3.
So your first guess is that is the library is broken?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
That's where we start our computer engineers and build them up from a digital logic foundation. For CS, most CS1 courses focus on how to program. Its also a service course (generally speaking), and that may be students only exposure to CS. In that case, is it better to have them twiddle bits and draw an ALU on paper, or have them be able to generate functioning code? From what I know, CS covers the hardware aspects later in comp organization, or an architecture course.
edited , now it make more sense :p
First of all, thank you so much for this!! I've been thrown into an interesting situation and asked to teach digital logic (transistors, gates, etc) up through comp org/intro architecture, and python. Yikes. I ended up doing mainly hardware, but am about to transition in to Python. (The objectives are basic, 'algorithmic thinking', and branching, loops, and variables.) However, this is awesome, and exactly what I was looking for! I'm also totally stealing your auto-tester! I've been wanting to switch to a "spec-grading" system which sounds a lot like what you're doing. I taught C for several years, and had it mostly flipped, but all sorts of thrown for a loop now. Anyhow, thanks for posting this, its exactly what I needed!
While I don’t know anyone on the instagram team, I would be shocked if anyone there actually likes the status quo - we know that they haven’t been fed up enough to do a full rewrite (maybe), and that is it. 
My current project is a testing jig for some electronic hardware in a factory. The software runs on a Beaglebone Green with a custom cape for data acquisition. The goal this week is to automate loading firmware on to the boards. The main libraries I've been using so far are: * [pyserial](https://pythonhosted.org/pyserial/) \- communicating over serial ports * [Adafruit\_BBIO](https://learn.adafruit.com/setting-up-io-python-library-on-beaglebone-black/using-the-bbio-library) \- GPIO / ADC control on the Beaglebone * [Construct](https://github.com/construct/construct) / [Bitstruct](https://github.com/eerimoq/bitstruct) \- Implementing custom binary protocols * [Logbook](https://logbook.readthedocs.io/en/stable/) \- Logging
Originally, I started the code doing it that way. I was manually separating each list in brackets and apostrophies. Eventually, I realized I was too lazy to separate the whole list out in apostrophies and commas. I found it easier for me (and my sanity) to load from separate .txt files rather than include each new string of data into the list. For new data or ideas I like I can just copy and paste that into the txt file and have it read each line in the .txt as a string rather than have to separate it into a list manually. Eventually the files will have hundreds of different options to choose from. ------------------------------- Ex: Lets say I find 30 new potion effects from a post that I like and I want to include in the automation. I copy and paste the list from the source into the appropriate effect.txt. effect.txt ------------- Healing Poison Flying New1 New2 New3 etc. Defining the variable then becomes a one time thing. It opens and reads each line as a string of data. def main( ): effect = (open ('effect.txt') .readlines ( ) ) random.choice(effect) print (effect) main( ) vs. (Although probably better for the code, I would spend way more of my time separating each new effect in the list.) def main( ): effect = ['Healing', 'Poison', 'Flying', 'etc.'] random.choice(effect) print(effect) main( ) -------------------------------- It'll produce something from list in the same fashion, it's just about how much time I'm willing to put into the new data. Like I said, I'm lazy. I feel like there's probably a waaaay easier way to do this but I'm too early in my coding career to know what it is. Also, loading the lists like this prevents me from accidentally causing syntax errors in the program itself. Likr my wise computer science prof. says "a lazy coder is an effective coder." Eventually, I want this to create random items with random attributes that assigns a gold value based on the attributes in the list. Thanks for the input! Let me know if this cleared up why I did what I did. :) 
I’ve tried uninstalling and installing matplot but that didn’t work. 
(I'm not sure why it posted all weird, I'm also new to posting on Reddit lmao)
Yes I write “import matplotlib.pyplit” and the program halts. Researching this bug online, I found the fc-list solves the issue. However it didn’t for me. 
lol, it definitely cleared it up. Basically, you did it because it was easier for you! Makes sense. I wouldn't have done it that way, but that's the beauty of programming, that are so many different ways to do things!
And your line of thinking, of reinventing the wheel when it's not necessary, can lead to major bugs, wasted time, and even security flaws. Heartbleed was the result of one programmer thinking they could write a faster alloc function than the kernel devs. Source (you can also just google it, Heartbleed is one of the most talked about bugs out there): https://en.wikipedia.org/wiki/Heartbleed
definitely boooked for later
IntelliJ
&gt; the spaces piss me off when I use different editors Put a `.editorconfig` in your project. Any sane editor will respect it.
India too :(
Well ,,I am thinking to start learning Python ,,it Will be my first language also iam working on my English
If there are multiple different programs, you need some form of inter-process communication. The simplest kind is to store the number of calls so far that day in a file, and have every program read that number, stop if it's 1000 or more, and increment the number. You'll also need to use some sort of lock to make sure that no program can read the number while another program is in the process of updating the count.
I was wondering if you guys have tried using requests and the mobile api endpoints instead?
The context managers are super neat. Will give this a shot.
See my comment below. I'm not suggesting people don't reuse code, I'm suggesting that you take the time to know what you're using before you use it.
What you say is very true, most of issues affect most languages. E is one of the few that has safety as one of its top priorities, adhering closely to the [Security Principle of Least Authority](https://en.wikipedia.org/wiki/Principle_of_least_privilege). &gt; Neat post, but isn't the case in any language that lets you modify memory in your address space? E.g. C/C++, the most popular languages for embedded real-time man-rated systems? The more dynamic and reflective a language is, the harder it is to analyze and control. C/C++ and other compiled languages have undefined behavior, too, but they are more strict/immutable in their behavior. Interpreted languages may have different semantics depending on their runtime environment. &gt; How so? Example? Untrusted data is presumably runtime input, so i don't see how a static type checker comes into play. When you parse input in a statically and explicitly typed language you can be sure that at least the data type is correct at every stage. These languages typically fail (safe) on unexpected input, while dynamic languages keep processing resulting in possibly unexpected results. &gt; Many ~~Python~~ libraries are vulnerable to exploits So, so true :( &gt; Never heard if E. Tab opened for later. I highly recommend reading this short paper: [ACLs don't (work)](http://waterken.sourceforge.net/aclsdont/current.pdf). Which shows one of many problems with todays security architectures (in short, identity based access control does not work in settings with more than two participants). Copying something that I wrote elsewhere: Authority is often assumed implicitly, ambient and dependent on the identity of the user executing a process. In systems with more than two actors, for example a service with many users, the [Confused Deputy Problem](https://en.wikipedia.org/wiki/Confused_deputy_problem) results in all identity based systems. If you are an operating system, and a process calls you, you cannot differentiate between - if the process was given the instruction to do something with a file by the person who gave it that authority - if the process was tricked by another person to use that authority to do something with the file This is because instructions (e.g. a filepath argument) are only given as *names*, not as *keys*. Keys (capabilities) allow you to keep separate authority given to you by different actors. Systems that combine designation (e.g. the filesystem path) with authority (e.g. the permission to open the file at this path, like copying one of your own door keys) are called [Capability (key) based security](https://en.wikipedia.org/wiki/Capability-based_security) systems. For an extensive introduction, read [Robust Composition: Towards a Unified Approach to Access Control and Concurrency Control](http://www.erights.org/talks/thesis/markm-thesis.pdf) It's author is currently trying to integrate some of these proposals into the Javascript language, to alleviate, among other things, the npm dependency security nightmare.
Been there, done that.... Like it for search and regex, never so much for editing.
I wholeheartedly disagree with this. you don't start teaching someone a language with grammar, you start with the language itself. once they have a grasp of the playing field, you get to the details.
I am just guessing the status code might tell you more; what is the exact value of response.status_code when it fails?
It returns a 200 status code and okay I’ll post it there. Thanks
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
The variety of available methods could actually be a learning point and lead to discussion.
On windows you can probably put an autorun.inf in the root of the backup drive to start the process.
What are you going to do about submissions that contain infinite loops?
Python's [socket library](https://docs.python.org/3/library/socket.html) is actually a much thinner wrapper over sockets than you'd expect from Python. It's not a 100% match to the code you'll find in Beej's guide, but by referencing the docs you can probably figure out the equivalent without much effort.
One of the biggest issues when not using something like Django, which nobody ever seems to explain in these sort of tutorials, is rolling back transactions after each test so that you don't leave things behind which could affect the next test. This is still why I prefer Django, this all just works out of the box. Flask+SQLalchemy, Bottle+SQLALchemy, I've worked with these both and always have to end up rolling my own test framework where transactions get rolled back.
Check out libusb library. When the program detects your certain usb is connected via matching the ID, it will copy the files to a folder on the usb.
My experience with academia is that outside of computer science departments, if you have made *any* serious attempt to learn programming from an actual programming course, you will be much better off than most other people in your field, and you should definitely highlight that skill on your CV when applying within your field. I work in psychology/public health, and my brother works in biology. In both fields, very few people have much programming knowledge (beyond the standard and frankly pretty terrible tools like SPSS that have been standards for decades). If you can write a function in Python, you're doing well. (Obviously this will vary a bit in certain niches within bio, e.g. bioinformatics)
+1 on IntelliJ or Netbeans. Both have been solid for me through the years.
I reinstalled so many times still getting the same error 
This is really cool! I'm an intermediate python programmer checking out these questions for fun. I have a small grip: in the version of the tester I'm using (VERSION OCTOBER 7, 2018) in `test_one_function` when there's an exception encountered, it only prints that there was a crash and returns `None`, so your tester actually errors out in `test_all_functions` when trying to check the output of `test_one_function`. Here's a small example: labs109.py def ryerson_letter_grade(pct): raise Exception("An exception") When running `tester109.py`... ryerson_letter_grade: Error in ryerson_letter_grade: Traceback (most recent call last): An exception File "/Users/tom/dev/py109_problems/tester109.py", line 921, in &lt;module&gt; CRASH: None ], "labs109.py") File "/Users/tom/dev/py109_problems/tester109.py", line 87, in test_all_functions if result &gt;= 0: TypeError: '&gt;=' not supported between instances of 'NoneType' and 'int' I would alter your tester file to `return -1` after line 62 so your test file handles the error case correctly. Also, I personally added try: result = f(*elem) except Exception as e: # catch any exception thrown by the function to be tested crashed = True print(f"Error in {f.__name__}:") print(e) break to the `try`/`except` on line 40, because on OSX at least, your tester wasn't actually printing out the exception which was encountered. Another option for printing this info would be using the `print_exc` function from the `traceback` library. Overall though, this is a really great set of problems - thanks for sharing!
Sir i too join
why? i hear fortran fast at computing than python
Did you delete the folder?
Videoing... it’s called recording. 
Yes i deleted the folder
Underscores cheat sheet by Dan Bader for anyone interested: [https://imgur.com/a/ptvq8GP](https://imgur.com/a/ptvq8GP)
Right, my mistake. I will edit post so that there is no lies and some points still stand.
Tag
dicts are mutable objects. Assigning to a particular key in a dict object modifies that dict.
I disagree. You can make up your own, and it would be just as valid as PEP8. The only thing that actually matters is consistency. As long as you're following one style guide, you'll be fine.
Yes, you can learn programming with any language and of course you need the right tool for the job. But I have the exact opposite experience. Python is *fun* to learn programming and easier to get something working. It has strict syntax, it's faster to see results. It's not a coincidence that Python is so popular to teach and prototype. Nobody is talking about enterprise applications.
I think op *might* be flask-sqlalchemy already for the session setup already, can't be 100% sure but db.session kinda could give it away. I actually think this is a common SQLAlchemy thing I've run into this before. It's because op is quering first which puts the object into the dbsession, then trying to delete it. As I recall there are different ways you can get around this, but you really don't need to query the object to delete it. Some other things I noticed, if this is a DELETE view why also allow POST that isn't really proper REST, also you really don't want to manually commit at the end of the view. Generally libraries like flask-sqlalchemy, bottle-sqlalchemy etc will start a session at the start of the view, and autocommit at the end, rollback on bad status code like 500. Calling commit() manually might be OK for a small app with 1 or two views, but as the app grows you really don't want that.
and please please don't call the view patient_delete, I'm actually tidying up a very old codebase that is full of this bad design, e.g. POST /api/v1/update_user is wrong. POST is for create and the word "update" shouldn't be in the URL at all, PATCH if for partial update, PUT is for replacing the whole object. In your case it should be DELETE /api/patient/&lt;pk&gt;
At the end of the day I think this has to do with how you got into coding and what you learnt first, Im not gonna discuss what is fun or what is fast since that is subjective. I learnt Java when I was in 8th grade and coded in it for about a year and a half without ever being aware or paying attention to other languages (I thought C+ was the son of C and that C++ was the son of C+ which does not even exist lol). Therefore the Java ways of doing things are not verbose to me, they are just how it is. I can see how if instead of Java it would have been [insert language] I would have disliked [insert language]. 
So if I plan to learn coding, would this mean I’m better off learning something else?
Have a function wrapper which will open a text file ('apicalls.tmp'), if there is a number in there &lt; 1000, run function then increment number by 1.
Can anyone confirm this is legit and py3 current? Thanks!
Yes i did
Do you have a site for your Java version of the class? 
Grab the title elements, pretty much. BeautifulSoup can do this easily. You'll have to do a little sanitizing but the hard part will be done.
I think most people are overcomplicating this, and you're also getting some flat out wrong answers... I highly doubt that that what you're asking for is the right way to go about this. The right way would be storing the value externally in a file or light database or whatever. You would also need a timestamp for when it was last updated (so you can reset the count). But... Don't do this. It's not necessary. Just make requests until you hit the limit, it will just return a different response. Do you have any reason to believe they will take issue with you making requests even after exceeding the limit?
OP please don't listen to this... If he has multiple processing calling this function how do you think the count is going to be correct?
Or, and I think that explains it better (if not kms): As an object and not just a simple variable, dicts are always passed by reference, so a function that takes a dict doesn't get a copy of it like it does in the string example, but rather gets a reference to the actual dict object
/r/learnpython The _right_ way is probably to use an HTML parser but... I would just use a regex. Something like this (note these are NOT normal quotes): \d{1,3}. “.*?“
AFAIK because there are lots of scientists making useful libraries, numpy/cuda is fast enough, and the development time is much much faster.
https://docs.python.org/3/reference/datamodel.html
Well, what have you tried. Certainly you haven't tried EVERYTHING, because that would include the correct answer.
I would not recommend using Shiny if your not very familiar with the R language. We have one shiny dashboard (with shinyproxy) service at my company, and it's a pain in the ass to maintain (because R is made for data exploration, not production-grade applications). Anyway, I would recommend to use a proper backend (ex for Python: Django + Django Rest Framework) and learn how to use JS charts library (D3.js, Chart.js, etc...) It could feel like harder to get into it, but it will be easier to develop/test/maitain in the long run. 
/r/learnpython 
Hey, I think the best documentation on OpenAPI Specification is here: [https://swagger.io/docs/specification/about/](https://swagger.io/docs/specification/about/). This, together with Swagger Editor that will complain when you produce an error should serve you well. Just beware that sometimes the error message from the editor is misleading. In a broader context, API documentation is more than just a spec in Swagger/OpenAPI/Apiary. It is good to produce more detailed tutorials for your API users to make their life easier :)
I am using a different technique in the example, cleaning the database by dropping and recreating the database tables. So every test have a clean state to begin from. Is this what you meant? I understand that this approach is slower, but works and it is probably enough when there are not that many tables yet.
You can keep the token valid for a couple of days if you want, but any API client should be able to handle the situation when token expires and ask for a new one before making new requests. I think it is possible to issue tokens without expiration date or bypass expiration validation on the backend, but it is not a good idea from the security point of view :) 
I've never heard of the jaro-winkler distance (I'll look it up), but the example you provided could be detected by checking if each of the two names has the same number of characters and contains all of the same letters. Sorry if this is stating the obvious or what the jaro_winkler distance is all about. 
I found this: https://www.python.org/dev/peps/pep-0008/ &gt;In addition, the following special forms using leading or trailing underscores are recognized (these can generally be combined with any case convention): &gt; * \_single\_leading\_underscore: weak "internal use" indicator. E.g. from M import * does not import objects whose name starts with an underscore. &gt; * single\_trailing\_underscore\_: used by convention to avoid conflicts with Python keyword, e.g. &gt;&gt;Tkinter.Toplevel(master, class_='ClassName') &gt; * \_\_double\_leading\_underscore: when naming a class attribute, invokes name mangling (inside class FooBar, _\_\boo becomes \_FooBar_\_boo; see below). &gt; * \_\_double\_leading\_and\_trailing\_underscore\_\_: "magic" objects or attributes that live in user-controlled namespaces. E.g. \_\_init\_\_, \_\_import\_\_ or \_\_file\_\_. Never invent such names; only use them as documented. I couldn't find anything in the Python documentation about the single underscore as a "temp" variable but Googling around it seems true.
Works for me. Maybe try: [http://docs.xlwings.org/en/stable/whatsnew.html](http://docs.xlwings.org/en/stable/whatsnew.html)
The simple approach would be to do some basic text processing to remove unimportant differences before comparing, such as converting to all lowercase and removing punctuation. Depending on the volume of data you have to deal with this might be adequate. The sophisticated approach is to calculate some sort of similarity score like you have begun doing now, and if you have a large set of sample data available you could look at training a machine learning model or doing other statistical analysis. 
Thanks for taking the time to find this. Much appreciated. 
Plenty of people started successfully with other languages but if we have a choice than why not? For a classroom of kids it's hard to pick anything else than Python. Java is a boring overkill for youth in school.
Check out [this David R. MacIver talk from PyConUK 2016](https://www.youtube.com/watch?v=OkusHEBOhmQ) on Integer Linear Programming. Slides here: http://drmaciver.github.io/misc-talks/easy-solutions.html#/
Didn't work on mobile but perfectly on PC, thanks for sharing ;)
The bug in pipenv is caused by imports of functions from the pip module, which is [explicitly discouraged and not supported](https://pip.pypa.io/en/latest/user_guide/#using-pip-from-your-program) by pip. Semver would not have helped here, because it allows changes to internal, non-public APIs at any time, even for patch releases. There is another bug where pipenv even tries to import a private method (\`\_strip\_extras()\`) from pip: [https://github.com/pypa/pipenv/issues/2924](https://github.com/pypa/pipenv/issues/2924) And another issue discussing the matter of unsupported imports of private APIs from pip, and why that is bad: [https://github.com/pypa/pip/issues/5854](https://github.com/pypa/pip/issues/5854) The point is: Semver would not have prevented this at all, and freezing dependencies is a ticking time bomb. If pipenv is buggy and fails at housekeeping its internal hacks, blame pipenv, not pip or a versioning scheme. &amp;#x200B;
Yep, I reverted for a moment back to my native language there. Thank you for the correction.
&gt;programming issue ...or OP has a well thought out function in a proprietary library/module/package/class? What is stopping OP from logging usage, then counting after the fact? OP didn't mention doing different logic if the limit is tripped. grep command on daily rotating logs would do it.
Bad idea
thanks 
[FuzzyWuzzy](https://github.com/seatgeek/fuzzywuzzy) uses Levenshtein Distance for string matching and might be a good "off-the-shelf" solution for you. There's a good write-up and explanation from the authors [here](https://chairnerd.seatgeek.com/fuzzywuzzy-fuzzy-string-matching-in-python/).
Not multiple processes calling this function; multiple processes calling the API *through* this function. You can keep the function running in the background and use the multiprocessing module to handle incoming requests.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
please upvote
&gt;Following semantic versioning would help (in the current case the pipenv guys should have told the pip guys to expose this API somehow). &amp;#x200B; No, semantic versioning does not help, as long as pipenv uses internal, private APIs from pip. The current situation sucks, but not because of the versioning scheme. Blaming and bike-shedding versioning schemes is way too easy and distracts from the actual problem: That pipenv may not be stable enough yet. They have to either mark some of pips APIs public and supported, or stop using them in pipenv. In the meantime, they should run automated tests that catch these breakages before a release is published (as discussed in the last issue I linked). With that in place, the version string does not matter anymore.
Nice, is there an unobsficated version?
YouTube had a good course you can find but it cut off early. Thee best course was on udemy for $10. Worth every penny. It will be the most reveiwed course by a Mexican gentleman
SHA-256 lambda implementation: [https://www.reddit.com/r/Python/comments/9me4ug/sha256\_python\_implementation\_in\_one\_line\_lambda/](https://www.reddit.com/r/Python/comments/9me4ug/sha256_python_implementation_in_one_line_lambda/)
 Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren't special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let's do more of those!
The links in the sidebar are an excellent place to start. I used the Codecademy course and I suggest you give that a try. Python was my first language, too.
I'm on mobile ATM but I'll definitely check the side bar out when I'm home
*Fucking dies*
Are you using classes? If not, try not to use global variables. 
Hi, I primarily use the r language and built a couple of shiny apps but haven't deployed anything yet. The python route seems like a long one, since I don't primarily work in CS. We are an engg R&amp;D company. Why is it difficult to maintain shinyproxy? What problems did you encounter and how are you solving them ? I want to try shinyptoxy once
Check reportLab
Cheportlab. *** ^(Bleep-bloop, I'm a bot. This )^[portmanteau](https://en.wikipedia.org/wiki/Portmanteau) ^( was created from the phrase 'Check reportLab'. To learn more about me, check out this )^[FAQ](https://www.reddit.com/78ilq0).
I am writing a script to be used in with a postgresql database. In the end youll be able to log in on any machine in the 2 networks and have the system know where you are and which raw printer you have on this machine. (I am an apprentice and new to python and this is the thing I have to do while im out of things to do (like sorting our wares and stuff) basically so I can learn something.)
You could use Jinja templates to create HTML reports and then [pdfkit](https://pypi.org/project/pdfkit/) (which is a wrapper for wkhtmltopdf) to convert them to PDF.
Is that a plot to sell us screens with 160:9 aspect ratio?
WTF do you think this is, a Perl sub?
[good ol' code golf](https://jrlburke.files.wordpress.com/2015/10/could-should.jpg?w=640)
 import os import hashlib good = 0 sha256 = ... for idx in range(128): r = os.urandom(idx) if sha256(r) == hashlib.sha256(r).digest(): good += 1 print(good) I think this conclusively is an conclusive proof of the correctness of your implementatition that noone ever could doubt. Ill use your implementation for all my serious projects from now on. On a more serious note: why do you setitem? Couldn't you use assignment using[]?
more like 35 lines: https://i.imgur.com/Bbesjg5.png
Wrong sub. Perl is that way --&gt; r/perl
Just to remind everyone, [never ever implement your own crypto.](https://motherboard.vice.com/en_us/article/wnx8nq/why-you-dont-roll-your-own-crypto)
While one liners are fun, you still should honor PEP 8: Limit all lines to a maximum of 79 characters. So, yours is actually almost 30 lines long. 
Whatever gets you out of bed in the morning, I guess. 
Your own screenshot shows line 2 starting just below, though.
Oh god why
I think it's a limitation of lambdas, you can't do assignments but you can call setitem.
is this... better... ? sha256 = lambda data: [([ [ [ [([w.append((gamma1(w[-2]) + w[-7] + gamma0(w[-15]) + w[-16]) &amp; 0xffffffff) for _ in range(48)] and False) or[([ [ [ [g.__setitem__(j, values[j]) for j in range(8)] for values in [ [(t1 + t2) &amp; 0xffffffff, g[0], g[1], g[2], (g[3] + t1) &amp; 0xffffffff, g[4], g[5], g[6]] ] ] for t1, t2 in [((g[7] + sigma1(g[4]) + ch(g[4], g[5], g[6]) + K[i] + w[i]) &amp; 0xffffffff, (sigma0(g[0]) + maj(g[0], g[1], g[2])) &amp; 0xffffffff)] ] for i in range(64) ] and False) or[H.__setitem__(i, (H[i] + g[i]) &amp; 0xffffffff) for i in range(8)] for g in [H.copy()]] for w in [ [int.from_bytes(msg[i_ * 64: (i_ + 1) * 64][i * 4: (i + 1) * 4], 'big') for i in range(16)] ] ] for i_ in range(len(msg) // 64)] for sigma0, sigma1, gamma0, gamma1 in [(lambda x: rot_r(x, 2) ^ rot_r(x, 13) ^ rot_r(x, 22), lambda x: rot_r(x, 6) ^ rot_r(x, 11) ^ rot_r(x, 25), lambda x: rot_r(x, 7) ^ rot_r(x, 18) ^ (x &gt;&gt; 3), lambda x: rot_r(x, 17) ^ rot_r(x, 19) ^ (x &gt;&gt; 10))]]] and False) or b''.join([x.to_bytes(4, 'big') for x in H]) for msg, rot_r, ch, maj, K, H in [(data + b'\x80' + b'\x00' * ((56 - (len(data) + 1) % 64) % 64) + (len(data) * 8).to_bytes(8, 'big'), lambda a, n: ((a &gt;&gt; n) | (a &lt;&lt; (32 - n))) &amp; 0xffffffff, lambda x, y, z: z ^ (x &amp; (y ^ z)), lambda x, y, z: (x &amp; y) ^ (x &amp; z) ^ (y &amp; z), [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2], [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19])]][0]
&gt; it would be just as valid as PEP8 *For your project*. But the glory of python is its comprehensive standard library and vast 3rd party library support - if you don't make use of any of that you're probably doing something wrong. The community converging on a single standard is advantageous for the entire community. PEP8 isn't hard. It's certainly no harder than any other set of standards - easier when you consider `autopep8`, `black`, IDEs with built-in linters and so on. If you choose another standard, you are making the intentional decision, and expending effort, to decrease compatibility between your codebase and the rest of the python community. That's completely nonsensical to me. Why would you bother?
Thank you for the response, I'm going to look into the the options you mentioned! I've also posted this in r/learnpython as that sub seems a bit more active. 
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [I made a python cheat sheet](https://np.reddit.com/r/learnpython/comments/82t191/i_made_a_python_cheat_sheet/) \#2: [2000+ free programming books on github](https://np.reddit.com/r/learnpython/comments/8ycc5j/2000_free_programming_books_on_github/) \#3: [When I'm coding, I don't feel stupid anymore](https://np.reddit.com/r/learnpython/comments/989qx7/when_im_coding_i_dont_feel_stupid_anymore/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
try codecademy yo get 7 days of trial
Thanks for sharing!
This is where it all gets subjective. Beauty is in the eye of the beholder.
r/learnpython
You are right, I meant conda channel; But users should not be allowed to change directly (via "activate env") environment, nor install libraries: if not, my fear is to make the repo unmanageable. (Honesly, I'm a little bit confused and managing multiple problems, mainly I''ve been looking for a good process to manage this tasks). Thanks
Correct and that's why you can't use normal variables in lambda expressions and have to use lists to store variables.
Python is fairly well suited for scientific computing (Though what you intend to do currently won't come under the purview of scientific computing yet). As you mentioned, since it is a beginner friendly language you can focus on understanding the physics behind the problem you are trying to solve rather than grapple with the nuances of the programming language. It is very well suited for your particular need as there are various statics/matrix structural analysis courses which use python as the programming language for solving trusses, beams and so on and so forth. Further, it is popular for Finite Element Analysis with various libraries being written in Python already. A famous PDE solver for finite element applications, [FEniCS](https://fenicsproject.org/) has a python interface. It can do pretty much everything you want from a finite element solver at reasonable speeds. So if you want to get into the beautiful world of scientific computing in general and mechanics in particular python is definitely the way to go!
Thanks, I hate it.
Then don't use a lambda, ffs.
I like `sorted(items) == items`. Memory and time be damned!
Jesus H Christ. Of course it is! Everything is subjective. But we also have enough brain processing power to put ourselves in other's shoes. I'm not saying it's impossible to learn programming with Java. You couod learn with C or any other language by why bother? For first timers Python is the perfect starting choice.
What kind of help?
I think the second example in "Sort array by element frequency" is wrong. There are two 2s, and three 6's, but you've put the 2s before the 6s
It's a hashing algorithm. A hash is a one-way function. Given an input, it produces a (hopefully) unique output but given an output there are no practical ways of getting the original input. Hashes (along with other measures) are how passwords and other sensitive data are stored. You can verify the data without storing the sensitive data. 
Indeed. Python is great for this type of task. You can even directly solve this type of beam using the SymPy library, specifically `sympy.physics.continuum_mechanics.beam.Beam` -- [Solving Beam Bending Problems using Singularity Functions](https://docs.sympy.org/latest/modules/physics/continuum_mechanics/beam_problems.html). Python is included and used in many FEA programs, e.g. Abaqus. Another good solution may be the [Julia language](https://julialang.org/), but here the ecosystem is (so far) smaller.
Ok. Why are you using .format() here? What is the "if" for? Look for typing errors dots instead of commas etc.
Just because you can, that doesn't mean you should. That being said, bravo! 
It looks like you've changed the "double underscore" part, but you are still recommending leading and trailing underscores, which is not a Python convention.
Anybody can write terribly formatted code. There's no challenge in that.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
That’s interesting. Is it possible you can explain how a hash is built?
There seems to be a lot of folks mistaking this for something that you'd put into production. Relax, this is like code golf. It's just a fun thing that someone did to see if they could do it. It's an impressive implementation given the limitations.
I also disagree with this: why do people doing web development or data science in Python need to know what a bit is? Or how to implement a linked list? Perhaps this is down to the ambiguity of what the term "computer science" means. Some people use it to mean "programming" or "software engineering", while others reserve it for "the mathematical foundations of computation."
What are you wanting the "if" in the `format()` method to do? &amp;#x200B; Just putting `format(mpg)` should work..
Not really, you could probably write it in less characters if you used multiple lines
I disagree. Writing poorly formatted code that is of great complexity in minimum byte length is a challenge-- it's called code golf.
Cuz only the high templars get to write crypto, right? Your linked article indicates not to invent your own crypto \*algorithm\*. The OP implemented a NIST-approved algorithm. That statement is dumb because it isn't universalizable. If no one ever implemented their own crypto, then we wouldn't have any at all.
I've been using Jinja2 and Weasyprint in combination.
Unfortunately the concepts behind the various (cryptographic) hash algorithms are a bit beyond me, so maybe someone else could answer. It generally involves a lot of math. You can think of the algorithm as a blender. Given the same ingredients you'll always get the same smoothie, but you can't get the original ingredients given the resulting smoothie. 
Very neat! Plus it conforms to the PEP-8 maximum line length of 7900 characters. Or is it 79 characters? I can never remember.
 &gt; If you use a known algorithm and are implementing it correctly there's no problem, Except when you _don't_ implement it correctly, but you don't know enough about cryptanalysis to notice you accidentally added an easy to exploit padding oracle, or timing attack, or you accidentally spray your key all over shared memory... the list of things that can go subtly wrong and completely fuck everything is a lot longer than you realize. Safe and highly tested implementation is _just_ as important as the algorithm itself. Seriously, don't implement crypto yourself. It's not a dead meme, there are reasons security experts work so hard at drilling this into your head. Don't spread irresponsible advice. 
&gt; implementing it correctly I don't believe myself as much as you do. How it can be a dead meme when openssl can have [a undetected security bug](https://en.wikipedia.org/wiki/Heartbleed) for years?
We are so obsessed with thinking whether we could that we never stopped to think whether we should.
I forget in modern times people put five monitors next to each other so they can view a 2000 character line on one line. 
print(os.environ[‘OUTPUT_PATH’]) os.environ[‘OUTPUT_PATH’] = ‘my_value’ 
https://i.redd.it/u2mx4eqyqld11.jpg
[Don't reimplement standard algorithms either unless you know what you're doing](https://en.wikipedia.org/wiki/Side-channel_attack)
Now this is quality content
That makes sense, appreciate the explanation! I need to learn to be more aware of what kind of arguments I'm passing around and then treat them appropriately.
!Redditsilver
So, will this help you then? https://www.python.org/dev/peps/pep-0572/
Thank you ( I had to run the set line first, then I could change it to what I wanted. )
Where can one learn everything necessary to implement crypto? Don't just tell me not to. Give me some resources I can read to become an expert.
This question is better suited for /r/learnpython I'm surprised that you encountered a function like zip before you learned basic programming. Here's what you can try. Make sure you don't just copy this without understanding it. Also, try to improve your variable naming. (x,y,z,s are poor names) def x_to_points(x_cords, y_cords): points = set(zip(x_cords, y_cords)) result = {} for x, y in points: point = x, y if x not in result: result[x] = set() result[x].add(point) return result A better way to do it would be to use a `defaultdict(set)`
we use this works well.
Sure if you don't know how to implement your security you shouldn't be doing it. But those who do learn and study the right practices are equally as dangerous as letting google or amazon or whoever to run your crypto.
How does one even come up with something like SHA-256?
`my_list2 &gt; 4` will raise a TypeError because you can’t compare lists.
While I can't give any guidance on accomplishing this with python (which may also be better suited for r/learnpython anyway) you should be able to stick an expression with logic operations into Wolfram Alpha and it'll give you a simplified form, with the steps taken to simplify. Do note that, assuming this is for homework, you may not get the simplified expression you'd expect. You should also do this to check your simplification, rather than copy a simplification. It sure can be a nice tool for this sort of thing.
The hash function is basically an algorithm that converts the input data (typically a string) into the hash value (a block of seemingly random bits). All data that’s been “hashed” should be the same length. All inputted data should produce a unique hashed value. A good hash function should have a 1:1 relationship between the inputted data and hashed value. At least that’s my understanding. https://en.m.wikipedia.org/wiki/SHA-2?wprov=sfti1
I made something similar. There where a few steps to acomplish that. First i had to add a rule that when a storage device was added it would automount and run a script. That script would check for the remaining usb scpace and if enough it would start a copy of selected directory. (Compressed idealy). Simply create a file /etc/udev/rules.d/11-media-by-label-auto-mount.rules with the following: KERNEL!="sd[a-z][0-9]", GOTO="media_by_label_auto_mount_end" # Import FS infos IMPORT{program}="/sbin/blkid -o udev -p %N" # Get a label if present, otherwise specify one ENV{ID_FS_LABEL}!="", ENV{dir_name}="%E{ID_FS_LABEL}" ENV{ID_FS_LABEL}=="", ENV{dir_name}="usbhd-%k" # Global mount options ACTION=="add", ENV{mount_options}="relatime" # Filesystem-specific mount options ACTION=="add", ENV{ID_FS_TYPE}=="vfat|ntfs", ENV{mount_options}="$env{mount_options},utf8,gid=100,umask=002" # Mount the device ACTION=="add", RUN+="/bin/mkdir -p /media/%E{dir_name}", RUN+="/bin/mount -o $env{mount_options} /dev/%k /media/%E{dir_name}" # Clean up after removal ACTION=="remove", ENV{dir_name}!="", RUN+="/bin/umount -l /media/%E{dir_name}", RUN+="/bin/rmdir /media/%E{dir_name}" # Exit LABEL="media_by_label_auto_mount_end" udevadm control --reload-rules Now, when you connect the USB storage device, udev should automatically create a directory under /media with either the device ID, or device label (if you have assigned one), and mount the device. If you disconnect the device, the drive directory (in /media) will be automatically removed You can change the RUN instruction to run something else. Depending on your distro, if its init.d or systemv you may have to change a few lines on /lib/systemd/system/systemd-udev.service And comment line: #MountFlags=slave Otherwise rule wont work. Reboot, and done!
Or you could just do the following one-line implementation: `from hashlib import sha256`
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I'm not really sure anyone can become an expert at every aspect of it. It seems to me that the number of eyes looking at these implementations is far more important than developer skill.
What is Code Golf?
Not really, no.
I think most antivirus, if not windows defender, block such file execution by default. Not 100% sure.
Challenges in regards to a languages use and limitations that people like to solve for fun.
Nicely done In the same spirit, but not with the PySimpleGUI interface, I have a "by drive" option. Usage : stop all processes launched from a specific drive (usb / virtual / etc...) Perhaps, you could have interest in this function
Yep, it is a common (and better) approach. I've used in many times myself in other projects.
SHA is used frequently in crypto. This is SHA256, which is part of the standard for HMAC and PBKDF.
Thank.
Thanks for posting this, I'm going to share this with my GradDept Group because we have been pushing grads to learn python. 
Thanks! I'll be sure to test this out! Sorry, I didn't realize this wasn't the place to post.
Cool! I'll check out BeautifulSoup.
If you wrote this without the oneliner app, you rock! Otherwise still not bad. I wrote a short Tweet which does os.system without os or system strings in the code. A kid said "I'll use eval on my web site but I'll secure it. I won't run the code if it imports os or subprocess." What a stupid idea, but I sent him the tweet and he said "I'll ban import too." As a matter of fact I can import without writing 'import' string in my code. 
Thank you, well I figured this out myself right before I read your answer, what do you think of it? &amp;#x200B; xy = dict() for i, j in zip(x, y): xy\[i\] = set() xy\[i\].add(i) xy\[i\].add(j) print(xy) &amp;#x200B; Anyhoo, I know that in a dictionary the key's cannot be duplicated, so if I have 2 or 3 x values, only one will be stored in the dictionary. I actually am just new to Python, I am a C++ developer and I am trying to convert a C++ problem of towers into Python. I don't understand how the guy stored multiple x xordinates asa key for his c++ implementation of a map of sets. Thx for reply &amp;#x200B;
yeah, this won't work in Python 3 but will in Python 2
That is because my automated tester tries out grades up to 149. But your solution is what I meant when I wrote that I need to learn to think in more Pythonic ways. Never even thought that range objects could be used as dictionary keys, even though they are mutable... &amp;#x200B;
Thanks for pointing that out. I was getting too eager and did not remember to verify the logic with a solution function that did not work...
Python lines are 79 characters long. 
https://insights.stackoverflow.com/survey/2018#technology 100,000 respondents. ~70% say they use javascript. ~50% use NodeJS. And I work with several enterprise clients that use Node, particularly for specialized intermediary tasks or for middle-ware. All the serverless function environments (like Azure functions) support Javascript. Python is of course growing very rapidly in the enterprise too, no doubt about it. This analysis based on Google trends is worthless. People who search for Python have to type in python. For Javascript you just type in things (like ternary conditional) and the first results are JS anyway without having to put JS in the query. That plus people are searching for React, Angular, and Vue instead of just JavaScript. The underlying assumptions are flawed.
And better yet, you'll get an idea of all the ways it can go wrong, so (hopefully) dilletantes don't go implementing their own damned crypto!!!
This is an amazing list. Thanks so much for sharing it!
My point is you have three options-- 1. Use someone else for your security. For example, lets say you use Google as the sole log on solution to your apps. * you've now introduced a SPOF that you have no control over * if google ever gets fucked, so does *everyone* that was using any app using google for their security * if you introduce something in your app that lets an attacker of you get personal data that would previously have to be gotten via attacking google, (intenionally or not) you are the backdoor and whoever is using your service will have all their other "google sign on" accounts affected. 2. Roll your own security implementation, but use a known algorithm implementation * your users will only have their data on your service fucked if you implement poorly * no other companies mistake fucks you over * you can't screw over the user unintentionally * however there's more work to do if either your implementation or algorithm get compromised 3. Use your own algorithm * don't. Because you probably don't know what to do mathematically. Other groups smarter than you have created cryptographically secure algorithms You always start off with 1. But as your app/business gets larger and larger, it gets less and less safe to stay 1 rather than switch to 2.
oh shit sorry, i fucked up
The best way to do that is to get a degree in Cyber Security, probably a PhD. If you don't want to write crypto that is actually run on a computer, but it's more of an casual intellectual interest in how things work, there is probably good stuff on Bruce Schneider's blog. For security stuff for the web specifically, check out Troy Hunt. Wikipedia also has some pretty good introductory texts on the subject (not quite "great", but better than "fine", IMHO). For a more hands-on approach, I recommend starting with implementing a Caesar cypher and Vigenère cypher. Also, implement a one-time pad, and make sure you understand both why it is perfectly unbreakable, but also impractical in most real world scenarios.
I disagree. Here's how you write a custom encrypt function: encrypt = lambda data,key: aes.encrypt(custom_untested_encryption(data,key), key) 
You'll definitely need a strong (STRONG) background in information theory, and probably quite a bit of mathematics including probability theory, statistics, and linear algebra, just to be able to vaguely check your work. Beyond that, a very solid understanding of programming from the metal on up, to ensure your implementation doesn't rely on or become weak due to hardware or compiler differences. The thing is, it's often not hard to implement and somewhat understand what crypto algorithms are doing, the math &amp; operations involved are often not all that complicated. The problem is coming up with the whys and wherefores of doing those particular operations in that particular order is crucial to having a "production-ready" strong, secure implementation. So, while it's generally not that hard to write crypto, it's incredibly difficult to write STRONG/SECURE crypto. If you want a taste, try coding up a few historical ciphers, as well as tools for breaking them. Once you get up to the 1930s/40s and ENIGMA, you'll find it starts to get a little tricky in terms of writing the encoder/decoder, let alone the code-breaking methods.
Thanks for the feedback! Will work with Python 2.7 &amp;#x200B;
You could also use Jinja templates with LaTeX and then invoke latexpdf to generate the PDFs.
Yes, that is what I said, thank you.
You're welcome [Azhain](https://www.reddit.com/user/Azhain)! 
```&gt;&gt;&gt; isinstance(1, object) True``` In Python, everything is an object. This behavior is all about mutability and how Python does variable assignment. Compare ```def f(n): n = 2 n = 1 f(n) print(n)``` with ```def f(d): d = {‘b’: 2} d = {‘a’: 1} f(d) print(d)``` and ```def f(d): d[‘b’] = 2 d = {‘a’: 1} f(d) print(d)``` The first two reassign. The last one mutates. [This post](https://nedbatchelder.com/text/names.html) does a good job explaining how assignment works. 
How many dollars is this view?
Here is relatively comprehensive (and totally free) resource for starting Python from scratch: [pythonlikeyoumeanit.com](https://www.pythonlikeyoumeanit.com) I created the site as a resource for high schoolers that I teach.
That's not technically an aspect of the for loop, but rather `range`. It's unlikely you'll need for i in range(len(some_list)): because you can iterate over the list elements directly, rather than their indices: for e in some_list: Range is often used with 0 as the start, and that's the default, so range(10) represents a sequence of length 10, which seems intuitive to me. But that means it goes "up to" the value 10 without including it. You'll find similar notions of the stop parameter in other places, such as slicing. 
The part that you can use it outside of Excel is new
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
People complaining about looks are missing how awesome this is...
Thanks I hate it
If you follow along the text thoroughly, writing out the example code as you go along and completing the reading comprehension questions, I would estimate that it would take 10-20 hours to complete the entire site. Closer to 10 if you exclude all of the NumPy content.
If you want low-level control, at the expense of more work, you can use [pyCairo](https://cairographics.org/pycairo/), the python interface to the Cairo rendering API. Here's a simple example: import cairo surface = cairo.PDFSurface("example.pdf", 595, 842) # A4, in points context = cairo.Context(surface) context.select_font_face("Sans", cairo.FONT_SLANT_NORMAL, cairo.FONT_WEIGHT_BOLD) context.set_font_size(72) context.move_to(100, 100) context.show_text("pyCairo") context.set_line_width(20) context.set_source_rgb(1.0, 0.5, 0.5) # light red context.move_to(60,20) context.curve_to(100,500, 200,0, 300,150) context.stroke() 
This will return `True` for sequences which are monotically increasing but not strictly monotonic *Example:* sorted([1, 1, 1]) == [1, 1, 1]
Thank you so much for this
Thx for reply, Actually I changed to a SortedDict() since its better for my task at hand. &amp;#x200B; Regards
I’m using both. Using global variable for some things like the frames, deltatime, etc. Other than that, I’m using classes for setting the tiles. I’m watching a YouTube tutorial on all of this on my free time so I can speed up this process. Trying to make a Pokemon style battle system/ look, so I need help on that if you can send me some vids on that
At least $10, I'd say.
Thank you for the pointers. 
You should be able to fuzz for vulnerabilities at least that is my first thought.
Did you not read the sidebar, or do you not like the discord that's listed over there?
I'd say $4000-$6000, depending on what's in the computer.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
As one of those security guys, people like him are what keep me up at night.
I think you're confusing the point. The "don't roll your own" advice is specifically for cryptography, not authentication in general. For example, it's mostly fine to implement your own login system using Bcrypt. However, you should not try to re-implement Bcrypt yourself. Use an existing, well-tested library.
You can even get Linux kernel in one line if you try hard enough.
I used to use 120, but found it overly permissive. Led to lots of bad decisions. I've found the 88-ish limit imposed by Black to be very nice.
Good tips. 
[removed]
There are some instances where you have to use lambdas unfortunately. AWS is one that I can think of. For some snowball operations there are steps that can only be injected with a lambda. Disclaimer: I have not used AWS myself, just heard colleagues talking about it.
The bot commented because it has an autoreply when titles use the phrase "Help me" (among others). Usually it's fine, but this time it was a mistake On the plus side, the anti spam features mean that unless I lose the database (which is possible: I need to update it so I have backups) it wont ever comment on your posts again. 
I would love to use a rolling window manager with this. 
The way you win golf is to go around the course in the fewest strokes. The way you win code golf is to use the fewest characters
Money to buy whatever they want and they pick items that display a logo in their face all day. You bought it, why do you need to be advertised to by it?
I laughed for a good while. It has come full circle now. People don't know what 'import this' is anymore it seems.
And follow the instructions -- don't think that XORing two lots of bcrypt together or something makes it twice as strong.
Hah, yeah, sadly. Really the only thing missing are the solutions, but every challenge gives you enough to know if you implemented it correctly (e.g. the PT "foo" should result in the CT "bar")
It's fine as long as everyone knows not to use it for things actually requiring security. For example, this one is great for the novelty aspect.
&gt; from then we see breaking update at each release of one on the other Semver doesn't fix this. You just increment the number. That's a breaking update. They just decided to allow bumping the major version each release, which makes using Semver kinda pointless. &gt; To my opinion, this "let's ditch the semver philosophy" trend is in some key Python packages is pretty harmful for the whole community Why? Subtly changing how a parameter works or removing a parameter is a breaking change. If it's in some B-list function, it probably doesn't matter. Python, numpy, scipy, and pandas don't follow Semver and they are core libraries to the python ecosystem. For a small project, Semver is probably possible. For a large project, there's no point. My open source project is ~145,000 lines of code. Why would I bother with Semver? It's not feasible to use it. I use Anaconda and my pip version changes every time I upgrade my packages. I don't even really care which version I'm using (which turns out to 10.0 at the moment). It's fine. &gt; In short: pipenv and pip should be frozen in your Python projects Your code should be capable of running on a wide variety of versions. If it's not that's a defect and in the case of pipenv and pip, that's a defect and it sounds like the defect is on pipenv, not pip.
Only the right column is for data science specifically. The rest is for every python beginner, really.
I am literally reading this right now
TLDR: Paul Romer switched from using Mathematica to python and Jupyter notebooks so he could share his research with others more effectively. Money quote: &gt;Romer believes that open-source notebooks are the way forward for sharing research. He believes they support integrity, while proprietary software encourage secrecy. “The more I learn about proprietary software, the more I worry that objective truth might perish from the earth,” he wrote.
This is not the correct response to the problem!
Why do you say that?
Yes, and to control the version of pip and pipenv, like any other dependencies of your project, you freeze them (lockfile). At least to have the control and not awaken one day because a new package on pypi broke you CI. What is the difference between protect against unwanted update of request for example, and unwanted and uncontrolled (because they do break thing from update to update). Semver is about surface of your surface. If your api and behavior change, notify with a major change. Adding a feature, update the minor. Bug fixes allow to release a fix while still garanteeing no other change impacts negatively. It is not because it is hard it is not doable. It IS hard to follow semver, and require lot of self discipline. For probably most of lib, following semver is totally doable. For app yes it makes less sense to apply semver, because compatibility matrix is much less important than stable feature set. And pip and pipenv, in these case, ARE libs for a given application. It is not MY fault if they release with a major break, It is mine to protect me against their bad behavior, no matter the real culprit. Both product are meant to make the life of managing dependencies easier, with version freeze and compatibility range description. I go further and say they should ALSO be frozen in one development. Why would I accept an unwanted pip or pipenv update break my system while I do not for request or any other deps ? Same rules applies as well to pip and pipenv, but both projects kind of refuse this fact and promote the “keep me always updated” rules, and here we have a bad side of it. Happily this break involves lot of people, so the fix will be quick. But what if an unwanted regression the dev are not interested in fixing it, or tool many months, like it happened because 2018.5 and 2018.7 where something broke for many months? Result: I freeze pip and pipenv in my projects but keeping all of them sync are technically hard, because they live outside of the virtualenv 
&gt; For example, it's mostly fine to implement your own login system using Bcrypt. However, you should not try to re-implement Bcrypt yourself. Use an existing, well-tested library. Right. But I've seen people saying that even using a well tested bcrypt library is bad practice and instead all logins should be done via fb/google/msn
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Fuck yes, finally I'm a data scientist.
With respect, while cool, I don't think delegator nor your package are truly useful. I couldn't personally find a use for delegator, and while I can find a use for the four features you have that delegator does not-- that's four features. I feel as though in making this package you've merely polluted the ecosystem and now a couple years down the line we will need to be able to learn multiple apis for the same thing just because of polluted ecosystems early on. I think it would have been better to have forked delegator and or contributed upstream, then offered your package as an alternative API that you can argue is better than the original.
I am literally reading this comment right now
I'm literally making a comment right now 
An alternative API would basically be a completely different package since both packages are basically just a thin API around subprocess. Mine is also built to fit in with a much larger ecosystem of packages which I'll publish at some point. It's not going to pollute anything. If you don't like it simply don't use it.
It's *called* Lambda. That doesn't mean you have to use lambdas. You write regular, named functions.
Ah got it. That makes way more sense
r/learnpython r/coolguides 
I'm not saying I don't like it-- I'm saying the features are extremely minimal beyond another package that is already acheiving the same goal. And thus the ecosystem is polluted.
wait ... wtf? can someone explain? So this is a list with two elements, each of which is a list with 3 elements is ... &gt;10?
Is this only for Python 2? NB: 5/2 gives 2.5 in Python 3. No float casting required.
As others have said: this isn't a versioning problem, it's a pipenv problem. Don't use pipenv, use something more reliable and workflow agnostic, like pip-tools. 
Automate the boring stuff? /r/learnpython
[sequence and type comarison](https://docs.python.org/2/tutorial/datastructures.html#comparing-sequences-and-other-types) &gt; Note that comparing objects of different types is legal. The outcome is deterministic but arbitrary: **the types are ordered by their name. Thus, a list is always smaller than a string, a string is always smaller than a tuple, etc.** [1] Mixed numeric types are compared according to their numeric value, so 0 equals 0.0, etc. So non-numeric types are compared by type name (in python2, maybe not 3? Also: don't do this generally). So `list &gt; int` because `int` comes before `list` alphabetically. I'm sure someone somewhere has some sort of comparison system setup around this, or this choice was made logically for some reason. This is pretty arcane so I would be surprised to see this commonly used but you never know. 
See [my comment](https://www.reddit.com/r/Python/comments/9mftca/neat_python_cheat_sheet_for_data_science_for/e7exakd/) on why this isn't working like you think.
Man that is just bizarre. I guess I don't know what behavior to have otherwise other than just throwing an error or exception I guess. But I cannot fathom a situation where that is useful. Seems like it would just cause confusion. 
If the OP really wants to avoid multiple hits on the API server after exhausting the daily quota, he can simply register the fact that he's over quota for the day in a database the first time he gets an "over quota" response from the API on a given day, and consult this database on every call to make sure it's "safe" to proceed. Note that this adds some constant overhead to every call - but updating a counter would as well, and is marginally more complex. If no database is already available to the app, I'd use sqlite3 which is in the standard lib. The "clever" solutions are probably all wrong, because the point is *not* to count just the calls *that took place within one process*. But all this is indeed most likely pointless, just handle whatever response the API returns for an over quota condition in some suitable fashion.
you can try this [https://github.com/phatpiglet/autocorrect](https://github.com/phatpiglet/autocorrect)
A larger distinction between append and extend would be beneficial. The examples make them seem equal and the text is not very clear. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Excellent. Several more tabs opened for later.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Source on that? Would love to know the monitor details 
thanks no problem. I was at work and didn't want to spend too much time on reddit so I forgot I reading the rules. I was a bit too quick (: Have a nice day. I posted the question on learnpython. 
Hey thanks for the reply. Ya right now, i am more confortable with R and Shiny, so will develop a small app in that first and see how it goes. Later when i get time,I have to go through chart.js django etc, D3 etc. We have a dedicated person for IT in our team, and we maintain our own server. Also the number of concurrent users are very less- around 5. Will that make it easier to deploy apps and run without issues? We woudn't want to babysit it all the time
Sure, using __import__ and using codecs.rot13 helps a bit ``` (lambda c:(lambda b:(lambda a:getattr(a,b("flfgrz")[0])(b("yf")[0]))(__import__(b("bf")[0])))(c.getencoder("rot13")))(__import__("codecs")) ``` https://twitter.com/Cediddi/status/856055852347863041?s=19
If you're comfortable writing html, you can write an html document and render it to pdf using a dev flag in chrome (not sure off the top of my head, think it's --read-to-pdf=Destination_path
Full disclosure: I am the original author of the envisage core (not the Tasks UI part). The core of envisage is just a framework for building extensible applications (whether or not they have a GUI) via plugins, extension points and extensions to those points. It is based heavily on the original ideas of the early Eclipse plugin framework before the OSGI effort. The Tasks GUI code (which really should have been kept separate from the core) is again based on Eclipse and was written to provide a way to write a certain class of GUI (specifically, GUIs that look a bit like IDEs), and not to be a generic GUI framework. In defence of the passing function names etc, one of the core ideas of Envisage is to allow you to lazy load \*everything\* so that applications can contain hundreds of plugins and only load what the user actually uses. There is an alternative by Phil Thompson at Riverbank Computing called 'dip' which is an attempt to take the best bits from envisage, traits etc.
lol ok. Good to know! If your thread is using a lot of I/O where the python interpreter is dropping the GIL around those low level system calls, you get a good parallelism, meaning if you look at CPU usage you will see multiple CPUs with high activity. If your thread is CPU intensive and hanging out in the python interpreter your program will just be running tasks serially. If you look at CPU usage you will just see 1 python process using CPU, the rest will be idle. In other languages, like C++ for example, there are no problems with CPU intensive threads hampering parallelism, as there is no GIL. That is what I mean by hit or miss, parallelism varies based on the function your running in the thread.
Yeah, except it's already well known that you shouldn't be using threads for cpu bound tasks in Python because of the GIL. For CPU bound tasks processes or the use of subinterpreters &amp; threads are recommended instead (however the subinterpreters api is currently at the C api level only, however there is a PEP open to make a Python api level use of subinterpreters via a module in the stdlib).
Thank you!! The world needs more sound thinkers like you rather than people quick to point the blame in the wrong direction! 
This feels like an attempted exorcism
I love these cheat sheets, they make it easier to take those basic tutorial lessons and translate it into a project. I can actually feel like I’m learning how the language works without spending hours reading through documentation to find the functions I need. 
This isn't just a Python thing either. I took a CS class (Java) that used a website like [repl.it](https://repl.it) for homework. Any code containing `getSecurityProvider` was an instant fail, but using reflection to find and call the method named `"getSec" + "urityProvider"` worked just fine - and revealed that they knew enough about security providers to block the method names, but not enough to actually implement one. The moral of the story is, if you absolutely need an open eval, use an actual sandbox.
From what I recall it's a minimum line length.
While often true, it's not a given and the original comment is still misleading
https://i.imgur.com/bWdWcgq.gif
Eh, what would happen if his system suddenly burst into flames? You can't bulletproof everything. The more bulletproofing, the more unwieldy your script is going to be. My proposal doesn't seem vastly different from what you suggest down there. In fact, I'm pretty sure something like it has already been written for the os module. Don't quote me on that, not sure. But I've definitely done it before.
Your question has already been answered so I will reiterate what is commonly said in these types of posts. Learn python3 because it's newer and if you ever need to use python 2.7 you will find out that there are almost no differences between the two. YOu will encounter some changes in how you are allowed to make strings and you have to add () to print, but that is about it for most use cases.
Yup, that's the [pidgeonhole principle.](https://en.m.wikipedia.org/wiki/Pigeonhole_principle) Generally, the goal is to make sure the hashes are uniformly distributed amongst the possible set of hashcodes, often with similar values having dissimilar hashes (for example, if you were to have hashes of phone numbers, and the hashing algorithm made all positive input values have a hash value above 0 and all negative input values have a hash value below 0, then half of the hash codes would be unused as phone numbers cant be negative).
Non-Mobile link: https://en.wikipedia.org/wiki/Pigeonhole_principle *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^218268
You solve a problem using a "bite sized" chunk of code, however like in golf where the aim is to as few strokes as possible to sink the ball, in code golf the (usual, there are some variations) goal is to solve the problem with as few characters as possible.
&gt; Python, my favorite working language for twenty years, can no longer cut it at the scale I now need to operate – it can’t handle large enough working sets, and it’s crippled in a world of multi-CPU computers. I’m certain I’m not alone in seeing these problems; if I were, Google, which used to invest heavily in Python (they had Guido on staff there for a while) wouldn’t have funded Go. The idea that Google has the same problems as his project is laughable(for example—his whole thing is about running something on a single machine) but also his history is wrong—it was not an institutional decision to replace inadequate Python it was Rob Pike looking at how they wrote C++ services. &gt; As I said at the beginning of this rant, I don’t think there’s a big window of time in which to act, either. I judge the Python devs do not have a year left to do something convincing about the GIL before Go completely eats their lunch, and I’m not sure they have even six months. They’d best get cracking. Lol, since this is esr I guess I should be just glad that his crackpot bullshit is confined to technical things this time.
Why would anyone need to look up variable assignment or how to calculate the sum of two variables in a cheat sheet? It's not even showing the sum of two variables, it's showing the sum of a variable and a constant. Why does this extremely basic cheat sheet currently have 440 points and 92% upvotes in /r/python? Does 92% of the voters here not know basic Python? Datacamp have [several cheat sheets](https://www.datacamp.com/community/data-science-cheatsheets) that actually make sense, this one does not.
Thank you, iEvilMango, for voting on HelperBot_. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/). *** ^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)
If your interested learning about the mathematics that underpin some of the most used cryptographic primitives (e.g AES, RSA, diffie-helman) I highly recommend the book Understanding Cryptography by Paar and Pelzl. It is an amazingly accessible book—I would say the only necessary prerequisites are a semester of discrete math—and is super well written.
&gt;"Data science" &gt;"basic addition" Ok
To be clear, it is your fault if you allow your CI to use an unverified version of any package and it doesn't work with that version. If it's a requirement that your build always passes, you should be more careful. At the very least, you should unlock dependencies on specific packages and allow those builds to fail, but be a bit stricter for other builds. If it's not a requirement that your build always passes, then it's no big deal. It would have failed anyways if a user had used that version. At least now you know.
You’re right. Thanks for pointing that out. It should be very difficult or (in theoretical cryptography, infeasible) to find two inputs that map to the same hash value. Not that two inputs will not have the same hash value.
was wondering the same thing. i was expecting something along the lines of this: &amp;#x200B; [https://elitedatascience.com/python-cheat-sheet](https://elitedatascience.com/python-cheat-sheet) 
Really, the only part of this that I disagree with is: &gt; There should be one-- and preferably only one --obvious way to do it. But this is probably why I prefer Perl over Python. :)
Captain America
me_irl == 'dat data scientist'
thanks, I hate it
I have a commit.
Hey, thanks for asking! It's progressing slowly but surely. I sort of abandoned the algorithmic image processing approach and started using object detection neural networks to "see" the cards. I used the TensorFlow FasterRCNN detection model but wasn't able to get it to be accurate as it needed to be. I just now have gotten card detection working very well using YOLOv3. The bot can accurately count through a full deck of cards now! I'll be posting a video about it to this sub soon!
 https://twitter.com/dabeaz/status/1047815843650785280?s=09
Thank you so much. As a math major, I don't get to take anymore programming classes past the one intro to cs w/python so I'm excited to dive into this. 
Why all the upvotes? Oh...that section on data science.
lizards
From the documentation it says to call this method twice to enable ipv4 and ipv6 [https://twistedmatrix.com/documents/15.2.1/api/twisted.internet.interfaces.IReactorTCP.listenTCP.html](https://twistedmatrix.com/documents/15.2.1/api/twisted.internet.interfaces.IReactorTCP.listenTCP.html). Not sure if this means calling the function twice or have two parameters of 'interface= '
Exactly, I don't know why people mock these when a beginner working on an assignment for practice gets so easily lost in the documentation.
Exactly which part of this is meant for data scientists?
Meanwhile Instagram is still sitting over there running Django on CPython Python3 ...
Check out scrapy: https://doc.scrapy.org/en/latest/intro/tutorial.html It's concurrent scraping framework. You write spider classes and scrapy pretty much does everything else. I has a bit of a learning curve if you're new to python but it's pretty much de facto standard when it comes to web crawling.
That sounds like a great way to start learning the basics. Once you know that stuff, start working with classes and your contacts as objects instead. Then start splitting modules out and importing them in your main, small script. Last, practice packaging it all once its done, and publish it on pypi.
How about 3b1b's very own animation engine? https://github.com/3b1b/manim
1: /r/learnpython 2: google windows pip tutorial 3: post what you tried and the results. Help us help you.
Make sure you have the correct path set. Do ‘where pip’ to check which folder it is installed in and first navigate to that folder. 
Exactly! I'd be fine with a python container, python running in a non sudo user and whole host is hardened. But do you need eval that desperate? 
r/technicallythetruth
Here's a sneak peek of /r/technicallythetruth using the [top posts](https://np.reddit.com/r/technicallythetruth/top/?sort=top&amp;t=all) of all time! \#1: [I mean..](https://i.imgur.com/AOBx3fk.png) | [257 comments](https://np.reddit.com/r/technicallythetruth/comments/9cmhdx/i_mean/) \#2: [I guess so](https://i.redd.it/slmba535sz711.jpg) | [102 comments](https://np.reddit.com/r/technicallythetruth/comments/8w4sqv/i_guess_so/) \#3: [It is... isn’t it.](https://i.redd.it/p9rodcm2drl11.jpg) | [467 comments](https://np.reddit.com/r/technicallythetruth/comments/9f5jup/it_is_isnt_it/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
alright, in both the python shell and command prompt pip does not exist at all. what now? (I have python installed in a custom folder instead of the default C: path)
This makes me really, really happy.
Not sure great is the right word, but I'be been using matplotlib and saving to pdf. If you're already familiar with matplotlib this works like a charm, if you're not - its quite an investment.
I think you are good to go ! Last advice: even if you are not primarily a developer, try to read how to code well. For example, this book is gold: [Clean Code: A Handbook of Agile Software Craftsmanship](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882))
Thanks for explaining this. I am a noob and specifically wondered what this line in the cheatsheet is for and why it should evaluate to true.
I can't believe you're talking about what's "unwieldy" while suggesting he has a constantly running process and using multiprocessing... That's total overkill for something he probably doesn't even need to do in the first place.
Looks like a java class name
[removed]
My bad. 
Sorry mate it's not very good
can you specify how it can be improved? 
You need to make sure the flux is fully capacitated. Also your string is not long enough to fully maximise the loop. But don't worry, we all have to start somewhere buddy ;)
You should specify the listening address using the optional interface parameter. Use '::' for IPv6. On Linux this address usually binds to both the ipv4 and ipv6 any addresses, but it may depend on the operating system. You may need to also bind to '0.0.0.0' I think,
Good Catch mate, Had a look myself and wouldn't have even considered it ill throw you a shout if i ever need help
I find Brett Slatkin's "Effective Python" quite enjoyable to read, to find out more effective ways to use Python, maybe check it out, https://effectivepython.com/
Well that's the thing-- it is predictable because it's deterministic. No matter the contents the types determine the comparison. I have a feeling this was changed because as the docs mention sequence types of the same type are compared lexographically and recursively, however comparison of different types are deterministic. So if someone wanted to compare a version tuple to a list of ints no matter what the ints were the result would be the same.
Don't know if you know this but you're also going to have to code in stalemate (draw) when the opponent has no legal move available and the king is not in check.
Hi coders, id say what you said about flux is BANG ON! ive looked through it multiple times myself and, as a self taught self proclaimed pro coder that has worked on many small projects, that HAS to be the problem (Make sure its fully capacitated) happy coding :p
You could also look into Selenium. It can be used in concert with BeautifulSoup.
I have couple of things i would like to mention about this: 1. You could turn all the files into JSON and have all attributes in one file and just call `random.choice(attributes['title'])` (attributes is the parsed JSON)(not necessary but fewer file dependencies) 2. Please close your files by calling `f.close()` (f is the file) 3. Please open files with the `with` statement (`with open('attributes','r') as f:`) 4. Don't use eval to turn a string into a integer, use `int()` instead or if floats are needed, use `float()` instead
The float row in the type conversion table on the left is missing 3.45
It's worth pointing out regularly that ESR is a raving lunatic.
there's only about 40 different characters in that line, so it's all good
While I appreciate a number of perfectly valid concerns about objects overhead on a massive scale, GIL not helping to parallelize memory-intense work (since you certainly don't want to pickle/unpickle a 300k+ list of python objects between processes), \_very\_ dynamic typing when it's not really necessary, I just made a real quick look at the project itself, "reposurgeon". And what I observed terrifies me. [https://gitlab.com/esr/reposurgeon/blob/3.45/reposurgeon](https://gitlab.com/esr/reposurgeon/blob/3.45/reposurgeon) Just look at this single, 638 KB sized module consisting of 14041 lines of code. This module defines classes that span over 1600 lines of code. A project of this size just has to be structured properly. One can smell a need of a complete rewrite, regardless of the language used. However, what terrifies me even more is that the resulting code in go language is pretty much the same - [https://gitlab.com/esr/reposurgeon/blob/master/src/goreposurgeon/goreposurgeon.go](https://gitlab.com/esr/reposurgeon/blob/master/src/goreposurgeon/goreposurgeon.go), 617 KB of 16573 lines of code. I would say a proper rewrite in Python, structuring the project well, could lead to a similar performance benefits - a rewrite allows you to re-think your data structures and your algorithms, making it possible to parallelize them using processes instead of threads. It makes possible for the tool to avoid working with 300k+ objects \_at the same time\_. Having said all of that, I am really glad that an automatic conversion from python to go worked in this case, and gave a real performance benefit. I would probably reflect on an existing code base though.
I was working on a calculator using tkinter, it is actually complete now. Well there are a few minor things that I want to fix up but for the most part it's done.
This is some javascript level fuckery. I used to defend python 2.
&gt; I saw a commercial for an above ground pool, it was 30 seconds long. You know why? Because that's the maximum amount of time you can depict yourself having fun in an above ground pool. – Mitch Hedberg [Source: Mitch All Together](http://skulkersbole.tumblr.com)
Sorry for saying bigger companies use their own login systems I guess? Big shocker, sorry for the trauma.
Okay, curious, how would you do this without import as you mentioned above?
When pipenv decides to poke around in the internals of pip, things are guaranteed to break even with a strict observation of semver.
99% percent of internet rant about Python can be replied with "Don't use it then". I don't understand this love/hate boolean of programmers.
This sheet takes the time to explain how to add, subtract, and cast an int to a float to divide, but it doesn't mention the one thing a beginner really needs to know, which is that integer division ignores remainders. &gt;&gt;&gt; 5 / 2 2
I believe React.js is the real threat for JavaScript
http://www.followingthetrend.com/wp-content/uploads/2014/05/Technical-Analysis.jpg
Javascript still alive? 
It wuz ugh j0lk
This post is better suited for r/learnpython
No it wouldn't...
This is just general intro to python. I'm not saying that that isn't useful, but it doesn't have much to do with data science
These are useful to have open if for example you want to try and do a project in a new language, like when I used julia I had the equivalent open for Julia and just looked up how to index arrays etc etc
Combined with the fact that a version of this cheat sheet is posted in some capacity quite often, usually with others. 
People are mocking because this is from a collection of python cheat sheets that is posted often enough as it is.
I think tracking language popularity comes from our desire to remain relevant in a workforce that's constantly changing, but I completely agree. This is a poor metric that supports a fallacious argument. 
Trying to build a community for my cryptographic analysis framework [CryptoKnight](https://github.com/AbertayMachineLearningGroup/CryptoKnight), which uses Python to generate C code and to interface with the PyTorch deep learning library! 
There's nothing wrong with building your own login system. It's a fairly simple problem for a half-decent engineer if you just use native `bcrypt`, `hash_compare`, `csprng`, and other cryptographic primitive implementations. The issue is when you decide you want to implement one of those primitives yourself. But by all means, please do. I get a weird sense of enjoyment out of popping bad password reset and session management workflows. Plus, ya know, job security.
I don't get it much anymore either. It's also a bit of a popularity contest. In the end the right language for the job will hopefully be picked. The only reasons I think these charts still stick around is to help a beginner plot a course or if non-beginner looking for something new to learn and indifferent as to what. Those and maybe to figure out what a recruiter may be looking for on behalf of the client. There is something to be said for dropping someone into a team that knows the languages used so training can focus on what and why something was built. However, I do think too much stock is put into what languages you know early on. It doesn't make sense to me to potentially not hire a well seasoned programmer for a language they could probably pick-up during the time before the first day of general company onboarding. That's probably 2-3 weeks before they actually have to learn the new company's code.
&gt; but these tools are key to Python today, and they break over and over, at **each** release. pipenv is [very](https://pepy.tech/project/pipenv) [small](https://pypistats.org/packages/pipenv) compared [to](https://pepy.tech/project/pip) [pip](https://pypistats.org/packages/pip). 
oh the irony...
Isn't gyp deprecated for gn now?
What? I wouldn't call threads hit or miss. Thats like saying calling tcp hit or miss when it's known you should be using udp, or visa versa.
I actually don't know anything about the topic. I am completely new to the arena and I am thinking of this project as a way to explore more about the field. If you can point to some reference or if you can give your code base it would be of great help. 
Right, but the "roll your own security" meme has started to mean "don't build your own login system"-- that's what I'm saying I'm against.
If you're talking about a GUI like other animation engines use (Such as Blender, Source, or really any commercially available animation engine), PyQt5 is probably your best bet.
What the fuck does this clown do for a living anyway?
Looks like standard ARIMA to me, so yeah it wouldn't take that into account. Not to mention you could get a decent idea of the languages that python was growing at the expense of to provide an obvious upper bound.
I feel that it's also click-baity as hell when articles do this. "Will \[insert some language at the bottom of graph\] be the next top programming language???!!!1one11" Seriously annoying...
My advice is you uninstall Python and install Anaconda. That is Python with a lot of goodies. 
Pip install -U archlinux
\+1 for reportlab. Love it. Lots of features. Though I think you have to pay if you want to use the software commercially
What causes the periodic use of java and javascript?
During the python install wizard you didn't chekc the checkbox that says "add to path" or something.
Mistypes in google
You are not more employable by knowing the tech everybody knows, you stay relevant by knowing the tech nobody else knows - and the employer needs. So, for that purpose, a far more relevant metric would be something like the number of new job openings, their 'lifespan' (how fast the position is filled), and/or the experience level for the position. In fact, whenever the two metrics aren't positively correlated, you should start considering any other option instead - or you'll face heavy competition.
That website uses tons of JSON data from an API. It might be best to just get the JSON data directly. Open up devtools in your browser and explore. 
College semesters
Stickermule ;)
That makes a lot of sense!
I was under the impression 5/2 returned 2.5 but 5//2 returned 2
You could take a look at other automation tools docs and source code. One of those is PyAutoGUI: [https://pyautogui.readthedocs.io/en/latest/](https://pyautogui.readthedocs.io/en/latest/)
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I was halfway through 2 different courses and my laptop passed away. It's gonna ba a while before I can get another. :(
Oops, here you go! https://discord.gg/K3CZYj9 Hope to see you soon!
Working on a secret Santa project. It loads names and cell numbers from a json file, randomizes the names and texts everyone. I'm still fairly new to Python so I'm trying to add things I've never done before!
Actually UnixStickers but basically the same thing now :P
Well you can do something like this, should defeat basically any grep based solution: ``` globals()['__buil' + 'tins__'].__dict__['__imp' + 'ort__']('os').listdir('.') ```
How do you know if someone is an Arch user? They'll tell you.
I dont think it would be a good idea to convert Python into a web browser scripting language...
Mine has a dragon sticker on it but I cant figure out which programming language it is so I can learn it, any tips?
A database engine, but not in Python, its in C because I dont know gods 8086 assembly yet.
Add into that the fact that js and python are very often used in conjunction. Django, Flask, etc projects almost always use both
How to have the python sticker? Is it python send it to you? 
Working on my game! It's in a "pre-alpha" stage. Lots more work to do. 
[LLVM compiler](https://en.wikipedia.org/wiki/LLVM)?
This change has landed in the `dev` branch; thanks again for the input!
This change has landed in the `dev` branch; thanks again for the input!
Nah it came as part of a sticker pack on [UnixStickers.com](https://unixstickers.com)
Thanks!
1) Learn C 2) Create new programming language using C 3) Come up with a catchy name 4) profit
If it could reach parity for client-side webapp development, it would absolutely crush JavaScript.
We're kinda like Apple fanboys, just better
I’m working on a bot that will build links on 28 different Web 2.0 assets at will. Wondering if I can get it wrapped up as a paid web-app.
Insufferable 
I will call it an animal name, make it compiled instead of interpreted and copy Python´s syntax, while including the ++ operators. I think Im going millionare.
That's true for Python 3, but the rest of this guide looks like it's for Python 2. Python 2.7.15 (default, May 1 2018, 16:44:37) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)] on darwin &gt;&gt;&gt; 5/2 2 &gt;&gt;&gt; 5//2 2 Python 3.7.0 (default, Jun 29 2018, 20:14:27) [Clang 9.0.0 (clang-900.0.39.2)] on darwin &gt;&gt;&gt; 5/2 2.5 &gt;&gt;&gt; 5//2 2 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [syegulalp/Akilang/.../**memory.md** (master → 6245a30)](https://github.com/syegulalp/Akilang/blob/6245a305fe20f847e50a1d53379f220ad3b5829c/memory.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e7gcw10.)
Right, it's impossible to have a web app without JS. If it was a graph of say, languages used for web app backends, that would be more interesting. I don't know how you would get the data for that though.
aw baby don't be like that
Python is best language, but C pays the bills. 
Where can I get free python stickers? 
idk but you can get a $1 sticker pack on UnixStickers.com
This is highly dependent on your field. If you're trying to be a data scientist, you'll be substantially less employable if you do not know either R or Python. Because they are the most popular languages in the field, most new tools are written for them. You'll be left behind if you don't know them.
This doesn't make much sense. Python is a server side scripting language and JavaScript is used for giving an HTML page interaction and animation... How will Python be bigger than JavaScript, well I don't see Python replacing React or jQuery anytime soon. &amp;#x200B; A more valid question would be "Could Python’s Popularity Outperform PHP in the Next Five Years ?" and well, we already know the answer to that now. While a majority of the internet is made up of websites with PHP and matching that sheer quantity of websites with ones made in Python will probably not ever be matched anytime soon, Python itself as a server side language and for web frameworks is slowly becoming the go-to for webapps. It's easy to learn, it's human readable and minimalist. ...and well, look at the graph itself, you can see where PHP is.
Thanks!!! 
Nicely said. In addition, heavily popular languages tend to have more routine jobs. Just saying for those who want to explore.
I got sick of writing programs in Casio Basic, so I’m working on compiling c for my calculator. So far it’s working pretty well, even though 90% of the old forum posts are in French
I agree on the part about the little overlap they have. I actively use both and never thought about if one was more popular than the other, different tools for different jobs. 
A News crawler using News API and Tensorflow Text Summarization, this will help me to read ML-related news on a daily basis. 
C++ is the bedstone of all languages and this graph proves it.
Sigh, maybe you just don't know what hit or miss means, that has to be it. TCP/UDP work the same in all languages. Do you see the difference? In basically all other languages, the main requisite for parallelism is simply being able to break the work down into chunks. Some highly parallel workloads in every other language don't parallelize at all on python. Most developers have no idea until they try because nobody is reading the source code for every module they call in a thread. The fact their is a PEP to fix this, means its not clear or well understood.
sudo why
I came here to say the same. However, I forgot that NodeJS is a pretty big thing. 
Starting to learn numpy. Guess my answer doesn't qualify here :P
You're better off if you know what everyone knows AND something else. Getting a job knowing python, js and java wouldn't be hard. Getting a job knowing only OCaml and nim isn't going to be as easy. 
 file = int(input("File size in MB:")) speed = int(input("Transfer speed in Mb/s:")) if file &gt; 0: file_size = file * 1000000 print(file_size) else: print("error") if speed &gt; 0: file_size = file_size * 8 print(int(file_size)) This is what I have currently written 
If more people are learning it then more people are building apps with it, and more established companies are moving over to it because it's easier to find qualified applicants. There's a hipster code movement atm, so yes it's saturated but not by people who know their shit. If you can use Python's advanced built-in features and know a bit about what's going on under the hood (not just using Python for its abstractions), you are a minority for jr applicants.
Because people code to make money. And you want to spend time learning and indemand tool. 
I might be tired, but CPS_lock description makes zero sense to me.
The metric is actually based on question **views**. Which could mean something entirely different as we don't know why they are viewing the question, or what the question entailed.
Rule of thumb: When YAPF makes your code look ugly, that's a good opportunity to pause and reflect on whether there's isn't a simpler way of doing what you're doing. I think the general consensus in Python is that comprehensions should be simple enough so that they fit on one line. Nested comprehensions are better to break up into a few statements with helpful names. The Google style guide argues for this, and YAPF seems to follow that idea. Personally, I like Haskell more than Python so what do I know.
I worked on a Flask + SSE project recently, I ended up using gevent (for reasons) and it had a Queue class. Every SSE created a Queue and kept trying to read from it, while the background tasks would fill all the queues with new events.
I hadn't though of that. Thank you kind sir/ma'am.
Use python for everything. When you encounter a bottle neck then optimizing by writing the routine in C. The only worse that premature ejaculation, is premature optimization.
Django is a thing. A really great, and amazing thing. Flask is also a thing. It's also a great and amazing thing.
Referring to [Google Style](https://github.com/google/styleguide/blob/gh-pages/pyguide.md), below code is assumed to be OK: ``` return ((x, complicated_transform(x)) for x in long_generator_function(parameter) if x is not None) ``` And to be honest, this is all I am after. I cannot pull out below code out of forced single-liner... ``` def ids_by_country_flag(token: str) -&gt; List[int]: country = token[2:4] return [ advertiser.id for advertiser in get_advertisers() if advertiser.country == country ] ```
100 chars OK, but tabs? Not in my code, every. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [google/styleguide/.../**pyguide.md** (gh-pages → d3881b4)](https://github.com/google/styleguide/blob/d3881b4fa910526f0e60e56d0110a9c6492949d8/pyguide.md) ---- 
NodePy in the horizon. :)
You may think that, but I make over six figures as the only FoxPro data scientist in the Midwest. I do quite well for myself before I bankrupt my employers, or as I like to call them, "the host organisms."
I wasn’t sure how to convert the last step. It seemed reasonable at the time to convert the file again, rather than the speed. 
Well you just need to force Mozilla devs to add a python interpreter to Firefox, make some official specs for python as a web dev tool, and you are set.
I wasn’t sure how to convert the last step. It seemed reasonable at the time to convert the file again, rather than the speed. 
Ah ok '::' is for IPv6. I'm running my server on linux so I'll give '::' a try tonight and add an IPv6 address to my server. Thanks for the help!
I like python more the JavaScript for web since it’s super simple to set up a flask app with about zero python code. Don’t even get me started on Django.
Because you already have Javascript. I dont understand the obsession people have with using their favorite language everywhere. I love Java with my heart and I know it has its place, Im not gonna do front end web development with it or try to program microcontrollers with it.
I wanted it to make some sort of "unwanted pregnancy/child" equivalent for the programming world. However unwanted compilation sounded weird to me. 
Ah ok. I think the '::' should solve my issues. Thanks for the help!
&gt; And comparing Python and Javascript is asinine they barely overlap in their uses I totally get and agree with you, except for the Django/Node.js &amp; express overlap for server deployment. (disclaimer: I fuckin' hate Node.js with a fiery passion)
Pm'ed
GUI app is not the same as client-side. You can't run Python interpreted in the browser. For example, Zim uses py-gtk, which is a wrapper for the front end code which is written in C++. The Python itself in this instance is the equivalent of the "server side" code responding to events. Phillip.
This post is better suited for r/learnprogramming
Add to that, that popularity does not always correlate with other factors (employability, universal applicability, etc.,). That's stock market 101. Ironically, the more of these posts you do about Python, the more you popularize the language with people who don't understand the difference between languages, creating a short term feedback loop.
Your situation is true for you but doesn't equate to the absolute truth for everyone. His comment "highly dependent on your field" is exactly the point.
They rewrite it every year and a half anyway. 
I work as an embedded c programmer. I mostly work with the AT90CAN64/MEGA8535. Best case with CAN64, I have 64KB to hold my program and variables(the 8535 has 8KB). For all my personal projects I normally roll with a raspberry pi and python unless I need real time IO.
They rewrite it every ~~year~~ month and a half anyway. 
&gt; but the flask also can use the SQLAlchemy as a ORM Yes, I agree with that. But you still wind up re-inventing the wheel on things like authentication (which most do not understand) and backend administration interfaces. Which inherently requires a DB tie of some type. 
&gt; but the flask also can use the SQLAlchemy as a ORM Yes, I agree with that. But you still wind up re-inventing the wheel on things like authentication (which most do not understand) and backend administration interfaces. Which inherently requires a DB tie of some type. 
How are you scraping the lyrics? ( Which site you are scraping?) I have only used request and BeautifulSoup for some image scraping. Scrapy looks quite daunting to me. Your project seems quite interesting.
any reason you are learning numpy specifically? I'm guessing you're looking at the data route, in which case I'd recommend going straight to Pandas. Yes, Pandas works on top of Numpy, however an in-depth understanding of Numpy is not necessary to use Pandas. Moreover, Numpy can be a little too abstract to apply to real world problems, whereas you can start working with Pandas almost instantly.
&gt; this would likely be compensated by more focus on correctness ahahahahhahaahaha. no. The focus on correctness is largely driven by commercial imperatives. If the company you're working for doesn't appear to care much about correctness, it's usually because they don't. &gt;At the moment, there is a lot of pressure on people to get shit done haphazardly just to push the project out of the door Largely because, for a lot of companies, that's what they want. &gt;If that same code were planned to live for decades (because that's what a rational person would plan for That's highly irrational in a lot of industries. The norm for most code is that gets tossed because it ends up not being needed rather than because it doesn't work. This is why I'm highly skeptical of a lot of languages like F#, haskell, etc. and why I think they're not very popular - they slow down development in order to protect you against certain classes of bugs. When the cost of development is &gt; cost of those bugs, it doesn't make much sense to use them.
any reason you are learning numpy specifically? I'm guessing you're looking at the data route, in which case I'd recommend going straight to Pandas. Yes, Pandas works on top of Numpy, however an in-depth understanding of Numpy is not necessary to use Pandas. Moreover, Numpy can be a little too abstract to apply to real world problems, whereas you can start working with Pandas almost instantly.
I would like to hear your opinions on Django, actually. I personally love the fuck out of it, but would be interested in why you opt for Flask over it.
That doesn't contradict what I said in the slightest - it's still demand-driven, as employers who dependent on certain toolsets look for people who can handle those toolsets. But again, the new questions thing is a poor metric for this as well - people who are learning Python and people who are building major libraries for Python are two quite different populations.
Does it matter? They are used for different things. Everyone knows python because it's a good language to start with and they teach it at schools now. I love python but I'm not going to use it for something that another language could do better just because it's popular. 
&gt; I don't understand this obsession with trying to track language popularity. i suspect it falls into two main categories. either they are new to programming and have no idea that the first language doesn't matter (unless you're some fucked up data point learning holy-c, brainfuck, or cobol) or on a get-paid mission
I'd be surprised if Python didn't gobble up all of Java's marketshare and maybe even some of C\#'s as well. Maybe even throw in PHP as well if Django becomes moderately ubiquitous. JS is going to stick around like a bad smell though. 
Have you tried looking at e.g. Nim or Julia ? They're very fast and expressive (Nim is kinda similar syntactically to Python too)
Transcrypt.org
Nope, not an "Astroturfer" though thanks for teaching me a new term. I haved used it a couple times when I was doing some new SBC projects. That said no, I agree it isn't an O'Reilly level guide. At anyrate guess that's what I get for one of my first replies to a thread. 
&gt; I dont understand the obsession people have with using their &gt;favorite language everywhere. Wouldn't you want to be able to speak your native language everywhere? 
"But we're like BLEEDING BLEEDING EDGE! More blood than edge really..."
You have to make sure every call is counted, correct? If you're not counting through a centralized function then every peripheral function needs to have a counter. What am I missing here?
Pfft. You kids are too young to get it. Back in the day, you chose a language - **a** language. One. You were loyal to it. You'd die for it. You'd pay a company a thousand dollars or more for a compiler or interpreter for it. Then you'd spend the rest of your life telling everyone else that that language was the best. You didn't learn anything else because if your language was already superior, what was the point of learning an inferior language? Now I see people here who have no loyalty to Python and it's depressing. They cheered moving Python to Git even though Mercurial is written in Python which means you're supposed to be loyal to it. They embrace Markdown even though ReST was created for Python so you're supposed to be loyal to it and push for its use everywhere and seek the death of all other markup scripts. I just don't get your generation. &gt;and have no idea that the first language doesn't matter Go talk to the Delphi people, who learned Turbo Pascal in the 1980s, moved to Delphi in the 1990s and now pay hundreds of dollars a year to use Pascal for the rest of their lives. They get that you choose one true language and wage a life and death battle with it with religious zeal. 
agreed. there's a build step for most javascript applications these days anyway, and the amount of actual javascript in something like a react component is pretty minimal, why shouldn't we want to write these as python classes?
Reading Kafka topic using kafka-python.. 
Programming languages are not "human" languages. Each one has specific uses.
We can perfectly well modify the code, including the way suggested. Still, this is not the case. Python offers us fantastic comprehensions. I see the problem more in the lack of elasticity of YAPF formatting than in using comprehensions itself. Especially that the comprehension code folds nicely as long as it exceeds provided column limit. I find it disturbing to write code only to please quirks of an external tool. It is also extremely hard to convince anyone on the team to use YAPF because of this single-line mutilation of their perfectly valid, reasonable and readable comprehensions. 
Nothing's so easy that people don't have questions. As the saying goes, "Show me an idiot-proof system and I'll show you a better idiot". And it's also impossible to run out of questions. 
&gt; In the end the right language for the job will hopefully be &gt;picked. In the end you remain fanatically loyal to your choice of language and change the task to fit the tool. :-) That's how it's always been. People invest their identity in their choice of tool and need affirmation they chose correctly. 
This graph just charts questions about those languages... which makes sense because Python is a good entry-level language, but it doesn't suggest anything about the languages relative popularities, or how many people actually use those languages in their daily jobs.
I disagree with your definition of desktop apps as server ones. Calling a library with GUI code is not the same as serving a client. My point is the Python is use for a large range of applications, so it can get very popular despite not being used in web browsers.
It’s my understanding that the purpose of a virtualenv is to be as replicable as possible: for each project you know exactly which packages are required, and you can be sure that your program’s behavior isn’t a result of [installing the python interpreter in some stupid way.](https://www.xkcd.com/1987/) you should be able to pick and choose what packages to load to each project just like pip, except without all of the vulnerabilities or chances for collision that might come with installing packages globally. What specific packages are you trying to install?Or what pip command did you use? Someone more familiar with PyCharm might be able to help you with how to reach those in particular.
Yep great example of a company wtih no fucking commercial idea about selling software. I used Delphi from 1995 to 2005 (Delphi 1 to BDS 2006) and in the early days even as a freelance dev I didnt mind paying £400 for the pro version which had just about everything you needed. If some DB wasn't supported then just buy 3rd party libs. Then in later years you are looking at £1100++ for anything remotely useful and given the rise of free tools why would anyone buy it? I even tried Lazarus which is actually pretty good.
If a directory has a setup.py in it you can usually use 'pip install .' to install and track it. There's a whole user/system level path thing to worry about too, hence the virtual environment.
Here is the code, hope it answers your question. class QuotesSpider(scrapy.Spider): name = "mac3" start_urls = [ 'https://www.lyricsmode.com/lyrics/m/mac_miller', ] def __init__(self, *args, **kwargs): self.file = open('macmiller.txt', 'a') super(QuotesSpider, self).__init__(*args, **kwargs) def parse(self, response): for href in response.css('.lm-link.lm-link--primary.ui-song-title::attr(href)').extract(): yield scrapy.Request(response.urljoin(href), callback=self.parse_song) next_page = response.css('.pagination .next::attr(href)').extract_first() if next_page is not None: next_page = response.urljoin(next_page) yield scrapy.Request(next_page, callback=self.parse) def parse_song(self, response): output = '' for stanza in response.css('#lyrics_text::text'): output += stanza.extract().strip() output += '\n' self.file.write(output)
Interesting, I did not know he recommended Go. I have never been terribly interested in Node as there are alternatives. I am currently using asyncio quite a bit, I would love to use Erlang, and I have used event driven TCL in the past.
This assumes that there's not a two way relationship between what languages are popular and what languages employers use for new projects, which I don't think is the case. I think that the availability of engineers to hire absolutely informs what languages or frameworks are used by employers, because hiring engineers is hard so using a cool but unpopular language is shooting yourself in the foot when it comes to hiring.
I'm not going to say that Node is the worst, but Node is the worst.
I definitely meant it as a joke, but now I have to take exception to a comparison of Delphi to FoxPro
Your mom get you a 'puter for Christmas?
Whatever you say bud.
Thanks. I am actually quite new to Object Oriented programming. For like how to write classes, methods and attributes. How do I learn these in the context of programs like yours. Sorry it is not related to the discussion. Thank you again.
just colonize looool
Nope that's a T420 with the 70++ extended battery 😉
No problem. You may also enjoy /r/ThinkPad
Here's a sneak peek of /r/thinkpad using the [top posts](https://np.reddit.com/r/thinkpad/top/?sort=top&amp;t=year) of the year! \#1: [thinkpad_irl](https://i.redd.it/1fmokrad4zj01.png) | [58 comments](https://np.reddit.com/r/thinkpad/comments/8279lc/thinkpad_irl/) \#2: [Are memes... legal?](https://i.imgur.com/HuJQuZf.jpg) | [61 comments](https://np.reddit.com/r/thinkpad/comments/8u9mzy/are_memes_legal/) \#3: [rip to the smartest thinkpad user](https://i.redd.it/ujxqxh7parl01.jpg) | [31 comments](https://np.reddit.com/r/thinkpad/comments/84erfj/rip_to_the_smartest_thinkpad_user/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
&gt;The only thing worse than premature ejaculation, is premature optimization. yeah good luck developing any low level rendering and building large scale numerical process libraries
Couldn't sticking with the convention that the comprehension works on `x` work? def ids_by_country(token: str, advertisers: List[Advertiser]) -&gt; List[int]: country = token[2:4] ids = [x.id for x in advertisers if x.country == country] return ids Coming from other languages, I feel like list comprehensions in Python are very lackluster compared to full-blown monads with a fluent interface, but when in Rome...
just read some of the code and it looks awesome also very topical. However, I'm a noob, do I need to be hosting a web app to get my tokens?
That wouldn't be premature optimization. 
What sort of model was used to create the future predictions and confidence intervals? Doesn't seem to be a simple linear extrapolation because you can still see some periodic trends in the predictions. 
What about a ways down the road when Web Assembly is very mature? Do you think JS will be the only language powering client-side apps?
1. It would work as well. 2. Yet, it doesn't solve the problem that YAPF applies nice formatting to comprehension only as long as they exceed column limit. 3. I think it is far more readable (and more pythonic!) to use `advertiser` instead of `x` variable. The future readers are doomed when your code is sprayed with `x` this, `y` that, `z` blyat. 4. Coming from Python to other languages I literally cry for comprehensions!
it really depends on how you learn concepts, OO Programming can be learnt from creating a simple game. Obviously tutorials can be helpful on Youtube however then you can get stuck in a tutorial cycle. If you do have money to spare though, I'd reccomend teamtreehouse. They go through concepts well and test your knowledge whilst learning
&gt; You may think that, but I make over six figures as the only FoxPro data scientist in the Midwest. brb learning FoxPro
I am really new to python, computer programming for that matter. Went through a lot of online courses and tutorials but still not able to find a learning path. So many terms jumping here and there and not knowing what most of them mean is making everything jumbled up and I am not learning anything. Following a book now- Python Handbook. 
Awesome app, well done!
Nice observation! Seems like c++ follows a similar annual trend
Plug your program into CNN. Presto! OK, off I go to cure cancer and bring about world peace!
Tracking the relevancy of skills allows laborers (this type of thing isn't just applicable to programmers) to test their existing skill-set against one they might acquire in the near future. This kind of information is *absolutely* necessary for highly-specialized workers, who may have to take time away from their work to acquire the skills required to remain relevant in the labor market. 
[PR finally merged](https://github.com/tensorflow/tensorflow/pull/21202) but apparently not on pypi yet. Supported if you build it yourself.
&gt; Im not gonna do front end web development with it or try to program microcontrollers with it. Why not?
Nice! Make sure you implement en passant and the rules about castling in check. Those always catch new coders. 
I'm implementing Edward's Curve point addition and mappings of arbitrary integers onto members of an elliptic curve cyclic group for a demonstration cryptosystem I'm writing. 
r/foundthemobileuser
I forgot about castling entirely or at least I hadn’t gotten to it yet, so thanks! Also, turns out pawns are the most complex pieces in the game. Who da thunk.
Yeah, I always catch people who haven't played that much chess by their responses to castling, en passant, and the promotion. Castling especially is redonkulous when it comes to check. 
Just learned Web Scraping so I'm writing a program that will scrape lyrics from Genius.com based on the user inputting an artist and their song. Pretty basic stuff but it's been pretty fun so far 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I think that already happened right?
Yes, client side wrappers/interfaces...the thing python does best. Shouldn't mean we use it for everything until a bottleneck is reached.
It is also missing a bunch of the operators and methds which seem to always come up such as `//`, `%`, `^`. If we wanted to have a good Data Science Cheat Sheet, then we should add some json dataloads to it, and scrap all of this other junk.
Nor should we just write C code, as the person I initially replied to claimed. We're in /r/Python, we know where to use it. Obviously we won't be writing client side javascript in python.
Bookmarked :D Thank you. You da real MVP
Any reason you are not using CrawlSpider? # -*- coding: utf-8 -*- import scrapy from scrapy.linkextractors import LinkExtractor from scrapy.spiders import CrawlSpider, Rule class LyricsmodeSpider(CrawlSpider): name = "lyricsmode" allowed_domains = ["lyricsmode.com"] start_urls = ["https://www.lyricsmode.com/lyrics/m/mac_miller/"] rules = ( Rule( LinkExtractor( restrict_xpaths=("//a[@class='lm-link lm-link--primary ui-song-title']") ), callback="parse_item", ), ) def parse_item(self, response): output = "" for stanza in response.css("#lyrics_text::text"): output += stanza.extract().strip() output += "\n" return {"lyric": output} &amp;#x200B; &amp;#x200B;
I know right, why dont we try to run virtual machines on 8 bit micro controllers? Sounds like a pretty good idea to me.
I want to make it really visual at the end. Like a little cyberpunk chess module with neat animations for different things. Half pipboy half blade runner photo thing half oscilloscope. It’s coming along
I would love to see the github for this.
Yes, it is a joke on left-pad.
Probably a kali sticker
Photo?
Its the new basic.
This graph tells me: There's a lot of people who's first language is Python. C++ was my first language. Python was my second. I work mostly with it given my field. I enjoy writing C++ more. &amp;#x200B; I think Python is very feature rich but can appreciate the representative control C++ gives you. &amp;#x200B; Pick a language you enjoy as a 1st/2nd. They all kinda do the same thing save for nuance operations.
&gt; In the startup space Python is still far less popular than Ruby. source?
Maybe it's the type of companies that I've looked at, but Python jobs seem less common as of late. I'm not talking about "startups" that are 5+ years old, I mean real startups. Established companies seem to use a fair amount of Python, but these places have also been some of the worst at communicating regarding jobs.
Totally anecdotal from my experience. I wish that it wasn't the case though that's for sure...
Working on a crypto currency trading platform and I need some help lol. Here is the link to the repo. It is currently blank, but I am looking for contributors [here](https://github.com/EpicAPPlications/Crypto-Trading-Platform).
I don't know why you think it's weird, but there's nothing weird to me. In fact overriding is one of the features of inheritance. The first class is an abstract class.
Must provide proof of working Arch or Gentoo installation 
Yes because JavaScript is a shit language
Built a script to text me wind reports for paddle boarding every morning at 6am. Uses twilio to send the text to my phone, and willy weather api for wind forecasts, which is a surprisingly well documented api. Now I just need to figure out how to upload it on AWS lambda as a scheduled event 🙈
Do you make address verification / mailing software? If so, I may have talked to you over the phone a few years ago. If not, then there are *TWO* people using FoxPro in the Midwest. 
Scale matters. I have no clue how valid his claim is, but if its true and Python just isn't the object oriented language that's going to carry us into the future scale wise then maybe GO is. Again, no experience, but I personally think scale matters and it's going to be increasingly important.
Writing a compiler for my own toy C-like programming language from scratch, in plain Python. I’ve written a grammar, a lexer and a parser, then stumbled upon a parser-library called Lark (also written in plain Python), now using this to do Lexington and parsing. Right now I’m reading the Dragon book and implementing intermediate language generation. Having some issues with generating code for functions, though. The next step should be memory allocation. And then I’ll quickly write an interpreter for the IL - and everything will be up and running!
Python had it's heyday about 5 years ago, it's not getting more popular than it already is
Sounds cool! What is this to a noob?
Not unless all the major browser developers build it into their browsers.
I know about micropython but it wont run on smaller microcontrollers. Thats why C exists. The more you improve micropython the less it is actually the classic CPython most people know of. 
If you already know how to code another C-style language you can pick up Python in an afternoon.
+1 market is saturated with liars and wannabes. If you don't have a github profile, you better have a bullet calling out what you actually built in python that makes sense. Don't even bother anymore listing 12 languages between commas. 
First of all, PyCharm is basically doing a "pip install" for you. PyCharm itself basically has no bearing on where things get installed, it is your configured python interpreter that does this. So, lets set aside PyCharm because it has no bearing on how packages work. In the most basic scenario, you have one version of Python on your system. When you `pip install selenium`, Python installs the selenium package. Where it gets installed mostly isn't useful information and will vary depending on your system configuration. Python installs it in a location it knows to look for it at so that when you `from selenium import webdriver`, Python knows where to go looking for the appropriate files. Packages you find on github *should* be set up in such a way that you can do `pip install git+git://github.com/somedude/somepackage.git#egg=somepackage` and then you can do `import somepackage`. If the package developer hasn't actually made a package, then you just have to download the code and put it somewhere in your own project. However! You likely shouldn't do any of the above directly. The problem is that you end up installing a bajillion different packages into your python interpreter and you end up getting version conflicts and the like. What you *should* do is that when you start a new project, you create a virtual environment for that specific project. When we say "virtual environment" this doesn't have anything to do with virtual machines or docker or anything else you might have heard of that sounds similar. What a virtual environment boils down to is your Python installation gets copied to a new directory in a pristine state without any extra libraries and packages installed. Then you "activate" that environment which means that your system gets told to look at the new location when you run python programs. Since pip is a python program, once you've activated the virtual environment, packages you install with pip get installed into this new environment and don't clutter up your main system python. In PyCharm, you can select (and create) the virtualenv to use via the `Project Interpreter` settings dialog. Hope this helps!
According to the recent Stack Overflow survey, devs who use F#, OCaml and Clojure are more highly paid on average. Python doesn't even crack the top ten. 
There’s a very regular pattern in both java and C++. Looks like both become a little more popular twice every year. My guess is university courses. 
I think you can use the locale settings in faker to generate text with non-ASCII characters, is this what you mean? 
Did you try to run pip in the pycharm console ? Try to, and double check that you are in the right environment with some 'python -V'
Tf is up with Java’s trend. Why does it have such a repeating pattern?
Indeed, the two languages are used for different purposes. You won't find a lot of client-side web apps using python (mostly because browsers can't run anything other than JavaScript) and Node tends to be used more than Python for a back end. And you won't find a lot of data scientists turning to JavaScript for their work. There's some overlap between the languages, but not where they're popularly used.
Ok? Thanks for bringing it up.
Well, if it diverges from Python, then you are not improving it.
I'm almost done wrapping the script in a simple ui, so I'll probably post it at that point so people can check it out/offer advice.
SJW is going to kill open source. 
Almost as bad as us Gentoo users back in the day.
I think there are enough learning resources that are free and online. I would use that money to meet other Devs and network, not sure what events would be best for that just my 2 cents
If you have used Django before and looking for a learning experience use a completely different language. How about Golang?
Lol.
No shit. Linus doing a 180 and all of sudden being in touch with his emotional side? Guido basically not giving a rats ass about merit and sucking down this SJW bullshit? Technology and science doesn’t give a shit. He quotes that “diversity” makes for better decisions. Well want to know what else makes good decisions? People that know what the fuck they are talking about and not just someone in the board to meet a quota. See how many of these fuckers want to line up and have some major surgery done by “a diversity hire” vs a dr that is world class. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
That message is a couple of weeks old. Here's a newer one: [https://www.mail-archive.com/python-committers@python.org/msg06214.html](https://www.mail-archive.com/python-committers@python.org/msg06214.html). &amp;#x200B; &gt;Board members must be Python core developers. It is important that the members of the board reflect the diversity of Python' users and contributors. A small step to ensure that is to enforce that two members cannot work for the same company (or subsidiaries of the same company). &amp;#x200B;
Please don't post beginner tutorials
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
If you're a core dev go ahead and make your case on the mailing list. If you're not your opinion on how python operates is irrelevant. Contribute if you want to have input.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Funnily enough I just ordered the same pack. 
Nice job. There is a kaggle competition on almost this exact topic going on right now. You should participate!
a professional c++ programmer here &amp;#x200B; In my office, I need to download hundreds of mega bytes of compressed trace files from Jira. It's a boring and time killing job. Finally decided to automate the download, uncompress, filter and clean up of the log files. By Monday, I will finish this(employer is a bodyshop :( ).
Ok.
They are taught in colleges and universities. thus you find a semester trend, 
If all you need is a server that responds to requests with JSON/XML/whatever resources, you might want to check out [hug](http://www.hug.rest/).
If it does then your mom has two 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
why no do a='00:00:00:00,000' a[:8]+a[11:]
Ah. Yup, that makes sense. Should have thought of that one. Thanks!
This seems like it is a great use for backreferences, but I think it could be even simpler. I'm not as sharp on my Python regex syntax, but the idea would be to have something like \`\`\`s/:\\d\\d,/,/\`\`\` A totally different approach would be to just find the appropriate date formats and covert between them, which would be a lot less messier but might take a bit longer to figure out.
Because people forget that in the end these are just tools. Next time you read a 'language popularity' article swap out the languages with shop tools. "Could the Hammer's Popularity Outperform a Screwdriver in the Next Five Years"? And just like actual tools, no language ever actually dies. There are still blacksmiths that make things for ornamental or niche reasons. The percentage of the world's population that is a blacksmith has changed. The NCC 1701-D absolutely FORTRAN compiler running the base math. Just like numpy is just fancy handwaving over FORTRAN BLAS now.
Unless I misunderstand your answer, the problem is that the stamps have actual numbers in them and are in very specific places in the file, for example 12:34:56:78,123
I never understood the appeal waiting for freaking glibc to rebuild itself all the time. At least Gentoo portage tries to delineate extra software from the core that you need to boot and login with.
I think we all did, for just $1 it is a steal! Mine is late for like 2 weeks... :/
r/funrollloops
values are irrelevant if on all of them you want to do removing of forth pair of digits there is no reason to not use list comprehension &gt;&gt;&gt; a='12:34:56:78,123' &gt;&gt;&gt; a[:8]+a[11:] '12:34:56,123' 
I fucking hope so.
Again, maybe I am misunderstanding, but there are literally hundreds of stamps mixed in with text. How would I implement your solution. Sorry if I am dense, but assigning finding each instance and 'a' to each instance in this way seems more difficult. But I am obviously a noob at this so ELI5 please.
Idk Arch isn't like that. You just install packages like any other distro 
Do you mean iPython, the normal interpreter, Jupyter notebooks, or some IDE?
i presume that all time stamps are at the beginning of each line an not in the middle of the sentence. Something like this: &gt;00:00:00:00,000 bla bla bla... &gt;00:00:42:00,000 bla bla bla bla bla bla bla bla bla bla bla bla &gt;bla bla bla bla bla bla bla bla. bla bla bla blabla bla bla bla bla bla bla blabla bla bla bla &gt;00:01:21:00,000 bla bla bla bla... &gt;bla bla bla bla... &gt;00:05:75:00,000 bla bla bla... so you can do something like: for line in text: if line.find(':') == 2:#first occurrence of ':' at index 2 line = line[:8]+line[11:]#slice the line newText.append(line)#store whether it is modified or not
I solved it, for anyone who has the same question the following regex worked perfectly: re.sub(r'(\d\d:\d\d:\d\d)(:\d\d)(,\d\d)'), r'\1\3', text) Thanks u/Stallman85 and u/chzaplx for the help!
very useful. Thanks
I'm working on a assets control tool, which will run a PY script on windows machines and send the data collected to a web interface. :)
I think you have three digits after last comma. \d\d\d
I mean he is getting down to supply and demand. Low demand, even lower supply will fetch a good price, high supply but even higher demand will also fetch a good price. My first job out of college I took a stats degree and went to marketing where they were dying for people with that skill. Plenty of people are willing to learn the tools, but not many of them go into marketing. 
Seeing as Python can do ANYTHING js can and is not a GIANT GIIIIIIIIIIIIIIIIIIIIIIANT exploit. Yes.
Wrong website I think you meant to go to kickstarter
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I couldn't agree more 
This blows my mind! Enjoy!
Feel free to ignore this diagram. I don’t know how they decide what to connect and what not to connect but a lack of connection here doesn’t mean the technologies are disconnected or exclusive to each other. It doesn’t even have a connection between PostgreSQL and SQL.
Dunno about this guy, but I have free ones from confrences
.
Please read the sidebar and post this in /r/learnpython 
You can update your code to support python 3, but that doesn't mean you have to drop python 2 support. Numpy downloads for 3.x just passed 2.x. I added full support for python 3 in 2015. I still support python 2.7. If you have cool new features for me to use, I'd love to have an excuse. F-strings are nice, but not necessary. Improved dictionaries get me 30% speedup, but they still work in 2.7. Async does't matter for my problems. Mypy works in python 2.7. I can't come up with a good argument other than waiting out the clock for dependencies to add a killer feature.
It's a type of public key cryptosystem. This means that instead of having the same "key" for encryption and decryption, you have a public key (used for encryption) and a private key (used for decryption). Neither of these keys can be used in place of the other, meaning you can safely distribute your public key to everyone you want to send messages to you, and keep your private key super secret, and no one can read messages sent back and forth. My system combines a bunch of other features that allow you do do, for example, signatures, allowing you to verify both that the contents of a message are unchanged in transit and that the sender is who they say they are.
*Ove*r six figures? Like, how many figures exactly?
I needed something like this, thank you.
Obviously feel free to offer suggestions/criticisms. I’m going to add updates as time goes on. Site will always be very simple but it’s definitely in its baby stages right now. 
Sorry
*Sixty*. *Sixty* figures. Yep, I get a cool 60 dollars a year. I'm rich, boy. 
While these languages are used for different purposes, I think it says something about what people want to DO with their computer science training. Maybe less people want to do server stuff than in the past. Maybe it's more fun to program in Python and some people want to have fun while they code. Or, maybe it means nothing at all. It's still good data to gather regardless of what it does or doesn't mean.
First the master/slave connections, now white men, what will be the next politically incorrect thing to fix?
Pretty cool. Are you hosting this yourself or are you paying for a hosting service? I have always wondered how people with these sort of webpages go about it. 
Thanks. I will look it up. Ive been looking get into web development but the idea of coding a webpage just to see it when a server is running on my computer was not pretty. 
No problem! If you’re using Django or Flask it’s trivially easy to get set up. It’s basically the same as pushing code to GitHub, but instead of “Git push origin master”, you “git push Heroku master” once you’ve set up your login credentials 
I personally find it interesting to track language popularity. It’s nice to have a forecast of where some things are going. And if you have ecosystems you work with, then you can use that knowledge to get some meaningful info. Javascript is kind of its own thing, given web browsers and electron, so at this point it’s important in that respect. The high popularity for front end work makes it more appealing to stacks that want a more unified codebase, which wouldn’t be as likely without demographic popularity. Python ties in tightly with C/ C++, so it tends to flourish in OSS environments like Linux, which in turn makes it useful for back end and back end administration technologies. As a side effect of its popularity in those areas, it’s doing the opposite of what JS is doing and snaking its way into GUI work, largely through existing libraries like Qt. It’s also remaining common in academia, since with libraries like scipy it can get C++-like performance but in a more accessible package. Java stays popular because it’s fairly fast and portable, and there’s plenty of code bases that need to be maintained. It also drives tech like ELK, Jenkins, and Android apps, which keeps it relevant. I think a lot of people want assurances that they don’t have to learn a new language though. Say what you will about a good developer being able to work in whatever language they need to, it’s a huge pain to migrate over to something you’re unfamiliar with, and that pain carries over to software quality and maintainability. 
Terrible. Someone wanted to learn graph databases. 
I’m using elastic beanstalks python environment which I believe uses Apache behind the scenes to do the actual deploy. EB is sooooo much easier to use than doing it manually with Apache or whatever else, speaking from experience with both. 
&gt; See how many of these fuckers want to line up and have some major surgery done by “a diversity hire” vs a dr that is world class. Just a couple months ago it was revealed that [Tokyo Medical University had been altering the entrance exam scores of applicants in order to keep women from being admitted to the school](https://www.theguardian.com/world/2018/aug/02/tokyo-medical-school-changed-test-scores-to-keep-women-out). Do you want your surgery done by the qualified woman, or by the unqualified dude who needed the system rigged in order to even get into the university?
Opinions of the community in which the governing body makes decisions on the item the community values are always important. To be perfectly honest, I don't care who's on the board, whether it be a cis white male or a genderfluid african-hispanic-nativeamerican-asian-eskimo transgender furry who's fursona is an apache attack helicopter-- I just want them to all be competent and experienced.
`import lööpRequestör as give`
Thank you
In the graveyard with Ruby
When did I say it had to be either sex doing the operation? That's the whole point. Hire the best person for the job. Putting a requirement on it saying "must include a woman" immediately rules out half the population that *might* be more qualified for the job. If the guys in your article were scoring worse, they shouldn't be taken in over a woman, but you also have to give the same courtesy to a guy, and not throw "well we need more women, so force it to be that way". Reverse the statement to some other race, "governance model should "not have all black women". If it sounds racist/sexist, its true for anyone in the statement. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I dunno how accurate it is but Stackshare.io lists Python as most in-demand language by # of jobs posted as well. 
Celeron. Also, dat window unity air conditioner doe...
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
As far as I know, you don't. Twitter asks you for a website of your app but you can put whatever you want there. Disclaimer: I haven't used their API in roughly 2 years so things might have changed.
&gt;Board members must be Python core developers. &amp;#x200B;
I changed it since the third digit wasn’t necessary 
Looks pretty good! I was thinking about having something like this run on the new server I'm playing around with. I'm using Ubuntu and CentOS, so I may submit a PR for linux support.
So I happened to finish the basic UI I was wrapping my script in tonight. Feel free to take a look though the code's organization is probably needlessly obtuse, UI ain't a cake walk apparently. https://bitbucket.org/Azhain/piegoo
Thanks! That would rock; I'd really appreciate it. As I said before, the only changes I can think of that are needed to add support are conditionally changing the subprocess arguments and regexes, which should both be quick. I just ran out of time.
You can tell how much of the Java and C++ question views are driven by classes. There's that two-humped camel every year that line up with semester terms. It's not nothing, but it's not nearly enough to account for the trend line. If I were going to sit here and guess, I'd say that you're more likely seeing a mix of the decline of PHP and Ruby as web backends and the rise of data science as a mainstream corporate position with Python as a core competency.
&gt; That's the whole point. Hire the best person for the job. And the current system we have in place, in most industries, has been demonstrated to be utterly, completely failing at that goal in almost every way. Why not try something else? Or put it another way: half the population of the planet are women. Odds are, a lot of 'em are gonna be smart and skilled and good at doing things, but the system we have now is designed, in large part, to prevent ever giving them a chance to demonstrate it. If the system's already clearly and undeniably bent in one direction, why not try bending it back toward fairness? Now, think about how you'd accomplish that. Hint: sooner or later you will have to actively attempt to find some of those smart, skilled people who were being excluded, and make opportunities for them, because at this point they are not going to magically appear the moment you say "all bias is immediately ended and everything is perfectly fair, starting now". In fact, they're almost certainly not going to believe you when you say that, because they've heard that line before. Anyway. I know you're never ever going to actually think about this, let alone act on any of it, because you've got a GET WOKE GO BROKE chant to go lead, and soundbites to uncritically regurgitate.
Python WASM *will* happen. Just wait...
Or just stop using pipenv if they can't be bothered to follow the API that they are wrapping. 
....virtualenv didn't break
There's more going on with OCaml than you seem to think. It does help to have domain-specific knowledge, though, I suppose.
half the population of the planet are men. Odds are, a lot of 'em are gonna be smart and skilled and good at doing things for the nursing field, but the system we have now is designed, in large part, to prevent ever giving them a chance to demonstrate it due to stigma of male nurses. If the system's already clearly and undeniably bent in one direction, why not try bending it back toward fairness? Anyway. I know you're never ever going to actually think about this, let alone act on any of it, because you are in a SJW echo chamber where feelings trump logic and common sense. Like who’s got time for that?
It's called asyncio and it sucks ;)
&gt; If the system's already clearly and undeniably bent in one direction, why not try bending it back toward fairness? This is why there are literally zero male programmers, zero male doctors, zero male lawyers, zero male corporate executives and zero men in high political offices worldwide. Oh wait. The majority of high-power/high-prestige/high-pay positions are in fact occupied by men, and we keep finding evidence that the system's rigged to put them in those positions and keep women out. Same thing with racial or ethnic divides in many places. You keep on lobsterin' there, bro.
You want evidence? You want a “rigged system”? Men are 97% of combat fatalities. Men pay 97% of Alimony Men make 94% of work suicides. Men make up 93% of work fatalities. Men lose custody in 84% of divorces. 80% of all suicides are men. 77% of homicide victims are men. 89% of men will be the victim of at least one violent crime. Men are over twice as victimised by strangers as women. Men are 165% more likely to be convicted than women. Men get 63% longer sentences than women for the same crime. Court bias against men is at least 6 times bigger than racial bias. Males are discriminated against in school and University. Boys face vastly more corporal punishment than girls. 60-80% of the homeless are men. Women's Cancers receive 15 times more funding than men's At least 10% of fathers are victims of paternity fraud. About time for women and minorities to catch up! I think it’s about high time for this imbalance to be rectified. 
Looks like a lazy translation job. H.copy() what? `__setitem__` what?
So you make `[1000000, ∞)`...? Damn son. Gimme some of that.
Their position is they want to use their freedom to act in order to build the community they want, and if you disagree, use your freedom to build the community *you* want. Your position is that their freedom should be restricted and they shouldn't be allowed to act in ways you disapprove of, and the community they want shouldn't be allowed to exist. You're the anti-freedom position here. Why do you hate freedom?
Do you notice how I'm not actively trying to prevent you doing something about those things, if you see them as problems? Why are you actively trying to stop others from solving the problems they prioritize? Based on your other comments, it's clear you hate freedom.
I got a lot from conference but haven't stick any of them on my laptop. Not until I secure a job lol
Python will continue to be popular and so will javascript
I'm still on the fence about whether laptop stickers are cool or lame but whatever I have a Python one and a Linux Mint one.
I learn Python before C and C only make sense to me because of Python. For my first few C assignments, I scrambled it in Python before properly write it in C. I know I'm going to touch other languages after this but I can forsee myself going back to Python. Probably because it's my first language. 