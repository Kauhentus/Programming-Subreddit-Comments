*I need to send in my coursework by tomorrow, haven't started yet* 
Hey man great tips . They all make sense and I will implement them (except for the validate_text and validate_input, they were designed to be boolean and check that all text used in the game conformed with some simple standards). Thanks for your help and time. I really hope you manage to help further :)
I don't think anyone in the sub would do your homework for you. If you need help with the problem people would be able to guide you.
Lmao .. That's super cool.. Now I'm actually going to build something haha
Temperature logging inside and outside, readings transitted to a server using mqtt over wifi. Also logging the mains current in my house by reading a blinking led on the intake box. Not particularly fancy, but useful.
Yeah, I've had to revert to the older version to clear this up. The problem seems to be I'm using PyQt5, and for some reason the new PyCharm version refuses to see I have it installed. So whenever I try to write a class that uses PyQt, it doesn't recognize anything after it...like the code completion breaks. I left a message on JetBrains board, so hopefully they'll see it. btw - why do people downvote this? If there's a better place for this question, say so. But it seems downvoting this so it doesn't get seen is kinda dickish. I really could use some help and was hoping someone else had this issue and could offer advice. 
In your code: def functionA(variableA): return variableA def functionB(variableB): return variableB Now in your terminal, IDLE or even in the code you just wrote: &gt;&gt;&gt; functionA(1) 1 &gt;&gt;&gt; functionB(2) 2 &gt;&gt;&gt; functionA(functionB(2)) 2 &gt;&gt;&gt; functionB(functionA(1)) 1 
You need to call the function inside the other one, if this what you wanted.
Sure. You can also assign the returned value from a function to a new variable. def returnFour(): return 4 def doubleValue(a): return a * 2 variableA = returnFour() variableB = doubleValue(variableA) Following this code, variableA will equals 4, and variableB will equals 8.
My TriviaBox game http://www.sandymakes.org/2014/01/triviabox.html?m=1
is there is a def before functionA() and functionB(), if there is can you paste the code here?
Where are you calling the function?
I don't understand the question. I still see Qt documentation at that address. @jonnydestructo: If you click on ["Qt Reference Documentation"](https://doc.qt.io/qt-5/reference-overview.html), it appears to be exactly the same data you linked (with slightly different CSS styles) What are you not finding anymore? Python-specific docs? ?
This covers only the fundamentals. So the fundamentals are still up to to date.
Please visit /r/learnpython for this type of thing ... 
I made a script to [update my dns name](https://github.com/boarpig/dyfi.py). Now that is nothing new and of little use to most as it uses dns service accessible only to finnish people. What I did in addition was write a telegram bot that sends me daily server status updates such as current ip address, when the last backup was taken and what its size is (time and size let me be quite certain that everything is okay and backup was success). IP address lets me connect even if the dns has failed. Edit. My telegram bot is not open source right now but it's really short bot using python-telegram-bot wrapper
I work for a company that builds passage system using python and raspberry pi. so yeaa... you could do a lot of things with these two things. 
If you're a gamer, you can automate games. It's an interesting introduction to low-level concepts like program memory and assembly language too. Can require quite a bit of learning. Best stick with 2d games.
This is great advice. If you use social media a lot (or a little, even) you may find yourself posting a lot of the same stuff. For example, I realized I tweeted *a lot* of pictures from certain subreddits. So I made a [twitter bot](https://github.com/joaquinlpereyra/twitterImgBot) designed to tweet pictures from a folder, and I used it in combination with other tools to automate that part of my social life media. It was fun, useful for me and I learnt **a lot**
I have done it with the TEMPer devices, there is also a python application that you can utilise called [temper-python](https://github.com/padelt/temper-python).
I'm curious about this too. I'll have to process an extremely large amount of old CSV files and continue with daily feeds. Anything that can compress and speed up the process would be of big help.
I built a beer keg volume tracking system with web GUI. It ran OK in a Pi model 2B, but I recently upgraded to a Zotac running Ubuntu. It's called Discofridge and the source and some instructions are in [Github](http://www.Github.com/kencodes). There are two repos called reducedKegbot and reducedKegbotWeb. [Here's a screenshot of the web interface](http://imgur.com/V9BgrSB) Edit: clarification E2: Adding web interface screenshot
If you're using debian/Ubuntu you don't need python-pip installed. Just python3-venv or python-virtualenv. NEVER EVER sudo pip
If you ask the pragmatic me, no, because it's uncommon, and not a big of a deal. if you ask the strict me, yes, because it's just not right. 
/r/learnpython or maybe /r/homeworkquestions
Thinking about using it as a web server but i am not sure yet.
Me gustan las tortugas.
Wait... you're using wifi strength from multiple nodes to guess where people are and might be blocking signals? Do each of them host an access point to do that, or are they looking for people with mobile devices connected to some sort of wifi? Does it use signal strength or do they capture frames people are sending and if device X sees 20 frames from person and device Y sees 50, does it use that to infer that person Y is closer? Then you triangulate? That's an awesome project. I'd love to see example images, an open source repo or blog on how you did it.
&gt; passage system using python and raspberry pi *shudder*
Hey I don't have *any* experience writing apps in Kivy, but I've worked on various projects that use Cordova (ionic, phonegap), and messed around with react-native. And ermergerd, I highly recommend using react-native. It's incredibly powerful, easy to write/prototype/maintain, and javascript. But that's just my opinion...
Thanks, but I have the entire rest of the program already written, just need to get BLE working. I found a bunch of examples of how to do this for Android, but no working examples so far on iOS.
Why are you teaching Python 2 instead of 3? Not calling you out; simply curious. In my intro CS class at my college we were taught on 3.3 then Java 8 for the intermediate level. Loved having the Python 3.3 foundation when learning Java.
If you want your functions to return booleans, you still don't need the if statement, `bool()` will work just as well and is way prettier IMO. It looks like you didn't deal with choice_dict correctly in the level_up methods so I doubt it even works now. I don't think I was very clear earlier, but you can't actually just copy paste, you need to do something about the variable choice_dict. I think you should make a method that creates such dicts and use that. You really should replace all your `except:`s with `except something:`. At some point you will run into some weird problem that doesn't make any sense until you realize that your `except:` statements are eating up all the errors and inside your try you are calling a function that is calling a function that is trying to get an attribute that you spelled wrong or something like that. Or maybe when you use \^C to close the program you will get a message like "Invalid number" or some other weird behavior instead because \^C raises a KeyboardInterrupt error. Specifying your excepts is probably one of the simplest suggestions I've made, just do it! Looking at Fallout_Shelter.py, I think `Game` does way too much. The fact that `Game` directly deals with stuff like checking to see if people are starving to death seems like a problem. I would suggest trying to separate stuff like that from your Game class as much as possible. I see many times when you use randint to choose an option. The `random` module gives you the function `choice` for this purpose exactly. For example, `items_available[randint(0, len(items_available) - 1)]` can be replaced with `random.choice(items_available)`. `get_gender` combines this suggestion with my suggestion of getting rid of superfluous if statements. All you need is `return random.choice("mf")`. `happiness_loss` changes a global variable. To me it would make sense to make `Shelter` a class that has a happiness property and a `happiness_loss` method. This has some advantages such as if you wanted to restart the game, all you would need to do would be to make a new `Shelter` instance, you wouldn't have to reset your global variables. You could even make it so that you can have multiple shelters or something. You do a lot of string concatenation. str.format is often much easier to read.
I was somewhat surprised that this could work in Python, but some of the material is very cool. Eg the section on streams
/r/learnpython
seriously /r/learnpython
&gt;the function's code object is writable The attribute is writable, but code objects themselves are immutable.
I have that on a pi in my different projects at work, installing racks of equipment. Then use it to send results to a webserver, built an API with Django and restless. Works very well. I have to adjust the temp output sometimes, but a cost effective solution. 
That's cool as fuck
Yeah, root pip goes missing once you do the upgrade - `which pip`, `sudo which pip` fails. 
wow, you got -3 downvoted. Why?
Ahh yes, thank you. Was falling asleep right around when I typed that out.
Does pyInstaller even work with Anaconda? I know it didn't not that long ago. Also what's your setuptools version (make it 19.2!)? Did you make a hello world test script?
Using [pebblebee](https://pebblebee.com/) + raspberry pi to create a tiny universal remote for all of the LIFX lights throughout the house. GPS means I can pull it out of my pocket to turn off different lights for different rooms depending on where I'm currently standing. Long press cycles through a set of colors.
Amazon linux is breaking a lot of things I've found Shit that just works on other distros doesn't work on it Also that's a thoroughly non-descriptive error you've given, no-one could help even if they wanted to. "craps its pants" yeah we'll just look that up from pip's list of known error messages
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
The article that made it clear to me is that one: https://www.stephanboyer.com/post/9/monads-part-1-a-design-pattern
I've had more luck with cx_freeze
I built a similar device to manage the temperature and humidity of a fridge I'm using as a cheese cave. 
[AT&amp;T called](http://trillian.mit.edu/~jc/humor/ATT_Copyright_true.html). They have some copyright concerns.
Assuming all your distribution packages don't use the global Python as well...
Nice. What module did you use to implement TOTP?
Raspberry Pi + temperature sensor + camera + other sensor + flask or django + javascript = online home monitoring system that you can check while at work or school Just remember to add some authentication, or only serve to localhost and use ssh port forwarding
Is there any hardware that us truly free? I was under the impression it was super slim pickings there.
Typing `python3` instead of `python` would usually work nowadays.
A release and a test are two completely different use cases. Let's not confuse them.
I've used PyInstaller with Anaconda (Python 2) for at least two years now, but it did (still does) require a lot of hook files to get things working.
I've been working through [this](http://zetcode.com/gui/pyqt5/) one, which has been very helpful, if not very in-depth. It's a great start though, and at the end they give you a full Tetris game, which helps tie everything together.
You can append two strings with +. Start there. 
yeah I had it happen twice on me before where pip just threw an error when I tried to update it, I just used easy_install to install the latest version of pip.
there's a pretty cool codebase for ultimaker's [3d printing](https://ultimaker.com/en/products/cura-software) slicing software, [cura](https://github.com/Ultimaker/Cura). its built on top of [uranium](https://github.com/Ultimaker/Uranium). This is one of the larger pyqt5 + QML codebases. writing quite a bit of PyQt5 + QML right now and having a blast, recommended...
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Do your own homework
/r/machinelearning
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Sorry, I should have been more specific. I need it for Python for Everyone by Cay S. Horstmann and Rance D. Necaise.
Don't be so hard on yourself, learning to program is quite hard.
I took the class (CS61A at Berkeley) that is based on this book. We were taught Scheme in the last few weeks of the class.
I don't know much about this issue TBH, but couldn't the reason be that the firmware might include code from Broadcom under a license? If not, what kind of shady things could they be hiding in these bootloaders? Sounds interesting
It's actually quite useful to do `+` on booleans, it lets you quickly count the number of True values. Using `*` can also be useful: `x * b` is equivalent to `(x if b else 0)` with numbers. Bitwise `|` and `&amp;` just do what you'd expect (which is why they're overriden). Bitwise `~` is nonsensical however.
It doesn't include globals, nonlocals (nested functions), or builtins. It can also be a lot more efficient, since the compiler knows it's a format string and can do pre-processing - using indexes into the C locals and cell-vars (non-locals) array, raising errors during compilation of malformed strings, and avoiding parsing the format command multiple times.
Possibly, but in that case they could at least provide documentation necessary for the community to re-implement a trustworthy bootloader. Instead, they've publicly said that not only is the documentation secret, but that legacy manufacturing hardware bugs have been patched over in their software layer and are also secret. In other words, even if you somehow got a *circuit diagram* of the RaspPi SOC and a spec-sheet, it would do no good because the SOCs as manufactured have undocumented flaws that require patches developed in-house over person-years of work. Basically they've made it clear that the RaspPi is closed, and will always be. Maybe you can boot the CPU only and I gather efforts are underway, but the GPU...forget it. Rather than cry over spilled milk, the answer is trivial: buy a CHIP instead! They're cheaper and overall awesomer. I'm planning to use one for the above project when I can buy a few more CHIPs, the one I have right now is destined to be a PirateBox instead... :)
I started with this, and need to go back and redo many of it. It's a great place to start learning. Surprisingly, I've found it difficult to learn PyQt5. It's hard to find anything with it compiled (WinPython has it). And almost everything online has it for PyQt4 which has some very different syntax from 5. 
thought the same! I was mind blown knowing you could track people with wifi signals. Still amazing job :D
Doesn't DRF do that by default ? Can someone explain the added value ?
Thanks cadamis! I'll take a look at this.
This is totally what I'm looking for, thanks jellef!
qutebrowser is a really cool project! Super impressive. I knew of Calibre but didn't realize it was PyQt5, that's great to know.
Web dev here. The only reason we build web apps is because they are portable across a very large number of devices and environments. Web apps suck, they are hard to get right, and they are difficult to modify. If portability isn't an issue, then I strongly recommend using something like Qt.
why not grab [pyqt5 with conda](https://anaconda.org/dsdale24/pyqt5) is installation is halting progress?
HTML+JS are horrible, horrible languages.
There are libraries that allows to build webapps drastically reducing the use of JS+HTML almost to zero. I built one of them (remi https://github.com/dddomodossola/remi) but there are different libraries like this: https://github.com/zoofIO/flexx http://www.reahl.org/docs/3.1/tutorial/index.d.html So, in this way you can use webinterfaces like a standard gui libary. I'm working on a visual editor also https://github.com/dddomodossola/remi/tree/master/editor
PyQt with QML/QSceneGraph or Kivy should be able to do it. You will have to implement most of the object movement manually though.
There's a million little things that are hard to do in a web app, which will annoy your users if they're missing or not quite right. (Copy/paste, drag-n-drop, service integration, window management, etc.) Of course, Qt isn't "native", either. I avoid Qt apps because they get a lot of the little things wrong, too.
And again, it should not be like that. 0 and 1 comes from C not having booleans, so someone did #define TRUE 1 and #define FALSE 0 and it stuck. But it's wrong, plain and simple. It was wrong even in C. 
&gt; It's actually quite useful to do + on booleans, it lets you quickly count the number of True values. It's a hack. This is the correct way &gt;&gt;&gt; [True, False, False, True, False, False, True].count(True) 3 &gt; Using * can also be useful: x * b is equivalent to (x if b else 0) argh! 
I'm now at level 13 and just wanted to check how many levels there are... ACT I: Levels 0-9 * Player is introduced to "Guido" (actually Evil Guido in disguise) - Evil Guido is a shitty actor; he sounds like Ming the Merciless as portrayed by William Shatner. This is MUTINY!!! Love it.
Looks like a lot of boilerplate compared to (lib I am coauthor of) tri.query/tri.table. 
This may have been an editing oversight, but you have: from Tkinter import * import Tkinter as tk You should get rid of the first one and just use the 2nd form.
You're right. I guess I was trying to say that you can't create a new function from an existing function quite as easily in Python as you can in Lisp.
https://youtu.be/g49UECaIDOs This 10 minute introduction walks you through the basics and covers 90% of what you typically use. Another improvement for your approach would be to use the logging library from stdlib instead of print statements. 
Cool, I poked around the documentation and didn't see this. This still requires making ~78k requests to get all the metadata, but it's still better than mirroring 120gig ;) I am still just hoping someone happened to have a mirror lying around and was willing to extract LICENSE.txt and setup.py with a script or something. Otherwise, yah, maybe hammer PyPI :O 
And pdb has a python scripting interface. Pyception. 
I setup a Raspberrypi as an MQTT broker and using the [owntracks](http://owntracks.org/) app for android it sends my location which in turn flips on and off some leds. It was a present for my mom since we live in different states with different time zones. It alerts her when I'm at work or school or home by lighting up the icon that represents that location. The idea was it would be easier for her to know when I'm available to talk and what I was doing. Sorry for the bad quality pic but to give you an idea http://imgur.com/yCbwx1y icon is a graduation cap for school and battery level
A friend and I did some testing with weight sensors and found them to be hugely variable and not viable for our project. You know how when you go to use a kitchen or bathroom scale, you have to give it a few seconds to zero out right after turning it on? Well the voltage (resistance) value of the weight sensor depends greatly on temperature and who knows what else. The values can vary by hundreds of percent from power cycle to power cycle. If you have the weight sensors in your keg fridge, the temperature fluctuation will cause the weight readings to vary so much you won't be able to get a meaningful volume value. If you find a way to overcome this, please let me know! :) The flow sensors are very accurate, on the order of a hundredth of an ounce. The drawback is that they cost around $70/each. If you want to stack up the flow meters with solenoid valves (for access control to your beverage), cost can really get out of hand. I was lucky because my company was paying for parts, so I just had to select the best solution and not worry too much about cost. I used Swiss Flow SF800 flowmeters. I have seen other flow meters that are cheaper, but I don't know how well they work and I don't know how much foaming they cause. I hope this helps.
Yes on Qt.
There's a link in the sidebar of every subreddit to message the mods; that will go directly to them, rather than posts that they may never see.
If you avoid Qt apps because they are not native enough, then what do you actually run on your computer? What is a native app these days? Does anyone even know that the native toolkit or look and feel is for their OS of choice these days?
Thank you. I'm not at my workstation, but I will try this. What you describe is what is happening. Essentially, every line triggers an error. If I can get past one, the next one errors out, and so on. Thank you. I'll give this a shot on a few hours. 
clearly java's swing is the best choice. /s
I am grateful for the parent comment. Was very confused when I clicked through
Has this been cross-posted /r/pystats?
pdb is more useful than nothing, but I had an unexpected experience with it when I tried to debug the script with non-english comments on the Windows machine. pdb failed on the first comment, trying to display the source code and I was rather deep in it already... Anyway, if you prefer GUI debuggers than I suggest using the PyCharm.
It has now! https://www.reddit.com/r/pystats/comments/4ecj6q/statistics_for_software_instrumenting_code_for/
Thanks! It took me ages to figure it all out, to be honest. 
What a sensationalist title. What it should instead have read was "sanitise all user input", which I'm fairly sure was decided to be a good idea right after we figured out flipflop memory.
You got me.
I was asking if it could be done, do you know of any libraries which happen to connect to a scanner?
Scan file one, save it as file 1 480x240p (example) on /usr/scanned. I want a script that does all that so I can just focus on feeding the papers to the scanner. I'd need a module which handles printer output and that's why I asked, to see if anyone had done something similar and knew the best way.
Qt is native "widgets" on Linux/KDE
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
/r/learnpython
what is it you think my question is?
just sharing 
There's an "other discussions" link at the top of the page that will show you everywhere else on Reddit that the link has been submitted.
I really want to like flexx, but it seems too tightly coupled unto itself. Meaning, it's hard to use it for projects that weren't already built from the ground up using flexx. I can't see an easy way to extend applications that may use alternative event loops without abandoning them for `tornado`. 
That is a simple interface using the speech_recognition package, no closer to AI than a text menu printed to the screen... Do you want to learn about AI? Are you asking for resources?
Notice how no one else can figure out what your question is as well?
Who needs social when you've got robots you know.
Qt is fine if all your users are programming enthusiasts or using linux. Regular windows or osx users expect their apps to have the same look and feel as the rest of the platform. So you end up writing the frontend of your program in C#/VisualWhatever/Cocoa/Swift. That or people flock to the competition. Or nag you incessantly.
There is a book/website called "Automate the boring stuff with Python".
Interesting to see ember paired with Django, it's (ember) very railsy (not surprising as it was born of that community). It really fits that model better (since all the scaffolding and such is mirrored in rails). Nice write-up though, well put together.
In the last week I've developed a tool that fetches data from a database, cleans it up, does lots of processing, and spits out a number of excel reports with fancy formatting (yay for pandas). It's turned a week of labor intensive and boring excel work into about 5 minutes of actual work.
Well, I think the total cost of the project with 3 RPi 2's was $150 dollars. Compared to my $300 dollar Dell laptop, you can really tell either RPi's are amazing more efficient at Python, or Dell overprices their laptops. I believe I have a Haswell Pentium along with 4GB of RAM, but there were times where the Cluster Computer were as much as 3 times faster! However, I did this when the C.H.I.P and RPi Zero were not options, as they weren't released, but I think these two boards can do a much better job at the $150 price budget. As far as I can tell, they both run Python, and ARM Linux, so the steps would pretty much the same apart from OS related things like Installing Raspbian.
I had to use a physics simulator called COMSOL to create digital models, so I used python to create a bunch of data files of different dimensions that I could just feed in. A second script fetches the output data and processes it so I can see the optimal design. Really surprised something like that wasnt already built in honestly
Firstly, formatting helps people understand what you're trying to ask, and lets us help you better. To format code, put 4 spaces in front of the line, then indent with spaces. For example if is_code: print('hello!') What I'm getting from your code is while True: if end_label == '1': print('hi') goto "end" break else: print('no') continue It sounds like you don't understand the flow of the programming language very well. You're processing text in some way. processed_text = "" and you have a specific string you want to be the end condition. halt_text = "1" #example from OP You need to grab the text you're processing processed_text = get_text(...) The whole point of the while loop is to continue looping until the expression after is considered false. In most cases, it's better to reduce the amount of work in the loop, as it has the potential to run many many times. You'll want to put your check for ending text in the loop conditional statement, and then your "end" work goes after the loop altogether. For example while processed_text != halt_text: print('no') #prints only when the halt text is seen print('hi')
I use fabric quite a lot. Even though there are other tools available(ansible/salt) fabric allows more fine grain control IMO. 
 prime_Factors=[] z=36 i=3 while z &gt; 1: if z/2 is int: z = z /2 prime_Factors.append(2) elif z/i is int: z = z / i prime_Factors.append(z/i) if z / i is not int: break i = i + 2 print(prime_Factors) ## this is my section (3) above, it's shit, and I'm stupid. Please help :(
I find that's true with most things in COMSOL. I'm always surprised they didn't include an easy way to do something. 
when remaking my game in an entirely new engine but not wanting to have to rewrite code, i made a python script to convert a bunch of files in a directory (its oop, so nothing too complicated, just formatting) in another programming language i used like 3 programming languages at the same time i used python to convert php to c#
Any way I can take a look at the code for this?
I once wrote a MATLAB code to write a bash script to run a bunch of other MATLAB codes.
This sounds interesting. Could you elaborate on your tools / packages used besides pandas? 
Ditto to this!
I do something similar. I use Pandas, Numpy and Matplotlib for analysis and presentation. I use PyQt to build a nice little GUI so it's easy to use. I've also used pyinstaller to make EXE files to pass on to coworkers when needed. 
That Boundaries talk is awesome. I have seen a couple of times now, trying to extrapolate and really understand its concepts. This seems to be a newer event from the last I saw.
I wrote a tool that scrapes my local cinema's website for new movies, checks their IMDB rating and sends me emails with those whose rating is &gt;=8.0. I keep myself aware of what currently runs that's worth watching.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I use it to back up game saves to dropbox, with multiple versions at any given time.
I just wrote a python script (with pandas) to download all historical ticker data from yahoo finance for stocks in the DJI, S&amp;P500, NASDAQ, and Russell 2k indices. 
Yes, because ASCII was too limited and was therefore superseded by Unicode and this necessitated a break in backward compatibility in Python releases. Also, the notation for division is a bit more standard in Python 3. If you end up using modules that work with 2 but not 3, and you like coding, you could consider contributing to the migration effort. 
&gt;Hi, I'm Al. I wrote a free book to teach office workers enough Python to automate their computer tasks... That leaves stuff that is really particular to your workflow or your organization. Hi Al, I'm a geologist/geo-statistician and I love Automate The Boring Stuff. It was my intro to Python, and my launchpad to integrate SGeMS into my analysis rather than using restrictive Schlumberger software, as well as using Python to zip through a hundred other tasks that I used to do semi-manually in excel. In line with: &gt;MY NAME HATH BEEN SPOKEN. I RISE FROM MY GRAVE. You're like my Python Moses. Thanks a ton! 
Funny...I was thinking about all the automation projects I use at work, and they pretty much all fit into one of these categories. Lately: 1) process and generate reports from google analytics data. I work for a news operation, and google analytics is really, really, not built for that kind of traffic. I was spending WAY too much time manually processing stuff for the two daily traffic reports. Now our analytics gets downloaded, segmented and grouped properly with one bash command. I get detailed info, the bosses get pretty charts. 2) Scrape school/events closings, clean the data, organize them, format 'em in JSON and then FTP them to where they need to be when parents start looking for them. This was a huge PITA to do at 5:00 a.m. on a snow day. Maybe someday I'll tell my boss about this set up, but then I wouldn't get to complain :)
I've written matlab to write my LaTeX for me
let me guess, you automated this response
https://github.com/Ch00k/clapperboard - this is for one cinema network that exposes its schedule in XML format (the project also implements a REST API for data access) https://github.com/Ch00k/filmklapper - this is for another cinema network. This one just scrapes the website.
My friend got his wife accidentally fired when he was able to automate her job, making her position obsolete. She got severance, but ultimately lost her job. 
/r/learnpython
Sunday project to see if i could use PyQt to fetch online list(txt).
I rip all of our kids' DVDs, so they can watch on their tablets (or on TV with Plex) without them having to handle the physical discs. I was doing this with Handbrake, but it was tedious because I want to keep *all* of the audio and subtitle tracks. It was especially annoying for DVDs with TV shows, even more so for those DVDs that place multiple TV episodes in a single "title" (one per chapter). Doing this in Handbrake's GUI requires an enormous amount of clicking. Handbrake does have a CLI, but it's pretty bare-bones &amp;mdash; it only rips one file at a time, and you can't tell it to just preserve all audio/subtitle tracks, you have to enumerate them. I ended up writing [a Python wrapper for Handbrake's CLI that makes doing this really easy](https://github.com/xenomachina/dvdrip). To use it I first check what the disc contents look like: $ dvdrip --scan Suppose it‘s 5 titles, the first and last being junk (eg: ads), and the other titles consisting of multiple episodes split by chapter. I then just run: $ dvdrip -t 2-4 -c -o ShowName It generates one file per episode (titles 2 through 4, split by chapter), in a directory called ShowName, each with all of the audio/subtitle tracks, and ejects the disc when it's done.
I sometimes wonder how many millions of people spend the majority of their workday doing mindless shit like this that a skilled programmer could just completely obsolete in a day or so of work.
I spent a lot of time looking into algorithmic trading (/r/algotrading plug), and I wanted to trade stocks based on an algorithm I came up with. It bought and sold at the end of each trading day before 1PM. I was still in high school, so I didn't have access to a computer at 1PM. I created a script that would scrape current stock prices from different sources, run the algorithm to determine what to buy/sell, and then login to scottrade and buy/sell for me. It would calculate proper position sizing so to know how many shares to buy. It also saved my account balance and all trades to a csv file everyday, and it would email me the trades and the amount of profit. It was cool sitting in class and getting an email saying I made $50 on a stock I've never seen. I did end up losing money from the algorithm, but the automation was very nice and practical. 
I work with filling out reports in excel every night and am actively developing a python solution to do most of the heavy lifting for me. Your resources have been really valuable and I just wanted to say thanks.
It gets worse when someone higher in the company realizes that and brings in a dev to automate the work. Manager: "This is Jerry, he'll sit with you and show you what he does all day" Jerry: "Yeah, uh, this is SUPER complicated stuff man. I don't have time to train you in all this *arcane* knowledge and *nuanced* rules. It took me years to learn all of this. And anyways it doesn't matter, the procedure changes every few weeks so coding it is pointless" Translation: This is a poorly documented procedure which I'm now going to use as leverage for job security. And then god help you if you release a working version. They'll just use childish stalling techniques to ensure that it never makes it past the prototype stage.
Writing LaTeX tables by hand is a crime against humanity.
I too am talking of this.
you say that like python 2 didn't have support for Unicode at all
Try these: https://github.com/NARKOZ/hacker-scripts https://automatetheboringstuff.com/
Can you elaborate on the equation solver? This seems something I could use..
I wrote my own dividend calculation module - it calculates the UK tax credit, creates the dividend voucher and creates the company minutes of meeting. In my day job I work writing Python for other people... BUT as a contractor working through my own limited company, I regularly issue dividends - AND I'm really bad and slow at it. Automating it has meant that I don't feel scared by it any more - or put off by the time taken. It's great to automate your own stuff. I'd be happy to share if anyone's interested.
Alex here, a cofounder of AlphaSheets. This is going to be a commercial product -- AlphaSheets' main advantage over xlwings is in how easy it is to code Python in it. xlwings doesn't let you write Python code straight in the cells and have it immediately Just Work. It requires you to install a plugin and write commands in a separate file to execute Python in Excel. 
I computationally design proteins, and I use Python for all of my work flow and data analysis.
You can pip install the download url
A few most significant things at work: 1. Use pyvmomi to implement internal cloud provisioning system. Fill a form and out comes a vm in 5 minutes. 2. Use fabric to execute adhoc tasks on hundred of servers, rather than logging into them 1 by 1 or trying to open CSSH and execute said dommand on multple boxes. 3. Automate backups 4. In another company a lifetime ago, automate deployment of new builds using buildout. Was great back then, nowadays there is a million and 1 ways to do this but back then ... Recently as a pet project, I have been using crossbar / autobahn for automation at home. I would suggest every pythonista to look into this. 
i think you also failed to understand what i've written. "could be the **basis** of making a home AI".
True, Once they broke the app into two different apps - the UI got all confusing and I had to quit recording all my Check-ins.. its frustrating that you depend on a company and it leaves you begging for Open Source projects.. hopefully this app - http://owntracks.org/booklet/ makes it easy for having your Check-in history
&gt; what do you think? pretty sure it's there
&gt; https://github.com/Ch00k/filmklapper Did not expect this to actually be for a cinema near me. Sweet!
Just last week I wrote a C# program that generates lots of SQL scripts, each a few thousand lines. No way I'm doing that manually.
OK, this looks like what I do every day... :-) Except I don't automate the build process, but the tests that run on the HiL tester.
What was the job?
All sorts of things. * Synching data between systems * API use for various systems * Monitoring * Importing/Exporting data * Lots of data processing with weird systems that don't fit in well * And of course full on application development, we have our own in-house monitoring system, inventory and password management
I use MySQL-python+pandas.read_sql to read the data from the database and dump it to disk with pandas.DataFrame.to_csv. This code is actually comparing two data sets so there are two queries it runs and two files output. Next I have a section that cleans up the data, making sure all the column names are what I need them to be, replacing values in some of the columns with more standard names, trimming down the data to a valid set (basically down to the overlap between the two sets), plus some other miscellaneous things like filling in empty cells with default values. The two data sets are concatenated and saved to disk. Finally, this merged data is run through some routines that do some fancy grouping and analysis that we can then use to compare the two data sets. I use pandas.DataFrame.to_excel when the optional xlsxwriter dependency to generate excel reports and then add some fancy formatting (I more or less copy/pasted the example from the xlsxwriter docs about conditional formatting). In some cases we may take this data and pass it to the seaborn library to make nice statistical plots, but those are typically done from an IPython shell instead. I've tied this whole process together into a little library plus a cli interface built with the click library. This way I can run it with different files and queries as needed.
My thesis had a ton of tables/figures. After about 2 of either, I used python to generate them all and just had \include{filename} declarations in the main tex document. Saved me from hurling my laptop out of the window. Edit: For those that aren't aware, a Pandas DataFrame has a .to_latex() method for output!
I just use Mendeley to store my references. It even comes with a js snippet that you save as a bookmark that exports to your Mendeley library. It can sync to a .bib file for you and generates citation keys. I had to write a c++ plugin for EndNote to get the same basic functionality.
offcause Do not go to any of the sites on those list, some are ransomware sites. these list are for blocking those
Do you have the source for this? I could have really used that... :D
Lots of the stuff for my PhD turning data from csv, shapefile/dbf and sqlite into something a database can store is automated. The hard part is doing the analysis...
I wrote a [python script to create C and C++ header files](https://github.com/juliettef/IconFontCppHeaders) from the online font specifications of [Font Awesome](https://github.com/FortAwesome/Font-Awesome/), [Google Material Design](https://github.com/google/material-design-icons/) and [Kenney game icons](https://github.com/SamBrishes/kenney-icon-font), so we can use them in our in-game UI using [dear imgui](https://github.com/ocornut/imgui) and [NanoVG](https://github.com/memononen/nanovg).
Good question! You don't have a gaping hole in your knowledge. Applications that run local web servers are increasingly common. Whether they are a got fit for you depends on what exactly you're writing, and your personal preferences. Personally, I think that modern web UI technologies (e.g. HTML5 + AngularJS + Bootstrap) are better than native equivalents (e.g. wxWindows). A dynamic HTML document is more useful than label components in a frame. And there are great off-the-shelf components (ui-grid, ui-tree, d3 chart, multiselect, etc). But this is largely a matter of personal preference. There are some things you can't do well in a web app. Access to the local file system is limited. You can't put an icon in the tool tray (although notifications are now possible). There are a bunch on other limitations, and workarounds with varying levels of effectiveness. Of course, as the web server is running locally, you can put native functionality into the server and have the web app invoke that (e.g. GET /eject_cd).
&gt;Edit: For those that aren't aware, a Pandas DataFrame has a .to_latex() method for output! Holy shit, you just changed my life. 
Unquestionably. It *is* a PITA, but it does work very well. And when you have a `unicode` object in Py2, you know you can encode it safely. On Py3, you have to watch out for surrogate escapes depending on where the `str` came from :(
I always thought this might be an interesting approach to introducing automation into society: "If you can automate your job, we'll continue to pay you (perhaps at a reduced rate) so long as your automated solution works and you make sure it keeps working."
I used to be a mess at managing my finances so in 2014 I decided to start making some really detailed Excel docs. As in they have every transaction I make. Every. Single. One. First iteration was crap. 2015's one, was good. 2016 has some slight improvements. Of course I used to forget adding my expenses daily so I started using Google Keep to write them down as soon as they happen. But then again I started forgetting writing them down in the excel and they'd stack and be a pain in the ass. Solution? Moved to Google Sheets and made a 24/7 running script, hosted in AWS, which checks that Google Keep note every two minutes. When it finds an expense, it goes to my Google Sheet and write it down. I usually have a $30 difference with my bank account which is accurate enough for me. (I live in Argentina and use Dollars pretty often, the cost changes a lot which makes it hard to have 100% accurate sheet.)
At my last job, my team handled some IT setup for new hires. We'd get tickets in a few weeks in advance, and our ticketing system had useless names like "Ticket #xxxxxxxx". It was impossible to see at s glance which ticket was for which person, or the dates they were starting, or anything useful. So I wrote a script using a combination of python and AppleScript to read my ticket notification emails as they came in, grab the relevant info, save it to an Excel file (xml format) sorted by date, and push it to a file share for my whole team. That way we could easily see who was coming in the next week, what they needed, who their manager was, where they were placed, and what the ticket number was (with a link directly to the ticket in our system). Saved us so much time and hassle.
If it's boring and repetitive, let the computer do it. I'm trying to get it fully automated so that we can just use continuous integration tools to do all of the work from a desktop.
Yep, Fabric is amazing.
Would you recommend this book to a Python newbie? My only other scripting experience is Visual Basic and SQL. 
Any example of your GA code? Do you use the API? 
I got tired of tinder so I made a bot for it. The bot uses www.howhot.io to judge people and like or pass based on that rating. It also archives the profiles so I can see who I've liked.
I didn't ask. Probably not, he always talked about how his boss was cheap. He certainly should have!
Holy cow. I used your book a ton when I was automating stuff for work. Super helpful. Thank you so much. 
if you mean compiling the c# code, no it was just to convert the php oop model to c#'s syntax
Wish I could import all the proper widgets with a single import command. It takes two on my system.
QA Test Engineer here. We still do a lot of manual tests but we try to cut down on the number of tests via Path Analysis. I created a tool using Pandas that will basically take in a spreadsheet map of an application and spit out manual test cases. It also does variable substitution by pulling from a data pool defined in the spreadsheet. If the tool duplicates a path the results might be different based on the data. The work needed to create the spreadsheet is time consuming up front but pays off down the road if you keep it up to date with the newest features. If our test cases ever start getting too bloated we can easily respin a completely new test suite. I recently added a feature to have the tool write out automated test cases as well. My boss loves it and I've used it for almost every project I've been on. It's hard to get buy-in from other engineers though.
Unix/Linux Engineer here. I have written a python script to deploy Linux servers once they are booted from the VMware template. This checks for network connectivity and then bootstraps to CFEngine, Satellite, register the node to TSM and puts it on the least used backup schedule, and adds the system to the domain. I am also re-writing an in-house CMDB in django to replace one I wrote in PHP/perl years ago.
Absolutely. This book is targeted for people new to Python. Also lots of cool ideas in it.
I'm still impressed that you managed the same functionality, the way that you did.
Copy paster. 
I got myself fired when I automated my entire job.
*sigh*
As someone that has to deal with encoded strings the whole day... Yup, it is worth the pain. Besides, the small-but-good upgrades are not complex. Most of the breakage happens when you don't follow the "Pythonic" way of doing things (for whatever level of "Pythonic" you believe -- I *hate* the word, but I can't think of any other word that would describe this. Maybe "right"?). I once wrote a multi-protocol social network app. Running "python -3" gave absolutely no errors at all. I just couldn't switch because PyGTK wasn't Python 3 compatible at the time (is that what you mean by "not worth the pain"?)
Unless I can drop a widget, I am stuck doing: import Tkinter as tk import ttk Which is not what OP had, but if you notice... ttk.N &lt;tab&gt; will access Notebook, which is what we were suggesting should be used. I can't access it from Tkinter, alone.
I do QA, so I've been automating tests to run daily to check basic stuff that should break in between deployments. 
Can you share this or PM me? Honestly anyone with code examples would be well appreciated if they shared them :)
To me, those are good but unnecessary features. Here is a feature list that would actually have moved the community in a short span (again these are all my opinions, I could be totally wrong): * performance now improved ~20% for most programs * `python-build` feature, will compile entire Py3 runtime w/ dependencies into single fat binary that you can deploy anywhere
I have a fuckload of music. Like 200 gigs, and my biggest flash drive is 64gb. I wrote a script that automatically generates a playlist of music with a certain rating threshold from gmusicbrowser and backs it up to my flash drive or wherever else I please. The script originally started as an easy way to copy a playlist of files while maintaining the directory hierarchy so that I didn't have to manually copy official songs from each album (which my script also does)
I do predictive analytics and "data science" in the healthcare industry and healthcare records are both a goldmine of information and the bane of my existence. I wrote a process to extract data from HL7 files we received from various sources (HL7 is a standardized XML based format for patient data transfers), map medication, procedure, and allergy text strings to official code. It would then perform probabilistic matching when the text wasn't a 1-to-1 match with the official name/description and it would automatically insert the proper medical code when the probability of a match was above a certain threshold/flag the entry if it fell below. It would also perform named entity extraction to identify any important data that may have existed only in the notes section of the patient file. Later on I added OCR capabilities to handle image files (lots of places still scan their lab reports even if all of their other records are electronic). After all of the data was preprocessed, it would be bulk loaded into our databases (were processing &gt; 100,000k/day so the database loading was done overnight). Once the cleaned data was in the database I could integrate it into my predictive or classification models or build business rules around it - some examples are: flag someone who was likely out of compliance with their medications, identify individuals who were at an increased risk for preventable hospital readmissions (asthma, diabetes, congestive heart failure, etc.), take various medical risk scores from the literature and implement/compute them for individual patients at a population level and make them available for integration into provider/patient dashboards.
upgrade: It's easy to upgrade a web server to fix bugs and add new features then an app. Users are lazy to upgrade desktop applications. You'll end up to support multiple versions. 
I used to be a financial advisor and had tons of repeated tasks to do online, mostly around getting client info, some projections based on in-house resources, sending some boilerplate weekly emails, filling out the same field on three different forms (Fund company's, my company's, and our brokerage), other crap like that. That busy work probably took around 3-5hrs on any given day depending on which I had to do - I brought it down to 30m (mostly because I added manual intervention points to ensure accuracy). Sadly I lost all those scripts, this was before I know what github is and I had a computer crash that was my only copy (stupid newbie error). It was also before I knew what pip is so I did a ton manually and learned the stdlib pretty well, but it helped me learn and ultimately I changed careers.
Thanks. This helped answer my question pretty well. 
Yeah I'm a big fan of Go. Anyway, thanks for the discussion, I should probably get back to writing Python 2 for work :P
Lasagna is a better option since you can switch out tensor flow or theano on the backend. Not so with Keras.
I did, and thinking that your code could be "the basis of making a home AI" is naive and foolish. I assumed you couldn't be seriously claiming what you wrote. Apparently I was wrong.
not yet, i use magnet2torrent project on github. 
* What website are you based on for the recipes ? * I guess you must still manually manage the ins and outs of your stock, but you do that through a web interface, right ? * Is it on Github ? For Science, of course
Thanks A Lot
What insane torrent client doesn't support magnet links?
Gotta share the love!
Mhmm, yeah, you have to say more than "I design proteins". That's too cool to get such a short answer.
my transmission application (v2.84) can't support it (ubuntu 16.04). 
[removed]
About 6 months ago, I had to do a project for a Statistics course. I decided to use Python to analyze a ton of data, instead of the by hand (or using calculator) calculations people were doing. I analyzed the list of donors of the Obama transition campaign (see https://change.gov ). I analyzed over 60k donors, and also looked more in depth at donors from two near by cities. I was able to use numpy and scipy to do more in depth analyses too. Suffice to say, I had the largest sample of any of my colleagues. :) My prof. asked me if I really analyzed that much data (she didn't know I used Python). She was impressed! For the curious: http://change.gov/page/-/09-01-31_donors.csv
Nice
Currently automating Excel reports. I have the easy ones done (sign into site, download report, clean up data, email to users). Biggest issue right now is working with pivot tables, charts and Excel formatting to make it look the same as if done in Excel. One that I really want to work on but is low priority, taking PDF internal invoices, scraping the break down and tossing into a database to make it easier to verify charges. I also have a script that checks every hour to make sure a site we use is up and running smoothly. In total, I've automated almost 80 hours of work a month away. After I'm done with my jobs, I hope to help co-workers do the same with their reports/tasks. I work for a non-profit, so there is always something else to do so I'm not worried about someone losing their job. My end goal is to see if when someone leaves a position (usually promotion to somewhere else), I can work with managers to see if any other tasks can be automated and then redistribute tasks that cannot to other people. Hopefully giving enough funds to hire more people for tasks that cannot be automated. 
No need to get saasy
Looks like homework. What have you written so far?
Sounds like you're talking about knitting 
Any reccomendstion for sites to get started doing this kind of stuff? I'd like to make some beer money and improve my python and general programming skills
/r/learnpython
read the sidebar
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I would be extremely interested in seeing your PyQt code if you are willing to share - I am just starting my first project that I have felt a GUI would be a worthwhile addition (dev'ing tool for non-coders to use). It is definitely not as intuitive as I was hoping and each line is fight back haha. (no worries if you don't want to share - totally understand)
I did this. When I told them what I did they promoted me to a full time dev.
ahhh, brings back some memories of my first introduction to GUI coding...
this may be a stretch, as money is involved, but would you be willing to share? I am super interested. (no worries if you are apprehensive - I totally understand)
I do analysis of computational models so Python runs my life. I use both as a glue to run many model realizations, for post-processing, and to shuttle files around. I then use it (with the scientific stack) to do much of my analysis (in place of Matlab) I also use it for other things. I keep detailed notes on what I am doing in Markdown (and git). I have a python code that compiles all of my markdown and makes a nice webpage, complete with links, etc. I also have a script that find my todo tag ( `- [ ] item`) and lists them (and emails it to me every monring). And anything I tag (`tt_tagname`) and compiles that list. 
Currently working out a machine learning task to determine whether or not to create firewall rules for hosts in my environment, and on which firewalls (multiple datacentres, multiple firewalls per datacentre)
Any chance this integrates with Salesforce?
Python 3 added really great features that 99% of us don't care about. In order to do that, they decide to break Python 2 compatibility in less than trivial ways, despite what you read about how easy it is to switch. So, the fuss is that most people use Python 2, like Python 2, and have no interest in switching. And the Python maintainers don't seem to care about how those people feel. One day there will be no python2 in production. It won't be any time soon, several years. Until then, use whatever is most productive for you.
Automate the boring things isn't restricted to any type of 'boring thing'.
I prefer doing it myself though ^^
honestly considering its 2016. the question should be what is it bout python2? most of the libraries have been ported and by 2020 python 2 will be officially dead
doing your own work would be greatly appreciated
I wrote a script to download songs from any spotify playlist so that I can have them offline without requiring Spotify premium(which is anyway not present in my country). Source: https://github.com/SathyaBhat/spotify-dl/ My blog post: http://sathyasays.com/2015/12/29/spotify-dl-download-your-spotify-my-music-songs-as-mp3/
Hope you keep this a secret from your boss. Think of what you could do with all that extra time.
I've never worked with Salesforce, so not currently. I see no reason why you couldn't pull data from Salesforce into a format that pandas understands, like CSV, at which point the rest of the tool would work provided all the data is in the right shape.
you are the kind of person in the world who is so narrow minded that you'll never get anywhere. good luck in life, you'll need it.
I have tons of scripts like this to integrate various tools we use.
Sure, made the minimal version without all the other ~~features and modifications~~ garbage. I also used hot new feature of 3.5 - type hinting. https://gist.github.com/IlinAleksey/3f8d69363838ce0ac3b531bd0ee44fbd Make sure [youtube_dl](https://rg3.github.io/youtube-dl/) works and [get your own youtube developer key](https://developers.google.com/youtube/v3/getting-started)
I wrote a script that parses through a .csv file downloaded from my bank's website that contains my transaction history for my credit card. It then shows the total amount of debits and credits that I've made then calculates the amount of money I owe based on those numbers. Recently, I've added a function that combines debits based on where the money was spent and puts that in a list. It then displays that list in order from most money spent to least so that I can better track where I'm spending my mother fucking money.
Hi, mates! I released this project yesterday. The end goal is this to become the go-to "Python Toolbox". This is based on the official Github "awesome python" list. I will be more than happy to receive any feedback or ideas how the site could be improved and become more helpful. Thanks!
If the list turned out to be empty or contain a single blank element: /r/{earth,sea,space,food**,}porn** ( ͡° ͜ʖ ͡°)
Thanks! I saw your previous post for the Ruby version of this project - I thought only the Ruby folks will have this. Turns out I was wrong :D
I did read that. Nothing here is the basis for AI. You've simply replaced text entry for commands with voice recognition. Voice recognition is cool, but that doesn't make it intelligent. It's just a different input mechanism. So again, where is the *basis* for artificial intelligence here? 
I hand compiled it. Mostly the simpler IBA cocktails. I'm a bitbucket guy.
Setting up everything takes some time, yet Python deserves it. Nevertheless, this is my new love :).
I use some fatigue software called LIMIT which is python based. It is still a pretty rudimentary package, so I've been writing a lot of Python plugins to make it go faster. I also use Python for some data mining/processing with dict.cc data for the purpose of building German learning tools.
I've done the same but it scrapes tpb.. 
Do you plan to set this up for other languages, too?
What's your question? Be more specific. We are not going to write this for you. 
How do you deal with early bird ratings in the 8+ range? Batman V Superman being an example of this. The movie was near a 9 when it was released. Now it's at a 7.2 and has been completely slain by critics. This happens with tons of movies, even ones everyone knows are crap, like the Twilight series. Opening weekend 8, one or two weeks later, 6.
I automate the discovery of when garbage &amp; recycle days are in Milwaukee, WI. https://github.com/tomislacker/python-mke-trash-pickup
Python 3 introduced changes to not become obsolete in the modern computing world: - making it clean by default to work in an international context. - making it easy to learn and teach. - making it easy to process a lot of data without saturating memory. To people using Python 2 a lot, those changes introduced work, and since they were fine with Python 2, they felt it was unecessary. But just like you need to pay one day for your technical debt and eating junk food, you need to update a 20 years old software to match the reality. Now it's been done more brutaly than necessary, and could have gone better. Nevertheless, those needed to be breaking changes at some point, or Python would have became a huge mess. I can attest, since I leave in europe and teach Python a lot, that: - Python is way easier to teach and learn. I really dread 2.7 sessions now. - American are shitty at dealing with non ASCII characters, not realizing that 2/3 of the world are doing so. And for this 2/3 of the world, Python 3 is a god send. - As a dev, Python 3 is just nicer to work with, write, read and debug. 
A dying honorable profession. Like the milk man
Yup. However, there will be some differences. For example, I plan to show context info from PyPi for Python packages. I think that will help with comparing packages and determining their popularity.
99% of the pain is because unicode is hard and Python3 did it *wrong*. There's nothing wrong with leaving all data in `bytes` and only providing `iterate over grapheme clusters` operations, which is usually what you want but is *not* equivalent to `iterate over code units` which is all that Python3 gives you. Now certainly, the implicit conversions had to die - but the wrong string class was removed.
Transmission supports magnet links since [version 1.80](https://trac.transmissionbt.com/wiki/Changes#version-1.80) from 2010.
I almost never go to see the movie in its premier days, which I think lets me skip the kind of ones you are talking about. Besides, for me there is often also a second stage where I actually select what to watch among those that were found by my tool (e.g. I don't watch comedies so I completely skip these). I don't think it's easy to automate the case you are talking about, unless you actually wait for at least a couple of days and maybe look at the IMDB/Metacritic/RottenTomatoes trend. You gave me a good food for thought though, thanks!
Python and scottrade's website. Scottrade doesn't have an API, so I used http requests to interact with them. 
Looking forward to it. Thanks again!
Back in my web developer days I would script the conversion of excel docs to .csv then into SQLAlchemy databases so I could quickly take a list of data like users or anything else and convert them into DB's that can be used on the fly
here is more detailed discussion here on python 3.5: https://github.com/winpython/winpython/issues/67
This is pure genious :) great scripts
&gt; performance now improved ~20% for most programs That's news to me. String processing is now worse since even ASCII files are highly encouraged to be in unicode.
Cool idea. The category list is insane though. It is so specific I feel I need to read every item and it takes ages. Also who is curating?
Sends me a daily email with the top news on r/news+worldnews
I would really appreciate it. 
Hey, watch that SaaS there buddy. 
Why am I anticipating an endless line of "Now that's what I call a hacker" posts, but updated with "current year"?
I don't know if this is automated or not. It's well-written, and sounds like it could be written as a response.
sounds a bit like [gcat](https://github.com/byt3bl33d3r/gcat)
Well, I have two python scripts that I use in order to run cronjobs (because I hate working with crontab.) one runs every 20 minutes, the other runs every 30 minutes. * A script that snags stats in a video game I play with my team. It grabs the stats from the game, puts it together in a CSV, uploads the CSV files to my personal website, and creates averages for the team to look at (like KDA, objectives, etc.) * A script that snags if I have any unread mail in my personal email, work email, and school emails * A script that lets me know if there is a report in an imageboard I help run. * A script that updates me on the weather (current temperature, as well as the next 3 days) * A script that lets me know the last time my scripts have ran, and when they were last updated * A (no longer in use) script that let me know what I needed to do each day. I need to sit down and rework this, because I kept forgetting to update the text document of what I needed to do. I have scripts that run my other scripts and scripts that script in my scripts. (Seriously, my weather stuff compiles all the information together, and creates a script that is ran in conky.) I love scripts... Although, now that I've used the word "script" so much, it feels uncomfortable in my mind.
For the lazy https://www.quantopian.com/
Well, at least you posted it somewhere it might make sense.
It checks the from address too, I hope?
Presumably you still have to update the amounts by hand? My "so ambitious that I'll never do it" project involved scales for this purpose
Python 3 certainly isn't worse than Python 2, which was basically the same in this respect. The major change python 3 made was a strict distinction between "byte" data and "string" data, with explict conversion required between them. If you want to iterate over bytes, use `bytes`.
&gt; clients never declare their encoding type, and happily change their encoding mid sentence. This is a problem with the clients, not with Python 3. If the clients aren't doing unicode properly, you can't claim python is broken because it does.
your book was one of the resources i used in [making an automated system] (https://www.reddit.com/r/Python/comments/4edpl0/how_do_you_use_python_to_automate_tasks_in_life/d207cnf) for executing tests here at work - mostly in the final processing and data-finishing stage, making a form that was easily usable by anyone. 
I decided to start working on some independent political research, for fun, knowledge growth, and potentially finding patterns. However, at the level I'm currently working, I don't see how doing it in Python is better than Excel. For what specific functions did Python make this easier?
Those are fucking hilarious lol. Definitely not what I had in mind when I came to this thread. 
Yeah, but it isn't worth it to have print foo, or print &gt;&gt; sys.stderr, foo In the language. You also can't have a different element separator or flush with print.
&gt; `python-build` feature, will compile entire Py3 runtime w/ dependencies into single fat binary that you can deploy anywhere Windows and linux? And with support for C extensions? Good luck. 
It's difficult, not impossible (statically linked C/C++ binaries, Golang binaries).
I'm pretty sure it works, but perhaps the UI is ugly. What happens when you open a terminal and run transmission-gtk "magnet:?xt=urn:btih:087f4018768a896e5633b3de1761716611b5ee0a&amp;dn=Debussy+Complete+Piano+Sheet+Music+-+Public+Domain&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&amp;tr=udp%3A%2F%2Fopen.demonii.com%3A1337&amp;tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&amp;tr=udp%3A%2F%2Fexodus.desync.com%3A6969"
I've seen people forced to do repetitive work that can be mostly automated because "it has to be checked by a human" (despite the fact that humans are prone to making more errors in mindless repetitive tasks) and because the company makes more money if the task is not automated (cheap labor, charging the customers by the hour).
As someone who is in the process of ripping my DVD collection... I never even thought to check for cli options for handbrake... Thanks!
Not bad actually... Gradually making money... I have only had it running for like 1.5 wks, so the sample size is small... I would put it on github but author of where I get my win% numbers has asked not to share his API source publicly :( I use MasseyRatings. 
The usual way to check whether two numbers divide evenly is to use the modulo operator. 4 % 2 == 0 # True, because 4 divides evenly into two. 4 % 3 == 0 # False! 4 % 3 will return 1 (the remainder) So you can update your code like so: if z % 2 == 0: z /= 2 prime_Factors.append(2) You might even consider something like: while z % 2 == 0: z /= 2 prime_Factors.append(2) ...which will keep checking until you've exhausted all of the 2s.
As someone who uses both Excel and Python for work (structural engineering and automation) and leaning heavily on the open-source side, I'm genuinely curious who do you see as your clients? Spreadsheets are a ubiquitous tool for crunching data but from my experience, there is a wide gap between engineers who are able to use spreadsheets and the tiny minority who venture into programming (in the sense of automating their workflows). How do you plan to get that majority to use your product, not to mention pay for it?
Says the guy who thought a really simple menu was "the basis for an AI"...
Need standard Israeli coins? I don't mind sending them for their actual value. I just figured not many people have access to Israeli currency.
I take tens, if not hundreds of photos a day. Both on my DSLR and my phone. I also maintain a meticulous catalog, with JPGs grouped in folders based on "event". I wrote a script that runs through a folder with a bunch of files from any source (could also be a voice recording, a video or a GPS log file of that day), and groups everything into folders with the date of those files. Such as: * 2016-04-04 * 2016-04-05 1 * 2016-04-05 2 * 2016-04-05 3 * 2016-04-06 The script goes through each photo's EXIF data, and for non-photo files, it looks at the date modified. The script then splits an event if it recognizes a 30 minute gap. Sometimes it would split an event in the middle, but then it's easy for me to combine folders. Also, if something was created between 00:00 and 05:00, it would still count as the day before. Day doesn't change until I wake up, amirite?
I think she did some sort of data entry job, taking data from someone and filing it for presentations. Now, the guy who actually compiles the data can click a file and gets it into the presentation in seconds. 
Which is still easily spoofed. (not saying it really matters, just stating the obvious)
Are you familiar with WP CLI? I find it very useful for automating WordPress related tasks.
I'm hopelessly addicted to ttk.Notebook It helps to import Tkinter and ttk when you are going through some of the Tk tutorials, as the tutorials will reference the widgets as if they are contained in a single library (which is technically true, but not in this specific case.)
So I pay these guys (once they figure out payments), and give their software access to my repository, and in exchange ... it does what pip-compile does, except through a pretty webpage UI rather than a well-documented text file format? I don't get it. I love SAAS because it's cheap and easy to bootstrap a business and introduce a new idea to the world. This is SAASing an already-solved problem just for the sake of being SAAS. "Doppins: because pip-tools is just too free, and doesn't use TypeKit fonts, or track you with Google Analytics."
&gt; performance now improved ~20% for most programs Some people are working towards that right now.
It only saves one key stroke.
Those likely aren't going to be upgrading their python version anyway.
Are they silver/gold?
Yeah… it's based on https://github.com/vinta/awesome-python
Hmm the pyinstaller portion sounds interesting. I heavily use pandas in a company where everyone else uses excel so it makes me a bit of a Demi God haha
I'm slowly turning my bad code into better code. But then I break stuff and it takes a lot longer than I would think. Fun though. I'm just lucky that I have a lot of free time to do this at work though. My next project will be a lot more organized 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I'm not sure how they found out, screen monitoring software? When I was brought into the meeting regarding this I had told them there were other positions I could have automated, just to keep the job a little longer but they said that it was my position they preferred to have automated and that the scripts I already created were sufficient. Couldn't really do much as all code/scripting created inhouse is technically their property.
Unfortunately I can't :(. Even though it's basically a tool I built and even spent extra time on off-hours, I also spent work time on it too so it basically belongs to the company I work for.
ok
What about doing a Game Bot? In Magic Online you're allowed to run a Shop Bot (a bot that deals with transactions, processing card images and checking it's price, yada yada). I'm thinking on using your AutoPy library to write such a bot. The image processing part might be hard(and I do not know if bitmap.capture_screen is fast enough) and I might need a Text OCR hmm...
Great :)
I think you meant this reply for someone else?
...I don't see how this is relevant? What does string formatting have to do with the ugly and bizarre syntax of the old print statement?
I guess it's automation, but I need feedback anyway. I've written an application that will generate podcast feeds (xml files) for radio shows downloaded as podcasts via the get_iplayer application. Please find it (here)[http://GitHub.com/confusedpublic/iPodcasts], and have a look/bug test it. Any help on how to package it to be installed on Linux (raspbian at first) would be great.
Japanese pyrethrum coils http://i.imgur.com/cIBr9d7.jpeg
Oh, my mistake. The username mention showed up in my inbox, I didn't look close enough to see it wasn't a reply. 
Awesome python... so... python?
I guess I can see that. I still think that it takes away from some concepts a bit since you wouldn't be able to easily use hands-on learning for those particular topics.
Because the libraries can't be bytes-only! Get me the first letter; I can't do that. Check the number of characters in the word; I can't do that. A library written with only bytes to represent strings is incredibly limited. What operations do you really want to do that can operate on only bytes?
like /u/mine0 said, transmission already support magnet link, but yet i fail to use it directly. i have try clicking them directly from torrent website from chromium. it will open 'torrent prompt dialog window' with empty list. i have try using cli like how /u/chadmill3r suggest, but it have the same result. i have spare time, so i look up magnet to torrent github project, fork it, fix it and port it to python3 and bind it with clipboard manager. the project https://github.com/danfolkes/Magnet2Torrent 
It works fine but I'm already looking into learning flask. I'm realizing I'd rather have something like a local web app rather than a bunch of exe files floating around. Then I can just pass around a link and not worry about people using old versions.
Sweet. Thanks!
What do you mean by remove indexing? So I can't have random access into a Unicode string?
(Full disclosure, I contribute a little and help with the PySide2 project) I agree that naming it PySide5 does make a lot of sense, but then again, even the Qt tools, such as QtCreator don't version along with Qt. Here is one potential issue: When Qt6 comes out, and if PySide5 works with it, should we change the version just because? That would mean maintaining two packages everywhere (which is a nightmare). I am not saying naming it PySide5 is bad, I actually like the idea, but I think it deserves more thought. If you have anything to add to this discussion, I suggest that you respond [here](https://github.com/PySide/pyside2/issues/26).
I'm going to write a script to buy up all of the ammo and then email you and offer to sell it to you at a slight markup 😛
What are the steps your dota script runs?
That is fair. I suppose practitioners who use it more often than I do (mostly do PyGObject for GUI programming for one off type stuff) might be more aware of the minor version numbers and what they mean w.r.t. Qt versioning anyhow. More than anything, I'm just glad the project has come out of stasis. The Python world needs quality liberally licensed GUI toolkits. Thanks for your work on the project!
 rsync -avz -e "ssh" myScript.py user@IPaddress:"~" ssh user@IPaddress "python ~/myScript.py ; rm myScript.py"
Awesome! As a Qt user on Python, I can only welcome this change with great joy.
&gt;The Python world needs quality liberally licensed GUI toolkits. Yeah! I am very much in agreement. But I really don't know how well known minor versioning numbers are. Thanks for the feedback though!
In the web framework I would add "morepath" to the list as it is derived from pyramid and is brand new. 
I wrote myself a script to resize images : https://github.com/mingcc/resize 
Hey! Don't be spouting good software design principles around here! /sarc Good to see there's another python2 survivor here.
Can you please share me an example where DRF does filtering based on query params all by itself.
:)
Thanks for reading!
Do you have some example that doesn't look like a Java programmer just moved over to Python? The class-with-do-function is an anti pattern in Python so the example becomes weird. 
I'm glad it was helpful! :)
Yeah! That is exactly the sort of repetitive tasks I wrote the book to help out with. :)
Wasn't the already 2-licenses pyqt enough?
:D Thanks!
It was, very much so. Thanks for writing it!
Pyqt is GPL. Pyside is lglp. Pyqt is fucked now. Finally... good bindings but price is just too big for a damn wrapper for a year...
https://github.com/parantapa/pbapps/blob/master/reddit-bg.py It is not at all generic. It depends primarily on nitrogen (which I use as my wallpaper setter) and my i3 setup.
And now that PySide will be commercial product it gives pyqt run for its money. Dont get me wrong - pyqt is still a better wrapper. However i have a feeling that may change soon. I personally always use pyside already because it is good enough even if i have to apply few custom patches. Now pyside development will not stagnate and if you can get same thing for free - why pay?
The fact of the matter is that bindings for a C++ project as big as Qt are really really hard to make well. There are tons of little edge cases and things that have to be handled. These things take a couple years of hard work to mature into something production level quality. PyQt is already at production level and has been for years. The PySide team have their work cut out for them. As a commercial product, PyQt is still the safer bet. The Qt people have started and dropped 2 bindings projects so far, PySide and QtJambi. How long will PySide be supported this time round? 
Also, if you're a professional developer, chances are you have a clause in your contract that stipulates that anything you create that is related to your job, even on your own time, belongs to the company.
does windows these days have ssh ? last i checked was in win 2008. Windows 10 will soon have bash so this might work but does this work now?
[removed]
[removed]
There have been more than 10,000 visits for the last 24 hours. Thanks for the interest. More improvements are coming. For example, including the number of package downloads, package tutorials, showing trends... and hopefully more.
Saw this on my front page and thought it was something drug related at first glance. 
"Live" as in, 921600 baud? If your data is two 64-bit floats, that's 7200 values per second. Your computer's display only updates 60 times per second. There's no way you can display every value live.
I do some data conversion to convert the input data (from either dotabuff or datdota) into a list of Hero objects, each element of which has its number of wins/losses. From there I calculate a "confidence rating" which is from [this](http://www.evanmiller.org/how-not-to-sort-by-average-rating.html). Then I sort the list of Hero objects in a desirable way by that confidence rating, and create an output string with nice markdown syntax that details the results for each of the heroes. It's only ~80 lines, just nicely optimized for what I want
Both of what are .py files?
Your if statement is an assign, not an evaluate- it doesn't make sense. Try "if Enum == 1:" Also /r/learnpython might be helpful. This is a job for a dict, not a series of if else statements. 
I automated almost everything :) That included writing (partial) parsers for every file format we use when there is no parser for it on PyPI, wrapping a command line interface for our proprietary source control / ticket management, reverse engineering a proprietary binary file format, writing a cython code generator to automatically wrap some C code, speeding up scipy's loadmat/savemat, writing a pyqtgraph-based plotter, using pandas/numpy/scipy to extract and interpolate lookup tables from excel files, etc. Turns out, maintaing python scripts that do almost all of your job is still lots of work. 
That makes sense and that is kind of what I need produce 
Thanks for your idea. I have been using matplotlib for simple static plots and I love it. pyqtgraph seems to make more sense for the animation kind of jobs.
Psst...we can tell how "new" you actually are. It's okay. You might want to spend some time googling SQL databases. Start with sqlite. Whoever or whatever gave you the idea to label your second code snippet a database has misguided or confused you.
* [A resume and cover letter generator.](https://github.com/masasin/resume) * A pushbullet notification script. If I have a long running job, I just `&amp;&amp; notify me "XYZ has finished." * Generation of config and launch files for my robot because doing it by hand is annoying. * KSP calculator. * Other smaller scripts.
Looks like this was mainly accurate.
Is that actually enforceable in most places?
You put python code in LaTeX directly? Or did you have it somewhere else?
Awkward: Django and Flask are exactly as popular as each other :\^) This isn't helping choice paralysis!
These are the advantage Python (Jupyter notebook/ Pandas/ Matplotlib) has over excel. 1) More intricate, flexible and complex visualisations with Matplotlib (or optionally with seaborn etc.) 2) Ability to backtrack if something goes wrong. Excel leaves us in dark some times. 3) Once you have defined your analysis steps and plots, you can apply to any number of datasets again and again. In excel you have to repeat most steps. 4) Scripting is quicker sometimes than filtering, correcting and applying formula over excel 5) Ability to import and export over number of other data sources or databases. Excel is limited in this.
He uses multiple currencies though.
Funny how that "community" is a single person. What we need is a djangopackages.com-like site but for general python packages - a real community maintained list of packages, not yet another random list some dude vomited.
Maybe I'm missing something here but isn't this site driven by the [vinta/awesome-python](https://github.com/vinta/awesome-python) repo? There are over 200 contributors to that list. OP states it [here](https://www.reddit.com/r/Python/comments/4eh1oq/awesome_python/d200lsp) and it's also stated on the site.
Oo. Thanks. Makes sense now.
So build the index as you build the string. Maybe do both String and IndexedString types. edit: Perhaps you should write up and publish an API for what you want. We can discuss it properly then. If you're having trouble with combining characters, have you considered normalising the input after you read it in?
I use vim and only vim, but seriously vim needs to be replaced with something better. I investigated other editors, but everything else is too slow or hard to use.
I haven't tried [neovim](https://github.com/neovim/neovim) yet. Have you? 
The website is dead, no content in &lt;body&gt;
I would recommend you look into either neovim or Spacemacs. Neovim is a fork of vim which aims to completely refactor the existing vim codebase and bring it to up to modern standards. It's not stable and feature complete yet, but it should be usable. Spacemacs is a preconfigured Emacs with vim keybindings. You might think of Emacs what you want, but it has a mature scripting language and is truly fully extensible. And you can't really call it slow anymore on any halfway modern computer
I've seen some popular JS project do this with Greenkeeper. Like others, I also thought: "what's the point". After watching their commit history, I thought: "Yeh, wish Python had that." As a note, it doesn't *automatically* do anything. It just gives you a PR which you can accept or reject. Also, Greenkeeper runs your tests with the new proposed new dependencies, which eliminates some work for you. (Not sure if Doppins does.) Of course this is needed way more in the npm world, where you get hundreds of dependencies that change constantly with cowboy coding that breaks a lot. Still, I encourage people to let a SASS do some janitorial work for them.
Have you looked at spacemacs? it tries to implement the best parts of vim into emacs.
love it
Same here. All I get is a div and a comment saying `&lt;!-- Flux goes here --&gt;`
Thanks for the comment man! However, the line between unit test and integration/functional test is a blurry one. Here are two tests that I have in my project, one written earlier when I had all the service objects as globals (I still do have some of those): https://github.com/qihqi/HenryFACTService/blob/master/test/end_to_end.py , and one written more recent: https://github.com/qihqi/HenryFACTService/blob/master/test/new_invoice_test.py To run end_to_end.py, I have to start a test server instance in another process, then run it. The new_invoice_test.py is run stand alone. I also have the benefit of replacing mysql db with a in memory sqlite database while using other real services. Technically you can call both integration test. 
Well, because PySide is still in use, and we want to keep that for legacy purposes, PySide 2 does not, as far as I know, support Qt4, so that could get very confusing.
I think the subject you want is called [linear programming](https://en.wikipedia.org/wiki/Linear_programming). [1] Have a gander at this [Introduction to Linear Programming with Python and PuLP](http://benalexkeen.com/linear-programming-with-python-and-pulp/): it's a nice and good tutorial, and it may be exactly what you're looking for. [1] I am not into the field enough to identify the exact class of problem you have here. I think it's linear programming but, because you're trying to find an optimal subset of a larger set rather than optimal coefficients, it may be in some related but different field; such as [constraint programming](https://en.wikipedia.org/wiki/Constraint_solver), or [combinatorial optimization](https://en.wikipedia.org/wiki/Combinatorial_optimization).
Syntax checking. Right now, any syntax checker runs on save and has to complete quickly or else you notice the hang. This would allow syntax checking to happen asynchronously as you program, the way most modern IDEs do it. 
Thanks! I will try to open a pull request tomorrow.
Storing all those indices would mean quadrupling the memory usage of every string, for something that is almost never needed. A example in C of the sort of API that should be provided is https://github.com/o11c/libtickit/blob/master/src/string.c - there are likely others in libicu. Normalizing doesn't help, only a very small fraction of graphemes have precomposed forms.
Well, this is in the pipeline. I will add info from PyPI as well as - for example, whether it's gaining popularity, losing activity etc. Let's say that we have just the first step at the moment. Thanks for your feedback!
Not a helpful answer. I'm asking because I too use vim, and only vim, and I can't think of anything that I wish it could do. I'm interested in finding out if there is some way of working that I'm not aware of that might be useful.
The 2 comments before me sounds very ........... *scripted*.
Well thank you sir. It was something that bothered me so I spent 30min finding a solution around it. Next steps are unit tests, CRON sort of setup for checking of the dates, and an iCal export.
Why? 
So, like running pyflakes/pep8 in the background?
Forget about vim. I replaced it with https://github.com/neovim/neovim and all works great. 
Yes
Thanks, man!
But this can be achieved by running that program synchronously in another thread. Why is IO asynchronicity important here?
no problems :) My mistake
Pretty much a drop in replacement. I switched to neovim because it has 2 features that I so desperately needed: * True color support in the terminal. Activated via `let $NVIM_TUI_ENABLE_TRUE_COLOR=1`. For me it means I no longer have to use `gvim` since true color support was the only reason I used it anyway. * `:te` command. It's a fully functional terminal emulator *with color support* inside neovim. I know some people used tmux/screen for that but I like an internal terminal emulator better. I wonder if neovim team is going to continue to provide vim compatibility going into version 8. So far I don't see any reason to switch back to the original vim when v8 comes out.
Major version bumps don't indicate breaking changes any more? This is why semver is a thing (and has been for 5 years now...)
without plugin's its ok, with plugins to bring some of it's functionality on par (+ modal editing ofc) with e.g. sublimetext textmate etc it is easy to slow it down enough to make it unusable (imagine ittrying to highlight gigabyte textfiles) many profit from concurrency so that you can at least still work while some other stuff is happening in the background. The everything part is mainly, image support, true color for terminal vim (hey at least this has some patch somewhere), correct indentation, intelligent autocompletion, ... like I said everything ;-p
http://wiki.tcl.tk
such a brilliant one. Also, the webpage. 
your best bet is probably to take an existing software oscilloscope program and hack it up to read your serial data; getting the triggering and GUI performance right yourself will be non-trivial; why reinvent the wheel? you might also check out labview. I kinda hate it but honestly it's great for that kind of stuff.
Glad you liked it :) Thanks for your time!
Wouldn't vr workstation be even better? You can have as many monitors as your heart desires (every size, orientation).
i've just recently done some facebook stuff (download all posts of certain public accounts, download all comments) with python. you need to check the graph api documentation for things you can do. these are the only things you can do (i don't know if that allows reporting users, if not you're out of luck). https://developers.facebook.com/docs/graph-api you can send graph api requests directly to https://graph.facebook.com as urls and you get a json text back. https://graph.facebook.com/9gag?access_token=HERECOMESTHETOKEN would give you 9gag profile data. https://graph.facebook.com/9gag/posts?access_token=HERECOMESTHETOKEN would give you posts of that profile. you can pass further parameters (see documentation). there is a python module (facebook-sdk) that does these basic things and has a couple of wrapper functions and gives you a python dictionary from the json data. it just uses the module requests to make the url requests. although for more fancy stuff you probably need to construct a custom request (you can test that with the graph api explorer). https://facebook-sdk.readthedocs.org/en/latest/ version 1.0.0 that's what you should use (older one is 0.4) https://github.com/mobolic/facebook-sdk if you want more info on how to do things (pagination and stuff), feel free to ask. i've figured out how to do some things (like batch requests), maybe i can help (maybe you're usecase is different though)
grab a textbook on discrete math.
join the dark side, emacs + evil-mode is just perfect. 
Very good point. Never even crossed my mind, tbh. 
Let me know what I can do for you tomorrow.
&gt; Never even crossed my mind, tbh. That's very common :(
Resolution is a big factor right now. Text is harder to read since it's essentially like looking at a blown up low resolution display 
Damn :( I don't have any vr gear yet, but hopefully in the future we'll have something more hi-res.
Weird, I use about 18 vim plugins with pathogen in neovim and every plugin works exactly as it did in vim. Even airline bar with "⯈" separators and nerdtree - both work flawlessly and w/o any additional configuration. In fact, the only difference between my neovim's init.vim and vim's .vimrc is lack of `if has("gui_running")` section in neovim since i stopped using gui mode entirely. Which plugins don't work for you? Maybe there's an alternative nvim version of that plugin or some other plugin with similar functionality that supports both vim and nvim?
whoooooosh
Click the picture of the book (the one with the robot mowing) and you can buy it on amazon
Python IDLE sucks for writing code. If you want to just run code, system admin style, you can just open a terminal and type 'python3' and you're good to go. Many people prefer installing the tool iPython for that, as it makes it a lot easier (auto completion and extras.) If you want to write scripts or programs, I would suggest starting out with something that will guide you along the way (point out syntax errors and such.) I suggest [PyCharm Community](https://www.jetbrains.com/pycharm/download/#section=windows), plenty of this sub's user rely on it, and every place I have worked provided the professional copies for us. Other options for lighter tools that aren't full IDEs: sublime, atom or komodo edit. 
You could simply use a different dict comprehension like so: merged = {k: d[k] for d in dict_list for k in d} But that's besides the point. Why have dict unpacking as the "idiom" for merging a finite number of dictionaries if we can't use it to merge a variable number of them? Edit: By the way, I think (and verified) you have a bug in your snippet. You should switch the order around. Comprehensions follow the same order as "nested" for loops. So the correct version of your code would be: merged = dict(i for d in dict_list for i in d.items())
I don't see anything in that PEP that specifically mentions `{**d for d in dict_list}` w.r.t. readability. The closest thing I see is the discussion of `f(**x for x in it) == f({**x for x in it})`, but that's a question of ambiguity, not readability. Am I missing something here?
do you know if I could use tests recorded as you described with python-selenium? if yes, where could I find something more about it?
That entire section is about variations that have been cut out of the PEP to make it palatable. The final paragraph is about what you have quoted here, the paragraphs above cite strong concerns about readability and only mild support for the extended unpacking syntax inside comprehensions. &gt; Earlier iterations of this PEP allowed unpacking operators inside list, set, and dictionary comprehensions as a flattening operator over iterables of containers: ranges = [range(i) for i in range(5)] [*item for item in ranges] &gt; [0, 0, 1, 0, 1, 2, 0, 1, 2, 3] {*item for item in ranges} &gt; {0, 1, 2, 3} &gt; This was met with a mix of strong concerns about readability and mild support. In order not to disadvantage the less controversial aspects of the PEP, this was not accepted with the rest of the proposal. 
surely you mean "the right side"
The best of both worlds :P
Haha, that surely cracked me up man :D
;)
/r/learnpython
When it comes to asynchronous operations, yes, emacs is worlds better than vim because it's writte in lisp. 
No idea. I only ever SSH using OSX and various Linuces. I probably touch Windows once a year at this point.
It might be better with Microsofts Hololens, as you arent directly affected by resolution in the same fashion as with the Rift and the Vive. 
Wow you are in Ukraine! So cool to see python folks from there :)
&gt; When Qt6 comes out, and if PySide5 works with it, should we change the version just because? So why change the name to PySide2? &gt; I suggest that you respond here. Already did :)
I'm using the google query explorer and the GA add-on for google sheets. The main reason I have to use code at all is because we wind up with story names that get changed, or when stories get tagged with multiple categories that affects the 'page name' GA spits out, and just going by URL isn't so pretty for the editors &amp; managers, so I use python to square that circle. I doubt that's anything like your use case, but if it is let me know and I'll share some of my ugly, spaghetti-like, hacked together in under two hours python code. If you promise not to laugh :)
PHP is crap. Source: have to use it at work sometimes :)
So you are suggesting that we just call it PySide, bump to version 2.0.0 in the setup.py, and move on? If I want to use PySide for Qt4 what do I do? Switch to the Qt4 branch on github? How would I know the difference in pip? There are answers to those questions (obviously) but the question then becomes, how easy are the solutions for beginners? Are they obvious? Though I do think I see advantages to what you are suggesting...
&gt; There's no error handling In the spirit of the beast, eh? ;) Looks good!
Maybe my opinion about using parallelism in interpreted languages is spoiled, but anyway you can read these too: https://en.wikipedia.org/wiki/List_of_concurrent_and_parallel_programming_languages https://en.wikipedia.org/wiki/Global_interpreter_lock
Syntax highlighting is a fucking joke, it bottle necks just scrolling down the page. It's the main reason I don't use vim anymore
Use [pyzmq](https://pyzmq.readthedocs.org/en/latest/), never look back.
Do you really want to find out? I'm not really sure, tbh, but it's a very common clause so I'd be surprised if nobody has successfully enforced it.
I used to do this a few years ago to make extra money when I had free time in uni. The market has largely disappeared. There are a lot more freelancers doing this type of work. And a lot of them are in places with much lower costs of living so they can easily bid so low that it's not worth your time. 
There is [constructor](https://github.com/conda/constructor) for creating installers from conda packages (the packages Anaconda uses).
A lot of companies have strict rules what you can install on your work machines.
I don't understand. I use plain vanilla vim and I have color support. What is true color support?
Thank you for sharing your expirience with Anaconda. Now if you mention Inno Setup I'm no longer sure if I use Inno Setup or NSIS, but I'll have a look at this tomorrow at work. Anyhow, the process stays the same, no matter if Inno or NSIS is used. I had hard times using PyInstaller and tried cx_freeze. After a lot of trial and error I got it working. I do not whish these troubles with cx_freeze or any "exe-builder" to anybody... The only advantage by switching to Anaconda would be the managed environments. That's something which is hard to realize with WinPython.
The best answer is going to depend on what your worker code does. If it's relatively simple and CPU-bound, and the amount of information to parallelize is large (copying/moving becomes limiting), you can do very well with some GIL-releasing Cython and threads. Threads can operate on shared memory (shared as in "each thread operates on a different section of memory at the same time"). This is not common though. Most people use multi-processing out of fear of the GIL. For CPU-bound work, Cython or Numba (generally) gives you much better improvement than parallelism will.
You have the wrong baud rate on python's side...
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Vim has 16 colors by default and 256 (8-bit) color support can be enabled. True color support is support for 24-bit colors which is 16 million colors.
Thanks, checking them out now!
Good call. They're both true. Customer isn't the right word.
What a joke, eh? You would think it was 1990 that this is an issue.
Then it will be on par with Emacs! /s
 install_requires=['pyside&lt;2'] Granted, you might get projects that need to update to this, but with a `PySide2` you'll also have plenty of newbies not knowing which to install
Sorry about that. Thanks.
You saying I'm an evil hack?!
You've taken the scariest/most dangerous part of [Fabric](http://docs.fabfile.org/en/1.11/api/core/operations.html#fabric.operations.sudo) and brought it home to localhost.
If that's true about something like this, I guess that entire subs like /r/HowToHack could fit that description. (just a little strong is all I'm saying) 
You must be lucky to work in a company with lenient policy. It's not about the technical lockdown, but company rules that you risk your job if you are found out installing unauthorized programs.
I claim that Python can take a string of 1 encoding and combine it with a string of another encoding as long as the characters are valid in both encodings. I do not claim you can do a single string with multiple encodings. It's not your job to fix stupid.
When you're specifying software requirements without a single version qualifier, in this ever-changing world we live in, at some point in the future you should either expect to stay on top of your own dependencies, or expect things to break. Or... you can expect package maintainers to never release breaking changes of their packages ever, and move new versions into the package name to accommodate you, ala `Pyside2`. Go is dealing with this problem as well, it's clearly not something they're happy with. Python people being used to just writing down requirements without an associated version qualifier is a *bad habit* and at some point, when others start using methods like semver to make version numbers *actually mean something*, it causes their own stuff to break. You look at a nodejs `package.json`, by default every requirement you save will be written qualified `~N.x` rather than without qualification (tip: pip / python have the `~` specifier now too! `requests ~= 2.9` will get you `&gt;=2.9, ==2.*`). Python community really needs to get used to doing the same thing. However people usually don't do that without a little nudging :/
Thank you very much, I will be more careful with that in the future.
I'm kinda lost in the code here. Can anyone explain how this can be used?
Sorry for misusing, I will delete this post soon.
Did the same with bat files and vbs scripts from Matlab and python... sometimes calling a system native script is just easier...
I really like building tangible things which someway people can make use of. plino may not be perfect, but I learned a crap load of stuff in the process. Thanks for your time and I fixed the link in the description :)
MRW reading, encoded as exceptions: http://pastebin.com/DHPdDU9W
One side question, I've been trying to make my py script `setuid(0)` without success. Looks like the only way is to compile my script to binaries?
If you're trying to write a function that does something that would normally require root permissions on a linux machine, such as reading/writing to a directory you don't own, you can use the `@sudo` decorator to make it work from sudo import sudo @sudo def do_things(): import os os.makedirs('/my/root/only') do_things() If you ran this script as a normal user, it would fail without the decorator.
Emacs has both sides.
Only root can do a setuid, so you have to run as root to setuid to root... not sure there's a point to that... maybe in some weird case, haven't had to do it myself, but once you drop privileges you can't go back up to root. Usually you run as a root user and drop privileges with setuid (web server starts as root, forks processes that drop to webserver-user or something). And it sounds like you want to set the SETUID bit, and you would only do that with a compiled binary. But be careful, this can be a huge security issue. For example, if someone doesn't have root but they have execute and write on a program with SETUID bit set owned by root, they could write over the program, make it bash or something, and then run that as root effectively gaining root access. SETUID permissions are dangerous because bugs can also do damage as root, so use strictly when necessary. Maybe if you want people to sniff packets which requires root, you would make it root and set the SETUID bit to some passive packet sniffer. To do this and make a program root owned and set the SETUID bit: chmod 4755 myprogram chown root:root myprogram That will make it read/write/execute for root, read/exec for group and other, flip the SETUID bit and make it root owned. Anyone running this should get the effective user id root. You rarely need to do this. You'd know a specific thing is only capable with root (sniffing internet traffic, forging packets, reading /etc/shadow, etc). If you want to give all users a capability like this, you might use setuid and write a bug-free-as-possible program. You might also write special sudo rules that give certain users the ability to run a specific program as root, or any program in a directory as root, and more complex stuff. 
Also, not sure what you meant by "impractical to manually lookup maxmind db against every router IP", but it's not something you need to do manually. You'd just [download the GeoLite City DB](http://dev.maxmind.com/geoip/legacy/geolite/) and then use python to query it in your script. There's a 3rd party library you can use to do lookups from the database file. Nothing manual there and it's reasonably fast if you're fine with milliseconds per IP lookup.
I have the NUCLEO-F411RE board, but I never got around to playing with it. Might give this a (quick and limited) go.
why use two (or more) tools when you have the ability to combine them into one? There are tons of python utils out there requires root e.g. `ps_mem.py` :D 
What kind of latency is acceptable? I'd use [reservoir sampling](https://www.paypal-engineering.com/2016/04/11/statistics-for-software/#dipping_into_the_stream) to get a subset of the data every (framerate) of a second, and then just plot that bit. I'm pretty sure Scipy or something will have a high-performance implementation for sampling streams, and that's where you'll need to think about what about the data is important. Spikes? Normal shape? the distribution? TL;DR - just plot the important stuff, not everything.
Yeah, I love the unpacking generalizations myself. That last sentence is just hyperbole written in the heat of the moment. My frustration is in particular with how extended unpacking is supposed to be the new idiomatic solution to merging containers but then it doesn't work for perhaps the most common use case of having a bunch of them together. In it's current form it works if you care to type the containers out one at a time. That's just asinine when you have a lot of them and not possible if you could have a variable number of them. I guess I was hoping to hear arguments from anyone belonging to the crowd who had these "strong concerns about readability" to help me see why such concerns should occur for what seems a natural extension of the syntax that was accepted. I know there are other solutions to merging dictionaries, some more idiomatic, some less. [`ChainMap`](http://python.readthedocs.org/en/latest/library/collections.html#collections.ChainMap) is actually in the collections module. Another thing to note about `ChainMap` in particular is that if you update the `ChainMap` it updates only the first dictionary in the chain unless you use the recipe for `DeepChainMap` from the documentation or something similar.
&gt; why use two (or more) tools when you have the ability to combine them into one? Somewhere in California, [Ken Thompson just started crying.](https://en.wikipedia.org/wiki/Unix_philosophy)
I rather like your dict literal comprehension.
Neat use of sqlite and sqlalchemy in combination. You should put it on PyPI.
As suggested by others, IPython is a much better interactive environment. A virtual environment is one way to get started. Try this: $ python3 -m venv ipy3 $ source ipy3/bin/activate $ pip install ipython $ ipython
Comparing to other subs is kinda pointless. You know there are subs literally glorifying domestic violence on here. Pretty sure the report is to be seen 'within context'.
Psst: it's a joke!
I'd rather do it like this, though merged = {k: v for d in dict_list for k, v in d.items()} Saves doing one dict lookup per item
I use FreeBSD and there is no sudo installed on my system. Can we have a "su" version? 
Async IO is particularly useful when working on files over the network on poor links. Just last week I was editing files on a Samba share over a 3G link on a train - every save would hang the editor for about 30 seconds. Asynchronous IO would let me carry on working while it was attempting to save. 
What again? Stop flogging a dead horse. Go and re-read the advice given to you in your other *two* posts. Posting a *third* time is not going to get a different view.
You are right, it is making us cross.
What idiot made this chart? Process forking via uwsgi? What are they smoking? And the last comparison is ridiculous. If you have existential types and macros, data transformation shouldn't be a pain in the ass.
A missing `__init__.py` has different semantics. It still is mandatory for packages. Without it the directory becomes a *namespace* which is like a fragment of a distributed package. Don't confuse the two. The behavior was introduced by [PEP420](https://www.python.org/dev/peps/pep-0420/#specification)
Your timing is impeccable. I literally just pushed it I think an hour ago? I had to figure out git first, sorry! 
Yep! I wanted to share just the core concept for now, but I'll try to improve it soon.
why? `d[key]` is a hashmap lookup, `d.items()` gives you an iterator over the key/value pairs. why should there be a hashmap lookup in the second case?
Maybe you'd like [spacegray light](https://github.com/kkga/spacegray#spacegray-light) or [soda light](https://github.com/buymeasoda/soda-theme/)
it supports more than two worlds xD
it does in the insider preview with the ubuntu subsystem ;-p
Yes. Replace sudo with su -c, that should work.
What? That is not right at all. su and sudo are profoundly different. One unquestionably gives you everything whilst the other is extremely modular. On a multi-user system, you should absolutely use sudo.
Miyakodev, thanks for the notice! There was a slight flaw in the sync algorithm and there were a dozen packages missed out. 
Yes, sudo is more flexible. They both give you root. They both allow access based on a list. That's the basics of a program that lets you run programs with higher permissions. 
&gt; su allows access based on knowing the other's password. And you can *also* restrict `su`'ing to root to those in a specific group. So you can know the root password, it won't help you get root if you aren't in that group. 
So what
Oh fuck this. I give up. You win, apparently. That makes you correct.
A quick scan I immediately recognized one hack that should be fixed. The executable 'sudo' should have a full path. I would not recommend anyone attempt to nopassword this since it would give python ( or the user ) full privileges to do anything as root without intervention.
Very similar code can also be used to run functions on other machines. It's great. :D
&gt; It's not your job to fix stupid. Oh how I wish that were true.
No idea, I am asking why you need to use marshalling and `child_script` to achieve the decorator to work. (do not understand it)
Pipe and Queue are not the only options available, and may not be the fastest. Consider this post: https://taotetek.net/2011/02/03/python-multiprocessing-zeromq-vs-queue/ You might get even greater performance with a direct socket connection, especially if unix sockets are an option. I haven't measured this, though, but certainly you should if you want to cover all your bases. edit: the complexity of the messages you are sending and the serialization you are using are also key considerations.
I don't want to hijack the thread but I am curious: As a PyQt user, how much work/trouble/effort is it to switch to using pyside? I recently decided to see if I could upgrade my PyQt4 app to work with PyQt5 thinking, `how hard can it really be?' It ended up being far more effort than I wanted to dedicate to that simple side project and thus it remains unfinished. Is switching PyQt4 to pyside a simple process? Now that I know pyside has and will have some more active development, I would absolutely reconsider my choice for the GUI bindings.
Glad to see you still causing trouble. ;)
"Fake H1B Visa LOOKS REAL.pdf" and "Panama acct" on his desktop. I like it.
This seems pretty cool. Waiting for the invite.
In order to create a sudo interpreter from a user interpreter, he's opening up a second python process. Unlike threads, processes don't have any inherent communication, so it must be established using IPC (inter-process communication). The script (child script) is needed so the sudo process knows what to do. Marshalling is needed because IPC requires serialized bytes to communicate. Disclaimer: I haven't read the code; this is all inference.
"for some reason batman vs superman is really popular but otherwise it works" hahahaha. This is a great idea, I would love to try it
lol consider this post deleted.
[Pynsist](http://pynsist.readthedocs.org/en/latest/) is a tool to go straight from a Python application to a Windows installer without an extra freeze stage.
i'd love to see that code !
Try r/learnpython
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hey, Juan from Kite here, glad you like it! Please sign up at https://kite.com/ and include your language of choice, we will use these as votes as we make the decision on what languages to support next.
Why 30-bit floats and not something standard? 
Cython is a set of tools that will enable you to compile your python code into C code, and then compiles that C code into libraries. Generally speaking, you don't need to do much else to benefit immediately from using Cython. There are additional steps you can take to more greatly improve peformance, but for just a raw speed up, often of several orders of magnitude, you can just compile your program as-is with Cython. http://docs.cython.org/src/tutorial/cython_tutorial.html 
I freeze all my python apps with pyinstaller
 from left_pad import left_pad also floats in the background splash image on the main page...
My suggestion is simply to break up your code as much as possible into separate pieces. example, using matplotlib to plot data generally has nothing to do with cython. So put all your plotting code into a separate function or even a separate file. Strip down the parts you want to speed up using cython so they have minimal dependencies. If I am understanding correctly you should be able to then use cython to compile just one piece of your code into a c-library which can then be imported to do work on some data in a fast manner, finally other pieces of your code will plot the results 
yeah me too.
On the other hand, QtCore and QtWidgets don't really have separate version numbers like QtCreator. I think some folks are hoping that PySide ultimately gets treated like QtWidgets - just a part of Qt, rather than a project built on top of it. As the maintainer of a Qt App with an embedded Python runtime and bindings to a bunch of my own stuff using Boost.Python, it would be really great if PySide got a little more love, whatever version numbers it picks up along the way. :) 
This looks super awesome, but how're they going to monetize? I'd pay for this service, but I'm iffy about using it for free. 
Hey, Juan from Kite here, we support python 3 as well!
Just FWIW, my company won't allow Dropbox or Github for internal code. I'm certain we're not unique in that regard.
Ignoring the technical issues for a moment, one common theme I'm seeing here (and HN) is: "This looks neat, but *I* could never use it." That sounds like exactly what I wouldn't want to hear, if it were my project. It's like the software version of "[Hire, but not for my team](http://www.joelonsoftware.com/articles/GuerrillaInterviewing3.html)". It's a product for (ambiguously defined) 'other people', not for us. Those don't tend to do well. (The most extreme example in the software world was Microsoft Bob, but there's a million more, in all fields. Pontiac Aztek: for people who want a small American SUV! I'd never buy one, of course, but I'm sure *some* people would.) Any time people say "I'm sure some other people will love to use this (but not me)", that's a big red flag.
Agreed! Currently we integrate with sublime/vim/etc for diff suggestions (e.g. when we think you've forgotten an import, we'll show it in the sidebar and if you click "Fix" then we'll make the change directly in sublime). We'll no doubt think through how to do the same for completions.
We parse both 2 and 3, and specialize results to what you're using when possible.
We will be sending out the first batch soon!
Lots of things here, let me just respond to a couple: &gt; I still have no idea why you need to copy all my source code to your servers When you type "x.foo()", we want to show information about the function "foo". To do this, we need run type inference on the complete data flow chain that produces the value "x", so that we know which particular "foo" you're using. Throughout this analysis we may also need to know a _lot_ about the python libraries you're using, since you may be passing values into and out of arbitrary third party libraries. We have a large model of libraries that we use to do this on the backend, but shipping this to the client would be highly non-trivial. We certainly don't use your code in any way to show results to others. Not directly. Not via any kind of anonymized statistics. Not for nothin'. &gt; it's sandboxed, right? No it's not sandboxed (as in the OS X App Sandbox). &gt; Terminal commands include passwords I know this isn't a full solution but if something is not visible in the terminal (i.e. visible chars) then Kite doesn't see it. We have thought about this a _lot_ and have posted many of our thoughts openly on our website. We'll continue to think and do more, and we'll post updated when we do. 
I was tired of staring at PUTTY and trying to decipher what was happening with my embedded projects, so I decided to write a program to graph it in real time. It's written in Python 2.7 using matplotlib and pyserial, and is capable of: - Up to 3 graphs, with 3 lines on each graph - Logging data to a CSV in real time - Real time multiplication and offset - translate sensor values into real units on the fly! - Changing line color, title, and making them 'dashed' You can find the source code here: https://github.com/crxguy52/serialplot Happy plotting!
I haven't yet worked someone that did use github for code. I am sure that some startups are doing it and maybe a few other companies that don't seem to have a handle on their security but its not common at all to have companies put code onto github, git sure they all run servers internally but on github itself? Much rarer.
Couldn't that be done locally though?
Not only upload it but (according to their own privacy policy) keep it permanently.
We think the privacy concerns are reasonable and we're glad to discuss them, but there are actually a heck of a lot of people saying "yes, I want this now". Heck, we're even getting friendly youtube comments!
Thanks! We'll be sending out invites as fast as we can handle.
Here: [blittingaxes.py](https://gist.github.com/suurjaak/4d97a43c77704f8fb154f9533f350b1f). The demo uses Tkinter, for QT you need to use the matplotlib QT backend.
Nice :)
You all keep harping on "what you don't see on your screen", but that's not the (only) issue. I type "awesomesql --user prod --pass abc123 --host blah.aws.com" in a terminal. Later I type "abc" in my editor during a conference call. Can you guarantee that Kite won't helpfully suggest "abc123"? 
You could make one pretty easily for most of this: import typing import inspect def describe(func: typing.Callable): '''Returns a dictionary describing a function''' description = inspect.getfullargspec(func)._asdict() description['docstring'] = getattr(func, '__doc__', '') return description This will return an `OrderedDict`, which you can dump to a JSON file if you want. &gt;&gt;&gt; describe(describe) OrderedDict([('args', ['func']), ('varargs', None), ('varkw', None), ('defaults', None), ('kwonlyargs', []), ('kwonlydefaults', None), ('annotations', {'func': typing.Callable}), ('docstring', 'Returns a dictionary describing a function')]) Since this was a 3 line function using a built-in library, I wouldn't be surprised if there isn't a library to do this.
Large Fortune 100s, not so much. 
&gt; We have a large model of libraries that we use to do this on the backend, but shipping this to the client would be highly non-trivial. Can you see why people are upset? It's a completely asymmetric relationship. I bet it's "non-trivial" to upload everybody's source code to your servers, too, yet you chose to implement that. I can't imagine what would make it difficult to run this analysis on the client. Is it too big? I've got several multi-gigabyte applications already. Is it too complex? Virtualization is built in to the operating system, so you can run your own OS in a process if you want. Is it too slow? Distributing it to clients seems like it would be *more* efficient, not less. While I can't tell exactly what the situation is on the inside, from the outside, the result is indistinguishable from "We don't want anyone to see our code, and we're OK with asking you to give us full access to yours." &gt; No it's not sandboxed (as in the OS X App Sandbox). Ouch. This seems like an obvious small step you could do to help reassure people.
&gt; Unfortunately, it is also infeasible to perform this analysis on the client machine since the models we use are extremely large. I don't know how large it is, but it seems like you'd be getting less blowback for "This application is extremely large" than "This application wants to upload all of my source code to their servers".
Sounds interessting. However, is there a option to bundle additional binaries with the installer? Or do I need to create anaconda packages for these binaries and than list these packages in the *packages* section of the *cosntruct.yaml*? Or how is it done?
Nice one! If you ever need to plot much more data in realtime, have a look at pyqtgraph. If i remember correctly, then matplotlib drawing gets kinda slow when there is a lot of data. I now use pyqtgraph exclusively when doing interactive plotting, with matplotlib only for static plots.
Yeah, I'm really confused as to how this could be something they "have thought a lot about" if they don't realize these very basic things. It's kind of like if I were to say that I've thought a lot about the Napoleonic Code. It doesn't matter how much time I waste pondering if I don't have any actual information upon which to base my deliberations.
I'm amused by the double-underscore collision and the bolding of 'init' here. Its not mentioned in the formatting help. #offtopic 
I work for a publicly traded software company with over 1000 employees our product is very large, highly proprietary and our source code is on github
Wouldn't it be better to say "Okay, this application is very intensive, but if you want to run it yourself, here's the source, don't complain to us if it's slow". I don't really mind how slow it is, I'd vastly prefer running this on my own hardware.
Still, it's obvious that they store the files. They have a damn good reason to store the files that you upload. Here, you don't *really* need all my terminal commands.
I really don't know what kind of remote access you can get if you don't want to install even ssh, so this isn't that helpful, but if you *do* decide to install ssh on your targets then [plumbum](http://plumbum.readthedocs.org/) offers a nice feature for this: from plumbum import SshMachine with SshMachine('some_host') as some_host the_uptime = some_host['uptime']() Other than that fabric or ansible would work (also require ssh).
This guy just wrote you the roadmap for your product.
Am I the only curmudgeon who cries as I use all that CamelCase/midCase in Python?
Anybody know of anything like this for JS? 
You skipped his first sentence.
Yeah I mean, I asked about privacy too, but fuckit, I'll use it at home. It's the future
I disagree, I think you're over generalizing a ton. People have security qualms with facebook too but use it for private non-work stuff all the time. I'll use this for my 100 side projects. If they get it working offline like atlassian does, boom, done, no qualms at work. Hell all they have to do is charge $100 like pycharm does and I'll trust them. 
This is the kind of great idea that is limited by being forced for the cloud. It should be a local installed application. But, hey, the owners of the idea did a great job, so they have the right to enjoy the "patent" for a while. (quoted "patent", referring to the right they have to do whatever they want with their invention meanwhile it becomes popular and alternatives comes up).
One way to speed up pandas is to move to the underlying numpy series (one per column). You can then compile the resulting code with Cython or Numba easily. I give some examples here: https://www.ibm.com/developerworks/community/blogs/jfp/entry/Python_Is_Not_C_Take_Two?lang=en
Yup, anything proprietary had to go to the internal enterprise Github. Open source could go on public Github. Luckily my new gig is much more flexible, but still we still would hesitate to use this. The difference with trusting Github with private repos and some startup is pretty big.
I do not, but we plan on adding support for all major languages, and JS is definitely on that list!
That’s what I meant by “validate against an explicit schema.”
&gt; If you want MORE than that, a library that makes the contract between you and the structure more explicit is exactly what you're asking for. The contract I’m looking for sounds like this: “whenever I attempt to use the structure in a way it does not support, it’s because the structure is wrong, and I want to get a `StructureIsWrongError`.” Instead, marshmallow’s contract spells out all the *right* ways to use the structure. Of course, writing a library like this shouldn’t be a problem, I was just looking to avoid reinventing the wheel.
The main difference versus IDEs is that everything we show is informed by all the public code we've collected from the web. So e.g. there are a ton of arguments to matplotlib.plot and IDEs can show you them all ranked alphabetically, whereas we can show you common patterns of how people actually use matplotlib.plot in practice, which is often far more useful. Another example is if you type "load('abc.json')" without having imported json: there are hundreds of python packages that define a function called "load", but "json" and "simplejson" are by _far_ the most widely used, so we can suggest that you "from json import load". That's something you can't do unless you have a good model of a lot of real-world code. 
My company is moderately liberal in its policies, and if I ever put code on Dropbox I'd expect to be chased out with tasers and crowbars. That being said, I could actually see this passing muster. It's hard to say. They'd probably wait for third party audits and certification before going ahead with it, though.
Might be too hard drive / CPU intensive. It'd be hard to convince people to download and use a 100 GB editor, if that's indeed how much data it needs to run.
In the mean time, a similar local installed application version takes all their market. On-site installation... Sounds like Icarus got his wings. I can imagine a new feature in Dash doing a lot of Kite's functionality.
np.einsum is fantastic. Makes working with multidimensional arrays so much easier
See r/learnpython. And yes, it's a fine language for beginners. 
/r/totallynotrobots 
So from your arduino it's probably something like: void setup() { Serial.begin(9600); } void loop() { char val = analogRead(pot_pin); Serial.println(val); // note the ln to ensure it flushes } And in Python it should be as simple as: from serial import Serial s = Serial('/dev/ttyusb0', baudrate=9600) # make sure the baud matches while True: line = s.readline() print(line) You should see a pretty steady stream of data, the common hiccups are a port mismatch, something else opening the serial connection (e.g. arduino ide), or bad issue. If all those are correct well likely need code for both (just the base not your whole project, enough to get the gist) Edit: gibberish pretty much always implies a baud mismatch in my experience.
And only about 1000 LOC. Great demo, I'm sure it will inspire others :).
I've found my new favorite sub.
http://jupyter.org/ 
Thanks for making this! Unfortunately, this doesn't seem to work for me on Arch with 3.20.1. I opened a ticket on your github. 
Well from the comments and from what I have been looking into its clear Im going to have to install something. Thats become clear. The goal here is to reduce the dependency on Microsoft products. Microsoft has just got way, way to volatile. 
This is your best bet, however, I should mention that you can open an ipython console in PyCharm. And then, in the key bindings,you can set a shortcut combo to run the selected code in the console.
Might be worth considering respecting .gitignore by default - this will keep a lot of the sensitive stuff off your system.
&gt; Hell all they have to do is charge $100 like pycharm does and I'll trust them. So true. I would rather pay $100 than 0, even if the privacy terms were the same. I just want to know that the people holding my data are well funded and without need.
For gui I use remi also works remotely. Svg diagram example https://github.com/dddomodossola/remi/blob/master/examples/svgplot_app.py
i want to try this method but it doesnt run, i tryed copy and paste it in anaconda and an error was sent
/u/jlozano9897 what is your business model? kite is free, does that mean that I'm your product?
Kite, obviously, sends everything you type to their cloud servers in order to work: https://www.kite.com/privacy/ This may not be acceptable for you (privacy, corporate policy, etc...), but there are some similar-ish local alternatives: - Zeal: https://zealdocs.org/ - Linux &amp; Windows - Dash: https://kapeli.com/dash - Mac OSX &amp; iOS only These mostly just provide quick access to the docs. Things like Jedi can provide cross-editor auto-completion for Python, with inline docs etc... to provide some of the other functionality, eg: - https://atom.io/packages/autocomplete-python
10/10
so in this context yes - -U is a global change to the resolution code; there's no way to list the packages to upgrade and allow everything else to be implicitly determined. You say its a long standing bug/feature request - whats the bug # - it should be pretty cheap to do actually.
Thanks for the write-up. I don't think it's a particularly bad security hole - after all, many shell scripts have 'sudo' in them, and you could just as easily edit those to add a 'sudo rm -rf /' as you could edit a python script to add @sudo to your own function. You still need to auth with 'sudo', and if you're randomly running scripts that ask you for your password you're as fucked whether it's a python or a bash script. Of the 3 stdlib warnings you mentioned, only the marshal one is relevant as I'm not using pickle, nor passing shell=True to Popen()
Will it be open sourced?
Ah fantastic, this is the one !! Thank you !!
Not the one i was looking for, but still looks informative, thank you. 
Have you done any speed tests. I'm using damn .net charting to do 64 channels of 16k floating point and it can take seconds to draw. Been looking for something like this for ages.
Right, instead of an additional word - both because it's otherwise a type pointer and because a minimum allocation unit for any realistic memalloc system is (at least) a machine word. Thanks for quick thinking, feel free to peek at the source on a lazy day - we do a lot of cool stuff and need more quick-thinking people to look at the source ;-) 
Is there any real workflow improvement beyond two? Human eyes generally have one point of focus. I find two monitors optimal myself (especially with PyCharm's vertical splitting for editing two files at once). Still use Vim when on server or can't be bothered with PyCharm's long startup time.
I could definitely see using three (currently only have dual screens) with one turned vertical. However, I sometimes find it more comfortable and faster to use one the one screen on my laptop with maximized Windows and flip between virtual desktops (have 9 in a 3x3 grid). Hurts my neck less.
In basic I just want some sort of visual proof that my implementations works so it would be suitable
Atom's autocomplete-python plugin author here. I didn't use Kite yet, bet demo looks really cool. And it's completely different from regular autocomplete or Dash docs (I use them every day!). Kite looks more like an advisor, and should be used with tools you have mentioned. Machine learning applied for code is exciting. I hope, there's a possibility to make local models, smaller and faster. We have offline speech recognition in our phones!
I've been using numpy for almost 7 years and I still come across a new feature every couple weeks. With this one I immediately thought of several calculations that I can try this out on to see if it improves performance (I'm betting it will). Thanks for sharing!
[removed]
OK, then you can do a really simple option. 1. Start listening on the serial. Save the first thousand points to an array. Stop listening. 1. Plot this array. 1. Wait one second. Go to step one. Now just adjust the number of points per round and the wait time until performance is acceptable! 
I also prefer using a virtualenv, but the article only touches on similarities and differences between franeworks themselves, not aditional tools, which is why I didn't go into virtualenv.
The video shows the program receiving lines of 8 variables and plotting 6 of them on 3 graphs (6 lines, 3 graphs). On my PC (1 yr old laptop with built in graphics) it runs around 28FPS, which is pretty decent. The key is to use blitting so it doesn't redraw the whole screen every time.
If I remember correctly that RAPT packages the APK with a fork of the old python-for-android toolchain (or if it doesn't but otherwise redirects the output stream), you can use `adb logcat` (per normal android documentation) to see the debug output including all of the python output. You can then debug normally, either working out why Python doesn't start, or if it does get that far then looking at the normal python traceback to see what's wrong.
https://github.com/pypa/pip/issues/304
I concur with the rest of the responses. This is not going to fly over any type of professional environment so you might have to pivot and offer it to personal developers instead
It likely won't flush with just write, try the ln version (or manually add the line feed).
at this point you must be either a) trolling b) such a beginner that you don't know how much of a beginner you are. In order to receive useful advice you need to provide much much more detail to your bug reports, and probably large or representative pieces of your code.
Can you explain the "line feed"?
It sounds like [Anaconda](https://www.continuum.io/downloads) is what you're looking for. It installs Python along with a bunch of other oft-used packages. If there's something that is still missing, you can install that package with one line ([Pygame example](https://anaconda.org/tlatorre/pygame)).
This. I was trying to get https://pypi.python.org/pypi/livestreamer running on my windows box. Anaconda came with everything I need. This is the easiest solution
I'm curious, have you ever run a git server? Maintenance is negligible. It's pretty much fire and forget. 
your question was about speeding up speeding up an optomization problem using cython, yet you don't seem to know even the most basic concepts (working directory, how to invoke python, paths to files, etc). It sounds like you downloaded some random code from the internet and you don't understand it at all. /r/learnpython is more suited to help you understand such basic concepts. At some point it future you can come back here and ask about performance trade offs and cython, but that point is not now.
I'd suggest using [validictory](http://validictory.readthedocs.org/en/latest/usage.html). That'll validate but won't apply defaults. I usually apply defaults in a second step prior to actually using the structure.
Or the roadmap for a competitor, since the Kite folks seem pretty set in their ways. There are some products that seem like they're kind of asking for an open-source clone. This one is just begging for it. - a developer tool - that uses lots of open-source libraries - with people are asking for support for other languages they use - with massive privacy implications - where everybody and their mom seems to know how it ought to have been architected - and a cool demo video that shows how it should work 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
People said they wanted New Coke, too. A demo is not a product.
I recently had to deal with a Symfony app, and wished there were a magic wand to convert it to Django or Flask. (Symfony 1.x, at that; current version is 3.1.) Nothing terrible to say about Symfony, per se; but PHP is another story. The title of the article really got my hopes up, albeit after the fact. After a few paragraphs those hopes were dashed: the title is misleading. It doesn't discuss conversion at all, just points out how similar the two frameworks are because, well, they're frameworks.
what's that piece of hardware?
Kite looks like it's intending to *become* more of an advisor, but the demo really doesn't show much of this - what they currently show looks mostly like weighted docs plus auto-complete/intelisense. I agree that an AI/machine learning assistant would be very exciting and I hope this turns into one.
Except that's actually the best help you are going to get from this subreddit. /r/learnpython is an entire subreddit specifically for people who are beginners and are in the process of 'learning python' People are suggesting you go there because that's what that subreddit is for. They are not being rude. Read the sidebar for /r/python; you'll see that this subreddit is not the one you are looking for.
There's way too much information flying off to a remote service here, especially potentially sensitive information for the command line, let alone business IP in the form of source code. I don't know how data is stored on your end, who has access, what your security is like etc. You're certainty not going to be able to be used in environments that need to meet any security standards, though some auditors might *just* let this fly as metadata. At the very least you should consider what security accreditation you can pick up for your end. When you talk about people trusting Dropbox and Github, that's an important part of the dialogue.
It's an active magnetic bearing, I built it
Did you read the stickied post ?
No, as my internet provider seems to block all tabs except "new" for some reason. I have no clue, and they refused to tell me why. The only reason I haven't changed yet is because this is the best one in the country, and it'd suck having worse internet.
ok here we go : https://www.reddit.com/r/learnpython
&gt;The biggest issue is that it has only a rudimentary understanding of Python syntax which largely amounts to being able to indent correctly. Mine doesn't indent correctly. Or at least what I consider correctly. If I start a method I expect it to indent the next line and VSC doesn't. def my_method(): It always puts the cursor under the `d` instead of indented.
Oops, my mistake! I should have known that anything that didn't mime the company line (The Gospel According to Guido) would be anonymously (Even cowardly!) downvoted to hell... Thanks! Keep your head down and your powder dry, mate.
Greetings from /r/totallynotrobots
Thanks, I've wanted to explore this since it was announced but I really didn't know how to get started
I would advise to just create one in Pygame. Is there a particular need to have them separate? I'm going to assume your new to this so this wouldn't be a large project. I would just do it in Pygame
Congratulations! What does the program do?
Perhaps this summer, when I have more time (more being a very relative term). Right now studies and work are my life.
I am messing around with adding domains to the hosts file, for adblocking purposes, and got tired of copy and pasting urls to the file itself, so i had an epiphany and wrote a couple lines of code, and BAM! now i just paste the url in my program and it appends it to the end of the hosts file. Nothing major, but it was way better than spawning "Hello World" a hundred times in a console. lol
Probably not good enough for github, but i'll post it here for ya. requires elevated privileges. import sys import os #Pretty shit print ("Welcome to AddAHost!") print ("Please wait") print (" ") print (" ") print (" ") print (" ") print (" ") print (" ") print (" ") print (" ") print (" ") print (" ") print (" ") print ("*****************************************************") print ("* *") print ("* *") print ("* Add To Host *") print ("* V 0.3 *") print ("* *") print ("* *") print ("* *") print ("* *") print ("*****************************************************") #get the variable for the url to block newurl = input("Paste URL here: &gt; ") print ("Working on adding *" + newurl + "* To hosts file,") print ("Banning the domain permenantly.") #Append hosts file with the url with open('/etc/hosts', 'a') as file: file.write('127.0.0.1' + " " +newurl + "\n") 
Instead of the many print(" ") you can do print(" " * 11) and you can do string formatting like file.write('127.0.0.1 {0}\n'.format(newurl))
Lost me at "bro"
How so??
Honestly there is no really good answer here for users that can't do installs. An executable makes sense for easy distribution but as you say some people have issues. You can sign your code to help reduce the concern. Oh by executable I mean built for a language that actually compiles. I never understood the logic of packaging up a Python program with the Python environment and call it good. As for your program whats with modifying environment variables? Or for that matter excessive use of modules? If you want to make distribution easy build you app with a minimal of outside requirments. Ideally man it such that a base install from Python.org is all that is needed on the users part. 
My man! Thank you for your response. I checked Parinx out, and it seems to do *exactly* what I need! The latest version of Parinx hosted at https://github.com/rahulrrixe/parinx, updated December 2015, seems to allow for no return type. Strangely the version hosted at PyPI (via "pip install parinx") was *completely* busted. Even copy/pasted functions from the documentation itself didn't work. All is well with the "git clone https://github.com/rahulrrixe/parinx" version, though!
Lol, of course I had no such actual expectation. (You seriously thought I did? Really? How dumb do you think people could be around here?) But I really did hope he was going to share some experience converting from some framework to another -- such as, oh, perhaps from Symfony to Django.
I'm hoping this fixes a weird bug I've been having with the auto complete dropdown disappearing if I try to touch it with my mouse (to more quickly scroll the list)... Extensions look cool too! Maybe the bar will be low enough to try them easily. Completely agree that they should be installable via the user interface for added simplicity, or installable via a conda one liner.
Anaconda is a good suggestion. but They should really be using Miniconda, which is a much smaller version without all the scientific computiong libraries
Awesome! This is the exact advice I give people wanting to learn how to code: Pick a problem you have, and use code to solve it!
I could be wrong, but I think Google just pushed an update to include clustering. 
When you're targeting hardware that weak, using a dynamically typed, garbage collected language is just about the worst thing you could possibly do, performance wise. No compiler will be able to remove those things from the language. 
I've used flask-bcrypt when using flask. Very simple to use and supposedly pretty secure. 
The second part of the series has also been released 3 days ago: https://youtu.be/tNa99PG8hR8
I haven't used either, but the pygame [GUI wiki page](http://pygame.org/wiki/gui) lists a couple of GUI libraries, which do seem to be reasonably documented and have examples, so if you're using PyGame, I'd start there. OTOH, if the only reason you're using pygame is to make a GUI (rather than writing a game / graphics etc), you may want to use something like [PyQT](https://riverbankcomputing.com/software/pyqt/intro) instead, which will integrate with the desktop much better.
This great for a newcomer.
I have both an id and a uuid. The uuid is exposed to the JWT and the id is just there. No use for it really.
Just popped in my head. You could have your script on a 1 sec loop listening for the machine's clipboard. If it detects a website (has "http:// or https:// in the text), it'll add it to your file. The down side (and I've done this with my tools before) is to not leave it running in the background and get unintended behaviors.
I don't know which DB you are using, but one thing I like about PostGreSQL is that you can auth connections using ident/ip/host without any passwords.
I had same problem, went for torch7 instead for now. But, cloning/building a recent release tag from Github should get you going?
The id is a bad... idead. If it appear anywhere (script, urls, forms, api, etc), it means an attacker can get another user id by just incrementing. So it requires you to have such a hard security
Python 2.
Yeah, I wonder why they didn't go with Python 3. Maybe one of the libraries (scikit or TensorFlow) is Py2 only?
You can make a sokoban game using python. Here you can check more about the game https://en.wikipedia.org/wiki/Sokoban
Related: http://i.imgur.com/1BKr16n.gif Thread: https://www.reddit.com/r/Python/comments/4dhc3g/python_in_javascript_feat_pycharm_remote_debugger/
Yeah, I use the "jti" field as the token ID (per the spec), which I use to grab the actual private stuff from a cache (typically redis). The added benefit is if someone explicitly logs out (even though the token hasn't "expired") this enables checking that to not leave lingering tokens around. I don't leave much in the JWT effectively making it a glorified access token.
Neither is. Scikit-learn has been Py3 for years, and while TF was released as Py2, it became Py3 within a month.
&gt; People are far less inclined to use the false assumption that `codepoint == grapheme cluster` ... As opposed to the false assumption that `byte == character`? Because if you think people will just naturally understand the concept of multibyte encodings simply because people halfway around the world are using shift-JIS, well... if that *could possibly* work, Unicode would never have happened in the first place.
I'm on mobile right now, so I'm unable to test it myself, but the Readme states he used pyinstaller to create that exe-file with the provided batch file. The batch file packs gui.py - so why don't you try to run this one? ;) 
3.x *does* offer a grab-bag of performance enhancements IMX, though. For example, AFAIK, the divide-and-conquer algorithm for `math.factorial` never got backported to 2.7 (would like to be proven wrong on that :) )
&gt; 1. Can python export gui-programs that other people can run? Do they need python installed? Yes and no. There are several popular gui libraries, and you can package these (or other python programs) into standalone executables via tools like [pyinstaller](http://www.pyinstaller.org/). &gt; 3. Is it recommendable to learn this new language for gui-programs, or should I try to stick to Java and make Android Studio work (possibly on a different pc). If you want to make Android apps in particular, java is undoubtedly a more obvious choice especially if you already know a little about how to use it. You *can* make Android apps using python, and the main gui option for doing so is [Kivy](https://kivy.org/#home), but this is naturally a much smaller community than that for native development and there are some technical disadvantages compared to java. If you just want to make desktop guis, python is a fine choice, but probably so is java.
Not to mention, now you can do things like `print(*items, sep='\n')`.
Impossible to answer without specifics. What encodings are you dealing with, why do you have to deal with them, what exactly does your code look like in Python 3, and what exact "horror experiences" have you had?
Does anyone use jupyter and Pycharm or an ide? I have noticed that my jupyter notebooks eventually get outdated compared to the py files. It's a pain to keep them synced if I make a change here or there. I find Pycharm nice because it corrects my errors, I can select all instances of a variable, I can commit with git, etc. But I love jupyter because I can run code in a cell and see an output immediately and it is so pretty. 
This is so cool. 
I did, but it tells me that i am missing a Qt module. For a python dev this is probably a non-issue, but as I said, my Pthon knowledge is minimal. This is probably something I could just google and have it working in 5 minutes, but still, it is the thing that kept me from trying it right away. That's why I wanted to let him know. :) 
What troubles are you having with Android Studio? It's based on Eclipse which is a very popular Java IDE. I've used it on multiple machines running Windows 7 and Windows 10 over the last 4 years and I've never had a problem with installation.
No code yet you added a GPL license Thanks but no thanks
Does chrome block the Anaconda download for anyone else? 
If you get this error: ImportError: No module named 'nbextensions' when launching your jupyter notebook server, there is bug in the nb extensions installation process - GitHub issue [#579](https://github.com/ipython-contrib/IPython-notebook-extensions/issues/579). But there is a workaround which entails copying nbextensions.py file from their GitHub repo to your "extensions" directory. Not sure if this problem only occurs if you're using a virtual environment or not.
This is the URL for the playlist which will list all the videos in the series, just showing the two at the moment: https://www.youtube.com/playlist?list=PLOU2XLYxmsIIuiBfYad6rFYQU_jL2ryal And here's a prequel, "Machine Learning over Coffee with a Googler": https://www.youtube.com/watch?v=IcDV9ZjQ6qk
Yeah I also have that bug. I can't even select an item from the dropdown list with the mouse.
I find I use Jupyter for rapid iteration during development, especially when I need to do a lot of plotting and debug outputs to verify that things are working, and then also as a platform for showing someone else some analysis that proves a point without having to copy everything into PowerPoint. If I end up making code in Jupyter that I want to keep and maintain, I move it into a module where it's version controlled and then I work with it in PyCharm. Sometimes, I then make a new Notebook which shows the same visualizations but imports and makes use of the library code instead, which is usually much easier since hopefully all the hard parts are written, and then that Notebook also becomes a demo of how to utilize the new module. My pycharm code is usually modules meant for general use (analyze a type of file, work with propulsion equations) where every Jupyter Notebook documents a specific task (Test 3 Data Analysis, Plot propellant required to put 100 lb in various orbits...).
If you mean installing all the official ones at one time from within the notebook, yeah that would be nice. But for now doing: pip install https://github.com/ipython-contrib/IPython-notebook-extensions/archive/master.zip --user Isn't terrible. Then you can go to the built-in extensions dashboard when you visit http://your_base_url/nbextensions/ that let's you activate/de-activate extensions and even gives a description of each. There is also a [wiki](https://github.com/ipython-contrib/IPython-notebook-extensions/wiki/Home-4.x-(Jupyter\)).
There is a python3 branch (in a fork)
You can use octave instead.
Don't listen to him. It's a religious thing like bracing style. 
A Suggestion: Add a screenshot of the program in the Github description P.S: Great effort
Cool stuff! But their code style seems very...inexperienced?...to me. 1. `[[140, "smooth"], [130, "smooth"], ...]` instead of `[(140, 'smooth'), (130, 'smooth'), ...]`. So basically tuples for things that belong together but are not similar, and lists for things that are the similar. Maybe for some convoluted reason Scikit requires lists, dunno... 2. `for i in range(len(iris.target))` instead of `for i, target in enumerate(iris.target)` 3. Python 2. *Come on!* I'm nit-picky...
I mean the language itself is horrible. I AM using octave, it's just FOSS port of MATLAB, syntax and everything else is still the same.
So, would it be best to just leave an in-line comment on what the numbers mean, rather than use a dictionary or something?
They really could have used python (+numpy).
Can't figure out how to get TF working on Windows, which is a shame. Installed it via docker, and I can get to the Jupyter notebook showing off the demos, but I'll be damned if I can `import tensorflow` anywhere.
Nah, you can try Enthought canopy Python distribution. 
So...what's your question?
Seems like you are trying to read an .obj file. I don't think you can do what you are trying to do. See the [file's page on Wikipedia](https://en.wikipedia.org/wiki/Wavefront_.obj_file), for instance. There are multiple lines that have different meanings. From your post, it seems like you have the object's vertices, but not the normals or faces. Try to study the file format a little before trying to instantiate a 3D model in your scene. Or at least start with something very basic like a cube (which has only 8 vertices and 6 faces).
What's wrong with Python 2? (Serious question from a beginner)
New to this, but my understanding is to use it and similar library's as often as you can given they run much quicker than looping through a matrix in plain Python. 
Basically never. I've been pretty happy just using Python's builtin collections + itertools so far. Maybe I just don't know what I'm missing, but if it's mostly just speed, I don't care.
Only once you have a few thousand elements, though. 
Wow, that's one of the best-answered questions I've ever seen.
Constantly. But then, I'm a scientist.
Blender has an incredible community of coders and programmers over at [blenderArtists](http://www.blenderartists.org/forum/). Have you asked, or even searched the forums there?
When you do arithmetic on the data in said lists
&gt; Only pro of using matlab is it's extremely fast at vectorized numerical computation(Like something you expect from heavily optimized C++/C code!) Matlab's performance is no where near optimized C or C++ code.
For reference, I once had to do a calculation which if implemented naively was about 5 nested for loops. It was going to take 3 weeks to finish. With some numpy magic I reduced it down to about 20 minutes. Afterwards I used scipy.weave to write the calculation in C directly, took about 1 minute afterwards!
Weird ok. I ended up just downloading it using Edge (using windows 10 after being a mac user for 20+ years), which wasn't as bad as I thought it was going to be. So I've got anaconda installed, created an account. CLI is working fine. I'm not really sure how to import the sklearn library using anaconda though. Any pointers?
Same as /u/Jumpy89, I'm working in astrophysics, and most of my python coding heavily uses numpy… Alson, f2py comes handy when you interact with Fortran a lot.
If you don't have enough data that you need the speed, and aren't interested in easy array and matrix oriented arithmetic, then you really are better off with builtin collections and itertools (and maybe functools too; perhaps even the toolz library). Numpy comes into it's own when you have a lot of data, and is a clunky encumbrance if you have small enough data for lists that you can work with easily and speedily.
Machine learning, mostly. But knowledge of numpy was pretty useful when I was developing a certain company-internal webapp, where putting data into numpy arrays instead of Python lists saved lots of memory. The application was supposed to parse and generate CSV files of predetermined structure, with large number of rows (the typical file was 200MB). List-of-tuples could take roughly 1GB, numpy's array with carefully defined dtype for the same data was around 100MB.
Apparently it is not included in the windows install for Anaconda. I ended up using conda install scikit-learn. Seems like everything went well. Go to compile using py import.py and get ImportError: No module named sklearn :( I like how the year I decide to go for a windows machine for home and hobbies, tutorials assume OSX... I have to admit I much prefer OSX, but I'm trying to expand.
&gt; The false assumption that byte == character is trivially broken the moment you go beyond the 96 ASCII characters, which is very easy to do accidentally, and quite easy to fix once you come to the basic realization. Code pages say hello. People were using single-byte encodings for alphabets as diverse as Latin and Cyrillic in the same document for years after the introduction of Unicode. People are *very* good at pretending `byte == character`, and my experience teaching people Python has shown me that 2.x's implementation of strings clearly reinforced the delusion. &gt;On the other hand, handling grapheme clusters and multicolumn characters is something that practically no one will ever accidentally come across during testing, and when they do get reports they usually believe it is too complicated to deal with. (Heck, that's typically the case even for going past the BMP). I'm not sure I understand what kinds of issues you're actually coming across as a result of this incorrect handling. Do combining characters somehow break `.split()`? Are you concerned that Unicode can be abused to create invalid/nonsensical grapheme clusters with combining-character combinations that don't make any sense? (Even if you could guarantee that doesn't happen, dealing with cross-language content is always going to present its own difficulties, especially if e.g. bidi marks are involved, or characters from symbolic/technical blocks.) Are you looking for proper support for collation/locale-aware sorting? Are you for some reason seeing code that indexes into strings on a regular basis? If we consider a "string" to be a sequence of Unicode code points, then we at least have the property that every substring is also a string. A sequence of UTF-8 bytes doesn't offer us that. (Neither does a sequence of shift-JIS bytes, for that matter.) &gt;Do note that my claim that the wrong string class was removed is orthogonal to whether encoding needs to be specified. I quite simply don't see how representing the string as a sequence of the bytes used by a particular encoding, makes it *easier* to detect grapheme cluster boundaries, vs. representing the string as a sequence of encoding-agnostic code points. &gt;the vast majority of string use is merely splitting and joining (including via formatting). And I have no idea why you imagine Unicode strings to be a net loss here.
Seconded.
Well what is the actual issue you're having? Example input and output? I'm willing to bet your problem is what you're passing in as phrase
matplotlib + basemap http://matplotlib.org/basemap/users/installing.html It's not necessarily beginner-friendly, but there's nothing that's simpler than this for plotting lat+long data. You can do everything you're describing in about 10 lines of python. 
When I do scalar operations. Basically, it's simpler and faster than iterating through a list of hunderd thousands items
What if I am looking for a specific city or neighborhood? Could I zoom in somehow?
Numpy can be difficult if you have, say, heterogeneous lists, or are mostly working with lists anyway (because it's one extra layer), or aren't strictly in the land of numerics. Don't get me wrong, I use numpy pretty much constantly. I'm realistic though that it doesn't fit all use cases. It's definitely worth learning at least the basics of numpy to know if you don't need it.
Have you considered using [QGIS](http://qgis.org/)? If you install the OpenLayers plugin in it, you can easily add tile layers from OpenStreetMap, Google Maps, etc. [Python is used in QGIS](http://docs.qgis.org/testing/en/docs/pyqgis_developer_cookbook/intro.html) -- you can use Python inside it or import its Python module outside the GUI. **EDIT:** You may also consider [Folium](https://github.com/python-visualization/folium).
I'm going to have to read up on how to install this stuff. I had more difficulties installing these things than finding answers. Thanks for the lead.
Any time I need my result the same day.
&gt; It's [Android Studio] based on Eclipse which is a very popular Java IDE It's based on IntelliJ actually, only the old Android dev tools were addons to Eclipse. That's said, I've not had many issues either, especially with the new versions where the SDK Manager is much friendlier.
I don't believe you need to use symbols here, unless I'm misunderstanding what you are trying to do. Look into using np.linspace to create the range of values you want entered into your function. 
For doing fancy science/math with audio data (basically audio data is tens of thousands of air pressure measurements per second). 
It can absolutely make more or less sense to use one representation over another isn't that is for instance how neural networks work. You can write boolean equations in CNF or DNF but depending on the equation and the situation it makes more sense to choose one over the other. My question is that is there a special reason they chose to represent this data in Decimal. Edit: I already found the answer still thanks.
/r/learnpython
After a few more 6 minute videos will I be ready for a job at Google?
??
As someone else who works in this industry your answer is perfect. Numpy/Scipy are slow to install, slow to configure, and generally garbage to deal with for any administrator or programmer that has to maintain them.
Hovering over the red underlined text usually tells you what the error is.
 if dataset_complexity &gt; simple: if dataset_size &lt; mem.total: use numpy else: use spark else: use itertools
As an embedded engineer, every time I have to process data from an instrument in Python.
Looks to me like a typical mistake using intellij idea (I know you wrote pycharm and looks like pycharm) double check your SDK in your project preferences. cttl+shift+a (cmd+shift+a on Mac) and type "project interpreter". Take a look what's there. It might be empty. If everything seems to be fine. Go to File &gt; restart/invalidate cache &gt; invalidate cache and restart. 
Any time I need to use linear algebra (which is actually fairly often). Implementing things like singular value decomposition by hand in python would be complex, slow, and prone to errors.
This is what I do, though I'm not really sure how to use the jti field. I just set the uuid in the payload and on requests, I verify the token and get the user by the uuid. Why do you use redis to store information? Are you talking about session ids or actual user information stored in the cache? 
It turns out that it works great! the file just needs a ".py" extension. 
&gt;slow to install So your solution is to install it over and over again...? Not sure what you're thinking bro.
Your question is poorly posed
I've had good experiences with Anaconda, which wasn't at all slow to install or configure. And being installed in a virtual environment, it's super easy to manage. So installation/configuration doesn't seem like an issue to me if you use the right tools.
Thanks please see http://www.reddit.com/r/computervision/comments/4f1hwd/the_open_360_camera_project_now_live_on_github/d267odr
It might be easier to convert to .wav with an external program then manipulate that.
pysoundfile should be able to open ogg. It's based on libsndfile, which does support ogg.
one word: docker
Thanks, I've added a screenshot.
Just a typo correction: &gt;print ("Banning the domain permanently.") You juxtaposed the 'a' and the 'e'
This is valid python 2.7 code, pyCharm shouldn't do more than give a warning...
There doesn't seem to be a pypi package for pymedia. That makes it a lot harder to install. It's one of the main frustrating things about python, that a lot of interesting extensions are not packaged properly through pythons own packaging system. It is something you run into a bit too often unfortunately. As /u/dddomodossola mentions, librosa is probably worth a try.
Well... back button from the search page would be nice. Also instructions could be in a different place so the user would bump to it sooner if he/she wants to. The coloring of the buttons on the main menu does not do anything else than confuse the user. I myself could not find any rationale for any other user interface than the search box and the instructions -button. The search results could be shown on a new popup window or in unused area of the main window. The ui was very unintuitive. These were my thoughts before I got tired. Try modeling the thing with pen, paper and tape and see if it helps. Oh, almost forgot! It would be nice if pressing enter button would submit the search.
Thanks for the feedback To be honest the colours where based of the [interface of the movie](http://www.notcot.com/images/guide.gif) Yeah i do see how it is unintuitive, i couldnt figure out how to do it with pressing enter, but i am going to keep looking. and the new interface for search is a good idea, i will look into it.
A little extra (check if entry already exists): with open('/etc/hosts', 'a') as file: for line in file: if str(newurl) in line: print "That entry already exists" else: file.write('127.0.0.1' + " " +newurl + "\n") file.close(); p.s. you absolutely should put this on github, and getting into making add's , commits and pushes..and never be ashamed of anything you write, you my son, are a coder :)
If your dataset size is bigger than RAM then you can use Dask which is a lot easier than dealing with a spark instance. For me spark is best when it's sitting over top of all your data on disk and you need the distributed disk for fast reading and ten filtering down.
another scientist here, most of my work is in c++. But yeah, constantly using numpy and scipy for manipulation. One important thing though, is that if you are not using numpy for some array, even a fairly "large" one ( &lt; ~10^4 elements), do NOT use the numpy maths functions using python standard library containers, if you want performance. An example (run in ipython on an AMD-FX6200): rs = np.random.normal(size=10000) rsl = [random.normalvariate(0,1) for i in xrange(10000)] %timeit sum(rsl) 10000 loops, best of 3: 145 µs per loop %timeit sum(rs) 1000 loops, best of 3: 1.16 ms per loop %timeit np.sum(rs) 100000 loops, best of 3: 9.54 µs per loop %timeit np.sum(rsl) 1000 loops, best of 3: 290 µs per loop similar results are found for many cases. For these small arrays, the numpy array allocation will be the major bottleneck. Similar logic applies when going the other way - crossing the numpy &lt;-&gt; python barrier is quite costly. 
Redis is to control token revocation, because my work has a requirement for long-ish sessions but also for the user to be able to "log out" (rending a token invalid). The issue I have with JWT is (and I may just be unaware) nothing in the spec about key revocation and unless you store some info somewhere, there's a chance someone could be using revoked keys. We're also doing high volumes of money, so another reason for using redis is to ensure that even if our signing key was figured out - the jti wouldn't be in redis effectively acting as though the token was expired and requiring re-authentication.
You could probably do that with mapbox services without any coding. 
Constantly. Not a scientist (well, sciency educated, but working in IT), but mildly performance-liking. Also, i deal with buffers a lot, and it is just awesome to access part of a buffer as a numpy array without having to copy any data.
Well, then you're screwed (or you happen to find a way around it). It is extremely annoying, but we are not a software development company, we just develop some tools for internal use. The protection of IP against leaky code/software from github outweighs the need for code examples, i guess.
I'd be over the moon if I could code unreal with Python. 
Absolutely. I'm an astronomer, and I ported a pipeline written in C to Python. The size of the codebase dropped by about 80% thanks to NumPy, while only costing me about a 10% speed hit. A combination of NumPy, SciPy and Numba really goes a long way to achieving high performance (and good looking!) code.
http://codepodcast.com/feeds/all.atom.xml http://codepodcast.com/feeds/all.rss.xml
Another word: No.
There are two and only two obvious choices, Unreal Engine and Unity.
Is that what "you're using" or what pycharm is configured for? It's not necessarily the same thing.
Pry.
I'm not sure how I figured it out, but it seems to have gone away.
i like this podcast. Good share!
Im basing my conclusion on observation. Hey, here is an idea. How about you go build a jet with no understanding (ie, training) in aeronautics, physics, or engineering. 
What you are asking is equivalent to the following: &gt; How do I start my car. I tried turning the key in the ignition, and some lights came on on the dashboard but it didn't work. I searched the Internet for solutions but they didn't solve the problem. Do you have enough information to help that person with the troubles with his car, or even point him in the right direction? No we're missing critical information to help that person, such as which lights were on, and the brand of the car. The same is the problem with your question we can't help you without the error message and an example of what you tried already which causes the error message.
scikit-learn is also with all Anaconda installers (also Windows). Maybe you are executing the wring Python?
I've seen this when my interpreter settings get screwed up. Try creating a new virtual environment and setting it as the project's interpreter
sorry, I really wasn't clear. docker is *the reason* people frequently install packages over and over again because of the annoying way you are made to [mis]manage its cached builds. and of course this is exactly the kind of problem docker is *supposed* to solve, and *sortof* does but then creates 10 other annoying problems.
the project seems dead and even the examples contain bugs (array of mappings is suddenly a sequence of the chained items of each mapping)
When will it be removed? Python 4? haha
No, I was using perceptron and feed-forward networks while you were still squeezing people into lockers in high school.
You don't have sufficient evidence for any of the things you say, you're just a pompous jerk.
I had a lot of issues in my various python projects which arose from using a mixture of apt, pip and setup.py. Now I leave my system python as bare as possible and use conda environments for everything, and I'd highly recommend others do the same. 
Lack of multi-core processing is my first guess
I was with you until you said people target new software for 2.6 instead of 2.7. That's just bonkers. The reason I'm still using 2.7 is because all of my research was done in 2.7, my operating system came with Python 2 by default (was 2.4 I think until I upgraded that crap) and everybody who may have wanted to use my code also used 2.7. In my case upgrading to 3 would have caused more problems than it solved, and I believe this is why the majority of users stick with 2.7.
yeah, all those problems almost certainly came from sudo pip installing. Always use a virtualenv (or conda environment) But the cult of 'newest version for everything' makes people unnecessarily scared to depend on the slightly older release in their distro package manager. 
To be honest I can't quite give you a clever answer. I think it boils down to using `range(len(xyz))` to loop over a list is considered unpythonic.
I think a list of tuples would still be the most descriptive way of doing it because both integer values have different meanings.
/u/Homersteiner can you fuckin stop commenting on every thread where somebodies profession is involved? You don't know jackshit about other peoples lives so stop talking about them. I actually wanna know now, what's your job?
This. Does it do what you need it to? Did you use the right tools so that you're not taking 2 days to do something that could have taken 5min with a different structure/implementation? Then you're doing it right. 
Yeah, virtual environments with container based systems on top makes for a not so fun experience. There are a lot of workarounds and ways to get around it, but in the situation I'm speaking of compiling against the system was a requirement (which I assume is why most people are downvoting me).
Godot. I know it's coding is pythonesque, just don't know why it wasn't just python.
Because Python is slow, hard to embed, and takes a lot of space.
Honestly, I just wish we'd get a new PyGame competitor, a better game library. A Pythonic and a sane one. Something like LÖVE but for Python.
But Unity allows javascript as a scripting language.
Phd from a top 3 US university in 2002. When did you finish and where did you go?
I actually am a scientist. Phd and 15+ years of experience says so.
Exactly! And for nearly any operation where numpy is slower, the total time is small enough that it usually doesn't matter.
This is really cool, a great first project :) I'll add a couple minor recommendations since you've asked: `global clicked` on line 2 is unnecessary, since the variable is already at global scope. Also, since "clicked" is logically a property of the frame, you might want to make it a member of your `The_Guide` object (i.e. set it in `__init__` and use `self.clicked`). Some goes for `stat`. Your `stat` variable, while relatively simple now since it only has three possible values (1, 2, and 3), may end up taking on many more values as you expand your program. It can be difficult to remember what each value means when you just use `int`s, so I would recommend to use an [`Enum`](https://docs.python.org/3/library/enum.html) instead. These are built-in in python3.4+. (An Enum would act the same as how you're using `stat`, but instead of checking the value of an arbitrary number you can give each state a name. So for example, instead of `elif stat ==2:` you can say `elif stat == Stat.CREDITS:`)
Are you retarded or just stupid? Everything i commented on was empirical. Then dipshit comes along and says "nuh uh." Fine. BTW, you are dumber than a bag of hammers.
Why would you go through the extra work of getting an index just to throw it away? You're not chiseling code in stone; it's quite possible to add the enumerate later if you actually need it.
From http://codepodcast.com/, the RSS feeds in the headers. But I see that it's fixed now, so you probably know that by now :)
This sort of question belongs in /r/learnpython, and I see indeed that you posted there first, and posted here an hour later. Please do not cross-post.
Then nothing would ever upgrade.
You don't need to have a PhD to understand machine learning. You don't need to have a PhD in English literature to write a story, you don't need to have a PhD in art history to paint a picture, you don't need to have a PhD in computer science to code a program. 
1. It was not empirical at all. You implied that /u/jumpy89 would not be a scientist by saying: "Doing stuff in your backyard isn't science". What is empirical about that?! That's a pointless assumption. 2. I'm probably not as dumb as a bag of hammer since I'm studying at the best university in germany and just started my 2nd semester of health science which is almost the same as medicine... I'd love to know more about me since you know everything about everyone. 
Well, I admit that was stupid to make podcast for coders and assume that no one will look into source of page:) Thank you for bug report:)
I need to get better at Sympy. I'm sure it would be very useful if I could get more comfortable with it.
Damn MGAO back at it again with the programmable spreadsheeeeets. No but really, will finance companies really pay for their sheets to be hosted on another company's servers, or will you also offer licensing for them to host the server themselves? Or is just just a cynical ploy to get acquihired?
Reddit mobile's sanitization breaks hashtags in URLs. Not a single Medium link has worked for me since this crApp was released. Here's a fixed link: https://realpython.com/blog/python/handling-user-authentication-with-angular-and-flask/#.VxPMsI1YR3o.reddit
http://learnpythonthehardway.org/book/
I mean it sounds like a good idea, but I also don't want to spam my codebase with a million and one consistency checks, especially within private functions, does the author have any suggestions for good balance? 
No need to pay. Go to /r/learnpython and check out that [sub's wiki](https://www.reddit.com/r/learnpython/wiki/index). it's full of free resources. I would start out with code academy. Then look at checkio.org for good practice problems.
Have you tried regular code academy yet?
I haven't looked at CA pro, but there is an enormous volume of great, free material online.
One extremely satisfied user here. Hypothesis is a really solid implementation, adapted well to Python, and with good features such as failure-case shrinkers. I first used it on a project where we needed to verify that a vendor's Python and non-Python implementations of an algorithm matched, and it found about a dozen cases that previous example-based testing had not. Since then I've been evangelizing for it at our firm. 
You dont know the first thing about statistics, do you? Sad. **Studying** at University. Doubtful. &gt; I'd love to know more about me You learn about yourself through experience. Im over 40 years old and i know A LOT about myself. Good luck child. FTR, I always adjust my communication for my target audience. That being said, i wish i was in my teens again. 
When you say "it doesn't run" what errors are you getting?
You don't need to have proper training to build a drone. You continually suggest that if you don't have a PhD you can't perform machine learning, which is ridiculous. I'm largely self-taught in the field of machine learning, with a passion that started my senior year of high school in 1990. Last year I achieved 47th place out of over 7000 contestants in a Monmouth Park season-long horse race handicapping contest with a system generated largely via machine learning. I don't know about your intent, but I'm not mistaken about what you actually wrote. Your attitude is also highly negative and your insults towards others do someone of your purported age and experience a disservice. I had occasion a few years ago to have an exchange with Gregory Piatetsky of KDNuggets fame. In opposition to your own attitude, he was both surprised and interested to encounter someone for whom machine learning was a passionate hobby. He asked questions about what resources I had used to learn and gave me encouragement and guidance on what I should do to pursue my interest further. You might want to consider adopting his approach to those expressing interest in the field.
/r/learnpython Also, format your code with two new lines and the four spaces per line: This is code Rather than three carrots: &gt;&gt;&gt; just an ugly quote
it just gives a general syntax error. I've written a new code that runs better. But I have to enter .4 as the discount. I want python to automatically calculate that discount and carry it two decimals. I'm trying to attach a picture now. 
#Get user input item_price = float(input("Please enter the item price: $ ")) item_clearance = input("Is your item on clearance (yes,no)?\n") #If the item is on clearance, discount item 40% if item_clearance == "yes": discount_rate = float(input("What is the discount percentage? \n")) item_price = item_price + item_price*discount_rate #Calculate the total price and round print("Your total cost is $", item_price, sep="") 
Actually, it's more like 15 elements for me (transforming an array of 2d points). YMMV.
Go to /r/learnpython to ask questions. /r/python is the wrong sub for this. Once there, read the side bar to learn how to enter your code in reddit so that it isn't formatted as an unreadable mess.
&gt;Even easier would be a screenshot of your text editor with your code in it. No! Dpaste or pastebin or something. They'll get yelled at for screenshots. 
okay I'll give that a try. Thank you.
 item_price = float(input("Please enter the item price: $ ")) item_clearance = input("Is your item on clearance (yes,no)?\n") if item_clearance == "yes": discount_rate = float(input("What is the discount percentage? \n")) item_price = item_price + item_price*discount_rate print("Your total cost is $", item_price, sep="") 
MistaP3anut I appreciate your trying to help. I'm new to Reddit as well. 
We've gotten a fair bit of traffic, and a fair bit of help. But there's a lot of stuff to be done, and game programming is hard. Ultimately, what I'd like, is an API where you can define blocks/tools/mobs sort of like a django model.
None of those feeds have the audio links suitable for a podcast app
https://thenewboston.com/
Actually, you're the one being heavily downvoted. I think this might be the resource that will help you most in your project: https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect Not trying to be rude, just interpreting the facts presented as best I can.
This is cool! What do you mean by "sort of like a django model"? I assume you mean something more specific than classical programming?
I'm working on a numpy based entity component system framework. It might be good for making something like dwarf fortress in python. Mostly posting here so I can tell you about it when it's in beta (or delta or whatever).
Hippo said it more eloquently than I could, but to reiterate, you're cutting off people who are either fully deaf or have hearing loss. Personally, I'm a hearing person, but I much, much prefer transcripts to listening to a podcast because I can read it at my own pace, and it also removes any kind of 'what did they say?' that may crop up.
I'm working on a data oriented ECS based on numpy arrays. With this, the systems can be vectorized with numpy ufuncs or numba.vectorize or cython. It will also make multicore reasonable. I have an unpublished example of a 55fps physics simulation using pymunk that went to 180 physics time steps per second and 550 fps, each on a seperate core with numpy doing all the polygon transformations. Anyway, just commenting so I can find you in a month when I have a public github. You might be interested.
Thanks, this makes sense.
[Ask them:](http://docs.godotengine.org/en/latest/reference/gdscript.html#history) &gt;After some experiments with Python, it also proved difficult to embed.
Hmm. I meant to ask this last time - have you looked at hooking into [minetest](http://www.minetest.net/)? It's basically a primitive voxel engine, plus Lua API (which is used to eg almost clone Minecraft). No sure how practical it would be, but hooking a powerful and Pythonic interface onto that would be really really cool - and comes with a substantial userbase!
* fist (maybe): a-b = a+(-b) * second a*b = a+a+...+a (b times) * third a^b = a\*a\*...\*a (b times) https://en.wikipedia.org/wiki/Ancient_Egyptian_multiplication for bonus points
Definitely. It's something that we're a long way off from though. Once we've got the client/server separation, that becomes a lot easier. Minetest defines a bunch of its own data types, and I want you to be able to define a block and its interactions in python. The whole duck-typing and multiple-inheritance thing is important. I'd like to see pycraft work as a generic server for all kinds of tile-based games, minecraft clones being one of them.
Here, you dropped this: " Seriously though, looks like a cool project!
Damn.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, we are sure you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
[removed]
 '"'
In terms of numpy, scipy, etc themselves I don't think it's caught on yet. Though [you can use Hypothesis to generate numpy arrays](https://hypothesis.readthedocs.org/en/latest/extras.html#hypothesis-numpy). There's been some interesting projects with people using Hypothesis in their research. e.g. [Axelrod](https://github.com/Axelrod-Python) use it. There are a few others but I don't seem to have them well linked and am currently blanking on what they are.
&gt; range(len()) returns a list containing all the items in the range IIRC In Python 3 it doesn't. You would have to use `list(range(...))` for that. In any case, wouldn't that mean that enumerate should be preferred?
Yes, enumerate should be preferred.
IIRC python -O removes assertions from the codebase. Would it make sense to have these checks as manual if statements rather than assertions?
I have a similar script, but instead of maintaining a separate list, I generate the list on the fly from the targets sub-folders. And I also use multiple targets, for different countrys, sources, content, etc. Regarding Code: - Your input-loop could use elif instead of all if (line 131 and below). Or you could use a dictionary which maps the input-value to corresponding methods. Not that it's necessary with that low number of commands, but if you either enhance the script with more commands, you could think about that. - The usage of .keys() at line 11, 83 and 113 is not necessary. data is a dict (I suppose) and the in-operator searches by default in the keys. But .keys() returns a list which makes search slower as the list grows, while the operator has a more efficient solution at work. - Similar at line 33. Iterating over a dict automatically goes over the keys. So the call to .keys() is here just a (minimal) performance-lose. - Line 40 could be changed to else. At for-loops the else is executed when the loop finishes normal. In your case, you use a break to to finish the loop if you found your target, so the else-case wouldn't be executed. That means you could also remove line 30 and 36. - Maybe you could also move line 121-125 in a separate function which returns data - Another things you could look at is parameter-passing to functions. You use data as a global accessible object, which is ok for a small script like this. But when things grow and code gets older, you want to know where your objects are coming from. So normally functions are called with everything they need to work properly. Another advantage is that this makes testing easier, which might be a thing you want to think about some day if you let your script grow bigger in the future, for example to mover other stuff too. 
"""""""
Gosh, people use python -O? Less facetiously: I generally get the most benefit out of my assertions during testing. This is because I fuzz my code to death as described in the article, but I recommend you do the same. :-) My general habits are: 1. Argument validation is done in an explicit if and throwing exceptions that match the user error. 2. Anything that should always be true even if the user passed entirely the wrong arguments to this function should be an assertion. That's not specifically to address this issue, but I think between that and heavy fuzz testing it probably does.
There's a sidebar, use it --&gt;
I'm not totally sure which applicative operation you mean by 'app' (I'm aware of applicative functors in the abstract sense and have some knowledge of their use in Haskell but have never really used them in anger). That being said, I think you're looking for the 'builds' strategy function in hypothesis.strategies? It's a bit closer to idiomatic Python than a stricter interpretation of the applicative interface would be. If that's not what you're looking for, could you elaborate in terms of what you'd actually expect it to do? :-) PS. I'm always looking for enthusiastic users to [add to the testimonials page](https://github.com/HypothesisWorks/hypothesis-python/blob/master/docs/endorsements.rst) if you're willing...
First of all this question belongs to "r/learnpython" subreddit. Secondly, if you interested to quickly get into scripting applicable for practical scenarios, check out - https://automatetheboringstuff.com/
Seems pointless. It will suffer from the 'lowest common denominator' problem, or be an unnecessary amalgamation of three projects which already have established python bindings and communities.
Ah, right. There's no particular reason it's not supported except that I hadn't thought of it because I hadn't seen a use case! There's not much in the way of strategies which generate functions in common Hypothesis usage right now. It works with zero difficulties, people just don't really do it. Do you have an example use case for why you want this? RE implementing it, you might want to try: def app(fstrat, *args, **kwargs): return builds(lambda f, *a, **b: f(*a, **b), fstrat, *args, **kwargs) 
Something tells me you won't have tons of users, considering the extreme proliferation of open source game engines/frameworks, but hope you have fun hacking on it and learn a bunch!
This.. if this works like it promises to work could be the greatest thing since sliced bread! Introducing npm to manage gulp/bower to manage assets/compilers/transpilers/minifiers means adding a lot of complexity and dependence into a project and I've always had to figure out ways around this. One way was to have a local and in-house npm caching server (solved A LOT of problems with npm being down or slow) but this, this is magic.
One method and one property to do the same thing? That's also something we'd have to maintain and explain to our users. It might be a good strategy to slowly deprecate the property usage over a few versions, though. Re: the "property that does heavy calculation" - who said anything about a *heavy* calculation? It's linear algebra with a 3x3 matrix.
Yeah I tried storm. It gave me inspiration for this project because it doesn't seem to support password or key management.
Here are the main libs: * [click](https://github.com/mitsuhiko/click) by [mitsuhiko](https://github.com/mitsuhiko) * [haxor](https://github.com/avinassh/haxor) by [avinassh](https://github.com/avinassh) * [html2text](https://github.com/aaronsw/html2text) by [aaronsw](https://github.com/aaronsw) * [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit) by [jonathanslenders](https://github.com/jonathanslenders) * [requests](https://github.com/kennethreitz/requests) by [kennethreitz](https://github.com/kennethreitz) Tests * [unittest](https://docs.python.org/2/library/unittest.html) with [Mock](https://pypi.python.org/pypi/mock) * [Tox](https://tox.readthedocs.org/en/latest/) * [Codecov](https://codecov.io/) with [codecov-python](https://github.com/codecov/codecov-python) Misc * [Travis CI](https://travis-ci.org/donnemartin/haxor-news) * [Sphinx](http://sphinx-doc.org/) Curious if there's interest in a Reddit version. 
eval("""'"'""")
I think he meant specifically the declarative part of the ORM. i.e. class StonePickaxe(Tool): durability = 1000 recipe = [ [Stone, Stone, Stone], [None, Stick, None], [None, Stick, None], ] def hit(self, block): ... Or something like that :P
Tbh I don't know if anyone actually expects -O to actually make the wheels turn faster in production but somebody might think "hey, why not?" and now they're being bitten by some obscure corner case that doesn't appear in testing (although I guess the program would be crashing in that instance so maybe there's nothing to worry about)
If you had started with OpenCV3 then you would see that the image type is simply numpy arrays, and all other libraries would do best to just support that. If I never saw a 1 line face detection example again I would be happy. 
&gt; But we found that converting images between different libraries is not always straightforward and there's a few edge-cases to be aware of. Willow is supposed to make it easy to get this right. I personally don't need to convert between Pillow and Wand, but I like it when people work through all those edge cases and make the results available in a library. Thank you for taking the time!
&gt;It might be a good strategy to slowly deprecate the property usage over a few versions, though. Yeah, that would be my recommendation, since it really is a function (that takes arguments) that does calculation and not just a getter/setter. I wasn't sure how heavy your linear algebra was, but even what you have is probably much more expensive than getting an item from a cache or something.
Man that would a fantastic way to add stuff to Minecraft. Or is that the current API for it? I wanted to look into it a long time ago but college got in the way.
it's a daemon that listens either on a tcp/upd port or queue for messages, parses them according to user specification, and stores the results on Elastic Search. Useful for log aggregation and analysis.
Oops, deleted my comment as I thought you had replied to me. Thanks. Dear all: always describe your project so we can give a shit.
Like Pyglet or something?
That's a good point, I didn't test it until now. Hey /u/Brontozavr, any chance you guys could set up the RSS feed to serve direct links to the media files instead of just embedding the SoundCloud player? I use gPodder/AntennaPod to listen to podcasts, and not being able to use the same "workflow" as I do with all my other podcasts is going to make my lazy ass less likely to actually listen to this :)
Does asynchronous IO *directly imply* Event-Driven? Does event driven need to be in all areas? or just IO?
Mocking seems like a good example: https://docs.python.org/3/library/unittest.mock.html
Could you fill me/us in on what is wrong with logstash?
Oh, I see. It's a coding style, I guess?
I have used ELK stack for a short while, and my experience with deploying ElasticSearch (java app) or Kibana (node app) have mostly been smooth. However, logstash (jruby app) kept giving me OOM caused by a plugin's memory leak. While the ELK team addressed the plugin leak, that change broke the package installer. And it took about a month for the new patched version to be released. So that was my rather frustrating experience with logstash. It is working well now. I do have to stress that ELK team was very responsive in their github issue tracker. And in general very helpful. However, it did "seem" like there were so many dependencies involved with each app which made maintenance rather shitty. (reminds me of leftpad) While our own use case for ELK was very simple, I understand for many heavy production use, there are huge performance issues that needed a complex "logstash-like" middle man to aggregate many inputs and output to an elasticsearch *cluster*, and logstash's features aren't simply bloatware, they were often added for a reason. Being a python-lover, I do see merit in Op's work of a simpler python logstash-clone that covers 80% of the simpler user scenario. Would saved a lot of headache, IMO.
how about /usr/bin/env python3 ?
Well, the definition for event-driven on that Wikipedia table is: &gt; a programming paradigm in which the flow of the program is determined by events such as user actions (mouse clicks, key presses), sensor outputs, or messages from other programs/threads asyncio provides the tooling for event loops in the standard library, that's why I said "since the inclusion of asyncio". Before that, you certainly could write event-driven Python in terms of that definition, but you'd have to create the event framework yourself or use a third-party module. Check some simple the examples in the [docs](https://docs.python.org/3/library/asyncio-task.html). You can see the "event" notion is definitely more integrated to the language than using using a third-party module in past Python versions, e.g. [gevent](http://sdiehl.github.io/gevent-tutorial/) or [wxPython](http://wxpython.org/Phoenix/docs/html/events_overview.html). 
Not sure what you mean by automatically, but the short answer is no. Not without some crazy hacks that would be specific to your problem, and way more work than just writing the functions. That said, the functions you're talking about have enough overlap that I'm positive you could generalize the problem enough to only have to write one function like `_modify_fov(angle)` and then the others could just be one liner convenience functions that make calls to `_modify_fov()` with preset arguments.
There is a trigonometric relation between the three. Here are the actual implementations I have: def fov_diagonal2vertical(fov_diagonal, aspect_ratio=4 / 3): ratio_diagonal = np.sqrt(1 + aspect_ratio**2) return 2 * r2d(np.arctan(np.tan(d2r(fov_diagonal) / 2) / ratio_diagonal)) def fov_vertical2horizontal(fov_vertical, aspect_ratio=4 / 3): return 2 * r2d(np.arctan(np.tan(d2r(fov_vertical) / 2) * aspect_ratio)) I don't need to go in the other direction because I know the diagonal angle anyway. I was asking in general.
I was trying to do it all on my own to learn how to do linear least square fitting. Now that I've done it, might not be a bad idea to switch over.
It's a little hard to follow your code and algorithm, but it looks like you're using nested dictionaries to represent a list-like data structure which itself contains elements that have a special record-like structure, right? A few suggestions, to start: 1. [namedtuple](https://docs.python.org/2/library/collections.html#namedtuple-factory-function-for-tuples-with-named-fields) is a very useful tool for organizing your data in this sort of application, and will eliminate many calls into dicts inside dicts inside dicts. 2. Taking it a step higher, you may wish to abstract away entirely the way you've organized your data, into some sort of explicit matrix-like container. Then, you can efficiently slice through different detectors or positions. 3. Dump memory after each iteration step. Abstract away your heavy number-crunching step into its own method, and call it for each iteration of your loop. After you call it, save the data to disk, then loop back to the top of the iteration, which should now also have a read step to read the last results. Doing this in a smart way may cause your program to run longer (file I/O), but you can limit the amount of data you have to store in memory at any one time. How much data are you processing when it sits on disk? 
Many items will have a pk, if they have unique state. But yeah, it wasn't a great metaphor.
You can still roll your own algorithms, just try using Numpy arrays and replacing loops with Numpy primitives. Replacing a simple: for i in xrange(my_array_size): A[i] = B[i] + C[i] with: A = B + C where A, B and C are Numpy.ndarrays will give you a huge boost. 
I did, yeah.
No way to do it far as I can tell. You can do a little by factoring out the `2 * r2d(...` bit into it's own function or lambda, but you'd still need to write the stubs for the individual functions and their domain specific modifications. The later ones could be done with function composition, which might save on work in exchange for performance. I'm not sure what your use case looks like, as far as how often you have to re-write these functions for various applications, but if it's often you can take a look at doing something like python's `functools.total_ordering` decorator. You can take a look at the implementation here: http://code.activestate.com/recipes/576685/ If you can define all the transformations you need in terms of the composition of one or two base functions, you could automatically generate the others for the user given the two base functions. Again, thats only useful if you find yourself re-writing these functions a lot.
I don't know a single thing about SQL, how does one get started?
This was recently published to /r/haskell. Despite Python lacking some of the concepts involved, you should probably have a look at their code. Edit : the link https://gist.github.com/rampion/f20ffd6386269e6f7e41fae15d208e12
How's your algebra? Write down the formula for each and then re-arrange by hand, that's what I'd do. You correctly guessed that its not possible for a computer to invert a function like that (maybe theoretically in certain circumstances, but nothing easy to use or normally available in python). It's a very rare situation that would save much work. 
Maybe if he had 300 million points. With 300k data points, this would be massive overkill. The problem must be something in how the data is being processed.
&gt; can't perform machine learning Nearly everyone everyday "performs machine learning." It is built into many software systems, most notably spam detection. Phds are scientists and anything less than that is not a professional scientist. Have you ever written any algorithm from scratch? Have you ever conceived of any novel algorithm? Unlike you have many publications and patents on the stuff i have done. I am certain you would not understand 98% of what i have done because you lack sufficient training. In all your arrogance, you probably think "I could figure that out." The answer is no, you could not. BTW, KDNuggets is a fucking joke. 
That is beyond my comprehension for now. Thanks for the link though.
If you have linear operations that can be described as a matrix multiplication, then it may be possible. For the general case, no.
Pulling in millions of lines of code of nonstandard python is not rewriting anything. Also, typo in your title means i do not trust anything you write.
Or, instead of by hand, give sympy a try.
What are you talking about; most businesses incorporate these clauses in their employment contracts, it's very common. Given the operational and IT-related risks it's almost negligent on the part of HR to exclude them.
Youre awesome. But im sure you hear that all the time.
This project uses the Duktape embeddable javascript engine. It is ES5/5.1 compliant. https://github.com/svaarala/duktape Some older benchmarks show it at the same order of magnitude as spidermonkey for parsing. JSON.stringify is an order of magnitude (*10) slower than spidermonkey though.
Really do appreciate the reply! Would I be better off just writing code on my own and hand copying via air gap between personal and professional workstations? As you pointed out, I'd think it would be difficult for generic code to have an IP challenge, especially if I rewrite it by hand each time, which is not out of the question. Also, I am writing the code on my own time, not company time. I would leave any and all references to company infrastructure out of the vanilla code. I am screen scraping a very popular and widely used OS, not at all specific to the company I am with.
What would prevent me from making my code freely available and then pulling the code from a repo and using that code at work. My employer already allows us to import code via PIP (with their pre-approval to ensure they're in compliance with the licencing, if any) and there is no implication from my employer that the imported code is exclusive and owned on their behalf. In this case, the code was not written on a employer owned device and was written to accomplish a VERY generic and common task that many people in my industry find themselves tasked with. I really do appreciate the dialog and acknowledge this is NOT legal advice :)
It means you have the wrong version of requests. The requirement is at least 2.9.1 and less than 3.0.0. You have 2.9.0.
I've got a few hours I can commit to helping with this, because it seems pretty great! Anything you want added, or feel is missing at this point?
The answer for very simple, strictly mathematical functions is yes. But that has to be taken with a lot of salt. Consider that (as /u/5225225 mentions) `hashlib.sha256` can't be easily inverted. Also, non-trivial updates to a mutable data structure are much more difficult to invert. I don't really have the time to write you a full mock up right now, but these are the components you'll need: Use `compiler._ast` and the `ast` module to create and manipulate the abstract syntax tree of your function. From this, you can get the names of your inputs, and the name of your return variable. Thus, you should be able to trace the use of your input variables over the function body, and invert them using some (potentially complex composition of) simple algebra. That should get you to where you need to be
The obvious plus about this one is that it's python :D
fyi, the team behind Influxdb are creating their own equiv of ELK, called TICK. The equiv of Logstash is Telegraf ... worth a look: https://influxdata.com/time-series-platform/telegraf/ It's written in Go, so it's not your language, but it's interesting that yet another middleman is available 
If you used pip, try `pip install -U requests` (for upgrade). Otherwise, please mention how you installed it exactly.
You might try reading some of these Jupyter tutorials: http://nb.bianp.net/sort/views/, and forming your own conclusions.
Actually, I am pretty sure, you cannot even prove that every function has an inverse. x^2 :O
Yeah, it's not even clear how you are doing the least-squares fitting in the code. Why is there a while loop? You should have some sort of convergence criteria on your fit instead of a fixed number of iterations! In general: - Use numpy to store your data - Use a something from scipy.optimize to fit your metric
&gt; the code was not written on a employer owned device The issue here has nothing to do with technology and everything to do with your legal, contractual obligation to your employer. There is no clever combination of technology that will work around the law here.
Ok that's what I was afraid of. I will play around with making it work on windows :( What about cross linux distro? I.e if I create an executable on red hat, will it (theoretically) run on debian, for example? 
In terms of speed and readability for numerical computations your best bet is to move over more fully to the numpy/scipy stack. If you really like having dictionary like structures you can used structured arrays: see: [`numpy.array`](http://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html#numpy.array). Also I've seen it mentioned in some places that using the general numpy ndarray is preferred over using the numpy matrix. It looks like both of your curve fits are polynomial fits so you will want to look at [`numpy.polyfit`](http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyfit.html). If you want more general least squares fitting see [`scipy.optimize.curve_fit`](http://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.curve_fit.html). There are definitely other places where you can move your computations to numpy/scipy, but essentially anywhere you can get rid of your own code for something written in numpy/scipy you'll be better off, definitely for speed, and often for memory efficiency because the low level c code can make memory optimizations not available in python.
This is a question best answered by /r/legaladvice That being said : &gt; difficult for generic code to have an IP challenge That's not how it works. "Genericness" is not a legal metric factoring into ownership of IP. &gt; Also, I am writing the code on my own time, not company time It really doesn't matter. Most companies have explicit clauses in your employment contract stating that they own all IP you come up with (even created on your own personal time). In fact, for certain employers (e.g. the government), it would even be illegal for you to not report the discovery of IP (again, even on your personal time). Furthermore, even if that clause is not explicitly in your contract, they could still easily sue you the millisecond you try to sell or give something away (and have a very very strong case against you). If your job even remotely involves the use of a computer, then any software you write very likely belongs to your company. The fact that the software you are developing is even remotely applicable to the job you are performing (as you stated above) makes it a slam dunk case for your company (regardless of how "generic" you think it is)! The ONLY exceptions to this (other than having an explicit document from your company assigning ownership to you) look something like this. You work in a shoe factory. You hand stitch soles all day long. You never get within 50ft of an electrical plug much less a computer. Your employment contract has no mention of IP. When you get home you are an amateur astronomer (nothing to do with sneakers whatsoever), and have developed some hobby software for tracking stars (nothing to do with sneakers whatsoever). The company "probably" does not have any claim over your IP, and even then you best find a good lawyer! If you really think you have a good idea, you need to quit IMMEDIATELY, wait a few months before proceeding, and then pray you never need any VC funds or to go public and that no lawyer ever digs up this post.
What have done to be awesome heh?
C++ template system is sometimes referred as Static Duck Typing. Duck Typing allows you to build generic algorithm that works for a lot of different type/class. The only thing that the user needs to do is implement the required function/operation and voilà. 
I really want a pure Python logstash replacement. I also really want it to not use elasticsearch as the backend. Are you planning to support other storage backends in the future?
Thanks for the reply... So rather than just printing the raw data out of the cursor, I should be using the fetch methods? are they valid for sqlite3 rather than mysql? 
Thanks, I'll check it out.
The while loop is there because I'm still writing the convergence criteria, this is not finished code. I do have a chi squared routine, but I'm getting rubbish, so I'm using a fixed number of iterations. I'm doing the larger of the two least squares fitting on lines 192-225. I wanted to do it pen and paper and implement it myself so I knew how it worked. The general consensus from everyone is more numpy, so I'll be migrating over tomorrow.
Maybe you could try scapy? http://www.secdev.org/projects/scapy/
Machine learning, that's very interesting. I've been wondering for a while if Python was any good for reinforced ML, do you know if it is? Bit off topic here, but whatever. 
I'm not entirely sure on how to test this! I don't see a run script, only the setup.py Adding examples might be a good idea, I would love to contribute!
I had the same with PRAW, imho it's a bug somewhere in its bowels.
You could consider using a numpy "memmap" in place of a numpy array.
&gt; If you had started with OpenCV3 then you would see that the image type is simply numpy arrays, and all other libraries would do best to just support that. Yes, but they don't. So either we can close our eyes and wish really hard for that to change, or we can sit down and write some actual code to solve the problem today. And then make it into a library. Oh look, somebody just did.
Sigh
&gt; on my bridge Exactly what sort of bridge? On what platform? Networking is a devil-in-the-details topic. Don't bother talking about python until you get all the other details sorted. 
Just quickly read up on it some, seems useful, thanks for the tip!
My primary programming languages are Python and C++. Once in a blue moon I use the C++ because it is faster. More often though I use C++ because it is pretty much the only tool for that job such as embedded or mobile. I find that with Python I will write something that at first, appears to be slow because of python but a bit of numpy or a better way of doing things and my code goes very very quickly. I would not complain about a speed up but there is one tradeoff that I would not like to make. The primary "speed" asset of python is development time. This is not only due to the wonderfully pseudo-code nature of python but because it is interpreted I will hit run and a very very short time later the program has begun to run. The far faster development time is often far more important than faster execution time. Thus I would not be willing to trade off any ease of development by say more strict data types, or any slowness of the interpreter(compiler) to produce faster bytecode even if the gains started to push python right into the region of C++. If either of these compromises were required to obtain speed increases I would say that they should be completely rejected if the gains are modest as the article states, or to be optional if the gains are substantial. 
If you need a GUI and a "batteries included" system, check out Pentaho. FOSS. If you're looking specifically just for a data pipeline where you can ETL in python, check out Luigi. If you *really* need scalability, I've heard great things about Apache Spark, which has a code engine that allows you to write python. (Spark is targeted for event streaming, versus batch processing, so you reduce lag with its architecture). HTH. I highly recommend using one of the systems/frameworks, or you'll end up with a bunch of coding floating here and there. See this post by Alooma, who makes an excellent data pipeline product based on Spark (if you can afford it, I can personally attest to their service quality.) https://www.alooma.com/blog/building-a-professional-grade-data-pipeline has some great insight into what you need to build into your pipeline.
The code is here: https://github.com/rjpower/falcon
If you *could* automatically generate general inverse functions, all cryptography would be broken.
It will if your build distro is old enough, and all external dependencies are met, usually the C standard library. It is better to build on an older machine to avoid unresolved symbols of a newer version of needed dynamically linked library. 
&gt;To evaluate this, we designed and implemented Falcon, a high-performance bytecode interpreter **fully compatible** with the standard CPython interpreter. Falcon applies a number of **well known optimizations** and introduces several new techniques to speed up execution of Python bytecode. In our evaluation, we found Falcon an average of **25% faster** than the standard Python interpreter on most benchmarks and in some cases about 2.5X faster. I wonder why the CPython team didn't implement those well known optimizations that are fully compatible and speed up the execution.
The CPython team is well known for sticking to well maintained, easy to read, and simple code above all else, even performance.
If you have ffmpeg tools installed you could leverage ffmpeg as a decoding filter to convert the ogg to wav on the fly. You can then use the wave module to read the wav. import wave import subprocess filename = "sound.ogg" command = ["ffmpeg", "-hide_banner", "-loglevel", "panic", "-i", filename, "-f", "wav", "-"] converter = subprocess.Popen(command, stdout=subprocess.PIPE) wav = wave.open(converter.stdout, 'r') 
You could set up a neural network with your inputs as outputs and outputs as inputs, and if they corolate well enough which is problem dependent, then the neural network would have a good chance at calculating the inverse. Would more then likely perform slower then coding it by hand, and may need a large training dataset. 
What do you think about rust? More type safety than C++. Same level of performance. Uses the LLVM backend so it can hit a large swath of embedded targets. Has a C ABI. No GC. Memory safe and doesn't leak memory. Just got the ability to do naked functions which allows you to inject little bits of ASM wherever you need it. Has a lot of high level language features like closures, templates, etc.
Sometimes the world is not so black and white. Most potential employees become much more pragmatic when your choice is signing the clause or having your house foreclosed and your kids go hungry.
Rust is pretty amazing, and IMO is going to take market share from C++ heavily over the coming years. 
Is there an empty line at the end of the file?
No, there is no empty line at the end of the txt. The lines in-between the products are not meant to be there too. My bad. So the format is like: x x x x x EDIT: Can't do it on reddit...
I think so to. I would bet that the place it really makes inroads in first is the embedded world for new projects. But who knows. It is still trying to get more of a foothold. It is pretty young, but I think with time it could really be something great (Having a low level language with a package manager is fantastic).
OMG, TURNS OUT THERE WAS AN EMPTY LINE. YOU DO NOT EVEN REALIZE HOW MUCH THIS MEANS TO ME. FOR DAYS AND DAYS, I HAVE BEEN TRYING TO FIGURE OUT WHAT'S WRONG(*coursework so it's pretty damn important*) AND YOU HELP ME FIX IT IN UNDER A MINUTE. I DON'T EVEN KNOW YOU, BUT I LOVE YOU. &lt;3 &lt;3 &lt;3
Usually podcasts just do 'show notes' that include code samples, links, and descriptions.
 print "Prom?"
So if you'd just printed data every time round the loop, you would have seen what was going on. Programming requires many many hours of frustration but eventually you start to remember what stupid thing you did last time.
Oh good! Now we have a speed-focused interpreter named Falcon from Cornell to go with the speed-focused [Falcon web framework](http://falconframework.org) from Rackspace. It'll be Falcons all the way down soon. 
I was also curious about this since I've written plenty of similar code in the past. I was just looking at creating the geometry in sympy and seeing if I could model the geometry in a way that would allow you to provide any two of four of ratio, diagonal, horizontal, vertical and get the others. I think it is probably possible, but I'm giving up only part way there, I don't have much knowledge of sympy. This is where I'm at: import sympy from sympy import symbols, Point, sin, cos, atan from sympy.geometry import Line, Segment # Diagonal (length of), Vertical (length of), Horizontal (length of), ratio D, V, H, r = symbols("D V H r") origin = Point(0.0, 0.0) slope = 1.0 / r theta = atan(slope) # A is where diagonal meets vertical (upper right) # B is where horizontal meets vertical (lower right) A, B = symbols("A B") A = Point( D * cos( theta), D * sin( theta)) B = Point( D * cos( theta), 0.0) Diagonal = Segment(origin, A) Vertical = Segment(B, A) Horizontal = Segment(origin, B) V = Vertical.length H = Horizontal.length print "vert given diag" RATIO = 4. / 3. print Vertical.subs(r, RATIO).subs(D, 5).length print "horiz given vert" print Horizontal.subs(r, RATIO).subs(V, 3).length Which outputs: vert given diag 3 horiz given vert 4*sqrt(D**2)/5 the 2nd one is correct given D=5, but I'm not sure why it isn't solving itself. Otherwise, if you have an equation y(x), wanting to find an x value for a particular y value is kind of like finding the roots of "g(x) = y(x) + value". I think sympy also has some numerical root finding algorithms, which I haven't used, but it should work on a much broader class of problems than what can be solved symbolically, while being much slower.
its not really a matter of opening the ogg. From what I've read, ogg is a compressed, lossy format, and what I'm actually trying to do is get the waveform so I can do some dft analysis on it.
working on getting better 
Many apologies! I've added some documentation - please let us know if that doesn't work for you :)
Oh yeah, ridiculous amounts of money have been thrown at javascript interpreters.
thank you, you just saved my ass xD
write it at home, during non-work hours, publish it to a code repository. Then ask your boss for permission to use it at work. 
icarus@Mjolnir:~/Downloads/pymedia-1.3.7.3$ sudo python setup.py build [sudo] password for icarus: Using UNIX configuration... OGG : found VORBIS : found FAAD : not found MP3LAME : not found VORBISENC : found ALSA : not found Continue building pymedia ? [Y,n]:y running build running build_py running build_ext building 'pymedia.audio.acodec' extension x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fno-strict-aliasing -D_FORTIFY_SOURCE=2 -g -fstack-protector-strong -Wformat -Werror=format-security -DBUILD_NUM=1888 -DPATH_DEV_DSP="/dev/dsp" -DPATH_DEV_MIXER="/dev/mixer" -D_FILE_OFFSET_BITS=64 -DACCEL_DETECT=1 -DHAVE_MMX=1 -DHAVE_LINUX_DVD_STRUCT=1 -DDVD_STRUCT_IN_LINUX_CDROM_H=1 -DCONFIG_VORBIS -DCONFIG_VORBIS -DCONFIG_VORBIS -DHAVE_AV_CONFIG_H -DUDF_CACHE=1 -INone -INone -INone -I/home/icarus/Downloads/pymedia-1.3.7.3 -Iaudio/ -I/usr/include/python2.7 -c audio/acodec/acodec.c -o build/temp.linux-x86_64-2.7/audio/acodec/acodec.o In file included from /usr/lib/gcc/x86_64-linux-gnu/5/include/stdint.h:9:0, from /usr/include/python2.7/pyport.h:13, from /usr/include/python2.7/Python.h:58, from audio/acodec/acodec.c:27: /usr/include/stdint.h:55:27: error: conflicting types for ‘uint64_t’ typedef unsigned long int uint64_t; ^ In file included from /usr/include/python2.7/pyport.h:9:0, from /usr/include/python2.7/Python.h:58, from audio/acodec/acodec.c:27: audio/inttypes.h:57:17: note: previous declaration of ‘uint64_t’ was here typedef UINT64 uint64_t; ^ In file included from audio/libavcodec/avcodec.h:14:0, from audio/acodec/acodec.c:31: audio/libavcodec/common.h: In function ‘skip_bits’: audio/libavcodec/common.h:571:17: warning: variable ‘re_cache’ set but not used [-Wunused-but-set-variable] OPEN_READER(re, s) ^ audio/libavcodec/common.h:393:13: note: in definition of macro ‘OPEN_READER’ int name##_cache= 0;\ ^ audio/acodec/acodec.c: At top level: audio/acodec/acodec.c:207:2: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types] (inquiry)acstring_length, /*sq_length*/ ^ audio/acodec/acodec.c:207:2: note: (near initialization for ‘acstring_as_sequence.sq_length’) audio/acodec/acodec.c:219:2: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types] (getreadbufferproc)acstring_buffer_getbuf, ^ audio/acodec/acodec.c:219:2: note: (near initialization for ‘acstring_as_buffer.bf_getreadbuffer’) audio/acodec/acodec.c:221:2: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types] (getsegcountproc)acstring_buffer_getsegcount, ^ audio/acodec/acodec.c:221:2: note: (near initialization for ‘acstring_as_buffer.bf_getsegcount’) audio/acodec/acodec.c:251:2: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types] &amp;acstring_str, /* tp_str */ ^ audio/acodec/acodec.c:251:2: note: (near initialization for ‘ACStringType.tp_str’) audio/acodec/acodec.c: In function ‘ACodec_Encode’: audio/acodec/acodec.c:668:5: warning: pointer targets in passing argument 2 of ‘avcodec_encode_audio’ differ in signedness [-Wpointer-sign] sOutbuf, ^ In file included from audio/acodec/acodec.c:31:0: audio/libavcodec/avcodec.h:1597:5: note: expected ‘unsigned char *’ but argument is of type ‘char *’ int avcodec_encode_audio(AVCodecContext *avctx, uint8_t *buf, int buf_size, ^ error: command 'x86_64-linux-gnu-gcc' failed with exit status 1
My sensible chuckle for the day. 
Always put a string before your data when printing, at the very least to see None or an invisible string.
You could just use nano or vim as a text editor in one virtual terminal window, and another with gcc where you compile it, run it, and maybe test it in gdb. The process you described exists, But it is by no means the only process, Many people prefer a more minimalistic approach, even if it isn't exactly as I described. Python likely is fast to interpret, And definitely to write, But I'm not sure that you make out C/C++ programming to be as it is, or at least can be.
&gt; Panda3D has Python bindings, and it seems... usable. Uninspiring, and given that I'd only be doing 3D to make VR stuff I really need the plugins :(
Cool thanks!
https://en.wikipedia.org/wiki/Thomas_J._Watson#Famous_misquote
I wrote [pygmaps-ng](https://github.com/Permafacture/pygmaps-ng) for myself because this comes up for me a lot.
&gt; You can create a virtualenv, install a library with pip, program something in python in 20 minutes, pip freeze it, and then get the same thing running in another machine in the time it takes to install python and the requirements which takes one command. Can you point to a good "how to" on doing this kind of thing? It doesn't seem to be something that's covered in common "how to program in Python" books and articles. I suppose because that's more about work-flow than the actual programming.
BTW, if anyone wants to understand the magic behind dask - then have a look at timing of converting numpy array into dask array chunks in this example (darr = da.from_array(arr, chunks=arr.shape[0]/cpu_count())). On my machine it took about 6 seconds! So it is not completely fair against other approaches.
You might get a little more help over in /r/learnpython, but I'll give you a couple of pointers in the right direction. For working with filenames take a look at the [`os` module](https://docs.python.org/3.5/library/os.html). You say the receipts are pdfs, depending on how they were made to get the text you may need to do OCR which can be pretty complex. However, you might get lucky and be able extract the text using [popper-utils](https://en.wikipedia.org/wiki/Poppler_\(software\)). I think this is doable for a beginner, but you're gonna maybe want to run through a few tutorials first. 