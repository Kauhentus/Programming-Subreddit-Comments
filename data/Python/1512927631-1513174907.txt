Yep, we'll be online during business hours EST tomorrow
How is it never updated? I see the condition being met and xfunction (length-1) as a result
&gt;why wouldn't it eventually become as does the if statement? Well, because already in the first call of `xfunction`, `length` will always stay 5. It will never change. It will still make the recursive calls to `xfunction`, but eventually it will end up calling `xfunction(1)` endlessly.
Step through every line of the loop and figure out what the value of `length` is at that step. 
It is set to 5 at first, which makes the while x &gt; 1: evaluate to true. I don't see how it is any different?
You're not doing every step. Do `xfunction(2)` with pen and paper. 
I understand it would infinitely loop after that but wouldn't it have already printed 4 3 2 1 by the time it has began to loop infinitely?
isn't it one of the most recommended modules in tutorials for cli apps? at least that's been my experience so far
Read answer E again. It doesn't say that nothing is printed, it just says the function runs infinitely. 
Regardless, why doesn't the if statement continue to check if length &gt; 1 as does while? Wouldn't it need a break command to stop it from looping
1: /r/learnpython 2: BeautifulSoup
thx for your suggestion!
Answer E doesn't say that the second function wouldn't print 4 3 2 1 before it loops infinitely. In fact it should print 4321111111111111... And so on. 
pyspark! The Python API around Apache Spark has been the most exciting Python thing I've played with in recent memory https://spark.apache.org/docs/latest/api/python/index.html I still want to try this fast web server someday https://github.com/squeaky-pl/japronto
Wow, that's really cool. Nice job.
I agree. https://github.com/gerryjenkinslb/download_emails
What is the 3.4 syntax, can't it be coded to work on both?
Yes, I use the new f string format which I really like in 3.6 You will need to either upgrade or just find the f strings ( f' or f") and convert them to string.format. So the f string on line 31 you show would be replaced with 'Rfc822msgid:{}'.format(s)
pygsheets is nice, I also used it in one project, but I found out that the actual google sheet is not always available for some reason... i.e. gc.open() might not always return the actual object, so there needs to be some strategy to check for error and retry again.
Also betamax, it’s kinda the same thing.
The first function uses recursion to loop: it calls itself. The way you stop recursion is by returning without calling yourself again. The second function uses recursion *and* iteration: it calls itself inside a while loop. The way you stop iteration is with `break`, or by updating variables so that the iteration condition is no longer true. 
I used takeout a few years ago, but when I tried to use the files downloaded I still ran into to several char encoding errors since my email go back a decade. Also it took hours to download 100k+ emails.
Perfect.
I don't mean to be rude but it's very unwise to dismiss a tool for being, in your opionion, targeted at "kids"
Maildir would still have the char encoding problems. I also would still need a program to parse the parts so I could do some analysis with flexible queries. Which is why I put it into json for now. I will next be working on something to then build a database to run queries against.
Have you read about environment.yml? [Official docs](https://github.com/conda/conda-docs/blob/master/docs/source/user-guide/tasks/manage-environments.rst#id22) and perhaps [this](https://tdhopper.com/conda/) will be helpful. If this didn't help, consider providing a more specific example of what exactly happens when you pull changes, what files do you keep in source control, which do you ignore and so on.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [conda/conda-docs/.../**manage-environments.rst#id22** (master → 95ce50d)](https://github.com/conda/conda-docs/blob/95ce50d5598195e9cff7dbbb635ed7c3d98f7db5/docs/source/user-guide/tasks/manage-environments.rst#id22) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
I also like pyspark. Getting it setup correctly has only gotten easier and it's cool being able to use it from a Jupyter notebook
Oh I'm sure it is. Still plenty of people have never heard of it, considering how popular Flask is its kinda weird. 
Sauce please. 
Trio looks nice from the glance. Especially the stream interface seems thought-through which I also found a bit lacking in asyncio
I was solving a specific problem, and I did not need the actual attachments, just size. But it would be easy to download them in the walk loop.
use anaconda to create a conda env and all your problems will be fixed. https://conda.io/docs/user-guide/tasks/manage-environments.html
Ok, I'll give you the whole code, just one sec
I'm really interested but I have done time constraint that maybe don't go with your planned schedule. About what time you expect the people use?
Sounds great! Where do I sign up? Also, I don’t have a whole lot of free time these days, but when I do I’d love to direct it towards something like this
I'm planning to let this run over a few months now as an experiment. Honestly, I expect most of it to peter out and people to lose interest after a few weeks, but that'd be enough to get me to work on my skills and groundwork. Either way, pitch me a project you'd want help with. 
Here, or in a private message. Pitch me a project and I'll see where it starts!
&gt; it does force the dependency on SQLA to a higher level and lets your application depend on an abstraction it defined. Aye, people underestimate the value of defining _really dumb_ abstractions in your application and depending on those. It's a huge win for testability and extensibility at very little long-term cost. I want to write about that at some point with a few examples that have come up from recent teaching and pairing sessions. &gt; Was wondering if you had a repo somewhere with a fuller example of this. Well there's the repo for that series: https://github.com/bobthemighty/blog-code-samples/tree/master/ports-and-adapters Part V, when I write it, is on how I'd use a dependency injection framework to do this, and I play with some ideas on using type hints to identify dependencies. Parts 6 &amp; 7 are likely to be about unlearning my Java/C# biases and re-expressing the same things in a more naturally Pythonic way. Whether that's better or not, I'm unsure. The Unit Of Work that's in use in that series has some bugs around event-raising. I spent a painful few hours debugging that, and I have something that's fecking ugly, but functional. I want to tidy it up (and fix a potential perf issue) and then I'll throw that up there, too. Is there something specific you want to know more about? Suggestions are always welcomed.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [bobthemighty/blog-code-samples/.../**ports-and-adapters** (master → 8c2ad67)](https://github.com/bobthemighty/blog-code-samples/tree/8c2ad67dc22b2d1412b6f24ae800be816ba81477/ports-and-adapters) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
Interested.
[pyfilesystem](https://www.pyfilesystem.org) makes working with files and directories in the cloud or in archives as simple as your local drive.
Yeah, you'd just have to use a syntax that was more compatible. f-strings are just a shorthand way of using .format(). The following lines output the same string: test = "variableValue" print(f"This is my {test}.") print("this is my {}.".format(test)) The new f-string format allows you to embed the variables into the string itself rather than relying on the *args param of format. It makes the string easier to read when reviewing the code. In this case, you'd have to go through and replace all the f-string syntax with the .format() equivalent, then try again in 3.4 and see if anything else breaks.
Pitch me your project then.
https://github.com/pypa/setuptools_scm Will auto-derive a version number for your python packages based on your last SCM tag &amp; commits.
(In C++)[https://pastebin.com/eGGYgykN] this is the one currently in use (In Python)[https://pastebin.com/8ixEe34h]
Interested. Will PM you.
I would say beautifulsoup. Before I used to parse HTML by regex, which is brutal. BS makes parsing HTML very smooth. 
How about creating two micro services, one for the main site, one for the watcher, and use Docker compose to connect these two services. 
So no f-strings? Gross.
I have multiple project ideas that are currently beyond my abilities. However there is this one project that I’ve actually got working, but it’s more than just python. There’s also hardware and scripts and cronjobs. It’s an interface for pool controls using a Raspberry Pi, which controls the relay switches and runs a flask server for the user interface. There’s a simple task scheduler that uses cron to send http requests to the flask server as well. Schedules are held in a sqlite database. This is my first time ever making a useful flask app, and the first time ever using a database. I used to use csv files, and it might be easier to go back to using them again. With only a couple schedules ever being made, a sql database seems a little like overkill. I do enjoy learning about sql though, so that’s why I am using it now. I really have a problem with code structure, code review, documentation, and workflow (hence my original reply to your post). I was rewriting new versions of the code on the Pi itself while running the “stable” version, which got messy. I’ve been learning the basics of git/github lately and I want to start organizing my code in an efficient and effective way through that. If I have time later, I’ll try to get something up on github to share. Thank you for taking your time to help others! I’m glad I stumbled across your post. Even if I don’t get my shit together, I’m interested to see how others benefit from your help.
Thanks, I'll give them a read.
Alternatively, hop over to r/learnpython and we'll do the same thing in a more crowd-sourced way. OP, we'd love to see you there!
Now this seems like an pretty awesome project, and like pretty much the poster boy of the kind of thing I'd like to teach from. SQL (especially SQLite) is pretty much a perfect replacement for CSV files, so I think you're on the right step there. Send me a private message with the repo, and I'll take a look at what's there, and where to work towards from there?
 Honestly, the /r/learnpython crowd are great for learning _python_. But as said, this is about taking the step beyond just learning the language. I'm really not planning to be teaching a lot of _python_ for this, at least not more than past the points of having someone to ask / review code does. 
The forum post shows “...Clear(option = “C”)” while the code you linked there is “...Clear(“C”)”. The first is a keyword argument, the second is a positional argument. If he error is that keyword arguments aren’t supported, then you should probably use positional arguments. But the linked code there does so this entire thing is very confusing. You really should cut down the problem to the bare minimum and include full stack traces when posting. This is the same as including the methods and data in science. Also you are using del on variables at the end as “cleanup” but that doesn’t actually do anything as it’s the end of the script and they will be removed automatically anyway. 
Looks like someone's researching their upcoming blogspam post! :)
This was bugging me, so I just checked pep484 (type hinting) again and found this line -- &gt; The type system supports unions, generic types, **and a special type named Any which is consistent with (i.e. assignable to and from) all types.** This latter feature is taken from the idea of gradual typing. Gradual typing and the full type system are explained in PEP 483. (Emphasis mine) Looking at this article, it actually even shows the use of Any about halfway down
Beautifulsoup is one of the most popular packages out there though, right beside requests
If you mean storing code, you'll want to learn git. Common hosting sites are Github, Gitlab, and Bitbucket 
I'm interested.
What's your project and what do you perceive as your problems?
&gt;codes Scientific computing by any chance? :D
I am! Will PM you. 
Is this really that rare? It's the only thing we use in my organization.
My github profile is here. Sorry for not supporting English https://github.com/phillyai I don't know what is good architect, or not. I cannot describe exactly what is my problem is.
This. Exactly. 
[These videos](https://www.youtube.com/channel/UC_fc9sQJlBZ_2gVxjratNpw) are all generated using Python.
You should also really consider using functions. The entire code is a mess and very hard to follow since it's all global variables. Line 328: c_2.cd(1) scale = 1/hist_met_mass_2.Integral() hist_met_mass_2.Scale(scale) hist_met_mass_2.Draw("H") c_2.Update() c_2.cd(2) scale = 1/hist_lepton_mass_2.Integral() hist_lepton_mass_2.Scale(scale) hist_lepton_mass_2.Draw("H") c_2.Update() c_2.cd(3) scale = 1/hist_jet_mass_2.Integral() hist_jet_mass_2.Scale(scale) hist_jet_mass_2.Draw("H") c_2.Update() c_2.cd(4) scale = 1/hist_w_mass_2.Integral() hist_w_mass_2.Scale(scale) hist_w_mass_2.Draw("H") c_2.Update() c_2.cd(5) scale = 1/hist_whole_mass_2.Integral() hist_whole_mass_2.Scale(scale) hist_whole_mass_2.Draw("H") c_2.Update() This would be much better as a function and then some calls: def foo(index, x) c_2.cd(index) scale = 1/.Integral() x.Scale(scale) x.Draw("H") c_2.Update() foo(1, hist_met_mass_2)) foo(2, hist_lepton_mass_2) foo(3, hist_jet_mass_2) foo(4, hist_w_mass_2) foo(5, hist_whole_mass_2) (use a better function name than foo and a better argument name than x) addable_total_lorentz_jetdata = addable_total_lorentz_jetdata+addable_lorentz_jetdata prefer the easier to read: addable_total_lorentz_jetdata += addable_lorentz_jetdata mass=addable_lorentz_metdata.Et() hist_met_mass_2.Fill(mass) prefer: hist_met_mass_2.Fill(addable_lorentz_metdata.Et()) Your code is also chock full of numbers that makes no sense to me. What is a criteria 1, 2, 3? Could be better names probably. This is especially hard to understand: if abs(lepPdgId.at(i))!=11 and abs(lepPdgId.at(i))!=13 : 11 and 13 are special why?! #It's troublesome to do math with pointers, so we create this non pointer variable addable_lorentz_leptondata = lorentz_leptondata That comment seems to have been left over from C++ because there are no pointers in Python. Reading the C++ code it's also a mess with quite bad C++ programming style. You should ask for help on modern C++ usage on some C++ forum or something. If this is the style of C++ they teach at your university you should sound some kind of alarm and try to get someone more competent to teach.
It's fine that you're not in English, although that might make this a bit more difficult. Let's see, there's a ton of small projects there, some C# and some Python, nice work on splitting it up, many things with screenshots (yey, I can understand that) Overall, many single-file projects that do one thing, has a few dependencies, it's pretty good, for small things you usually don't need more than that. So. What project do you want help with, or is it a general thing?
A new option if pyimgui. Advantages include less cognitive load than traditional GUIs, and simply a lot more lightweight. It includes examples to work with pyopengl, cocos2d and others and is installable with pip. Disadvantages are that it has its own look and feel and doesn't try to fit in with your native GUI - but for many kinds of app this is down to personal choice if this matters to you.
Then let's see this one. https://github.com/Big-BlueBerry/bigblueberrybot It's simple slack bot using flask that works on heroku. Yeah, codes are totally messed up. Python makes me code like this, just write code that only works. But not in C#, I think. I can refactor that code but I don't want to because it is python, and that's all. What should I do?
This is physicist C++, it's not going away any time soon! 
Make a runscript that finds every line with a print statement and automatically add the parenthesis. Then runs the python script.
I must say it pains me to see this tagged as "Sustainable Development", since there are still pesticides involved. But I'm glad you are at least trying to reduce the pesticide usage.
Thanks for this, are you interested in Flask projects?
I'll start by filing issues then! 
Yes, errors in included partials are silenced in django. It's going to change in django 2.1: * https://stackoverflow.com/a/43760725
Sure. I'm not limiting this on any kind of project, as it's going to be more about the organization _around_ the project, than about the code. 
&gt; The Unit Of Work that's in use in that series has some bugs around event-raising. I spent a painful few hours debugging that, and I have something that's fecking ugly, but functional. I want to tidy it up (and fix a potential perf issue) and then I'll throw that up there, too. I'm gonna guess was a 2PC issue, e.g. the database commits but then flushing the events out fails for some reason. &gt; Is there something specific you want to know more about? Suggestions are always welcomed. The only thing I'm particularly wondering about is advice for migrating an application to this sort of architecture. Starting an application with this sort of mindset is one thing, but bringing one that just does whatever wherever is getting to be overwhelming and I'm not sure if re-writing it would be any better. I suppose the other would be testing a situation that causes a rollback. Looking at your code, the fake repos write directly to its entity set on add. However, if I'm testing a situation where I need to assert that a rollback causes some entities not to be persisted that doesn't work. I'd expect something like this might work, but I'm not sure if it's worth it or not: class Storage: def __init__(self): self.persisted = set() self.pending = set() self.deleted = set() def commit(self): self.persisted.update(self.pending) self.persisted = self.persisted.difference(self.deleted) self.pending.clear() self.deleted.clear() def rollback(self): self.pending.clear() self.deleted.clear() def add(self, entity): if entity not in self.persisted: self.pending.add(entity) def remove(self, entity): if entity not in self.pending: self.deleted.add(entity) else: self.pending.discard(entity) class FakeUoW: def __init__(self): self.storages = defaultdict(Storage) @property def issues(self): return FakeIssueRepo(self.storages['issues']) def commit(self): for storage in self.storages.values(): storage.commit() def rollback(self): for stroage in self.storages.values(): pending.rollback() # this could be a base class for all others class FakeIssueRepo: def __init__(self, storage): self.storage = storage def add(self, issue): self.storage.add(issue) def remove(self, issue); self.storage.remove(issue)
 @property def tries(self): return self.__tries @tries.setter def tries(self, val): if self.__tries &gt;= 5: self.__tries = 0 else: self.__tries = val Putting the check in a loop, lol
Thanks, I will check it!
1) see my comment above 2) read the side bar 3) read the language primer on python.org
a template filter inside a template that was included in the master was broken yes, but there were no errors in the tests, it just silently didn't include the "broken" partial into master
third party code?
I agree with you.
thanks, this clears it up.
ooh fancy, I like it. 
Thats's a really cool thing of you to do. I'd definitely be interested. About a year and a half ago I picked up again on a really old project of mine, a [podcast client](https://github.com/brokkr/poca/). I think I've come quite far with it in the time since - adding multithreading, logging, taking PEPs seriously and so on - but I suspect that there's still a lot of improvement to be made in the quality of the code. Seeing as I recently hit 1.0, I'm also considering fresh projects but this is still my main focus. 
2to3 is a thing, but not perfect. I'll just stick to grumbling while wasting parenthesis.
 Forgot about the goals, right. I'm mainly interested in approaching a more professional style with regards to workflow and code structure. Should I construct a new class here rather than adding a bunch of functions? What should I pass as arguments here, the entire instance of just the one string I need? How do I construct my modules and classes so they might theoretically be useful to others as well as my own script?
TBH I'm a bit confused how you use 3.6 and dont know about property/decorators. Fairly certain this is from 2.x
I’ve seen my share of scientists code :(
Ok, every code your code depends on and you haven't developed it. You're not expected to write tests for that kind of code except testing it as a collateral in your functional/integration tests.
Sounds great! Looking forward to it. I’ll try to throw something together ASAP
You're like who I'm trying to grow into :) I've been doing IT for 10 years or so and recently hopped over to dev. I started out doing batch and powershell scripts. Eventually picked up python and doing a "utility" with it enabled me to land my dev job at same company I was doing IT at. Bossman has been wanting everything to be C# or C++ if at all possible. So I'm really wanting to hunker down and focus on that. Never heard of FLOSS so at very least I'll look up what that is
Cheers, that's a pretty cool project! First things first! ## Documentation You've got it, that's awesome! It covers all the essentials, what it is, how it works, and how to install it! The one thing I'd recommend is "how do you contribute". Mentioning issue tracker, how to run the test-cases and how to check out the project. ## Releases Nice work on tags and tagging releases up to the 1.0 release, however, there's nothing in the tag on what changed for version 1.0! For next release, try to keep a short list of things changed / built to help your users and yourself. ## Issues Some good space on the issue tracker, I'd suggest putting more focus on linking commits to Issues ( tracking issue # in the commit message) ## Review and requests Your MR branches are _way_ too large, dozens of commits in a small jungle that touches code all over the place. This is a place to focus on getting things down to par. Start with the labels of them `Singleprocess` Whut? I'm looking here afterwards, and that title might explain something, but there's no description and following. ## Commit messages This is probably the main place where you can improve. Commit messages ought to have the following: Subject line: Just like email, Brief, explaining what's below Body that explains _why_ something happens. `urlgrabber replaced by requests, no progress meter` Good, snappy subject, but why did this change happen? The commentary doesn't explain that. Then comes the next part, "what's on the label is not in the tin". Why is a commit named `urlgrabber replaced...` changing `poca.example.xml` Why is it also removing `eyed3` ## Rebasing and branches Looking at most of the last commits, they all look like things where the code probably should not have been pushed to the `master` branch. Small, repeated changes to documentation to see how they render should be on their own branch, reviewed, and maybe `squashed` together. ( GitHub has documentation on how they do it [on their blog](https://github.com/blog/2141-squash-your-commits) 
I'll spend some time on this tomorrow. Thanks!
Related question: What would someone without a CS degree need to show/demonstrate for a unix/linux SysAdmin job?
Cheers, Good ambition to have. FLOSS is __Free, Libre, Open Source Softwar__ and is sometimes called the "Open Source" movement, but with the focus on freedom of the end user. It's basically a commons attitude towards things, that software works better if it's for everyone, and trying to foster cooperation and community. 
Subjective call on both the library and docs for sure. There is a difference between documentation existing, and documentation being useful. At the same time, contrast wxpython docs against something like Django and you tell me which is easier to use, regardless of your experience with the library.
So how do you view the sidebar on an iPhone app?
2. He’s a beginner so you have no idea what he is using. Also considering the OP is new and asking for help you should provide that help without being a douche about it.
Tell you this: The OP is probably a teenager looking for advice. Help them out without making them feel like an idiot for asking for help. Again you’re a douche.
SysAdmin is difficult. There's a bloody ton of _trust_ in a SysAdmin, they have the keys to the kingdom, so it's something you don't want to give to just anyone. For me, showing a good understanding of networking and troubleshooting, discipline in documenting things and so on. If I'd tip someone who were to be coming to work with me in the future? Pick some tasks, and start a blog &amp; GitHub repo for it. a. Pick sysadminy "Hype" things to learn. b. Write about it in clear and concise way showing ability to communicate c. Document the process of getting there Some examples that could be relevant: - Setting up fail-over postgres - Deploying some tech stack on Kubernetes - Setting up a TLS CA from scratch - Automating deployment of certain switches (expensive, requires hardware) - Securing a Linux machine via Egress-only filtering (IE, proxies, white listing, etc.) - Automating deployment from Foo system ( after review) - Monitoring of some funky software If a subject is able to learn and document things like this, they show _ability_ which goes far beyond a degree.
You google it, you lazy schmuck. I could tell you if you told me which ios app you were using. For the one I use, you click on the 3 dots in the upper right hand corner of the sub you're viewing, and pick "community info". None of this is rocket surgery...
I'm a big fan of pyQuery.
Thank you. That's my main goal.
If you pay attention, you'll see that I provided all the info OP needs to get going. What did you do? You replied 3 times to the same comment and provided nothing useful. Truly, you're an asset.
Which string are you upper or lower casing? What if you did .lower on _their_ input?
Hi, I'd be very interested in taking you up on your generous offer. What do I need to do to participate?
&gt; I'm gonna guess was a 2PC issue, e.g. the database commits but then flushing the events out fails for some reason. No, it's knottier than that. The way that version tracks entities is stupid and doesn't work very well. I ended up with duplicate events and things blowing up. Sad face. &gt; if I'm testing a situation where I need to assert that a rollback causes some entities not to be persisted that doesn't work. So that's the kind of thing that I wouldn't ordinarily test, it's axiomatic. If I wanted to test that, I'd test it by using a real SqlAlchemyUnitOfWork and some real data against a real database. There's not much point in mocking out another layer underneath the UOW because that's already your abstraction for the port. I'd just integration test my implementation to make sure it does the right thing. I can test that a FakeUnitOfWork was rolled back by setting its `was_rolled_back` property from the `rollback` method. If I can verify that a handler calls rollback, and I can independently verify that rollback causes things to *not* be persisted and events to *not* be raised, then I'm done.
&gt; wxPython is similar to tkinter but uses native widgets, so it looks a little more modern, but it's not that active There are regular emails on the users and developers mailing lists. Quoting [wxPython API Documentation]() *Welcome! This is the API documentation for the wxPython Phoenix pre-release snapshot build 4.0.0rc1.dev3510+3a2ecb7, last updated 28 November 2017 from git revision: 3a2ecb7.*
The input is like this player = raw_inpit("Pick between rock, paper and scissor: ") then i have if player == 'Rock'.lower() and player2 == 'Scissor'.lower(): print 'You won!' break And that countinues for the rest of the cases. If i remove the .lower it will only accept uppercase letters. 
The Zope, Plone, ZODB, BlueBream, ZPT, TAL web framework. https://plone.org/ https://en.wikipedia.org/wiki/Plone_(software) https://en.wikipedia.org/wiki/Zope
**Plone (software)** Plone is a free and open source content management system built on top of the Zope application server. Plone is positioned as an "Enterprise CMS" and is commonly used for intranets and as part of the web presence of large organizations. High-profile public sector users include the U.S. Federal Bureau of Investigation, Brazilian Government, United Nations, City of Bern (Switzerland), New South Wales Government (Australia), and European Environment Agency. Plone's proponents cite its security track record and its accessibility as reasons to choose Plone. *** **Zope** Zope is a community project concerned with a free and open-source, object-oriented web application server written in the Python programming language. Zope stands for "Z Object Publishing Environment", and was the first system using the now common object publishing methodology for the Web. Zope has been recognized as a Python killer app, an application that helped put Python in the spotlight. Over the last few years, the Zope community has spawned several additional web frameworks with disparate aims and principles, but sharing philosophy, people, and source code. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
&gt; bringing one that just does whatever wherever is getting to be overwhelming Aye, this is tricky. You can refactor to this, but you essentially have to erect bulkheads around an area of code and clean up one context at a time. At some point I want to learn more about Django and try to work out a sane migration path from full-blown idiomatic Django to something more structured. I've heard of people applying these techniques in Rails land, but it's complicated.
Great! Inbox me your email and I can add you to our Slack. Glad to help!
We're heading offline in a little bit but we'll be continuing this experiment during the week. Ping me if you think we can help! 
Yeah, going module by module is what I'm trying to do. I'll focus in on one thing that needs to be handled and then build what I need to build, write tests, play with it manually to make sure I didn't just write some bad tests. It's just a touch overwhelming as redoing one part as a domain service means yanking five or six things into their own services as well since I'm trying to get away from global state. 
Makes sense about only checking if the thing was rolled back rather than coding roll back knowledge as well. As for the events, gross. I take it a set didn't help? 
What if you did player.lower?
Thanks!
I am very interested in everything about this. I work as a researcher / analyst for a commercial property company. I started with 'automate the boring stuff with Python' and have put together a few novelties - an interface for the BLS API, a few web scrapers / Excel formatters etc. but nothing substantial. Well, there's a software that everyone uses for transactions, which I won't name because (1) I'm not trying to copy it and (2) it's so ubiquitous that everybody who works in commercial real estate already knows which one I'm talking about. It's like a warped version of excel that is exclusively focused on discounted cash flows. A financial model for any single asset (or portfolio) is not complicated in the abstract - you don't usually get past multiplication. However, you might have to model hundreds of leases for a single building that were all signed at different times, with different terms, have different payment schedules with different rights and obligations, etc. Add that to the fact that you make fairly detailed assumptions going forward. Basically, I want to create a numpy-focused set of libraries to perform these calculations that saves everything to sqlite files so that way they can be used with other programs like tableau or excel or Google sheets. Today, it's a very closed ecosystem of data which favors incumbents. I would at least like to take a shot at making an alternative (like what libreoffice is to excel).
You talk down to everyone. You’re a douche.
Nah, only to people who deserve it.
pytest.
&gt; There about 1,637 Python user groups worldwide in almost 191 cities, 37 countries https://wiki.python.org/moin/LocalUserGroups or maybe even linux users groups: https://en.wikipedia.org/wiki/Linux_user_group
Did not seem to work.. 
If you're looking for ideas, there's plenty of open source projects that need help. As far as joining a team, there is r/progether and some other mini subs for that purpose.
/r/learnpython
You may provide it but you are being a douche about it.
Rephrasing /u/travisby's advice, what if the player could input whatever they like and it gets stored in `player`, then you call `player.lower` before making your comparison?
Use .lower on player and player 2. Basically, you have to make sure that whatever the actual input is, you are comparing the .lower version of the string, both for input and for the options 
Aware of decorators, just haven't used them in production work very much aside from flask and some other basic class decorators. Might take some time to reaquatint myself with them now that you mention it.
&gt; if player == 'Rock'.lower() and player2 == 'Scissor'.lower(): if player.lower() == 'Rock'.lower() and player2.lower() == 'Scissor'.lower():
I know the python language so that would be the wrong sub which is why I posted here.
Nupic with HTM 
That's an ambitious thing to embark on, and quite doable, though probably going to show up as more difficult than you intended. Is this something where [Tryton](http://www.tryton.org/) may be attempting to work? I can help out a bit on mentoring for how to structure things and review if you want. 
This is unlrelated but I was wondering something. When you first started learning how long was it before you could remember all the different functions and symbols etc? 
[Hypothesis](https://hypothesis.readthedocs.io/en/latest/). It makes your tests much more powerful by testing hundreds of example inputs for each test, using coverage to explore edge cases, saving failing examples, and reporting the minimal failing example *for each individual bug*.
Learning what? Python? Python is pretty easy. I used to know Perl. Most of them are fairly standard in python,the one that gets me at times is the trailing comma causing a tuple, and that both sets and dicts use `{}` 
Sorry I didn't specify. Yes I meant python. I'm just starting out fresh and I'm having a hard time remembering where and when to use certain formulas or variables. I guess that's normal for beginners tho.
Interested. I'll MP if is not too late.
Yeah, that's pretty normal. It helps to write code, and to test. My favourite tool is an `ipython` terminal next to where I'm writing code. It's where I write small snippets and test out behaviour of my code to verify I'm thinking the right way. So If I'm writing something, and get confused, I'll just rewrite a simplified version in ipython and test it there, to see if I'm doing the correct thing. 
Go ahead!
This example show how you can use the ImageDraw module to add text to an image. https://pillow.readthedocs.io/en/3.1.x/reference/ImageDraw.html#example-draw-partial-opacity-text
&gt; This can come in handy if you are collecting data for machine learning. It is also very useful if you want to automate things like **if you want to be a blogger but don’t want to waste time writing blogs, instead you can steal blogs from other website and post it over yours after some tweaking.** Hmm, serioulsy?
interested, just sent you a pm
I'm working on a bioinformatics project right now using Python for &gt; %90 of the workflow. The end goal was to have a Flask based user GUI for controlling the pipeline. While the code is designed for easily plugging into a Flask framework, that's been overlooked, because of time restraints and our desire for other functionality. So, let's start from the beginning... Over the past year, me and my coworker decided to create a Python (3.5, 3.7) package. We wanted to use cookiecutter to organize our data and the package itself, so we created a module in order to manage this functionality. We created a separate module for deploying/managing these directory systems on a per user defined project basis. A separate module does all of the under-the-hood bioinformatics stuff. And another module does all of the utility stuff such as logging, Slack notifications, multiprocessing, and data transfer. We also have a module that will manage our pipelining functionality with (eventually) Luigi or Airflow/Hadoop, but currently only uses YAML (developmental) configuration to dispatch functions in the proper order. We've paused with this project to focus on other items on our agenda, including streamlining the purchase of an intre departmental computational server for current and future projects. Before we paused, however, we rounded off what we were doing, updated docs, and released our package to PyPi in mid-November. While I think we've done pretty well with our documentation and reformatting our code as we have learned new techniques, I also get the feeling we're missing something (this is our first major career project in bioinformatics). And we may also beenefit from code evaluation by a third party. We basically need advice on how to move forward in order to better advertise our code to other biologist, and we need to find interested contributors so that we dont have to micromanage so much on our own. We will soon use this package for creating data for a publication that was our original inspiration. A publication will presumably be written for the package as well.
Here's the project: https://github.com/datasnakes/OrthoEvolution
You are right that it's ambitious, so far I've gotten the lease calculations and inflation factors to work correctly but I need to make leases a subclass of market lease assumptions so the model knows what to do when the tenants lease expires. Also need to figure out tenant reimbursements. The thing that has been difficult has been how to structure everything. For example, a tenant may have a 'cap' on 'controllable' expenses that would be preserved if they renew their lease so when their lease expires you would need to blend the difference between what their lease says with what a speculative lease would say based on your assumption regarding the probability that they renew. If you gave me a pencil and paper I would be able to tell you the answer but how to write something that gets to the right answer 100% of the time is giving me fits. I will have to check out tryton, this is the first I've heard of it. From reading that page it seems like they are going for general business software tied into postgre, which I might could adapt to our use case - but my biggest hangup is that potential users will need to combine several discrete models into a consolidated cash flow. Maybe json would be a better format to do that with? It just has to be designed in such a way that interoperability isn't a concern of the end user. The thought was that if the back end was built with SQLAlchemy then someone could send / receive a model as a .db attachment and load it into their postgre / MariaDB / etc. server. I guess at the end of the day I just need to sit down and figure it out. I really appreciate the advice and help.
Why did he deserve it? Because he asked a question? You seem like the type of person who talks down to people to make yourself feel superior. Yet you come off looking like a douche. 
The easiest approach is to take their input, modify it to either all lower or uppercase using the `string` library, and then it doesn't matter how they format.
So, honestly, the best way to learn is by doing. However, when one doesn't know where to start, doing turns difficult. Thus, I think you're pretty on par with the pen and paper work it out idea. In a case like this, you'll likely find out that your data model ends up being more complex than you wanted, and that will impede your ability to transfer data between instances. For a data-transmission process, JSON is pretty abysmal as a choice. It's too lenient, and lacks versioning and declaration of types for it's structured content. But, I'm not in finance, so I'm not quite sure about the details with transferring state or why it would be something desirable.
Perhaps you can break one of those advanced things into smaller parts then. Almost always worked for me. When it didn't - I knew I have to study certain topics more before getting to write code.
Decorators are love
Well see that's exactly what I want to hear - I'm more of an analyst than a developer. The thing is when you are combining multiple models, there are a few constants - potential gross income, income deductions (i.e. vacancy), operating expenses, and capital expenses. Everything generally fits into one of those four buckets. So, while you might have 'rent' and 'miscellaneous' income, they are both in the first bucket and get combined for portfolio analysis. While someone has a very specific set of constraints on how much they reimburse the landlord for, at the end of the day it is always classified under expense reimbursement revenue. If the back end is designed in such a way as to keep all income and expenses in one of those four categories, in theory it should be able to combine the cash flows from any two assets with one another. Even if the subsidiary components of each expense category are different. Again, thank you for your help. You're right that I just need to start writing code and making corrections as I make mistakes. There's not a git solution to that problem haha
I sent you a pm!
It sounds like you're working on a pretty traditional accounting platform, and there might be others that could work. As said, Tryton is one such platform, and there's bound to be several others. On the other hand, sometimes it's fun to reinvent the wheel, simply because all the things you learn in the process. Also, [look out](https://stackoverflow.com/questions/7545015/can-someone-explain-this-0-2-0-1-0-30000000000000004) for floating point math when you're doing this.
I sent you a reply!
Thank you, it seems as if you're fairly far advanced, beyond really needing the general help of stepping up, but I'll take a look and see what I can do for you folks as well!
Yes, thats what I am doing atm. However was hoping that some wrapper module exists that makes shape and text drawing much easier (as in calculating container boundaries and truncating text if necessary). 
Sys Admin here, but looking to step up my Python skills. I think it would be cool to have a Python programming job as one of my future possibilites. Here is my latest project and I would love for you to critique my code. I also have a TCP port scanner that I want to rewrite as well. [Compare files within two directory trees for equivalency](https://github.com/jftuga/dcmp) dcmp.py is less than 600 LoC. 
Thanks :)
Sure, It's a good sized project! ( just so you are aware, that you've just reimplemented some of the unix `diff` functionality? That's _perfectly_ fine, it's how we learn after all ) 
Now for some basics: ## Build instructions There's an .exe file commited to the repo, without any way to verify that this is not a malicious code, or to document on how this .exe was generated. Document the instructions for how to generate it, and then preferrably automate that. ( travis CI is the preferred one for GitHub currently) ## Releases Tag a 1.0 release at cdf37cbc526a8dcd5e55dae90ed3ae6fc608b3f4 and document it as 1.02 ## Milestones Set up a 2.0 milestone in the issue tracker, I'm going to start filing some issues for you for other things not mentioned here. Open an MR for those issues, and I'll start code reviewing them. ## commit messages Why is a commit named `added MIT license` changing the binary executable of the project? ## Further comments I'll pull through and add some issues for the other commentary I have
:) perhaps for someone else to use this thread... asking this for curiosity sake
Thanks for submitting the bug reports on GitHub! 
You're a Python developer, you're a Swiss Army Knife developer. :)
Python actually already has a [HTML parser](https://docs.python.org/3/library/html.parser.html) built-in to the standard library. It'll run through the content you give it (using the `feed` method) and run a specific method (a class function) when it encounters a start tag, data, or an end tag. When it finds a start tag, it will also provide the options given to the tag in the `attrs` parameter, and with any of the methods, it provides the tag in the `tag` parameter. You can use these functions to save the content to the dictionary very easily.
Cheers, Good to hear!
Sentdex for sure.
Nice. Does this mean your script has support for unicode?
I actually have a web app that I built that I would love to build in Python. I think it would be a really great learning experience. https://github.com/martylavender/Little-To-Do-App?files=1 
Is there something like this, but for TUIs? Apart from urwid of course.
Hey, Thanks for doing this. I'm a self-taught programmer. I'm currently finishing my second year of university and should be doing some coding classes starting in fall of 2018. However, I've always wanted to learn to code so I've been kind of struggling along at my own pace for years. Nowadays, I feel like I have sort of an idea about how to do things so I decided to start a project. My project is a tower defense game. [Here's the link to the github](https://github.com/gscharf94/tower-defense). My issues? Well, I know nothing about how to structure code. This is the only thing I've ever written that is more than 200~ lines of code. One thing I'm having trouble with is that when I'm adding a feature.. it'll break some other part of the code and I don't know why and I'm spending a lot of time trying to debug instead of actually building. Is this a result of my lack of organization or simply a reality of coding? Anyhow, if my project is too simple and beginner level for this type of post I understand. Thanks anyway for taking the time to read.
/r/learnpython
What is the timeframe? 10ms slower to 30s slower?
Playing with the python with cloudyrathor is a fun.......
To release the GIL you have to not use any python objects. So, it's great for pure numerical stuff, but if you need a dictionary or something you won't get parallelism. Also, cython is really fast, and usually the threading overhead slows things down considering that spending more than a dozen milliseconds in a cython routine is hard to do.
Im interested but I don't have any python code to show you (focusing on JS for now). I'd still love to see the feedback you're giving so that even though I don't have a specific project I'll still learn something. Sounds like a great thing your doing though, nice job!
Python programming in funny way....rajnikant vs superman
Here's one I write, does optical modeling with a fledgling colorimetry submodule. https://github.com/brandondube/prysm
I've always wanted to rewrite [Rednotebook,](https://rednotebook.sourceforge.io/) a journaling app with encryption and a more robust backup system. I have about a month off and I think i'll be able to have time to learn Kivy to do so. 
[removed]
I also loved Turtle graphics. I understood range and loop while learning it. 
I have a hobby project that I'd like to improve. It's a daily feed of news, weather, horoscope, exercises to an email distribution list of friends on a cron job. I have the code in bitbucket vs GitHub because I don't want the email addresses public. The email addresses are stored in a file as a dictionary as part of the collection of files. How do I structure this data so I can share the other code and get feedback? I already have a sqlite database to store other app data.
or, from the unix command line, run python watcher.py &amp; wich will fork tje process in background
Thanks so much for this offer. I expect you will be bombarded with responses, and have gone ahead and added my own to your inbox for consideration.
I might suggest that you start with clize's documents which explains its development goals. It also contains a comparison between clize and click as per the following link. https://clize.readthedocs.io/en/stable/alternatives.html Then if you have some questions arising from having read these docs, perhaps we could begin from there.
I am toying with the idea of a code generator that takes the aspects of a few high level objects and their tree of properties as well as relationships. I use Python generally as a sibling to nodejs and bash for the most part... most recently the work I was most proud of was processing return JSON from the aws-cli tool.
Why would you recommend something that hasn't had a release in 6+ years and doesn't support 64-bit Python?
How do you clear the screen? 
After looking over the code this weekend and giving it a lot of thought, I don't think there's any way for me to share it with a clear conscience since the code would technically belong to the company. It's probably silly of me, but if I were them I wouldn't want me to go around sharing the code on the internet, and I can't really ask them since it's been over a year since I worked there. BUT I can at least talk about the code more. Here's the libraries I used to do all that: import fire import pyautogui import re import csv from pyautogui import click, moveTo, hotkey, typewrite, screenshot from time import sleep from tqdm import tqdm from os import listdir from os.path import isfile, join I used `fire` for command line parsing. It's my absolute favorite lib for that since to use it you literally just put this at the bottom of the file and it intelligently sets things up: `fire.Fire(main)`, and it'll take your `main` function and turn the arguments to it into command line args. 10/10 I used `screenshot` from `pyautogui` to compare screenshots of a success state. So after each work order had been filed away it would use this function to get a screenshot and then compare it to the beginning (and `sys.exit()` if not equal): def get_cropped_screenshot(): starting_screenshot = screenshot() box = starting_screenshot.getbbox() box = (box[0] + 100, box[1] + 100, box[2] - 100, box[3] - 100) starting_screenshot = starting_screenshot.crop(box) return starting_screenshot By cropping like that I could avoid having the date/time on windows mess with the screenshot, and also the little blinking cursor where the mouse was in the work order software. I loved wrapping all my loops in `tqdm` because watching progress bars is just so much nicer than printing stuff out. I got great feedback for that :) `pyautogui` was just the best though. It made it so easy to click things, move the mouse around, type things, etc. And I liked that you could do it all at human watchable speeds. I also used `csv` to keep a list of which work orders were already processed so it could resume where it left off. This was easier than cracking open `sqlite` I hope some of that info is helpful, and I'm sorry I can't give you the code. A final thought is that it was interesting to talk to the boss about it to allow me to do it at all. I was between coding jobs and literally just bending pipes with heat guns on the factory floor. What I did was I just cobbled up a sample code blob over the weekend that would just click on the screen and move some things around, and I explained that using that I could make some tweaks and get some basic automation running in about an hour, which would save a few hours a month of clicking and dragging. My manager relayed that info to her boss and the IT person and they came down and did a tiny IT interview of me and asked about my education (3 years of comp sci and dropped out, 2 years of programming full time in C#) and then set me up and let me go at it for a few hours each day. In about a week I had the whole system all automated, and my manager was thrilled. Afaik they're still using it today, I know they were after I left. I think the getting permission to automate stuff part can be as tricky as the actual automation. Have an awesome week man
I'm working on a Machine Learning webapp that allows users to create ML training data sets (either by adding image URLs from the web/from local directory or uploading a "URL+Label" CSV file) and test them. The webapp is using Flask/MySQL. I'm using a Convolutional module that I created that provides different functionality and parameters for convolution of images. I've also created an image scraper using RoboBrowser that allows easy training data building (probably not as efficient as manual training data creation) and am currently testing it.
Actually it is. If you actually read the front page it links you here: https://pygobject.readthedocs.io/en/latest/
I gave Appjar a look. I've been experimenting with GUIZero, but decided to make an animated dice roller this time and Appjar worked fairly well for a simple dice rolling program. My Guizero dice roller is more sophisticated but the purpose of this dice roller was specifically to use multiple images to display the result. Anyway, it was fairly straightforward. 
sqrt(2) returns the square root of 2. M_PI is just the approximation of pi, 3.14159265358 or so.
Why is this needed though?
https://cairographics.org/manual/cairo-Paths.html#cairo-arc
I have read Clize's doc and I use it regularly. My question is related specifically to why it seems to be completely invisible for most of Python developers and why it almost never appears in reviews of packages used to create command line interfaces. That kind of silence is surprising to me.
Looked at the Leaderboard. Best on currently clocks in over 13 hours a day. Really. Are we now in a time where we self destroy in a race to the bottom? I am all for measuring myself to identify spots to optimize. But that is just sick. 
The realistic answer is that preparing is largely impossible. Maybe except unit testing: check out pytest. As for git: mostly you want to avoid advanced stuff as far as possible. It’s very easy to do terrible things with git. 
upvote for funny post!
Wow I feel dumb... but I get it now. (It has been a long time since I did anything with maths lol)
http://pyke.sourceforge.net/
Thank you so much. I never even knew existed that commits could have a 'message body', and I'd never heard of squashing. And you're absolutely right when it comes to my commit messages and policy. "Dance like noone is watching" is a bad idea when applied to commiting. Same goes for branching. 
Read the right-side : &gt; If you are about to ask a question, please consider r/learnpython or the learn python discord. Homework-style questions will be removed, and you'll be encouraged to post there instead. Moreover, your code is badly formatted : also in the right side: &gt; Posting code to this subreddit : &gt; &gt; Add 4 extra spaces before each line of code Better is to make a pastebin / a gist. You are asking a favor. Make sure that you ask it right.
This looks awesome. It's a shame I didn't know about it until now.
Thank you very much.
It works _perfectly_ well as a method when you're in the flow, but before you take the time to do `git push` is when you should sit down, do a `git log` or better yet, `git log --graph --oneline --all --decorate --color` and see that your commits look good, and seem sane. If they don't, you can do this: `git tag before_rebase` `git rebase -i origin` Follow through the rebase ( do check out online guides for it) at least use the `reword` function to simply change the messages. Afterwards, compare your code to the tag `git diff before_rebase` ( there should be no changes) `git tag -d before_rebase` `git push` That allows you to go back, look over your commit history, and fix them all.
You're quite right, this is turning out way more popular than I expected!
1. debugger - Python has ``pdb``: https://docs.python.org/3/library/pdb.html . Other than that, familiarize with logging: https://docs.python.org/3/library/logging.html as this is the standard way to keep track of what is happening in an application, especially in production environments. 2. unit tests - look into pytest and unittest (unittest being the default tool that comes bundled with python stdlib) 3. text editor tooling - a decent IDE or text editor with plugins (completion, analysis, syntax highlighting). This depends from individual to individual. I prefer and use PyCharm. 4. Advanced git stuff: you'll google it when you need it. Learn and master the basics first: pull, fetch, checkout, branch, commit, push 5. What's required to contribute to an open source project : markdown or rst knowledge for Readme and documentation, sphinx for documentation generation, proper python packaging using setuptools (the standard right now), depdendency management (separating production deps from development deps from testing deps), familiarize with a CI/CD tool (ex travis is pretty popular, jenkins pipelines are used more in corporate environment, bamboo too but it is not free). 6. I'd add one more thing: familiarize with python deploying process and what are the steps required for it. (ex for webapp applications you need to learn about wsgi, for long running processing jobs you need to learn about a supervisor, be it supervisord or anything else). Good luck!
Usually, you move the private data into files that are in .gitignore and then simply don't commit them. A normal usecase for that is a configuration file as well. Be aware that you may need to rebase your code history to remove the files from the history of the git archive. 
I did `git log --graph --oneline --all --decorate --color` and winced a little. I'm going to have to read up on and experiment with rebase, see if I can wrap my head around it. But speaking of flow: What should you do when you suddenly spot something outside the scope of your current focus/future commit and think "I can see that this other thing is wrong and I know just how to fix it right now! Let me at it!" Insert a comment? Or keep it out of the code entirely until you're ready and just post-it note it?
If you recall could you describe what techniques you were using to match against similar addresses and domains? 
So let me understand here. Your proposed project is to re-write the todo app in Python instead of PHP? Seems workable. Should it remain exacly like the Little To Do App, or just _any_ Todo app?
That seems like an interesting project. Start by creating a repo, and document the following: - What does this software solve - How do you intend the user to use it - How do you intend the user to install it - How do you want people to develop on it. 
If debugging is the act of removing bugs, then programming is the act of adding them. Distilled as, "noone but a programmer could take an empty file and add errors to it." So, I can take a look. First tips: - read the [Python packaging](http://python-packaging.readthedocs.io/en/latest/minimal.html) guide and set it up - Create a new milestone - Create a README file for your project that documets: 1. What is it 2. What do you want it to be 3. How do you interact with it 4. How do you develop on it 
Usually, I either make a quick fix, and then do partial commits using: `git commit -p` To structure the commit. If it's something that's going to _distract_ me, I go with a notepad or a quick issue. I always keep a few text editor tabs up for various notes like that.
But...why?
I am interested, one question: does this apply to python only or could the project be in another laguage (node.js, mondgodb)?
I assume that the pickle was also generated with 2.7.9-1? With identical Python versions, looks like a bug in Python. One final thing you can do: install docker, and run the script inside a debian 8.8 container. If this gives an error for computer 1 and computer 2 =&gt; bug in Python. If this gives an error for only computer 2 =&gt; hardware or kernel problem for computer 2 If it works for both computer 1 and computer 2 =&gt; heisenbug?
thanks for the tip
There is no way to make your program impossible to reverse engineer if you're distributing it to users. Also, I am like 99.95% sure your program doesn't actually do anything so groundbreaking you should worry about it getting stolen.
They tell me it is groundbreaking :) Do you know maybe if there is a easy method like cms for python on servers?
ww: https://github.com/Tygs/ww/ It's basically a wrapper enhancing python datastructures. Very clever. Crossbar.io: http://crossbario.com/ A pub/sub + routed RPC system written in pure Python. It's beautiful, and powerful. Nuitka: http://nuitka.net/ A very robust Python compiler. 
Clize has a lot of competition. Click is from a more famous author. Argparse is in the stdlib. Begins has a easier API. Docopt is quite novel in it's approach. Etc. I used Clize before, but it's not better than the alternatives now.
You could write the parts of your program that you want to have obfuscated in C/C++ and distribute it as an extension module. Compile with -O3 and without debugging info and that's about the best obfuscation you can get. 
In the python side of things, scramble variable and function names, and rename everything several times in your code, especially in and out of a classes. That should protect the python code itself, but the other comment is right, you can't completely close a piece of software, not everybody will respect your eula, there will be pirates. 
No, but you can look into a web framework like Django or Flask.
I think you need to check out the file you're reading. Copy the file from computer 1 (working) to computer 2 (not) and see if that works.
Thanks :) already did, but it seems not to be the one weekend method :) for me at least
Tracking for 3.5+ 
I'll check it out. 
If you are loading non-builtin objects (from classes in a library), make sure the library version matches on both computers.
Is it possible write every string in "stringfile" and import it? Or is this a no go for reasons I dont know yet? 
What's generating the file that pickle reads? I'm fairly sure that the issue is at that end. The files are definitely not the same on the 2 computers.
&gt; Python contains undocumented methods and local environment variables that can be used for OS command execution. Python also contains _documented_ methods that can be used for OS command execution. So what? It's a general purpose programming language. What did the expect?
Look at his post history, he's trying to sell a scammy cryptocurrentce-related piece of software.
xD Yeah you are cool
will do, thanks!
the script itself on each computer generates that file
The total hours spent for the top user is ~96, which isn’t a huge sample size. I doubt we’ll see a sustained 13-14 hours per day. I’m also curious how these metrics are generated (this may be in the docs - I didn’t have time to read it all). Is it how much time you have the editor open (counting time away from the keyboard), or only time when you’re actively developing? It’s an interesting idea. Not one I’ll personally use, as it feels too close to the monitoring an employer might do when they don’t trust you, but depending on the accuracy of the data I can see it being useful to some.
Looks like you found the cause. Just wanted to chip in that since it's clear that the pickle files on the two computers could not have been identical, it's possible that one was written with a different file encoding by accident. Almost impossible to tell in an editor visually unless you realise it could be an issue.
In other news: water is wet, special report at 9.
Isn't the correct step, then, to update the guidelines?
God I'd love some help on /u/BobRossBot_ you can just message me. [also here's a link to the GitHub :)](https://GitHub.com/whaliam/BobrossBot)
How do I check a library like pickle which is in python by default?
https://pypi.python.org/pypi/bumpversion Versionbump is simple and makes versioning a snap. Perhaps not as glorious as requests or pandas... but super handy to have in your back pocket.
&gt; Is there a best practice for this sort of thing? Yes, raise your own exception with the appropriate message.
Couldn't you use a label? I'm pretty sure you can update the text in a TKinter label, so you could use it as a sort of console for your bot.
I'm sorry this might sound dumb but do you have an example. I'll past the bot part of my code here:
Option 1: Install python on their computer and run the source code there: Option 2: (Assuming Windows) Use something like py2exe (or many other tools) to package your software in an .exe which will allow them to run it directly. Bonus: WinPython is a portable version of Python which you can put on a USB stick and take that with you to allow you to run python apps on any PC without having to install it.
I have never handled exceptions other than to just print them out locally, and this is my first attempt to incorporate exception-handling into something more production-ready, so I know I have a lot to learn. Just so I understand, are you saying, "*Don't return anything*: just handle things in the except block, raise the exception, and be done with it"? 
From what /u/fiedzia said, I think my problem is I need to be better at exception handling. If anyone has any good references, I'm all ears. Here is what I plan to read to bring me up to speed: - https://jeffknupp.com/blog/2013/02/06/write-cleaner-python-use-exceptions/ - https://julien.danjou.info/blog/2016/python-exceptions-guide - http://www.codecalamity.com/exception-exception-read-all-about-it/ - https://stackoverflow.com/questions/839636/best-practices-for-python-exceptions - https://code.tutsplus.com/tutorials/professional-error-handling-with-python--cms-25950 - https://eli.thegreenplace.net/2008/08/21/robust-exception-handling/ 
Check the versions of any **installed** libraries whose classes you've pickled. If you're pickling built-in objects, don't check anything.
You can use a ```tkinter.Label``` or ```tkinter.Text``` widget. Here's an example for ```tkinter.Text```. Here you can press a button to insert text into the ```Text``` widget but you could use any function to call ```text.insert()```. import tkinter as tk def insert_some_text(): """ Inserts "Hello!" into the text widget """ my_text_widget.insert(tk.END, "Hello!\n") root = tk.Tk() my_text_widget = tk.Text(width = 40) my_button = tk.Button(text = "Insert some text", command = insert_some_text) my_text_widget.pack() my_button.pack() root.mainloop()
Nah, I heard that's just fake news...
 from tkinter import * '''GUI|MAINMENU''' # Create main window root = Tk() menu = Menu(root) root.config(menu=menu) '''GUI|SUBMENU(S)''' # Create menu # First submenu submenu = Menu(menu) menu.add_cascade(label="Bot", menu=submenu) submenu.add_separator() submenu.add_command(label="Start Bot", command=bot) submenu.add_separator() # Second submenu submenu2 = Menu(root) menu.add_cascade(label="Settings", menu=submenu2) submenu2.add_separator() submenu2.add_command(label="Exit", command=exit) submenu2.add_separator() outputText = "" #pass label text here outputLabel = Label(root, textvariable=outputText) outputLabel.pack() # Loop GUI root.mainloop() Does this work for you?
Wow WinPython sounds awesome. To address your other point, I’m coding on a Mac but I might install it on a Windows. Any hope there?
Those huge arrays ```ross_images``` and ```youtube_links ``` would be nicer in a an excel spreadsheet or something , then just load them in from your code
&gt; Just so I understand, are you saying, "Don't return anything: just handle things in the except block, raise the exception, and be done with it"? Yes, let the caller decide what to do in case of an exception. I said to define your own exception type so that you can have your own message. Keep in mind that the exceptions your code may raise are part of the contract with the caller same way as function arguments and return value is (which is why defining your own exception type is a good idea).
Add the specific version to requirements.txt and use that to keep your versions the same. 
thanks!
Honestly, without seeing more details about the script and python versions, it's impossible to debug your issue. However, as a workaround, you should consider JSON serialising. Just use json.dumps and json.loads. It should work perfectly for all python base data types. If you're using pandas, convert it to something like a CSV. JSON is a much more readable and resilient structure than pickle. And it's much easier to debug. Issues like this are why I hate using pickle. Generate a dump, take it somewhere else and it stops working. Use JSON, it'll save you more headaches if you decide to use the script in another language.
**Hiring | Full-time | On-site | Birmingham, UK** Jewellery Quarter Bullion are seeking an experienced Django Developer to bolster our growing development team. We are the UK's number one online bullion dealer, based near to New Street Station in Birmingham. We are currently in the middle of international expansion, and are looking for someone with at least three years Django experience to join us. Full details can be found here: https://www.bullionbypost.co.uk/info/careers/experienced-django-developer-birmingham/
I don't have advices for your question. However, the only guaranteed way to hide your business logic is to put it on a server and get your app to talk to it. If your code goes on a user's PC, a sufficiently interested user can figure it out.
First, I think this is a **BAD** idea. But I was curios if if you `exec` a string, if you could still see what is happening. Consider the following code. In this, I make it throw an error: print('going to throw an error') raise ValueError('I am an error') print('did I survive?') Now, I have the following tools. This "encryption" is just for show def encode(string): return ''.join(chr(ord(a)+1) if not a=='\n' else a for a in string) def decode(string): return ''.join(chr(ord(a)-1) if not a=='\n' else a for a in string) def runcode(string,catch=False): try: exec(string) except: if not catch: raise so if I encode my code, it is: qsjou)(hpjoh!up!uispx!bo!fssps(* sbjtf!WbmvfFssps)(J!bn!bo!fssps(* qsjou)(eje!J!tvswjwf@(* Try running it, I get: &gt; going to throw an error &gt; Traceback (most recent call last): &gt; File "bla.py", line 21, in &lt;module&gt; &gt; runcode(decode(encrypted_source)) &gt; File "bla.py", line 10, in runcode &gt; exec(string) &gt; File "&lt;string&gt;", line 2, in &lt;module&gt; &gt; ValueError: I am an error Or, with the catch on: &gt; going to throw an error So, based on this stupid example, that may work. But I bet someone could figure it out if they really wanted
make_request will return to the caller either an error message or the actual response. Then the caller needs to have an if statement to determine what actually happened. There is a better way. Depending on the severity, Exceptions should bubble up to the caller. The caller should call "make_request" in a try/except block. If make_request gets back a response and a 200 OK, it returns that response and the caller goes about its business. This way you can also document that your function returns one specific thing. KISS principle. If make_request encounters an error, it will raise an exception with your error message and the caller will handle it in its except block. The Exceptions from requests, however, provide their own error messages so I don't know that you would need to create your own. Why not have the caller call requests directly and the except block will catch the above: try: do my request stuff except connectionException, readException, .... as my_err: print(my error) do other stuff except Exception as my_error: print("Unhandled exception. You should write something to handle it.")
thanks, I usually go for JSON, but I wanted to save a complex datetime object.
 predictors[0:80,], estimator[0:80,], validation_data=(predictors[81:,],estimator[81:,]), This looks wrong. I think you inadvertently skipped sample number 80.
Yeah rewrite in Python instead of PHP. The idea would be that it should remain the same, but if there are learning opportunities that allow for the addition of additional functionality, I would not argue with that.
I generally advise against using Pickle, ever: * It's brittle. Unless the pickler and unpickler code bases are 100% identical in EVERY SINGLE WAY, your pickled data may be unrecoverable. Renaming classes, moving definitions between modules, and more can render an existing pickle broken. * It's code execution. Lots has been written on this; don't un-pickle untrusted data. Do use JSON; store the datetime as a string value ( you may be interested in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) ). Pull the datetime out of the JSON payload and parse it. Your data is now future-safe, interoperable with other applications, human verifiable, and durable ( won't break if you change your code, operating system, python version, etc ).
**ISO 8601** ISO 8601 Data elements and interchange formats – Information interchange – Representation of dates and times is an international standard covering the exchange of date and time-related data. It was issued by the International Organization for Standardization (ISO) and was first published in 1988. The purpose of this standard is to provide an unambiguous and well-defined method of representing dates and times, so as to avoid misinterpretation of numeric representations of dates and times, particularly when data are transferred between countries with different conventions for writing numeric dates and times. In general, ISO 8601 applies to representations and formats of dates in the Gregorian (and potentially proleptic Gregorian) calendar, times based on the 24-hour timekeeping system (including optional time zone information), time intervals and combinations thereof. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
That's why we use md5 to check whether two binary files are identical or not.
It could work, it's not what I'd usually recommend as a learning project, since you'll be very inflicted to rewrite code in PHP style, rather than Python, simply because it's what you're working from. If you start, and ping me with your repository, I can take a look.
The comment thread that stuck with me and made me dedicate 15 hours over 3 days to the (mostly manual) merge: https://www.reddit.com/r/Python/comments/7aq95l/stop_supporting_old_releases/dpd4hot/ Kdiff3 made manually merging dozens of files a bit easier, but I still had to follow a Tauthon - Python 2.7.13 diff to make sure nothing slipped through the cracks. To make matters more interesting, some files needed modifications from both sides and, on top of that, there was no base commit since Tauthon was forked when Python was still on Mercurial. Anyway, the 2-way merge was successful and the tests passed. Thanks /r/Python for the motivation! ;-)
Excellent questions, and things I usually gradually move towards. in many cases, The best way to achieve that kind of modularity is a small smattering of unit-tests. Unit-tests generally work as a second user of your code, other than your own main scripts. So by working towards tests, you end up restructuring the code in order to make it easier to use as a library. ( No, this is not universal truth, you can write horrible tests that mimic all global state and such as well, but those tests also tend to look a bit scary. )
Working on a [program](https://github.com/TeddyCr/AdOps/tree/master/has_ads.txt_scraper) that checks if a specific website uses the ads.txt file 
Thanks, there's quite a few things here that are generally applicable that you could get, however, I really don't know the JS proper of the moment. things like code organization, modules, testing etc. are language and sometimes platform dependent, and thus things I can't really help with on the JS side.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [TeddyCr/AdOps/.../**has_ads.txt_scraper** (master → 7170691)](https://github.com/TeddyCr/AdOps/tree/7170691e401cf0a1dd76c0bb0a1525bf5d92e83f/has_ads.txt_scraper) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dr39onn.)^.
Thanks, there's quite a few things here that are generally applicable that you could get, however, I really don't know the JS proper of the moment. things like code organization, modules, testing etc. are language and sometimes platform dependent, and thus things I can't really help with on the JS side. So, I generally reserve this to Python, simply because that's where _I_ feel at home and know what advice to give. That doesn't mean that I can't look at your JS/mongo project and give hints on the project handling side.
Sounds interesting, but also a bit step away from the most basic junior projects that I was aiming at. Anyhow, if you _do_ think it's within your ability (you ought, since you thought of it), start with answering these questions: - What does this software solve - How do you intend the user to use it - How do you intend the user to install it - How do you want people to develop on it. 
Sounds good. I'll PM you
There should be a mac version of a python to binary program out there.
Interesting project...what is the use of this? Why not use python3?
Thanks. I’ll dig around but just knowing that I need to search for a binary program is enough of a primer to get the process going. 
&gt; Interesting project...what is the use of this? Why not use python3? Tauthon is backwards-compatible, so your existing Python2 code will work out of the box. If you want the provided Python3 features, you can use them without paying the refactoring price. Compare this with Python3 porting horror stories (["Overall it took about ten months, in different stages."](https://thenewstack.io/instagram-makes-smooth-move-python-3/)) and you'll see why I say that Tauthon is what Python3 should have been from the start.
Stupid exklusive convention... 
These are great points: thank you. As background, this code is part of is an api consumer dealing with about a dozen end points, so it seems like it would be a mistake to have the same try/except block a dozen times. Hence, I am trying to functionalize it. However, as you pointed out, don't I have to then embed *this* code in a try/except block? But then it seems I am just repeating myself and can just do the try/except stuff in `__main__`. But I don't want to repeat the same basic try/except block for all 12 end points that I'm requesting in this application. I am getting myself confused about how I can functionalize repeated error handling without violating the DRY (don't repeat yourself) principle. I feel like I must be missing something obvious.
Thanks. So then, as pointed out by /u/spackle0, would I need to then wrap *this* function in a try/except block? Am I then just being redundant? Or am I missing something basic, that exceptions are meant for `__main__`, they are meant to be *generated* by functions (as you said, this is part of the convention with exceptions: you **RAISE** them, you don't return them as outputs). My response to spackle0 gets at how I am getting a bit confused.
Use a continuous integration service like Travis, Appveyor?
Post this in the learn Python subreddit as well
&gt; but I wanted to save a complex datetime python object. The most complex it could possibly be is if it had a timezone. Use .isoformat() for your date and then follow [this link](https://stackoverflow.com/questions/35869985/datetime-datetime-is-not-json-serializable) to get your date object back. It's a little bit of extra code, but, believe me when I say this, it makes your life a lot better.
Gotcha. In that case, this would be an awesome present ;)
&gt; So then, as pointed out by /u/spackle0, would I need to then wrap this function in a try/except block? Yes, if you want to catch exceptions there (you may want to catch them even higher, or not catch them at all and let the program crash). &gt; My worry then is, am I then just being redundant? No. Lets consider two usecases: a) the caller calls your function and doesn't know its internals. He doesn't know what requests is and does and what exceptions it may rise. All he knows is that your function may fail with SomeRequestException that will have a message explaining what happened. In that case, you catch requests.exceptions.* and raise your own SomeRequestException with an appropriate message. The caller may choose to handle this exception. In this case, if you ever decide to upgrade or replace requests with another library (that raises different exceptions) will not require caller to change anything in their code. This is probably what you want. b) the caller knows what requests is and is expected to understand what it does and what it can raise. If you ever upgrade or replace requests, all places using it will have to be reviewed. In that case you should not catch requests exceptions, just let them bubble up. Either way, its up to the caller to catch exceptions. The caller may choose to catch and handle it (if possible), or ignore it and let it go up the stack. As for being redundant: first, its a caller problem, not your, second, this is trivial to handle. If you have dozens of functions that may raise the same exception, and you want to handle them in the same way, you can write a wrapper that will do just that.
Why cant we just stick to flask/django and pyramid. More options == less modules 
How can you use the term *Python3 porting horror stories* to describe the highly successful port of instagram?. Will Tauthon still be going in 25 years time? Somehow I very much doubt it.
It's just a fork of python 2.7 that was originally called python 2.8, but as the PSF owns the legal rights to the Python name the name was changed. All that's happening is that all the hard work done by the core developers and other interested parties is being backported from Python 3 to 2. It strikes me as being a complete waste of time, YMMV.
Can we mark pickle as deprecated? This won't break existing code but will warn the next generation to never touch it.
First: read the sidebar. Second: change attackPlayer(Health); to Health = attackPlayer(Health); Third: learn about variable scope: http://python-textbok.readthedocs.io/en/1.0/Variables_and_Scope.html
Thanks What would you recommend more so as a learning project?
There are already warnings about using it in the docs, but people like gaping security holes as features. 
You're passing the value of Health to your function, not the actual variable. When you call attackHealth(Health), what you're actually doing is calling attachHealth(1000) which returns 900. However, you're not capturing that return statement. In your "main" statement, try: Health = attackHealth(Health) print(Health)
They already don't heed the security warnings, what makes you think deprecation warnings will be any different? 
[Zeep](http://docs.python-zeep.org/en/master/) is my favorite at the moment... handles big APIs well and is generally pretty friction-free whenever it isn't absolutely necessary not to be. 
I was reading on variable scope but I thought having the method return Health would allow that to pass to the global variable. Thank you for the help. 
You realize that these "horros stories" are pointing to an article titled "Instagram Makes a Smooth Move to Python 3".
Something you _want_ to do. That's the only _real_ requirement. If you want to get started on something other people do, poke any of the people in this comment section and I'm sure they'll take some help and feedback.
I will try this tomorrow and see what happens. I consider myself a beginner with neural networks etc and this looks like a great starting place. Thanks!
&gt; You realize that these "horror stories" are pointing to an article titled "Instagram Makes a Smooth Move to Python 3". Yes, of course, but I read the body of the article, not just the title which was probably meant for the bean counters who might complain about wasted resources for no actual gain.
&gt; How can you use the term Python3 porting horror stories to describe the highly successful port of instagram?. If only I gave you a quote from the article to quickly substantiate my claim...
[lxml](http://lxml.de/) and [xpath](https://www.w3.org/TR/1999/REC-xpath-19991116/) are my preferred tools (as well as well as the command line tool for straightforward scraping that I wrote using them :) https://github.com/talwrii/clixpath) &gt; neither BeautifulSoup or even requests I don't believe you without further evidence. Selenium requires X. Have you tried creating a `virtualenv` and installing into this. You can even have basically your own operating system (apart from the kernel) by using `chroots` though this approach is quite a lot of hassle so I would not suggest it for simple use cases. 
Why would pickle ever be deprecated? If your only argument is that it's a potential security hole, you'd also need to remove `open()` and much of the `os` module (accesses disk), `subprocess` (launches rogue processes), `socket`, `urllib` (can exfiltrate data)...
Because it never fucking works, as this post shows.
Wonderful follow-up.
There are two kinds of people: those who make off-by-one errors. 
Personally, if this was "pip install tauthon" then it would make a little more sense. In a large company like I work in, majority of the code is still Python2. But no way in hell would they be okay with saying "hey let's replace our Python2 install with this random untested version so some of our developers can use modern Python3 features". To me, the pain of going from Python2 to Python3 is much more bureaucratic than technological.
The IDLE Shell and the REPL ("DOS-like black editor") are very similar. You should only need one. What you need is a code editor. [There's many options](https://www.reddit.com/r/learnpython/wiki/ide) but for starters you can use the one built into IDLE. Go to File &gt; New File to open it. There you can write, edit, load and save your code, and when you want to send it to the Shell go to Run &gt; Run module (or push F5). If you get stuck come visit us at r/learnpython (this sub is not for python help). 
I did something similar for my company and used https://github.com/BayCitizen/salesforce-python-toolkit to handle communication. It was a little hard to get into at the beginning but once I read some examples in the tests was able to get it working and updating it pretty often. Hope it helps you.
oh thanks! will post in that sub next time!
First, this should be in /r/learnpython Second, what you probably want to do is have a file you can then run. Personally, when I am working, I have numerous `bla.py` files. Third, take a look at IPython! It is an alternative REPL that offers tons of features and makes things a lot easier. Notably, if you do want write you functions in the REPL, you easily can! When you hit the up arrow to go back to it, it will let you edit it as well. Multi-lines included. Also, when you have your code in another file, you can do: %run bla.py to run it and then have the namespace fully defined. Or, you can even do: %run -i bla.py to have it use the current name space. Also, you can write your code anywhere, copy it and then type %paste to run it! It is really nice to work with!
 I would like to get the some 'caveats' out of the way so that your statement "I've been using Clize for years now" tells me more about how you use it" . Its easier to respond to 'what's better' questions and the like when we have some idea about your situation (aka caveats) wrt your use cases and programming skills. It would be instructive to know if you are a power user of clize. Ie have you delved into all of its corner cases or are you a docopt type user? Does your clize usage include writing scripts that others use? And third does your usage of clize include putting thkse scripts into production either at work or in some other apps that you maintain? If your usage puts you in the power class, then I would have thought that the above comparison of click to clize would raise questions like a) what is it about 'large scale projects' that makes click so attractive? and b) what are these various utilities for working with terminal environments? If your usage doesn't put you in the power user class but the casual arg parsing user then questions as to why click's approach works better, would have been raised. As it turns out, your curiosity appears to have nothing to do with the technical merits of either approach, but more about marketing or promoting. In that case, one might be inclined to think that its because the folks who use clize are not thrilled enough about it to blog or write articles about its usages. But I think click has a greater number of eyeballs because of its technical strengths as well as its marketing. For me, the things that jump out are as follows; 1. amazing documentation. Lots of descriptions about how to use it. 2. an amazing and extensive set of example scripts. Some of those examples cover use cases that are not even within the documentation! 3. the terminal utilities are great. I make extensive use of them. 4. An extremely well thought out approach towards deployment. Click's deployment approach makes it easy to share scripts with others in a way that virtually guarantees that it will run on another machine. Also makes it easy to deploy one's scripts in a manner that is suitable for production systems. Much like how the production issues wrt deploying Rust components with python were taken into consideration in Armin's talk "A Python and Rust Love Story", click has a sheer genius approach to deploying argument parsing and terminal utilities scripts. 
My advice is to not waste your time with tools like these, especially if you're depending on possibly compiled code in other libraries. He listed installing Python as Option 1 because it's strongly preferable. An excerpt from an article by a company that depends on Python: &gt;However, one of Python’s big drawbacks is a lack of clear tools for deploying Python server apps. The state of the art seems to be “run git pull and pray”, which is not an option when users depend on your app. Python deployment becomes even more complicated when your app has a lot of dependencies that are also moving. This HN comment sums up the deplorable state of deploying Python. &gt; Why, after so many years, there is no way for me to ship software written in python, in deb format? &gt;—Frustrated HN User
Great to see this project isn't dead. I've mentioned it a few times to my bosses and coworkers as an alternative to rewriting all our python 2 code but they aren't yet convinced. I think the issue is one of trust and herd mentality. Other people need to recognize this project and get with it to get more people to adopt it. It's sort of a chicken and egg problem.
True .. it needs a big sponsor or adopter to give it gravitas. Someone like google.
Thank you! If the information isn't sensitive, could you pastebin your script? Make sure your password stuff is removed!!
The django salesforce database driver is amazing. It's so easy to plug into the ORM, that even if you're not using Django, you may want to try it out: https://github.com/django-salesforce/django-salesforce
Best practise would depend very much what this is being used for, which is something you did not tell us. With very similar code I have done the following: * Let it bubble up and handle it at a higher level. * Catch it and raise a more generic exception that is meaningful at a higher level. * Don't catch it at all (I do this if the program has essentially failed and will stop immediately and the *only* outcome I want is to see that exception logged).
They should fix their main page then.
This is extremely helpful stuff, thank you! You have convinced me I need to go in and redo this in a basic way, especially good point about portability/usability. That is, what should I expect a consumer of this function to know about its internals? The less, the better.
Agreed. I think all the big issues for porting from 2 to 3 have been worked out and now it's fairly time intensive, but also trivial, task to upgrade from Python 2 to 3. This is just kicking the can down the road.
I'm sorry to be so below your standard of respectability that you assumed that I can only be a sock puppet for one of Clize's devs or merely a shill for them. Just for clarification, I'm neither, but I'm also not a contributor to a huge open source project, which would seem to be the only user worth responding, so I apologize for the inconvenience. Feel free to block me now.
You don't actually need Selenium to do what you want. If you use your browser development tools and check the network traffic, you will learn that once you submit a request, it will perform a POST, where the results from the search will be in the corresponding response body. For example matching the options, Número De Origem (from the dropdown), and search param 100, sends these parameters in the request body: dropmsgoption=3 partesAdvogadosRadio=1 numero=100 You can then use the following in Requests to get the search results: requests.post('http://www.stf.jus.br/portal/processo/listarOrigem.asp', data={'dropmsgoption':3, 'partesAdvogadosRadio':1, 'numero':100}) This can also be easily done in Urllib2. Check the official documentation.
First off, this is a very generous of you OP, so thank you. I'm hoping to build a suite of tools to aid in natural resource conservation since that's actually what my background is in. I'm (almost) completely self-taught so I'm sure I could use some pointers when it comes to the more team-based skills of coding. Currently, I'm attempting to build a mapping web application that seeks to aid those involved in native seed collection. The basic functionality of the application is simply to record GPS locations and display them on a map. To break some new ground though, I'd also like to overlay these maps with what are called Provisional Seed Zones. They essentially enable a best guess of where you can relocate native seed and still have the species thrive and are roughly analogous to a gardener's hardiness zones. The first hurdle I ran into was strangely formatted GeoJSON generated by Django itself, which someone at [SO helped me figure out](https://gis.stackexchange.com/questions/264634/openlayers-4-displaying-geojson-point-data). You can find the project as a whole on my [GitHub](https://github.com/cts-admin/cts).
I can do that but i'm making this for some one with a windows pc :(
OMG I absolutely hate the title. The article is basically garbage.
I think this response is pretty useful. I'd note that one things that selenium provides is that it gives you access to a javascript evaluator and the javascript, and because of this more generally allows one to *ignore* javascript. (Phantomjs might be an alternative to this.) 
Did you add it?
No. Was both on mobile and figured you'd do it if you wanted. Want me to?
Who is upvoting this type of content?
Sure, but if you were saying this 6 years ago you'd be saying can't we just stick to bottle/django and pyramid as bottle was older, more established and supported Python 3. 
Great, I'm interested. My project is a user collector from social networks (twitter, mastodon, etc.). The idea is simple, collect usernames (or any useful data) from users that have done something (like retweet a post or something like that) I have to start a repo on github first, when I do it, I will send you the repo link. 
Don't call it garbage. You'll give the garbage anxiety.
I really don't see the point of this, but it really is the distillation of the spirit of open source software. If you don't like something, fork it! :) As a former KDE developer, it reminds of the Trinity project. When we were creating KDE4, one of the reasons we started calling it the Plasma Desktop was to allow people to forward port kicker from KDE3, if they wanted, and call it the Kicker Desktop (or etc.) for a smoother transition. But the people who didn't like plasma decided that they didn't like any of the KDE4 ecosystem and instead decided that continuing to develop KDE3 was the better route. Ah well. But, that is sort of the point of open source. 
The only way I know to create a Windows installer on macOS is using Pynsist http://pynsist.readthedocs.io/en/latest/faq.html?highlight=mac#building-on-other-platforms. Pynsist just bundles Python and your source code so after you install it you can read the source code. 
I also linked all supported modules, so that should be enough evidence that they do not support those packages. Virtualenv is a great idea tho! I tried that and managed to install both selenium and python 2.7.13, aswell as PhantomJS. For some reason, get(url) method hangs on every url, and I can wget all of them. Also tried Firefox driver and same thing happened. Should I post error? Thanks for helping!
Officially, requests is not supported. However, following attrigh suggestion of using virtualenv that should work! I'll try that and tell you how it goes. Reeeally appreciate the help!
Zeep is awesome! It's easy to use and in active development.
Any good resources you can recommend for this? I’m exploring automating some emails and recording the info into a database. Was wondering it python could help with this. I’m also googling it now but interested in what you (or anyone) found helpful!
jq. it's a programming language for json processing. makes dealing with complex json tasks easy.
If want a simple web app why wouldn't I just use flask?
I'm soon sorry that this is what I have inferred to you. You are not that. I personnally feel that beating the drums for the open source projects that I use and love is something that I should and can contribute to. But to date I haven't. For example, I have come to love the gui development platform called kivy. I don't think that it gets the love or appreciation that it should. It sure has some warts. But when I examine it's usefulness in the context of certain caveats, I personally think that it ought to be the go to platform for certain classes of developers. And some day I will write about it. Clize as a technology has a very compelling story. Had I stumbled upon it after my argparse experiences's I might never have undertaken to use click several years ago. For its only within the past year that my use cases have changed (my caveats) which have driven me to appreciate click''s technology. 
Me too man. I just created my first gui. Good luck!!
I would personally recommend Microsoft's Visual Studio with the relevant Python modules installed; VS benefits from things like Intellisense whereas the IDLE doesn't
Me Me, I will check this out. How have you used it?
Glad we could be of help!
So the issue you might have is running X to run `firefox / chrome` you might like to check out `xvfb` once upon a time I wrote a library that dealt with some of the hoop jumping of loading up a selenium firefox inside a headless X server.
It's not.
No problem, well i will need more help on the things you listed an not on code so much to be honest. How long of a period are you planing to do this? Because i work and this will be kind of a side project and could take half a year to finish... don worry i wont write to you for every small think, i would like some general guidelines. Can i pm you when i start? Thanks!
Thanks it's amazing. Now I just need to learn enough about tkinter to get this GUI going
I built a program for my x86-64 computer that won't run on my Arduino's AVR! AVRs never fucking work! The code is so brittle! I tried to use a circular saw to cut my tomatoes and all I got was a pink mist! Just because you're not using a tool correctly, expecting it to do what it can't, doesn't mean it's the tool's fault.
True blog spam. Like a long-winded tweet, "Look what I ate today."
What is the correct use of pickle?
Look what I ate today!
Hey, did you test the outcome? I'm using request.post(...).content but cant find any of the returned strings. Is there something really obvious that I'm doing wrong? Thanks!
Isn't the /r/learnpython text-only?
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#2: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#3: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
I ate s turd today during my lunch break using a fork. 
Ok, I'll check that! Thanks! Any other tips?
&gt; Best practise would depend very much what this is being used for When I posted this I didn't fully appreciate that I thought that there was a simple one-size-fits-all answer. In my case I am calling `requests` very frequently as part of an api consumer that deals with about a dozen end points, many called hundreds of times during an update of the database. What I need to do is get the data from the response, obviously, but I also need to know when I get any of the indicated errors because that will mean the database didn't update properly.
You can post links to tutorials
I’ve also run into issues here, specifically with the bulk api (tried simple-salesforce, salesforce-bulk, sfdc-bulk-api). The problem being, though all these libraries *mostly* work, large queries can produce multiple results (in 1GB csv chunks). Though sfdc-bulk-api claims to fetch multiple results, and looks like it tries to implement this in the code, this just doesn’t happen; only 1 csv is fetched. Any advice or experience is welcome. For now, I’ve fallen back to using the REST API w/ simple-salesforce, which handles our largest query slowly (700k records) but it *does* eventually grab everything.
Reddit's chief users - bots. Python bots though, so it is alright.
That quote is to me the best evidence that it went pretty smoothly. Making such a transition in under a year, for a code base that presumably has many man-centuries of work in it, is nothing short of amazing.
Incidentally, I would use it in a context sort of like this: https://codereview.stackexchange.com/questions/182338/an-api-consumer Except now I realize I didn't do a good job with the requests wrapper function, so this is my first attempt to start improving that code.
&gt;Today I put data into a neural net library during my lunch. Doesn't have the same ring to it.
It‘s just for prototyping stuff that you can later use with swift
I'm trying to add a gui to [my bot](https://github.com/Clarissa-Bot).
There is py2app and PyInstaller that work for Mac: - http://www.pyinstaller.org/ - https://py2app.readthedocs.io/en/latest/
This is actually pretty normal as you need to remember that Python requires the OS to load the Python interpreter into memory in addition to your script. I believe that is where a lot of that overhead is coming from.
I have never used mint so this is pretty much just a quick Google, but this api a guy wrote might do the trick? https://github.com/mrooney/mintapi/blob/master/README.md Very sorry if I've completely missed the point.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [mrooney/mintapi/.../**README.md** (master → 8289242)](https://github.com/mrooney/mintapi/blob/82892422ba2de55b27d50bff44e334ad9149f843/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
I assume you're using IDLE. It's really quite awful - though I guess it has its following. Spyder is a nice IDE for working with Python and will make it easier to create .py files that contain your functions, code, etc. There are others, but Spyder is free and easy to get.
&gt; That quote is to me the best evidence that it went pretty smoothly. Making such a transition in under a year, for a code base that presumably has many man-centuries of work in it, is nothing short of amazing. Funny. To me it says they could have used that time to port it to a more efficient language and by this justify the cost.
I'm being developed by my EECS python team! :)
read the sidebar.
Also: one problem with syntax error reporting in python is that it does not handle missing quotes and missing parens gracefully. Look for missing parens somewhere above line 31.
Square root function on line 29 looks like its missing a ) at the end.
&gt; To me it says they could have used that time to port it to a more efficient language and by this justify the cost. I thought that the article clearly stated that they'd looked into doing this and it was simply **NOT** cost effective. Throw in *So it was a pleasant surprise to see 12 percent CPU savings (on uswgi/Django) and 30 percent memory savings (on celery)* and it seems like a great choice.
Who the hell on earth wants to use a github project when you can get Python 3 direct from python.org or numerous other third party suppliers? I can certainly understand commercial reasons for sticking with Python 2.7, but going down this forked Python 2.8 route strikes me as being completely brain dead
"Today I built a full iOS app while at the urinal"
&gt; I thought that the article clearly stated that they'd looked into doing this and it was simply **NOT** cost effective. How would they know before actually doing it? &gt; Throw in *So it was a pleasant surprise to see 12 percent CPU savings (on uswgi/Django) and 30 percent memory savings (on celery)* and it seems like a great choice. They obviously redesigned the system to get those improvements. Python3 is almost undistinguishable from Python2 in terms of performance (starting with 3.5, of course - it had serious performance and memory use regressions before that).
&gt; Who the hell on earth wants to use a github project when you can get Python 3 direct from python.org or numerous other third party suppliers? I can certainly understand commercial reasons for sticking with Python 2.7, but going down this forked Python 2.8 route strikes me as being completely brain dead What you fail to understand is that Python3 is, for all intents and purposes, a different language from Python2 and porting a large code base to it takes a lot of resources. Tauthon is a drop-in replacement of Python2.
&gt; What you fail to understand is that Python3 is, for all intents and purposes, a different language from Python2 Complete nonsense. The biggest problem by far and away was the difficulties for people taking data down the wire which have been pretty much resolved now.
I suggest that you reread the article, and/or stop misquoting it to `sell` your own preferences. Python 3 is vastly superior to Python 2, period. If that was not the case why back port Python 3 features to Python 2?
&gt; stop misquoting I did not misquote anything. You just don't like my conclusions, which is fine, but don't let that impair your judgment. &gt; Python 3 is vastly superior to Python 2, period. No, it's not, or we would have made the jump without needing years of convincing, threats and sabotage. &gt; If that was not the case why back port Python 3 features to Python 2? Because Python3 is not all bad. Some parts of it deserve to be salvaged.
&gt; Complete nonsense. Then why did Instagram need 10 bloody months to convert their code base? You really think it took them that long to figure out how to run the 2to3 script?
Well that's rude to call it brain dead but one reason to adopt this is not to avoid python 3 altogether but to migrate to python 3 in your own schedule. Most big companies that have been on python 2 for a while have successfully migrated their code from python 2.2 or 2.3 up to python 2.7 because the changes are incremental. The changes are driven by either deprecations of past features or by developers willingly wanting to use new features. So if you introduce a python 2 version that has python 3 features you can migrate your code to those features as you wish. Then over time, what do you know, your code is python 3 compatible and you can switch to a python 3 interpreter. If you sprinkle in deprecations during point releases then it goes faster. Compare this to what is required now. A one time rewrite of all your python 2 code to python 3! If your codebase is in the millions of lines that is very expensive and not all companies have the resources to just put everything on hold and rewrite it and test it all for the new interpreter.
Well do you need to test everything at once? I usually write the machine independent code first then starting to write modules/funcs for the machine specific in a virtual machine of the os. 
Bad Bot
Gotcha. So I'm comparing it to PHP and if a PHP script was running at 21mb, that would be really high. So I guess I just need to learn how Python works internally. 
Umm... so if it was me I would try hard to avoid using selenium on a server, because all the gui stuff can get in the way. I think requests and lxml is the way to go... unless something is all javascripty in which case I would probably try to use `phantomjs`
&gt; If it works for both computer 1 and computer 2 =&gt; heisenbug? Not really, heisenbug is usually used for bugs caused by rarely occurring non-deterministic race conditions. In this case data is not the same on both computers, so I think calling it a heisenbug is misleading.
&gt; today I copypasted some code I saw on the internet, that made me a Data Scientist.
I'm going to keep at this as long as it keeps my attention. Might lessen over the holidays, and then ramp up again. Don't worry if you can't get started at once, feel free to send a message whenever.
Do so! Create a README file for your project that documets: - What is it - What problem is it solving? - What do you want it to be - How do you interact with it - How do you develop on it 
That's a pretty cool project, And I'll start you off by making you improve that README file! ## Create a README file for your project that documets: - What is it - What problem does it solve? - What do you want it to be - How do you interact with it - How do you develop on it 
[Well....](http://www.reactiongifs.com/r/nsr.gif)
He says it should be easy but he missed so many of his classes because of his depression and at this point I can't say no to him... 
For help, try /r/learnpython. Show them the code you have and describe where you are stuck. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin (no images). Also, include which version of python and what OS you are using. For getting someone to do it for you, try /r/DoMyHomework 
Why no ForeignKey to the user? 
Interesting. Out of curiosity, how would a simple object with attribute access stack up performance wise, even compared to the dict method? I quickly made the following, which does test out faster on my pc compared to namedtuple (I just used some lists as data, not an actual database query). def simple_object_factory(colnames, rows): class Row(object): def __init__(self, colnames, row): for col, data in zip(colnames, row): self.__dict__[col] = data return [Row(colnames, row) for row in rows] 
I guess these are the rough beginnings of a data model. It's at least possible to go back and make amendments
1: read the sidebar 2: /r/learnpython 3: read the sidebar 4: we won't do your homework for you 5: your friend should be talking to their professor rather than pulling this bullshit
I’m on mobile sorry I don’t know where the sidebar is, don’t use Reddit too often. And yeah I suppose he should, I’ll tell him to tell his lecturer he’s falling behind because that’s kinda lacklustre. Thanks for the subreddit. 
The link doesn’t work for me
I've just released a few new versions for one of my libraries - a wrapper of sorts for TkInter menus to make them a lot easier to develop/keep track of. But before that, I was working on the prototype of my virtual machine and writing a few languages to compile to it.
Ok, let me re-phrase, I would like to pay for the privilege. 
&gt; Today I went to https://keras.io/getting-started/sequential-model-guide/ and followed their steps verbatim, but changed the architecture so it is innovative. 
For simple HTML sites it can be easier to use a combination of [Requests](https://github.com/requests/requests) for the session management and actual url retrieval and [Beautifulsoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc/) for the HTML traversal. This would eliminate the need for a GUI browser, which Selenium requires. Use bs4 to extract the needed login forms, post them to the server using a Requests Session object, and then you can get any page you want using that same Session.
[removed]
I’m assuming this is tkinter. Set up a tkinter main window. Populate the left window by using a for loop that reads the data from the dictionary(all pickled files are dicts I believe). Attach a scroll bar element to the left window. You are going to populate the textboxes in the right side with an onclick event from the left side that parses the dictionary elements. No I won’t code it. 
This subreddit isn't going to do his homework for you, and you shouldn't be doing his homework for him. I'd he's having problems, he needs to get help.
Wow, thank you for this! Been using Cassandra for a little bit now and would have probably had to learn this the hard way.
Very cool, good job! Look forward to seeing what comes next! Where my head went was to buy a cheap laser bar code reader. They often function as keyboards so a webapp would still work with a slightly custom view. Scan a book, the app finds it online, creates a record. You could knock out 100 books in an hour. Bonus points would use a cell phone camera to scan. But yeah, I'm not coding that. 
Actually, at uni, a friend and I did an app that did exactly that but with video games. You would scan a game, and it added the details to a database. However that involved using Fishpond's barcode API to get the title, and then scrape Metacritic for the rating and more in-depth information. Yeah that was as painful to code as it sounds.
This is actually great! I found a lot of other APIs on Github but was unable to find one this recent - glad you found this one
Thanks for the suggestion Mr President I will definitely look into it
We have [a pretty long list of learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F). Try a few and see what resonates. For a brand new programmer I'd recommend codecademy. Also, if you don't have one already make sure you look for a project that interests you and start on it as soon as you can. Programming is a lot more fun if you have a goal. 
Thanks bruh
That's awesome. If this is for building a github portfolio it's a great project as it shows api/web client coding. 
https://github.com/alanjcastonguay/pyforce worked well for me when I was touching Salesforce regularly. It probably needs some polish. But I like it more than SimpleSalesforce. 
&gt; Please, people. Take advantage of this. It’s never a good idea to write stuff from scratch if you can avoid it. Strongly disagree. Someone else’s solution will take you time to understand and adapt to your usecase. For big dependencies, like Python and Django themselves, this pays off but with small to medium dependencies it may not. You’ll end up hating the tag system you imported because its model won’t be what your users want. Write it yourself. 
While I agree with that first point in principle in this particular case I feel it doesn't really apply. The tag system is fine - it does the job and wasn't particularly difficult to understand. For perspective, I knew a guy who rolled his own version of the 'requests' library because he couldn't understand it. That is the wrong thing to do. 
Matplotlib is particularly egregious in its design. You can see inconsistencies in function signatures, such as [pyplot.plot()](https://matplotlib.org/api/_as_gen/matplotlib.pyplot.plot.html) taking "c" or "color" for the color argument but [fill_between](https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.fill_between.html) only taking "color". Why are some routines like plot() part of pyplot and not part of axes? Why are the different ways to make a label different for pyplot compared to the axes object? All of these things point to a poorly thought out module structure. In my experience, the only thing you can reasonably do is use SO and learn to live with it :(.
I did check the response, and checked it again just now. I see this in the response body near the bottom: https://pastebin.com/Ecnf73zv For example this snippet (needless whitespace removed): &lt;td&gt;&lt;a href="\r\n\t\t\t\t\t\t\t\tverProcessoAndamento.asp?incidente=1475829"&gt;AI/126556&lt;/a&gt;\r\n\xa0\r\n&lt;/td&gt;\r\n&lt;td&gt;AGRAVO DE INSTRUMENTO\r\n Matching one of the search results. WIth regards to your other reply, about Requests not being supported, you're right, but it should be achievable in urllib2 as well. I'll try getting it working in Urllib2 later (it's early morning now and I'm prepping for work), unless you get it working in the mean time.
you can do a "syn" scan like nmap; it's stealthier because it does not establish a full connection so it's less likely to be logged or noticed and also might be marginally faster. the downside is you need root, or some sort of usermode packet driver thing.
I'm sure there's ways to do it faster (Like not using recursion) but this is how I'd do it: index through the string (using range not just a for loop) if you reach the end without flagging anything, return the string if a character is equal to the next one, return \*function name* without the character you tested for. 
So are you just going to keep reposting your website over and over for the clicks ?
I love how so many people in /r/python will respond both with "this belongs in /r/learnpython" and with a response to the question.
Unfortunately this comes because of the inspiration for matplotlib. Matplotlib was born of a desire to emulate matlab’s plotting functionality but that means that they’ve ported over all manner of sins that shouldn’t be possible or tolerated in a well structured object oriented language. Global state and non-obvious side effects abound in matplotlib because of this and people who write matlab code don’t care because they tend to live in the realm of copy paste programming... Unfortunately matplotlib also suffers from a dearth of maintainers (I think it’s literally one guy’s side gig) and so documentation suffers a lot. Please don’t hold it against the language, it’s a problem specific to the package.
Serializing (most) arbitrary Python objects in order to exchange them with other Python processes separated in memory time or space.
Does it need to be xml? If not, you could build a dict with your data and write it out as json. Or you could pickle it. Failing that, build the data as a dict and then use xml2dict to write to an xml file. If you want to build it as xml by hand, you could try the etree builtin, or grab lxml and use that instead. 
Hint: the difference between a typical Vigenere Cipher and mine is set in stone somewhere in one of the Encrypt functions (Encrypt1 or Encrypt2)
A class is much faster. You can use a decorator to make it immutable.
Switch over to a systemd unit first. Systemctl will stop/start/reload you process when you tell it
... in situations where you can be sure the API, Python version or library versions won't change, and where you can trust the source and authenticity of the pickle. 
&gt;Unfortunately matplotlib also suffers from a dearth of maintainers (I think it’s literally one guy’s side gig) The creator of matplotlib, John Hunter, passed away from cancer in 2012. He was the main driving force behind the library, which is one reason why the library isn't where it should be. 
/r/learnpython
That is not the actual intention, i would like to learn and share knowledge
OK? It's already hard to create a distributed system, basically impossible if you're just randomly guessing at what's going into it. Getting back to the topic at hand, removing pickle is drastic and it's better to tell people that pickle isn't meant to serialize bulk data. People will never listen, however, and to this day that's why we have things like SQL injection and people asking how to use `gets()`.
/r/learnpython
I personally use requests all the time. Much prefer it! However 3 of the modules I am importing and packaging with support functions all use URLLIB2 :-(
* It gets to the good stuff, the business logic and UX fun faster by automating the foundation busy work unifying the terms and named across multiple layers. * It is part of a deploy and accepts some "literal" environment variables specific to the host and an app config object. * Monolithic deploy script * AWS prod / Dockers dev spin ups
thanks!
I think the main point is if you are using django don't fight the framework. 
Sure, who needs multiprocessing on Windows anyway.
Hi there, well, first thing is formatting. You need to check your code with PEP8. One big problem is calling functions from upper case letter. All methods and functions must be called from lower letter. The same for variables. Anyway, please read and check your code with PEP8 carefully. Second is functions and variables naming. Use more clear naming pattern, don't be lazy or scare to use long variables name. Most important to let somebody read it well. good luck
Indeed. I assumed that the data was the same. OP should have used md5sum first.
Just run md5sum on your pickle.
A PR (https://github.com/matplotlib/matplotlib/pull/9475) is open to improve the alias situation. plot() *is* part of axes (literally as `ax.plot()`). In truth I would suggest never using the pyplot interface except for creating figures (and axes, with `plt.subplots`); everything else can be found as axes methods.
Documentation takes time to write, just like code. There has been a massive effort recently in improving the docs (https://github.com/matplotlib/matplotlib/pulls?q=is%3Apr+label%3ADocumentation+is%3Aclosed) (aka "it was worse before") but PRs are always welcome. It may also be a personal taste thing but I actually don't like the javadoc style ("here are all the methods that exist, figure out yourself how to chain them") particularly helpful either. At the prompt, you can get a class' inheritance chain via `cls.__bases__` and `cls.__mro__`, and the attributes via `vars(obj)` and `dir(obj)` (details available in many places online).
I personally like the javadocs, I like the conciseness and clarity, and the type system makes it clear how to chain calls (helped by the fact that parameters and returns are themselves clickable links to sub/super classes). Those are interesting, I will explore them tomorrow. If you could point me to specific online resources (I am unaware of any) I would appreciate it. Thanks for taking the time to answer.
Haha I won't :) I don't dislike Python, although I have my grudges. Spoiler: sum([1,2]) sum = 7 sum([1,2]) 
But notice that the call to `.spines` is outside the pyplot interface.
[Part 2: Deployment](https://medium.com/@tcbasche/django-a-story-about-deploying-to-the-cloud-9af7b4dced9a)
OK, so you found an easy way of doing something that was easy in the first place. Congratulations. The only thing that remotely resembles a challenge here, though, is not going crazy with the shiny toys. You needed a simple, no-frills basic CRUD application, and that's what you built, which is good; all too often, inexperienced programmers will throw in all the impressive stuff they read about on some blog just the other day, and you end up with this brain damaged monster of a mongodb cluster with elasticsearch on top running on a dockerized microservice architecture, feeding an SPA that uses three JS frameworks and 615 libraries and uses web sockets and 3D effects and a million other things, but the one thing this monster does not do is quickly tell you whether you already have the book you are currently holding in your hand in under 10 seconds and without throwing the user into a UI-frustration-induced rage fit. The requirements are straightforward, so the solution should also be straightforward; if it's not, then you're doing it wrong.
In order to further illustrate my point, permit me to describe my use of python. I am not a professional programmer nor I do write code that gets deployed onto production systems. So any argument parsing scripts that I wrote in the past were for personal use. Click''s technical advantages over clize would not have been of much interest to me. But recently I've begun developing some pretty big cli scripts where I needed access to some additional terminal utilities. And Ive begun to think about how in Sam Hill I would share these scripts so that they would run on another person''s machine. I don't want to become mired in a sort of devopts maintenance hell because that's not my domain of expertise. So now deployment strategies that could reduce the number of emails and telephone calls back to me, is becoming more important to me. Still, most of my code is for personal use. Analysing data within some data store, throwing it somewhere and retrieving it. Plus I want to develop more scripts that run on my Android device using termux and not just my laptop. I feel no shame in the fact that I'm not some highly paid, extremely proficient programmer with big data and production machine responsibilities under my belt. So I would have no reason to imply that your use cases for python are not at a high enough level to warrant respect. Hope that this makes sense to you. I use python 
Are you kidding, that monster sounds amazing! In all seriousness yeah that's totally it. It becomes *too* easy, when doing something like this - especially a personal project - to get lost in the particulars. I also cut a fair few corners because I wanted to deliver something straightforward in a short amount of time. Perhaps that's indicative of real-world dev more than anything. But I know all too well that developers who are starting out and want to grow their portfolio tend to go nuts with insane ideas that are just snippets of a completed project, rather than a straightforward application that delivers that 'MVP' approach that's becoming the norm for a lot of companies. 
[removed]
&gt; A one time rewrite of all your python 2 code to python 3 What rubbish, no such thing is needed. The bulk of the work can be done by running your code through 2to3, rewrite indeed. It is hardly surprising that porting code has taken so long when FUD such as this is rife right across the internet :-(
In commercial terms for a large project 10 months is nothing.
Yet more FUD. I give up.
Thank you so much for this! Enrolled in all of them, but the last 3 don't work FYI - May have expired
I find it laughable that you are comparing documentation from a FOSS project that works on a shoe string to something produced by a company with billions of dollars to throw around.
Well, the MVP thing has its own share of intrinsic problems, but yes. In the end, it boils down to experience, because you need to develop a gut feeling for when things are just right on the complexity axis, because you need to be able to tell the difference between "simple" and "easy", and because you need to be realistic about how hard things are going to become down the road based on decisions you are making right now.
Yeah, they are discounted.
There's also a big difference between 'complex' and 'complicated' (just adding to everything you said)
Oh, so they are ! I just clicked them again and it worked. Must not have applied the code previously.
True, and it's almost as important. The big mental shift is realizing the difference between "complex" (has many moving parts, and/or many interactions between moving parts) and "difficult" (requires skills, knowledge, expertise, or experience that I do not currently have). From there, the step to telling "complex" (the solution has many moving parts because the problem consists of many subproblems) from "complicated" (the solution has too many moving parts because we failed to identify the subproblems correctly) isn't huge anymore.
Thanks for the info. I'm looking for something online, maybe like how [browserling.com](browserling.com) provides remote access to multiple browsers to test website compatibility but instead have a python console's output.
Oh nice does this make version control better on jupyter notebooks cause its plain text?
Seems like I'm going to go with Appveyor. Both seem great though. Thanks for your input.
I bumped into this, its pretty good intro for python devs. I was a bit confused how a blockchain was different then a database honestly
Yeah I am intro crypto more from an investing standpoint. Its interesting to see how to code some of this stuff. Solidity looks a lot nastier then python so I might skip it. I think Python devs should look towards Viper https://github.com/ethereum/viper
Is there a reason why caps in the function name is forbidden, or is it just aesthetics?
There are several apps that already do exactly that. See this list of book management apps I found via a quick google search: https://www.insidehighered.com/blogs/gradhacker/7-apps-cataloguing-your-home-library.
It was chosen semi-arbitrarily as the correct way. Consistency is key - everyone (should) do it, therefore everyone (should) be used to it and have an easier time reading code that follows pep8. It is extremely important when you are working in a team - being able to easily read code written by someone else is the only way you can work with them, not to mention catching bugs made from interaction between your code and theirs 
Thats fair, just curious as to whether it was picked for consistency reasons or whether the interpreter likes certain conventions better than others. Thanks!
Wasn't there a library that had all of the regular expression codes implemented as objects that could be concatenated? This is cool and all, but a clearer regular expression library is worth more than excellent documentation.
Well, just additional for reply below. Rules of formatting are say: - Name of the classes must beginning with upper case letter - name of methods/functions and variables must beginning with lower case letter. - By internal rules methods/function names can be named by camel case or with underline There rules are written in blood)) Because a lot of developers writing their code as they wish and then anyone have bleeding eyes while reading it. So, just follow rules :)
Yep, Matplotlib's docs are pretty all over the place, as well as it's API. Only advice I can give is find a style you like, and stick with it. Also make use of `help`, chances are that bit of documentation you can't find is in the doc string of the object you want to use! If you're not desperately tied to matplotlib, and especially if you're using Jupyer I've found Bokeh to be an absolute joy to use: https://bokeh.pydata.org/en/latest/ awesome, beautiful interactive plots, with a consistent API that you quickly get a feel for.
Cz freeze is an alternative, i used it myself to port my program to windows. Its a but tricky but after watching some tutorials ill work out eventually. 
Hi guys I'm looking for advices on how to build something that looks similarly to an event-bus and has some of the features that you would expect from a pub-sub. Basically in our cloud infrastructure we have components generating evens: - devices reports - user actions - events coming from third part services etc.. then we have actions we want to perform when events occurs : - notify user about changes of a device - store something on our db - cal a callback to notify a third part service about something we also would like in some cases to connect event to handlers with a subscription mechanism where dynamically you can forward the event to an handler only if a subscription is in place: An use case could be for instance that we want to reply asynchronously to a user request to set something on a device only within X seconds. (here a ttl mechanism could help) I would like to avoid to reinvent the wheel for obvious reasons.. Do you have recommendations on how to reach my goal? frameworks/packages suggestions, thoughts etc are really welcome!
os.system() is roughly equivalent to running subprocess.Popen() with the 'shell=True' keyword argument. It could be that the google-cloud-speech library depends on having your system shell to run under, I've seen this behavior before with android debug bridge. Note: Learning questions are usually get a better response in /r/learnpython.
Why wouldn't you use bottle? Personally, I prefer bottle.
With bottle you get only the modules you need, and the number only increases with the option you choose. I'd say django is an example of fewer options, because almost everything has to be done the django way.
The first issue (which core maintainers have recognized) is that there just hasn't been enough resources to make the documentation really good. I think the team would definitely appreciate contributions (financial or in prose) to improve this. The second is that matplotlib is a many layered beast - you can use it through the matlab-style interface, through the semi-OO interface, through the base elements/artist classes. So in effect you need several documentation books one for each style, plus one to explain the various hybrid modes. Generally the easiest is to look at the examples. The third, related to Javadoc comment, is that in general python documentation aims to be focused on explaining the use rather than just the API (which is particularly relevant wrt point 2, since if you just had a full API navigator you would see all the layers without any explanation of how to use them). Of course if all this really bugs you, you can try something new and trendy like Holoviews (with matplotlib backend). When teaching, I tend to caution people away from the Next Big Thing in visualization. Especially if you need publication-quality plots, the maturity of matplotlib is hard to beat (even if it's not got the most elegant API).
Not sure about PyCharm, but I find that autocomplete works in the console if you make a reference: ax = axes[0,0] then `ax.` + &lt;tab&gt; gives me suggestions. I'm using Jupyter QtConsole.
if you want recursion, I would go for the following: def remove_duplicates(string): for i, (a, b) in enumerate(zip(string, string[1:])): if a == b: return string[:i] + remove_duplicates(string[i+1:]) return string Also, somebody correct me if I am wring, but as a rule of thimb try to avoid looping with indices (especially range(len(string)))
Thank you!
It's a joke. I'm sorry.
dont you have something like PyEthereum? And on top of that PyEthapp? https://medium.com/@pipermerriam/the-python-ethereum-ecosystem-101bd9ba4de7
&gt; https://medium.com/@pipermerriam/the-python-ethereum-ecosystem-101bd9ba4de7 Pyethapp is used for building a complete Ethereum client. Generally speaking if you are just interacting with blockchain you just use Pyethereum https://ethereum.stackexchange.com/questions/5769/whats-the-difference-between-pyethapp-and-pyethereum
Good level of development going on with Viper. Serpent is pretty much dead now.
Searching for matplotlib solutions is always more frustrating because of the mix of messy matlab-style API code and and the OO API code.
Thank you!
I thought that: 'About a year ago now, my girlfriend came to me with a problem.' It's been a year and you only have a rough data model? Or was the girlfriend part a lie?
As in, I did the project like a year ago. It only really occurred to me now to write about it.
Thank you, a life saver indeed. 
Did she use it? I'm guessing not. Because she didn't exist! : D On a serious note: writing software for end users is much more difficult than making a single data model. Deploying that software to production and maintaining *while* people are still using it is half of the battle in the real world. 
Yeah its a pretty cool project, not sure if it will get off the ground. A lot of people have lost money on solidity. But its had 100s of millions of dollars of mistakes made against it. Sometimes better the devil you know
Neat! Quick tip: Instead of requiring input in capital letters, you could simply add .upper(). Same thing goes for punctuation with .replace(), although I suppose requiring no punctuation has more to do with the cipher than the code.
You need to get your friend help for their depression then, not spoonfeed him tkinter code. The depression will only get worse, python homework can wait. 
Lol. She absolutely does use it! I've been given a few feature requests from her as well but it's just finding time to sit down and do it really. At least I can tell my entire user base to not use the system 😁
Some decent projects on fixing solidity and smart contract security in general. The Haskell people certainly take it very seriously. Be interesting to see what plays out.
Yeah I would love to see it happen, to bad better languages don't always win
Not to diminish all the work put in by many dedicated people, but solidity is quite terrible, much like js, everyone is sort of stuck with it now. 
you can find some libraries like https://pypi.python.org/pypi/easy-expressions/0.1.1 . But not everything is implemented 
Remember amatures play with themselves and professionals play with others, learn how to play well with others. 😏
Thank you for sharing
That's what they mention in the article yeah.
Python programming tutorial part 12
Pass `sorted` a [key function](https://docs.python.org/3/howto/sorting.html#key-functions).
I appreciate you stepping up and trying to improve the package :).
Working on a CMD game about numbers (pokemon ripoff)
What's the name of the project?
IDK why you're being downvoted, you didn't claim they were free. Please don't let that discourage you from sharing. I can attest to Data Analysis with Pandas being a VERY well-done course.
Keep in mind PyQt is dual licensed as GPL/commercial. This means you'll need to give the customer the source code to your app as well, as mandated by the GPL, or buy a commercial PyQt license.
Thanks. The functional syntax in that library is pretty ugly. I'm probably thinking of one of the parsing libraries. Anyway, good job on the explanation.
You don't need to figure out how to handle the daemon if you use systemd. Systemd will effectively daemonize and manage the process for you. Here's a digital ocean guide on setting up flask and gunicorn on systemd https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-16-04 I've followed it for good effect. Note that the exec string does not include the daemon flag. For all it's worth, I never figured out how to get the bare gunicorn daemon to play nice either. 
That didn't cross my mind. Thanks!
I guess I understand most of the whole formatting thing, but I don't get why you would need to specify something like capital and lowercase letters in functions, that just seems like pointless constraints. Just because there are a set of rules for formatting, it doesn't mean I need to follow any of them (even though I would be willing to follow most of them). I'm the kind of guy that gets pissed when people tell me to follow rules that make no sense and constrict what I'm allowed to do for no reason. Maybe I just get upset when I feel like things are over-restricted Sorry for the angry reply, I don't actually mean much, but u know it's reddit, and what is reddit if not a bunch of angry replies lol 
You could try PySide, which has not this license-problem. Though, not sure how much alive it is nowadays.
Is that still the case?
Yes, please! :) Thanks!!
Why would you assign to a reserved keyword ?! 
&gt; PySide Thanks. It looks like I would need to obtain a qt license as well regardless of the gui framework.
I made a lit [gist!](https://gist.github.com/josuebrunel/ca2f8357b7ddfff6586af851be4e04d5) with an example. You have to think about **data binding**. Hope it helps
from dateutil.parser import parse as dateutil_parse from lxml import etree, objectify as xobject def is_clean(element): if not element.getchildren() and element.text is None: return False return all(is_clean(child) for child in element.iterchildren()) class BaseType(object): """Base data binding object """ tagname = None namespace = None nsmap = None def __repr__(self): return '&lt;%s&gt;' % self.tagname @classmethod def make_element(cls, tagname, value=None, namespace=None, nsmap=None): M = xobject.ElementMaker(annotate=False, namespace=namespace, nsmap=nsmap) return M(tagname, value) @property def xml(self): if isinstance(self, (ListType, DateType)): return self.make_element(self.tagname, self.value, namespace=self.namespace) tag = self.make_element(self.tagname, namespace=self.namespace, nsmap=self.nsmap) for subelt in self.sequence: attr = getattr(self, subelt, None) if not attr: continue if isinstance(attr, (str, unicode)): tag.append(self.make_element(subelt, attr, namespace=self.namespace)) else: xml = attr.xml if not is_clean(xml): continue tag.append(xml) xobject.deannotate(tag, xsi_nil=True) return tag def __str__(self): return etree.tostring(self.xml, pretty_print=True) class ListType(BaseType): """Data binding class for ListType """ allowed_values = None def __init__(self, value): if value not in self.allowed_values: raise Exception('&lt;%s&gt; value (%s) not in %s' % (self.tagname, value, self.allowed_values)) self.value = value class DateType(BaseType): def __init__(self, value): try: self.value = dateutil_parse(value).date().isoformat() except (ValueError,) as exc: raise Exception(exc.message) class ComplexType(BaseType): """Data binding class for ComplexType """ sequence = None # Couple example of Python objects class Sex(ListType): tagname = 'Sexe' allowed_values = ('M', 'F') class Credentials(ComplexType): tagname = 'credentials' sequence = ('login', 'password') def __init__(self, data): self.login = data['login'] self.password = data['password'] class Profile(ComplexType): tagname = 'online' sequence = ('url', 'credentials') def __init__(self, data): self.url = data['url'] self.credentials = Credentials(data) class Identity(ComplexType): tagname = 'Identite' sequence = ('firstname', 'lastname', 'birthdate') def __init__(self, data): self.firstname = data['firstname'] self.lastname = data['lastname'] self.birthdate = data['birthdate'] class Address(ComplexType): tagname = 'Adresse' sequence = ('street', 'city', 'county', 'state', 'zipcode') def __init__(self, data): self.street = data['address_street'] self.city = data['address_city'] self.county = data['address_county'] self.state = data['address_state'] self.zipcode = data['address_zipcode'] class Person(ComplexType): tagname = 'Personne' sequence = ('identity', 'sex', 'address', 'profiles') def __init__(self, data): self.identity = Identity(data) self.sex = Sex(data['sex']) self.address = Address(data) # Data DATA = { 'firstname': 'Josh', 'lastname': 'Loking', 'sex': 'M', 'birthdate': '2000-11-11', 'address_street': 'Main Street G. Washington', 'address_city': 'Ravenhill', 'address_county': 'Orange', 'address_state': 'Tennesse', 'address_zipcode': '99999', } if __name__ == '__main__': person = Person(DATA) print(person)
&gt; It looks like I would need to obtain a qt license as well For what? Are they planning to sell your software? Or do you wanna deliver a binary?
A printer 'driver' for Zebra printers so they can print ZPL code from an internet browser (because the real way to make that happen is janky AF). If anyone ever has to deal with ZPL in Python, let me know. Don't repeat my suffering.
Working name is CodeClippy. We're on [the Upcoming page of Product Hunt](https://www.producthunt.com/upcoming/codeclippy) if you want to follow it, but we've been iterating on a few different ideas so the copy might be a bit misleading there : ) Currently experimenting with ~10 users in a Slack channel, happy to add anyone who's interested
Name | Lang| Sauce --- | --- | --- rabbitmqctl | cli | https://www.rabbitmq.com/man/rabbitmqctl.8.html rabbitmq-management plugin | cli/http | https://www.rabbitmq.com/management-cli.html pika | py | https://pypi.python.org/pypi/pika paho-js | js | https://www.eclipse.org/paho/clients/js/ php-amqplib | php | https://github.com/php-amqplib/php-amqplib celery | py(php,js) | http://www.celeryproject.org/ mqttwarn | py/cli | https://github.com/jpmens/mqttwarn
Thank You!
If you're struggling with the game because you just don't care, then that's fine. If you're struggling with the actual coding of the game then that's a problem. Code is code is code and you will be using the exact same language features doing data science as you will when building that simple game.
No. Qt itself is LGPL licensed. That means you can distribute binaries as long as they are dynamically linked against the non-modified Qt libraries. I think that includes PySide. No need to buy that expensive Qt license.
Agreed. Every weekend project library you bring into your codebase comes with a large tradeoff. "Not invented here" and "Frankenapps" exist because people have the mentality that it's "never a good idea to write stuff from scratch if you can avoid it." 
If you want to ship a Debian package, you can just depend on Python and be done with it. If you want to ship an exe, use a compiled language.
In my (limited) experience, Flask and Bottle are pretty darn similar. Flask has the advantage of the larger user base and more plugins but Bottle is simpler and a single file (nice for bundling it within an application). Also, Bottle's SimpleTemplateEngine is pretty cool and again, part of the single file. There is no additional packages to install. Honestly, I think you could use either one pretty happily. But I prefer Bottle (I am a hobyist webapp developer. Not a pro so YMMV) 
Isn't a book series a foreign key relation to the books themselves?
https://i.imgur.com/ApjuN3L.jpg Yep
&gt; Personally, I prefer bottle. Same, but a preference for mature swagger support weighed me to flask. If you compare [bottle-swagger] to [connexion] you will just be happy your in a "sane" py env and it is not sooo bad to use flask instead ;) bottle-swagger: https://github.com/ampedandwired/bottle-swagger connexion: https://github.com/zalando/connexion 
A 3D game in PyGame utilizing ray casting
There is lore that say flask was created in retaliation from the werkzeug guys. For what reasons I'm not sure. Flask just grew more popular. 
Just to add, what about using `__slots__` on a simple object so it has a fixed number of attributes. Of course, you (a) lose the indexing (which I never use if I have named attributes) and (b) you lose the immutability. And maybe the hashable? (Not sure).
&gt; django I'm not up to speed with this kind of things but is [aldjemy] the only SQLAlchemy support? https://github.com/Deepwalker/aldjemy
https://realpython.com/blog/python/building-a-simple-web-app-with-bottle-sqlalchemy-twitter-api/#.Wi6RyDQZ-VA.reddit worked for me!
Thanks for clearing that up.
OK lots of thought and research the past day, based on people's comments here. General principles I now think should have been obvious: 1. **Minimize the amount of code in the `try` clause**. Just include the amount of code needed to throw the exceptions. Put the rest in `else` or `finally`. 2. **Use exceptions, not status codes** in Python. Functions are for returning values, exceptions are for handling errors and are meant to be *raised* so they can bubble up to the stack trace if needed. You do not want them to be invisible. 3. **Use the library.** The `requests` library has exellent error-handling, so there is no need to roll your own. For instance, their HTTPError already includes the url, so you don't even need to make a custom message that displays the URL. In general, their exceptions are very clear and well written: there is no need to write your own message. 4. **There is no one-size-fits-all answer.** The information I left out in my post was "What is this for?" Do I need to log errors, or custom exception chaining, etc? For now I just want to see if the request worked or not, and to know what type of exception is being thrown. So, based on all that, here is the new and improved function: def make_request(url, session): try: response = session.get(url) if not response.ok: response.raise_for_status() except requests.exceptions.HTTPError as httpError: print(f"make_request - HTTP error: {httpError.\nURL: {url}") raise except requests.exceptions.RequestException as requestException: print(f"make_request - general exception raised: {requestException}.\nurl: {url}") raise else: return response It is way simpler, it only returns one type of value, it uses exceptions. The main weakness: I should add logging of errors, because ultimately it is going to be deployed at a remote server where I won't have the luxury of `stdout`. I'm curious what the helpful commenters (/u/spackl0, /u/fiedzia, and /u/pydry) think of my reasoning, and new function, as I am still *very* new to this kind of thing.
Good point. 2x performance out of nowhere. But even with this tweak, it's only a ~1100-1300 requests per second. Very slow. Even async requests or multiprocessing won't help. Slooowww..... And with this bad performance, driver eats a lot of CPU, so we cant just fire a unlimited number of process to increase a performance. Sad. Our benchmarks says, that on same machine (2core+HT CPU) Java/JVM driver dramatically faster. Up to 50 000 rps with multi-threading (and it just hits a limit of single Cassandra node or network). Disappointment. Did anyone has good practice with python driver?
yeah figured as much was a silly comment
Anyone have a good workflow for solidity development?
Thank you for sharing ! Some of them aren't free but only discounted but I applied for all the free courses. I hope it will help me to improve my skills
That would be nice. I forgot how I solved it, but it involved having a drop location for files and an script that needed to be run. It wasn't great, but the client hasn't complained.
I have seen this posted on this sub before: import collections as cl def tree(): return cl.defaultdict(tree) Now you can do stuff like config = tree() config['a']['b'] = 1234 config['b']['c'] = 'abcd' Useful for creating nested dictionaries for things like unit tests.
Neither. Use 3.6 and f strings when possible. I didn't expect to care either way, but they are actually pretty convenient. Then look under the hood and you'll find they are efficient too.
It is one thing to not be good at some specific usage or feature; you can be good at Python without being good at Numpy, for example, or vice versa. But a simple task - like implementing a Tic Tac Toe game, even with AI - should be simple for anyone who is good at Python, or any programming language.
Yeah You can Buy this web hosting. Because this is best for any web site hosting. so be happy with this... 
Yeah This is Best Web hosting Plan
A new framework based around the idea of Laravel. It's a project I started to learn how Python frameworks are made and is coming along really good. I wrote some documentation for it in the GitHub wiki for those who would like to contribute. https://github.com/josephmancuso/python-framework 
This is really good thanks. So many regex tutorials do weird things like start with `compile` or other tangential methods, rather than the basic rules for matching. Well done.
Pretty new to Python/Coding as a whole. https://github.com/joeavanzato/ExtCheck Working on a File Signature analysis tool which is still pretty basic and requires loads more work. Next big step would be converting it to parsed argument format rather than user input. https://github.com/joeavanzato/MACfuscator Next thing I've also been working on is an anti-forensics tool which seeks to obfuscate timeline activity through a variety of mechanisms (MAC attribute randomization, system time alterations, event log wiping and attempting to destroy certain property ('LastBootUpTime') of CIM_OperatingClass. I barely have any idea what I'm doing. It's also not working exactly how I would like it to, more of a basic feature test. 
Trying to figure out how my fork of django-cacheops that adds asynchronous invalidation breaks our threading.local-based database routing so we can feature-flag it back on. Not a happy hacker this week...
Thanks
Writing a REST API in Amazon Lambda. Pretty fun, especially because I've started Python 3 weeks ago :o
Weird. Try https://realpython.com/blog/python/building-a-simple-web-app-with-bottle-sqlalchemy-twitter-api/
.format is forwards/backwards compatible. Unless you're certain you're in 3.6 for good, stuck with the versatile option.
 g = 'got' k = 'know' f"f-string you've {g} to let me {k}"
.format is forwards/backwards compatible. Unless you're certain you're in 3.6 for good, stuck with the versatile option.
**For Hire** Python/Django Developer. I am for the most part self taught, however I did attend University here in Windsor for 1 year for CS. Python has been my go to language since leaving University, and I have in the past year or been learning Django. I just published my personal website a couple months ago, which you can find [here](https://dhayes.me). It's a blog which I haven't written in yet, but you can get the idea. As mentioned, it uses Django for the backend and HTML/CSS/Bootstrap for the frontend. I deployed the website on an Ubuntu VPS using Nginx and Gunicorn. You can also check out my [Github](http://github.com/imasnyper). The latest project I am working on is for my girlfriend, which will be a gallery app for her paintings. I am learning/using Jquery for the front end on that project. I am most interested in backend web development, but I will do any work you have. I am currently located in Windsor, Ontario, but my girlfriend and I are eager to move anyways, so I am definitely willing to relocate for the right opportunity. Please contact me if you have any questions.
This one works. Thanks a lot.
I totally agree with /u/mkleehammer about f-strings. But if using an earlier version of python that doesn't support f strings, I always prefer named parameters with format. "It also makes it easy to fill in values with other {data_structures} you are working with and allows you to be explicit. {zen_reference}".format( data_structures='dicts and other mappings, primarily' zen_reference='explicit is better than implicit') 
I totally agree with /u/mkleehammer about f-strings. But if using an earlier version of python that doesn't support f strings, I always prefer named parameters with format. "It also makes it easy to fill in values with other {data_structures} you are working with and allows you to be explicit. {zen_reference}".format( data_structures='dicts and other mappings, primarily', zen_reference='explicit is better than implicit') 
Good. One thing though, compile in new versions of python is cached so it's not necessary.
That's why I suggest never using pyplot... (except in a very limited number of cases, above).
Please don't. 
Ack, the other poster was right. Text posts only. Would have to embed the link and that kinda takes away from the appeal. Sorry. 
You were right
And you mention yourself, Python's you're system is... simpler, shall we say, than Java's, which also limits the usefulness of javadoc-some docs.
There really isn't a good answer. If you want to use the Logging module you need to support `%` syntax. But generally people find the syntax of the format strings to support a more literate way of programming, because `Hello {firstname}, how are you doing this fine {day}`, is rather easy to understand. That said just using format strings doesn't guarantee that the strings you format will be easily understood. ---------- As for the objections in the link you gave... the extent to which `.format` is insecure seems rather overblown to me. The only context in which there really is meaningful insecurity is if you are writing a web service, or some other service where you blindly take input from the user, and then apply `.format` to it. But that is obviously insecure, anytime you blindly apply a function to user controlled data there is a risk, its a mistake to think that "its safe to apply functions to this because its a string." If your use falls into that case, then what you can do is utilize f-strings in place of `.format` (although you do have to have a very recent version of python to do so).
No worries! Thanks for looking into it.
2 lines?!?! 1 LINE SOLUTION OR GET OUT OF HERE... /s
Does anyone one have an opinion on if udemy is better than coursera for python classes ?!
Keep in mind that software development is not programming, and vice versa. One's a tool for the other. If you're a fine woodworker specialising in furniture, does the fact that you're clueless at how to make scale buildings devalue your ability to work a saw, plane or chisel? Likewise, a programming language is a tool to write software, but there are a lot more skills involved. Fundamentals for a professional developer might include software design and architecture (and each kind of architecture has its particular challenges), API design, debugging, etc., while various types of software might involve annex fields like data processing, networking and protocols, AI, machine learning, signal processing, electronics (see: embedded software), computer architecture, and so on. The specialised knowledge in particular don't impact your core abilities as a programmer nor your ability to reason logically like a programmer, using common paradigms (like OOP) and control structures (loops, etc.). You'll have to learn some of the rest to write maintainable and effective software, but as a beginner this isn't essential to you right now, and if your interest is to use Python for data processing for internal use then no specialised fields other than that apply to you. 
I don't get this argument. I use setup.py to install a Python package and then use it. The Python package is free to execute arbitrary code which requires a high degree of trust between me and the package author. If that same author wrote setup.py then why would I not trust that too? What scenario am I missing where you have an untrusted setup.py but trusted Python package?
/r/learnprogramming
Pulling my hair out as every effort to modernize legacy spaghetti developed by multiple contractors is roadblocked by "works on my machine"
''' multi line comment ''' 
A script to automatically set desktop background from different sources.
There are a number of more robust and safer alternatives to pickle.
Hows it going? Do you have it on github? Ive been looking into doing some 3D things with PyGame
At last! There were no python beginner tutorials on the web!
I'm not very experienced with GitHub so I've hardly ever been on there. And I literally just started the project the other day and have barely had time to work on it. 
Would you mind sharing it?
nope
One thing to note. Using builtin names such as “str” is a very bad practice because it replaces the behavior of the builtin. I see people using “file” all the time as a variable name, and what happens when you go to open a file with “file()”? Depends what the value was, but it’s never the behavior they wanted. 
`bx` is empty...
You are indexing "bx" but "bx" is an empty list. Once you fix that you will have another problem, because in the second loop "bx" is no longer a list. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Did make a change. See, I want to print the values of bx. First value of bx=sum(a[0:window]) From next values, it follows like bx[n]=a[n]+bx[n-1]-(bx[n-1]/window)
..and C-style strings are cross language compatible.
Yep, I usually end up using high level abstraction packages like plotly or seaborn so I don't have to deal with the mess that is trying to build matplotlib charts directly.
I want to print values bx... First value "bx" is bx=sum(a[0:window]) and then from second value it follows like this.. bx[n] = a[n]+bx[n-1]-(bx[n-1]/window)
I disagree. Could you explain why is bad? From my point of view I think more projects should start to use more dotenv and more containers to appreciate the benefits in long term.
 Ok, just write that in code then: a=[ 0.96,0.48,1.36,0.79,0.88,0.75,1.31,1.11,1.02,1.24,0.58,1.05,0.73,1.08,0.90,1.09,1.17,1.63,0.72,1.31,0.51,0.78,1.06,1.11,0.66,1.04,1.74,0.58,1.38,1.03] window=14 bx_bar=[] bx=[sum(a[0:window])] for i in range(1,len(a)-1): bx.append(a[i]+bx[i-1]-(bx[i-1]/window)) bx_bar.append(bx) print(bx_bar) 
Converting 10 years of legacy nightmare spaghetti into a bunch of AWS Lambda functions. 
Hey speaker here, if any questions about blockchain development let me know 
&gt; The textfile.txt is sitting right on the desktop but it's saying it can't find it. Where is the python file? If it's not also on the Desktop then you will need to provide the absolute path. t = time.ctime(path.getmtime(r"C:\Users\yourusername\Desktop\textfile.txt")) note that I used a raw string (`r` in front). This is very important for windows file paths. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
That's not my point. pickle is heavily used by multiprocessing, especially on Windows. As long as that is the case, there is no chance to get rid of pickle. 
It is on the desktop
The python file? No it's not. Your error says the python file is in the "Python_practice" folder. &gt; File "\tai-fp-srv01\users\Damien.Blue\Desktop\Python practice\Date_Time_python.py",
For all those countless times you need code to run in Python 2, Python 3, *and* GCC! 
Thanks for the help
thanks for sharing. i already have enrolled on two python courses
Trying to get my TD learning CNN bot to learn to play tic-tac-toe within 5k games against itself. Once I have gotten it to do that, I want it to learn chess. 
This is great! Thanks Buddy
As you, like me are an anonymous person, I don't know what your background is. But if you've been in software development for any time you'll know that every change to a file brings with it the possibility to introduce bugs. Running your code through 2to3 is a rewrite (this is just semantics it updates and saves a new version of the file) and is not 100% guarantee that the python 2 code will work exactly as expected meaning more edits could be needed. You can't assume your organization's code has 100% test coverage and will catch any errors introduced by running your upgraded python2 code in a python 3 interpreter.
just write lisp instead, it's cross-universe compatible 
You don't need to. I was referring to the documentation style, not to the subject. Consider, as an example, the javadocs from the FOSS project [Apache Commons](https://commons.apache.org/proper/commons-lang/javadocs/api-3.4/) (or of most things Apache). Now, it being on a shoe string, that's an entirely different point.
Good practice. There's a philosophy underlying much of Python's design that there should ideally be one and only one obvious way to do something. In that spirit, [pep8](https://www.python.org/dev/peps/pep-0008/) was created to create a common basis for a readable style everyone is familiar with.
Just create a repository with all the code together like a normal project instead of b64encoding things into the environment like a crazy person. Or volume mount it if you really don't want your code in the container filesystem for some reason.
It's not hard to see a user doing it by accident. Do you know all the reserved words of the language? The real question is why the heck would the compiler allow it.
yes. opensource. select any project you like, and owner them for easy task, and grow up...
Last week I started working on building progression tables for all possible gestalt builds in Pathfinder. If you are an RPG nerd, check out my progress @ https://github.com/deifius/GestaltPathfinderCharacter
I relate to this a lot. Right now I'm taking a python tutorial but can't really fit everything I've been learning together to create a good program. But I guess I can't talk now as I'm not even half way through the tutorial.
The call to `.spines` is on the object `Axes`. You have to deal with it wether you're using `pyplot` or not.
Note (I keep seeing this in this thread and I'm fairly certain it's from people who have little to no idea what they are talking about), there's absolutely nothing intrinsically insecure about solidity, but there can be poor security in the programs written by people programming in solidity.
Trying to create a KPI dashboard using pandas, flask &amp; bokeh 
Tried... still list index out of range.....
It works. I know it does because I tested it before I posted it. Copy / paste the whole thing, not just line 6. 
Trying to figure out a 3 dimensional analysis of Planetary Nebula emissions, from other galaxies, as taken with the MUSE IFU, quite the complex challenge....
[Hiring] Senior Software Engineer (Python) at Pole Star Space Applications Ltd https://www.djangojobs.net/jobs/735/senior-software-engineer-python-pole-star-space-applications-ltd/ We require an experienced Software Engineer with strong commercial experience of Python at Pole Star, to build and maintain our core Python based platforms and services. You’ll work in a talented and interdisciplinary team, with a strong creative culture, and help us deliver high impact work. You will work closely with all facets both in our Boston and London offices. 
Don't think of it as creating a game. Think of it as solving a problem. I'm not at all interested in game programming myself, but in the beginner programming courses at my university they tried their hardest to tie everything programming-related to gaming because apparently everything has to be tied to games to hold our fleeting attention span, or so they think. Just approach it from the angle of a true programmer - you have a problem that needs to be solved and you have a set of tools at your disposal. Work with them to achieve something that works. Not everything you program in your career will be enjoyable for you, but you still have to get it done. 
If you have to ask you ain't shit
Mate, I just did that. line 7, in &lt;module&gt; bx=a[i]+bx[i-1]-(bx[i-1]/window) IndexError: list index out of range Please re check, there might be typing issue as well.. I'm using PYTHON3.6.3(IDLE)
That means you failed to copy line 4, where the first element is set. 
&gt;Neither. Use 3.6 and f strings when possible. f-strings are not always possible, so the question remains. They're limited in ways that prevent such abuse, but those limits do make them unusable for certain circumstances, including many of those mentioned (translated strings, logging, or pretty much any time you need any degree of dynamism)
The same knowledge and skill is used for all applications. Not everyone writes the same kinds of programs or knows the same libraries well, but an experienced programmer should be able to apply their generic understanding of programming to learn a new library or understand an unfamiliar piece of code. If you're struggling with the current course because you find the material dull and you feel like it isn't relevant to what you want to do, you can try a different course -- possibly something which dives more quickly into high-level scientific libraries (like one of the Software Carpentry Python lessons). But you should at least do your best to finish the more generic low-level course first. If you can't program a tic-tac-toe game, you're going to have a bad time with data science and statistics. You may not find it very *interesting* to work on these exercises, but you need to be able to do them, especially if they are demonstrating basic, low-level concepts. It may seem boring, but you can't just skip this stuff. It's teaching you things that you can use everywhere. &gt; I understand what is being taught but I am finding it pretty hard to apply This is a contradiction. The theory may make perfect sense inside your head while you're learning it, but until you are able to apply that knowledge you don't actually understand it. I have watched beginner programmers swear up and down that they totally understand everything that they have just learned -- yet be completely paralysed with doubt and indecision when it comes to actually writing a simple piece of code. It's the most difficult step to take, and also the most crucial. 
1) Logging is super useful and allows you to control how much info is printed and where, so you can debug something later. 2) There are hacky ways to make logging work with format, but by default - it uses % formatting for lazy substitution. 3) Consistency in the code. This 3 points made me chose %. 
There are issues with % formatting too, though they're different ones. Eg. one can force exceptions, or create DOS attacks by specifying huge length outputs. Eg. "%099999999999999" % 1 will generally trigger a memory error. Shaving off a few digits, you can also create something that it *can* obtain memory for, but will slow the system to a crawl as it tries to build the gigantic string. This is less bad than information leakage, but in general, it's a bad idea to ever allow untrusted input to be formatted either way.
Ahhhhhh.........I did not there was any such to append the initial value to the entire formula for the rest..... It works...Thanks a million times......I lost counting the number of hours I spent converting two of the formulas into an algebric euation and solving them. 
I don't get the attraction of `.format`, personally. Sure, there's a little more control. Do I never need that? No. Contrariwise, if I'm formatting a string, I almost certainly need as much horizontal space as possible and an easy line-wrap. `"blah blah blah".format()` is the opposite of that.
You say this like it's a joke. LOTS of interfaces specify a format by using a C-style format string. 
* python 2.6 * `print` as a statement * parenthesis around single-line conditionals * inconsistent types in list * end-of-line semicolons * so much more... Sorry, but this "tutorial" is garbage. Publishing this in 2017 is not OK. 
When running the python repl I usually start with from os import system cls = system("cls") Now I have a clear screen command for when things get nasty. Not necessarily an import or for large projects but thought I would share anyway.
IT works... but I checked with excel sheet for the same ....but values are not same... And, why does it print the same array multiple times...? For reference please follow.....Average Directional Index's excel sheet
absolutely right, it was just for the code snippets
I don't have your excel sheet; how should I know what you are comparing this to? 
21 mb? Many mobile apps are ten times that size. If this is really a problem for you, I wonder on what computer you are running this?
Format is technically better but it's a bit verbose if you just want to print a single int. Personally I switched to f-strings and I'm not going back.
Format is preferred but it's a bit verbose if you just want to print a single int. Personally I use neither: I'm using f-strings now.
I usually split the difference and use named interpolation with a dict.
One-line solutions are always easy if all you care about is getting it into one line: f"f-string you've got to let me know, should I stay or should I go?"
[removed]
From the excel sheet I used the TR value to calculate TR14..
`%s` is hardly python. `f"You should {go} to the Pythonic way, don't {stay}"`
This way. f"f-string you've got to let me know, {'should I'} stay or {'should I'} go?" 
Associate the files with C:\Windows\py.exe. If you have both versions of python still installed you'll want to get in the habit of using a shebang in your code to specify which python version to use. --- If you have more questions like this it's better to post them on /r/learnpython. 
I would say its absolutely worth taking the time to go through these examples - they aren't really about learning the products(tic-tac-toe game) but about the underlying data structures. If your struggling to care about the problem you can try re-casting it and see if you can solve it. Just taking a quick stab at it here but something like: You have a list of instructions that either write x or o to a 3x3 grid. i.e [('o', [1,1]), ('x', [1,0])] would write o to 1,1 then x to 1,0. Can you determine whether 3 x's are written first or 3 o's? Probably not the best example but my point is that these address some fundamentals that will probably apply to your chosen field in some form or another. If you re-cast it and you can solve it easily then no problem, move on. 
A script to push details of virtual machines on my KVM hosts into NetBox
Technically this is not a "comment". Python doesn't have a multiline comment syntax. You can, however, legally put string literals in your code (and all kinds of other values, although it's not a very useful thing to do). If they are the first thing in a function or class block they are treated as docstrings (parsed by the help function and various documentation generators), otherwise they are ignored. Triple-quoted strings can span multiple lines -- newlines inside them are interpreted as literal newlines. If you want to use multiline comments to document your functions and classes, docstrings are exactly what you need. If you want to make a long comment in the middle of a code block, you should probably just use multiple lines of comments. If you want to comment / uncomment pieces of code, you should use an editor which automatically comments / uncomments blocks of selected text.
I'm not talking about file size, I'm talking about memory usage while running. 
Or use a semicolon... &gt; x = 'should I'; f"f-string you've got to let me know, {x} stay or {x} go?"
this = "f-strings" f"I like {this} better"
thanks that worked. by shebang you main like how you specify to use bash in a bash script with #!/bin/bash?
2 liner peasant. this is only place for the 1 line master race!
The security issue in the blog post OP linked doesn't relate to f-strings, since they are required to be literals. Runtime-valued format strings need to use one of the older two methods.
Yes exactly. Use #!/usr/bin/env python as the first line in python files that you want to run in python2, or use #!/usr/bin/env python3 If you want the file to run in python3. If you don't have a shebang I think it launches the most modern version available, but it's always good to be explicit. 
Whether you pick the venerable % method, or the [old templates](https://docs.python.org/2/library/string.html#template-strings) from 2.4, or `.format` from 2.6, or [f-strings](https://www.python.org/dev/peps/pep-0498/) from 3.6, don't get attached to it as in 2 or 3 years there will surely be yet another approach available!
[removed]
True. Source: Me (bottle dev) ;)
If you allow user input as format string, that's just the tip of the iceberg. Don't do that, and if you really must do it build a DSL with the absolute minimum of features.
Just my opinion, but f strings look just as un-pythonic as the %s way. .format() is the most pythonic way IMHO.
Since you already do excel, just do everything that you did with excel in python. This is also a great way to learn the language. Then after you learn the language, you can branch out into webdev like stuff if that still interests you. 
tbh I don't see the point of b64 is only for encode... but your approach of hardcoding everything I don't like it, external services or credentials shouldn't belong in your code.
Link for the lazy: https://github.com/ethereum/viper
&gt; If you allow user input as format string, that's just the tip of the iceberg Out of interest, what else is achievable with % formatting? As I said, I think passing untrusted strings through either is a very bad idea, but that was the worst I could think of offhand.
Most style guide "rules" are just to make your code more readable to other programmers. If you're never planning on having other people look at your code, then you can really style it however you want as long as it still works, but if you want other people to be able to read it and critique it, then it's best to follow styling conventions to make it easier for them to understand it quickly. Naming conventions for functions and variables helps out tremendously when your reading some code that you didn't write. If I see x = test(), that could be creating an instance of a class named test, or it could be assigning the return value from the function test to x, but I wouldn't be able to tell without looking through the code if the coder didn't follow naming conventions. If I see x = Test(), then I immediately know that it is probably setting x as an instance of Test class.
Try to create mutlitasking for firewalld. Firewalld stores all setting in XML and that is problem when you have 2 tasks for chaning rules in firewalld. I think lock state will good for that.
What makes it pythonic is it is *so* readable, and explicit. You don't have to go looking somewhere else to find out what is going to be printed. I've just been using them a little while, and at first they seemed weird, but now I never am tempted to go back to format.
Thanks! I've posted it here: https://www.reddit.com/r/boringstuffautomated/comments/7jdto0/automating_paperwork_at_a_factory_job/ It's great to hear that it saves you time. I've also said that even if you spend more time coding than the time you'd save with the code, that's time you spent practicing how to code as well as saving yourself the psychological toll of so much tedious clicking. I'd say that's always a win.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/boringstuffautomated] [Automating paperwork at a factory job.](https://www.reddit.com/r/boringstuffautomated/comments/7jdto0/automating_paperwork_at_a_factory_job/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Just use jinja-templates and decouple the problem from the language.
&gt; your approach of hardcoding everything I don't like it, external services or credentials shouldn't belong in your code I don't know what approach you're referring to in this sentence. FWIW, I agree -- Of course creds/config shouldn't be in code. But that isn't part of what's being discussed here. So I'm just confused about what your point is in relation to the posted content.
 pip install --upgrade django~=1.11.8 Will install a version of Django compatible with 1.11.8 - that is, the last part of the version may be greater but the others must be identical. 
 You should check out /r/learnpython
The real question is why not to allow it. sum is not a reserved word, it's a regular function like anyone else. You can do x = 1; x = 2. Why couldn't you do (implicit: sum = &lt;builtin&gt;; sum = 7)? There are things (keywords) that are unassignable because they break the syntax (if/while/import etc.). For the rest, you're free to do whatever you want.
And now you're coupled to another dependency
Again: don't use pyplot and your life will be much happier. There's one thing that pyplot does well, and it should be limited to that: handle the GUI event loop.
See also https://twitter.com/wesmckinn/status/909772652532953088 for a relevant twitter thread (it's pandas, but the same idea applies...).
You guys an your f-strings. print ''.join([chr(x) for x in [102, 45, 115, 116, 114, 105, 110, 103, 32, 121, 111, 117, 39, 118, 101, 32, 103, 111, 116, 32, 116, 111, 32, 108, 101, 116, 32, 109, 101, 32, 107, 110, 111, 119, 44, 32, 115, 104, 111, 117, 108, 100, 32, 73, 32, 115, 116, 97, 121, 32, 111, 114, 32, 115, 104, 111, 117, 108, 100, 32, 73, 32, 103, 111, 63]])
Yes, but it's always the same.
I guess no language is better than Visual Basic, because some project still haven't migrated away from it.
I think it's someone's brainwashing tool.
Visual Studio can be a little overwhelming for a beginner. I'd recommend Visual Studio Code, which is a little simpler and light-weight, but has many of the features of more robust IDE's like pycharm and VS.
/r/learnpython and read the sidebar...
We have [a pretty long list of learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F). Try a few and see what resonates. For a brand new programmer I'd recommend codecademy. Come visit us on /r/learnpython if you get stuck. 
thank u
True, although I had a little difficulty setting up VSC to work with python for some reason
If it's SQL, then neither.
No Python 2 in this fort!
&gt; those circumstances are pretty much all the ones with the security issues for that exact reason. You have to be careful in what you define as a "security issue" with a scripting language. I use `.format` in my code, and I can write the sloppiest worst code in the world. I could sit there and call `eval` on raw input from the user, and I wouldn't say there are any "security issues" in my code. The reason is that my code is executed by the local user. If they want to attack themselves, then by all means go ahead. Nothing I can do could ever prevent that. To execute my script they must: 1. Have an interpreter 2. Be able to read my script If they can do 1 and 2, then they could copy my script, edit it, and execute the copy, or they could just directly open up the interpreter. They don't need my help to shoot themselves in the foot with their own gun. ----------- So I'm generally pretty skeptical of the argument for f-strings based on "abuse" or "security." It is relevant to a particular class of python programmers (those who write web-applications), but beyond that security doesn't really matter. 
Thanks for developing bottle. Was a great read at 1k loc in the early days. Something `bottle.py` also have going for it is the single dependency. Keep up the great work! and know I'm sprinkling it where ever I can.
Thanks. `django~=1.11` works perfectly.
Thank you. Added a much needed update to the README.
It sounds like you're just using the interactive interpreter. By the shell vs DOS-like black editor, do you mean the IDLE shell vs DOS cmd line? When you first open up IDLE (included with python), it will be the interactive interpreter shell window, but if you click file&gt;new then you can open up an editor window that functions like a text editor. You can edit the code, save it, and then run it. When it runs it will execute in the interactive shell window. IDLE is good for when you are first starting out, but eventually you might want to use something with some additional features like hinting etc. Microsoft Visual Studio code (with the python extension) is a great IDE that has most of the features you might want, but isn't too overwhelming. Jupyter Notebooks are also a very use tool for learning python. I didn't quite get how useful it is until I started using it, but now I use them all the time. If you have any experience with Mathematica notebooks, they're similar., but better because its python. As I learn new subjects or techniques in python, I just create a new Jupyter Notebook, then export it as a webpage. I now have my own directory of self-made tutorials and references to look at instead of having to constantly re-google something because I forgot how to do it.
Do you have a link to documentation on this?
oh brother did I see a recent: sql = ''' select * from %s where col1 like :col1 ''' % (table_name,) What will you recommend?
In my experience, bokeh or (as above) holoviews are nice when your approach is "I have some data, I wanna know how it looks", not so much when you want absolute control of how each plot element looks. YMMV.
This is a pretty silly example but in a more practical situation would a dictionary+f-string be the preferred method? 
I think the entire point of security is to prevent the user from accidentally deleting his data when he, or another process sends malformed input.
Unintended data disclosure via %r, unexpected conversions to various data types (%i and %f), and their associated errors. Key in each of these cases is that the effects are unforseen and will invoke unintended behavior and data disclosure. They _could_ be safe, but if no one has made sure they _are_ safe, they should be assumed not to be safe.
Another reason for bottle is the single `bottly.py` dependency. Worked great on embedded py 2.6 hardware with limited disk space of 16mb or so, shared between ur config, os, backup, and py code.
Bottle still has its user base, especially in embedded applications (e.g. on switches or smart W-Lan access points) or behind the scenes (microservices, custom admin/devop tools and alike). Flask had the better marketing department though. They won the popularity contest a long time ago.
But that isn't "security" that is "robustness" or "safe coding practices" or "not shooting yourself in the foot" or "not writing perl" or some other complaint. It isn't "security." Security really demands a defined adversary, and in many uses cases for scripted languages there isn't a sensible adversary anywhere to be found. You might as well argue that `rm -rf /` is "insecure"... no its not. Its dangerous, but not insecure.
&gt; W-Lan access points Ah, something I can confirm. But most probably not publicy, nda, and that jazz. But just gave op a second reply with the single dep as a bonus!
You have to be sure to download the applicable extensions in VSC, because it's pretty bare-bones out of the box, so the python extension is essential. I also like the Code Runner extension, which isn't completely necessary with python, but it helps out when developing in Java and C++, because it will compile the code and run it with one button press. 
&gt; The reason is that my code is executed by the local user. Good for your code. My code is executed by www-data and has read access to a postgres billing database. My friend's code is executed on hundreds of thousands of user's desktop machines and has network i/o. Security matters. Your script will be copy-pasted (by you or someone else). Your lib will be used by people who didn't review it carefully enough. Of course, the blame is on them, but "security doesn't matter" isn't an argument, it's a sure fire way to shoot yourself in the foot and others in the head.
Funny enough I'll be working a JavaScript project :D I've been using Prettier (a code formatter tool) quite a lot and I was a bit frustrated with the alternatives for Python so I checked if I could add Python support to Prettier, which seemed feasible, so I started it, looks promising and fun, I'm also learning more about the Python syntax :) https://github.com/prettier/prettier/pull/3349
nice one! are you using any tool for deployment? I've used both terraform (there's a lot to write to make an api gateway api :)) and serverless, which seems promising, even if it is mainly oriented to node, but has quite a few plugins for python as well :)
The logic that makes keywords unassignable because they break the syntax should also be applied to the semantics. This is true for built-in functions from the Python core but also from dependency imports for example. Do you know what this generates? That a new programmer re-assigns sum, while the function is used by someone else below in a corner-case conditional. Everything runs as normal, you deploy, and one day a client crashes your system because it stimulates that corner case, and a problem that could be very easily caught at compile time becomes a huge headache. At the very very least the type system should panic and warn you you are reassigning a `func` to a `value`. Which kind of logic on your code requires a spaceship to be re-assigned as a potato anyway? Programming languages, like engineering blueprints or encyclopedias or dictionaries or standards or technical specifications, should be a model of precision and clarity, not freedom. 
Good point on %r - hadn't though of that, but yeah, certain custom reprs could allow leaking more data if they're being passed assuming only the str() version is going to be used. More restricted and implementation dependent that what you can do with .format (require both that an object is passed directly *and* that it has a `__repr__` that leaks information), but worth worrying about. I think %i and %f conversion issues are just another way of generating exceptions though, unless you've some very weird overrides for the conversions, so don't really add anything over the above MemoryException case.
Hmm, I'm curious why you would have to use a table_name like that, instead of an indexed column.
 #!/usr/bin/env python import sys import bs4 import requests def main(): resp = requests.get("https://en.wikipedia.org/wiki/Should_I_Stay_or_Should_I_Go") if resp.status_code != 200: sys.stderr.write("Error trying to make a joke.\n") return 1 soup = bs4.BeautifulSoup(resp.text, "html.parser") title = soup.find("h1").text print(title) return 0 if __name__ == "__main__": exit(main()) 
If I were publishing a library for others to use, then yes I should think seriously about using f-strings in the appropriate places. But as an end-user, it isn't in my domain of concerns.
For sure, when the situation calls for it. It's a bit vague to say it's "generally preferred". Also, compared to what?
&gt; But as an end-user, it isn't in my domain of concerns. You're completely wrong on that. Security issues steal passwords, accounts, money, turn computers into botnets and take control of your webcam. None of that requires root. And yes, all that stands between you and these things is, often enough, benign security issues such as "forgot to escape some input... and the input happens to be networked".
Apologize for insistence, but I think we are talking about different things. The problem describe above exists in the `Axes` class, with or without `pyplot`.
Sure, but in those cases there's no argument to be made. In those cases, you use C-style format strings, because there's no alternative.
&gt;You have to be careful in what you define as a "security issue" with a scripting language I don't think this has anything to do with being a scripting language or not. The same is just as true when you write such personal tools in C. But here the context is clearly OPs one where security is definitely a consideration. And indeed, I think you're too cavalier about ignoring security issues just because something is a locally executed script, and thinking this only applies to web applications. You speak of "the user" as if it were the only party an attack could come from, but the issue is that any time there are multiple sources of input, there is an issue, and some of OPs links give other vectors that are applicable. Eg an untrusted translator who contributes translations to some language you don't speak that happens to have an attack escape code in the middle of some obscure string. Plus of course, there's always the issue of code repurposing for unexpected scenarios: it's a good idea to futureproof your code if unexpected usage could bite you. Likewise in a multi-user situation, you need to consider every point where your program takes input from as an attack vector, and ensure these are restricted to a single user. Things like config files or persistent data etc all need to be modifiable only by that user, or they're security vulnerabilities. Most of the time, sane permissions will enforce this, but Defence in Depth is absolutely a good policy to adopt: be prepared to defend against things even when they go wrong. &gt;So I'm generally pretty skeptical of the argument for f-strings based on "abuse" or "security." That wasn't the argument I was making. Indeed, my whole point is that this is somewhat irrelevant, because f-strings are secure essentially only because of their limitations - they **can't** be used on untrusted inputs because they require literals in the code, but those scenarios are ones where .format() would be just as safe. It's not anything about f-strings that makes things secure, it's that they can't be used in the potentially insecure scenarios. But those scenarios are ones we often **do** need to cater for, so f-strings aren't really an answer.
Regarding your edit: f-strings are safe from one class of security issues which affect %-formatting and str.format. That doesn't make f-strings "safe", any more than Python code in *general* is safe. I can just, you know, *write* the code that reads your ~/.ssh/id_rsa rather than trying to work it into an eval(), if you run it there's no difference. It also doesn't make %-formatting and str.format "unsafe". They're both perfectly acceptable. f-strings main feature is convenience, they just happen not to have this one, *potential* security issue.
Sorry for the delayed response. This was decades ago, so I will describe what I can remember. So we had this database, with all the valid physical addresses in the US, that the USPS had knowledge of at the time, nothing fancy. The database didn't have recipient names, just validated addresses in standard formats. I would break up the invalid address from the request up into parts, street number, street name, and zip code. You might ask about the city, but validating against city was not always useful because people tend to associate with a specific city/town even if they aren't officially part of it. So for the most part our shippers didn't care about the city if the zipcode is right. Then I would two run searches. One for the house number in the zipcode, and another the street name (excluding types; st., street, ave. avenue, cove, drive, dr., etc.) in the zipcode. If I didn't get a result from the street number search I would look at the street name search for addresses with similar numbers, looking for transpositions or off by one errors, and calculate a variance value for each similar address. Similarly, if I didn't get any results in the street name search I would look for transpositions, or misspellings that would seem to match up against the list of street names from the street number search and I would calculate variances for those as well. I would then look for valid addresses that had the least variance from what was submitted. Then I would package the request back up, with the updated address, a flag to say the request had been administratively modified, and the original data in a note field. Then this was resubmitted to the transaction manager and other automated tests where run against the transaction with our shipping and credit processing partners. It wasn't graceful, or clean, but it resolved most of our discrepancies and saved us a ton of work.
Pulling json from ndb, updating it, then putting it back into Google's ndb. For my side project dndemail.com. 
Am I the only one who almost *never* deals directly with literal strings for formatting? More often than not I'm building up these strings to be reused multiple times with different inputs in `.format()`.
A func is a value. There's no difference. ``` class C: def __int__(self): return 7 def __call__(self, *args, **kwargs): return sum(*args, **kwargs) ``` is C() a value or a function? See also http://wiki.c2.com/?BondageAndDisciplineLanguage In any case this is sort of going out of scope for this thread.
Isn't the Axes class the right place for it to be? I agree it should be documented but that's another problem.
I'm not clear on what OPs use is. I don't know whether or not it includes web apps or not. What bothers me about f-strings is that often the supposed reason cited is "security" but no attack model is proposed. And as you said there are "attacks" (like your translation file) where f-strings can't even be used. If security is going to be driving this conversation the we really need to clarify what is meant by that. We need to drive the attack and measure the feasibility of attacks prevent by f-strings against those not prevented by the feature. I see the stuff f-strings can't deal with as a much greater risk than what it could deal with, in large part because my usage model doesn't include remote execution. 
Yes. https://docs.python.org/3/library/re.html Note The compiled versions of the most recent patterns passed to re.compile() and the module-level matching functions are cached, so programs that use only a few regular expressions at a time needn’t worry about compiling regular expressions.&gt;Do you have a link to documentation on this? 
Move the documents into Google docs? Would allow concurrent viewing/editing and also has a publish to web feature built in.
I think there are a bunch of things you can do instead of rendering the pages. 1: download the file directly to the browser and open it up on the client side with no references to the original file path 2: save copies of all the docs as PDFs when they're modified 3: save copies of all the docs as HTML when they're modified 4: preview the docs through google docs, if the information isn't proprietary 5: github has a few js libraries that purport to be able to render docx to html on the fly I'm sure there are plenty of other ways to do something similar without resorting to a ton of server-side changes and janky folder redirects.
There *is* a clear difference from the moment one can digest a vector and the other can not. The difference is so clear that Python even has a specific type error for it: `TypeError: 'int' object is not callable`. I know but who cares. These discussions are nice :) 
I have no objections to arguments for f-strings based on convenience or aesthetics. I'm perfectly ok with those, and it does look better than `.format(**locals())`.
Import time
I think you actually want `django==1.11` - otherwise it would be compatible with later releases of Django 1, which includes more than just bug fix and security releases. You do need the last number!
Interesting. Jupyter can't do it (latest version, Python3 core). Maybe the suggestions you are getting are document-based rather than API-based?
Making a ftp/http server for hosting files locally, with support for secure WAN access
Funny you mentioned Django--I tried to learn it and just gave up quickly. I just had it in my head that web apps were a major pain compared to desktop GUI. I know, not at all Django's fault (I did the poll app tutorial and it was fine). Should give it another go.
Whaaat? I never knew this! Only got into python recently and only ever used 3.6. Definitely got my bedtime reading sorted for now. Anything else I should know off?
Just trying to over come the steep learning curve of python (fisrt program I'm learning)
I see. Thanks.
I wrote my first python program this week. It's a simple calculator which outputs headwind and crosswind components for pilots. You enter the active runway direction, the current wind direction and speed and the program lists the components. I am quite pleased with it, but trying to add and tweak some small things. For my next program I think I want to write something similar which helps me with algebra formulas. I'd also like to learn how to fetch data online and use it in a program, but I feel like that's a bit further into the future for me.
&gt;I'm not clear on what OPs use is. It's clearly one where they're concerned about security, hence mentioning that in the question. &gt;What bothers me about f-strings is that often the supposed reason cited is "security" but no attack model is proposed I agree, in the sense that f-strings add no security over replacing f"some literal" with "some literal".format(args...). All they're really doing is flagging that you're not using user input code for your formatter. f-strings don't *solve* problems, it's just that they can only exist at all in already safe situations. &gt;As for programs written in C they can be marked setuid That's not really what I'm concerned about - it's a pretty rare usecase. The more common issue I'm talking about is permissions on those input files. Eg. your program reads from some global config file, stores some state in a persisted sqlite database or creates tempfiles in /tmp/, or basically takes any input from somewhere that can be written to by a **different** user, each of those is a potential attack vector if it's doing formatting on strings taken from those locations. Now, as I said, most sane systems are not going to have permissions that allow writing, but this is not something you should rely on if you can avoid it (consider stuff like creating a global readable file in /tmp/ *before* your program creates its version, for instance. Hence why the policy of defence in depth is always a good idea: build your system to be secure even when things go wrong. &gt;If you don't mark them setuid, then the attack vector isn't any worse. But nor is it any better, hence this isn't really anything to do with your distinction between scripting language or not. &gt;Giving him a compiler doesn't change that. At best it allows him to automate his destruction. Not sure what this is in relation to. 
This is handy! I'm trying to wrap around why this works maybe you can help. So this returns a dictionary with the default being the function itself? Why would config['a']['b'] make a nested dictionary ? 
Ctrl-l does this on anything that resembles a unix term.
Getting my ssh working on my pythonanywhere.com account. After that? Who knows?
I think we really need to be specific and concrete here. So here is an abstraction of the kinds of stuff that my company does. 1. Client sends a list of identifiers to us. 2. We attach informant to that list. Do some QC and 3. Send it back. Except for the QC it could be a web app. So it would seem very much in the realm of the "security" problems that f-strings address. But nothing in that problem definition would cause me to want to call `.format` on the clients input. I would parse their file, bind the inputs into an SQL query, iterate the results and write them out. Hell i will give the client full control over the output format. The first line of their input list can be the format specifier: `"{fname},{lname},{ssn}"`, and I'll call `user_format.format(**record)` as I write it out. Certainly dangerous, and potentially deadly to a web app. They might cause me to leak the DB password or the like, but f-strings don't protect me from this at all. I can't use f-strings to shoot myself in the foot this way, but I also can't support any kind of dynamic formatting with f-strings. So unless there is an absolute policy against any non f-string usage... it isn't securing anything really. A blanket policy like that may be defensible in the web app setting because of the history of injection attacks. I don't see it having any future outside that. I need dynamism, especially in libraries. If everything must be hard coded, then the library is really limited to the single initial use.
`defaultdict` takes in an "initializer" as the parameter. The intiializer gets called whenever a key that doesn't exist is accessed. So if you do stuff like this. a = cl.defaultdict(list) print(a['foo']) # prints [] b = cl.defaultdict(int) print(b['bar']) # prints 0 since int() creates a 0 So here, we give the function `tree` as the initializer. So for any key that doesn't exist, `defaultdict` calls `tree()` to create the element. Since that element is also a `defaultdict`, any unknown key on that would also trigger `tree` and so on.
This is very straightforward and reasonably legible. Good work. Also kudos on small sample of training data. It speaks that you already know the shapes aren't too complicated to need 10k+ images. 
Im always improving it but recently released a WhatsApp bot to tell me and some friends the current price of Cryptocurrencies like Bitcoin, Ethereum, Litecoin, etc... And you can use it right now too! Just PM for the number and I'll be happy to help.
I don't assume that because someone mentions security as a concern that they actually have a security concern. If everyone who talked about security had a well defined risk there would be a lot fewer people talking about fstrings and security. Otherwise I think we generally agree.
Helpful to explain what *should* be done with SQL.
Yeah I kinda agree. I think the reasons Bokeh came to mind is a, I like it! and b, it's API is so much more clear and logical compared to matplotlib. I also personally use both, for exactly the same reasons... (also being able to embed Bokeh plots in HTML has proved handy).
Iirc .format() is much slower than the alternatives
Neither. Get Python 3.6 and use f strings, they're loads more convenient.
glad you like it. make sure to star it on github
I have no idea what your point is. You initially essentially claimed security is irrelevant when dealing with a non-root user which is really misleading, and I meant to correct that. I don't disagree that this is a very small vector, and only relevant in very specific situations... but I'm not sure what you're arguing there? Nobody here seems to disagree that f-strings seem to be the better option either way? And yes calling it "more secure" isn't even really a good term. More robust, I suppose. 
Thank you so much mate
Mostly I don't think people should be talking about security with respect to f-strings, and I agree with robustness as a better term. 
% is always the same. .format is always the same. 
&gt; There really isn't a good answer. Exactly. If you are doing math stuff and using modulos a lot it looks terrible putting in % for strings. Otherwise it seems to come down to preference, learn all of them and decide for yourself based on the situation. Personally prefer % syntax apart from the above situation. 
sql = "SELECT name FROM person WHERE height &gt; %s'' c=db.cursor() c.execute(sql, (height,))
&gt; our lib will be used by people who didn't review it carefully enough. Not the guy you're responding to, but I agree with him. That's not my problem. My code is open source. You can grep for an eval. You can send me a patch to fix the two evals in my 220k lined project that's used only in the GUI. One of them exists because I don't want to parse an expression that includes mathematical functions. The other is used for scripting anything you want from within the GUI. The code is the API. Security does matter, but we're all adults here. How about we remove pickle from the standard library because it's a security nightmare or how about no because it's useful? We could similarly remove eval.
You *could* ahve quoted literally the next 7 words after that too: &gt; **Of course, the blame is on them** For real, be practical.
See, I assumed that was sarcasm, so I left it off. Your library will be used by that didn't review it at all. I'm OK with running my library and until someone comes up with a secure way to implement scripting in a way that's easily maintainable and extensible, I'm sticking with the eval option. At the point I've added custom scripting, who cares if I use eval in one other tiny spot in the code that does not blatantly advertise the security hole?
Regarding 30 days of python, I'm not sure if the code for day 5 works. I keep getting an error when I run it and I even went to the [github location](https://github.com/codingforentrepreneurs/30-Days-of-Python/blob/master/Day%205/day5_functions_end.py) and tried it. Is there something I am missing? 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [codingforentrepreneurs/30-Days-of-Python/.../**day5_functions_end.py** (master → 8295a72)](https://github.com/codingforentrepreneurs/30-Days-of-Python/blob/8295a72557d928ccb9a9d37fad73692ea82f3035/Day%205/day5_functions_end.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
**Be practical**. The blame can be on someone else, you can still make it harder for people to introduce security issues. "Why even create a language like rust? It's your own fault if you write unsafe code!" Seriously...
 import pickle help(pickle.load) import tkinter help(tkinter.Frame.__init__)
Your the best thank you so much!!!
This is the second time I've seen the Pandas one being offered free. If you think Pandas is for you go for it, his course is quite good. I also recall a free one by MIT but I don't remember if that's periodic or always available.
You x and y are both initialized 0, and your condition statement` x and y ! =1` doesn't be evaluated true cause x is 0 so even the y != 1 get checked then the function call is done. 
&gt; you can still make it harder for people to introduce security issues. How do I support scripting, which I find very useful (and exists in many commercial GUIs) without giving a user the ability to shoot themselves in the foot? I can define a scripting language, which I then have to parse, but that doesn't sound fun. Do I allow parentheses (they make it harder to parse), so now do I have to limit basic mathematical expressions as well. Oh, I didn't think you'd need exp or sqrt in the same line, so I support: x = 5+1 y = sqrt x but not y = sqrt x+1 # trying to do sqrt(x+1), but no parentheses because that's hard What about booleans, for loops, and if statements? What about files? Once I allow files, why not support numpy loadtxt with my secure API? So now I'm at something secure, but I forgot to supports exceptions (divide by 0 happens). My language is effectively Python, except it's buggy, slow, and hard to maintain, and tedious to write because I don't support parentheses and I ignore order of operations. You're better off not adding scripting if you want security. Never touched Rust, so can't comment to that.
I'm sorry what? aha
So many * `list(set(some_list))` - Get unique values * [Flatten a list](https://stackoverflow.com/questions/2158395/flatten-an-irregular-list-of-lists-in-python) def flatten(l): for el in l: if isinstance(el, collections.Iterable) and not isinstance(el, (str, bytes)): yield from flatten(el) else: yield el * `{**first_dict, **second_dict}` - Combine two dictionaries with overwrites * `f'{some_float:0.03f}'` - zero pad a number * Easy progress bar from tqdm import tqdm for i in tqdm(range(1000)): do_some_thing(i) * Subclass threading or multiprocessing (can subclass `mp.Process` with the same exact code) import threading import multiprocessing as mp class SomeThread(mp.Process): class SomeThread(threading.Thread): def __init__(self, some_arg, *args, **kwargs): super().__init__(*args, **kwargs) self.some_arg = some_arg def run(self): run_some_long_task() * Short circuit variable bindings import os CONFIG_VAL = os.environ.get('FOOBAR') or 'default value' 
YOU MONSTER!
That's fucking slick.
Have you considered joining a community like [pybites ](https://pybit.es/) ?
I like: def print_bad_path(path): # type: (str) -&gt; str """ Prints information about the existence (access possibility) of the parts of the given path. Useful for debugging when the path to a given file is wrong. Parameters ---------- path : str path to check Returns ------- msg : str string with informations whether access to parts of the path is possible """ #raw_path = path if len(path) &gt; 255: path = os.path.abspath(_filename(path)) npath = os.path.dirname(path) res = [path] while path != npath: path, npath = npath, os.path.dirname(npath) res.append(path) msg = {True: 'passed', False: 'failed'} return '\n'.join(['%s: %s' % (msg[os.path.exists(i)], i[4:]) for i in res]) else: path = os.path.abspath(path) npath = os.path.dirname(path) res = [path] while path != npath: path, npath = npath, os.path.dirname(npath) res.append(path) msg = {True: 'passed', False: 'failed'} return '\n'.join(['%s: %s' % (msg[os.path.exists(i)], i) for i in res]) def _filename(filename): # type: (str) -&gt; str """ Prepends some magic data to a filename in order to have long filenames. .. warning:: This might be Windows specific. """ if len(filename) &gt; 255: return '\\\\?\\' + filename return filename 
I also like this one. It tells you all the class methods or attributes. People tell me it's so useful, it should be standard in Python. I attach it to most of the classes I write, but this is the function version that's called. def __object_attr(obj, mode, keys_to_skip, attr_type): """list object attributes of a given type""" #print('keys_to_skip=%s' % keys_to_skip) keys_to_skip = [] if keys_to_skip is None else keys_to_skip test = { 'public': lambda k: (not k.startswith('_') and k not in keys_to_skip), 'private': lambda k: (k.startswith('_') and not k.startswith('__') and k not in keys_to_skip), 'both': lambda k: (not k.startswith('__') and k not in keys_to_skip), 'all': lambda k: (k not in keys_to_skip), } if not mode in test: print('Wrong mode! Accepted modes: public, private, both, all.') return None check = test[mode] out = [] for k in dir(obj): if k in keys_to_skip: continue try: if check(k) and attr_type(getattr(obj, k)): out.append(k) except: pass out.sort() return out #return sorted([k for k in dir(obj) if (check(k) and # attr_type(getattr(obj, k)))]) def object_methods(obj, mode='public', keys_to_skip=None): # type: (object, str, Optional[List[str]]) -&gt; List[str] """ List the names of methods of a class as strings. Returns public methods as default. Parameters ---------- obj : instance the object for checking mode : str defines what kind of methods will be listed * "public" - names that do not begin with underscore * "private" - names that begin with single underscore * "both" - private and public * "all" - all methods that are defined for the object keys_to_skip : List[str]; default=None -&gt; [] names to not consider to avoid deprecation warnings Returns ------- method : List[str] sorted list of the names of methods of a given type or None if the mode is wrong """ return __object_attr(obj, mode, keys_to_skip, lambda x: isinstance(x, MethodType)) def object_attributes(obj, mode='public', keys_to_skip=None): # type: (object, str, Optional[List[str]]) -&gt; List[str] """ List the names of attributes of a class as strings. Returns public attributes as default. Parameters ---------- obj : instance the object for checking mode : str defines what kind of attributes will be listed * 'public' - names that do not begin with underscore * 'private' - names that begin with single underscore * 'both' - private and public * 'all' - all attributes that are defined for the object keys_to_skip : List[str]; default=None -&gt; [] names to not consider to avoid deprecation warnings Returns ------- attribute_names : List[str] sorted list of the names of attributes of a given type or None if the mode is wrong """ return __object_attr(obj, mode, keys_to_skip, lambda x: not isinstance(x, MethodType)) 
Sorry for my poor English:). `x and y !=1` expression in while clause is evaluated as False so the logic in while loop is ignored and the statements after while is executed and there is nothing so your pullze1 function call is done. 
ahhhhh okay thanks aha what would I do to get it to work?
&gt; note that I used a raw string (r in front). This is very important for windows file paths. Even easier is to just use forward instead of back slashes.
Are the downvotes because we don't like sharing knowledge? x-posted it myself anyway so y'all can keep...doing whatever it is you think it is your doing. That or somebody could educate me on why I shouldn't educate others. Peace, bitches.
As this has been answered the OP might like to note that the `import os` and `import datetime` are wasted as they're not used, the `from...` imports are.
I am confused and i can't figure out what's your rationale. I am assuming that you want to break the loop when type "writing" or "note". Besides, what the heck is` x` and ` y` for. Tips: variables name should be meaningful even in a small code snippets. 
Thanks for the link - no I had not considered it!
yeah I know ahaha I want the player to have type writing and note before breaking (x and y was just a placeholder while I tested it)
Take your comments sense somewhere else!
In a nutshell, you just want to make sure player types "Writing" or "note" and record their input and keep the while loop running and accepting player's input? 
Nothing fancy- I like going through math textbooks (calculus, numerical analysis, number theory, logic, abstract algebra, statistical theory, etc) and coding the materials all into a program, math.py (clever name, I know). Soon, I'd like to transfer it all over to C++, R, and some other languages. I'll have more time next semester as I'll be starting grad school! 
Thanks!
Yeah so for example I don't want the code to continue until the player has type "view writing" and "view note" once the player has type both print so and so 
your welcome
def pullze(): typed_writing = False typed_note = False while not (type_writing and typed_note): words = input('Please say something') if words == 'writing': typed_writing = True elif words == 'note': typed_note = True else: pass
your welcome
I'll try it when I get hold of my laptop and tell you how it went thanks a ton tho!!
you r welcome, hope u enjoy your python coding
Or use a lambda: (lambda x: f"f-string you've got to let me know, {x} stay or {x} go?")('should I')
Pycharm is an IDE, anaconda is a bundled python interpreter that includes things like numpy, pandas, scipy already and though it does comes with its own IDE with spyder and a notebook jupyter, you. Can also still write your code in Pycharm and point the project interpreter to use the anaconda python environment. If you have another version of Python already installed there can occasionally be conflicts if you don’t have the Paths set up correctly. But for the most part you should not have any issues. I use Pycharm with anaconda daily. 
Awesome! Thanks for clarifying that for me!
Reading the other back-and forth comments here, I think you're missing a _huge_ part of the picture, and you're doing yourself a massive disservice. First and foremost, it costs you nothing in time or effort to use the accepted standard. Moreover, it was designed specifically to be more safe and offer some level of security. So you're improving your code with no real cost to you, and by not doing that you're setting a bad example. Second, and this is the more important one in my opinion and experience, you don't know how your code will be used or copied in the future. So it's fine to say that you're just writing scripts for end users to execute ad-hoc, and you're relying on their permissions on whatever system they're logged into for security. Fine. Now let's say someone copies some of your code into a script they have running as a system user on a schedule. It receives malformed or intentionally bad input, causes a security risk, and the person that copied your code has no idea why. But _you_ know why, and you chose to do it the "wrong" way simply because that's the way you've done it before. I can't tell you the number of times I've seen this exact scenario play out over the past almost 3 decades in the industry. Professional programmers copying code, or converting code into a module to be called by other code. Suddenly it breaks in a terrible and unexpected way, or causes a security breech, and somebody (usually me) has to clean up the mess. Write your code like a builder builds a house or an engineer designs a bridge. Nor for you, but for everybody that comes along after you and does something you wouldn't expect. That, IMO, is the difference between an acceptable programmer and a great one.
Data Analysis: ipython, Jupyter, pandas, numpy, scipy, matplotlib
Is it going to be open sourced? And how long is it? Kind of interested, but its have to be open sourced for my portfolio. 
Also im gmt
you just don’t care, code is code
UTC+8? Located in Perth?
Around that area 
Do I need to have good understanding on cryptography before I dig into blockchain?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Every time I read something like this I realize how totally lost I would be if I used windows as my main OS. Years of doing things on Linux and Mac has reduced me to only basic working knowledge on windows.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
 In [1]: import string In [3]: template= string.Template("this is my $name") In [4]: template.substitute(name="jimmothy") Out[4]: 'this is my jimmothy' Templates are still in Py3 and I'm surprised I've never heard of them. A different take on the later .format, I guess.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
That works most of the time, I prefer it working all of the time. 
Share pls :p
The business would not go for that... Also, not an interesting learning experience with python...
If this is the course you're talking about, it's self-paced. [Python for Data Science](https://www.edx.org/course/python-data-science-uc-san-diegox-dse200x)
This week I'm working on my first proper python project: a text-based adventure game 
What? Not one comment on the beauty of the question? You all give nerds a bad name. Brilliant OP!
I would say I like lxml better. faster and xpath support is very good -- soup does not support all css selectors
Been working on some scripts to do file transfers over SMB, listing the contents of directories and uploading to s3. Will write my database connections tomorrow and work out the queries. After that, should have a pretty good way to automate a lot of tedious uploading everyday. 
I did Google... Just not those search strings. I'll check out that info. Thx.
I’d be interested in hearing more. 
If it's open source I'd need to use git??
Pm me for more info if you wanna work on it
You don't have to learn all that but at the end when I'm finished I'd upload it. I doubt we'd need that much collaboration we could just use dropbox. 
The Google Maps API? https://developers.google.com/api-client-library/python/start/get_started
I would recommend Learning Python, followed with Programming Python. Pretty inclusive and thorough, and can get both for about 100. 
Chuck us a pm and we'll work something out 
Actually it would cost me a massive amount of time to use f-strings. I would have to build, test and deploy python 3.6 since we currently use 3.5. ;-)
Will stick it on GitHub once it's working properly
Thanks so much it works like a charm just edited it to work with my code again cant thank you enough code: def puzzle1(): ch1 = "" typedWriting = False typedNote = False while not (typedWriting and typedNote): ch1 = input("(view writing) or (view note)\n") if ch1 == "view writing": typedWriting = True print("you look at the writing") elif ch1 == "view note": typedNote = True print("you look at the note") else: print("I don't understand what you mean") pass
"Demoting Python 2" Music to my ears 
on sjort functions i just drop locals: 'this {var}'.format(**locals())
As someone who's self-taught on Python, this is one of the "best practices" that I least understand - why would you do something like `print "my name is {0} and my age is {1}".format(name, age)` when you can do `print "my name is "+str(name)+" and my age is "+str(age)`? The latter is way more readable, to me - you don't have to keep jumping to the end of the line to figure out what a variable is going to be.
`ItsHappening.gif`
Are there any that build toward a specific goal and don't just throw concepts at you? I've not been able to get into a single one and almost turn them off after "Hello World"
There are few things more worthwhile to train a neural network to do than this. Detecting cancer? Screening for new drug candidates? Self-driving cars? Nah. All that pales in comparison to this. Now I can show my wife that even a computer can find Waldo faster than her. In all seriousness though, this is awesome.
GOOD
Fuck the down vote dicks. Just subscribed so thank you for sharing that sub! ☺
I’m getting so tired of people starting NEW projects in Python 2. My god. 
I'm not sure what to tell you about the threads hanging. I was able to extract 1000 images in 84 seconds using my code without a queue. https://pastebin.com/VseXDpaw this is the output and here is my code: https://pastebin.com/WuynhCiz 
Thank you for letting me know; I apologize for any inconvenience, and I hope you have a good day.
I've tried serverless, Zappa and Chalice, but now I try to build a deployment tool based on my experience with them. The tricky part is the CloudFormation template (and configuring everything in AWS), because these tools are doing a _lot_ in the background. I've also learned that there is rarely a vanilla Python script, you should do your homework and try to use libs instead of writing them: built the API in Flask and Flask-restful and it worked locally. What I didn't know, proxying Lambda functions requires special behavior from the script. Since this is only a PoC now I have two options: implement desired functionality or use some lib like Flask Lambda. So far, these are my gotchas during my brief journey. Coming from a 10+ years PHP background, I must say Python is fun and a very effective language!
Future Admin: I think I'll cruise universe for a bit.
Hey, I already fixed it with a Friend and now i have a working Blackjack game. And jes, every one tell me go to learn\python and i already do this. I think really *this* Post here was my last Post in Python. 
Smart idea for quick and dirty stuff. Not exactly explicit in many cases, but I like it.
A bit off-topic, but you may find some other interactive fiction tools and software useful, or be able to get some ideas from playing around with them them. Ren'Py is my favourite, and also Python-based: https://github.com/renpy/renpy I haven't used it yet, but 'tales' is Python-based, and can make both single player and multiplayer text-based games. Also support for command-line, desktop app, and web-based user interfaces. https://pythonhosted.org/tale/ And, not python-based, but probably one of the best systems out there is Inform7: http://inform7.com/ Which does have some resemblance to Python in it's scripting language: http://www.ifwiki.org/index.php/Inform_7_for_Programmers/Part_1 
Thanks man I'll be sure to check them out
https://imgur.com/7drHiqr
You're missing ubuntu...👈🏻👈🏻
At the start of you code: from pprint import pprint as pp Inside a function you want to debug: pp(locals()) 
Try [this](https://www.lfd.uci.edu/~gohlke/pythonlibs/#curses) site.
"Give us a print builtin or we riot." -2.7 devs
Yeah, yeah, I got it!!! Python 2 is evil, blablabla!!! Even I finally migrated my project to 3, so get on with it!
Thanks, should have searched for benchmark. Will do when I get time.
But I want to use this library that was discontinued in 1933!
`table_name` will be a variable of the "dynamic" table name the query must use. So they substitute the `%s` with the tablename and then pass on the query to `execute` with `params = { 'col1': 'xyz' }`. I feel there must be a better way to inject dynamic table name. But have not looked into it. Just reading the code and thinking of the pain!
I know your feelings bro. I was a swiss army tool working in a small swiss company, ironicly. When they were hiring me, they said that I'm going to be a backend engineer only. And then, I had to do backend, ftontend, server administration, bash scripting. Once even asked me to learn php(I've refused and they fired me, lel)
Good news, but I can't say I'm really surprised. EOL for Python 2 is still scheduled for 2020, while the EOL of Ubuntu 18.4LTS Desktop is april 2021. That means it's really time to move on for Ubuntu. The EOL of Ubuntu Server 16.4LTS is already over the Python 2 horizon with its 5 years of support.
 import bs4 import requests You know what they say about assumptions? ps. thanks for the [song](https://www.youtube.com/watch?v=oGIFublvDes).
Which one is the appropriate one? what's the difference between 27 and 35? and is the AMD in the others for AMD processors?
and where do I input that install line?
so I need to download ubuntu? then what?
That's because they aren't strings, they're expressions. Calling them f-strings implies that you can use them statically, without evaluation, which is clearly wrong. Out of complete confusion, some people even argued they were a security risk. Referring to them as f-expressions or f-literals in the PEP and docs would have prevented that.
Its just always nice to know that WA programmers are around on reddit
:)
Yeah, you probably shouldn't have to use a dynamic table name. If you have to use the same query on multiple tables, that's a sign that they should be the same table, differentiable by an index column.
Parameterized queries, as /u/KronenR answered.
27 == Python 2.7 35 == Python 3.5 AMD64 == 64 bit copy of windows, this is most likely the one you want.
https://pythonclock.org/ Please let us put Python 2 to rest soon. 
Command line where you can run python from
Easy hack to split data per customer on one db. eg `cust_company1`, `cust_company2`, `cust_company3`. Why are customers sharing dbs?! I DONT KNOW!
So have a single table of customers, and an index column of companies.
I'm sorry that was kind of a joke-- https://stackoverflow.com/questions/32417379/what-is-needed-for-curses-in-python-3-4-on-windows7 the answer w 23 upvotes 
This is great. So much of effort saved!
The intensive class I'm in is teaching Python 2. Man, the first few days on this sub have been rough.
An axis doesn't plot something. You need 2+ axes to make a meaningful plot. That's why a plot isn't part of an axes.
Why does nobody know `format_map`?
You just have to _let it go_
In fact I was doing that. Until I saw this thread.
For a start, it's not guaranteed unique - you have a 1/8975 chance of a collision and no way to recover. Would be a lot easier to just store a user -&gt; port mapping somewhere and read it when you need it. 
Ah, the assignment deadline dependency panic. I do not miss those.
At first I thought, "lol, 2020 is so far away". Then I remembered it's almost 2018. Then I got sad.
If you have a goal in mind, it's best to find a book that might lead you to that goal. I tend to enjoy gaming so I explored books like [Invent your own Computer Games with Python](https://inventwithpython.com/invent4thed/). If you have a specific idea in mind, it might be best to find a book that focuses on that subject. You can also go to the library. I signed up for two of these Udemy classes because I feel it might be a good way to "refresh" and expand some of my knowledge into areas where I have less interest and it's free. Personally, I find making various dice rollers to be helpful. I've made dice rollers that work with terminals, Kivy, Guizero, Appjar, and incorporate a wide variety of features and styles.
Use Pandoc and convert them to whatever format you want. You could convert them to markdown and use a static site creator like Pelican to serve them as webpages
I use functions for that. What used to be template_list = '&lt;ul id="{id}"&gt;{contents}&lt;/ul&gt;'.format Is now def template_list(id, contents): return f'&lt;ul id="{id}"&gt;{contents}&lt;/ul&gt;' Advantages: - you don't have to specify arguments by keywords - you get autocompletion - you get syntax highlighting - you can use expressions inside of the curly brace parts Disadvantage: you lose dynamism like translating the template string
Grabbed all the free and bought the complete course. Thank you for this! Trying to get some time to learn python and these should help!
inb4 "Vim is great, but PyCharm is better"
Me too.
Well to be fair some companies require it. We have a client who I said like 5 times to them that Python2 was going out in 2 years ish and they said they don't care really they have their library which they need to use and don't even have Python3 installed on the deployment machines. It's stupid as fuck really but what can you do I guess
Well it's still going to be available, just not in the default install
This is one I didn't know I was missing till I wrote it, then use cases just started popping up all over. class LazyDefaultDict(DefaultDict): """A defaultdict which waits for key access to provide default Same as a defaultdict, but the initiasing method takes a key and provides a value """ def __init__(self, method): self.method = method super(LazyDefaultDict, self).__init__(None) def __missing__(self, key): result = self.method(key) self[key] = result return result def __repr__(self): return repr(dict(self)) Slight variation on an DefaultDict, except that `d = DefaultDict(list)` calls `list()` for any key that's missing, but `LazyDefaultDict(list)` calls `list(key)` instead. So the method used can give different defaults depending on some property of the key. 
You're meant to find it difficult to apply - that's how you learn the quickest. Your lessons have taught you the basics of Python, now the next step is to combine those basics into something bigger.
 it's unique enough. In a group or 20 thats fine. You can also extend the range of ports. A collision would only mean a service failed to start and they'd have to specify a port to use. Onhe other hand...I'm not interested in maintaining sn obscure duct.
awesome 
&gt; If you want to use the Logging module you need to support % syntax, or at least know how to use it. You can use .format syntax with a LoggerAdapter class. There's an example in the Logging Cookbook: https://docs.python.org/3/howto/logging-cookbook.html#use-of-alternative-formatting-styles (class Message and StyleAdapter at the end of that chapter).
[removed]
&gt; There are hacky ways to make logging work with format It's additional work, but I don't think it's hacky. It makes use of a LoggerAdapter, which is part of the logging API, and it's one small module to write, and one import statement in the code you write. Not too bad.
Try asking on r/math ?
first example should be "[a-z]+@[a-z]+**\**.[a-z]+" not "[a-z]+@[a-z]+.[a-z]+"
Personally I use both :)
do you know what the user id ranges are? If they are in the range 0:~9000, you could just do uid + 1025.
Thanks Martin, maybe you want to do a Python code challenge? https://pybit.es/pages/challenges.html
thank you
I find it quite amazing that a person who is smart enough - or is that just nerdy enough - to write his own networks lib was too stupid to understand requests of all things XD
I find that Pycharm, Vim, Jupyter &amp; the just using the interpreter all have their places. For example, I can open vim (including this example) on a remote machine in my ssh session with no extra effort or configuration. 
I did something very similar for an Ethereum wallet I had no password to. Unfortunately, it used scrypt to encode the wallet, so even with multiprocessing, I could only get 2-3 password guesses a second. However, I used a type of Levenstein distance to create a pool of possible password based off my known list. https://en.m.wikipedia.org/wiki/Damerau–Levenshtein_distance
**Damerau–Levenshtein distance** In information theory and computer science, the Damerau–Levenshtein distance (named after Frederick J. Damerau and Vladimir I. Levenshtein) is a string metric for measuring the edit distance between two sequences. Informally, the Damerau–Levenshtein distance between two words is the minimum number of operations (consisting of insertions, deletions or substitutions of a single character, or transposition of two adjacent characters) required to change one word into the other. The Damerau–Levenshtein distance differs from the classical Levenshtein distance by including transpositions among its allowable operations in addition to the three classical single-character edit operations (insertions, deletions and substitutions). In his seminal paper, Damerau stated that these four operations correspond to more than 80% of all human misspellings. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Thanks!
Thanks!
Nicely done man! Spend it wisely.
+/u/CompileBot python 3 __builtins__.print("problem?")
Output: problem? [^source](http://ideone.com/MYOThI) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20/r/Python/comments/7jeott/ubuntu_devs_work_on_demoting_python_2_to_universe/dr6lf71%20Include%20your%20reason%20for%20reporting%20here.) 
When it goes out, it'll be your fault, I bet.
But all the difficulty in porting from Python 2 to Python 3 is in the places where they're incompatible, which is exactly the places that tauthon doesn't change. Adding a bunch of new Python-3-only features to your code doesn't get you any closer to fixing the incompatible bits. And if you want deprecations, you just need to turn on the `-3` switch.
I've emails, not hard to say here is the email where I sent my reservations to you and I even offered to port their library as well
It takes practice, and repetition to get good at programming. The individual commands and code snippets might make sense in your lessons, but tying it all together takes time. However, the good news is that this can be a lot of fun.
&gt; Do I ne Nah, you can checkout this course https://cryptozombies.io its a pretty cool way to get started with Solidity
Its retirement has been postponed a bunch, too. I get that it takes time/money to update legacy code, but with every postponement you only spawn denial and further negligence. 2020 is close, but look back: Python 3.0 was released pretty much ten years ago. A few months after the first commercial Android smartphone, about half a year after the iPhone. Same years as Windows Vista. This is ages in tech. Entire industries went through several tech switches in that time, some didn't even exist. Yet there are still people who can't let go of 2.0. Mind-boggling. 
That's a crime.
The best thing about cricket is that 'wicket' rhymes with 'cricket'. I like that.
Getting maps can mean many things. A standard map provider will give you the ability to search for places, find the way to places as well as the ability to show a map. If you just want to show a map, folium is a nice library that lets you select different map providers (google, open street maps, here etc). I believe it can render to an html file too. Not sure about image formats though.
e.g. its much harder to asses popularity of the lib
Why are people still using Python 2? (Maybe a noob question, but I really don't know.)
&gt; One of them exists because I don't want to parse an expression that includes mathematical functions. Don't know how general your expressions are, but would this help? In [21]: ast.literal_eval? Signature: ast.literal_eval(node_or_string) Docstring: Safely evaluate an expression node or a string containing a Python expression. The string or node provided may only consist of the following Python literal structures: strings, bytes, numbers, tuples, lists, dicts, sets, booleans, and None. 
2.7 only has format.
&gt; Use 3.6 and f strings when possible. Sadly unusable when a translations system is involved.
The difficulties come in when you import a library that also uses logging but which doesn't use your style and doesn't use your adapter. It is the kind of thing where if there were a really good way to handle it they shoukd put it into the library. 
Except for the languages which don't use printf-style formatting at all.
[removed]
Rip op.
Legacy code and stubbornness.
F
Ah okay, I think that I might never understand this to 100% since I mainly use Python for scientific computing..
Bit specific to my project, but I really hope they get VTK 7 or later in there before doing this.. Currently latest Ubuntu package for VTK is python-vtk6, there are no Python 3 bindings for that version of VTK. Meanwhile, VTK is at version 8 and has supported Python 3 for the last two major releases. We would have switched to Python 3 many months ago but we don't want to depend on an unpackaged version of a library.
No reason to poisen the well running environment. One project more or less doesnt matter when a company has dozens of them. But adding one project with special needs will be harmful, add costs and extra work.
Have they stated *why*? I've started teaching Python three years ago. And both my "beginner" and "advanced" class are using Python 3. For the life of me I can't think why you would *base* a course on Python 2 in 2017! I still maintain small notes in the course laying out the few differences between 2 and 3 as there are still some edge cases where you need to write Python 2 and especially the unicode handling is quite important.
[libchamplain](https://wiki.gnome.org/Projects/libchamplain)
If that is all your function does you can use `.format(**locals())` with no risk. Alternately just use `functools.partial` to pass around the thunk of a normal call to `format`. I'm not clear what fstrings buy you in that case. Most of your advantages are coming from the function wrapper not the fstring.
Why Python _what_? Why use Python? Why learn Python?
Academics are slow. The de-facto industry standard for AI tutorials, [the Berkeley Pacman repo](http://ai.berkeley.edu/project_overview.html) is all python2 and I don't think the maintainers are interested in updating it and I certainly am not going to.
Yes.
Yes _what_?
I'm a complete noob so please.
Thanks for that. I did a little digging and I was mistaken about it being periodic. The course is also available from Edx and is called "Introduction to Computer Science and Programming Using Python". The course is also free and they appear to offer a paid certificate upgrade but I don't know if it is worth it. 
Nicely done.
Just a heads up, both server and desktop LTS releases get 5 years of support, so 18.04 will go EOL in 2023, 16.04 in 2021.
I wonder why it's been like this. Maybe people hear that "print" is different and run screaming.
I wrote some little gui app in Python 3, then tried it in Python 2 and somehow it was several times faster. Probably has to do with the packages used (reportlab, pypdf2 for example). So yea, it's weird sometimes. 
&gt;Referring to them as f-expressions or f-literals in the PEP and docs would have prevented that. I'm not sure you should refer to something as a literal if its value is unknown at compile time. 
Yes, thanks. I'll edit my message. I thought so, too, at first, but I did a quick Google search and glanced the wrong number.
&gt;If everyone who talked about security had a well defined risk there would be a lot fewer people talking about fstrings I very much disagree with this. I think those talking about security highly *under*estimates those who have actual security problems. Pretty much anyone writing actual code that will be used in the wild *does* have an actual security concern - security is something you absolutely should consider and care about, and definitely not dismiss because "I'm not writing a web app". Even if you exhaustively ensure that your environment mitigates those concerns, defence in depth is still a sufficient reason to write it the secure way if possible, and also mitigates another unavoidable vector of security issues: change over time. I.e code gets repurposed and reused, sometimes in ways where the assumptions made under the hood do not always hold.
/r/learnpython would probably be a better subreddit to post this.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#2: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#3: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Python certainly needs a stronger presence in VR. VR is coming down the pipes pretty fast.
I’ve never used python but I’ve always liked the idea of tracking your character in PUBG to get a trail of where you have been around the map. 
&gt; 2020 is close, but look back: &gt; &gt; Python 3.0 was released pretty much ten years ago. That's where the PHP folks did better. When they jumped to PHP-7, they didn't leave any support window for the earlier PHP-5.6 version. The natural result was that everyone HAD to migrate without any exceptions.
Agreed, but also note that `file` was removed from Python 3 as a built-in.
"Why" is the best question, as long as it's not just a rhetorical question that may lead to flame wars. Please provide a bit more context.
What's your end goal? 
If you use postgresql you can use [search_path](https://www.postgresql.org/docs/9.1/static/runtime-config-client.html#GUC-SEARCH-PATH) to solve that problem. Just remember that if you use a connection pool you have to set it everytime the user changes.
And yet at the last company I worked at, they were clamboring to whatever support options Red Hat will provide beyond the 5.4 (!!!) EOL. Which I doubt Red Hat cares about. I continuously pushed them to begin the migration to 7 but they didn't listen. So I left.
+/u/CompileBot Python 3 import os print(os.popen("uname -a").read())
Thanks, we are using postgresql and I don't know how portable the code must stay. Reading [5.8.3. The Schema Search Path](https://www.postgresql.org/docs/current/static/ddl-schemas.html#DDL-SCHEMAS-PATH) as suggested.
Using search_path is easy. However, before you start using search_path remember that your migrations has to deal with separating the shared schema tables from the user schema tables. I guess you already do something like that anyways since you have dynamic table names but just keep that in mind, it will require some extra development time to get it right.
Why not?
&gt; Yet there are still ~~people~~ companies who can't let go of 2. Everytime I mention there is a butt load of py 2.6 IoT devices out there I get downvoted into oblivion. 
Don't forget to HODL. Good job.
Output: Linux checker 3.16.0-4-amd64 #1 SMP Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64 GNU/Linux [^source](http://ideone.com/n1VUnm) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20/r/Python/comments/7jeott/ubuntu_devs_work_on_demoting_python_2_to_universe/dr6radh%20Include%20your%20reason%20for%20reporting%20here.) 
Was due at midnight 6.5 hours ago but thanks. 
Maybe because they get the idea that you are using those as an argument for why Python2 should be kept alive indefinitely? How many of those IoT devices was released before we got Py 3.3 and how many after? 