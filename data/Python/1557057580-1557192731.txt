Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I don’t, personally. venv is fine. I do like tools such as poetry for managing exactly what gets installed that virtualenv, though. Having a lockfile is great for being able to reproduce builds, and I love that poetry and pipenv both distinguish between testing and production requirements (unlike, say, requirements.txt).
Couple of things, might be better to use travis-ci.com as they plan to deprecate .org soon. Also, pepy.tech offers a total download count as opposed to shields.io
Moving from “the basics” to something more was a struggle for me too. I wanted something to work on to get experience, and I found that challenging. So I started thinking about things I could make that might be useful. I created a command line app that scanned directories recursively looking for media. Images, video, etc. mostly my huge collection of those two media types that I was backing up off of my phone. I wanted to sort them by date created, and potentially other ways, based on command line input. So that was my first project. Did I fishing it? Nope. Did I gain experience doing it? Yep. That’s my advice. Start looking for things you’d like to see, and see if you can do them. Simple things, even if other apps already exist that do that thing, it’s good experience. Open source projects might be another way, but I always found those overwhelming, and out of my experience realm, so I didn’t go that route. But maybe you can!
You can use `#! /usr/bin/env python3` on Windows too [https://www.python.org/dev/peps/pep-0397/#shebang-line-parsing](https://www.python.org/dev/peps/pep-0397/#shebang-line-parsing)
https://pythex.org/?regex=%5E%5Cw%7B3%7D%5Cs(%3FP%3Cday%3E%5Cd%7B1%2C2%7D)%5Cs%5Cw%7B3%7D%5Cs%5Cd%7B1%2C2%7D%3A%5Cd%7B1%2C2%7D%3A%5Cd%7B1%2C2%7D&amp;test_string=Sun%205%20May%2012%3A55%3A45&amp;ignorecase=0&amp;multiline=0&amp;dotall=0&amp;verbose=0 ^\w{3}\s(?P&lt;day&gt;\d{1,2})\s\w{3}\s\d{1,2}:\d{1,2}:\d{1,2} \w is most characters \s is space (?P&lt;name&gt;regexgoeshere) creates a match group that can be referred to by name later to pull it out. \d is digit Things in {} specify the min\max number of instances of the preceding expression That's most of what's going on.
Thank you. I have a travis-ci.com account too but that's for private repos. My public repos are currently in org and these are currently 2 separate services. Hope they will allow us to migrate existing apps. I'll look into this. As for pepy.tech, the site seems very slow. CI/CD badges are more important and their respective can offer them.
On the recent TPTM podcast he sounded like a bit of an arsehole IMO. Conversationally he reminded me of some of the toxic, arrogant, and rude developers I’ve worked with over the years. This blog was really interesting. What a shame.
Yes - Knowledge of regedit, powershell, system internals &amp; things like WSUS or other backend services.
I got to meet some of the people that put together "the cheese warehouse" for python packages as the successor platform of "the cheese shop" for packages. There was a talk at PyOhio last year about it. They are very much associated.
 I got to meet some of the people that put together "the cheese warehouse" for python packages as the successor platform of "the cheese shop" for packages. There was a talk at PyOhio last year about it. They are very much associated.
I particularly dislike how you all have arranged installing dependencies with python. Optimally, I would like to see Python dependencies work like PHP dependencies-- regardless of how it happened, Composer is wonderful to work with. I don't understand how people felt turning an environment on and off was "nice". ...Could have been completely avoided by making local package installation the default, specify a flag for being installed at the user level, and then sudo with a flag for global.
Right on, so I was able to migrate org and public repos to .com Pepy has badges too for projects on PyPI and usually the download count is higher.
I will migrate soon. Thanks a lot!
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Thanks. I thought it’s geared more towards packaging. Will check out.
I just recently tried it but the learning curve is very steep! It's trying to introduce toml. For now, I think it is not that friendly. I might change my mind in the future. And for now poetry is a big no no for me: [https://github.com/sdispater/poetry/issues/866#issuecomment-489336262](https://github.com/sdispater/poetry/issues/866#issuecomment-489336262)
What and tablib?
I have an excuse to learn something.
I think you’re right, it is a form of harassment of the community, or abuse. But that doesn’t mean the community should respond with similar abuse or mob rule with pitchforks. There should be clear consequences for such behavior, but I think that a.) they should aim for reform where possible, and b.) they shouldn’t risk a chilling effect on similar, future situation due to overreaction or error. I think the author’s take on this is ideal: we should acknowledge he has a problem, he’s abusive and/or unstable for whatever reason, talk about that, and make sure he isn’t pur in a position of power which he’s shown he isn’t equipped to handle. But the goal should be reform, It takes a very strong community to achieve this, but I think it is the correct philosophy to aspire to.
Thanks. Not yet. I want to upgrade it some more and get some feedback on it before Githubbing it. https://code.sololearn.com/cjrS21GhYyU8/?ref=app Anything in NumPy I'm translating to C to increase my understanding of the inner workings. I haven't done anything with pandas yet.
Answer to question made on a programming subreddit specifically about how to do it with programming: “don’t use programming”
You need to define "sub program". Do you mean a module or package that you import, or a program that launches a second program, or executing code inside a program such as with eval? Assuming you mean imports, the scope of a module level global is the module itself. To use it in an imported module, that module will either need to import the main module (which would be a circular import) or you need to inject it into the imported module. Younwill get better answers for this on a more appropriate subreddit. Like r/learnpython.
Honestly, this looks like a solution looking for a problem. In terms of new ways to deal with interfaces in Python, I prefer PEP 544, which formalizes the much more Pythonic implicit protocols.
&gt;any foreign characters just causes trouble Isn't that Trump's immigration policy?
How to communicate with a given rest api interface through request (Data) How to build a own RESTAPI (Data) How to use a proxy server to start a request (Networking) SNEK (Pygame)
Data: \- CRUD? \- Visualization Automation: \- Folder synchronization \- Scrapper (can be also used to create databse and fill it with collected data, then create api to acces it) Pygame: \- Tetris \- Snake
While I generally agree with Nathaniel's arguments. One point that I think people here should consider is the fine line between narcissism and promoting a personal brand. I don't think it's narcissistic to have a an organization under your own name. If you wrote most of the code and you want to have an open source brand that people are familiar with and trust in, then why not do it under your own name? Especially when your name is distinctive. Another point is, as a maintainer of some open source projects myself, I find it really annoying when people expect me to just fix an issue or add a feature, like I work for them. That's not how it works. If you raise a silly issue without doing your due diligence of googling or reading the docs AND expect me to give a detailed explanation of why I'm closing your issue, then you're just wrong. I'm not obliged to. Open source maintainence is a volunteering work that I think should be given a bit more value than there currently is. Another good point Kenneth wrote in his rebuttal is that he stated that he made it very clear that donations are going to Kenneth Reitz not to anyone/thing else. Is it "not cool" to do so? Yes. Did he con you into donating? No. Tl:dr; Was Kenneth 100% honest about the funding? No Was Kenneth not "nice" when replying to issues? Yes Is he obliged to be "nice" or maintain any of the libs he does maintain? No Overall I think he's to be blamed, but I think some people are not getting the full picture, especially people who never maintained huge open source projects. It's tough shit with little to no financial incentives. So give the guy a break, especially with calling him a narcissist.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/lcfp] [Complete guide to Python package creation, automated testing and deployment to PyPI](https://www.reddit.com/r/LCfP/comments/bkxjbs/complete_guide_to_python_package_creation/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Thans for the advice! Im interested in creating small simulations (I got inspired by the YouTube channel named Primer). So a cool place to start would be coding the game of life. Could you perhaps give me a nudge in the right direction?
I read my first book on it when I was about 12 and started learning it seriously off and on on my own since I was 16. Im 18 now.
&gt; Celebratory tea is at noon on my veranda if you're free Who drinks tea at noon? Are you trying to role-play as a limey without doing your homework?
this past week I finally finished my first little project with python. I made a new subreddit which is basically a copy pasta subreddit but instead the texts are in all sorts of wacky fonts ( r/ancienttexts if anyone is interested). I realized I needed to make a copy &amp; paste bot to take all submissions on this subreddit and repost it in the comments for the mobile users. (this is what got my into python in the first place). the bot is completed, but now im working on a new bot, that will take new submissions from r/copypasta and repost them in the other subreddit. Im pretty new to python and while the whole PRAW thing and reddit instances were daunting at first, I think im getting the hang of it and writing the code for these bots is relatively simple and good practice
Yes. Cause it would be... developing wheel. We already have it. If it is for educational purposes sure. But purpose stated was... neglect and lack of solution. Proposed solution was programming. Programming isn’t always default answer. Thread starter will probably spend months in trying to achieve this. Question is if it is possible at all. If you need solution, right here and right now, my proposed it probably the one yielding fastest results. But sure, go ahead and learn something.
We found pipenv to be terribly slow in the one thing it promises to improve, which is resolving dependencies. Either way, it turned out, that we don't have too many dependencies in projects, that needs resolving, so we ditched pipenv for any new project.
Because it's easier to use. BTW, requests uses urllib3.
I'd think not since they're only juniors. We fully expect them to not know anything.
looks like a timestamp, so instead of using regular expressions for that, you can instead use the datetime parser: from datetime import datetime datetime.strptime('Sun 5 May 12:55:45', '%a %d %b %H:%M:%S').day (Even better is using the dateparser library.) Its good style to always prefer a more specialized parsers if available instead of regex, other examples for that would be XML/HTML (lxml) and URLs (urllib).
Here's the transcript, ctrl+f poetry: https://talkpython.fm/episodes/transcript/208/packaging-making-the-most-of-pycon-and-more
If the money is funding his personal work on r3, where’s the commit history of that? It isn’t on his github.
I’m not saying the functionality was missing, I’m saying there is too much functionality that I don’t need and that it takes up too much resources
Hi folks, I'm [Thea Flowers](https://thea.codes), the maintainer of [packaging.python.org](https://packaging.python.org). &amp;#x200B; Before this gets any more out of hard (as it tends to do), here's some things to know: * The home page of [packaging.python.org](https://packaging.python.org) has \*several\* tutorials listed. The first is how to install packages using pip + venv the second is the Pipenv tutorial, and it's focused specifically on *application dependencies*. * Pipenv is featured in that tutorial because it solves a known, well-defined use case well. * The \*very first\* sentence of the Pipenv tutorial links to the pip + venv tutorial. * The fourth paragraph calls out that there are many ways to do this. * The last section links to other tools that might be useful for similar use cases, including the excellent poetry and flit projects. * The PyPA is an independent organization that is loosely organized. Presently, member projects only have to agree to follow the code of conduct. We work closely with the PSF's Packaging Work Group (several project maintainers, like myself, are also Work Group members). * All packaging-related projects (including non-PyPA projects) are welcome to have a tutorial, guide, or discussion on [packaging.python.org](https://packaging.python.org). If you want something added, file an issue so we can best discuss which format it should be in and where it should go, and I'm happy to help you land that contribution.
I just went through this as a first time PyPI contributor, and it was really difficult to find a comprehensive guide. Wish this had been around back then. Nice work!
My point was that I don’t want a product with gimmicky bells and whistles. Something like vim and spider where I can add functionality I want and take out things I don’t want. If I could figure out how to do that in pycharm I would think it was a good product.
It's really useful when you need to handle different python versions. The virtualenv part just works like the base modules venv etc.
While I made similar observations, in this case he’s right. It’s been personal all along, the blog post was about Kenneth, the person.
Thank you!
It’s a wrapper for many things you want to do with urllib3 and other libraries like ssl. This is just an abstraction library for ease.
&gt; I find it really annoying when people expect me to just fix an issue or add a feature This is true, but it has now become a shield for him to hide behind. Every time some unrelated misbehaving comes up (carelessly breaking stuff, social-engineering his way through, now misrepresenting funding targets), the standard defense is always "maintaining is thankless work!". Except he does very little of that, nowadays, as it's been long known. In this case, he *asked for money* to deliver a feature. Nobody badgered him to fix this or that: he asked for money to do something, was granted quite a bit of it, then just spent the money (likely on himself) and didn't deliver. I don't think that's what honest maintainers do, including yourself, is it?
The solution was not requested. A technique was requested. This is not product development. Why would someone request a programmatic approach to a system? Given OP has already clarified that this is for education, what value have you personally added to the conversation? You have responded to me questioning your approach, so you clearly saw the reply from OP. What value are you adding to this conversation now?
For libraries, I consider [flit](https://flit.readthedocs.io/en/latest/) to be the best option currently. Any plans to include that one on packaging.python.org?
&gt; Pipenv is featured in that tutorial because it solves a known, well-defined use case well. Then why not equally feature the myriad other tools that do that? There's something like 5-10 of them. Why feature pipenv over the rest? Especially as when pipenv was featured, it was quite young while others such as pip-tools were already several years old and quite mature.
Conda is pretty sweet if you use lots of packages that have extensions written in other languages.
/r/learnpython
Thanks!
Why is everyone give so complicated answers. He asked how to grab the day in that string. Just give him the regex if you able to. ^\w+\s+(\d?\d).* Explanation - Start of string with ^ - Match any alphanumeric characters with \w+ - Match one or more spaces with \s+ - Match the day numbers, optional first digit, with \d?\d — The parens capture the value for use later - Match any number of characters with .* You can then get the value using $1 or \1 depending on the editor you use.
Write to your audience is a fundamental writing principle albeit prose or code. If you are the only audience then organize the code around your thinking. I teach beginners and I find Learning Python Second Edition, (2.3 version), chapter 15 is quite helpful. The 'import' statement concatenate files using the following syntax, "from a import *", assuming you split your work into two files, a.py &amp; b.py and are working on b, they need to be in the same directory. First concept is just to understand how to concatenate files.
Can you provide more detail on what is not working? Are you getting an error?
Well, thank you for mentioning PEP 544. I've didn't notice it exists before. First of all, PEP 544 looks totally consistent with this interfaces approach for me. Moreover, it will be useful to leverage "protocols" in interfaces for implicit interface implementation. It is just that. However, the need for an explicit interface implementation is there for edges as this is a useful tool for developing software architectures.
This post made me chuckle. I looked on his Github and chuckled some more. &amp;#x200B; The data that he uploaded to Github is not even a DNA sequence, but genotyping data from 23andme. Genotyping is used to look for genetic variants in an individual, but does not give a sequence of nucleotides. As far as I know, 23andme does not yet offer sequencing services to the general public. &amp;#x200B; I do not think he will be making much in cloning royalties with that "sequence". Source: Computational biologist working in industry.
I prefer gitlab for some of this. Using gitlab CI you can more easily replicate the CI environment locally using docker than is the case with travis, and using gitlab pages you can get a coverage report without an extra service like codecov. Here is the project I use for bootstrapping: [https://gitlab.com/mbarkhau/bootstrapit](https://gitlab.com/mbarkhau/bootstrapit) Here are two projects created using it: [https://gitlab.com/mbarkhau/pycalver](https://gitlab.com/mbarkhau/pycalver) [https://gitlab.com/mbarkhau/lib3to6](https://gitlab.com/mbarkhau/lib3to6)
Learning is personal. I prefer to just buy books, like O'Reilly's learning series, say "Learning Python" and just have at it. Some people need structure via coursework. Some hackers learn by having some pet project and just whacking on the code. One role of college is to teach you how to teach yourself and you are not there yet. Money is also a concern as Coursera courses are not cheap. I found the Django tutorial quite useful. You can set up a web site just using the tutorial. Then you can start building a web site. Programming is rarely involves just one single language.
If Microsoft donated to it, I’d assume Microsoft scale testing. That’s literally the nature of the framework direction he’s heading in.
Well maybe that is, actually. It is a new day!
No, there's not any error message, but my brown square isn't moving.
You are calculating parabola(x) but not setting it to any property of the rectangle. Try y = parabola(x). Changing x to x+1 won't recalculate parabola though
Thanks! I'm hoping to learn from yours to do the same for myself for rentals around Chicago
Also Travis might not be long for this world. https://news.ycombinator.com/item?id=19218036
Looking pretty good but this example should probably be written for a package and not a loose module.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I'd argue it was more about Kenneth's shifty actions and excuses. There were points that were personal, and others that weren't (ex how much he works on requests).
I understand, but i tried y= parabola(x).. and still not working I think (in my newbie opinion) that python is actually calculating parabola but i'm not making the square moving following the parabola... otherwise i feel kinda lost
I don't know any of the details of what Nathaniel described in his blog post, although I do know him and Kenneth personally. The thing I don't understand is how Nathaniel can write an entire blog post about this, publish it very publicly, and say it is not a personal attack? I know we don't have anything like a "community ombudsman" or "council of elders" or protocol for adjudicating inter-personal things like this in the community (that are not e.g. CoC violations)... but it seems like some kind of intervention in a smaller group, with people that both parties trusted and respected, would have been a far more constructive format for dialog. Once you write a lengthy blog post and it makes it onto Hacker News, now everybody is on stage, things get polarized or defensive, and there is very little opportunity for growth or healing. I am very sad to see this.
&gt; Update I: I will be removing the donation buttom from my repos, based on community feedback. They're mostly an experiment anyway, and a failed one (very rarely do they get used). So unless you mean that it didn't *literally* say pay Kenneth, which is extremely irrelevant, as what matters is who the money went to, which was Kenneth, you're incorrect.
Yeah maybe a break would help... Listen requests is great. Main goal is to make sure requests 3 is a great product? Fuck man it's a code library that is free. You aren't selling a product. All in all this seems kinda stupid but Kenneth comes off like a righteous know it all everytime these stories pop up
I've used Gitlab too when Github don't support closed source projects for FREE. Until now I have projects on Gitlab but some of them I've migrated to Github. My reasoning is that there are a lot of integrations available in Github and contributors can easily spot your libraries and help with changes.
Well you’d have to learn the rules of life, then research how to create an app in which the main() method loops, and go from there! Start with a design; write out all the required rules and such, then you’ll have a direction to work towards!
Awesome! Thanks for the examples. I'll try out of the examples and see if I can get a better understanding.
Thank you!
Quick shout-out to https://github.com/sdispater/poetry I've stopped using pipenv due to how slow it is, and how unfriendly it is with collaborating with a setup.py
Yeah, cuz nothing's better for a beginner than being thrown 5-10 different ways of doing something. And your tooling maturity argument creates a chicken-and-egg problem, too.
If you don't mind, more explanation about what "loose module" is?
Forget about responsiveness, at least poetry's maintainer isn't an insufferable dick.
There was a game called Slignshot. As far as I remember it is written in Python using pygame. I'm not sure the project is alive but it was several years ago. The game is built around throwing projectiles between planets. I think you could find useful to dig in its code as you're doing a somewhat similar task.
thatsthesadfuckingjoke.jpeg Essentially it is funding him, even though he is nothing but a puppet master making the "how" decisions while other engineers are actually writing the damned code.
You have to do slightly more work, and in return have much more control. But I get downvoted in this sub for pointing out that urllib is more powerful than requests, for some reason.
checking it, but not finding the code... however this might be interesting to me
"Let's protect the guy who stole 30k and *not* warn the world about him".
Out of curiosity, what 5-10 tools out there address the same use-case as Pipenv?
That's not what I'm saying at all. I'm saying that there are better and more constructive courts in which to adjudicate this matter. I am saddened that interactions between two people I know have so degraded, that our community cannot resolve this issue.
What does that even mean? Every API is designed for humans... It's a rather pointless slogan.
&gt; Fuck man it's a code library that is free. You aren't selling a product. He's a marketer calling himself an engineer. Of course it's a product to him. He even sells a "requests pro" which is essentially a mislabeled donation button and is the same as actual requests in everything except name. He accepts 12 bucks minimum, with a default of 150 (however that default is arguably proper as the dialog claims it is meant for organizations).
That is also true.
He made his retaliation blog post and it's full of bullshit which [I decided to dissect](https://www.reddit.com/r/Python/comments/bku40b/njss_blog_post_kenneth_reitzs_journal/emjm6et/).
Omg drumpf got owned. No recovering from this.
It looks like your package structure is like this: ``` ./amortization.py ./setup.py ``` Which causes you to use `py_modules`. This isn't the best for organizational purposes, as it leads to gigantic python files. Here: ``` ./scripts/amortize # Put main() - but often this just calls a function in a module ./amortization/__init__.py # Use for generic module functions ./amortization/schedule.py # Put schedule related functions here ./setup.py ``` Then your `setup.py` has the following: ``` python from setuptools import setup, find_packages setup( packages=find_packages(), # Will just automatically find packages with __init__s scripts=['scripts/amortize'] # Will move to /bin and chmod correctly on install ``` Make sure to put a shebang line at the top of your script- `#!/usr/bin/env python` I don't remember how well that plays with windows.
You're claiming that such a thing should have been disputed behind closed doors, either personally or in a conduct meeting (presumably by members of the PSF). Kenneth has made far too many friends in high places for such a conduct meeting to not go unbiased. And handled personally was tried repeatedly via the many interactions. When you're a piece of shit who essentially steals 30k, you deserve to get assblasted in front of the masses. Let his true nature come out for once and for all.
Off-the top of my head, * conda * poetry * pipenv * pip-tools * pyvenv * pyenv * pyenv-virtualenv * virtualenvwrapper There are probably more, and the bottom of this list is fairly inbred but most of them have been around for quite a long time now.
Yeah I agree with you totally, I don't see the need for abstraction at this level, urllib is abstracted enough and is quite powerful
I never liked how Kenneth behaved but I don't think downvoting your respectful (and with some good questions) comment help the discussion either. Have an upvote.
Makes sense. The lackeys should do the hard work.
The use of pyproject.toml isn’t _necessarily_ any better than using **setuptools**, it’s just believed better by the guy who wrote **flit** and some/most of those ideas have been picked up by **poetry**. Both are good tools, and if you _want_ the enhancements that they provide over **setup.py** they’re certainly a valid choice, but both are also somewhat orthogonal to Pipenv and it’s disingenuous to say that they’re “generally considered a better quality tool”... they certainly are by those who use them for the specific case they address, but they don’t address precisely the same case.
Thank you.
Looks like this is it https://github.com/ryanakca/slingshot And it's stale indeed
Originally it was recommended without many of the other details in your bullet points and only changed after outrage. Either way I stand from the beginning that pipenv should have been given equal weight to the other solutions given it's shortcomings. You can parrot these points over and over again (as you guys have done many times), but the true answer is you're all just supporters of Kenneth. And there's nothing wrong with that in and of itself. But that shouldn't have steered how the page was made nor its position.
Well this is my new motd!
I don't disagree that There should be one-- and preferably only one --obvious way to do packaging in python, but we aren't there yet. The trial by adoption hasn't lead to a clear victor a-la npm yet, so to speak. I don't really use any of the players involved (I'm a conda gal myself) but the impression I got/get is that at the time pipenv was put in the pypa docs, it was a slow, buggy mess and poetry was only somewhat less so. piptools was stable at that point in time, and [vendored in pipenv](https://github.com/jazzband/pip-tools/issues/679) to do the graph resolution. The graph resolution in piptools isn't perfect (for that matter, neither is conda) - but with the exception of the incomplete pipfile standard, there wasn't much pipenv did at the time other than wrap pip-tools. The thrust of my question isn't "why showcase one?" so much as it is "why was pipenv the one?"
It's a barely explainable feeling i have when I'm making a library, i try to make it in a way that lives up to the same level as libraries like requests or flask. Reitz and Ronacher are two great pioneers of the kind of code style I try to follow.
LOL WTF is that response?
&gt; This isn't the best for organizational purposes I know how to use this kind of structure. See my old modules here: [https://github.com/roniemartinez/latex2mathml](https://github.com/roniemartinez/latex2mathml) [https://github.com/roniemartinez/DocCron](https://github.com/roniemartinez/DocCron) and a lot more! &amp;#x200B; &gt; This isn't the best for organizational purposes, as it leads to gigantic python files. As far as the code is concerned, amortization.py is enough to handle 3 functions. If there are new feature to be added, then that will be the time to optimize. I don't think I need convert multiple files from a 74 SLoC file. &amp;#x200B; &gt; Make sure to put a shebang line at the top of your script Try to read my main code repository: [https://github.com/roniemartinez/amortization/blob/master/amortization.py](https://github.com/roniemartinez/amortization/blob/master/amortization.py) &amp;#x200B; The examples in the blog simplifies the code and hides other things that are not important to a reader. Shebang is not required by a Python interpreter. But I use it too. &amp;#x200B; Premature optimization is the root of all evil.
To be clear, Nathaniel is also a very prominent member of the community and has "friends in high places". FWIW there are also people who take issue with how he's acted in certain contexts, so this is not some David vs Goliath thing. It almost seems like what you're implying is that *no group* of trusted friends or community leaders could be impartial, i.e. real justice is impossible except in the court of public opinion. If that is really the case with our community, then we are in a very sad state of affairs. On the points of the case itself, I do not have the facts of the matter. I can certainly see Nathaniel's claims about the interactions, and obviously Kenneth disputes those characterizations. As a manager and business owner, I have been in many (too many to count) he-said-she-said situations where each party is absolutely convinced they are in the right. So, I am reluctant to jump to conclusions here. Certainly Kenneth has a reputation for interaction difficulties in the community. But it not seem like a reasonable justice system to have that render him automatically guilty of all accused crimes in perpetuity (including financial malfeasance). Anyways this is probably too nuanced of a topic to try to discuss with strangers on Reddit. Thank you for your engagement thus far.
Apparently the software isn't guaranteed to do what it says it will do and I shouldn't complain because it was free, so I switched to Poetry.
You are aware that the described issue is a simple one to fix, yes? The author is currently swamped by issues and requests and has been for a while. I think I'll actually make an effort to start from the bottom and take the load off.
i'm checking this, but not finding the code... but this may be interesting to me
&gt; In a followup article, you can explore moving from setup.py to setup.cfg, which leaves just a no argument setup() call in setup.py and all your variables and settings in the easy to import and programmatically read setup.cfg Thanks for suggestion. I will surely write one on this topic. :)
I’m not sure the amount of time they’ve been around is relevant, if they don’t address precisely the same problem as Pipenv (project dependency management and deterministic builds, the virtual environment functionality is just the means by which those two are accomplished). Arguably the only three of those that do are **pipenv**, **poetry**, and **pip-tools**, with **conda** off to the side if you’re happy working in what is essentially a for-profit walled garden. Certainly **pyenv** is entirely orthogonal, as it only addresses the interpreter, while the others are primarily limited to enhancements of virtual environments, with no serious attempt at the problems of dependency resolution and deterministic locking. Now I’d be _ecstatic_ to see a tutorial up there for **poetry** and **pip-tools**, with a blow-by-blow comparison ... from what experience I’ve had with the **poetry** and **pipenv** they’re engineered towards different fundamental problems (libraries for distribution on PyPi and apps for installation, roughly and respectively), and neither handles the other’s concerns _well_. I’ll admit I don’t really know **pip-tools**, but to me it seems it has the problem of being, itself, a dependency you need to install per project... or at least it appears that way.
In my case, I just had a bachelor's degree in math and a good portfolio.
Personally, I'd love to. We have to balance that with not confusing newcomers with choices, but that doesn't stop us from adding stuff. It's more of a problem for me as the information architect to solve. Mostly we just need volunteers to write the tutotials, guides, or discussions and work with me to Integrate that content. The easiest route is to start with a guide and then we can discuss how to promote that on the home page as a tutorial.
I understand that your code on demonstration here is not complicated enough to force a package and it's organization- but you're writing a documentation example. It should be simplified for the purpose of brevity and clarity, but still illustrate important concepts that hold true for more complicated examples. I'm not accusing you of not knowing this, rather making an argument that even if your example code is simple, it should still demonstrate proper packaging behavior for a more typical, complicated module. &gt; Shebang is not required by a Python interpreter. Nor are proper file permissions, but since we often want our users to run scripts without having to invoke the python interpreter first, it's important. &gt; I don't think I need convert multiple files from a 74 SLoC file. You don't, but if your point was to write a useful blog, you should.
Here’s a tutorial from RealPython that might be helpful. https://realpython.com/python-modules-packages/
Well, first of all the "point" you're making here in this comment is completely different from the "point" you made in your original post. Secondly, neither this comment nor your original post is an argument or a discussion or really anything other than trolling. You don't give any reasons, evidence, or really anything other than bad arguments or bald assertions. For example, in this comment you still don't make the case that PyCharm was giving you "gimmicky" bells and whistles. You just state it like it's a fact and the problem is that it is completely obvious that this "fact" _obviously_ is not going to be held as true by many or most people and yet you just breeze right on by like it's plain as day. I'll address your edit to your original post in another comment.
I do. Though, as you can read from the Github issue thread, fedora builds are broken. The author and contributors should reevaluate what issues should be prioritized first. It's been 4 months since the issue was opened. I think, they are picking up what's "shiny" first from the issues.
I don't know that much about the guts of packaging in python - I think all it really boils down to is being able to get the required .py files into sites-packages and any linked dependencies (DLLs, dylibs, what-have-you). With that in mind, the various "competing" specification files -- setup.py, setup.cfg, pyproject.toml, pipfile, conda yamls, etc, all do one important thing right - they get the required information down ~on paper~. I would argue setup.py is inferior, since it requires executing a .py file for a crawler to learn about dependencies, etc. I believe the rest are, more or less, copies of each other less some wanting to include lock information and formatting. If we look at other languages, I know some about JS, Rust, and Golang. JS had npm appear reasonably early in the node adoption cycle. NPM had commercial backing (NPM is itself a company) and ended up at the top. They are now the de-facto, just as pip (perhaps arguably) the de-facto. In Rust, Cargo has existed since day 0 and is the de-facto (only?) way to do dependencies, etc, in the language. In Golang, there are a variety of kludges to work around the lack of modules, though gomod is in the works as an official solution provided by the language. What these have in common, with the exception of NPM which is "almost in common" and golang which is "in the future in common" is that there was an official entity associated with the language that provides the solution. I think that is critical to success. Unless the PSF writes a packaging spec and makes it part of the language in py4 or 3.9, etc, I don't think we will ever see a winner emerge since everyone will use the tooling they like ad infinitum, unless it breaks and is unmaintained. In other words, we will have [xkcd](https://xkcd.com/927/) syndrome forever until an official solution (which probably must be superior to the alternatives) muscles the rest out of the race. I think setup.cfg is the closest to being official and would prefer that win, or be transitioned into a format with real syntax rules (toml, yaml, I don't personally care what). I also acknowledge that multi-OS and the ability to have heterogeneous (C/++, fortran, [...]) extensions fundamentally makes lockfiles *really hard* and we probably won't see a solution that does that all in one until long past year 2030. So perhaps we should abandon that idea, or just make a per-arch lockfile which would allow them to be truly deterministic. We already have per-arch wheels anyway, and most other languages work on that same sort of principle. Of course, then as a library/app maintainer you must provide anywhere from, say, 3 to 10 lockfiles which probably requires trying to install your app on all of those platforms since we have no cross-build/cross-install tooling as a language.
It's in the key projects but no one has written a guide or tutorial for it yet. I'd love to see someone volunteer to write that.
I can see your point. Thanks for the comments.
Frankly you don’t need to use it until you run into the exactly problems that it’s there to address. The simple fact is **pip** and **venv** do _nothing_ to help you resolve and lock dependencies... they just let you install whatever you want, including completely incompatible packages. Neither addresses the issues that Pipenv (and Poetry) are trying to address. But if you don’t _need_ those issues addressed — and let’s face it most Python developers don’t — then you don’t need to use them at all. But if you happen to end up writing a library that _lots_ of other projects depend on, or an app that _must_ not break due non-deterministic builds, then you _do_ need to use them.
I’d go with a whole project, partly because I have it and I can’t think of a specific function standout function that’s directly related to the core of it. The whole is greater than the sum of the parts. It’s 320k lines of raw code/160k source lines. There is very little of it that is fancy or honestly hard. It’s streamlined and simple (what you want) with some evil black magic in a section that would balloon the code otherwise. I’d talk about the genesis of it, some of the insane workarounds I had to do, the micro optimizations that dramatically sped up the code, and the GUI because it’s flashy and brings everything together.
&gt; if they don’t address precisely the same problem as Pipenv (project dependency management and deterministic builds, the virtual environment functionality is just the means by which those two are accomplished). They aren't deterministic though. If you take a lock that references packages with compiled extensions generated on win64 and try to use it on MacOS, it will work, then fail when you try to use python for not including some platform-specific dependencies. If you try the reverse, it will fail for trying to install some platform-specific things that cannot be installed on win64. Otherwise, everything on that list also does dependency management. And I would argue pretty strongly that you can't accurately claim any of them are deterministic cross-platform. And for a single platform, pip itself is deterministic with pip freeze &gt; r.txt. &gt; with conda off to the side if you’re happy working in what is essentially a for-profit walled garden. I think conda and NPM are very apt analogies for each other, and JS had no problem adopting NPM as the one true king. Whether we should emulate the JS community is a separate topic, but the fact that conda is made by a commercial entity shouldn't rule it out. Anyone can make a conda-forge feedstock, and Anaconda themselves support conda-forge. &gt; I’ll admit I don’t really know pip-tools, but to me it seems it has the problem of being, itself, a dependency you need to install per project... or at least it appears that way. The intent is that you use pip-tools in a way similar to npm i -g &lt;pkg&gt;, say pkg = webpack. In that regard, it is no different to pipenv (and pipenv is really a wrapper around pip-tools anyway...).
To address your edit: &gt; I have read all the comments here and there is a lot of stuff saying that I’m wrong, but not much about why. This is funny because the main thing lacking from your original post is the "why". It was just full of bald assertions and faulty logic. &gt; I don’t care that pycharm can do the same exact thing as spyder I care that it does it faster without taking up all my resources. You keep asserting that it's faster, but based upon the rest of your post, it feels like we can't just take your word for this. What do you mean by "faster"? Typing latency? Time to open? What? Jetbrains has done a ton of work on latency and (as of 2016) was one of the [fastest editors](https://pavelfatin.com/typing-with-pleasure/) on Windows. But whether this is relevant to your complaint no one knows. Additionally, "taking up all my resources" doesn't mean anything. &gt; I would like to also point out that I do hydrologic modeling for a living, and most of my code revolves around post and pre processing data, so if I offend people for criticizing Pycharm, its because Spyder is built for programmers like me who do scientific work. Now, _this_, *finally*, makes some sense. On the other hand, it is super freakin weird. I mean, I don't complain that hammers are so bad because they can't remove a screw. Hammers are not meant for the job I'm trying to do! &gt; Finally this may be my own fault, but I take comfort in small simple IDEs rather than large complicated ones. That's fine but a little strange to take comfort in such a thing. &gt; I just don’t want to learn about all the bells and whistles that are specific only to pycharm. Instead, you'll learn about all the bells and whistles that are specific to only vim? I mean, to complain about features that are hard to learn and then advocate for vim is pretty rich!
I basically have zero-knowledge of VBA, although have done some scripting. I would like to take my multi-table data model in excel and move to an environment (D3, XLWings, Dash, ect.) to do some interactive dashboarding. Trying to decide which of these great environments is suitable for me, thanks.
1. pyproject.toml is a standard defined in the PEPs 517 and 518, [setup.py](https://setup.py) is a convention. People should start switching their projects to pyproject.toml, and new programmers should be led into that way. 2. I said that poetry is both for the same use case (application dep management coupled to venv management) and is generally considered to be a better tool. I’ve read about bugginess and problems with pipenv several times in this sub, and only praise for poetry.
Yes but why pipenv? Is it just because someone wanted to write the tutorial? If that is the case, if someone did the same for &lt;other tool&gt; would it be rejected because there is already an example? If that's the case, I would say that is really not a very good situation to be in... If that's not the case, when the list contains 5 tutorials (no disagreement -- too much choice, information overload) how does the winner get decided?
NP. might be that you have to do `fileinput.input(args.files or None)` because idk if `args.files` is `None` or `[]` if no arguments have been specified and I also don’t know if `fileinput.input([])` defaults to `stdin` or just yields 0 lines.
Wanted to access corporate bond yields when without a Bloomberg or broker. For some reason you like literally can't find corporate bond yields on the internet (try it). However, after scouring the internet, I found a lead. The Financial Industry Regulatory Authority (FINRA) has this really crappy TRACE system that actually logs the trade history of individual corporate bonds. So, violating their terms of use, I scraped all the pages of corporate bonds and exported them to an Excel file to sort and filter to look for yield arbitrage opportunities. Corporate bonds of the same duration and credit rating should theoretically have relatively similar yields. It was interesting to look for outliers.
PEP390 for setup.cfg predates PEP517/518 by 6-7 years! https://www.python.org/dev/peps/pep-0390/
&gt;The thrust of my question isn't "why showcase one?" so much as it is "why was pipenv the one?" That usually boils down to "I just created/worked on/struggled with tool *x* so now I will write up my experiences and conclusions in a tutorial or blog post." If people didn't write up tutorials for new tools, they'd die on the vine
k i checked what i found here, and, to me, it seems more complicated than it should be for my code. he's not using the (ax²+bx+c) thing, which is an element of my code
Don't have `./scripts/amortize`; use setuptools' `entry_points` instead.
&gt; To be clear, Nathaniel is also a very prominent member of the community and has "friends in high places". FWIW there are also people who take issue with how he's acted in certain contexts, so this is not some David vs Goliath thing. So then it will be biased for one of them, we just don't know which one. Still a bad situation. &gt; It almost seems like what you're implying is that *no group* of trusted friends or community leaders could be impartial, i.e. real justice is impossible except in the court of public opinion. If that is really the case with our community, then we are in a very sad state of affairs. No, I'm saying that statistically speaking if you were to take a group of 9 high ranking PSF members they will be biased to favoring Kenneth. It is possible, yet difficult, to be impartial. However many times comduct boards don't change case to case, so statistically, they will be biased. &gt; On the points of the case itself, I do not have the facts of the matter. I can certainly see Nathaniel's claims about the interactions, and obviously Kenneth disputes those characterizations. As a manager and business owner, I have been in many (too many to count) he-said-she-said situations where each party is absolutely convinced they are in the right. So, I am reluctant to jump to conclusions here. &gt; Certainly Kenneth has a reputation for interaction difficulties in the community. But it not seem like a reasonable justice system to have that render him automatically guilty of all accused crimes in perpetuity (including financial malfeasance). &gt; Anyways this is probably too nuanced of a topic to try to discuss with strangers on Reddit. Thank you for your engagement thus far. "A simple debate is not going my way, so I'll save face and blame the fact that redditors are mean and stupid." The facts are this, Kenneth has a horrible attitude, which has been corroborated by many, and Kenneth is taking donations for the work of others, which Kenneth in his own response admits but acts like it isn't a big deal.
 yes, and it was rejected, since distutils2 didn’t end up becoming a thing. &gt;## [Rejection Notice](https://www.python.org/dev/peps/pep-0390/#id3) &gt; &gt;As distutils2 is no longer going to be incorporated into the standard library, this PEP was rejected by Nick Coghlan in late April, 2013. &gt; &gt;A replacement PEP based on [PEP 426](https://www.python.org/dev/peps/pep-0426) (metadata 2.0) will be created that defines the minimum amount of information needed to generate an sdist archive given a source tarball or VCS checkout.
For the same reasons that you would use click, docopt etc. over argparse: Ease of use or at least the perception of it.
&gt; "A simple debate is not going my way, so I'll save face and blame the fact that redditors are mean and stupid." That is not what I am saying, but I can see how my words can be interpreted that way. I didn't say "redditors". I said "strangers on Reddit". My meaning was this: I don't know you, and I don't think you know me. We clearly have different perspectives on some things. I think pure text, in general, can only bridge so much of a gap in perspectives, personalities, and values. I am almost certain that we'd have a better time talking about this in person. But, as it stands, you and I are both strangers to each other on a textual medium, and so I think there's only so far we can take the discussion in an efficient manner.
They’re both _provisional_ standards... it’s jumping the gun to promote wholesale switching to them at this point, and will be until they’re finalized. And yes there are quite a few very vocal people on here who prefer **poetry**, but that doesn’t constitute a general or majority opinion. Lots of people are using both **pipenv** fand **poetry**, and lots of people have experienced mixed results with both, especially when someone tries to use **pipenv** for libraries or **poetry** for apps. Rather like back in the day with testing the _best_ solution is ahead of us and almost certainly learned lessons from the current mess.
Yup, also a great option. One of the key benefits to using entry_points, or just having a simple function call in your scripts, is that it's testable.
poetry is great for apps. just commit the lock file. pipenv is not designed for libraries at all.
All of what you wrote is about a different topic. The previous subject was the fundraiser drive, not those donate buttons. I am in fact correct.
I was about to put the talkpython link here. Thank you for doing so. &amp;#x200B; What I consider toxic was his opinons and description of poetry project and community. I recommend to listen the podcast.
clean and concise, thank you
There are some very good tips in here. Thanks
You're welcome!
ith viry guhd
I read Nathaniels post carefully and what it raises are questions about Kenneths actions in a professional environment as well as suggesting that he explains the money situation and his behaviour around it. To me, it tells me to be cautious of Kenneth if I were to be involved with him in business matters. It does *not* tell me to stay far far away from Kenneth the human being. Actually there are many who says Kenneth is a really good friend and I don't doubt that.
Shameless plug for [dotlock](https://pypi.org/project/dotlock/), which I built specifically to re-lock dependencies quickly.
Traceback is selfexplanatory enough. You doesn't have `rjsmin` module. Put library name to search and you can find it fast on pypi [https://pypi.org/project/rjsmin/](https://pypi.org/project/rjsmin/). Why is missing is another question.. maybe missing dependency in original tool, broken virtualenv or something else.
This is sad.
You're confusing both yourself and me, so please be clear and start from the beginning.
Building a python package to act as a wrapper for Google OR Tools and clustering techniques leveraging SciPy/Sklearn for Supply Chain engineering. This work has made me really fascinated by the underlying solvers and algorithms. **I’m edging towards writing my own lower level code purely out of curiosity. Is this a waste of my time?** There are just so many things I want to do, but I never seem to settle anywhere. It’s a bit frustrating.
Determinism across platforms is a whole other nightmare, though, and not one that was intended to be addressed by _any_ of these projects. The inciting need for both **pipenv** and **poetry** is to give developers the same build on the same platform... that’s _enough_ determinism. As for **conda**, I’m not advocating for or against, I’m just saying it isn’t addressing the same issue as either **poetry** or **pipenv**... the latter two are all about **pip** and the open ecosystem, while **conda** is all about, and relies on, its walled garden. If you’re happy with the walled garden then it’s an option, though it’s a _long_ way from becoming a de facto standard like npm.
You are welcome!
What are some of the resources you would suggest instead?
Thanks for this. I had [completely messed up my repo](https://github.com/GiacomoLaw/Keylogger) with packaging files, but unsure which ones I should leave on for development?
Oof
I assume it's because those other projects haven't done this: &gt; All packaging-related projects (including non-PyPA projects) are welcome to have a tutorial, guide, or discussion on packaging.python.org. If you want something added, file an issue so we can best discuss which format it should be in and where it should go, and I'm happy to help you land that contribution. And pipenv has.
The original article that started all this said that fundraiser that he spends his entire article talking about. It didn't say "send to Kenneth". The internet archive has a copy of that page before Kenneth removed it. It doesn't say "me" either, it says "we", so either Kenneth thinks he's a king or he's again not being truthful about it being clear the money would go to him and him only.
Yes, Facebook has an API. Just search "facebook api".
No argument that cross-platform determinism is a nightmare, but if your team codes on both windows and mac or linux (which I don't think is at all far fetched) I don't think you can say you need single-platform determinism but you don't need multi-platform. pip freeze &gt; r.txt is as deterministic as any of those anyway. It just doesn't have a guarantee against conflicts. I'd argue conda-forge is not a walled garden, too and has as good of a dependency resolver (though it is not perfect).
This is a good opportunity to learn the debugger and understand python a bit more. `import pdb` at the beginning of your program and then somewhere before you try to calculate the movement, put in `pdb.set_breakpoint()` Then use `step` or `next` to go to the area you try to calculate this. Then use the command `dir()` which will show you all the variables in your current scope and what their values are.
I think the point was to maximize exposure, not attack personally. He even discusses this in his post. He’s seen the way Kenneth’s controversial engagements have been almost hidden and thinks that’s not healthy for the community or the project.
Visual Studio Code + the Python extension, for me. Lighter, more configurable, open source, and versatile.
It depends on your skill level and what you're interested in. I prefer more real world usage so [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/), [Real Python](https://realpython.com), etc.
If a person is acting shitty it's super hard to not make it personal. Nsj did as good a job as is possible imo. At some point one has to stand up to shitty behavior though.
don't know mate, try a few and decide what forks for you. I can personally recommend a Vim, nice and tidy interface, user friendly, works for me over 20 years.
&gt; All that being said, I'm not sure why this person feels the need to attack my character, including curating a list of quotes (what?) from "collaborators". Just pointing out that KR puts lists of quotes...praising himself...on his webpages and projects.
The more time you spend arguing over libraries and tools, the less time you have to write code.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Both **pipfile.lock** and **poetry.lock**exist in part because of deficiencies — real or imagined — in merely using `pip freeze &gt; requirements.txt`, deficiencies that seem to go beyond merely those guarantees (dev dependencies, hashing, etc).
This is hilarious. As a side note, i think you should give your README a once-over; there are a lot of spelling mistakes.
Sure. I just think if you really need more than pip gives you, you need it all. I'm a scientific pythonista and have only ever had a dependency problem once -- travis was grabbing an old version of scipy (0.10) that had a bug which caused my tests to fail. Adding scipy &gt; 1.2 to my travis file fixed it. This isn't at all related to version clashes, which is the problem these tools are trying to solve. I don't really think it's that much of a problem, or at least it has yet to bite me.
I agree. If you want to protect others from who you think is a manipulative person, there's also no way but publishing that
Yeah I literally wrote it out in one huge brain dump, and my spelling is terrible to begin with.
Thank you for posting these and exposing the larger pattern here. Over the years, I've picked up a bits and pieces of hi attitude towards people, mainly from snarky responses to pull requests on Requests. Not enough to worry, but enough to be cautious. I've also had the displeasure to work with someone that mimics a very similar pattern of behavior, which, after a few months, sent me into a dark and confused place. Only after changing jobs and joining a healthy team did I realize how I was had. Reading Kenneth's posts raises the hair on my back because it's so familiar. For anyone wanting a more nuanced view into situations like this, I highly recommend Hintjen's [The Psychopath Code](http://hintjens.com/blog:_psychopaths). While I don't think Kenneth is a psychopath, the book describes manipulative behavior patterns, which are similar to what Kenneth is doing. I hope this helps others avoid the situations like the one I stepped into. I also hope Kenneth realizes that he's hurting other people and changes his behavior.
text = "" def reverse(text): #this function takes string x as an input text = str(input("enter a word that you want to reverse:" )) #and returns its reverse text[::-1] print(type reverse(text)) #print("the reversed text is: "+reverse(text))
`text = ""` `def reverse(text):` `#this function takes string x as an input` `text = str(input("enter a word that you want to reverse:" ))` `#and returns its reverse` `text[::-1]` `print(type reverse(text))` `#print("the reversed text is: "+reverse(text))`
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
/r/learnpython
Perhaps you want to write code in editor not straight in IDLE?
Maybe you got 3 spaces in one line and 1 tab which ist equal to 3 spaces in a other line. This can be fixed in the options of the editor you are using. There should be a option that converts tabs to spaces.
Use Google. This question is not appropriate for thsi subreddit
I have an interest in retro hardware and this headline got me very excited until I realised I'd gone up the road.
Yup sounds like OP is typing in an ide.
Try them all, don’t forget to put spyder on your short list
 import scratch
Which is an argument for you not needing these tools... however I’ve had it bite me _lots_ of times, as have many others. Where it usually bites is in deep dependency trees, where you’re relying on dozens of external packages, all of which are actively developed, and none of which is aware of the others. I work primarily for VFX studios where they’ve got thousands of artists working simultaneously on dozens of different projects... each project has its own developers working with their own dependency trees, many of which have complex overlap. These issues extend _well_ outside Python, so just having the Python developers be able to say that a given package and _its_ dependencies are locked in a deterministic fashion that won’t mutate going forward is an _enormous_ gain in overall stability. The one true godsend for us is we usually have all our tens of thousands of machines on the same OS, if not necessarily the same version. I’m not saying these tools are anywhere near perfect, I’m just saying they’re addressing a very real need that you may simply not have run up against. Which is why venv / requirements.txt may very well appear sufficient, right up until the moment it isn’t.
Because something has to be, and who the hell cares? Just use what you already know how to use and be done with it. If you don't know one yet, pick one at random and you'll do just as well as anyone else.
Why not just use conda and pin all of *your* requirements in that case? I would think you want high performance compute, and going from 10,000 to 1,000 machines because your numpy (and everything depending on it) went from OpenBLAS to MKL would be worth it alone. The dependency resolution comes free at that point...
"my our" error... wife detected. ;)
The super talented [Vanessasaurus](https://github.com/vsoch) added Docker and Singularity instructions to the readme, so you can containerize your trump
I'm new to python and kinda new to programming too, and i've just starting working on a snake redux! I'm just stuck on getting the snake head to move continuously with the press of one button!
One, because legal (ours or client’s) decides we can’t / won’t use the walled garden. Two, because we’re already serving our own hardware-tweaked builds of things like numpy off our own pypi mirror. Trust me, dependency resolution never comes free, and it just gets _much_ more complicated when you’re trying to parallelize humans creating pixels from a massive web of assets that themselves depend on the precise runtime environment that existed at the moment they were created and two departments in different time zones are both dead set on pinning their internally developed tools to mutually incompatible versions of those same tweaked dependencies on a seemingly moment-by-moment basis. I’ve seen hundreds of thousands of dollars get lost to manually assigned version conflicts... anything that lets me help the departments take the guesswork out of the equation is a boon.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Ah, I thought you were saying the reverse, apologies.
\`requirements.txt\` is not for production environments. That's what \`setup.py\` is for. The requirements file is for reproducible(ish) dev environments, with hard version numbers, all optional dependencies, and whatever dev tools you need (pytest, black, flake8). The setup script is for production environments, with extras controlling optional dependencies.
Tensorflow is not officially supported for python 3.7. But workaround is to do, Do, pip3 install https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.8.0-py3-none-any.whl I think it would be better if you would install anaconda python. You can easily manage packages.
Conda poisons your project. If you depend on conda, everyone who depends on you also depends on conda. You end up enforcing a very specific development environment on your downstream users. &amp;#x200B; It's a good option if there's no other way, but if you can avoid it, you should.
I disagree. It’s almost idiomatic to run `pip freeze &gt; requirements.txt` at some point in the development cycle to lock down the installed package set to a collection of exact versions. Suppose I develop and test against `foo=1.2` which depends on `bar=2.3`. Since my setup.py contains only `foo=1.2`, it’s possible that later installations may end up with `bar=2.4` instead of 2.3. Will that work? Who knows! Roll the dice! It’s very useful to say “I _know_ this collection of packages works, so use _exactly_ this”. That used to be most commonly done with requirements.txt (or more recently, a constraints file that served kind of like a lockfile). Now I find the poetry (and pipenv) tooling far more convenient for making this explicit.
To learn a new language, Vim is the best option. You really learn to code when you don't have auto complete. VSCode help you a lot to increase your workflow. And for a language like Python, the interactive shell makes it mush easier to test your code or to see how the stuff actually works. For every hour spent tinkering with the Shell, you will have better performance while scripting. 😏. That simple. (Also, cotribute to open source projects once you are comfortable... Helps you a lot on the go) Happy hacking
"Automate the Boring Stuffs with Python".
you had no major previous programming experience?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Cool project! Is this your first using tensorflow? Was this a school project? What’s the background other than the obvious?
You keep calling conda a walled garden. What do you mean, exactly? Conda is open source. You can use conda-forge to get conda packages provided by the OSS community instead of by Anaconda. You can have your own private hosted channels for your company just like you can host your own private package index for pip. I see absolutely no legal barriers for using conda.
Wanting to enforce hard version constraints on your downstream users is a separate issue, and one which is barely compatible with the python ecosystem. If you're writing a library, you cannot impose strict version constraints on every one of your library's dependencies - nobody would be able to depend on more than 1 library. If you're writing a binary, you have to hope that yours is the only binary using that python envionment (through something like ``pipx`). It's also entirely possible already: just put those hard version constraints in the `setup.py`. That issue is orthogonal to my point. You criticised the current infrastructure for having no way to separate dev from prod requirements, and my point was that actually you can (/should) use your `requirements.txt` and `setup.py` to do exactly that.
For a personal site that you show to employers that's normal to sell yourself a little. I don't fault him on that.
Nice! Have any thoughts on pybuilder?
I’m talking about installing applications than distributing libraries: I do the latter way more often than the former. If I have 5 top-level dependencies that expand out into 100 recursive deps, plus a whole different set for development and testing, it’s nice to use the new tools that allow me to specify the things I really care about, while still remembering the extra things they brought along.
Ok i understand the pdb thing and i imported pdb as you told me to do. However this leads me to nothing... no debug window or shell, nothing happens it's still like before
I am curious, which visualization libraries do you use the most?
Haha yes, at least I am not the only one.
[https://wiki.tcl-lang.org/page/List+of+ttk+Themes](https://wiki.tcl-lang.org/page/List+of+ttk+Themes)
Thx!
[removed]
no problem mate.
PyCharm is my groove, most of the devs I work with use it (even the guys who grew up with VIM can use it with its built in VIM mode and gives them a lot more power). Has everything you need and plugins for everything you dont. and unlike Vim or sublime or Atom it's a full IDE out of the box with excellent debugging and databse support. Basically you don't have to troubleshoot your own dev env when stuff goes wrong. VSCode is good IF you need real time code sharing with others, otherwise I find it a bit lacking, but a good free option.
If pycon is getting in the way of writing a good response, then maybe the best course of action is to wait until after pycon.
The walled garden is simply that you can’t use conda without buying into its entire ecosystem, whether or not you use the commercial components of it. It’s a lot of vendor lock-in without a lot of obvious gain, especially if you’ve never been particularly invested in Windows, which is the only place it’s traditionally solved a problem not well addressed by other tools. As for legal barriers, IANAL, nor can I speak to _why_ lawyers have barred the use of conda (or any part of the ecosystem owned by Anaconda Inc) at companies I’ve worked for, I just know that historically they have on several occasions, and somewhat emphatically.
Because a beginner knows every function of a library like openCV or scipy... Why castrate yourself, when you can explore libraries and code like it is 2019 by not using vim.
Indentation error usually means that you are mixing space indentations with tab indentation. That is not accepted, you need to stick with one or the other. Try uninstalling everything and installing Anaconda instead of simple Python. It comes with a few advanced packages and its own package manager called conda.
Conda isn't really a vendor lock-in. They don't provide it that way, but you could just use the conda binary with your ordinary python install. There's also miniconda...
I've had difficulties when I do not have auto complete.
A few small things I've noticed that may improve the readability of your code. Many are a personal preference, so it is up to you to see if it improves the readability for yourself --- In your rotate points function - every time you have a for loop iterate over the vertices (lines 27, 48, etc.), you subtract centerVector[0] from v[0], centerVector[1] from v[1], etc. yet you already have a custom subtract function that does this on line 95 (I am assuming that both v and centerVector are of length 3). I suggest using the functions you created to make your code more readable, and it makes your life a lot easier, as I notice you can use this function in a few other places. All three of these for loops share many lines of code in common. This generally means that there is a way to condense them down into a single for loop. See if you spot any way you can do this. condensing these lines with your own sub/add functions might make it even easier to spot ways to turn this into a single for loop as well --- You should check out [tuple unpacking](https://www.geeksforgeeks.org/unpacking-a-tuple-in-python/). This can condense lines like xv = v[0] yv = v[1] zv = v[2] into xv, xy, zv = v It doesn't have to be a list on the right side though: centerx = 0 centery = 0 centery = 0 sumx = 0 sumy = 0 sumz = 0 Can be turned into centerx, centery, centerz = 0, 0, 0 sumx, sumy, sumz = 0, 0, 0 Just a warning that this doesn't always make code more readable, sometimes you do want variable declaration spread out. If it makes a single line become over 80 characters long, its generally a better idea to spread it out over many lines. --- The issue djava opened up on Github regarding line 197 also has another solution, you can also initialize a long list like [0] * 80. That is a personal preference of mine though, it is up to you to implement it how you choose
Okay, that means it's never reaching the break point. So put the `pdb.set_breakpoint` right under the import and when you start your program (the .py file) it should immediately open up the debugger. Step through and see what's causing it to not get to your original breakpoint. You can also instantiate objects and stuff directly through the shell!
They just did a talk on this at PyCon. It should be up shortly. It was titled "How To Think About Data Visualization."
For all it's faults, the PHP community got this one right, by rallying behind one solution that just works. It's disappointing that the Python community still struggles with it to this day.
It looks like a "2".
The subreddit r/learnpython is a great place to learn more about python development.
I know that the number of digits in the day is always going to be either one or two, but why not simplify this by changing it to (\\d+)?
Bqplot for interactive plotting. Matplotlib for quick visualizations
Tried quite a few but always coming back to matplotlib and seaborn. Will give altair a shot. Thanks for sharing.
Just saw Jake VDPs visualization talk at PyCon (the talk was awesome as was the conference!). He shared some Altair examples and I'm really excited to a) read this b) start playing around with Altair
Am not a data scientist and have never been able to make a single plot with matplotlib or seaborne. With Altair I was up and running in ten minutes. Love it!
I didn’t see that! But no, just wanted to make the pythons in Pythons logo a little more realistic for this. Makes me think about creating a second one and trying to let it look like a three, thanks for the inspiration!
Miniconda is just an installer for conda. None of us are talking about Anaconda, the distribution.
 &gt;The walled garden is simply that you can’t use conda without buying into its entire ecosystem, whether or not you use the commercial components of it. Ah okay, that makes sense. Wasn't aware of this term. &gt;As for legal barriers, IANAL, nor can I speak to _why_ lawyers have barred the use of conda (or any part of the ecosystem owned by Anaconda Inc) at companies I’ve worked for, I just know that historically they have on several occasions, and somewhat emphatically. Yeah this is still weird to me. Conda has a BSD license. Wonder if anyone else knows why.
I actually enjoyed how the top personalities could just walk around everyone just fine. I got to watch someone I consider my significant python superior walk into one of the locked glass doors by the vendor floor. I won't name him out of respect (because, we all get caught in silly moments) but it turns out these people really are human. I assume the top post is a little in jest. At least I hope.
Why are you using IrfanView for this and not just loading your image into Python itself and doing whatever changes you need there? Also, /r/learnpython.
If _all_ you have is conda then you’ve got essentially a useless binary. Add conda-build, conda-forge, the Anaconda cloud, their recipe format, etc, and you’ve got vendor lock-in. Switching to conda without using the Anaconda-entangled aspects isn’t free, it isn’t even low cost, and it’s certainly got few value-added propositions _without_ it’s package ecosystem, certainly none that exceed Poetry / Pipenv with PyPi and Devpi. I get why certain domains use it, especially when those domains are on Windows — it’s been _the_ lower-barrier of entry for scientific computing in Python and on Windows for years — but it’s very, very far from a magic bullet. And it’s not like the companies I’ve worked for haven’t done their homework. Now, if I were starting a VFX facility from scratch, totally green field, then I might consider using conda... but that doesn’t happen often, and the places I work at tend to have investments in Python going back to well before conda was a blip.
I couldn't find a link to the original anywhere, which always makes response posts a bit difficult. If anyone hasn't read njs' original post, it's [here](https://vorpus.org/blog/why-im-not-collaborating-with-kenneth-reitz/).
I'm really disappointed in the community here about all of this. There is one user in the comments here who seems to have a particular vendetta against KR who is acting in a particularly hostile manner. Kenneth has written a lot of excellent software and documentation over the years that has been extraordinarily important to the community, and I'm embarrassed to see all of you so eager to turn on him so quickly and harshly. It seems like the kind of drama that you'd around for children on Tumblr kickstarting a comic book project, not the sort of thing that we should see for a project of such magnitude. $30,000 isn't anything to scoff at, but it's only equivalent to a month or two of salary for an engineer like Kenneth, and it's absolutely wrong to say that he's a thief because he accepted donations for a free core project that he is the founder and primary contributor. (As an aside: Line count is an incredibly asinine metric for measuring contributions to a project, especially if you're a maintainer. This would be like saying that Linus doesn't contribute to Linux because he doesn't write drivers himself anymore. Writing code is very easy - choosing what code to write/accept is very hard.) Anyway, this whole thing made me really sad and I think some of you should get off of your high horses.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
 import subprocess # blocking (wait for irfanview to close before continuing in python) subprocess.call(["f:\IrfanViewPortable\IrfanViewPortable.exe", "image.gif]) # non-blocking (start irfanview and keep running the python program) subprocess.Popen(["f:\IrfanViewPortable\IrfanViewPortable.exe", "image.gif]) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using.
Get ready Mavericks. Python on the field.
This is beautiful! Thank you for sharing
&gt; Is he obliged to be "nice" Everybody's obliged to be nice.
Cool! I made something similar before: https://github.com/Miserlou/omnihash
&gt;import subprocess \# blocking (wait for irfanview to close before continuing in python) subprocess.call(\["f:\\IrfanViewPortable\\IrfanViewPortable.exe", "image.gif"\]) \# non-blocking subprocess.Popen(\["f:\\IrfanViewPortable\\IrfanViewPortable.exe", "image.gif"\]) &amp;#x200B; 1) The code you provided gives me this error : [subprocess.run](https://subprocess.run)(\[player\_path, mp3\_path\]) AttributeError: 'module' object has no attribute 'run' &amp;#x200B; 2) I used the CODE block provided with Reddit? Is this wrong? 3) Thank you, I will post on python learn ! I am using python 3.6, windows 7
My guess is it has to do with their contacts with Anaconda Inc when it was Continuum Analytics. The main advocates for Ana/Mini/Conda for the longest time were the company that created it, and they had people trying, _hard_, to up-sell companies into paying a lot of money for support on what always seemed to be primarily the hard work of a lot of FOSS people. Wheels took a lot of wind out of them for several years, and it’s only been in the last 2-4 I’ve been seeing their marketing bearing more fruit. They may be doing a better job, period, or they may just be doing a better job advocating ... don’t know ... but unless something’s changed in the last year (while I’ve been taking a break) they’re probably still considered verboten.
Making some things in Altair is quite difficult. For example, you can make boxplot only with manual setting of all ranges. I'm using [plotnine](https://github.com/has2k1/plotnine), this cool clone of ggplot2 with very similar syntax and almost all original features. Unfortunately, it has lack of documentation. I've contributed many examples, but they haven't been merged yet by some unknown reasons. Anyway, it's quite cool.
You literally said "never".
... That's not the code I provided. I suggested you use `call()`. The `run()` function is a good choice too but it's only available in python3.5+. Your code block is ok, that's just part of my canned addendum to send people to /r/learnpython since formatting is a common problem.
Error message ! AttributeError: module 'pdb' has no attribute 'set\_breakpoint' &amp;#x200B; Dunno why
For Python? PyCharm. I've used both, but I prefer PyCharm for python development. &amp;#x200B; But honestly, if I'd be you, I'd just try both.
&gt; I am using python 3.6, windows 7 That error says you are using a version of python that is 3.4 or less. Add this to see what version of python you are using: import sys print(sys.version)
Everybody is obliged not to be rude. You can be neutral
My fault, the correct command is `pdb.set_trace()`
A simple "no" isn't rude. It's neutral.
Thanks, that has convinced me to check it out and give it a chance.
I wish it would work with numpy arrays..
It isn't quite true that matplotlib can produce static plots only. [Here](https://gitlab.com/rj.budzynski/Python-misc/blob/master/browngas.py) is an example of an animated simulation powered by matplotlib. It's a fair bit more complicated than it needs to be, mostly because I chose to embed the matplotlib figure in a Qt5 widget, rather than using matplotlib's own automatically created window.
As an example in requests you can just supply an option to not verify the SSL certificate. In Urlllib you have to define a new SSL context. Or the extra json parsing you need to do with urllib vs requests. Requests makes it easier to just get on with it - classes to do the same things are half the size and way clearer to read with requests.
I'm using graph-tool and pandas for a SNA course at college, and also learning asyncio module on the side.
It’s like keras vs tensorflow. keras is much easier to use but tensorflow allows much deeper levels of control. I think it comes down to preferences
Cool! Please share the link when is out.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Vega-Lite just added a boxplot mark! But yeah, some specific visualizations are hard to do. But the trade-offs for me make Altair to come up ahead from others.
Girlfriend at the very least ;-)
I agree with all what you said. The part about donations in my first comment, was about the donation links he has in his repos not the money he requested for requests 3.0. Sorry if I misconveyed my message.
Good intro but I feel like the article ended too soon. The way you introduced things made it seem as though you would take things a step further once you had the data and determine the sentiment behind the tweets (i.e. whether it was positive or negative).
Because it's the only right thing to do. You either go from big to small or from small to big but not month/day/year FFS.
Same here. I even asked around here for guides. This is super well timed for me. Thank you.
Type annotation + mypy can help here. Though be aware that in Python 2 mode mypy is less strict with checks and adapts behavior that Python 2 has (i.e implicit casting between string and Unicode) so you might want to run the check again in Python 3 mode after you finish porting the code. I wish they didn't do that, or at least have an option to have strict distinction between these types.
Interesting that you’ve tried plotnine and still insist that python doesn’t have ggplot2... it’s basically a direct port!
I have a preference for repetition on the basics. When you're that green you have to think through a lot of abstraction and also the syntax before you can even crack problem solving and good design. Not just what to type but how your hands navigate it. For that I recommend challenge sites like checkio. Many years ago I used learn python the hard way. It helped me a lot to really engrain the motions in my hands. I'm a very physical person so that was a big boon. And try not to over exaggerate your own ability. From how you describe things you are very much a beginner, and that's fine. In various areas you'll always be a beginner. It's a huge field. You can go flip through beginner books at a store and see what writing style and presentation method feels good. You will probably need to learn to tolerate repeatedly studying things. Each time you'll understand it more. Even something simple like a for loop. Ask yourself why that works the way it does. For free you can look up top uses of python, look at the frameworks they use and go through a tutorial created by the developer (s). Flask has great support and can be more interesting than printing strings to the terminal. Caution though, frameworks are yet another area to learn, but learning new tech will be a lot of your future.
Why skip milliseconds though
I'm personally most comfortable in vim but PyCharm is a really, really nice piece of software which can really help you navigate a code base and automate all sorts of tasks and inspections. For writing ad hoc scripts, whatever editor you like will probably suffice. But for working on large projects I'd say PyCharm is the only game in town for a dedicated python ide
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Ok, the pdb works now. I went to the `def move (self)`, entered `dir()` and had this: -&gt; def move(self) : (Pdb) dir() ['__init__', '__module__', '__qualname__'] Cannot really understand if i'm right and this is useless, or if i'm doing this wrong...
My coworker has a paper copy on her desk and I leaf through it from time to time and always learn something new.
Sounds like you're using the python interpreter instead of an editor. Try to write your python code in an editor or IDE :)
With latest python (3.7.3), latest pip version and windows 10, I've had no problems installing and running scrapy 1.6.0. Install it as user: py -m pip install --user scrapy
I don't know if it's the lighting or the shake. But looking at this picture gives me a headache.
!remindme 3 hours
I will be messaging you on [**2019-05-06 00:00:10 UTC**](http://www.wolframalpha.com/input/?i=2019-05-06 00:00:10 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/bkv1y1/complete_guide_to_python_package_creation/eml4lww/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/bkv1y1/complete_guide_to_python_package_creation/eml4lww/]%0A%0ARemindMe! 3 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! eml4occ) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
the cause of this escalation feels less about this particular incident but more about the bigger picture. there has already been a discussion about the behavior of kenneth reitz last year and in general. and kenneth reitz way to deal with criticism, including constructive criticism is to ignore it and pretend that criticism for some reason does not apply to him and so gives the impression of being the most right person in all matters, which is a very annoying attitude that will consequently lead to harsher and harsher criticism in hope to trigger some wake up call. by voicing the concerns more and more loudly, it feels the community is just reacting in a hope to communicate to kenneth reitz and the community: hey, this is not okay behavior and we don't like it, please change. a reasonable person would just admit that he or she was wrong, apologize, and promise to behave differently or better in future. I think if kenneth reitz would at least do that, everyone would be okay with that, but instead he chooses to communicate that everything he does is great and okay and there is no form of regret for misbehavior, so no wonder that everyone is continuing to critisize. it's a downward spiral
That would work too. I tried to show him now to do optional matching.
It's the pingu looking bitch no doubt.
Personally I’ve hired a few people via CodeMentor ( no affiliation just appreciate the service ) for help with smaller projects and they also have a service that helps people find a longer term mentor / teacher. I would start there, then think about what kind of ideal teaching you’d like to do ( class at a local junior college maybe ?). Last I’d say if you have a specific set of expertise you’d like to teach, an ebook / online course could both provide extra income &amp; leads for consulting / teaching work.
Could You Please show the beginning of your code?
It appears that you don't know how to trace the problem back to its origin using the error message and how to take a different route from there. Perhaps you should seek support in r/learnpython instead. And maybe start with an easier project.
Not cool man. Not cool.
I am a big fan of pip-tools. I use that with pbr and tox for any packages I write.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I had to unfollow him on twitter because of how ridiculous his self promotion got. Around the time he started Responder (a python web framework, in the same vein as flask; no idea where it’s at now), he’d regularly retweet *dozens* of tweets declaring how amazing it is, with not really much additional substance. Like I get you want to self promote, but there’s a line where it just becomes obnoxious, unnecessary, and into the territory of masturbation. The main reason I unfollowed was because it absolutely *flooded* my feed. Rinse and repeat for pipenv, etc.
Nice! How much did it go for?
The shake. I couldn't find Guido at first. I thought he was in really bad drag.
Thanks for pointing that out! I will probably rewrite parts of the code so, it's great advice.
Yes I noticed that too. I have python 3.6 installed, but pycharm doesn't seem to be picking up on it.
Nice! you took a different approach... i have to dig into your code :) mine is very basic and i also wanted to leave out classes as much as possible, because i overused them in the last time in other projects ;)
It's probably hanging on an API call - add lots of prints and find out where it's getting stuck
OUR PROMETHEUS
Thanks for the idea. Do you think it could be possible that something in *my* computer makes it happen?
So this is the BDFL ....
Sorry about that.. got only a few seconds to pull my phone out and take photo!
I think it was $9000
No clue. Find out where it hangs and that will lead you to the cause.
360k seems a bit high for an engineer to me, particularly one who’s just writing docs most of the time, but regardless... The point is that this is not a one-off, our-of-the-blue scenario. The issues with Reitz are long-standing; a lot of tolerance was granted for a very long time, we are just reaching a point where more and more people feel forced to speak up because he is actively harming the community in pursuit of his narcissistic goals (pipenv was particularly egregious, but this 30k misappropriation takes the cake). &gt; free core project that he is the founder of and primary contributor to. It looks to me like you didn’t read the original NJS post in its entirety. Reitz has not been the primary contributor to Request for several years, Cory Benfield (lukasa) is. Reitz has been explicitly excluded from committing to Requests because he was breaking more than he was fixing. If you want an actual answer on the innards of requests, you go to Benfield, not to Reitz. The guy breaking his back on timely security fixes is Benfield, not Reitz. Reitz is the guy who gets to lucrate on other people’s work, nowadays. Besides, historical merits do not entitle one to misrepresent future actions and misappropriate funds. Personally, I’ve given up on assuming good faith after pipenv. He admitted social-engineering his way through PyPA people to push a half-baked npm-ripoff tool that, again, broke more than it fixed. When your self-promotion starts impacting my life with sneaky doc changes, no public debate and no PEP, that’s when I draw the line. His responses at the time were a clear case of pathologically disingenuous attitudes. He’s since hidden behind his neurological condition, which is a disservice to the community of people with mental-health issues who don’t take it as a permit to act like assholes.
The author of pipenv has influence over pypa and managed to get pipenv recommended even though it had many limitations. There was a scandal over this about a year ago here on Reddit. My guess is that what you're seeing is a remnant of that time.
I’ve got you fam... https://i.imgur.com/No1gdoQ.jpg
Network is unreliable. Try having various sorts of connection timeouts
Would be even cooler if the horse on the picture was replaced by a Snake/Python
Microseconds as a standard int has plenty of precision to store both mili and micro
I'm doing the exact same thing with the exact same book. I started goofing with a RPi this week. Picked up Crash Course on Saturday, loaded Geany, and am still working through Chapter 2 at the moment. I'm really enjoying myself so far and am excited to see where this new hobby leads me.
Advice is recommended towards my relative helping him out he had me ask this.
&gt; Reitz has been explicitly excluded from committing to Requests because he was breaking more than he was fixing. I just don't see how that's true. He's merging PRs and making direct commits all the time: https://github.com/kennethreitz/requests/commits/master https://github.com/kennethreitz/requests3/commits/master He's obviously still involved and working on the project. It seems **astoundingly inappropriate and unprofessional** to accuse him of _stealing tens of thousands of dollars_ - an extremely serious charge! - simply because people are, what, unhappy with how a man responds to negative criticism of projects he has obviously spent thousands of his hours on over many years on? Because he was rude on a closed ticket? I really think some people here should be ashamed of their behavior here. This is a really brutal personal and professional attack on a guy who has contributed much, much more than most people here ever will, just because he's quirky and outspoken or they don't like some technical decisions that have been made. I don't know Kenneth very well, we only met at a conference and chatted a few times online, but mostly I'm just disappointed with how viciously this community attacked him with _very serious, career-ruining allegations_ over "normal" maintainer squabble stuff.
thoughts on using Dash? I've used it in a few places at work trying to explain data to clients or excecs and it was very easy to use
The most confusing thing about python packaging is that you're writing a python code that describes the package. It also has major drawbacks, because you need to execute code to get information about package. All attributes that you defined can (and should be defined in setup.cfg), your `setup.py` would then look like this: #! /usr/bin/env python from setuptools import setup setup() And here is `setup.cfg`: [metadata] name=amortization version=0.1.0 description=Python library for calculating amortizations and generating amortization schedules long_description=file:README.md long_description_content_type=text/markdown author=Ronie Martinez author_email=ronmarti18@gmail.com url=https://github.com/roniemartinez/amortization license=MIT license_files=LICENSE classifiers= Development Status :: 4 - Beta License :: OSI Approved :: MIT License Topic :: Office/Business :: Financial Topic :: Scientific/Engineering :: Mathematics Topic :: Software Development :: Libraries :: Python Modules Programming Language :: Python :: 2 Programming Language :: Python :: 2.7 Programming Language :: Python :: 3 Programming Language :: Python :: 3.5 Programming Language :: Python :: 3.6 Programming Language :: Python :: 3.7 Programming Language :: Python :: Implementation :: CPython [options] py_modules=amortization install_requires= tabulate ~= 0.8.3 [options.entry_points] console_scripts= amortization=amortization:main [bdist_wheel] universal=1 I don't think many of these fields are actually needed, or I'm not sure if they change anything I mean `long_description_content_type` and `license_files`. Since you're using `git` you might also find `setuptools_scm` useful. It takes last tag from git and uses that as a version.
His release privileges have been taken away. Look at his commits: they simply merge other people’s code before they are good enough to get commit privileges, and mess with docstrings. He could likely be replaced by a very short shell script. Also, Reitz does not deny the accusation in the slightest. He admitted he took the money for himself and requests 3 is not here - in fact he apparently reset the donation page to hide how much he already received. And all the currently-public code that might end up in it, is written by others. The thing is, this is simply the last in a long series of incidents. That’s why people are so eager to jump on it - because it brings to the open what many already knew. It’s a Weinstein moment.
I read briefly about pipenv and I don’t understand what the hype around it is about? Is virtualenv, pip and requirements.txt not good enough?
There many more benefits. For example if you install through entry_points inside venv, you don't need to enter venv before executing. All you do is call the command and it will assume the venv for the execution time. As for testing you can install the package with `pip install -e .` (don't forget the dot at the end) and you'll have the command available to you.
&gt; He's obviously still involved and working on the project. It seems **astoundingly inappropriate and unprofessional** to accuse him of *stealing tens of thousands of dollars* at first it was a he said/she said thing. when I read NJS's post correctly, there was a multiple-year time span where a justification how the funds were spent and kenneth reitz could have been explained. that is ample time and fair in my opinion. then kenneth reitz responded in his post: &gt; the fundraising funds were allocated to myself, to reimburse myself for all the time and energy I'm putting into Requests III, which I want to make a really great product. so it's not just an empty accusation anymore. I think the outrage is not that he did the fund-raised to pay himself for working on that project but rather that other people were/are involved in that project and he didn't/doesn't share the money with those people. this seems unfair because the fundraiser was for supporting the team not just himself. &gt; Reitz has been explicitly excluded from committing to Requests because he was breaking more than he was fixing. &gt; I just don't see how that's true. He's merging PRs and making direct commits all the time NJS's article said PyPI, not github: &gt; you'll see he doesn't have PyPI rights to his own project, because he kept breaking stuff, so the real maintainers insisted on revoking his access
The dependency resolution in pip is not good, one big problem is if you have something pinned in your requirements.txt, and something else in there requests a different version, that other package wins, effectively the last definition wins. Pipenv solved this problem with a lock file, but poetry also solves it and with a better implementation imho and using the pyproject.toml file.
Python is doing Rome time reversed. First a dictator who was assassinated by an assignment expression, now a triumvirate that includes the dictator. Down the road we can expect a bickering PSF Senate, a C extension rebellion, and invasion by the Rubyists.
&gt; Unfortunately my guess is wrong. As Nick Coghlan, one of the CPython core developer, stated on Twitter, the size of the resulting list is known. Basically, the following is happening: &gt; new_array = arr.copy() &gt; arr.sort() Looking at the implementation, the pure-Python equivalent of `sorted` would be: def sorted(sequence, **kwargs): result = list(sequence) result.sort(**kwargs) return result ... which is pretty damn elegant IMHO.
No worries. This pic ended being like one of those pictures where the harder you try to focus on it, the more blurry it becomes.
Just an idea, if it’s really difficult to convert to a 1 line list comp, keep it separated so your code is readable
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Fact check: $9,001 So, officially over nine thousand
Anyone else find it strange that there are no pythons in the painting? Epic nonetheless
The GOAT python developer
**You** accused him of _literal stealing_! Because he started a fundraiser for a massively popular free software project that he started and serves as the primary maintainer for! It's such a serious thing to accuse somebody who provides you free software with, I'm shocked at how unprofessional you're being. Oh, and now your accusations of him stealing have boiled into [literal nazis](https://voat.co/v/programming/3198331) repeating your nonsense. This community is an embarrassment.
[Thought this was interesting regarding pipenv](https://frostming.com/2019/01-04/pipenv-poetry) “... All PEEPs(Pipenv's enhancement proposals) need BDFL's approval while Kenneth Reitz is bothered by mental healthy and takes the back seat for a long time.”
[https://github.com/ravenkls/Visualise](https://github.com/ravenkls/Visualise)
[removed]
Apparently it gets stuck right before it receives the new data from the stream, so you may be right, it's fiddling at the API.
Gotchu ``` for i in range(1000): playlist.add('track', '2xLMifQCjDGFmkHkpNLD9h') ``` Probably.
How did you go? I'm currently adding integration tests for all the major databases available on Travis CI which will hopefully increase confidence in the project
There is the python logo embossed on the breastplate. Anyway I think the language is more of a Monty python nod than a nod to the serpent.
I didn’t write the original post, what are you talking about? And now it’s my fault there are nazis on the internet? Are you alright?
Should I use two functions? The first list comp for the first function and the second list comp for the second function? How do I pass the first functions results to the second function?
I am not sure in world you live in where it shouldn't be pointed out when someone collects donations to support some cause but then later decides to just keep it to himself. &amp;#x200B; \&gt; It's such a serious thing to accuse somebody who provides you free software with &amp;#x200B; accusing someone of x does not have anything to do with the fact that the person provides free software, these are two different things. if you donate money to a kickstarter project and you later find out that this money was used for anything but the kickstart project, you probably would also disapprove of that. not sure why kenneth reitz should be immune to that sort of criticism. &amp;#x200B; \&gt; This community is an embarrassment. &amp;#x200B; it's heated for sure, but not unjustified. on the flipside, i don't get why it is so hard for kenneth reitz to simply share that money among the developers and/or clearly write a short paragraph on how exactly the money is spend to support the project.
https://www.reddit.com/r/Python/comments/bklroc/why_im_not_collaborating_with_kenneth_reitz/emjbk3m/?context=3 That's a link to you, accusing a man of stealing a large sum of money, because.. he didn't yet ship a feature on the project he founded and maintains? Or something like that? Elsewhere in the thread you'll find accusations of him being a psychopath, narcissist, code thief, con man, creep, and so on and so on - largely by people who really contribute nothing themselves and have no _clue_ what it's like to actually maintain a large project. Of _course_ lots of commits are merging PRs - that's literally a maintainer's job! Anybody who has actually don't maintenance work knows that, and how much more difficult it is to manage that than just writing code! It's just such an embarrassment to see this community turn on a dime against a dude who is generally hugely fucking positive, wrote the most popular python web library ever and one of the best python books ever. I'm done here but I'm really ashamed of the behavior of this community today.
“Ladies”
Accepting personal donations but then not shipping a promised feature and _stealing_ are TOTALLY DIFFERENT THINGS! It's shockingly inappropriate to conflate the two, as is happening all over the web now.
This community has not “turned on a dime”, and you insisting on this line is disingenuous. The issues with Reitz are well-known and long-standing. This is just light being shone on it by other well-respected developers and maintainers. And you can object to words but facts are still the same: he asked money to deliver a piece of code, took $28k in donations *explicitly towards that goal*, and the piece is nowhere to be seen - piece that will likely be written by someone else anyway, people who did not see any of that money. When called on it, his reaction has been to wipe as much proof as he could that he had got that money. Which again, fits his behaviour in previous circumstances - his first reaction is always to wipe inconvenient facts. If you think “the community” is embarrassing, I think it’s much more embarrassing to be uncritically defending a guy with such cavalier attitudes to truth.
I tried an earlier version of version of plotnine, maybe at that point it wasn't as good as it is now. Maybe I will give it another chance!
Would something like this work for you? [https://stackoverflow.com/a/44925697/1745687](https://stackoverflow.com/a/44925697/1745687) &amp;#x200B; The pattern is: &amp;#x200B; `data = np.array([[11, 12, 13], [21, 22, 23], [31, 32, 33]])` `columns = ['Col1', 'Col2', 'Col3']` `df = pd.DataFrame(data, columns=columns)`
You need to take a deep breath and walk away from the keyboard a bit.
Get out.
Yeah, but you accused him of _stealing_! In public! Because he hasn't _yet_ shipped a feature! I think that's so wrong to do. I think 99% of the people in these threads have no experience maintaining a large F/OSS project and no understanding whatsoever of what developing a project of this magnitude takes in terms of planning, time and effort, and are just using this as excuse to get angry about something because it's fun to be part of an angry internet mob. Did _you_ lose any money on this? Did anybody here? So why are you mad enough to accuse him of stealing tens of thousands of dollars?
&gt;Using gitlab CI you can more easily replicate the CI environment locally using docker than is the case with travis Don't see how this is an argument as you can run Docker on Travis-CI. https://docs.travis-ci.com/user/docker/
I saw their booth at PyGotham last year and asked the friends I was with "What's... Uh.. Pilates?". Everyone at the booth started laughing.. I wasn't making a joke. Lol
It's a goat and there's a rabbit on his shoulder. Python is named after the Monty Python movies, not the snek. Idk about the goat, but the rabbit is probably a reference to Holy Grail
\&gt; Accepting personal donations but then not shipping a promised feature but this was NOT labeled as a personal donation/reward to himself but a donation towards the request development and the request developer team.
What the hell? Why does he have to lose money personally to be indignant about someone who's been ripping people off surreptitiously for years? You're literally baking zero sense
Okay, maybe I'm missing that then. Can somebody show me where that solicitation for money to a team that was never paid happened?
&gt;no understanding whatsoever of what developing a project of this magnitude takes in terms of planning, time and effort but if you have an understanding of this, why would you keep all that money to yourself and not share it with the people who work with you on that project? &gt; Did *you* lose any money on this? Did anybody here? nope, but still not an excuse for this behavior. If someone walks in to a supermarket and steals something and I am only a bystander in that supermarket, I would still be disappointed by the behavior of that person even though I have no personal loss. what's worse though is that he kind of establishes a precedent in the python community that a) might shine a bad light on it, and b) next time you see a genuine project asking for money for help, you will be less likely to trust that your money will be actually used for that project if you donate, which will make it harder for honest people to get community support.
Well-written article! That's a slick-looking blog, too. [The recent plotly express is also worth a look](https://www.plotly.express/)
Writing an EPUB metadata extractor to create a Flask-based EPUB library.
I'm exhausted by this now, but again, I don't think it's fair or accurate at all to accuse him of "ripping people off surreptitiously for years" because he asked for donations for a free software project, and I think everybody here - who have no actual clue what they're talking about - are just piling on because it's fun to be part of an internet mob. If there are places where he promised to pay other people and didn't, maybe that's a different story, but I haven't actually seen any evidence of that.
Of course there is. Run the program in debug mode with a breakpoint where you want to explorer the variables in scope. This is one of its most powerful functionality.
You're welcome! I checked your repo, all of them are on C/C++ except the linux folder. Maybe you could make a single makefile which can detect the platform and chooses which folder to build for you.
Thanks! I haven't tried it yet. Will check soon.
No laughing permitted: Finished six Level 1100 problems on Codeforces this week. 500A New Year Transportation 379A New Year Candles 82A Double Cola 584A Olesya and Rodion 577A Multiplication Table 556A Case of the Zeros and Ones Almost ready to move up to Level 1200. Developed a good contest template that includes logging errors. The template isn't needed to do the problems but I think it looks 'professional', whatever that is. All my solutions look uniform now. Baby steps to becoming a decent programmer.
[https://web.archive.org/web/20180308170217/https://www.kennethreitz.org/requests3/](https://web.archive.org/web/20180308170217/https://www.kennethreitz.org/requests3/) : &gt; Every dollar beyond the fundraising goal of $5,000 will go directly towards other community contributors that help facilitate the development of Requests 3.0. Talk Python To Me Podcast
Great read thank you.
Probably more like embezldment, since he had legal access to the funds. Not much better though imo.
Thank you. Wouldn't something like pip freeze help? Say you have numpy and requests in requirements.txt and then during installation it also installs package A that numpy and requests both depend on. Then run pip freeze to get all the packages installed and possibly forced package A to a specific version?
Cool project, I have one noob question: why download the song instead of streaming?
Compliments of capital one
Hm. Well, that doesn't look very good, does it. I had only been to the non-archived page, which doesn't look like that, and looks like it's just for personal donations. I didn't realize that's what the page looked like before. Well, that makes me sad. I've always admired Kenneth a lot. I'm still uncomfortable with the community's harsh response, even if it does appear like he reneged on some promises.
&gt; and should be defined in setup.cfg Yes, but not all. There are definitions that can only be done dynamically and cannot be moved to setup.cfg, e.g. checking for Python version and installing version-specific libraries. The new syntax that includes version in install_requires sometimes break. In my experience with Linux, not all platforms have the latest installation of setuptools and enterprises don't allow updates that easily. &gt; I don't think many of these fields are actually needed, or I'm not sure if they change anything I mean `long_description_content_type` - I have had issues before with this before as the current warehouse (PyPI) cannot render markdown when not told to. I kept on encountering incorrectly rendered PyPI READMEs, most of them are popular ones to. I believe there's no pan in adding it. - Explicit is better than implicit &gt; Since you're using git you might also find setuptools_scm useful. It takes last tag from git and uses that as a version. Thanks! I'll look into it.
Also in the same boat! If anyone is interested edx offers great courses and degrees!
&gt; If there are places where he promised to pay other people and didn't, maybe that's a different story, but I haven't actually seen any evidence of that. https://web.archive.org/web/20180308170217/https://www.kennethreitz.org/requests3/ &gt; Every dollar beyond the fundraising goal of $5,000 **will go directly towards other community contributors** that help facilitate the development of Requests 3.0.
&gt; it’s possible that later installations may end up with bar=2.4 instead of 2.3 How is that possible if you do `pip freeze &gt; requirements.txt` and force `foo=1.2`?
I still think it's not too late for kenneth to just apologize for the mistake and e.g., distribute the money fairly among the contributors. &gt; I'm still uncomfortable with the community's harsh response I think that's kindled by the fact that he refuses to admit wrongdoing and refuses to apologize. is it harsh? yes. but he is literally provoking that by his behavior and attitude of behaving when issues like that get pointed out. he comes across as very, very arrogant and narcissistic at the least.
I need the entire song downloaded for pydub to work properly
Thanks for trying to help stem the tide of potential negativity. This is a helpful answer. I don't think most end-users care at all about the drama in the community. They just want something that fits in their heads and works. They want things like... * having all their project's metadata in one file `pyproject.toml` as opposed to scattered across multiple files i.e `setup.py, setup.cfg, Pipfile, etc...` * not having to worry as much about the distinction between an application and a library/package because their tooling helps them help themselves (`pipenv install -e .` is not a real answer IMO) * having a reasonably performant and accurate dependency resolver Again, no one care about the drama. I think most users just see that `pipenv` is under the `pypa` org and the only "packaging" tool that currently has a tutorial on the `pypa` site. The Python ecosystem would probably be better off if we could just focus on `pyproject.toml`, one lockfile standard, and one dependency resolution algorithm, but I don't see that happening in the near future. I really hate to say this because these efforts are largely all volunteer-based, but I think `pipenv` and its advocacy from the `pypa` are ultimately holding back progress in the Python packaging space 😕 At the very least, `Pipfile` needs to die. I hate having one more project configuration standard to have to worry about
&gt;Python is named after the Monty Python movies We have to retcon that.
Is Larry Wall lurking in the shadows?
Just to throw yet another hat in the ring: Plotly Express is to Plotly what Seaborn is to Matplotlib... check it out! [https://medium.com/@plotlygraphs/introducing-plotly-express-808df010143d](https://medium.com/@plotlygraphs/introducing-plotly-express-808df010143d)
Alright that's actually a good explanation. Well done
Won't lie. Was expecting another "Why I won't work with XYZ" drama post.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
&gt; I know we don't have anything like a "community ombudsman" or "council of elders" or protocol for adjudicating inter-personal things like this in the community (that are not e.g. CoC violations)... but it seems like some kind of intervention in a smaller group, with people that both parties trusted and respected, would have been a far more constructive format for dialog. I see what you're saying (and definitely agree that as a way of resolving personal conflicts, small group interactions are way more productive than the Internet mob), but I think this case is different. The blog post is basically alleging that Reitz is not only dishonest when fundraising, but that this is part of a general trend of gaslighting and generally toxic behavior when interacting with others. This is apparently widely known by other developers and "people in the know", but hidden away from newcomers and people outside of the inner circle. That's almost a textbook case of the "missing stairs" that NJS's blog post cites, where insiders know how to route around the toxicity, but newcomers are left vulnerable. Trying to keep those things within the "small circle" just perpetuates that trend (that is, of course, assuming that the small circle actually deals with the toxicity and doesn't just cover it up, which is super common when a high-profile/well-respected member does something wrong). As a personal example, I've had a pretty negative personal experience interacting with Reitz some time ago (to the point that I've decided to not bother reporting bugs in Pipenv so I don't have to deal with him). Although I wouldn't say my experience was abusive (it really wasn't important enough for that), I was still quite relieved to learn that apparently many other people have experienced the same dismissive/snarky/condescending attitude because that meant *it wasn't just me* and that I *wasn't just imagining things*.
Thanks! [Wallpaper goodness](https://i.imgur.com/DI0ZLED.jpg)
Thanks! That downloaded it! It stuck it deep in a users/admin/appdata.... directory and wants me to add the directory to the PATH. Is there any reason I shouldn't move it to my current Python37 directory Scripts?
The problem with all visualisation libraries is how they're taught. The first thing should be teaching the process of building a chart, as it pertains to the library in question. Don't even show any code until much further down the lesson path. For instance, for matplotlib you might start by explaining that "we build the canvas first, breaking it into segments if we want multiple charts at once, then we create axes and finally we draw the images". Or something like that. I mean, who fricking knows with mpl! Altair gets the closest to this style, from the way it's laid out and from the presentations Jake Van Der Plas has done; it teaches the code alongside the design process. But the code still messes with the story, coming in too quickly.
Wow, i dont know much about python or Rome but this sounds like an intense lore.
Possibly because instead of printing it out you're saving it into a txt file. I mean, I'm not very good with pygame but that seems like a problem.
That's not feasible. The longer without a response, the more people would see the unchallenged accusation and the more likely people would be to feel that there's been no refutation of the accusations because there **IS** no refuting the accusations. Best course is to get something out there, and follow up with the detailed "knock-out blow" when it's prepared. If there is one that is.
You should post this on r/gatech as well! It's interesting to see what times the sub is most active. Maybe next semester you can try collecting the data over multiple days and averaging it. Great job though, impressive first project!
The only opportunity cost to trying most IDEs is time, so there’s no reason not to try them for yourself.
&gt; Yes, but not all. There are definitions that can only be done dynamically and cannot be moved to setup.cfg, e.g. checking for Python version and installing version-specific libraries. You simply do: install_requires= typing; python_version &lt; "3.5" enum34; python_version &lt; "3.4" pywin32 &gt;= 1.0; platform_system == "Windows"' &gt; The new syntax that includes version in install_requires sometimes break. In my experience with Linux, not all platforms have the latest installation of setuptools and enterprises don't allow updates that easily. You simply do `pip install -U setuptools pip` right after creating venv and it always works. Or at least I never had an issue with it on Linux and Mac. &gt; long_description_content_type - I have had issues with this before as the current warehouse (PyPI) cannot render markdown when not told to. I kept on encountering incorrectly rendered PyPI READMEs, most of them are popular ones to. I believe there's no pain in adding it. - Explicit is better than implicit Ah, I didn't know that. &gt; Thanks! I'll look into it. To make it work, you add it through `setup_requires` and unfortunately you have to add `use_scm_version=True` in setup.py, because `setuptools` maintainers are still not convinced about allowing plugins using variables from `setup.cfg` during installation. This also only works on annotated tags (-a) that show up when `git describe` is called.
The goat is likely a reference to the testing goat. OBEY THE TESTING GOAT
This... isn't the detached, scientific, mighty smack-down you probably think you wrote. There will be some that will be persuaded by the abusive rhetoric and allusions to impropriety. But it is not convincing to someone coming to the topic without the same historical baggage. For instance, him calling the release of the accusation "expertly timed to screw up his PyCon" is entirely plausible. The accusations as made, if you grant they are true, would surely **warrant** screwing up his PyCon. Why wouldn't the accuser do that? You calling him a paranoiac for stating something reasonable weakens any effort you're trying to make to bolster the case against him. Then you follow it up with "so outing you and your bullshit is threatening to you?". An absurd question, rhetorical or not, when it is patently obvious that it **IS** a threat. It is a threat when the facts of the accusation are 100% true, and only escalates in severity with the degree to which they aren't. In the same paragraph you lower(?) yourself to childishly calling him an "asshole". Strikes one, two and three. As an exercise in *emotional stabilization*, by all means continue to work out your issues in this public forum. As an exercise in persuasion, your effort needs, to put it politely, a little work.
Jesus christ never have I seen a Kenneth supporter cut down an argument by simply claiming "it isn't good, you have emotional baggage". Get off his dick for once and see his egomania.
&gt;You simply do &gt; &gt;pip install -U setuptools pip &gt; &gt; right after creating venv and it always works. Or at least I never had an issue with it on Linux and Mac. Not with enterprise platforms where businesses don't allow developers to modify the packages. And most of the time, administrators are really not familiar with Python and they just don't wanna upgrade things or rather "they don't wanna break things". Most production Linux servers are really, really old. We cannot simply push the new syntax used by install\_requires.
But can it fetch butter?
That was the point of my comment that pip freeze does not help, let's say that you have pkga==1.0.4 pkgb==2.3.0 But then in pkgb, it specifies pkga&gt;=2, instead of throwing a warning, pkgb wins since it's resolution is done after your requirements.txt, and you end up with pkga&gt;=2 and no error or warning.
Personally I prefer to see code as soon as possible. I agree that is not a good idea to throw a lot of code to a beginner and say "this is how we build a complex visualization". But I do think that teaching theory and concepts **along** with code can be effective.
Maybe you didn't read the edit at the end, anticipating this very response. It was posted only a minute or so after the original.
For things that don't really have a philosophy, I agree. But visualisation libraries usually do. If that philosophy is taught first, the code becomes much more intuitive.
We were told that there are a bunch of Easter eggs in the painting. So I'm sure they sneaked in a python or two..
The issue has to do with `weights.sum()` being zero. It seems to me like this is happening because of the `np.clip`, and that all the values are being clipped at either -1 or 1, causing the kernel to be uniformly zero. If you haven't figured this out, I'd attach the code as text for others to play with
[Also in video](https://youtu.be/Pzkdci2HDpU).
Always.
There's the possibility that some packages might rely on external dependencies, so a simple copypaste isn't always advisable. Practice is to run pip freeze and optionally use a virtualenv
You're not the only two.
I can't believe it. **"**, one ".
Remove space after print, add empty line at the end.
I am confused as to whether this is a joke or you are serious. Please don't take it offensively if the latter is true.
Ahh I see. Thanks!
Thank You
It's too small.
I wrote my response before you wrote your edit, and fundamentally because of how reddif woeks you had to have posted the edit at least 3 minutes after the original in order to get the edit timestamp. Now personally your previous responses to this issue seem to lie in favoring Kenneth rather than being against him. Nonetheless, this wasn't meant to be a "mighty, scientific smackdown", only a simple response showing Kenneth's paranoia and multiple lies he made in his response.
You’re the one sitting on his dick bro. You keep talking about him, you’re oddly infatuated with him for whatever reasons obvious by how invested you are in his life, and all those links you posted seem to be links to your own posts about him which comes off as masterbatory as well. Look theres a way to put out criticism without looking like a petulant child.
i needed the feedback for my programming assessment so i made it wrong on purpose thank you.
So you work at Oracle? Because you were able to earn karma with some shitty pic. /s
Python community: complains there are too many packaging tools, somebody just pick one! Also Python community: complains when someone puts up a packaging tutorial that just picks one instead of covering all the tools.
So, there *is* an "official solution". There are standard libraries and tools which provide each component of the packaging/distribution/install chain, including dependency specification and resolution, and reproducible and isolated environments. The thing people don't like is that each step in that chain has its own relatively low-level library or tool. What they want is one all-singing, all-dancing thing built on top of them, which is why you see a bunch of competing higher-level things built on top (and in some cases swapping out lower-level bits to suit the author's taste). It's unlikely that anyone could ever really stop that -- all it takes is one alternative high-level tool with a modest but vocal user base, and suddenly the perception is "the Python community doesn't have a standard tool for this".
pyproject.toml is standardized, but only for extremely narrow and specific use cases. For anything other than those use cases, it still is as much convention at setup.py is. (it also was originally created for reasons that have nothing to do with inventing Yet Another Place To Write General Packaging Configuation™)
Thanks for sharing! I gave it a quick shot over the course of today on my usual sub as a test, and starting today I'm planning on running it over the course of the next several weeks leading up to a relevant event - looking forward to seeing how our sub's activity changes approaching it. Here's today's chart from your script: [https://imgur.com/SdBIrdN](https://imgur.com/SdBIrdN)
That was in the context of using only setup.py for a production install and not requirements.txt.
Why would you to move them? But I think you have two possible options. 1. If you cant access the packages You could add the /dist/ directory to your pythonpath user/systemvariable 2. If you want to have them in a specific directory uninatall them first and install them later with pip install *libname* --target=*targetpath*
I had no idea. I guess I take that one back. With gitlab it's the default and I never thought to look at how to do it with travis.
On line 32, you called, `com.remove_command("help")` Then on line 45, the decorator is `@help.command()` I could be wrong since your code is incomplete.
Yes, I started this before those changes to github. Even so, there are other reasons to self-host. Maybe your org doesn't want to entrust any other org with their repositories for example.
https://media.giphy.com/media/QWaSVX9FizaxO/giphy.gif
I was really expecting a scene from the Cantina
Now maybe we can find all the Easter eggs hidden in it!
It isn't advertising. I keep sharing a lot of things that I have managed to compile, figure out, or put together. And most of ten it's things that I couldn't find on the internet. Not everyone's intention is advertising!
They are the distributions themselves, not the samples. But thanks for this. It seems interesting
The standardized part is “how to create a wheel for my package”, and if I'm not mistaken, I've of the peps also says that `[tool.&lt;name&gt;]` is the canonical location for a tool’s configuration.
For some reason I don't like how many features PyCharm has, for some others it's probably perfect that way I'm currently sticking with Visual Studio Code instead which just gives me the barebones I need
I'm in the same boat. If it is the latter, r/learnpython is the sub you're looking for.
`help` is a command, not a command group. use `@bot.group()` you also have no reason to do `com = bot`, i think; just use `bot.remove_command("help")` I would recommend using the `HelpFormatter` class though, instead of overriding the `help` command
Have a look at the IMDB. Last I checked a couple years ago, it’s still free to download.
yea he's saving into a txt file, and reading that file at the top of the `while` into a variable named `h`, but he's never updating `HighestScore`
The only reason why my response looks remotely as if it _favours_ KR is that it was in any way critical of yours. "You're either with us, or with _him_!" is not a winning strategy.
&gt;Look theres a way to put out criticism without looking like a petulant child. For some there is.
Majestic af
is there any way you could show us what you're doing? it sounds like you're doing something like this: python &gt;&gt;&gt; import pip &gt;&gt;&gt; pip install package if this is the case, you're not doing it correctly; this is the correct way to install using pip: pip install package you dont start up Python and then import pip
A `requirements.txt` would be nice to know which pip packages are needed
Great article. Original libraries approches to common problems are really interesting, thanks.
And here I am using pygame
Probably because pipenv devs reached out to pypa and/or some of its members liked it, and made the efforts to integrate and document. So mostly through the fact that actual effort was made writing and doing stuff. Not through pages and pages of political discussions and debate,like teens to happen here.
The complaints came because the process was completely opaque. There was no PEP, it was treated on the level of a password change on a PyPA server. And back then, it wasn’t “a tutorial”, it was explicitly stating that pipenv was THE tool to use.
Pip intends to use pyproject.toml itself, so i have no idea where you get the idea that it's a rogue push by flit.
usese PRAW instead of selenium etc
Id call pypa 2nd party, and yes it is associated with PSF.
You can use \`requests\` or \`BeautifulSoup\` to perform a query and parse the results.
Composer had the benefit of seeing existing situations like python's and designing better from the start. Its hard to migrate away from existing behaviour without breaking lots and lots of stuff.
As 2.7 is getting deprecated, surely that’s a good reason to move on and upgrade to 3, right?
I never said it was a rogue push. Both 517 and 518 form provisional standards that were inspired by work done in, and address needs _as seen from the point of view of_, flit and other _build_ tools. They’re there for build isolation, and that’s an area that needs to be addressed, and those with concern proposed a means to address it. They’re _not_ intended to provide runtime isolation, so they do not address the needs that Pipfile and Pipfile.lock are intended to. Both of those are _also_ part of the plan for pip, and the very existence of the entirely non-standardized **poetry.lock** hybrid demonstrates that there’s a gulf between the two concerns, a gulf that at this point isn’t addressed well by any one tool, and _maybe_ cannot be. There obviously needs to be an evolution of `setup.py`, and `pyproject.toml` is the proposed and provisionally accepted (but not finalized) standard for that. I’m fine with small projects moving over as they wish, but a blanket “everyone should transition” is simply premature before finalization, especially when people are transitioning with an expectation of runtime isolation that it doesn’t — and wasn’t intended to — provide. Similarly I’m leery of anyone saying “just transition to Pipfile / Pipfile.lock”, they’re all works in progress... stable enough for small-ish greenfield projects, perhaps, but not obviously _the_ standard the entire community _must_ lean in to.
More powerful vs easier to use I suspect most people start out wrestling with the standard lib before going on to SO and having requests recommended, that's certainly my experience
OMG, their faces! There's a slight motion blur or something that has turned them into monsters!
Not all tutorials are packaged in stdlib though. For a reason.
What is requests 3 improving anyway? Requests must pretty good as it is.
maybe post this in /r/learnpython
Pip / setuptools maintainers have been *interested* in moving away from execute-arbitrary-code setup.py for ages, but both because they have to maintain and improve status quo, and not break backwards compat, and any public facing effort they show will immediately be shouted about and judged, there has been a lot of cautious experimentation for a long time by individuals struggling to steadily maintain and improve the official tools, let alone radically evolve them. We had looked at whether setup.cfg could be used for a while after `pbr` had tried it, but that file has its own legacy baggage as well.
&gt; most of the time, administrators are really not familiar with Python and they just don't wanna upgrade things This is why we have venv, pyenv, and so on.
Here is a picture of this picture being taken [BDFL](https://i.imgur.com/okEdGXI.jpg)
Get on github and upload your stuff I think
thanks ill look into it
I’d suggest you also learn frontend first so that you can get some understanding of how it works.. don’t dwell on it so much tho... with frameworks such as bootstrap and foundation you’ll be good to go. Afterwards you can dive into django and you can concentrate more on it...
[removed]
thanks for advice. should i learn nodejs or javascript gonna be enough?
I need to stop subscribing to this subreddit. Let's talk about Python and not act like some (albeit good) developer is some kind of god/superstar.
No, but going on random tidbits on paranoia being *not* paranoia and saying multiple points of an argument are essentially wrong "because they are", while also being extremely vague on all your previous comments on the issue, don't look goos.
You know what the saddest thing is? That he wiped the page *precisely* so that unsuspecting people would end up thinking what you did. He’s done it in the past, he’ll likely do it again.
That’s a shitty way to talk about these women, dude. No place for this on r/Python.
list comp can just be broken apart to the different generators to make it easier to work with. Trying to put everything into a single line just doesn't add any value, but you can still get to use the power of generators if that is what you are after. ``` sub_lists = (xs for xs in name_list) def get_value(x): return new if x == old else x final = [ get_value(x) for x in sub_list ] ``` The issue with this approach is that you are flattening your list, I don't know if that is what you wanted to do or not. If you don't want to flatten it you can change it to something like ``` def handle_sub_list(lst): def get_value(x): return new if x == old else x return [get_value(x) for x in sub_list] final = [handle_sub_list(xs) for xs in name_list] ````
I'm developing a chatbot too. Using rasa nlu right now for intent classification. Rasa nlu is pretty easy to set up. Was basically some copy pasta plus some really small changes.
In this case, you could do: [new if x == old else x for xs in name_list for x in xs] In the future, you should post questions like this in /r/learnpython.
This picture is hilarious and awesome and I hope it makes Guido realize how much we all love him.
I saw the opportunity so I went for it.
What course did you followed on Udemy that contained such projects if I may ask?
This person was talking about an effect of the picture's quality. What was the shitty thing that was said about the women?
It's not paranoia if they really are out to get you. Seeing as the accusations are definitely trying to "get him" then it can't be paranoia. You taking issue with his fair and reasonable statements completely destroys your credibility when it comes to all his other statements. They could very well be just as bad as you insist they are, but you've shown yourself incapable of making a trustworthy assessment. What you see as "vague" is actually just unbiased. Remember two comments ago when you thought those exact same comments were a defense of Kenneth? Nothing in those words changed. It's all in your head.
Also, you may want to learn object oriented programming (OOP) if you already learned the basics of Python. That will let you create more organized and reusable programs and you will also be able to read programs and libraries created by others. Good programs are made in OOP.
Which is exactly why I’m taking a cautious but hopeful approach to standards that are only provisionally accepted. I’d be less cautious if there were a TOML parser in the stdlib... seems like jumping the gun to me to propose and market a standard for handling external dependencies based on a file format the language can’t even parse without employing those external dependencies.
Well you might be suprised at how much external code that pip has absorbed already.. :D D: A parser for a *smaller* format (exactly what TOML is) isn't much worse at this stage &gt;_&gt; Unfortunately both `ini` and `json` have a lot of downsides, and python never got a `yaml` parser (of which the external libraries are yuge as well, comparatively). https://github.com/pypa/pip/tree/master/src/pip/_vendor
I'm talking about a photographic artifact. Take your hair trigger elsewhere.
So you're saying Kenneths claim of njs's post and others are "out to get him"? What kind of weird hunt-based universe do you live in. These statmenrs aren't fair and reasonable as much as you might think they are with a tinfoil hat. There's far more to unbiased than being vague. An unbiased statement would be that you want more information to come out, not making jokes about drama like you think it's pointless. Some would say that's the opposite of an unbiased statement because it favors the idea the drama is silly. "Two comments ago", which I'm assuming you're referring to the donation buttons, we both were confused about what the guy was even saying. Once he *clarified*, then all was well. I don't see why you make everything into a "ha, his entire argument is invalid" issue.
Lurking. Smiling. You know.. with that smile that makes him look like an 80s porn star
A course by Ardit Sulce
The arguments for and correctness of the choice of using TOML doesn’t matter to me, nor does its use in tools that are external to the language itself... I’m just saying that the cart is before the horse when you’re using the PEP process to promulgate a language-level standard (as opposed to a PYPA-level specification) that’s expressed in a file format that the language can’t yet read. I’m fine with the choice of TOML, though it also has its downsides.
love your face-blurring algorithm for ladies. care to share? and i assume it's in Python, right?
I love you both
!
Lots of photos look like they were taken by someone with full blown parkinson's disorder
You'll probably need some SQL experience if your objective is backend developer.
Gonna make a program that automatically lists the source of a wikipedia page in format
Glad you like it! The next release of Plotly Express, later today or tomorrow, will have \`px.area()\` for just this purpose :)
I am trying to move my ass and finish Python course so I can do something useful. I is hard for me to get through "basics" as I have a little bit of programming knowledge and this topics are boring. I hope I will be able to write about something interesting soon. Keep your thumbs for me please.
Sign up for a key from OMDB api. It has all the data you need (I think) in a nice json response. Building an app scraping google is tricky as they don't want you to scrape them - it will break as they have lots of random classes on different pages, A/B testing, obfuscation/captchas if they suspect you're a bot, etc.
perfect, thanks!
Referring to them by their ethnicity and hair color instead of something else.
Burnout is definitely a thing that happens in the industry, but it does become easier to manage if you're aware of it and if your team/project/etc is good. That's true for any job though - burnout will always happen in some way as long as there are deadlines to meet and corners to cut.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Not exactly. My minor was in computer science, and the math program at my university involved using Python a ton. Additionally, my internship was at a big tech company, and I had done plenty on my own with building web and mobile applications, servers, and other random side projects. That being said, I wouldn't say my programming experience was that much better than many others here on this sub who has been doing this for a little while.
It doesn't matter what your job is, you'll have days (weeks, months, maybe years) where you don't enjoy it and are only doing it because you have to. You can make it more tolerable over many years by making changes like working in a new company, new position with similar but different work, or by taking vacations or whatever but the short answer to your question is: yes. The medium answer is: even firefighters get bored of being in fires eventually.
Python is great for data analysis. Learning more about what you can do with Python will help you be a better data analyst and help you learn more about OSes, services, and network security. &amp;#x200B; The page first opened by Jupyter notebook ('/tree') should show you the current directory you are working in. If you are still unsure, you can create a new notebook and run this bit of python code to see what directory you are in: &amp;#x200B; import os os.getcwd() &amp;#x200B; That localhost port and path should be accessible to anyone who is also on the server - they just need to navigate to the same path on the filesystem. If you disconnect your RDP session instead of logging out, the Jupyter notebook should continue to run and allow others access. &amp;#x200B; One thing I've often encountered in a new Python environment is that I never have all the Python libraries installed by default. Regardless wether you use pip, conda, or some other method, you can install packages in offline mode, you just have to manage dependencies on your own. Windows RDP lets you map a local path into the remote server so you can easily copy files into or out of the RDP host. &amp;#x200B; As to Internet being blocked: Do you have access to the Internet on the machine you are working from? If so, you can 'bring' that Internet connection into the remote desktop host with you via SSH. Here's a brief guide I wrote for some other coworkers - no administrative rights required - [https://gist.github.com/magic-lantern/6720ba10e45f1af038d77871f21d466a](https://gist.github.com/magic-lantern/6720ba10e45f1af038d77871f21d466a) Once that is setup you can use the SSH proxy to download python packages via Pip/Conda etc. You could also use the SSH proxy to push files to a Git repository (github/gitlab/bitbucket/etc) where others could view it.
Ok, those are indentifying characteristics, not knowing their names. You know who the Indian is and you know who the redhead is, do you not? Now, I don't find this to be derogatory. Not in the slightest. Maybe I'm wrong. Maybe I should. Would you care to enlighten me as to why I should?
If you love what you do it never feels like work.
I'm all for helping people, but this is really basic stuff, and it's homework. Google has your answers.
The post was intended to be detrimental to KR. It's intent was to "get him". (Second time I put that in quotation marks, btw. You should learn what that means.) The post could be 100% correct, and it'd still be fair to say it was designed to "get him". The only question is whether it is FAIR to "get him". And I haven't once addressed that question. Drama IS silly. Unbiased doesn't mean one has no opinions about anything. Only that you are fair-minded and treat both sides with the same consideration and skepticism. By "two comments ago" I was (obviously) referring to how you dismissed my words as merely those of a fan boy and then, when your characterization with proven to be comically wrong, you downgraded those same words to being "vague". KR should hope all his antagonists are as incompetent and counter-persuasive as you. All he'd have to do is point to your words and say, "you're gonna believe THAT guy? Come on! Surely you're better than that?".
This isn't specific to programming, but eventually we all have to balance things that we are passionate about and things that support us, even in a world of software in which there is usually a large overlap. It sounds cynical but you'll put up with things that aren't as fun if it pays the bills (and those of others you may support down the line). One thing you should do, for the above and many other reasons, is diversify your expertise. Python will probably be around for a couple decades but with a broader set of skills you're more employable, more equipped to work on different projects, and more resilient to changes in the market.
That might be one dangerous bunny on his shoulder, then.
a tutorial.. Here's a TLDR from flask import Flask app = Flask(__name__) @app.route('/') def home(): return "Hey there!" if __name__ == '__main__': app.run(debug=True)
I want to see a clearer picture of the red lipstick woman's lips
This is exactly what I was looking for thank you!
Not sure I can explain it well, but it would have been better to say 'The woman on the left and the woman holding the picture on the right'.
Oh, you're right, was too late in the evening when I posted that haha
We use it at my work for image processing with tensor flow.
Yes you will. That is why it is called work. I have alleviated it by: - changing position inside company - changing company - starting a startup - going freelance All of them have upsides and downsides. It does work out though, at least I have been professionally coding .. long .. and still find it interesting most of the time. It is also relatively well paid work which helps too. Later on one can trade money for more leisure time especially if doing stuff freelance.
More knowledge is always good, but nodejs is mostly for backend, so if you're using Python for backend it may be a little redundant.
That would be one way to do it, but you just get all that by using poetry, it makes sure that the versions in your lockfile are the versions that are installed.
1. All work can become boring. 2. Most will, eventually. 3. That said, the more fresh challenges that arrive each day, the less boring (though the more stressful). 4. No one can completely exhaust all possible challenges that can be addressed through programming. 5. Especially because there will always be more languages to learn.
You might want to consider adding a section on **subprocess.run**, which since 3.5 really should be considered the “correct” first approach to take when executing shell commands.
Yes, mostly because often there are seemingly arbitrary constraints placed on developers that are frustrating to work around.
Stop using python 2 you racist But to answer your question I do a lot of data retrieval, automation, and off manipulation
Well, it was quicker to say it as it was said and it communicated the same indentifying information. You didn't approve of the way it was said, so you'd of course contend that some way of putting it you would approve of is better, but what's to compel someone who approved of the way it was said to think the same? I guess you're saying you can't really explain that, so I don't know.
It can do. The important thing to remember is you'll be working for a company that values profit and value for the customer, and that means you don't always get to work on fun stuff. Burn out (I think?) can be a bit of a problem too. I love my job and I love programming outside of work, but for the last year I've found it difficult to get into my home projects after working all day. This leads to additional stress because the amount of projects I want to start keeps building but the projects I've finished doesn't.
[copied the `subprocess` from `yuicompressor` to `python-closure.` so that I don't have to use `webpack/babel` to minify or compile my js](https://github.com/miracle2k/python-closure/commit/714352d6ea746efceda2697b11012955b5500b0a). I believe google closure compiler also gives better results.
All work gets boring. All of it. I speak as someone who's had several careers, and they all get dull from time to time. Even the ones where it was a Dream Job and I loved my team and loved the office... sometimes it just got boring. As for coding, the real pitfalls I've found aren't in coding (after all, if it's boring, you can probably find a more efficient solution) but in all the other things that surround it. Planning meetings. Status meetings. Ticket review. Maintenance of documentation. Paperwork. Those have always been the things that drain me. Now, you say that coding isn't the most important thing in the world to you and... that may be a good thing! It makes it easier to leave work at work and go home and do other things that spark your interests.
Good question, would like to see some recommendations too
This is so true, i hate the “if you find something your love you’ll never work a day in your life” quote because it is total BS. I love programming and some days i just don’t want to program but i know i have to. I love gaming, and if that was my job, i would still have days i don’t want to play.
Just for the record I don’t know the first thing about Python but I figured you guys might get a laugh out of it.
&gt;The library is precisely a year away He didn't say it's precisely a year away, he said it'd be "shipped by next PyCon". Although he can still be criticized for this statement, at least make it the valid criticism of vagueness rather than preciseness.
Oh wow
Can't recommend anything in particular, but IMO, patterns and especially SE for scalable systems has nothing to do with language. Apart from that, good old Fluent Python is good book covering idiomatic implementation of low-level patterns, to save you from writing Java in python code.
Yeah I don't believe I could explain it well enough to do the topic justice.
This is definitely the best answer. Pretty much spot on with what I'm going through. I put in my notice at my job because I was so bored with it, I'm still there for one last project but I thought I didn't want to code anymore. Then I started looking for other jobs and realized I do what to keep coding but need a new company/industry. It does get boring, but it's still a lot more satisfying than most jobs I've looked at. I notice my coworkers sometimes don't have anything to do but for me the coding never stops. There's always something to refactor and improve on even when new features and such are not coming along as fast as I'd like them to.
Amen dude.
I tend to favor requests over urllib3 primarily because of familiarity. I generally find that a combination of * Checking`response.status_code` * Calling `response.raise_for_status()` * Making sure there isn't something in the data of the response that indicates an error (e.g. a key of `"error"` in `response.json()`). (Of course, this is dependent on the API that you're calling.) * Use of `try`/`except` is sufficient for error checking responses.
I work on REST API's and geospatial tooling for planning/building fibre broadband networks
Is this a public Simulink-like tool or something internal?
I started using it for real work about 4 months ago. Primarily the automation of moving, handling and massaging large chunks of data to and from different networks. Also a side project coding the automation of an Alexa skill where it gives a new quote every day. I'm learning that python is basically a very powerful glue that has the potential to connect about anything together. If you got a square peg on 1 side, and triangular peg on the other, python can be fitted between the 2 to make them talk to each other. And then that process can further be automated on any of the major platforms. I had no trouble going from a linux mint environment, over to a windows environment and then later to a cloud-based red hat environment. The only thing I noticed was that the move to red hat environment caused it to interpret unicode in strings slightly differently, but was easily fixed.
My background is in behavioral sciences, so I am relatively new to Python (relatively because I did take one programming course that used Python as an undergrad). I'm trying to create a chatbot using NLTK that this able to provide accurate information about behavioral topics when users ask the bot questions. I followed [this guide](https://medium.com/analytics-vidhya/building-a-simple-chatbot-in-python-using-nltk-7c8c8215ac6e), using a corpus created from a textbook and a wikipedia article focused on sleep (as a test subject). However, whenever I ask the bot questions it seems to just string random bits of the corpus together into poetic-sounding nonsense. If anyone could point me in the right direction on how to improve this, that'd be great. Like I said, I'm new to this whole programming thing!
that's a nice internal server error.
Yeah. I often wonder why anyone would espouse a point of view whose defense they can't articulate. But it's so ubiquitous I suppose it's simply innate to the human condition. You're in good company.
njs' blog hits kenneth where it hurts: His reputation. Kenneth is **VERY** concerned with his "celebrity status" within the Python community. So I doubt he would waste a second trying to save face, even if it was the idiotic option.
https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csgraph.shortest_path.html#scipy.sparse.csgraph.shortest_path
I really appreciate you calling him out. Ever since the pipenv thing I've been more aware of his type of behavior and it's really bugged me to see the Python community constantly praising him so much. I really hope the community at large catch on to Kenneth's shitty behavior.
Public ally accessible google sheet - I think you’ll still need the sheets API enabled. For private sheets, you’ll need the Sheets API and an OAuth token pair.
We'll to be more specific, I feel like I understand the point intrinsically. So it's on a nonverbal level at this point. Due to that I'd rather keep my mouth mostly shut because I haven't formulated the correct wording to really explain what I mean. Since I can't say it the way I need to in order to make my point clear, I'll take this opportunity to consider it on my own for a while. Then maybe the next time I will be able to continue the conversation and articulate myself well. The reason I replied was to put out the bits of information on it that I felt I could say. That way maybe it would get you or someone else thinking about the topic even though I couldn't speak on it in any depth at this point. It's very likely that someone else can explain this point better than I can at the moment.
If it was always fun, you would have to pay them. They pay you because it's work.
shame
This is why there are people who agressively try to call out Kenneth. They don't think that Kenneth should get away with trying to hide his actions, dodging responsibility for his past toxic behavior, etc.
Head First Design Patterns from O'reilly was a good introduction to design patterns, imo
404 link
Sometimes, really depends on what tasks are needing to be worked. There are weeks that go by where I am pounding the keys for 8-9 hours and am like oh 4:30 already, other days its a struggle. Might not be the best to answer cause I have been doing this 20+ years and I will go home and contribute to open source or work on my own projects so I really love what I do.
Not sure why people are downvoting you, I love programming and honestly only time it feels like work for me is when I am meetings or dealing with documentation and other tasks, programming never feels like work for me.
Thanks for the heads up, but I just the free Community Edition. Is there that big of a difference between the two? After the 30% off, how much would it cost?
Looks like it's been taken down: https://web.archive.org/web/20190506151359/https://www.kennethreitz.org/essays/requests3
If I was a professional python dev I’d invest in PyCharm. With the 30% off deal I’m still considering it. I’ve been using vsCode and Atom. I’m getting better support for linting in Atom and autocomplete is nicer in vsCode.
I do not want to use pandas. That is using pandas. It should not be a problem to work with numpy arrays and just use `x` `y` `z` etc as the axis labels. But that functionality does not exist.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I'd argue that microseconds is the ideal unit of time that we should all be using. Rarely does anyone have an absolute timestamp more accurate than this(On general purpose hardware, obviously GPS synced stuff and gravity wave detectors are different), and you can fit 200k years in a signed int, all of recorded history and farther in the future than most computers' MTBF.
&gt; I love gaming, and if that was my job, i would still have days i don’t want to play. Jeez, can you picture that…
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
From what I understand he doesn't really run requests anyway.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
1. You're missing a `)` on the previous line. 2. Don't post pictures of your code. 3. /r/learnpython
My ass is on this line for this software I’m making at the moment. However I have found that if I’m going through a period where I’m not very interested on working on it, it’s because there is a reason. Say for instance i’ve just worked hard for several weeks improving it, then I all of a sudden hit a slump. When this first started happening I’d get upset at myself for being a slacker, turns out that sometimes I just need a break. It also turns out that usually there is a nagging problems, or I’m not sure exactly where to go next for a new feature. I need this “break” just to think, usually some solution to the problem pops into my head and we are off on another coding binge.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Missing ) after dog
esports!
Ah okay thank I will go there
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Async. Every time threads enter the picture one way or the other, requests is a bit of a minefield.
What tool did you used for this cool screenshot?
The previous line is missing a close parenthesis ")"
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
As far as I know there is no difference between these two versions except licence that in the professional version allows you to earn money using software developed with pycharm
A simple breadth-first search will do it. Go find it on Wikipedia and follow their sample implementation.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Writing thermodynamic models of buildings and identifying opportunities to make them more efficient. All the web apps and services to help surface that information to our building engineers so we can stop climate change.
Why did this get deleted?
&gt;Who owns *requests*? The people that maintain it? The entire Python community? The answer is Kenneth Reitz owns *requests*, which is fine. He created it, licensed it openly, and evangelized it to the point that it is where it is today. Yikes. No wonder he deleted it.
A lot of back-end web development happens in Python. I've done that in two jobs and now use it for the back-end of my own SaaS product.
Probably deleted because the tone is embarrassing. But it shows what he thinks, deep down: “Requests is mine and I’ll do what I want with it”. Sigh. How far we’ve come from Guido’s style of leadership.
Hoo boy. The moment you start using your full name in the 3rd person. I’m hoping it was a draft and it’s down for a tonal polish.
Is this going to become the new weekly topic, a he-said-she-said arguing about who made what? This is the kind of stuff that pollutes up mailing lists and makes them hot garbage, is it really necessary here?
&gt;The medium answer is: even firefighters get bored of being in fires eventually. To further your point - there is no intrinsically "exciting" career. I used to be a professional stuntman for almost 10 years, and eventually transitioned into data science/programming-ish job. At some point going to work to get hit by a car for nth time would be a chore, while succesfully executed code would make me giddy with excitement due to the novelty. Take that as you will.
I would HATE to be a streamer. Playing games is great and all, but playing the same games for 18 hours a day for months on end to be competitive enough sounds like torture.
Haha! This couldn't be said better! :D If it comes to me: each creative work I do at home just for fun, like programming, drawing, writing soundtracks, photography, video editing - becomes a hard duty at the office. I work for the PR dept. :)
Uh, there are plenty of differences. Javascript support in the community edition is lousy, and these days that counts for a lot. And most of the automagic support for django, docker and so on is only in Professional. You can work around that, of course, but it’s much nicer to have the IDE pick it all up for you. But if you do everything with your own scripts or manually on the terminal, I guess you wouldn’t notice it. For the record, the differences are listed here: https://www.jetbrains.com/pycharm/features/editions_comparison_matrix.html
Not typically. The stuff surrounding the job (office politics, dealing with people who can't communicate clearly, managing people's emotions, admin, meetings) gets tedious though.
I clicked the link "wow such empty"
https://www.jetbrains.com/pycharm/features/editions_comparison_matrix.html As for cost, the full price is £149 in UK, $199 in US. Discounted 30% I guess it will be around £100 / $130.
I work in a lab environment. New equipment and tech being rolled out all the time. I get to script/automate most of it. It's nice because I am constantly working on new stuff but as @swinging2low said, you will always have times where you just aren't into it.
When I'm productive, work is awesome. I love building things that people actually use. But some days are spent unproductive, mostly trying to figure out requirements or troubleshooting failures that are sometimes out of my control. Like why does my app code crash? Oh, because someone changed something in a dependency and didn't tell us, blah blah ... Work is always work, but programming is actually really important, and if you are good at it, you'll be in demand and generally well compensated.
I suspect it won’t come back up, because there is no way to polish the message that he’s Da Man In Charge without... sounding like the sort of person who would care about that more than anything.
Lol I \*am\* up to date, just wanted to give some context. Could you go into any more detail? Are you scraping a website, or automating some sort of report?
And deadlines. And bosses with no tech knowledge that loves to make decisions. And customers.
QA gamers supposedly despise games within just a few weeks.
Fair enough with enabling the API, I just don't want to download the file.
\`but I just started work at a new company\` seems like that dude is always changing jobs.
[Feature differences matrix](https://www.jetbrains.com/pycharm/features/editions_comparison_matrix.html).
At my day job we use Python to run two mutual fund strategies and a hedge fund. We also use it for day-to-day automatons for things like scheduled file downloads from our partners' FTP servers, mass exports &amp; imports of data to and from Salesforce, etc. I also do a bunch of work on the side and use Python for what is essentially a custom-built ETL (extract, transform, load) platform that handles tons of donation data for large non-profits. I grab raw data (via APIs or FTP), process it, clean it, and then load it into databases where the front-end reporting systems can get at it. There are a bunch of Python-based helper scripts (AWS Lambdas for the most part, although I'm increasingly using Docker/Fargate) as well for this platform.
Working both on the ops side and developer side, I think in most cases it only seem that way, and what it really takes is to have someone who actually is willing to change the status quo. At my previous job, we had developers from a team running their application on CentOS 5 (that was a year ago) on Python 2.6 (thank god they thought python 2.4 was too old and at least used some custom python 2.6 package). Ops actually wanted them to do something about it, because CentOS 5 was already EOL, no longer had security fixes and even maintaining the machines was a nightmare. Ops didn't care what they are running they just wanted them off CentOS 5 to at very least CentOS 6 or preferably CentOS 7. The migration was hard, because the source was packaged into rpms which are tied to specific major version. I switched to that team and very first thing I did was start working on packaging. I refactored the code, so the packaging was done through setuptools, instead of RPMs we used wheels. When installing the application CMS created virtualenv and installed the package there, suddenly: - code was no longer tied to the OS, we could install it on CentOS 6, CentOS 7 and worked even on Mac when doing development (no docker needed) - because it wasn't tied to the OS and used virtualenv we were under full control of all of our dependencies, we didn't have to rely on old packages provided with the system and we didn't need to involve ops to create packages for new dependencies - our application could be imported and used by other code (there was another team with utilized some of our functions in their code) previously they had to use some ssh + shell scripting contraptions to make calls, now they could just list our app as a dependency - we used https://ius.io repo to install python this enabled us to have full control of which python version we wanted to use This way we had full control what python version and all of our dependencies we used and whether we wanted to use python 2.7 or 3.7. Before that change migration from python 2.6 to 2.7 seemed like an extremely hard task. Before these changes, they thought that that's how it supposed to be. Yes, it helped that I previously was in ops, but if I weren't I'm sure as long someone wanted to do it and was wiling to talk to someone it could be done. Perhaps there are some places that you absolutely can't do things like that, but then they need to rethink how they are doing things, because at least in my company, the old way was more work for both devs and ops.
Yes it does. I don't know what my carreer will look like but I'd prefer programming to be one tool in my toolbox and not the way I'm making a living.
as compared to the normal shitposting like all the pics the python logo in various forms? at least this is news.
I have no idea why this is downvoted. Agreed, this pissing match stuff is not good content.
It was a temporary error, but yeah, hooks like I need to change my host provider.
This is so true. I'm going on 20 years of being a sysadmin and I do _some_ coding to make my job easier. I can't speak for actual developers since I am not a develope, but either or, no matter what your job is, you will have days where you just don't enjoy your job. No one enjoys their job every single day. The main thing to keep in mind when you get to this point in your career, is the main goal. If your goal in life is to be happy and excited about coming to work everyday, well that's the goal. Find things that bring that into your life. The work itself is just that, it's work. It's how you get paid, it's how you make a living. Everything else is what you make of it. Even the happiest person you know has days where they'd just rather not be doing the work they do. Repetitiveness, boredem, a lack of feeling or impactfulness, whatever the reasons are, they will happen. Just focus on whatever your ultimate goals are and it'll be the reason you wake up and go to work. Tldr: Being an adult sucks. Work to live, don't live to work, and you'll be fine.
There's a thread like this every week: https://www.reddit.com/r/Python/comments/bj3r3r/whats_everyone_working_on_this_week/
I use it in my day job to analyze the production from thousands of distributed energy generation locations, as well as for automating repetitive business tasks. I'm not part of my employer's development group, so getting access to databases, etc., is a challenge. On my off time I help some academics I know build tools that scrape data and/or provide alerts for events they should pay attention to.
But... I thought there was only one way to do anything. :)
I am out of the loop, can someone fill me in? Who is Kenneth?
I just went through the links --- thanks Pythonistas. I don't think I'm a good enough coder to need the professional edition (around 150-200 bucks per year). I'll continue using CE for now :)
Not sure either. Probably bc most ppl arnt passionate about the art of programming. They just write shit code to make it work and collect their paycheck. Then later on complain that they are burnt out.
&gt; This couldn't be said better! Except maybe as: &gt; If it was always fun, you wouldn't have to pay them.
That's not even really a deep down thought, it's how he's always behaved.
Yeah, let him at least rewrite the post or maybe consult with someone else or what he needs to do before publishing it again. This is not python news, it's just drama.
It's $200 for an organization license. Personal license is only $90.
It's $90 per year for individual users. It's only $200 for an organization license.
That's like the mildest weird thing he's ever done tbh.
There is no PyCharn "personal." There is Pycharm Pro, and PyCharm CE. Pycharm Pro comes in two licensed forms, either an organizational license or an individual license. Pycharm Pro features are the same regardless of which license you have, but there are *significant* differences between Pro and CE.
He is the guy who made requests - a library for networking. He decided to start a version 3 so started a super dodgy fundraiser. He basically just wants to keep the money for himself.
It can, but if you're doing it well, you never have to solve the same problem twice. That keeps it somewhat interesting for me.
If you're not already in this particular loop, it's pretty uninteresting. Actually probably even if you are in the loop.
It looks like a response to: https://old.reddit.com/r/Python/comments/bklroc/why_im_not_collaborating_with_kenneth_reitz/ I have not read it yet.
Can someone fill me in on what's going on? I'm /r/OutOfTheLoop
Nice! I did something like this when I was your age, but it was the stone age of computing and we didn't terminals back then were too primitive to produce nice line drawings like these. (There were vector-graphics terminals, but we didn't have any at my high school.) So, I wrote a program that generated 3-D stereoscopic images of figures like this, but in "ASCII art". If you stood back a bit and squinted, it looked reasonably 3-dimensional.
I'd say you should think very carefully before sacrificing your code's "Pythonicity" on the altar of design patterns.
You need to think of not just your skills with Python but in specific development areas that a Python library extends the language into (This also aligns with jobs that exist). \- Web dev, (Flask, Django) \- Data processing (Jupyter, Pandas, Matplotlib, Numpy) \- Image processing (PIL, OpenCV, Numpy, Scikit) \- Mobile (Kivy) As a Python Developer, I'd highly recommend Flask and if you haven't learned any of the front end, HTML, CSS and Javascript. But someone from another development area might tell you something different.
Alright fine you guys! I usually try to avoid drama programming because programming is enough of a drama but ALRIGHT YOU GOT ME! Who's that guy and what has he done to deserve our undying hate?
All jobs gets dull at times, if they were fun all the time they'd not have to pay people to turn up. Also, the more competently you can deal with a problem the more tedious providing the same solutions over and over becomes. It can't really be avoided. Still, I've done other jobs than programming, where you're not allowed to think and not allowed to come up with solutions, coding is much better than them. There's also another approach if you do like coding, and that's to study something else, whilst being able to code. Having "being able to code" as the second string to your bow can make you uber powerful in workplaces where being able to do both is rare.
The extravagant Requests creator has just had the last of his several online outbursts.
I love requests. Once it was open sourced was it still really his? I'm not sure how that works.
Huh. Anywhere I can read to get filled in on this?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Like a lot of things in life, burnout is something to look out for.
Sure [https://www.reddit.com/r/programming/comments/bkn5px/why\_im\_not\_collaborating\_with\_kenneth\_reitz/](https://www.reddit.com/r/programming/comments/bkn5px/why_im_not_collaborating_with_kenneth_reitz/)
Thanks, appreciate it.
[https://www.reddit.com/r/Python/comments/bklroc/why\_im\_not\_collaborating\_with\_kenneth\_reitz/](https://www.reddit.com/r/Python/comments/bklroc/why_im_not_collaborating_with_kenneth_reitz/)
"QA Gamers" rarely play games in a leisurely way. I would say that isn't actually gaming.
Already Pro for 5 months ;) Such an amazing product ))
I've been a pilot most of my adult life. I've got about 13 years in the industry, 11 of which were flying. The 2 years I was out were due to illness. Honestly, I think I can say that the niche I've found won't get boring. That said, I still occasionally get "bored" with the type of flying, when I do I get a new job doing something different.
He still owns the copyright doesn't he?
To start chronologically: [https://vorpus.org/blog/why-im-not-collaborating-with-kenneth-reitz/](https://vorpus.org/blog/why-im-not-collaborating-with-kenneth-reitz/) &amp;#x200B; To summarize the main issues: * Kenneth Reitz had a fundraiser on his website for Requests maintainers and developers. * After the fundraiser was over, which brought in \~30k, he decided to keep it for himself instead of sharing it with his collaborators, contrary to what he initially promised * Author of the blog post above complaints openly about this shadiness, community is also outraged * Instead of apologizing and admitting wrongdoing, like a normal person would, kenneth reitz shows no regret and tries to sweep it under the rug explaining it as some targeted attack that aims to ruin his PyCon experience &amp;#x200B; I think the main issue we (most people here) have with this guy is a) that he just took money that was donated to the Request maintainer team and b) that he doesn't even apologize for that
That went away after the batteries included phase. Now it's pip install the world to get going.
Thanks for tldr. Didn't know this was going on lol Thanks for filling me in! :)
A "coding" job like most white-collar jobs, has many parts. Actual sitting-at-a-keyboard-thinking-and-coding time can be the minority of your work hours. Meetings, lots of meetings. Talking to people to find out who knows the thing you need to know, and chasing them down and talking to them. Writing spec documents. *Reviewing* spec documents. Configuring your own system and test systems and debugging them. Writing furious emails about the unreadable/ambiguous specs, and then editing them back to politeness. More meetings.
Sometimes I get bored working on something but then I remember that I could instead be digging a hole with a shovel somewhere and then my work suddenly seems a lot more interesting
I feel mixed about this, it depends what I'm coding (an if I'm learning something new). &amp;#x200B; Am I writing my 10,000th sql query to produce some report? Bored to tears. Am I coding/googling/learning to dynamically create and share folders in google drive? Can't get enough.
That's very true
Does the pro license come with forever updates?
Thanks! It's amazing what people could do with such unfriendly technology. I think it's harder to do it with ASCII art! Here's a way more evolved version: https://www.reddit.com/r/Python/comments/bk9fre/big_update_for_my_3d_renderer_made_from_scratch/?utm_source=reddit-android
I don't think he owns it. IANAL, but AFAIK under Apache 2 each individual contributor owns the code they contribute.
For freelance gigs I use it for backend stuff, at my real job for data science. I think webdev is the area where you will find most freelance gigs. Unrelated, just today I thought that I don't want to freelance anymore after my current project.
\- created requests library several years ago and to quote himself, "evangelized it to the point that it is where it is today." \- has been notorious for being rude on GitHub \- created pipenv, climbed the ladder to become Python Board Member, and self-recommended pipenv, which was not quite ready at that time, as the new packaging solution in the official Python docs \- when notified that pipenv shouldn't be recommended as it is not ready and not working properly yet, he refused to listen to any sort of criticism and made clear that he only wanted to hear positive things, which comes across as very irrational \- started a fund raiser to collect money for a request developer team, then kept all that money to himself ($30k). \- when asked by others what's up with that money, he wrote that he didn't feel to justify himself because the person who was asking didn't "vibe with him" \- community gets upset about his wrongdoing, and again, instead of apologizing, he seems to try to make it sounds that there is a conspiracy theory thing trying to socially attack him \- this comes across as a person with a huge reality distortion field who cannot see his own mistakes, doesn't apologize to people, is rude, doesn't listen to criticism, and tries to twist reality in some way
In my experience, it mostly depends on your company, your team, and your project. There'll be projects that bore you. There'll be teams that bore you. There'll be companies that you hate so much you have no motivation, so you get bored. It's not going to be 100% fun all the time forever and ever. No job is. But luckily if you aren't happy with your current job, we live in a culture that job hopping is cool again, so just find a new job.
No, it's a yearly subscription.
A lot of people like `poetry`, I personally did not used it yet, I package my code using setuptools (then generate wheel) and use pip-compile (from pip-tools) to generate version lock to use for promoting code between devint, qa, staging, prod.
Yeah I've been tinkering around with HTML/CSS for a while, but I always feel like a rookie compared to you all. I'll have to reconsider based on the 90 dollar price tag, (and the comment on web dev), so thanks for your tips :)
[Ohh boy...](https://i.imgur.com/BxwhEVP.jpg)
I've never considered OSS as being "owned" by anyone. I have a bunch of OSS projects that I wrote every single line of code for, and that people use. Do I *own* them? No, how can you *own* some code? There is the question of who *governs* a project, who makes decisions about development of the official version, etc, but I don't think anyone *owns* it.
Two things: 1. It's hard to predict what job will make you happy at the start of your career. I have a degree in Philosophy, became a software tester to pay the bills, didn't really like the job, got exposed to the right resources about two years in and realised testing is where my passion is. 2. It's not very likely you'll do the same thing your whole career. I'm in my late 30s and still have about 30 years to go before retirement. Looking at my career so far, there's no way to predict what I'll be doing in 5 years, let alone in 10 or 30. As a matter of fact, in the past 4 years I have been a test engineer, a scrum master, a team lead, and a tech lead.
Oldie but goodie [https://www.youtube.com/watch?v=bPJKYrZjq10](https://www.youtube.com/watch?v=bPJKYrZjq10) &amp;#x200B; [http://www.aleax.it/gdd\_pydp.pdf](http://www.aleax.it/gdd_pydp.pdf)
There is truth in that statement. I also love programming more specifically I love programming something I love. Doing it for work can and will get tedious.
He holds the copyright on his own specific contributions, but unless other contributors signed an agreement to assign ownership of their work to him, they will still hold the copyrights on their respective contributions.
For some reason the [changelog for his blog](https://github.com/kennethreitz/journal/commits/master) doesn't show the page in the screenshot. But it does have this interesting response: https://github.com/kennethreitz/journal/blob/master/entries/conspiracy.md "I appear to be the target of a personal character attack piece, that's been making it's rounds on social media today, expertly timed to ruin my weekend at PyCon US 2019."
That's for organisation (company) licenses. Personal licenses are half that. And yes you can use a personal license at your job, it's just that the money has to come out of your pocket and not be subsidised by your company or the company you work for, and that only you can use that license (on any number of computers though IIRC not concurrently). Org licenses are non-nominal (they belong to the org) and usually come in concurrent sets.
Sucks then, because I almost bought it. That model is straight out of ProTools, and I can't support that. I'm mostly just a bedroom coder. I'll keep using [The EDU Version of Pycharm](https://www.jetbrains.com/pycharm-edu/).
/r/drama wrote up Kenneth's previous escapades last year https://old.reddit.com/r/Drama/comments/8kq1t3/python_drama_from_the_requests_guy
&gt; As far as I know there is no difference between these two versions except licence that in the professional version allows you to earn money using software developed with pycharm The CE edition allows that just fine. The difference between CE and Pro is the features outside of core python support: Pro bundles support for various web frameworks, JS/HTML/CSS/…, scipy tools (e.g. inline datavis, jupyter notebooks, …), database connectors &amp; sql support and remote development &amp; profiling.
&gt;New python tutorial for beginners K thanks
No, every project is different. &amp;#x200B; Apone: All right, people, what are you waiting for? Breakfast in bed? Another glorious day in the corps! A day in the Marine Corps is like a day on the farm. Every meal’s a banquet! Every paycheck a fortune! Every formation a parade! I love the corps!
I am in my early 50s and have been programming professionally for about 30 years. The prevailing comments so far have said, *absolutely, that is why they call it work*. There are certainly occasional days where I am re-implementing something for the N-th time and it gets a little tedious, but I think it is important to look back on the big picture. My first machine is still on the desk next to me, an Apple //e with 64k of memory and two floppy disk drives so that I could compile Apple Pascal without having to swap the disks a hundred times for each build. I did not have a monitor when I started, just a black and white TV with an RF modulator. Now think about the trajectory of technology over the course of my career: * I am connected to a global network that allows me to video chat with friends in every corner of the globe. * The programs that I am running are no longer limited by the machine on my desk, but instead run on powerful servers with 40+ cores. * Tools like compilers used to cost hundreds of dollars, but now I take it for granted that my OS and tools, like python, are all Free. We are living in a gilded age of being involved with a technology that is evolving faster and faster and becoming relevant in almost every domain. That change has been incredibly exciting to watch, but even more interesting to participate in.
Man, I feel really bad for everyone involved. From my (admittedly limited) interactions with Kenneth, it seems like the dude is genuinely struggling with his mental health stuff, but that's not really a valid excuse any more, is it. That said, I hope Tom puts his stewardship of Requests to good use - the work he has been doing lately with Encode is extremely impressive, and he's proven himself repeatedly both as an engineer and as a project maintainer.
Thanks, will take a look there too. Appreciate it.
[removed]
So how'd you go about that?
What is reading if not downloading?
I guess it depends on the license, eh
This is in reference to the blog post here: https://old.reddit.com/r/Python/comments/bklroc/why_im_not_collaborating_with_kenneth_reitz/
Thank you kind sir :)
Lol. Says you. I've been doing it my entire life, haven't been bored yet. I afk runescape while at work, then get home and afk until I go to bed
I'm not sure what this means. I don't have to pay my employer - they pay me. Disneyland doesn't pay me, I pay them. Why would I pay my employer?
I find my job (a mix of writing and coding) generally enjoyable. I personally find some projects less interesting than others, which makes getting into [flow](https://en.wikipedia.org/wiki/Flow_(psychology)) somewhat more difficult, but once I get into it, I am pretty engaged.
It means the employer wouldn't have to pay you if you loved it that much.
Ah, I see what you are getting at. A third condition where nobody pays. Interesting.
https://imgur.com/a/ziJTHy3
This is awesome. I just started working on my first website using flask. I wish there was a way to navigate to a specific lesson without clicking through pages though. Didn’t see that navigation on reddit browser on iOS.
Kenneth Reitz owns Requests? Reminds me of a statement a founder of RemObjects said they received when negotiating with Embarcadero software, maker of the Delphi (pascal) compiler: "We own Pascal". They're both tragically wrong.
That’s a bit different though. Having to play games that _will_ have bugs, and when you find them convince the developers they are real, and then having to play it again to check, well that sounds like hell.
User name checks out.
There's a Table of Content on the left all the time.
And women. If you check out his blog, you learn that his lifestyle used to include a wife, a girlfriend on the side, and what sounded like a groupie at every PyCon event.
It's not though - doing anything repetitive gets boring. The trick is to have a job that's not nothing *but* programming. Having days you have vanilla ice cream and other days when you have strawberry means you never begin to hate vanilla. You may look forward to some flavors more than others, but you never hate ice cream itself.
“I AM THE LIBRARY!”
Working on Python for about 6 years now. Majority of my work is creating REST apis using Flask. I started my python journey with Django to create web applications. At my current job our stack is 90% python. My colleagues use Python to run ML models, DevOps uses python for dealing with Ansible, Azure etc. Python is a general purpose language, it can be used for just about anything you can imagine.
YES. We need some excitement.
This doesnt surprise me. He's had these tendencies since requests first became popular. &amp;#x200B; I guess Ruby is not the only community with a few sour apples.
Give the people what they want to hear.
Yeah, cause you're a prick, Kenny
He's not wrong. Sure you can fork requests, but the existing requests infrastructure and the effort going into building and maintaining it are his. Building OSS is a thankless task. Shitload of work, lots of bitchy people, little to no pay. I'm fine with the guy venting, he makes good product.
You own it, however anyone else can obtain a copy under the provided license. Then they too own their copy and can use it however under the license.
The mods even removed my post of a three-eyed python being found, which I interpreted as a divine sign that everyone must move to Python 3. :-(
the comments in this thread are unbecoming and this whole thing amounts to a social media dragging of someone, which is a bad look. I have no opinion whatever on the specific matters being discussed here, but the manner in which this is being discussed is at the level of teenage gossip.
Does it even matter much, since the open source license gave others the right to use, copy, and modify the code? Unless they want to relicense it or create Requests the Musical, anyone can do practically anything with it.
From my understanding it is the repetitiveness. They basically need to check if you can walk through a wall, so just keep running into every wall. Does the AI work right? Run in circles and see if they chase you.
Of course! Both on a day-to-day basis and on the “burnout” level if you’re not vigilant. I’d say that the best thing you can do is focus as much on the business and management side of things as much as you can - learn your industry, then consider switching industries and learning another. At some point, your latent knowledge of business processes becomes at least as valuable as your ability to sling code. Note that “management” doesn’t necessarily have to mean “managing people” in this context. I’d consider things like systems design, performance monitoring, analysis (with some additional data science chops), and process improvement to potentially be the same concept. If you know an industry well it’s not hard to sell yourself as a value-add to a process improvement or corporate strategy team, since you can usually run circles around them in terms of being able to develop, disprove, confirm hypotheses - and you’ll be able to quantify the impact of those changes once implemented. A single good developer can easily double or triple the output of most process improvement teams in my experience, if they know the business side of things and work to support the rest of the group.
He aspires to be a BDFL but isn't B at all and comes off as a huge first syllable of D.
Yeah just saw it now. On iOS the table of contents displays beneath the comments section so I didn’t see it at first.
Eeks, will you sponsor me to PyCon. I'd like to get to the truth of it.
Some one fork into requests - keneth... I think the library would still work
don’t fall into pit thinking “pro”s are into expensive IDEs and stuff. Majority of people use editors with their favorite suite of plugins. There is a reason why PyCharm has “vi mode”, just saying
Usually licences that require handing over copyright to the project require you to sign something like a contributor license agreement (CLA) explicitly - so you would know if you gave up your copyright over your code, it's not something you can do by accident. CLAs are somewhat controversial because people don't like 'giving away' control over their code (usually to a company who runs the project), though they make more sense from the point of view of the project since you don't want to have to chase down every single contributor if you want to make changes to how your project works or is licensed (like switching between GPL and BSD licences)
If you look closely, the python logo is actually repeated on alternating bands across the breastplate -- this might be a nod to the [flag of Friesland](https://en.wikipedia.org/wiki/Flag_of_Friesland), a Dutch province (although I can't see much of a connection between it and GvR).
Cool on several levels...
The feature in pro required for me over CE is Django support. So I use Pro. Have two licenses, one for work and one for home. So that's a big difference. As a Django person I can't find another IDE this complete.
I mean, if he removed that last section and the two paragraphs referring to the blog post, this would be a nice post on the future of requests!
Yes, yes it is. Open source is about licensing code, not about ownership of code. &amp;#x200B; Look at the license file: [https://github.com/kennethreitz/requests/blob/master/LICENSE](https://github.com/kennethreitz/requests/blob/master/LICENSE) &amp;#x200B; This is how license files should look. It states the copyright owner, and the licensing terms.
what?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Yes and no. Yes for the reasons stated. No, because I greatly over-estimated how boring it would be. When I was in High School, I decided I wanted to be a computer programmer for a living. As a result, I overloaded my HS coursework with programming courses. By the end of my third computer programming course, I was completely bored of programming, and decided that I didn't want to do it for a living. I studied economics, then went to law school, and became a lawyer. My career path led me to data analytics, and I now spend the majority of my time coding anyway. I had assumed that professional coding would be like academic coding, and that's not really the case. Most of the time when I code, there's a goal in mind, but no solution, and no path to get there. I have to design everything myself. Each project, therefore, is my own project. You're going to have a much larger sense of ownership over your work product than you do with projects you do for school. Even if you're in a project working with a team and trying to conform your code to a team, you're still going to have things that will break up your day: meetings, paperwork, emails, QC. Even if you find you're bored with your job, most days, you won't really have enough time to feel bored.
Your parent comment was already completely off-topic and petty, but this is just too much. I’m not a fan of how he’s dealing with all this, but his private life is really not up for debate. Take an example in njs’ blog post. He did what he needed to do, professionally.
[fixed link](https://www.reddit.com/r/Drama/comments/8kq1t3/python_drama_from_the_requests_guy/) without `old.`
I can appreciate that someone (the devs?) is trying to push a product by posting a sale ad on Reddit, but... If you want a **free** and **open source** software that just works, check out Visual Studio Code. It's pretty great when you install the Python specific plugins, and you don't have to mess with Pycharm's yearly subscription. Who do they think they are, Adobe? :p
What does "owing it" even mean in this context?
Everyone who contributes has copyright to their own changes. Code is contributed under a particular license. Changing the license then requires consent of all contributors (for their part of the code to change licenses) unless there is a copyright assignment agreement in the license.
I don't care if this isn't what they meant by Python; this is amazing.
Depends what people mean by "it". The github repo? Yeah he owns it. A lot of the website(s) and assets? Probably (as in their hosting). The PyPI project entry? seemingly not currently. The code itself? Shares a copyright stake in it, but has licensed to others to use and redistribute freely for a long time.
Non-contributors don't own anything, they just have a license to use. change, and redistribute the code according to the license terms. Some licenses provide ways to lose those rights if the terms are violated.
I’m almost reaching the breaking point with the quality of discussion in technical subreddits. The amount of negativity, not just in this instance, but when anyone posts a project is awful. That would pretty much leave just fluff subreddits in my list.
I think the practice started when the GPL became less fashionable. There were a lot of projects that wanted to transition to a more permissive license, but we're in a legally sticky area because lots of people had already contributed to the project under a GPL license, so technically they could prevent their submissions from being relicensed under Apache or MIT if they wanted to. The easiest solution was to just get everyone to hand over their copyright so that projects could easily be relicensed without legal issues.
It speaks to his character though, which is what's being discussed. People that are shitty to others in their private life are generally shitty to others professionally too.
Coding is a tool. Does hammering get boring? Depends what you choose to hammer on right?
&gt; For some reason the changelog for his blog doesn't show the page in the screenshot. git rebase -i 1d5c4e1 git push -f origin master
&gt; Have two licenses, one for work and one for home. If they're personal, you don't need two licenses.
I think this type of thing ought to be mod-killed. Maybe it would make sense to have a single dedicated (heavily moderated) thread for discussing the substantive issues here, but letting the whole subreddit get blown up with social media dragging and reputation attacks is kinda disgusting.
work is boring even if you like what you do for work. that's the nature of it.
Sounds like everyone involved was fine with it. I don't understand on what grounds you're criticising his relationships as "shitty".
&gt; how can you *own* some code Um, it's very simple. The code copyright. Whoever wrote the code owns the copyright unless they assigned it. For most open source projects that means the primary author owns 80%+ of the lines of code. Contributions from other people have the copyright owned by them by default (if it's enough lines of code). That's why a lot of big open source projects have copyright assignment agreements for contributors. The reason this all works is because of the open source license that the copyright holders agree to put the code under. A lot of that is legal and implicit. In particular the copyright owner can choose to relicense the code in the future, although retroactively applying a new license is generally not possible. The legal details of this get very messy.
If I fork requests then that copy is owned by me. Kenneth or any other maintainer can't change shit unless I expressly allow it to. But yes, I do have to abide by the terms of use.
No. It isn't. That isn't how copyright works in the United States. Being able to do what you want with something is not the equivalent of ownership. The "owner" can change the license for instance. You cannot.
I use it at work for automating things where speed of writing the script is more important than how fast the script will execute.
*mods are asleep post pythons*
ouch already getting down voted but here someone compare [webpack, rollup and closure](https://www.syntaxsuccess.com/viewarticle/closure-compiler-vs-rollup-vs-webpack) using their weekend project.
?
Fair point, what if I'm not in the US?
IANAL (though I have been working for Open Source software companies for like 12 years now and using Open Source since about 1994), but see the [Berne Convention](https://en.wikipedia.org/wiki/Berne_Convention) for a place to start.
***screeching and spinning***
I decided to spend a few minutes on recreating this, with the idea of making it into a function, and keeping it as short as possible. Obviously poor coding practice. And I would assume there is even shorter ways of doing this, but here's what I came up with: def s(t): print(''.join([l.upper() if i%2 else l.lower() for i,l in enumerate(t)]))
Not really. Not gonna lie, I don’t understand the poly lifestyle at all. It’s very alien to me. But if all the people involved are ok with the arrangement, then that’s between them.
Yeah flask is cool and all, but I just use github pages
Right on, that was good to know. I have been using and contributing to OSS for \~2 years myself and passed high school the day before yesterday. Also, if Kenneth did change the license as of this moment, would it affect the license of my fork?
Ok. Thanks
I'd throw Numpy into data processing, since its primary purpose is to give you a C-style array.
I'm an idiot, this is the wrong subreddit, Reddit sub searches suck.... oh well, enjoy the random photo! MB guys...
&gt; I think the practice started when the GPL became less fashionable. That's not my recollection. Assignment clauses appeared when large companies like Netscape and Sun started to be involved in opensource in substantial ways. They basically ran existing licenses through expensive lawyers, who pointed out the assignment problem was missing from the equation. Since they wanted to maintain a degree of control over the fate of software they were releasing as OSS, they introduced these clauses in the licenses they used - like the original MPL in '98, iirc, and the "family" of licenses it spawned (SPL, CDDL etc).
It’s a shame. The community is so frequently toxic anymore, and seems intent on eating its own in the quest to police itself. I think the whole thing is a little disingenuous. Development of a library like this has no meaningful costs aside from developer time. Who has put the most effort into requests overall if not Reitz? He created the initial value. Being a maintainer, or contributor to the next version doesn’t change the basic fact that without him, no one would have donated to some-new-async-HTTP lib. Why does everyone now get to be paid using funds he raised to make improvements to the brand/product he created? It’s only $30k. Maybe he deserves it. I think the donators understand the money is going to him, and there is no reason currently to assume he won’t deliver. He’s capable, and values his reputation. We know this. I feel bad for him. This kind of public shitstorm is an actual nightmare for anyone, and is horrible for everyone around it.
&gt;... more Unixy widely acknowledged term is [KISS](https://en.wikipedia.org/wiki/KISS_principle)
**KISS principle** KISS, an acronym for "keep it simple, stupid", is a design principle noted by the U.S. Navy in 1960. The KISS principle states that most systems work best if they are kept simple rather than made complicated; therefore, simplicity should be a key goal in design, and unnecessary complexity should be avoided. The phrase has been associated with aircraft engineer Kelly Johnson. The term "KISS principle" was in popular use by 1970. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Pycharm Pro/pretty much all jetbrains software is free for students (if you're a student)
I am doing C, but I miss Python!
Playing on MMORPG for fun at 19 years old vs working to support yourself (and possibly others) while still trying to see some good in the world. &amp;#x200B; Moral of the story, you'll get bored kid. Probably even get jaded doing the things that bring you the most joy.
Was curious so I searched for it: [https://github.com/pypa/pipenv/issues/1720](https://github.com/pypa/pipenv/issues/1720) &amp;#x200B; Devs told public\_radio/[amancevice](https://github.com/amancevice) they disagreed and weren't going to do anything differently. Take that as you will.
I think it would depend on the license. Some licenses, like vanilla GPL, allow you to use "this or any later published version" of the license at your discretion. Some projects will lock it to a specific version. To my knowledge, no [Open Source Initiative-approved licenses](https://opensource.org/osd-annotated) would allow them to retroactively change the license that you obtained the software under. But, I'm not a legal expert by any means.
It's copyrighted to him, so yes he owns it.
It's copyrighted to him, so yes he owns it.
Even the pressure of a startup I imagine could get dull if done for long enough and/or enough times
Thanx
&gt; He basically just wants to keep the money for himself. From all hints, that money has already been spent. Not that he would have any problem making it reappear out of his pocket, as a big-shot silicon valley engineer, I'm sure. Or so I'm told by a few posts in the original thread, which labeled $28k "just a month's salary" unworthy of squabbling over.
I think Reitz is a smart guy who has done a lot for Python, but my impression of him is consistent with what he wrote. His ego often takes the wheel.
He can be right and say things that makes me think "yikes", those aren't exclusive.
It's also free to use on open source products just saying ;)
This just seems like a really abstract way of saying "nobody should suffer social consequences for behaving badly in a community." Which I think is really only an appealing sentiment to people who like the idea of getting away with bad behavior.
Sure, that's probably also true, but *most* developers never dealt with that or had to sign one of those agreements, because they were never committing to upstream projects like that. Now, there a good deal of non-megacompany-maintained libraries on GitHub that request a CLA before contributing, so the average developer that would occasionally submit a PR to an OSS library is running into CLA's now.
It's not like that at all. It was a fun charity event. He wasn't the center of attention until the puzzle and painting came up - then he was a good sport and even ran around showing off the puzzle trying to raise the bid.
From what I understand, he didn't raise the money for himself, he raised it for a new feature that he was depending on someone else entirely to write for him for free. That really puts to lie your idea of "I think the donators understand the money is going to him".
&gt; It's pretty great when you install the Python specific plugins That wasn't my experience when I tried it, about 18 months ago. A lot of manual configuration was required, the plugins felt half-baked, and there was very poor management of relatively common situations like having multiple versions of the interpreter. I ran back to PyCharm. I'm sure it has improved since then.
VS Code is pretty decent. I've been using it last few weeks. compared to Pycharm I find it lighter and very customizable.
Exactly. It’s not _playing_.
There are some things he definitely owns: * the name/trademark * his own code contributions Everything beyond those two things probably requires some lawyers to tear apart. I will say, unlike the majority in this thread, I think (tone aside) that his position seems fine to me. People who aren't into are welcome to fork the code under the existing license.
Only if contributors signed a contract to gift him the copyright over their own contributions.
If Reitz wants to re-license it, he needs approval from all the other contributors, or rip out all the code he didn't write himself.
Thanks! I definitely learnt a thing or two today. I did think that you had to specify GPL-x-only or GPL-x-or-later. https://www.gnu.org/licenses/identify-licenses-clearly.en.html
That sounds pretty awesome, I'll give it a go. I just noticed the '- p' argument in the readme has the wrong description though.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Social consequences are not always just in fact I would argue that they are more often than not unjust. I don't know anything about this case.
there's a parable about glass houses and throwing stones. may you be so lucky as to never be involved in a situation where thousands of people who don't know you decide to attack your reputation because of something a rival of yours said on the internet.
Maybe you should learn something about the situation and judge it on its own merits rather than blindly assuming it's unjust, then.
ANSI color codes are not supported by cmd. Download the colorama package for universal terminal colors
are you sure? I thought you just stopped getting updates after a year.
Peyote()
I haven't looked in a couple years. Which is why I prefaced it with, "unless it's changed". But it definitely was that way
I don't see it here either: [https://api.github.com/repos/kennethreitz/journal/events](https://api.github.com/repos/kennethreitz/journal/events)
I like pipenv. It’s my main way to develop python apps. I hope this issues won’t touch pipenv
Thanks, I wondered if there would be a coupon or deal during PyConn. However, I just tried it and it won't work with my existing subscription. It says *" This coupon code is not applicable to the products in the shopping cart."* I was going to buy another year. Oh well, I really like PyCharm so I will just update it at some point before my subscription expires next February.
The plumbum and sh external libraries are also worth considering (for heavy-use cases, at least).
I am writing a plugin for Kodi/resolveurl and linksnappy.com
Exactly what my own experience was with VS code, too.
Thanks, worked.
Maybe you should read what I wrote and realize that I don't think this case is just or unjust, but your reasoning to be poor.
Working on completing a basic python course on Coursera
&gt;are his and his contributors. \[...\] Building OSS is a thankless task. I think the main gripe people are having is that he is perhaps the biggest contributor to the thanklessness of the requests3 task by attempting to hoard the relatively small thanks that there is (fame, money) for himself. He got $30k in donations to build something and wanted to keep all of the money while not even working on the headline feature.
Not all projects in this thread get monetized though.
I assume he could change the license terms for a new release, so long as the new license is compatible with any code carried over from the old license. (But IANAL.)
You get bored solving specific kinds of problems eventually and you find yourself looking for different roles so you can solve different problems. As others have said, there will be days when it doesn't feel exciting or when you're tired. I'm 15 years in and I've still been able to find interesting work. I think that's about as much as I could hope for.
That saying applies to the wealthy.
I use remote debugging and Django template debugging.
Live demo now available at [https://trco.si/dbmf/](https://trco.si/dbmf/).
Eventghost is what you are looking for, it has a learning curve but it has enough information for you to learn (you can even integrate it with Tasker to run things) i recommend you to use the beta since it supports python 3
Agreed.
I mean, so what? Like if his contributors are complaining they’re free to not contribute anymore. If he owns the project he’s free to do what he wants to do with the money as long as it’s kosher with whatever agreement if any was attached to the money. Likewise if you throw 30k at something and not get what you wanted you don’t have to throw more money at it. IMO when I hear money is involved with OSS I assume you’re going to have a bunch of salty grapes coming around bleeting about it. He would have been better off just ignoring that but I can understand his response.
I have not looked, i'm sure it adds a number of features. However i'd argue that a majority of folks using requests like are just doing requests.get(url) # now parse some shit You can do this with built in urllib stuff. requests is just a popular library
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Still better than most of the karma whoring garbage that's posted here.
https://nostarch.com/seriouspython Serious Python chapter 11 is about “scaling and architecture”. The book incorporates lesson about design patterns throughout.
‘’’ with PeyotePendant() as peyote: snake.wrap(peyote) ‘’’
At this point someone should create a new library to replace requests and let each person choose what library to use.
/r/LostRedditors
https://www.zdnet.com/article/twelve-malicious-python-libraries-found-and-removed-from-pypi/ &gt;The twelfth package, named "colourama," was financially-motivated and hijacked an infected users' operating system clipboard, where it would scan every 500ms for a Bitcoin address-like string, which it would replace with the attacker's own Bitcoin address in an attempt to hijack Bitcoin payments/transfers made by an infected user. &gt;This package, too, mimicked the name of a popular Python library, named "colorama." Make sure you use the right spelling!
"here" you mean Reddit in general or this sub?
I hold this sub to higher standards than the rest of this place.
There's two problems with that: 1) it's not illegal, but it's an asshole move to not share just because you're the face. So people should know that when they contribute in good faith. 2) it's irresponsible to people that want requests3, since he's not going to be the core contributor and didn't want to pay those who would be. So they're donating towards...future documentation? They thought they were donating towards getting requests3 executed.
ha, downvoted for asking for clarity. Niiice.
Look at the dudes website. It seems like satire by how self absorbed he seems: https://www.kennethreitz.org/
&gt; Kenneth Reitz is a well-known software engineer Get over yourself.
If you want to buy requests3 then make an agreement that makes the money contingent on requests3. If you give an open ended contribution to a project/charity/whatever don’t be surprised when they don’t do exactly what you asked with it if you didn’t make an agreement for that specific thing.
Nobody's saying it was illegal, which it would have been if there was a contract involved. We're simply saying that it's an asshole move that should be public. When I donate to causes, I usually don't do so with a specific charter, but rather with the understanding that the money should go generally in the direction promoted by the cause. It's usually not illegal if the recipient blows the money, but it should and does kill their social credit.
re 1: I speak only for myself, but as someone who donated I knew with absolute certainty that I was giving money to Kenneth Reitz, the individual. The payment processing steps made that particularly clear from what I remember. re 2: I don’t understand where this assertion that Kenneth will “not be a/the core contributor” is coming from. I know for a fact he’s spent a very significant amount of his time and energy working on it thus far, and have no reason to believe that will suddenly change. Further, it should be noted that when Kenneth says “documentation”, he largely means what most people might call “software architecture”. If you don’t believe me, read what his: he’s both [written about it extensively](https://www.kennethreitz.org/essays/how-i-develop-things-and-why) and given talks on the subject many times.
Why would someone want a link without old?
Your resume sounds very unique.
I too am curious about this and setting up Python to use Yahoo's fantasy APIs but not sure how to get started.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
man you explained this more succinctly than a lot of blathering iterator posts. thanks
Before I was a web dev I was a customer service rep for an insurer. It was dull and boring all the time, and I was underpaid and underappreciated. Now, not everything I do is interesting, but enough is. Sometimes I have to do some repetitive, uninteresting work, but usually I can find a way to automate or reflector it so I'm not doing the same thing over and over.
I don't believe they were open ended donations. Kenneth said they would be used for requests 3, [see here](https://www.reddit.com/r/Python/comments/bku40b/njss_blog_post_kenneth_reitzs_journal/emlrt5l/).
Not automatically, unless contributors to the project fully reassign copyright to Kenneth Reitz. I've contributed to a number of open source projects before that do not require copyright reassignment, and one of them (created and project name copyright by someone other than I) did a relicensing of the project, and the creator of the project sent an email to every contributor seeking permission for the relicensing (even for and additional license to make it a dual license project), and that took a while for everyone to get back (which eventually happened) before a new release under the new license took place. [Relevant thread on GitHub for the project at hand](https://github.com/dulwich/dulwich/issues/153).
Very little is supported by cmd
I’m working on a library/utility that introspects SQLAlchemy models, their relationships, and the constraints of the underlying tables. It will then suggest that you create an index on any columns you haven’t that are used in relationships - especially those that are eager loaded. Eventually I’d also like it to be able to spit out an alembic migration to create those indexes. Creating an index asynchronously in PostgreSQL in an alembic migration is especially painful right now.
Can it do pie charts and radar/spider charts? &amp;#x200B; Otherwise it looks good, especially those one-dimensional charts. I'll add it to my tool box
Jesus if you say “just” again... Keith made a mistake, many mistakes, and now he’s been called out. Someone brought these issues many had no clue about to light and it’s time for him to pay the piper.
Okay, maybe you should learn something about the situation and judge it on its own merits rather than engaging in tedious sealioning where you intentionally refuse to assert an opinion that's concrete enough to be directly contradicted or even discussed at all.
Almost got me worried there, thankfully I installed the right one.
Almost had me worried, thankfully I installed the right one.
Boy, this really strikes home...
I hated writing software for other teams/users in the company. My most fulfilling work has been joining a team in a developer capacity where I am also doing some of the work the team itself does at least part of the time, and then automating the crap out of it and building interesting tooling to enable scale for a team. This, to me, never gets boring. My approach is usually to work with my manager to commit to a period of time of doing largely the core roles of a team (aka "feel the pain"), and then block X amount of time in my weekly schedule going forward for automation and development work. Once you establish yourself in the team/company, it becomes easier to then move to different roles and automate the "boring stuff", and basically you end up hopping from role to role or team to team, and leaving behind you a trail of automation and tools that increase the effectiveness of the company as a whole and generally make everyone's lives suck less. Keep track of all of those automation/improvements, with clear metrics that you have agreed upon with management that show the tangible impact you've had, and your annual reviews are now a cakewalk, and generally a stairway to much greater pay, responsibility, and flexibility.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Yup, looks like it's only good for new annual subscriptions. Annual renewals already get 40% off for year 2, with another discount at year 3
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
https://www.python.org/downloads/windows/
An honest mistake, and a nice photo, totally cool with me. Had me quite confused for a while though. I scrolled past it thinking that I thought it was r/Python while it wasn't, then thinking where else would I see photos of pythons and scrolling back only to discover it was on r/Python after all and my thinking I thought it wasn't was thought incorrectly. I think.
There is no "Windows x86-64 bits executable installer". There is "Windows x86-64 executable installer". (Has no "bits" in its title)
Yea, and anyone who happened to clone or fetch while that page was present, is going to notice that when future fetches blow up. You never want to do such a thing, unless you've done something especially grievous like commit credentials. If you just said something stupid, well, you should eat crow instead of breaking anyone's copy who's timing was just right.
Why?
I've been in such situations before, even ones that were completely unfair. That doesn't mean they're all unfair, or that we should give up on trying to hold people accountable.
Actually, r/debian likes spirals, it's their logo.
Saying that poly people have bad character is like saying gay people have bad character. Your adult, cosensual sexual preferences do not indicate how good or bad of a person you are.
THE PYTHON HAS SPOKEN. ALL HAIL THE NEW BENEVOLENT DICTATOR FOR LIFE!!!
Woah!
Because standards.
Ya I barely post on here, I recently stumbled upon a snake subreddit that people where sharing awesome photos of their pets. I had this great photo and figured I'd share. I mistakenly searched r/python found and this, so ya here's my buddies snake. Lol hopefully the mods allow it... thanks for checking it out!
Thanks! I appreciate the feed back.
VSC is a great editor, but if you need an IDE, there's nothing better than pycharm
narcissistic marketer and former software developer Kenneth Reitz grabbed 30k from donations to build a library that doesn't shit the bed with threads, **appears** to have pocketed the money and is criticized for it, and goes defensive on his blog, before realizing he's laying his cards on the table a bit too early to avoid rustlin jimmies before PyCon.
now to be consistent we need to go through their commit histories to do “code shaming”
Pictures of actual Pythons are for after 12 when all the mods are asleep
It's almost hard to believe that a person can be paid to have that much fun.
$0.02 explanation for programmers familiar with C: he shared header files for the library without providing implementation files. You are free to “fork” the library and use with royalties.
Thas the ine you want...
Pushing install button because i assume that you meant 'line'
It's 12 o'clock somewhere...
I believe this is what you are lookong for? https://apscheduler.readthedocs.io/en/latest/
I have used Python for lots of different things. Here is a short list of just some of the projects: * Internal desktop GUIs applications * Automated testing of C++ applications * Automating creation and teardown of virtual machines / docker containers * dev / ops related scripts (deleting old data, login scripts, Windows registry editing, etc) * Websites (internal and public)
Students get it for free through a university email for anyone that’s not aware
&gt; How far we’ve come from Guido’s style of leadership. How far? Guido also used to impose his will on the peasants: https://lwn.net/Articles/757713/
cute little snek
&gt; The mods even removed my post of a three-eyed python being found, which I interpreted as a divine sign that everyone must move to Python 3. :-( Not everyone, just a percentage equal to that of three-eyed pythons in the wild ;-)
Language doesn’t matter.
Thanks, he's a very mellow photogenic Mr. Snek.
I'm in my mid 20's, I have been playing since 04. I'm still not bored. And I still am productive, I graduated with my bachelors, paying all my bills, able to take trips with my girlfriend, able to support myself. Some people main hobby is gaming and they don't get bored. What's wrong with that? It makes me happy?
Wait until you get older... Now that I have a full time job, am married and have a kid, my free time is greatly reduced and the precious little time we have is spent together. Other free time is used to do jobs at home or activities together. If I actually get time to game, I can’t be bothered because I have nothing to play or don’t want to start and get invested because god knows how long it’ll be before I get to play again. As depressing as it sounds, you do get used to it and I will get back into gaming occasionally eventually. Priorities friend, they catch up and overtake!
The thing is that if I will need to learn a few other languajes it will take me a lot of time and I'm already getting familiar and comfortable with python
Its still very apples to oranges. You mentioned 'afk'ing through runescape. I'm talking about games that require a good deal of effort for extended period of time. That is extremely mentally taxing and doing it day in and day out, while knowing your income depends on it, seems like torture to me. Thats not what most of us experience while playing games, even if we do game 10+ hours a day.
Honestly it depends on management and the project. Sometimes management that loves to micromanage the project and i cant take a coffee break to refresh each hour tends to be annoying and i seem to get sleepy.
Yea I could not be a streamer.
I am interested in AI and apps that help people in their day to day lives and the only way that can be made that interests me is by programming so that is good I think, and thanks for the advice :)
You may have tried this but what about a Boolean? So if it detects left arrow it sets up, down and right to false and sets left to true. Then a simple while loop would do.
Fuck. Bought it yesterday.
Use ==
You need to use == when comparing in python. Single = is setting a variable equal to another. Using == is comparing two variables to see if they are equal to eachother
(1) [https://web.archive.org/web/20180701201816/https://www.kennethreitz.org/requests3](https://web.archive.org/web/20180701201816/https://www.kennethreitz.org/requests3) He says "we", "our", "us" everywhere, and mentions other maintainers. Then he kept all the money. It's not uncommon to have one person personally handle receiving donations to a group cause; that comes with the strings that if said person behaves irresponsibly and gets caught, people get pissed. (2) Even though Reitz says Requests [isn't or won't be based on urllib3](https://twitter.com/kennethreitz/status/1124736204434497542), the main existing requests3 content seems to be in Requests Core, which is a copied and pasted version of the work of Urllib3 (and according to njs, a dead-end). [https://github.com/kennethreitz/requests3/tree/master/requests3/core/\_http](https://github.com/kennethreitz/requests3/tree/master/requests3/core/_http) [https://github.com/urllib3/urllib3/tree/master/src/urllib3](https://github.com/urllib3/urllib3/tree/master/src/urllib3) I'm not the only one that couldn't find a lot of original work from him: [https://twitter.com/auvipy/status/1124905717675085824](https://twitter.com/auvipy/status/1124905717675085824)
Missing the colon after the conditional statement If x ==1:
Also could post to freelancer.com or another gig site such as gurus.com, flexjobs.com or upwork.com. There are quite a few. Bidders would need to know where the data is coming from.
Also : need to be added at the end of if statement as well as they should all be indented correctly
And?
Oh cool! I think stripe is hiring, btw.
But it's Ken Reitz... can we be sure that everyone was happy with that arrangement? It seems like that would be the first time anyone was happy with a Ken Reitz arrangement.
&gt; is in no way indicative of a bad character That's your take on things. I'd take it as a confirmation of his profound self-centeredness.
&gt;Saying that poly people have bad character is like saying gay people &gt;have bad character. One's a characteristic, one's a behavior. &gt;sexual preference Relationship preference.
Also need : on the else statement
No indication anyone else had a person in every port except him. Seems right up the alley of an incredibly egocentric personality though.
Damn THAT HAS TO BE THE NEXT PAINTING UP FOR AUCTION.
^ Christopher Neugebauer's talk at Pycon Au 18 was interesting in this regard: https://www.youtube.com/watch?v=imW-trt0i9I
You need to use elif and ==
that is an incredibly classy post about a frustrating personal and professional experience. kudos to the author for maintaining such an even tone regarding what happened, and explicitly discouraging any internet lynch job.
r/learnpython
I believe Cpython is what your are looking for. https://en.m.wikipedia.org/wiki/CPython
I would burn my mothers house down to work at Stripe
I’m a real developer so I use Vim, sorry peasants your ads won’t get me. Bye
Can you elaborate?
In absence of any suggestion to the otherwise, we have to assume so.
I had used Flask previously for simple web pages, but primarily it's easier to turn it into a "serverless" website inside AWS. I deliberated on the choice of language, &amp; Python seemed easier to work on after PHP, the language I'm comfortable with at that time. I see a business case for using Flask, especially if you want a portable (read: easy-to-package aka Zappa) that can scale up without needing to purchase more instances to serve nominally dynamic websites.
When you register with your university email, they will let you use the pro version for free when you are still in school.
Oh, I dont live in the u.s so I dont have an .edu email
Are you serious? - Guido’s role as BDFL existed precisely to cut gordian knots. Which he did, for 20 years or so. - He was so stressed out by having forced that PEP through without consensus, that he *resigned*. - at no point ever, as far as I know, has he ever said anything like “Guido van Rossum owns Python”. - again, as far as I know, he never fundraised for a collective project to then keep the money. GvR is well-known for laid-back leadership and delegation. He didn’t create python to chase popularity but to get stuff done and push the state of the art. Once it spread, he just steered the ecosystem where necessary. That’s very, very different from cranking out wrapper after wrapper just to be popular.
&gt; No, how can you own some code? The same way Microsoft owns MSDOS and Windows.
If you have “rivals” in opensource, maybe you’re playing the wrong game.
The stuntwork has actually helped me during job interviews for totally unrelated positions - it catches the interviewer's eye and generally is a good icebreaker. It's also easy to spin into something relevant to any generic job description, stressing the teamwork, responsibility, working under pressure, yada yada. I'll still take an odd contract here and there but I have more passion for learning to code now. Sounds odd to some, but then again stunts (and showbusiness in general) are much different in reality from what most people imagine - which probably can be said about most jobs.
Yes, use that one.
Is “Requests” even a trademark? Trademarks don’t work like copyright; they have to be explicitly registered and enforced. Even if it is, it’s so generic in this context that could probably be invalidated fairly easily. The code, yes. The name, probably not.
Even /r/pcj has a ban on roasting mentally ill people
ha, what an excellent way to put it
Not that it’s a bad thing, but I can’t help but feel this post is inspired by all the recent drama. Thanks all the same.
He owns it in the sense that he's responsible for enforcing the copyright. But the license did not give him much control over how the software is used.
I was referring specifically to the situation where the author of a competing library (urllib3) seems to have an antagonistic relationship with Ken Reitz. I know basically nothing about either person other than my observation that the two of them seem to have let slip a private beef into the public sphere, which is what seems to be underlying this shit. &amp;#x200B; more generally, I assume you have enough experience with humans that you don't need me to explain that even communities with ideas of openness and inclusion are not at all immune to petty interpersonal rivalry, social status competition, and all kinds of human frailty resulting in bad behavior.
You can also use a university card or any official university document within a set of criteria they have
You don't really need to have a .edu. I got the pro version as a student using my @cse.xxx.ac.in email (not xxx literally), which is an Indian university. If the form on their website has changed, just send them a polite mail. They're good people.
You don't use a butterfly or a lens and steady hands?
The fact that people behave badly is not an excuse to engage in bad behaviour, nor to condone people who do.
I'm not condoning anyone. I said in my original post "I have no opinion on this matter" and I still don't because I am not informed enough to have an opinion on this matter. &amp;#x200B; I noted that the way many commenters on social media were behaving, the types of things they were saying about people, were at the level of teenage gossip. I stand by that assessment. It's one thing to try and initiate a process for a community to address issues it has with a person. It's another thing entirely to ruthlessly talk shit as an anonymous internet troll.
What is reading if not downloading? Edit: wanted to comment on this statement.
I want to read a public sheet, without having to go through the "client_secret" hassle.
The problem is that Reitz in particular is known to use your line of thought to hide from his responsibilities. Every time he misbehaves, he just replies that there is too much negativity and unfairness towards him. The last time, he even created /r/positivepython in a (failed) attempt to remove criticism originating in /r/python. The outrage on social media exists precisely because there seems to be no way to contain this particular toxic personality. There are precious fee formal procedures to remove one from a community or hold him accountable for anything that is not direct harassment. That’s why people have jumped on Nathaniel’s post - because finally the problem is being acknowledged by insiders, and it is now even compounded by borderline embezzlement.
I'm in a similar situation. I don't know VBA but I'm in my 3rd week and I have already written some scripts for the repetitive actions in Excel using xlwings!
VS code plus Anaconda is awesome.
Depends on work culture, boss and colleagues. Watch out for those 'legacy morons' of the company. These are the folks that have lost their ability to learn anything new and keep their position mostly because of office politics.
No, cPython is the standard interpreter 99% of people are using
I got PyCharm free, it's for one year, with my Irish university email.
r/SlaveLabour
If you really want to use dictionaries and lists, there's not much to gain. Dictionaries and lists are already c data structures being operated on by c code. What specifically are you trying to accomplish? Have you done it in pure python yet?
I've never used PANDAS, but it sounds like it would work here.. I think I'll try that.
vscode &gt; pycharm
SQL Strings? If i understood that correctly then you might wanna look into some ORMs or libraries that can act as an abstraction layer for your database use. Look into SQLAlchemy. It simplifies database use for your application
That's explicitly java though, right?
Yes it does. Until you find something new to focus on there will always be times where things suck :/
In addition to what everyone else said you also need to indent everything inside the while True: block
Just watched it. Great talk. The online book he links to at the end also looks like a great resource: [https://python-patterns.guide/](https://python-patterns.guide/)
Depends on what your working on. I love where I work, and what I work on, so it is rarely boring for me. I do not believe this is the norm. Certainly it can be either horrifically boring, or unbelievably fun depending on what your actually coding
Good article. "After runners is sorted, the first 5 elements are stored in top_five_runners. Mission accomplished!" Yeah, I've done timing on enough races to know that's not true... There are male and female brackets. And five-or-six age brackets. And there might be teams; male-and-male, male-and-female, adult-and-child. There was once even a group of racers that took the wrong route, so the race director decided to split that group off into a bracket. Those racers who were lucky to not be disqualified then started arguing gender and age.
Practical Object Oriented Design in Ruby by Sandi Metz. Yeah, you're doing python but the books concepts are hugely relevant and easily translated to Python.
Wut? Its his blog. How many people do you think were actively developing on it in the 20 minutes the post was up?
That's great and all, but if he hasn't written any of the new code (the mentioned blog post said that he hasn't contributed since 2017?), then does he still have copyright over it? Its not even his work, and you can't copyright someone else's work.
Concentrating on ai and programming will probably be very interesting for a long time. Ai is so new there is a lot of growth. At some point you may find out that using it to determine if it is a dog or a cow in a picture is not really that interesting. Once the novelty and learning curve of ai wears off it will get boring. Eventually it’s really about finding an end goal that’s interesting. Definitely at first learning the tool is interesting in itself.
So childish.
&gt; If you're doing casual things that few people actually depend on, you have even less ~~excuse to stay on 2~~ reason to migrate to 3. Fixed that for you. Using Python 3 is not a sign of moral superiority, or any sort of superiority at all. I know of at least one company using an in-house application that runs on Python **1**.5, it works, it does what they need it to do, it's not exposed anywhere that security is a problem, why should they spend even 30 seconds upgrading it to Python 2 or 3 just to validate other people's choice to move to 3? I love Python 3. But this shaming of those who haven't upgraded is unnecessary. People don't need an excuse to stay on 2, they need a reason to upgrade. That reason might be new features, or support, or security upgrades, but if there's no good reason they shouldn't upgrade just for the sake of it.
&gt; Apologies for posting a draft blog post before it was ready for posting. I intend to post it, once finished. https://twitter.com/kennethreitz/status/1125491474068639744
The \`ctypes\` module or \`cffi\` (depends on your interpreter) is what you are looking for.
If it is a mobile app, use mobile-specific languages like Java, C#, etc. Kivy (Python) is not mature enough to support mobile devices. As for the server backend, you may choose Python.
Why is it an annual subscription for a software installed on your device that’s not even a SaaS service? That turns me off from buying and leads me to just sticking with something like Visual Code, SublimeText, Atom, etc
When there is no framework for accountability in place, social consequences are pretty much all we have to shut down toxic, dangerous, or unproductive people.
&gt;I’m hoping it was a draft and it’s down for a tonal polish. Looks like you were right. He said it was a draft and he intends to post it when he finishes. [https://twitter.com/kennethreitz/status/1125491474068639744](https://twitter.com/kennethreitz/status/1125491474068639744)
Totally different personalities. Guido comes across like a rational person. more laid back also a little bit shy about public photos and appears like someone with reasonable and balanced attitude. The other person appears from first impression like an attention addicted person. no harm about sharing a dozens of videos about yourself in Pyjama playing guitar on twitter or documenting your life online and recommending buying 2000-dollar pens. really to each their own but then when things like these donation things happens people start to wonder ... and it’s just normal that people find excessively self-serving and self promoting people very annoying. Jack Dorsey, Stephen wolfram, and on
My first recommendation would be [https://codingbat.com/python](https://codingbat.com/python) ; the exercises are fairly easy, and can be done and tested in the browser. &amp;#x200B; I also like [https://github.com/gregmalcolm/python\_koans](https://github.com/gregmalcolm/python_koans) and [https://exercism.io/](https://exercism.io/)
I’ve got the pro version at work and it’s truly great software. However, I just started using VS code because the debugger was spewing IronPython errors when trying to use the debugger in 3.7. I tried updating to the latest version and googled for others having the issue and the only thing I came across was a PR with a glimmer of having it fixed at the end of 2019. I have to wonder, is everyone else just using print statements or logging?