hehehe -- well if you can direct me towards some good info... me :D
&gt; Live: https://twitter.com/kingbuzzm4n/with_replies Requires login: twitter.com/login?redirect_after_login=%2Fkingbuzzm4n%2Fwith_replies "You must log in to do that"
A majority of Mac users are MacBook (Pro) owners. Apple did away with Ethernet I think with the 2013 model... you need adapters now, either to USB 2/3 for 2013+ or C for the latest version. The desktop variants still have them (I think).
I'm fairly certain they have a script they run annually that simply adds the Modem Rental Fee to all accounts lacking it. There's no dearth of reports of people who have their own modems that have to *regularly* spend hours getting it taken back off, over and over and over.
hum, i can change it to just https://twitter.com/kingbuzzm4n/ but you still wont see it because its under the "tweets with replies" section
Define "list". Now explain why your definition of "list" takes priority over Python's definition.
That's **completely** possible depending on many factors. If I stood in his shoes, I'd just call the ISP.
Because list replication `*` doesn't make copies, it replicates references to the object.
There is no tuple. The business with the tuple in /u/NowIsBetterThanNever 's post is wrong. `([ 0 ] * 5)` is not a tuple. The real reason is that `*` doesn't make a copy of the list items when it replicates them.
You're getting tripped up by the tools. Just run the code in a separate window w/ `python filename`. Get a handle on that, and then figure out how/if VS Code can make the process easier.
LOL
On a serious note, i found this tool, and i just ran it: http://i.imgur.com/B8wa8WK.png looks like my RSSI is -48 (im whyyounogetwifi_5G) that number should be closer to 0, im about 6ft from my router. Small house, have neighbors above, below, to the right and left -- im surrounded!
The name list is also used for several concrete data structures that can be used to implement abstract lists, especially linked lists.
What if you packaged it so the normal user with a twitter account could easily do this? If you get enough people doing the same thing maybe the ISP will do something about it.
The idea has crossed my mind.
My cable came with just a "modem". I had to plug in my own gateway (PFsense on an old PC) and it gets the public IP. Never had to ask for anything. I'm on Charter. There's no rental fee on their modem.
&gt; powerline https://github.com/powerline/powerline ?? 
virtualenv don't let you switch between two different python versions. 
Users already get a reply to their post, whether it's a submission or a comment. Adding in their username with the `/u/USERNAME` format ensures they get a 'username mentioned' notification as well. Here you pinged snaftyroot but it was redundant since you were already replying to his comment.
Interesting. Good catch - that is the case. You can do {1, 2, 3} to create sets a little faster, but obviously doesn't work for the empty set :)
As someone with extensive experience seeing first-hand how little traction several different multi billion dollar retail chains get when speeds at their stores aren't meeting their plan, I doubt the simple home user will get them to do anything. 
Anaconda does
El NEBA de Vodafone es una mierda, pero en realidad no se sabe hasta qué punto puede ser boicoteo de Telefónica ;) Quizá lo mejor es que te pases a Telefónica directamente.
-48dBm is a very decent signal strength, it's going to be impossible to get 0dBm (or anything higher than around -30dBm).
Tenia Movistar (telefonica) y mi novia quizo moverse con vodafone porque daban mas por menos. Si singuen asi me muevo otra ves, cual es el refran ese? lo barato sale caro.
Here's what the messages look like: https://twitter.com/kingbuzzm4n/status/891713079247081472
Powerline adapter for ethernet over power? Meaning don't use wifi I guess.
Oh really? im trying to determine noise then... maybe? cant find a way to do it programmatically but i see it in this gui: http://i.imgur.com/fYFfcZo.png could that be a cause?
Es más barato porque no tienen ancho de banda suficiente para proporcionarte. La única solución es ajo y agua :) Si tienes cobertura de Orange/Jazztel puedes pasarte a Pepephone. De otro modo, a pagar a Movistar ;)
.. tell me hes joking..
That's simply not true. The only reason you would drop from a 100 Mb wired connection to 50 Mb is that your wireless router only supports 802.11g (54 Mbps). Assuming a good connection and decent signal strength. Newer generations of WiFi can easily accommodate a 100 Mb Internet connection.
Si. probablemente, movistar :D gracias por la informacion.
So basically you used this guy's idea without giving him credit? https://www.reddit.com/r/technology/comments/43fi39/i_set_up_my_raspberry_pi_to_automatically_tweet/ Btw being on Wifi pretty much invalidates your speed issues you're reporting to your ISP. Get a USB to Ethernet adapter at least. 
Whoa there, pfsense is free software. If you have a spare old desktop laying around, throw a gigabit network card in it and you're half way there. The setup couldn't be easier. /r/pfsense
The framework used to discover the Higgs Boson (Nobel-prize in physics, 2013) was configured and steered with Python through cppyy. All that code is open source. Cppyy has been around for years in the science section of most OS distributions for Linux and Mac, just not standalone, which is what the current effort is about: removing external dependencies, easing packaging/installation, improving documentation. Whether that will get it more use, remains to be seen. But at the pace of current C++ standard changes, something like cppyy is bound to be more widely useful.
Looking at the graphs, I think the fact that the latency between your laptop and your router doesn't seem to increase when the latency between your laptop and the wider internet does would suggest that it may not be a wireless problem. However, as others have said, more reliable and scientific way of conducting this test would be to conduct it over an Ethernet connection. As for a programmatic interface to wifi signal strength data under OS X, check out this post: http://osxdaily.com/2007/01/18/airport-the-little-known-command-line-wireless-utility/. The output of `airport -I` can easily be parsed to determine noise (and RSSI) -- look at the value for 'agrCtlNoise'. The values for noise in the screenshot you posted seem to be incorrect (it's unlikely to be 0 for all of those APs). edit: oh, if you're running a recent version of OS X, you won't be able to symlink `airport` to `/usr/sbin/airport` due to SIP. Symlink to `/usr/local/bin/airport` instead.
Do you actually know what powerline Ethernet is?
Basic idea... sure, code, nope
http://imgur.com/a/woAMZ the router doesn't say so I can't validate.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/fQEKHqr.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dkxt9cw) 
Nope, dont have anything like that laying around :( im pretty minimal, macbook pro, xbox one, apple tv. Nothing i can frankenstein unfortunately. 
ethernet over power, yeah a concept i remember reading about and being exited about 15 years ago when i was still in high school. Last i heard, it sucked then, and still sucks now.
I never claimed this to be "scientific" -- i said this was a "good enough" solution i strung together giving the tools at my disposal. Heres the data you wanted: $ airport -I agrCtlRSSI: -55 agrExtRSSI: 0 agrCtlNoise: -93 agrExtNoise: 0 state: running op mode: station lastTxRate: 702 maxRate: 217 lastAssocStatus: 0 802.11 auth: open link auth: wpa2-psk BSSID: 78:94:b4:98:c:5d SSID: whyyounogetwifi_5G MCS: 5 channel: 44,80 
I never said (or even implied) that you claimed it to be scientific, I'm just saying that an ethernet connection would be better. Given that you're essentially spamming a twitter account on the basis of the output of these tests, it's a good idea to be sure of what you're measuring. WiFi can be a fickle beast and misbehave without obvious reason, whereas there are far fewer environmental factors with a direct ethernet connection to your router. Those RSSI and Noise values look healthy. RSSI of -55dBm and Noise of -93dBm give you a SNR (signal-to-noise ratio) of 38dB, which is good. Try re-running `airport -i` next time you're experiencing severe connection issues. If it remains similar, then it's likely that your issue is either to do with your modem (be that a separate physical device or the modem functionality of your router), or a problem with your line/ISPs hardware. 
Google. Third result. [rst-cheatsheet](https://github.com/ralsina/rst-cheatsheet)
Haha bien hecho! 
300mbps you have to be on 5ghz with no or little interference from neighbors And even then your device has to support that speed. I have an older MacBook that will do 5ghz but never goes above 160mbps 
FUCK
lol right now dude, my numbers haven't improved 
OK, then it seems unlikely it's a WiFi problem.
Exactly!
It works fine for most people. You can get at least 400mbps kits cheaply enough. 
Thank you for this last post and making the internet a better place.
fantastic, tell the rest of r/python, jeez these guys really like ethernet. good thing they're not telling me to setup a bnc token ring jeez
from what i see online it's touch and go. experiences vary from house to house. a blanket statement like that doesn't sound very accurate 
Fewer.
Get a raspberrypi and have it do the tweets plugged in right next to the router.
Fairly new to working with python (started two month ago) but I'm working on a script that loads the latest news article related to a stock through web scraping google news (since they don't provide an API), analyses it and emails it to the user along with valuable stats about the performance of the stock https://github.com/mtusman/Stock-Eagle
Otherwise it makes it seem like the mechanism that allows you to have sand in your vaginas
I use LastPass for stuff like this, one click and logged in. They are going the facebook route of having to login to view videos
yeah, i'll do this right after i get back from vacation. a month from now
Well, until then you should turn off this script and stop pestering your ISP. I'm all for ISPs being harassed when not living up to their promises, but with your current setup you're just making all kinds of fuss without proper due diligence. If it actually ends up being a WiFi issue, you'll just be giving the ISP more fodder against customers with real complaints.
Twitter didn't gain users in the year when it became the voice of the US Executive Branch?
This seems to be advertising, and broken advertising at that: the links in the article all point to "for%20more%20details%20about%20this%20course%20-%3E%20view%20here"
see the thread we've identified that the wifi is not the issue ;)
not all heroes wear capes...
10 bucks a month for a do everything AC router that's pretty middle of the road.
You mean like, in the environment, or all together? Because virtualenvs most certainly allow you to change Python versions. 
agreed
very interesting, so this isn't the normal default view then? (sorry I very rarely see twitter stuff on my PC) edit: I was able to view his twitter profile, but for me to see anything he has sent to others, I am forced to login. Is this normal or am I doing something wrong?
What make and model is your router?
Yes, I know that -- the key word there is "also".
Why are you being so condescending and dismissive when you admittedly don't know anything? except what you "read about" Go spend a few dollar and try it out. 
What does the internets say about wifi? 
I get 500-700mbit on my WiFi. If I only had a 100mbit Internet, I would still get 100mbit on the WiFi, so it'd not exactly correct to say that you lose 40-60% from being on WiFi. It could happen, but depends on your router and device connected of course. (I have a 1gbit connection and on WiFi I only get roughly 50-70% of it on WiFi in front of the router, but it's just a coincidence. If I had a 500mbit Internet I would get 100%)
You will be glad to know that there are modules available to interprete TGA files. &gt; PIL reads 24- and 32-bit uncompressed and run-length encoded TGA files. https://pillow.readthedocs.io/en/3.4.x/handbook/image-file-formats.html#tga &gt; pyTGA: A pure Python module to manage TGA images. https://github.com/MircoT/pyTGA 
Nice code, I guess? Too bad there's no documentation to explain what's going on.
pyenv
Thanks! I looked at pyTGA and tried to use it, but failed somehow, and realized along the way I could achieve what I wanted using regular expressions. I'll have to take another look, since I think my approach is clunky or hackish. 
Or they'll end up with an inflated user count like Facebook has been caught with multiple times. Just last year they busted up what Forbes called "The biggest ad fraud ever"... a Russian botnet that made $5 Million *a day*. And how? By faking views on paid video ads. This is a touchy group right now.
JWT==James Webb Space Telescope?
Create your virtualenvs with -p and point to the python interpreter you want, I use this when I want to switch between various versions (2.7, 3.5, pypy) ...
Teaching Python to my SIL, father, and brother. Maybe even my sister too.
The code is well organized and easy to read! Importing from deeply nested directories isn't fun ``` from patterns.creational.abstract_factory.abstract.abstract_bottle import AbstractBottle ``` Learn how to use `__init__.py` so that you can instead do: ``` from patterns import AbstractBottle ``` See https://stackoverflow.com/questions/1944569/how-do-i-write-good-correct-package-init-py-files _____ In the Python community, we try not to over-engineer the code. So we usually stick to simple functions and classes and avoid concepts such as abstract factories, which are mostly used to work around Java's shortcomings. The best way to learn to write production-quality, maintainable Python is to read and learn from your favourite open source projects. You'll see "patterns" such as [magic methods](https://conceptcoaster.com/course/python-tutorial/magic-methods-and-protocols/), which make your APIs feel like the ones provided by the standard library. Also watch Raymond Hettinger's talks on YouTube. [This one](https://www.youtube.com/watch?v=OSGv2VnC0go) is an all-time hit. 
What is the Signal to Noise Ratio? As in, what is the ratio of complaints they get versus the situations where it is the user's fault/environment/misunderstanding? 
OS Sierra has a issue with Spyder, I think, but conda works fine. Anaconda on Windows runs without any issues. You can install minconda and use conda environment system instead of virtualenv. But you don't want to use both on the same machine. I use Mac for the web development and data science with Windows. I don't know if it's a good idea to do with two computers just because you want to use two different environments as virtualenv is designed to be useful in this type of situation. 
The benefit of python is that you can build the (dynamic) web application in the practical sense. You can build your own blog using framework, and start learning to design with CSS to make it prettier later. You can build the small content management site (microframework). If you build some of those, you can basically get a job somewhere pretty easily. 
 &gt;you need adapters now Masterstroke by businessmen.
I googled the article and that's pretty crazy. Here it is for anyone interested: http://fortune.com/2016/12/20/methbot-ad-fraud/
You can't, you'd need two ethernet ports, one for WAN and one for LAN. First one onboard, second one with an expansion card. Same for WiFi.
JSON Web Token...cool auth mechanism, but, by contrast, not *as* cool :)
Go ahead and run the same command with -I argument. This will give you several details about your current connection, including the maxRate, and MCS index. The maxRate is important because it will tell you how much throughput your wifi currently supports. Keep in mind that wifi is half duplex compared to a wired connection, so if you were to run a speedtest you could expect about half of your maxRate. Another note, by the MAC address in your screenshot it looks like you have a [Sercom home wifi router](http://www.sercomm.com/contpage.aspx?langid=1&amp;type=prod3&amp;L1id=2&amp;L2id=2&amp;L3id=33&amp;Prodid=97)? That supports 3x3 5Ghz 802.11ac so I would expect the best you could get is a maxRate of 1300 (3 streams @ MCS9). /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I
Hey I didn't see this comment before I wrote mine, but it looks like you ran airport -I. Look at that maxRate. Its only 217 Mb/s. At that rate you could expect about 100 Mb/s download speed on a speed test. Thats only 1/3 of your 300 plan that you pay for. Your wifi looks to be the problem. 
They also have limited ports, so you need adapters and hubs.
Wired is how you should have most things. If you want speed, use wired. If you want security, use wired. Honestly it's probably just your shitty router.
I've used my kit in a few houses, it's nearly as good as wired networks, certainly better than wi-fi in most cases. Most of the problem is no standards, and horrible firmware.
I literally just went through this today. I am not sure if I was not successful or if the code I was trying to run failed, but I used anaconda and did it with: $ conda install -c anaconda pyqt=4.11.4 **however** it warned me that to downgrade to this it would also downgrade a ton of other packages. So I made a separate conda environment $ conda create --name test_pyqt python=2.7 and *then* ran the other command. Like I said, it seemed to work in that I didn't get a `couldn't find PyQt4` (or something like that) but the app still failed to run. And then, at that point, I stopped caring
The difference between anaconda and miniconda is how much is installed by default. Miniconda has the bare minimum of packages to get the environment stuff working, while anaconda comes with the most popular libraries by default. 
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
No the key word is especially
Find the cheerleader, save the world.
Yup, I find missed ordering miniconda as you're often able to get more recent versions of packages.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
\&gt; MacBook pro \&gt; Minimal Choose one. 
I use VSC, and its amazing. What works for me is just hitting ctrl+`, and typing "python scriptname.py". (python -m ./scriptname.py for PowerShell) I'll tab the script name to completion. I know this may not be as fast as hitting F5 and letting it run, but you might be able to find a work around. For me I just click and type in the terminal. You've probably heard that a lot of developers work in linux, and one reason is its faster with macro's and running stuff quickly, but working in windows can be very convenient for other reasons...so there is a trade off. One of them is sometimes you have to take a slightly longer route. Aside: You can change the default powershell terminal to CMD. I like using cmd because for me it feels faster. Type this into the right panel of your file -&gt; preferences -&gt; settings // Place your settings in this file to overwrite the default settings { "terminal.integrated.shell.windows": "C:\\Windows\\System32\\cmd.exe" }
&gt; The level of criminal, non-human traffic literally robbing marketers' brand-building investments is a travesty Although fraud of any kind is a terrible thing, I find it really hard to see robbing from marketers as being a 'travesty'. Impressive how extensive it is though.
Google how Amazon does it
Flask. I would first recommend going over the fundamentals of python as it is a little different than the languages you are familiar with, but after you make some practice programs you will get up to speed pretty quickly, but keep in mind python has more depth than it appears at first. After that study Flask. Flask is much easier to pick up compared to django in my opinion, and it is very powerful. You can develop so quickly in it.
There's an "x" on the top left that lets you remove the sign up/login pop up. Press it and continue reading.
Scroll up
Cool, Flask looks like what I was looking for. I consider myself an expert in Ruby but wouldn't recommend a new Rubyist start in Rails because they wouldn't be able to tell what is coming from Ruby, what is coming from Rails and what is coming from ActiveRecord. I was trying to avoid having the same experience with Django
Makes perfect sense, and I feel Flask is a great jumping off point to head into Django. Oh, and use pythonanywhere.com for hosting free account and fast setup. 
&gt; But you don't want to use both on the same machine. I have 7 versions of Python on my work computer (a minimal version of Python 2.7.8 64 bit, a 32 bit version, a 64 bit of Python 2.7.8 with lots of libraries, an Anaconda 2.7.13/3.5/3.6 version, as well as a Miniconda version of 2.7.13). It works pretty well. I just switch up my path as needed. Virtualenvs give me more trouble than they seem to be worth. Recently, I found that installing OpenCascade bricks Tkinter, which if I had PyQt or wxPython installed would be fine, but I'm trying to make a minimal version as Python imports everything regardless of whether you need it or not. I've also had trouble with virtualenvs not actually doing a clean build as it leads to to very large pyInstaller executables. That's part of why I have 7 versions.
No; such a dataset produces a volume, and you could shade voxels by the data in your tensor, but these are often very hard to interpret. [Mayavi](http://docs.enthought.com/mayavi/mayavi/) is one visualization tool in the Python ecosystem that can do this. Ideally, you want to find ways to condense or compress the information in your tensor, like visualization a set of isosurfaces in your data or looking at slices through a plane at a time.
This is posted like 20x a day on /r/learnpython. I've even submitted basically that same question a few times. Fact is you still have a lot you could work on. You probably aren't programming very well in python. Do you know how to use all the popular libraries that might make python more useful for you? I work in a lab at an HDD company so I write python to speed up analysis, create custom tests, etc. I also started a reddit related project and have been using the praw module a lot for that. So yeah, it's up to you. You can learn more general stuff. There are plenty of videos on youtube that go into more advanced topics that you don't know how to use. Can you use the 'multiprocessing' module to create subprocesses? Can you do data analysis? Have you learned numpy, matplotlib, pandas, or one of the machine learning modules? Do you know how to use decorators? Have you done a large project yet? If not then that is your next step. Basically, what are you actually learning Python for? Work on projects and you'll learn more.
Thank you for your input! I know I have much to learn and such a long way to go to say that "I know python". This really put some things into perspective, and gave me some direction.
Thanks! Why do you prefer it over Heroku or AWS?
It's just superfast to setup, and comes with a pre installed mysql db, and even the paid plans are cheap. 
why your router? take a look at your modem logs. Mine goes down multiple times a day. The logs says T3 timeout and show my modem MAC and a MAC owned by Cadant. When I looked it up it says they are a supplier of the cable industry. You can look up manufacturer info from a MAC by searching in Google for oui and the first 6 digits of the MAC. With that information, it's pretty clear there is an issue between my modem and their equipment. However each time I call they want to check my modem, router, wifi, etc. And I'm asking them if I can just send them my logs. The techs on the phone really aren't capable of troubleshooting that far.
No problem. Glad my advice was in someway useful for you. There's a lot of content with advanced python topics on YouTube. There's also the /r/dailyprogrammer subreddit that has tons of challenges from easy to hard. The quickest and best way to learn python is to actually write code that you need. That might be tough if you're still in college and don't really have specific tasks that Python could help you with. But you can do a lot with python so if your brainstorm I'm sure you can think of code you could write that would force you to learn new things. 
Start here https://www.reddit.com/r/learnpython/ 
I got an old dual core Pentium, ssd, 4gb of ram and a pair of decent pcie intel nics for my pfsense router/firewall. It works really well for me. I wrote a python script to do a daily speed test to a bunch of servers on major routes out of my country and dump to a csv. I ran it for a few months then handed over the data to my isp so they could get an idea of the speed issues I was having, which they fixed. And like you said. I ran the script on my pfsense router. My ISP, Lightwire NZ is by far the best ISP I've used. I emailed them explaining my idea for running asterisk for my home pabx. They emailed back with my u/p a bunch of config info for their sip server and gave me a static ip so it would be easier to connect via the internet :)
I feel like there's some irony in here somewhere
Qt4 was not updated to work with macOS 10.10 or higher, so I'm afraid you will have to update your app to work with Qt5/PyQt5.
Yeah, I got my pi running this for about a month now...
I would not agree. While there is definitely less initial setup with Flask it basically is all DIY where Django comes with batteries included. Not having to care about many things with Django is definitely easier.
I did it once in java using Hadoop but for python you can try: http://muricoca.github.io/crab/ If you want to build it from scratch then research about TF-IDF, Cosine Similarity etc.
This gonna be unpopular opinion but async stuff as it is now was a mistake. It can be fixed though. If we could await from any function (not only async ones) provided it was invoked (indirectly) from event loop then problems would go away. Thing is it likely is very hard or even impossible to implement as a consequence of hacking coroutines on top of generators. So only sane way to get coroutines is still using greenlets.
You can leverage your knowledge of c with python, and write c wrappers. Some programs just need the speed and memory footprint of c, but many programmers also want the flexibility and simplicity of python. C wrappers are perfect here, and learning how to do it, and then the nuances of C wrappers is a good project. Though depending on how you feel, it's less of a project than a coding solution. If that is pointedly what you don't want to do, I'd explore libraries python is particularly popular with: scikit-learn for machine learning, tensor flow for more machine learning, tweepy for interacting with twitter, praw for reddit, nltk for natural language processing. Twitter bots and reddit bots are nice and fun projects, and they offer a constant stream of data that you can use to constantly improve and upgrade your bot. Programs that make images through some process are also very fun to write. I've programmed in python for about five years, but because I've done it for bioinformatics and EE coursework, there is a lot of python I haven't touched. For example, I need to build a website with various specifications, and I'm more or less at a loss for what to do there. But over the years I've found that the best way to figure something out has been to break the problem down into small examples that I could solve by building toys for. The idea of breaking the problem down is common, but from my experience, making a little toy that is fun to 'poke' at is the key component that bridges the gap between making something work, and learning how it works. Best of luck figuring out what to do next, and if it's a fun toy, please share it here!
If only we had a recommendation system to recommend a recommendation. 
You do realise that broadband is a non guaranteed service and should never be relied on? Jesus christ people have high expectations which leads to bollocks like this! It's a luxury not a human right. No broadband connection will ever be permanently connected wifi or ethernet. 
I recommend that someone makes a recommendation system to recommend a recommendation
As far as I remember pyinstaller stores only bytecode.
I agree. What Python has are [semicoroutines](https://en.m.wikipedia.org/wiki/Coroutine). Full coroutines, like Gevent, are better. You can call an asynchronous function without having to decorate every function in the call stack so that they can all collaborate on passing control out to the event loop and back when unblocked.
Non-Mobile link: https://en.wikipedia.org/wiki/Coroutine *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^96301
A workaround would be wrapping each coroutine in a greenlet. They can even be scheduled on normal asyncio event loop and execution can be yielded from any point in callstack. See https://github.com/rokups/goroutine
lol. what i mean is that i only have once device that i need to run out with if the building catches fire.. Its a small apartment, gf and i doesn't like clutter, im over the days where i had half a ton of half broken computer parts.
I've looked for this, i see nothing of the sort. The issue is not that the connection does down, its that it gets really slow. Look at my graph, the pings go through the roof.
Happy for you, still not sold. Its mostly the money + not a guarantee. Not to mention that wont solve anything for me since i will now need a usb-to-ethernet adapter and a long cable... stop me when i start sounding crazy (ps, im on a laptop)
Try &gt; A Python 2.5, 2.6, 2.7 byte-code decompiler, written in Python 2.7 &gt; &gt; https://github.com/Mysterie/uncompyle2
Thanks! I would like to thank you with 1m of reddit gold.
I disagree with your assessment: http://i.imgur.com/7274eE9.png
Sorry i didn't expect this to blow up the way it did. I commented the shell script -- the python code evolved from 10 lines to its current state in under an hour and sorry.. that escaped me. --- update --- i've added comments.
The best advice for you is keep safe with your code. Python sometimes tend to become a bit complex. this complexity can sometimes lead to mistakes among the code and thus to errors. Errors can be detected and solved by programs such as checkmarx and others but it's always important to try to avoid them. So make sure you try to do that. Good luck.
Of course you're not going to see an impact from additional locals, aside from the extra STORE_FAST + LOAD_FAST already being dwarfed by the multiplication and attribute access, the "bench harness" has more jitter than what it's trying to measure. Do yourself a favour, if you're so intent on doing and publishing pointless microbenchmarks, at least use [`perf`](https://pypi.python.org/pypi/perf).
Good advertisement, they love it.
Pretty good Django book. It's how to create Django website with TDD http://www.obeythetestinggoat.com/pages/book.html#toc
Django is unlikely to give much experience with Python. For education I would recommend starting with [Pyramid framework](https://trypyramid.com/)
I recommend you that you choose responsible person to recommend recommendation system to recommend a recommendation.
Thanks for my first gold! Check out [Python guide](http://docs.python-guide.org/en/latest/) and examples on [Rosetta Code](https://rosettacode.org/wiki/Closest-pair_problem#Python) too. (Notice the clever use of complex numbers to represent points in a plane). Learning to write idiomatic code in a new language does take practise. In the initial stages, it's OK to not follow all the best practices. Instead, focus on completing your project. Critique your own code once every few days, and you'll be fine! 
[Flask - This guy is good](https://pythonprogramming.net/practical-flask-introduction/)
Haven't ruled it out. Its the one they gave me.
check https://www.raspberrypi.org/magpi/ its a raspberry pi projects magazine. I use it when i need inspiration 
You can easily [make faceted plots with Xarray](http://xarray.pydata.org/en/stable/plotting.html#faceting) (or manually with Matplotlib I guess) for smallish *n* in the third and fourth dimensions. The usual problem is interpretation, and therefore summarising and reducing the dimensionality and resolution to something reasonable.
I have lots of stuff I'm in the middle of that need help: [A python IDE for working with data.](https://github.com/christopherjenness/pyplotter) Although, this isn't written in python. ELISP is really simple though. I spent ~8 hours learning it before diving into this and had very few problems. [A machine learning library.](https://github.com/christopherjenness/ML-lib). This is pretty comprehensive, but by no means complete. Also, needs testing... [A repository for NBA analytics.](https://github.com/christopherjenness/NBA-analytics) Any PRs that analyze the NBA are definitely excepted. [I just started analyzing the Seinfeld scripts.](https://github.com/christopherjenness/seinfeld-analysis). I wrote the scrapers, so any analysis you have on the data would be appreciated. [A library for working with NBA player tracking data.](https://github.com/christopherjenness/NBA-player-movement) This has all sorts of problems. If you're interested in helping, send me a message and we can talk about them. [This is an implementation of an algorithm for determining the accuracy of unsupervised clustering.](https://github.com/christopherjenness/DBCV) There are lots of features I still want to add, but haven't gotten around to.
&gt; I agree. What Python has are semicoroutines. Maybe I'm a bit pedantic, but I think that Python's terminology is pretty bad, but not because they call semi-coroutines coroutines. I think the issue is that they conflate asynchronous computations with coroutines which historically wasn't the case. Without rehashing my previous complaints, I'll link one of my old emails to the async-sig mailing list: https://www.mail-archive.com/async-sig@python.org/msg00155.html
Great idea, I'll give it a look. 
These are right up my street, I have never done an IDE but will definetly have a look. Thanks for all the links I'll have a look and see how I can contribute. 
Just a guess: it is compiled with gcc, which is very good at optimizing code. A bit surprising if a Microsoft compiler is that much slower, I would have expected only a marginal difference. But this is my best guess. 
If you want to measure the stability of the line, use a cable. Wifi is notoriously unstable. Car driving by, neighbor using microwave, cat walking around, wireless phone, heck even wind moving trees outside can indirectly affect it. 
you cannot have identified that the wifi is not the issue if you haven't connected via cable instead and verified that the problem is still there
*you're
Actually I have pointed out that there are two instructions `STORE_FAST` and `LOAD_FAST` in this [issue](https://github.com/universe-proton/universe-topology/issues/6), and there are almost running at the same speed. Maybe I should use a more precision benchmark tool.
I don't think psf builds from the website have all the optimisations on in case of edge case bugs. I can't read your post due to formatting so I can't tell what your running, so probably an optimised build. I noticed that Ubuntu's build by Ubuntu is faster in an Ubuntu VM on a Mac, then native Mac build from psf. So the compiler optimisation gain is more than the overhead for running a VM.
Oh man, this is actually temptingly nice: def f(string): frame = sys._getframe(1) return string.format(**frame.f_locals) Is there any other, non-CPython-specific way to get the locals of the caller?
&gt; Actually I have pointed out that there are two instructions STORE_FAST and LOAD_FAST in this issue You're missing my point. Of course there are additional STORE_FAST and LOAD_FAST: you're storing stuff in a local then immediately getting it back out, CPython only has a relatively simple peepcode optimiser and doesn't generally elide store/load sequences. What I'm saying is that these are some of the fastest opcodes you'll get in CPython, they're completely swamped in stuff that's more expensive than them, so much so that the *jitter* (noise deviation) of your test harness is an order of magnitude larger than these opcodes's costs, we're talking single-digit *nano*seconds here.
There are many developers who came to Python through learning Django. Nowadays there are several good tutorials over the internet. Here is probably the best ones. - Official tutorial https://docs.djangoproject.com/en/1.11/intro/tutorial01/ - Django Girls https://tutorial.djangogirls.org/en/ - Mozilla https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django
Added some formatting, but the important part is: - Native python.exe: 200 410 pystones/second - WSL python binary: 299 065 pystones/second The WSL python was compiled by me as there is no Python 2.7.13 in APT yet.
**Unittests / TTD are your best friend** Source: I am working on a large commercial project in perl. While perl extensions in c are a lot less pleasant, than c extensions in python, my recommendation applies to python as well. If you want to rewrite a piece of code, your first step should be to make sure it is well tested.
It's correct that coroutines mean "yield to", and that asynchronous I/O is just one of the things that you can do with them. It is not true that Python has had them since 2.x. It's never had a "yield to", only a "yield" that yields to the caller. Unless we're talking about greenlet/Stackless etc. I do not think it is necessarily true that Python is requiring that its async/await system is purely for I/O. I'm quite interested in using this for games. With coroutines (of whatever sort) you can write very natural game logic like async def shoot_missile(x, y): missile = Missile() await missile.move_to(x, y, SPEED) await missile.play_anim(explosion) missile.remove()
I'm teaching my son Python using the Treehouse Python Basics course. I highly recommend it, if you're a beginner to programming.
I do not have kids yet. but i keep this question in mind "How should be the best way to teach him to code someday?" 
I'm guessing because `gcc` is a better compiler than whatever Microsoft compiler was used for Python. It's not surprising, `gcc` is quite good. If you want speed, use Linux. No I'm not circlejerking. It *is* faster in many things. Not all. But many.
It takes a while to index Anaconda, as it ships with the universe. Once indexing is finished, everything should work fine.
I think raw sockets are too low-level for a homework project you seem to have. Google something like `multiprocessing python`, there are some convenient interprocess communication utilitites.
Can you help me on how to switch from pyqt4 to 5? I uploaded the code [here](https://pastebin.com/eek6E08G), or at least give me some guidelines 
Try again with Python 3.6, that uses a much more recent version of MSVC. See https://wiki.python.org/moin/WindowsCompilers for a table matching Visual Studio versions to Python versions.
Damn, it's not supposed to be that complicated
Using python for a bunch of interconnected services and algorithms. Using C/C++ for things that must be fast. Using Cython in some cases, also. Advice: write tests as you go or you will suffer the curse of run time dynamism. I lament not having a compiler to protect me against stupid type errors - and before anyone says 'buh-but type annotations!', no, this is a legacy code base in 2.x and management would never permit the time for a 3.x rewrite on this project. Besides, annotations only get you so far! I would also suggest you set up pylint as a precommit hook so you are forced to confront any stylistic issues or obvious bugs as you go. And my final advice? Maybe consider a different language if you are planning a big project. I know I would, knowing what I do now. Kotlin is what I am currently loving, but nothing beats python for simplicity and quick scripts/elegance of expression.
The Microsoft compiler is not *terrible*, but it's first and foremost a C++ compiler not a C compiler, furthermore MSC v.1500 is Visual C++ 2008 (obviously released in 2007) so GCC 5.4 is 9 years "more modern", the "current" compiler at the time MSC v.1500 was released was GCC 4.2.2. Finally as /u/itsmoppy noted the "official" build would be a generic i686 one, the on-device build might enable arch-specific instructions &amp; more optimisations.
Have any examples where it isn't faster (where both platforms are supported)? I haven't used Windows as my default OS in years and really can't see a use case outside of their family of languages for anything other than video games.
Because binary builds are ALWAYS less effective than custom build for a known architecture. All so-called x86 programs (for Windows/Linux whatever) are build for i386 (Intel i80386 arch from 1985), i586 (Intel Pentium from 1993) or i686 (Intel Pentium Pro from 1995). Because binary build must work on ALL 32-bit CPUs which means it's made for the oldest and the crappiest ones. So basically your CPU with this program will work like an ancient i80386, but at 3GHz and cool branch predictor and data prefetcher, but yet... The same for x86_64 or amd64 builds. They are made with the first 64-bit CPU in mind: AMD Athlon 64 (from 2003). Thar's why Gentoo is so powerful: you can build your entire Linux distribution with ALL the bells and whistles your CPU supports and optimized for your specific CPU model. P.S. When you see some "SSE" or "dual-core" thing in program requirements it's a good sign: it means it was built at least for something like Intel Core 2 Duo from 2006
Does anyone know why the VideoCapture get function would return zeroes for most properties? Such as the FPS rate and frames count and so on? I'm able to open the Video file and perform other calculations with it (such as track objects etc) but only when I hard code the frames count. Get returns zeroes for pretty much anything but the height and width of the Video. Any clue of what could be going on there? I tried googling It, but to no avail.
It might be that Microsoft compiler don't support computed goto which can make a huge difference in an interpreter. I believe other specialties of gcc are also used which also could make difference. I believe the main reason is that the main part developers has primary target unixes and so target to gcc or clang. So they use gcc and clang idioms when possible. It could exists some idioms which makes Visual C code faster but there is not enough windows coder amoung core python developer to use it.
I'd also like seeing this on github. The reasons are obviouse. And i'd also give it a try as im intrested in the topic in general. 
It has nothing to do with compilers. The author said he BUILT python for WSL from source. It's the difference between generic binary build and custom optimized build.
X11 is slower than whatever windows uses, there is a latency inherent to the networking capable X11. There are a few very specific edge cases where DIO is faster on NT than on Linux, they exist because MS optimised the fuck out of it to make MSSQL faster. In most cases XFS amd ext4 are faster, but not all.
&gt; The Microsoft compiler is not *terrible* No, of course not. MS has fine engineers working on it, I'm sure. It's just that `gcc` is better. But it's probably the best there is, except maybe for `clang`, I don't know.
It doesn't say, it's the default one given by Hyperoptic (UK)
Mistake number 1 is is using theirs
&gt; It might be that Microsoft compiler don't support computed goto [It didn't as of two years ago](http://eli.thegreenplace.net/2012/07/12/computed-goto-for-efficient-dispatch-tables#id4) &gt; To the best of my knowledge, it's supported by other major compilers such as ICC and Clang, but not by Visual C++. and that's unlikely to have changed since it's a GCC extension of C. (caveat for the quote's correctness, I believe ICC only supports computed gotos on Linux as it strives for compatibility with each platform's primary compiler).
Reference: https://fun.irq.dk/funroll-loops.org/
Python C interface is easish to learn and works very well if your goal is to wrap code with a high level interface. Creating Python objects backed by C or C++ code is simple and painless. I don't have experience with other languages. Process interaction maybe another option depending on your usecase.
i don't want to spend 300 on an asus, besides look at my stats it's more than adequate for 300mbs
Ah gevent... Let's you write non blocking async code that looks like blocking threaded code like magic. Otoh I've had to spend an inordinate amount of time staring at the source.
Messing around with a Blinkstick(blinkstick.com), they have a python interface. Any fun API's you guys can suggest playing with? I'm currently checking my gmail inbox, and it will blink red if there's unread email which is pretty cool. But surely there can be more fun things to do!
I know that. Have been using Gentoo for 5 years. And yes, USE flags and the ability to have multiple versions of the same library are killers. But with 1.5 difference in Python benchmark speed if built from source you can't say optimisation doesn't matter
It depends a lot on the nature of the performance critical parts. The easiest are number crunching tasks where Python just handles some parameters and moves around the input/output blobs and the entire inner loop is not in Python. The more the non-Python code needs to access receive Python data structures or is called frequently in inner loops written in Python it becomes more complex and the return on performance diminishes. Can you tell us a bit more about the application? Where you expect the Python/non-Python boundary to pass? How frequently do you expect this boundary to be crossed and what baggage is carried across it?
you should probably try to ask this question in a new thread.. id don't know OpenCV but have you checked if all requirements are installed correctly?
As far as I've been able to find, yes. I might try a new thread, thanks.
You need to change from PyQt4 import QtGui, QtCore to from PyQt5 import QtWidgets, QtCore Then you need to replace calls to `QtGui` for `QtWidgets`. That should most of the job.
This is really a question of semantics. You can basically turn semi-coroutines into full coroutines by yielding to the caller and then having that caller send to the next coroutine (`send()` has been a method of generators since before 2.7: https://www.python.org/dev/peps/pep-0342/). Maybe that extra step is something you don't like, but it really isn't that bad. I personally feel that semi-coroutines are enough for me. But that's not really my point. My point is just that historically scheduling and concurrency were a bit separate from coroutines. I think that if python would have used terminology like async functions or something, it would have been clearer. edit: And yeah async/await is basically made to order for any sort of event-driven setup where the events are relatively spread out timewise. They definitely can be used for much more than IO (though that is the natural example you see). Edit2: I seriously got downvoted for this? I would be extremely curious to understand the reasoning of the that anonymous Redditor
+1 for Flask. Also, check out http://testdriven.io/. It's meant for the advanced beginner. 
Try the DjangoGirls tutorial, located [here](https://tutorial.djangogirls.org/en/) I've done some mentoring with this tutorial so let me know if you have any questions. 
Look at my latest graphs: https://github.com/kingbuzzman/vodafone_annoy Ive added noise, right now its not great
Ive added more data and plotted it: https://github.com/kingbuzzman/vodafone_annoy what do you think its the issue? 
I saw, it looks good! You may as well remove the 'Ext *' variables from your WiFi signal strength plot, as I think they're fixed at 0 (aren't actually used). I don't know what the problem is, but don't think it's your WiFi connection. I suspect it's either a problem with the router, a problem with your line, or a problem with your ISPs equipment. Does restarting your router fix the problem (even briefly?), or does it make no difference? 
0 difference :( ive tried all combinations, tried restarting the wifi on the mac, removing all the devices on the network, restarting the connection on the router, restarting the router, changed the channel im using the in the router.... nothing Yeah i'll remove the ext variables they are 0-ed out
In my experience GCC still edges out Clang. The difference is small, though, and Clang has a lot of neat toys.
Have you contacted your ISP through means other than Twitter? Speaking to someone directly might get you some better support... perhaps... You do have Microfilters installed between your phones/router and your phone sockets, yes? 
✨🍰✨
✨🍰✨
✨🍰✨
✨🍰✨
✨🍰✨
✨🍰✨
✨🍰✨
✨🍰✨
✨🍰✨
✨🍰✨
I used to work as a sysadmin for a big academic institution. One of the professors had a few Gentoo machines, and naturally I was responsible for maintaining them. He insisted that these were the highest-performance systems using the highest-performance distribution, and he refused to use any others for his work. That's why he used three eight-year-old Dell Precision towers instead of our HPC cluster running RHEL.
Part of me was hoping this was a rhetorical question and some explaining would be presented when i clicked the link. I was wrong.
This is fiber, i got no phone line, the phone line comes out of my fiber modem box -- which i dont use at all, there is nothing connected to it. Ive called them (last) monday and again wednesday, they said they would send someone... im still waiting.
Ahhh, I see! Sorry, didn't realise it was fibre to the home. I don't think there's that much you can do, really, other than to chase them up again and get a solid date from them for an engineer to turn up :(
It all depends on what you're building. If you want to throw together a CRUD app with users and user driven content and everything is in a RDBMS, that plays very well to Django's strengths. On the other hand, if you need to do stuff like LDAP auth or work with a non-RDBMS, ten you need to start thinking outside the box and Django becomes more of a hindrance and tools like Flask or Pyramid or even aiohttp start becoming more attractive. It also depends on the developer as well. I move very fast with Flask because I'm familiar with it as it's a very small code base - and diving into werkzeug or jinja2 is uncommon for me. Conversly, Django is a huge code base that wants to do all the things (including supporting `mod_python` last time I needed to dive into its guts). 
Would newspaper help? https://github.com/codelucas/newspaper/
I'm aware of newspaper and made use of it to download the article. I'm also aware that newspaper has a summary option that analyses the article for you, however, I wanted to create my own summary function for educational purposes. 
Microsoft's thread-evented socket subsystem seems to generally be more performant than linux' check-for-ready one, according to the stackless python guy.
Yeah, i hear you, hey thanks a bunch! -- you weren't condescending, very helpful, nor at any point did you call me an idiot for using wifi. you get a gold star in my book.
No worries. Let us know what they say when (if?) an engineer comes out. 
Wow I didnt know that, thanks for sharing! So if I were to compile my own build for any language, everything would be faster? If I turn my script into an exe after building it myself, will that exe only run on my computer and those faster? Or will it run an any of them.
hehe will do ;)
I will post it today 
Your code makes no sense. Your function always calls yourself recursively, with no base case. You're basically doing this: def the_flying_circus(): the_flying_circus() return True Making it loop forever. Also, even if you make it _not_ loop forever, all branches in your function still return `True`, which also makes no sense since you're comparing it to `5` later. Also, post questions in /r/learnpython next time.
Wagtail and MongoDB?
Then this build will work faster on your computer. By script you mean Python script? You can't turn it into exe really. All those "exe" made from Python programs actually contain full-featured Python interpreter inside and your Python script, compiled to bytecode (as in .pyc files). If you compile for your CPU precisely than this code will not work on CPU of other families. So they still ship programs compiled for i80386 for reason. Python is cross-platform language and compiling a binary for specific CPU model is absolutely not. What is good about Python is that people can run it in default binary interpreter or build an optimized interpreter for their CPU architecture you didn't even hear about (like Russian Elbrus https://en.wikipedia.org/wiki/Elbrus-8S) or run it in PyPy, or IronPython, or whatever. So the fact that Python programs are the sources themselves is very cool and open-source compliant
We have a big software product that we ship on both windows and linux. We use CL (MSVC) in Windows and GCC in Linux. Performance leadership between the two varies from release to release, but they're generally within one or two percent of each other. In their current versions, GCC looks a little better at math heavy code, while CL looks a little better at branch heavy code.
One thing that's worth noting is that WSL is a _subsystem_, just like Win32 is a subsystem: you're actually bypassing parts of normal Windows, and using just the underlying NT kernel + the Linux interface on top of it, instead of the usual Win32 interface. This includes what UNIX people would call the C library, which includes things like memory allocation. It's entirely possible that the glibc memory allocator is algorithmically faster or just more efficient (talks to the OS less often and maintains a larger pool of memory) than the Windows one. I think you'd need to find some sort of profiling tool to get a real answer. [Windows Performance Toolkit](https://docs.microsoft.com/en-us/windows-hardware/test/wpt/) sounds like the right place to start, and _probably_ it's capable of tracing WSL processes. See if you can generate flamegraphs of the two and see where things are slower in the Windows version.
Sure, but there are [other ways](https://www.python.org/dev/peps/pep-0511/) to skin that cat now. 🙂
I'm just going to put this out there for you. Your statement is invalid. There are a number of issues with your test. The first of which is you have not run your tests for long enough. The second big one is that you are testing how fast `test.pystone` runs and `sys.version` can print the version number out. They both seem like things that don't matter in a production app. I can't think of a time I needed to run `test.pystone` or print the version in a production app.
Ok, in that screenshot the txrate is great! But in your previous comment it was only 217. What is causing your txrate to drop intermittently?
Right, the default view is tweets that aren't directed at anyone in particular. Tweets like "@somebody, I'm addressing you directly" are filtered from the profile feed as well as follower's feeds (if they don't also follow @somebody). If you try to see a feed of a person's tweets addressed directly to people, Twitter makes you log in for whatever reasons. (You're not doing anything wrong besides being curious about tweets without using a Twitter account, jeez whatever were you thinking.) Sometimes people will deliberately tweet like ".@somebody, I'm talking to you but I want everyone to see it" -- note the `.` before the `@`, to ensure it shows up on that person's default profile feed and on their follower's feeds too. 
Damn right ! API Documentation and code comments too 👌
Also, generators (and Pythonic comprehension notations), context managers, and coroutines if you're looking to build ETL pipelines.
Ubuntu's python package use PGO (some overview: https://www.activestate.com/blog/2014/06/python-performance-boost-using-profile-guided-optimization) - I suspect Windows builds don't (2.7 is ancient). Also, pystones don't necessarily correlate to real world performance.
The python opencv module is a very thin wrapper around opencv, you deal with the C functions almost directly. What's happening is probably that the driver of the device you're using doesn't support changing those parameters via the API that opencv's using (DirectShow?), but opencv doesn't propagate the error to an exception and just returns 0. Also note that not all combinations of parameters work, you might be restricted to a set.
I found that a version of Python I built for the AMD FX-8320 scored on average about 17% faster on the [Python Performance Benchmark Suite](http://pyperformance.readthedocs.io/) than the version included in my Linux distribution's repository.
In addition, there are simply more Python core developers using Linux which means the Linux version of cpython gets more attention (and bugfixes).
Wow that is shocking. Can you describe the changes that accounted for the difference?
I'm working in such a project (large commercial Python project with a big codebase, 10+ years in development). Mainly, it works well, but you have to be pretty disciplined about unit-tests (we used unittest extensively and migrated to pytest recently). We're currently using boost::python for C++ bindings (basically, whenever you have to iterate any big array you *need* to go to a lower level language), although currently we'd probably use pybind11 as it seems to produce much smaller binaries with a faster compilation.
Out of curiosity, can you run the same test on your machine under native GNU/Linux?
Hmm, but was it faster? :) Edit: asking, because I have little (3y) experience with gentoo (love it) and it sounds like you either mean that "of course the prof's Dells lost" or "yes his old ass gentoo box dusted our mini-rhel cluster".
&gt; including supporting mod_python last time I needed to dive into its guts According to my teacher, mod_python support hasn't been in Django for years.
Thanks for the article, I have to say that "protect" might be misleading: decompling is not a hard task, by simply compiling the code you're not adding a security layer, you just changed the code so the machine can read it faster. If you're consered about your code base, compiling it won't help much.
It seems like `maxRate: 217` from `airport -I` is fixed. that number doesnt move. shame.. ps. have you been seeing my up to date data? noise/signal have stayed constant, upload/download have gone for a wild ride.
Bro. What's your sample size.
Looks like one very nice boon of using this technique is it partly automates the compilation of all the modules in a directory, something Cython doesn't currently handle very elegantly. Cython's really only designed to optimize one module at a time.
Great stuff as always. It could be noted that if you're not interested in specialized datetime grouping, you can just use the ``.dt.&lt;date&gt;`` functinality, e.g.: &gt;&gt;&gt; import pandas as pd &gt;&gt;&gt; df = pd.DataFrame({'a': pd.date_range('2010-01-01', '2010-12-31'), 'b': range(365)}) &gt;&gt;&gt; df.groupby(df.a.dt.month).b.count() a 1 31 2 28 3 31 4 30 5 31 6 30 7 31 8 31 9 30 10 31 11 30 12 31 Name: b, dtype: int64 
The most straightforward solution would be to use a recursive algorithm. It goes through each item on the list. If that item has the key `answer_string` and is empty, make it non-empty. If it is a dict, call the function again with that dict as the input. Otherwise continue on.
Ah. Good point. Thanks for pointing that out.
A nested comprehension would look something like this. `{outer_k: {inner_k: inner_v for inner_k, inner_v in outer_v.items()} for outer_k, outer_v in outer_dict.items()}` If you have to go any deeper than something like that readability is going to be an issue and I would suggest something else.
Clang is a better compiler when developing (-Weverything -Werror catches so many things each update). GCC is probably the better release compiler. 
If you want to write extensions for Python, or accelerate Python operations generally, learn C (or Cython, which makes it possible to write C by way of a Python sub-dialect).
That's basically how I use it.
How do you tell a block indent from a multi-line function call if you indent both the same? Eg: `if multiline_func():` the func parms and if body aren't distinct.
It was actually the client who requested Cython, and we delivered. How would you go about decompiling a .so compiled from C that was produced by Cython into something readable? It's difficult to find information about this.
You can use type comments in 2.x and get static type checks. You don't need a straight rewrite ever, you can transition gradually by making a 2+3 library and running the tests under both. Granted this is harder with extensions but you're not stuck forever
`pylint` suggests the following indentation: if multiline_function_call( # indent parameters twice to differentiate param1, param2, param3, ): # body code here 
Sorry I thought you were the author. In his readme he says they indent the same level (to be exact, it indents multi line args 1 level more than the function - which is the same as a block).
Yes, I am the author. The tool mostly aims to correct the non-conforming style and doesn't attempt to do differentiating indentation (yet). Note that it will not alter any indentation unless it is unhugging parentheses -- you're free to indent as much or as little as you'd like (to appease tools like `pylint` / `pycodestyle`).
THIS IS THE MOST EFFICIENT WAY TO DO THIS JOB WITH THESE MACHINES.
I like the idea of `gofmt`-style formatters. This is closer to that, but we need a whole system for Python, ala JavaScript's [prettier](http://prettier.github.io/prettier/).
I have actually been doing the comment thing via pycharm, which makes it quite painless to add. Doesn't solve the problem though: it is an inherent drawback to using python. As mentioned, this code is going no place cause they ain't gonna pay me to be refactoring and redoing the platform for it to move to V3. I still love python, I just won't be preferencing it for big projects anymore..!
I agree :) I've been working on trying to make this better and better. The core problem is python's ast doesn't provide enough information to make it rewritable (`lib2to3` does, but it is horribly buggy). So far I've managed to make a [roundtrip tokenizer](https://github.com/asottile/tokenize-rt) which is enough to power this and [pyupgrade](https://github.com/asottile/pyupgrade) (another similar rewriting tool).
Thanks !
Don't need 300 oh an Asus. Spend 50 and put tomato, or open wrt on there. The cheap consumer firm ware all sucks. So buy okay hardware and get good firmware. Don't need ubiquity or pfsense for good quality Networking in the house.
A little off topic but what's the big deal with Go right now? I've seen a few top 10/5 list that have Go climbing the ranks pretty quickly.
Nice! I love how the Python fans are always trying to get that edge in sports. You don't really see that in other communities besides R.
Similar path, similar situation... ultimately came to the conclusion that *yes*, if all you're comfortable with is Python, you *are* artificially limiting yourself. I too love Python, and though I did work with other languages previously, I've found Python's versatility to be a compelling argument for not practicing and learning a breadth of languages when there was so much depth available in one... but. And the but is that Python really isn't that unlimited. It's actually terrible for systems work, silos you into a way of thinking that is often sloppy if not fundamentally flawed, and is at best a a bit of a hack for front end web work, since browsers don't interpret it directly. It's got a distribution model that's all over the place, though there's certainly been improvements, and while there are ways of improving its performance, they're always at the cost of learning a second language anyway. Almost always these only become a serious issue as you move into the fringe edges of Python's core strengths, but once you're there you start to realize that there really are easier and better alternatives out there. Those fringe edges where Python isn't really all that great keep getting filled by interesting developments in other languages. Web front end work suddenly has TypeScript, Elm, Emscripten... in systems there's Rust, for servers there's Go, and for just simply thinking differently about everything you do, there's Haskell. The more I delve into these the more I realize that I don't like looking at everything as a nail, even if Python is a hell of a good hammer.
Thank you, that is a great answer
Part of the reason for this is that on the WSL, Python takes advantage of "Computed Gotos" to optimize the interpreter inner loop. Basically, the bytecode Python executes branches a lot. Computed gotos allow the processor to predict the opcode (like add) Python will execute. You can run `python -c "import sysconfig;print(sysconfig.get_config_var('USE_COMPUTED_GOTOS'))"` to find out if your Python uses it (try it in bash, it should print 1). This is a feature of GCC, the C compiler Python is compiled with on Linux. On Windows, Python cannot use this trick, thus the inner loop of the interpreter runs slower. You can read more about computed gotos in the main interpreter loop here: https://github.com/python/cpython/blob/master/Python/ceval.c#L714 and https://gcc.gnu.org/onlinedocs/gcc/Labels-as-Values.html
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [python/cpython/.../**ceval.c#L714** (master → e4c06bc)](https://github.com/python/cpython/blob/e4c06bcca358c6dcb6393a75a1589ff6a2d45cde/Python/ceval.c#L714) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dkzggmx.)^.
While I'm definitely interested in the inner working of python, I'm not sure that I wanna pursue it, or that learning C is an optimal career choice these days. Am I wrong to assume that? 
I tried with 3.5 (which uses the same MSVC version as 3.6) and it was still faster than on Windows. See my theory as to the difference https://www.reddit.com/r/Python/comments/6qndr6/why_is_python_50_faster_under_windows_subsystem/dkzgggb/
&gt; might enable arch-specific instructions &amp; more optimisations. It does see my comment https://www.reddit.com/r/Python/comments/6qndr6/why_is_python_50_faster_under_windows_subsystem/dkzgggb/
If you want a database engine that's lightweight and can sit locally, use SQLIite to layer in SQL querying. If you need a scalable database engine that sits on a server, don't
I personally think writing extensions in C++ is much nicer than C though it takes much longer to become proficient. I don't really see knowing C++ as being bad for your career in anyway.
Yapf is worth a look, but does not add anything beyond whitespace afaik. 
There is a subreddit, learnpython
I love these sorts of posts. Fewer memes and more code comments would have made this stronger though.
Would it not make sense to persist this data in a db? I started my career as a dba and grew from there, interested in your reasoning on this subject!
I have an actual fiber line coming into my house, not an ethernet cable. I need both a modem AND a router. If im going to go cheap on this -- might as well keep what i have.
If you could only look at my graphs, breathe, and get out of your comfort zone maybe we can solve this together. I've explained i cant do wired at the moment, there is hardware im missing because you can either blame apple or just technology as a whole betting big on 5ghz dual broadband routers that offer the same speeds. I don't want to argue without about who has the bigger dick; you know my problem, you see my live data, try to solve it with what you have available to you, dont be that guy on the internet.
Nice post, I enjoyed reading it! I feel I would prefer to read it in parts, focusing each time on a different topic(celery/infrastructure etc). Anyway, really good reading.
Its not the macs fault... look at my graphs, all of this is being gathered from the mac.
Yeah, it tried to cover too much stuff in too few words. Would prefer more depth.
First, i have an unobstructed view of the router, also, im 6 ft away IF that. Please look at my graphs, what your saying doesnt make any sense -- in my case
You should work on varying your sentence structure. Not sure if you're a native English speaker, but this piece feels choppy.
Looks cool since I have a lot of boilerplate however... I can tell you develop on a Mac, put that in gitignore.
What are you interested in? What is your skillset (e.g. Python code, C code, algorithms, etc)? What is your proficiency level? You should start with the open source project you use the most. Off the top of my head: List of things that need to be done in Twisted: http://twistedmatrix.com/trac/report List of bugs to be fixed in Celery: https://github.com/celery/celery/issues?q=is%3Aopen+is%3Aissue+label%3A%22Issue+Type%3A+Bug%22 I need someone to fix this: https://bugs.python.org/issue1230540 The rest of the open Python core issues: https://bugs.python.org/issue?%40search_text=&amp;ignore=file%3Acontent&amp;title=&amp;%40columns=title&amp;id=&amp;%40columns=id&amp;stage=3&amp;creation=&amp;creator=&amp;activity=&amp;%40columns=activity&amp;%40sort=activity&amp;actor=&amp;nosy=&amp;type=&amp;components=&amp;versions=&amp;dependencies=&amp;assignee=&amp;keywords=&amp;priority=&amp;status=1&amp;%40columns=status&amp;resolution=&amp;nosy_count=&amp;message_count=&amp;%40group=&amp;%40pagesize=50&amp;%40startwith=0&amp;%40sortdir=on&amp;%40action=search
The most important part of big projects in any software is ARCHITECTURE. In terms of real-physical-world analogy, I find software engineering to be most similar to carpentry. Low barrier to entry, fairly malleable, good results with poor tools is possible, great tools don't guarantee great results, etc. Few things you build will last 20 years without huge overhauls. You can solve smaller problems and make toys and jigs and other bench tools with improvised approach. However, you really can't just slap together boards to build a roller-coaster. If you put appropriate thought to modules, tiers, clear roles and responsibilities for each component, loose coupling, encapsulation, etc., then a big project is really a bunch of little independent projects. Some of those might lean on tighter language routines for performance, and it won't affect the rest. Unit tests can keep up with development. More developers can collaborate without conflict as the interfaces are purpose-driven. 
&gt;It's entirely possible that the glibc memory allocator is algorithmically faster or just more efficient (talks to the OS less often and maintains a larger pool of memory) than the Windows one. *It's all probably faster.*
Delving into Django's guts isn't something I do very often, it's possible I'm confusing a more recent time with an older time and came across it. I definitely remember seeing different implementations for wsgi and mod_python at some point though.
Clang does one thing better, compiler error messages. GCC and it's backend have been the target of compiler and optimization researchers for decades and it is damned hard to beat because of it.
Ok, I just compiled Python 3.6.2 for "generic" and optimized for the "piledriver " architecture my CPU has. Here are the results of the benchmarks. It's not quite the 17% I remember from the last time I compiled Python, but that was a different version and I don't know how the Python I was comparing it to then was compiled.... https://paste.opensuse.org/34329243 The bulldozer and piledriver architectures of AMD chips have cores with two integer computing units but one instruction decoder, etc. These cores report to the OS as two cores though. The architecture is a bit different from other CPUs, which likely explains most of the difference in a tuned vs. generic compile. In this case, Python was also compiled with [profile-guided optimization](https://en.wikipedia.org/wiki/Profile-guided_optimization) which in this case first compiles an instrumented version of Python and then runs 405 (!!!) micro-benchmarks. The compiler can then take this data and use the actual performance instead of heuristics to make optimization decisions when it compiles the code again. I don't have a benchmark at the moment to see how much difference PGO alone made, but that would be interesting.
Still, very impressive results, far better than I would have imagined. Very interesting.
i see. sorry. I'll admit i didn't open the Twitter. So are you showing your current bandwidth consumed? because total bandwidth would be the speed test plus any bandwidth being used. Obviously if you have 5 devices watching videos you aren't going to get 300 mbps. I don't think any isp will guarantee the latency. 400 ms pings is horrible though. And I would complain about that too. This is really why net neutrality and making ISPs operate as a title 2 utility is a good idea. That should have some standards to meet. Right now I don't think they guarantee much. 
I like using Visual Studio Code.
Sublime Text 3
I like PyCharm 
I think this guy was tilted. Weirdly aggressive responses to random internet people trying to help. Insecure about code or tilted not sure. We all start somewhere though.
I'm on the ops side of things rather than dev, but I think the reason Go is gaining exposure is because its performance surpasses Python and it ships a binary meaning you don't have to worry about dependencies as much as you would with a language like Python.
Vim.
I'm not stateside at the moment, you're looking at a spanish ISP. Yes 400ms ping is the worse, i call the the bastards say they'll send someone and dont.
Solid Flask guide: https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world
A text editor. Usually visual studio code, but anything will work. 
You will get an entry level local recent grad or an H1B.
Just to complete the gamut of text editors: emacs and anaconda-mode.
Atom
`yapf` is nice, but it's `lib2to3` based so it has all the same bugs -- `autopep8` does a similar job too (without `lib2to3`) but again only does whitespace
The standard way to do this is with setuptools packages and pkg_resources, but it is the second answer here. https://stackoverflow.com/questions/779495/python-access-data-in-package-subdirectory There are 2 parts, the first includes the file in the module's distribution, and the second allows your running program to find the file without hard-coding a path (which might be inside an egg or wheel file). I suppose for an ini file you might copy it into ~/.crypto/config.ini as a one time startup.
You may have violated their API license terms FYI. &gt; You also agree not to do any of the following while accessing or using the Services: ... (iii) use the Services for any commercial purpose or for the benefit of any third party or in any manner not by these Terms
Maybe a few years experience since you're in the Midwest. In California that would buy you a recent grad. But the living expenses are dramatically different.
If everyone agrees with you then that would be rough... we were really looking (hoping) to have someone that wouldn't need much training and would be able to handle Python assignments out of the gate. I am curious other peoples thoughts. Thank you for your comment 
Hmmm. The closest I got to this was with Putty for Windows. I'd use pscp to transfer files to the raspberry pi. I wrote a .bat script that would automatically run the pscp command and copy my project folder to the raspberry pi. Then I'd already be on my raspberry pi on that same computer via ssh. So I have it down so I can modify code on my laptop, run a batch script and update all the files on my pi, and run it within about 20 seconds. Not sure if you could do this on a non jail broken iPad..... I honestly couldn't imagine trying to code on one beyond tiny novelty scripts. Even programming on a laptop is very rough imo. If you are making python code with a GUI you'll have to use VNC instead of ssh. But it's already installed on raspbian anyway. I'm not sure if ssh and scp (a protocol to transfer files via SSH) are on the iPad.
Vi!
If the COL really is that low, you should be able to get someone with a few years experience. I'd expect that you're going to have a pretty small pool of people to chose from though. Compared to NY, San Fran, etc.
I was able to access the terminal from my iPad using an SSH app, but writing the code inside the terminal was a nightmare (at least for me since I'm a beginner). I was able to use a text editor app that let me connect to the terminal in the RPi via SSH and edit the files but I couldn't find how to run it.
He didn't mention health benefits or a 401k or anything else....
I can say as a resident of Arkansas who works in Python, that's a pretty good salary here. None of my programmer friends who work with Java, front-end, or C# make much more than 60, if at all. Most of the python devs I know make upwards of 65 or 70k, with one or two in the 80s (having to guess at some of these that I don't know exactly). According to the internets, 80k here would be about the same as 130-150k in the San Francisco area, depending on how much you want to commute. 
I do-t kn-w. 
That's nearly 5k a second. Nothing extra special. 
&lt;snide comment incoming&gt; Because everything works better under Linux. :-) More seriously... I think it's because the Python on windows uses MinGW which before WSL was a popular way to get things to work on Windows. Given that it is external from the OS I would imagine it would be slower. WSL is designed and implemented by MS so I imagine they know better how to create a lightweight translation layer.
RealVNC has an app for iOS. I usually romote desktop into my pi. I have done it on windows and Linux and love it. Try that.
Nope, he was incorrect. Check some other comments for more realistic expectations. In particular /u/bheklilr seems right on the money. Pun intended. 
r/learnpython is the place to go 
How about trying a live linux boot from usb on that same hardware? 
And therefore it's not worth examining?
python is getting more and more powerful .
C is not getting replaced anytime soon. Every year, I read some number of articles saying that C is going to die for &lt;reasons&gt;. Every year the statistics show that's a very mainline and popular language. The piece to understand is that it's a very low level language, and that means that you get a great deal of control (which can be great for performance) but it's not going to be as productive as Python. Learning C will teach you a lot. Whether it teaches you what you need to know depends on where you intend to go.
&gt; is you can't work/live remote and would have to move to the large mid west town which I know reduces our talent pool. Why? I've worked remotely for 7 years now and am never going back. Now that's not 100% remote and spend 10-25% on site but there are so many inefficiencies in the modern office it's annoying.
Hi all, I've been working on this project to search and stream youtube videos from the CLI, I would love feedback, suggestions or pull requests. Any of these would be a massive help.
I second PyCharm, but if you're new to programming, a simpler editor might be less intimidating, and for that i'd recommend sublime text, visual studio code, or atom
just curious, what city in Mexico? I fixed a bunch of wifi issues for my wife's family in Mexico by changing the wifi channel. But I never remember getting more than a megabit or so anywhere. I'm so sorry. My wife and I discuss moving to Mexico, but the internet speed is a deal breaker. I guess that's totally a first world problem. :) edit... sorry for assuming Spanish meant Mexico. I just connected the first Spanish country relative to me. Soooo, what Country and City? edit2... Spanish ISP probably means Spain. I'm just going to quit while I'm behind.
For large projects, there is only PyCharm, IMHO.
You could have used a Fourier transform. https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/
Anaconda on windows has a problem saving long code quickly. I suspect their write functions aren't optimized. This makes it unbearable to use for hefty projects, at least on windows.
I'm trying to fix Python 3 syntax support for Baron. If you're good with parsers please help!
Look up Baron. It's pretty awesome. Lacks Python 3 stuff like annotations though. I'm trying to fix it but I'm not very good with parsers. 
"Him"?
You could probably get some one with a few years experience. It may be hard to find someone though because most of those people would be in their twenties and probably not trying to move or commute to a small town. You might end up having to go with a college grad who isn't getting a better offer or try to find someone who hopped into data analytics later in life and is more willing to be in a small town.
An intermediate or someone with around 3-4+ years experience.
Thanks, got it working
Looks cool! I already opened up an issue regarding a bug I had with insallation. However I tried to dig into source and it's a bit confusing. For example `check_default_values` is only being used in tests while it's sitting in `program.py`. `tests` directory shouldn't be in the package, it should be in the project root and other small things like that. I think you first need a code review before asking for pull requests :) 
A non-technical person should be unusually interested in the phenomenon of devops to read a treatise of that length. 
For some reason I had issues with my tests folder in the root dir. However, I shall look into these issues. A second set of eyes is always good, thanks for this :D
Yep. Looking at /u/huntedhashbrown, it's clear that there's something out of whack.
What do you think about the [*typing*](https://docs.python.org/3/library/typing.html) module in Python3? Shouldn't this make Python3 solid enough to stand for larger projects? I'm currently using Python3+typing and TypeScript (which is strongly, statically typed) and I don't really see that much of a difference so far. My IDE catches type errors right away (if *typing* is used properly), as it does with TypeScript. But maybe there is more to it which I haven't run into? Is Python's type system the only reason why you would consider a different language for larger projects? Are there any other factors that drive you to Kotlin? I'd love to hear more :) 
Was the editor Gedit?
How about you grow up? Looking at your posting history, it's not exactly a unique thing that "people shit on you". You may want to consider changing your attitude. 
Alright, I believe I've patched both the issues. Turns out I'm terrible at first impressions :P But this sorta thing is exactly what I need help with, more eyes on the project help me catch issues faster, even if no PR's happen, testing is very important and there are so many hours in the day for a single person.
Either Pycharm or VS Code, depending on circumstances.
Out of curiosity could you share the solution?
Subline text
Teach me your ways! This is EXACTLY what I'd like. My wife is from WI, and honestly, I would rather work at a small town in WI than in Chicago or Minne. If I want beer, I can go to the Point Brewery or whatever.
I'm already using a db. The dataframes are kind of a db within the db. During usage of my application a user typically creates 1000 to 10000 dataframes which we have to store. Usually these have two to three combinations of column names and datatypes. So I could in principle create a sql table for each type of dataframe and store in the database the tablename and the indices belonging to this dataframe (or just a new table for each dataframe). From the database's perspective the dataframes are atomic. The user dumps them and might retrieve them later for querying. Tha database however does not care about the contents of the indiviudual dataframes and does not query those. The user can actually not only dump dataframes but also numpy arrays, ints, floats and strings.
&gt; he more the non-Python code needs to access receive Python data structures or is called frequently in inner loops written in Python it becomes more complex and the return on performance diminishes. Interesting! Do you know how big the performance overhead is for the bindings? &gt; Can you tell us a bit more about the application? I just wanted to hear about it in general. I'm just curious.
&gt; Mainly, it works well, but you have to be pretty disciplined about unit-tests (we used unittest extensively and migrated to pytest recently). Is this because of Python being dynamically typed or because it becomes necessary as soon as you work with C/++ bindings?
lol, i'm in barcelona spain. the internet is really good here actually, it's just this shitty company (it's really big by the way, their dsl and mobile services are amazing though). to answer your original question: i've changed the channel a bunch of times (scanning my surroundings and picking channels no one else is using).
always interesting to read what other people do/use, but this argument keeps coming up and is _by itself_ not valid: &gt; We use the micro framework Flask [...]. It is lightweight and efficient and doesn’t include any features that we don’t need such as queues, an ORM layer, or caches. if you do not need an orm or cache, don't use it. features of a library/framework that you do not use don't make your program "heavier". if you have other culturall/team or technical requirements, fine, but "lightweight" is not an argument against django. this is a complete django app: https://raw.githubusercontent.com/syntarsus/minimal-django/master/minimal.py thanks and credit to: https://www.reddit.com/r/django/comments/6mhytm/is_there_a_benefit_to_using_django_over_flask_for/dk1s5x1/ 
I very much like VSC. But can't make it integrate nicely with any console.
Not for professionals at least. 
I agree, the whole article is just "AWS can handle many requests a second"
&gt;Alex, our engineer, created the fork named Pillow-SIMD and implemented a good number of optimizations into it to make it 15 times faster than ImageMagick. Thanks to the optimizations, Uploadcare now needs six times fewer servers to process images. The real MVP here
Neovim
Somehow there is no spyder though it is a damn fine IDE.
what do you mean?
I still use good ol' IDLE
I tried pycharm and didn't like it, I stick to Sublime and terminal. Without an IDE tools like pylint become more important so I'm learning that along with pdb. Edit: the reason I didn't like pycharm is the type of code I write which is mainly "scientific". Things like rpy2 and MPI didn't play nice with pycharm. I write other code than python also and like using the same editor for all code.
'"word word"'
Well, it's a necessity because it's dynamically typed, although as a project becomes big, even if it was statically typed, I'd say you still need a good unit-test coverage to make sure things work (I also work on a big java project and I find that tests are invaluable there too).
I tried that but the script didn't run...
what kind of 80k full time office job doesn't offer those?
Do you have a sample code...? 
Not on my computer right now, sadly
Apply is like Map for DataFrames. That's why you care. Group by aggregations are easy (filter, sum, store) and are derived from the DataFrame which is effectively just an iterator, but when you group by to aggregate in any database, you're changing the dimensionality of your dataset. You are reducing or shrinking the domains of one of your data dimensions. An example of this would be summing all the charges on an invoice before printing the invoice. It abstracts out the charge dimension of your data in exchange for summary. In Apply, you retain all characteristics of your old data, while adding a new one. And further, the power of apply is that it consumes an arbitrary function that operates on *args, and with lambda it can be extended to consume **kwargs from global namespace. 
Where are you located? More personal interest since your question has already been answered.
That's a reason to stay away from it if anything.
That is something I didn't consider is that we will most likely lose them to exactly what you said, a more exciting "younger" city. I think we'd obviously like them to stay but if you aren't moving every two years you are holding yourself back I've heard. It's a good point though thank you! (Means I need to plan and get more positions anticipating for the turnover) 
Trust me I agree! This is a fortune 50 company and corporate policy is not flexible. We have a CEO that is "old school" and strictly against work from home, and it's a company wide policy unfortunately 
&gt; "yes his old ass gentoo box dusted our mini-rhel cluster". ... The profs setup was three 8-year old workstation machines from Dell. It's having a hard time not catching on fire, let alone doing work.
Yes, we haven't gotten a single applicant with Python experience which is what the job will be. Frustrating to have such a small talent pool that's for sure
Sorry I thought it was implied but good point. This is a Fortune 50 US company. So standard 401k matching, employee stock purchase program, healthcare, 3 week vacation, etc. They are not "start up" benefits but pretty good / standard for a large enterprise 
Thank you, that's exactly what I was shooting for when we created the position. Not senior, just a junior dev with 3-4 years 
Yeah but taking something with all the bits in it and removing those is extra work. Also they got django already so they would have to maintain 2 djangos for the different environments. For example they might have a bunch of middleware and now they have to not load it for a specific environment. By using flask for some parts they've made it so they don't have to maintain another django and remove bits. Developers aren't confused by having django with different bits enabled or not. Makes sense to me. Just because you have a hammer, not everything is a nail. 
To debug your script, make a text file with the alphabet or something simple in it, then cut the file up into small chunks, say 10 characters. You should be able to see what’s missing. 
İf "skin" and "giveaway" in word: print("found!") Something like that?
&gt; removing those is extra work you don't have to _remove_ anything. just don't use it to begin with. &gt; now they have to not load it for a specific environment that's not how it works. you always have one configuration per installation/environment. no need to remember anything. &gt; Developers aren't confused by having django with different bits enabled or not. i work on multiple django projects. switching between a django and flask codebase seems like a higher cognitive load to me. if you think so, okay, i disagree. 
A short and tiny Python program for weather forecast on my coming vacation. "Why no web forecast?" Yes, there are tools on the net doing the same thing, but I just like to make an one liner command call. So I can check the weather repeatedly by hitting instead of refreshing.
Yeah!
But the code is different, when I get home I will show you 
PyCharm is the best, usually will download a few plugins like bash/.gittoolbox and setup deployment to server for quick code changes and deploy to test server. Vim8 + Python syntax checking is what I use on Linux for quick modifications.
I've tried many many IDEs and I've found PyCharm to be the best for me. 
I know a bunion named mb 
Yes they have to remove it because they probably got some of their own configured. And django comes with some predefined. So now they have to maintain 2 django settings files. Developers have to remember to load different settings using environment variables. So yes they do have to remember. I see benefits of both, of using the same django code base but different settings vs using flask for a small component. Both have their pros and cons. I disagree with you since you don't acknowledge the cons. 
To be honest, I'm not feeling it. It might be good in Julia, a math oriented language, but in Python it seems more like something that's going to cause weird bugs more often than not. 
Thanks, I'll check it out
Alright but if space is the problem you can do it like: x = "skin" + " " + "giveaway" and search x or s="skin" g="giveaway" x="{} {}".format(s,g)
Python is widely used in science, everywhere I look it is Python, C++ and Fortran. This would certainly help to fortify that position. Also, the Zen says "Readability counts".
the full version of PyCharm calls this process you are describing Remote Interpreter as far as I remember. Maybe this helps when researching for a solution.
"Python is widely used in science" doesn't mean "Python is only used in science". Making a feature like that is nice for the science community, but can cause unexpected breakage for everyone else. It's a serious tradeoff.
The multiplication operator is not implemented for most types that are not numbers, so a typo will result in an exception as usual. Do you have an example where this would lead to potential bugs?
Atom
Sure, but the argument also works the other way. Python is popular in the science community, and we should keep it that way. I don't see the breakage. This PEP does nothing to existing code.
How would it cause breakage? It seems to just mean "Whenever a number is first in a name, multiply by it and, whenever a variable is followed by another variable without an operator, treat it as __mul__ by default". Could even be it defaults to use __space__ and you can overwrite the intention. edit: see the underscores where the text is bold. reddit is using some weird formatting that causes breakage of inlined python :p
The second case is ambiguous because number literals can contain letters. Consider there's a variable `e5`. What's `2e5`?
It doesn't break existing code, but it introduces extra potential to break code.
It depends on what you want to do with it. In math you might want to define it as a tensor (numpy array). If you are not modifying its values you might want to define it as a tuple. 
Zen of Python: &gt; Explicit is better than implicit Implicitly assigning the multiplication operator to spaces is not a good idea for a general purpose language like Python. I do think this has backing in math oriented languages like Julia.
Sorry, I don't see it. Like I said, for most types, multiplication is not implemented anyway. So the potential for bugs is very limited.
You're still turning a parse time error into a runtime error, which is way harder to detect. That's another reason this works better in Julia - you _know_ if things don't typecheck.
Good point, I have to check what Julia does in this case.
writing a regex script to clean up some documents. there are so many different variation on these documents that i'm at 125 lines of code so far (after cleaning it up) 
The first one could work though.
Making my first web app. I've made the back end, but front end work has scared me off until now. Luckily, if you stare at Flask long enough it starts to make sense...still, I view this as a necessary evil so that people will use my work. Do people enjoy making websites?
Where is the love for math and science? Are only web developers reading this?
Simple answer, don't. This is extremely inefficient to do so in pure python. There are tons of efficient libraries available for that kind of math starting with numpy. If you are more interested about the math behind it, and not about implementation in python per se, I recommend reading about [quaternions](https://en.wikipedia.org/wiki/Quaternion).
This is a change to Python's syntax, and a fairly big change. Even the matrix multiplication operator `@` got a lot of push back because it was specific to math.
&gt; Does it have a chance? ...no. You have to remember: Python is a huge language, used by a ton of people. Syntax changes are guarded by an *incredibly* high barrier. The matrix multiplication operator (`@@`) was highly debated, and even f-strings took ages to be standardized. **Never write a PEP first!!** You always want to start by posting to `python-ideas` ~~(I like to think of it as the idea suicide hole)~~. If and only if it succeeds there is a PEP worth creating.
As long as your CEO and managers realize that you won't be getting the best.
It all depends on the final implementation and smartness of the error message, but I do many times forget stuff like: print("result #" + 5 " things"). If that would multiply by 5 "things", it would be... Weird. I may be missing something in this example tho, sorry if so.
It also says "Explicit is better than implicit". And this introduces two implicit ways to do something simple. Also python have enough criticism for syntactically significant whitespace as it [is](http://wiki.c2.com/?SyntacticallySignificantWhitespaceConsideredHarmful), there is no need to make this problem deeper with introduction of whitespace as an actual operator.
This a pretty good argument. Typos like hello = a + b c + d won't get picked up until runtime. I have made this typo twice in the last week.
My gut feeling is that this doesn't have much of a chance because it's quite a fundamental change to the grammar for a special case use case combined with python being quite conservative. I imagine something analogous to python bytestring literals or the new format string standard might have more chance: formula = m'ax + b' Though this isn't really that different from formula = math('ax + b') There's a separate thorny question of expression versus 'object representing a formula' i.e. a sympy object. You might like to be aware of how R does things (c.f a ~ b x for example)
Yeah not to mention, remote python dev jobs will pay you more!!!!!!!
Thanks for sharing. I hope your learn from his code. It's about removing a lot of the dublication and redundancies. Code is shorter, more concise (therefore easier to read), and if you want to change something, you only have to change it one place. Btw great beginner project. Well done!
Or propose it as a language extension pseudo-import like `from __future__`. Eg. `import __mathformula__`. Thus non-mathematical projects wouldn't get bugs introduced, and those who explicitly enable it know what they are doing. 
I do a lot of scientific programming with Python, it's my primary job. I'm against this proposal, I don't think it's a big deal to have to write the extra couple characters for the operators. This would not significantly enhance the readability of my code, since a very small portion of it is actually doing any math compared to all the plumbing around getting the data into that math and out again.
My university still offers C on last year undergrad physics (and Python the first two). My university is very employer oriented and up to date with what employers want. The course itself is worth over 10% of the marks for that year.
Why would anyone want to pick up a job for 80k in office, when even remote python jobs would pay you more.
From what I understand, you need a way for users to interactively explore your data, right? Couple of suggestions if are looking for a browser-based solution: * Check out [IPython Widgets](https://ipywidgets.readthedocs.io/en/stable/). This will allow you to use sliders, etc inside the IPython notebook. * [Bokeh](http://bokeh.pydata.org/en/latest/) is also a decent option. * IPython Widgets and/or Bokeh should be enough, but if you want something extremely fancy, just export your data to json or something and use [d3](https://d3js.org/). You'll have to fiddle a bit with Javascript though, and it takes some time to wrap ones head around d3. Edit: I can't remember the name of the package, but there is a way to get D3 plots straight out of matplotlib.
Fun fact Sublime Text is also written in Python
Every time I try going the vim + toolchain route I end up going back to PyCharm. The configuration is the rub with the UNIX-based approach. I want it *just* the way I want it and end up spending a lot more time setting up plugins than I do with PyCharm. Then again, I do Django development, which is the real value-add for PyCharm, so maybe I would be better served with Vim and a toolchain doing other types of Python development.
OP here – I'm very keen to get some feedback on Lightbus. I've run it past a couple of developer friends but I think it would benefit from some wider input. Personally I have a real need for Lightbus in my day-to-day client work, but I have been unable to find something suitable. However, I know my personal experience may well not be indicative of everyone else's. Therefore, is there demand for a project like this? Is the design sane? Any general suggestions? Feedback is very welcome indeed. Additionally, the [concerns](http://lightbus.org/en/latest/concerns.html) and [choices](http://lightbus.org/en/latest/implementation/choices.html) sections currently contain a number of open questions.
That's, like, the standard key to change fields in forms.
Yea I've used VNC viewer and that works good, it just lags when I type and makes my workflow much slower.
Thank you I'll check that out!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hum, i guess thats were we differ. I use vanilla vim + ack + docker. Anything ive ever done more than once ive written into a script -- be shell or a Makefile. I start my day with a "docker-compose up" and end it with a "docker-compose down" and let me tell you buddy, im happy as hell.... to each their own :P
Thanks for the input I started frankensteining some code to try to figure out how would i go about it. I did not want to use numpy or any other library that did not came with py on its own. I felt that it was beneficial not by speed and functionality ( i could always rewrite it in c++ or some other lang , this is a way to fast check and interpret without long compilation ) but by learning and figuring out the "way of the python". The main problem was i was not sure how to define it, from what idiom should i start first, what was the smallest amount of space i can easily define and build from that. I have some DIY analytical program that forms a larger space from some constant number and type of smaller spaces whilsit keeping cumulative area approaching zero (not really approaching zero, like limes function ). Now it is quite easy to do when you have basic geometric shapes that are flat but if you rotate it/combine it, it gets very difficult. So instead of point type base i tried axis/line type based .... and i got stuck. I could not define a line without defining a point, even at conceptual level. That is what i tried to do. 
For Python I don't like much more than syntax highlighting (I tend to fight more often with code autocomplete than it helps me) so I mostly code in TextWrangler, which I started using back when it was BBEdit in Mac OS 7 (and so it's just kind of a habit, also I deal with a lot of textual data as well); but for more complex projects I've been moving over to the new Visual Studio Code from Microsoft. The integrated terminal is pretty nice.
&gt;...therefore easier to read... Not always.
Your version is slightly better in the sense that pos 1-2-3 is considered a win :)
Thanks for the input, i've studied quaternions when i was studying the mechanical static/kinematic/dynamic movement in college. I am more interested in doing it from scratch. I know it is a black whole and it is already done in numpy and many other libraries, but i am curious how it is done. The process of transcribing conceptual space in virtual code that have some sort of 3d feel in the end. Today, i feel that most of 3d programs have 1 big problem, they are focused on manipulating the existing shapes, and then remember too much information in binary system for that action to be fast and reliable ( they write every polygon in virtual space, instead of some easier methods that math and people do by default ) So if i could make some base class of empty ethalon space from which i can later define quaternion and then define anything else from that, it would probably do the job. But how to approach it? How to define the empty space as empty that has behavior of space non the less. I feel it is like calling a class attribute that is not there... wierd right ? I tried defining a new null pointer that i could later describe a null space, but then the math goes out of the window. So i thought , there are sure smarter people than me in reddit. 
His `PlayerWin` is wrong. Take it as a win ;).
Thanks for posting. My employer does tictactoe live coding exercise as part of interview. It's really interesting seeing the variety if solutions. But sad how many supposed developers can't read, ask questions and formulate a plan/architecture to solve this fairly simple problem. Many struggle with looking to display board or how to detect winners or when game is over. They have 45min and most never get close to working code. So, just being able to complete this you are already ahead if 75% of people I've interviewed. Good job!
Hey this was super interesting, thanks for sharing!
Building a Rest API for www.whiterabot.com .
What sorts of questions are you looking for in situations like that? Or at least, what would be a good question to ask?
M. Scott Ford is the founder and chief code whisperer at Corgibytes, a company focused on helping other companies with legacy code. Topics include: * How M. Scott Ford got into forming a company that works on legacy code. * Technical debt * Process debt * Software testing * The testing pyramid * iterative development * kanban * readable code and readable test code
Your suggestion is kinda simplistic even in math terms because it doesn't address `a(b+c)` as equivalent to `a*(b+c)` (and in Python that obviously won't make any sense at all considering the function calling syntax).
Creating a small python CGI script that will show the names and versions of the RPM packages installed from specific RPM repo. This to avoid questions from development team like 'what versions of &lt;product_name&gt; is deployed to UAT?'. PS Why there is no `rpm' python package in pip?! :(
...this might be the best novelty account yet
So you want to throw out a core tenant (explicit &gt; implicit) in the name of science? That's...mad. 
his code is pretty bad too though.
I've taken a couple weeks off from client work, partly to relax, but also because have had a rather strong itch to write myself a new tool over the last few months. Specifically, a better Python task queue. I've ended up writing up a proposal for something called Lightbus (which I've also [posted](https://www.reddit.com/r/Python/comments/6qwg9p/lightbus_proposal_for_a_new_python_message_bus/) separately, so I hope that's ok). I'm really looking forward to getting to work on it, but before I do I really want to get some input and a sanity check from the wider community. I'd be very grateful for any feedback (or even encouragement): http://lightbus.org I've been a freelance Python developer for about 10 years now, and I've worked with a lot of projects that I think would benefit from something like Lightbus. However, I'm very aware that seeing a need does not necessarily translate into a sane design, not does it indicate a wider need. Therefore, any criticisms, suggestions, or cries of 'I want this too' would be very useful indeed.
There's still room for improvements. If you define the win combinations as a constant, the `win` function could be a one liner. WIN_COMBINATIONS = ( (1, 2, 3), (4, 5, 6), (7, 8, 9), (1, 4, 7), (2, 5, 8), (3, 6, 9), (1, 5, 9), (3, 5, 7), ) def win(board, mark): return any(all(board[i-1] == mark for i in combo) for combo in WIN_COMBINATIONS) --- I'd also use new style string formatting and unpack the `board` in the `format` call. BTW, I think `board` is a nicer name than `position`. def print_board(board): print(""" {} | {} | {} 1 | 2 | 3 ----------- ----------- {} | {} | {} 4 | 5 | 6 ----------- ----------- {} | {} | {} 7 | 8 | 9 """.format(*board)) --- You can replace the `Input` function with this: try: input = raw_input except NameError: pass Just override the input function in Python2. --- To use the print function in Python 2 you need to import it at the top of the file `from __future__ import print_function`. --- I'd replace the double while loop at the end and just quit if the user doesn't enter 'y', but that's up to your personal preference. while True: play() print('Enter "(y)es" to play again.') if not input().lower().startswith('y'): break print('Aight, resetting...') --- Please take a look at [PEP 8](https://www.python.org/dev/peps/pep-0008/). I didn't know that two space indented code is so uncomfortable to read. --- /r/learnpython and http://codereview.stackexchange.com/ are great places to have your code reviewed.
&gt; Is there something like Google Forms, or something like Plotly that I can use to easily build a dashboard? I think [Jupyter Widgets](http://jupyter.org/widgets.html) might be exactly what you're looking for, it's a way to declaratively add interactive UI elements to Jupyter/IPython notebooks.
/r/HailCorporate/
In some states they don't have to give you.
Care to elaborate? 
You're actually pretty close to the truth -- the previous sysadmin had never cleaned them, and they were running so hot that they'd sometimes shut down under a heavy workload. God help the Gentoo folks. I love them, they're brilliant people, but they do wear their blinders nice and tight.
You are [not the first](https://en.wikipedia.org/wiki/Euclideon#Unlimited_Detail) to think about this idea. Here's a [video](https://www.youtube.com/watch?v=00gAbgBu8R4) for illustration.
8 year old machines and "used to work", so I was thinking there's a decent chance they were Pentium 4 machines. Man those things loved to heat up.
 perl -wle 'print "Prime" if (1 x shift) !~ /^1?$|^(11+?)\1+$/'
shorter and more concise is not necessarily easier to read. Code can be short and concise and difficult to read. See anything on [codegolf](https://codegolf.stackexchange.com/) for example.
[Micro](https://micro-editor.github.io/)
2 space indentation Yep, he works at Google alright.
Some short code can be more difficult to understand than a longer version that does the same thing. For example, consider: ``` void xorSwap (int *x, int *y) { *x^=*y^(*y=*x); } ``` Compared to ``` void registerSwap (int *x, int *y) { int tmp; tmp = *x; *x = *y; *y = tmp; } ``` The first one is definitely shorter, but many people would say that the second is easier to understand. The reason is that short isn't the same thing as "doesn't contain a lot of logic". The first uses several assign and replace statements as well as a binary operator in a non-obvious way, all in one line. The second one is just three assignments. You can extrapolate from there; "fewest operations" is also not a good measure of complexity, some programming language features, algorithms, etc. are harder to reason about than others.
Darin Gordon is a beast. He's been coding in Python 4 years to [my 10](http://metaperl.org/) and I cant touch his skillz... PYpi outstrips Rust extensions with Speed! (-5:25) 
Why are his functions capitalized?
I was hoping for something would do away with cells and just allow me to arrange text edit cells all over the place. 
See if Plotly Dash is more what you're looking for, then.
Never said i was :D But i was unaware of Euclideon, to be honest. I just thaught that there is also some other bloke/ess on other side of the world pondering the same thing. Tnx for info, i think i get it how they've done it at least in theory, i wish to see if there is a limit to resolution that modern proccesors can accomplish with this tool. Also this really sounds familiar as to 3ds max proxy system for generative and repetitive geometry. I know that sometimes i can get off a bit complainy/arogan and i would like for you to know that i really appreciate your links and literature. Thank you. My mind just went over a step thinking next thing. Do you have any idea how to describe a space without any content to it ? 
Never said i was :D But i was unaware of Euclideon, to be honest. I just thaught that there is also some other bloke/ess on other side of the world pondering the same thing. Tnx for info, i think i get it how they've done it at least in theory, i wish to see if there is a limit to resolution that modern proccesors can accomplish with this tool. Also this really sounds familiar as to 3ds max proxy system for generative and repetitive geometry. I know that sometimes i can get off a bit complainy/arogan and i would like for you to know that i really appreciate your links and literature. Thank you. My mind just went over a step thinking next thing. Do you have any idea how to describe a space without any content to it ? 
&gt; Thank you. You are welcome. :) &gt; Do you have any idea how to describe a space without any content to it ? Is there a practical need to? Generally speaking, there is a special object - "camera" which behavior determines what a space is. But there wouldn't be a lot to render in absence of at least a light source.
&gt; !~ /^1?$|^(11+?)\1+$/ Perl always looks to me like the programmer had a stroke and landed face down on the keyboard.
&gt; s there a practical need to? Generally speaking, there is a special object - "camera" which behavior determines what a space is. But there wouldn't be a lot to render in absence of at least a light source. Yap, since the idea is not bound by camera. You can think of it as playing tetris in really small space with a large blocks. The rendering would be ( if all ) left to another program. The idea is to make a valuable space and than use it.No rendering needed-just computing. And to make things even harder ( for some future iteration ) blocks can be given in any shape or size and any rotation/revolution or translation, you could also think of it as space permutation. 
Not a true comparison as he wrote his after he saw yours. Would be better to compare it before he saw yours. 
Here is my solution. Can anyone come up with a better way to validate vertical/horizontal/diagnal without specific cases? import os from collections import OrderedDict turn = 1 moves = OrderedDict([ (0, None), (1, None), (2, None), (3, None), (4, None), (5, None), (6, None), (7, None), (8, None) ]) board = ''' {0} | {1} | {2} ------------- {3} | {4} | {5} ------------- {6} | {7} | {8} ''' def render(): os.system('clear') print board.format(*[key + 1 if not moves[key] else ('X' if moves[key] == 1 else 'O') for key in moves.keys()]) def is_valid(selection): return selection - 1 in moves and not moves.get(selection - 1) def did_win(): current_moves = [x[0] for x in moves.iteritems() if x[1] == turn] for i in [x for x in current_moves if x % 3 == 0 or x in [1, 2]]: if all(move in current_moves for move in [i + 1, i + 2]):#horizontal return True if all(move in current_moves for move in [i + 3, i + 6]):#vertical return True if i == 0 and all(move in current_moves for move in [4, 8]):#diag down return True if i == 6 and all(move in current_moves for move in [2, 4]):#diag up return True return False render() while [val for val in moves.values() if not val]: print 'Player {0}:'.format(turn) selection = int(raw_input()) if not is_valid(selection): print 'Invalid!' continue moves[selection - 1] = turn if did_win(): render() print 'Player {0} won!'.format(turn) break turn = 1 if turn == 2 else 2 render() 
Was referring only to more concise, not shorter
The word you are looking for is "tenet"
3-4 years experience is not junior to many people. With 3 years experience, I would not apply for a job that says junior because I assume I will be bored.
A few less than conventional choices in my version, but I'm prepared to defend them all: from itertools import cycle def legal_moves(board): return set(board) - set('XO') # Mapping from move *name* to indices that need to match for a win. wins = { '1': ((1, 2), (3, 6), (4, 8)), '2': ((0, 2), (4, 7)), '3': ((0, 1), (5, 8), (4, 6)), '4': ((0, 6), (4, 5)), '5': ((0, 8), (1, 7), (2, 6), (3, 5)), '6': ((2, 8), (3, 4)), '7': ((0, 3), (7, 8), (2, 4)), '8': ((1, 4), (6, 8)), '9': ((2, 5), (6, 7), (0, 4)) } def would_win(board, letter, position): return any( all(board[p] == letter for p in win) for win in wins[position] ) template = ( '\n {} | {} | {}\n' + '---+---+---\n' + ' {} | {} | {}\n' + '---+---+---\n' + ' {} | {} | {}\n' ) def display(board): print(template.format(*board)) def human(board, name): display(board) return input('{}, your move: '.format(name)) def ai(board, name): raise NotImplementedError # TODO def update(board, letter, position): index = int(position) - 1 # already validated return board[:index] + letter + board[index + 1:] def move(board, letter, name, player_type): allowed = legal_moves(board) position = None while position not in allowed: position = player_type(board, name) return update(board, letter, position), would_win(board, letter, position) def report_draw(board): display(board) print('The game is a draw.') def report_win(board, name): display(board) print('{} wins!'.format(name)) def game(players): board = '123456789' for letter, (name, player_type) in cycle(zip('XO', players)): if not legal_moves(board): report_draw(board) return board, winner = move(board, letter, name, player_type) if winner: report_win(board, name) return def main(): # TODO: logic to choose AI opponents, arrange matches in Internet lobbies, etc. # The sky is the limit; the point is to show a well-refactored framework # that will allow for adding more functionality with good separation of concerns. while True: game((('Player 1', human), ('Player 2', human))) again = input('Play again? ') if not again.lower().startswith('y'): break if __name__ == '__main__': main() 
For bigger apps, pycharm. for scripts, snippets(learning) and exploration, jupyter. ipython if on console.
You should focus more on why you decided to do something rather than what questions might be asked. These types of programming tests are more about how and why you choose to program the way you do and less about what you can google.
I tried most of them and have settled on PyCharm. 
Oh sorry that's probably me not knowing developer titles. It's listed as a analyst III level so by no means entry level (if that's what junior means). We only have one other team member that knows Python that is a level II. 
Which I believe is exactly what happens when you try to debug anyone else's perl code.
You may find that things like this also limit your applicant pool. You don't have to have some crazy hip setup but being in a situation where there's path you and the team think is beneficial for the business but you're being stopped from doing it due simply to strict rules is a concern for me.
There's just something wrong with a language where you can enter any random sequence of characters and probably get a working program. No idea what it'll do, but it'll do *something*.
Google style guide I think.
I get that error when there's a circular import somewhere. Take a look at the full traceback. If that's the second time you're importing that module, then you need to address the code infrastructure. Edit: try r/learnpython too Edit2: ...are you trying to run `iforest.py` directly? You started with a `from sklearn.ensemble import iforest` or something, right?
escape _ with \\.
Yes, where are you located?
from future imports are only allowed for things that will be the default in the language. They're annoying to maintain and generally frowned upon.
perhaps she/he was implying defenestration of one of the python core developers in the name of science
Oh c'mon, python ideas is great fun :p
Yeah I'm really not impressed by it. There's a lot of pep8 and other style violations which surprised me. I assumed one of the major differences between the novice and "pro" was going to be the better design patterns and adherence to style guide. 
Its unlikely this succeeds. And as an aside, that's a bad way to handle units in a programming language.
It's not really. Overall the structure is good - the abstractions are effective and the code is very readable. It *does* feel like a Java programmer writing Python though. The code doesn't follow pep8 and there are a couple places he's using awkward non-idiomatic python code. There are some minor improvements that could be made that aren't just stylistic, but assuming the code wasn't compulsively edited, it's pretty reasonable.
track_words = [""] follow_acc = [] # all username converted to user ids try: twt = Stream(auths, listener()) twt.filter(track= track_words , follow = follow_acc) except Exception as e: print(str(e)) pass
I really don't understand what do you want to compute there.
thanks! I sorta guessed that but had to leave the comment as it stands because I asked about something breaking down out of unknown (to me) reasons
This habit of starting sentences with an unnecessary 'so' is out of control. The googler does it inside a print()
Criticism without arguments is useless.
Web app for petroleum engineers that helps finding best surface development solutions
Cool idea!
It violates pep 8, causes ambiguity with variable names like`e6`, and provides dubious value to only a subset of the python community.
I'm not certain that's possible the way you describe. When you do something like from __future__ import print_function you use that feature by then calling print() by importing mathformula you are never just altering a function call or anything similar, rather you are wanting to change the way the interpreter 'sees' lines like x = 2y +6z However, I may be wrong about that. The only thing I could see being implemented would be, as others have mentioned, some type of string identifier signifying a mathematical expression: x = m'2y + 6z' even that seems like a longshot though.
[is there currently a functionality in python for def a(c): return c**42... that works for a (c) and not just for a(c)] {I cannot remember making that space ever while scripting python}
&gt; If you can run it you can decrypt it Not necessarily, see /u/tutomso 's comment above.
There's always [Chart.io](https://chartio.com/) or [Plot.ly](https://plot.ly/) if you don't mind paying for a third party tool. If you're doing it yourself, [Graphene](http://graphene-python.org/) and [Graphite](https://github.com/graphite-project). EDIT: Also, [Periscope](https://www.periscopedata.com/)
Please add more examples, since they're really helpful to learn the library and OpenGL. Some more advanced ones would be cool that for example demonstrate how OpenGL can (and should) be used in an actual simple pygame game like a bullet-hell shooter.
In math notation the opening parenthesis terminates the "`a`", so it serves effectively the same purpose as the space in OP's suggestion. Using the space to tell between a function call and multiplication would be absurd.
&gt; 1987 - Larry Wall falls asleep and hits Larry Wall's forehead on the keyboard. Upon waking Larry Wall decides that the string of characters on Larry Wall's monitor isn't random but an example program in a programming language that God wants His prophet, Larry Wall, to design. Perl is born. -- [James Iry](http://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html)
&gt; Here is my solution. Can anyone come up with a better way to validate vertical/horizontal/diagnal without specific cases? &gt; I'm not sure if this is a "better" way, but you can remove the looping at this level. Represent the board as a matrix with the entries 0 meaning no piece, -1 meaning one player and 1 meaning another. Now, any row, column or diagonal with a sum of -3 or +3 means there's three of the same kind in it and that person wins. Bonus: the sum of the board lets you know who has played more goes and therefore who needs the next turn. import numpy as np example_board = np.array([ [0, -1, 1], [0, 1, -1], [1, -1, 0] ]) def winner(board): column_sums = board.sum(0) row_sums = board.sum(1) diagonal_sums = np.array([board.diagonal().sum(), np.flipud(board).diagonal().sum()]) all_counts = np.concatenate([column_sums, row_sums, diagonal_sums]) if -3 in all_counts: return "-1 player wins" elif 3 in all_counts: return "1 player wins" else: return "No winner yet" print(winner(example_board)) Probably a better way of doing this, and it might be nicer to be explicit when checking cases rather than doing what I've done, but it was fun to write. Edit - Maybe slightly clearer import numpy as np example_board = np.array([ [0, -1, 1], [0, 1, -1], [1, -1, 0] ]) def sets_of_3(board): # Rows yield from board # Columns yield from board.transpose() # Top left - bottom right diagonal yield board.diagonal() # Top right - bottom left diagonal yield np.flipud(board).diagonal() def winner(board): all_counts = list(map(sum, sets_of_3(board))) if -3 in all_counts: return "-1 player wins" elif 3 in all_counts: return "1 player wins" else: return "No winner yet" print(winner(example_board)) 
The `xorSwap` is wrong; order of evaluation between `*y` and `*y=*x` isn't defined.
&gt; The double while loop at the end isn't necessary. It is; you can't assume humans are infallible and will only ever input the things you tell them to.
Sure but that's wildly theoretical and even the very basic stuff that works is extremely inefficient to the point of absurdity almost. 
That's one problem with those job titles. They mean nothing on their own and they are almost never posted with the full title structure. Is analyst III the bottom, or analyst VII? Or I? As far as junior goes, I wouldn't put that in a job description if I wanted experience beyond a summer internship. That's the only applicants our place gets when "junior" is in the listing.
really? Tic Tac Toe was a high school programming exercise for me.
I did this with Pygame. It's a 2D graphics plugin, so I had to write the 3D bits myself. I just did it like this: &gt;BackXZ = 250 &gt; &gt;BackYZ = 250 &gt; &gt;BackZ = 1200 #1200 default focal length. Looks normal. Making it longer makes it orthangonal. no perspective. 900 is close, but still gives just a little too much stretch. Making it shorter than 500 gives too much perspective. &gt; &gt;MaxX = 500 &gt; &gt;MaxY = 500 Whenever a bit came up that referenced a side of the bounding box, I would just use those variables to figure out what was needed. I would have to go back through the code to remember exactly how it all worked. And I didn't clean it up or optimize it AT ALL. I hamfisted the entire thing.
I'm working on a freelance project for an Amazon retailer who wants to track and visualize his employees' progress and hours each week. I have already learned a lot about databases (i'm using MySQL and I've had troubles setting it up remotely) and GUI design in Python. Really loving it so far!
While I do not enjoy it, I do work on my iPhone with a remote server as follows: (and my remote server is usually a ridiculously powerful machine but the process would be the same for an rPi). * Use [Panic Prompt](https://panic.com/prompt/) to SSH into remote machine * Use [Panic Transmit iOS](https://panic.com/transmit-ios/) for *some*writing and for managing media transfers (other management is done via SSH) * Use [Textastic](https://www.textasticapp.com/) for more robust editing (though I am not a huge fan). * I can also use vim via Prompt but that is not ideal. I (a) prefer a GUI editor and (b) vim can be painful on a small screen. This does mean that I write the text in one app, and then switch to the other to run it (though you should be able to side-by-side it on the iPad). Note that there seems to be alternatives to each one of these apps (I want to now check out GoCoEdit). But I think the Panic apps are the best in class Again though, these are *not* my day-to-day workflow apps. They are my "oh-shit-something-broke-and-all-I-have-is-my-iPhone" apps
Take a look at [plotly dash](https://plot.ly/products/dash/). It should do most of what you want. 
Sorry that's a valid point, titles go I, II, III, IV and then after IV it goes lead. Normally leads are people that have expert level technical knowledge with zero want/skill managing people. So a III is in the middle of the range, and a I would probably be "junior" now that I understand what that means. Thanks!
Interesting... but what does those variables stand for ?
space positional algorithm. The algorithm that will arrange some shapes in specific/unspecific order in 3d space. Some Sort of genetic algorithm where you will give it goal, and it will compute solutions, when solution is met it will save it in any form you desire. 
The original choice to repeat the question was entirely valid, and IMO favourable.
Used to use PyCharm but have since migrated to Atom + Jupyter notebooks. The one thing I miss is the tighter Git integration that PyCharm had. I'll likely soon give a shot at using the Git Integration for Atom which was announced earlier this summer.
Ahh I see now. So when you run the script, are you doing it from the command line on your remote server?
nope. https://google.github.io/styleguide/pyguide.html &gt;module_name, package_name, ClassName, method_name, ExceptionName, function_name, GLOBAL_CONSTANT_NAME, global_var_name, instance_var_name, function_parameter_name, local_var_name. 
Something akin to [docking](https://en.wikipedia.org/wiki/Docking_(molecular\))?
Hah, I feel sorry for whoever hires you.
BackXZ is the height of the 3d space at the rear of the box. BackYZ is the width. I used those to calculate perspective when an object went "deeper" into the 3d space. BackZ was only used to calculate the percentage of how far back (z axis) in the 3d space the objects were. MaxX and MaxY were used the same way but to figure out percentage of X and Y axis. Here's the bit that calculated corner locations. The script was just a 3d rendering test that spawned boxes and made them bounce around randomly, so each box at 8 points that this would iterate through. This calculated the *display* location for each point. Num1 = 0 Name2 = ('Corner') Num2 = 0 for i in self.CornerList: XCorner = ('X')#Corner1.X YCorner = ('Y') #Corner1.Y ZCorner = ('Z')#Corner1.Z XCornerDraw = self.CornerList[Num2] CornerDepthPercent = (self.CornerList[Num2].Z)/BackZ #print CornerDepthPercent #pygame.time.delay(1000) CornerXPercent = self.CornerList[Num2].X/MaxX #Percentage of realspace X across CornerYPercent = self.CornerList[Num2].Y/MaxY #percentage of realspace Y across NormalizedX = BackXZ*CornerDepthPercent #X0 location at that depth. 55 NormalizedY = BackYZ*CornerDepthPercent #Y0 locaation at that depth. 55 NormalizedLength = MaxX-(NormalizedX*2) #the width at the current depth NormalizedHeight = MaxY-(NormalizedY*2) #The height at the current depth NewX = NormalizedLength*CornerXPercent #Realspace number across current depth NewY = NormalizedHeight*CornerYPercent #realspace number down current depth #print Cube1.Corner1.DrawX #print Cube1.Corner1.X #pygame.time.wait(500) self.CornerList[Num2].DrawX = NewX+NormalizedX self.CornerList[Num2].DrawY = NewY+NormalizedY Num2 = Num2+1 This is a bit of the chunk that calculated the rotation for the *actual* location of each point. There's a different chunk for movement. That part is just "location+current speed" Angle = math.radians(self.XPitch) NewX1 = (math.cos(Angle) *((self.Corner1.X-self.X)) - (math.sin(Angle)) * (self.Corner1.Y-self.Y)) + self.X Angle = math.radians(self.YYaw) NewY1 = (math.cos(Angle) *((self.Corner1.Y-self.Y)) - (math.sin(Angle)) * (self.Corner1.Z-self.Z)) + self.Y Angle = math.radians(self.ZRoll) NewZ1 = (math.cos(Angle) *((self.Corner1.Z-self.Z)) - (math.sin(Angle)) * (self.Corner1.X-self.X)) + self.Z
Input was capitalized as a Py2/3 input/raw_input hybrid, if you didn't notice.
That could be. I didn't check the code; it comes from the Wikipedia article about xor swap.
Try this: x = "skin" + " " + "giveaway" track_words=[x]
Avoid the `global` statement. Use `return` in your functions instead.
Thanks for the pointer to python-ideas and for the context. I already got the point from all the negative reactions here, though.
Almost all errors in Python occur at runtime. I see your point, but not the severity.
You should look up J or APL. Here's a implementation of quicksort in J: quicksort=: (($:@(&lt;#[), (=#[), $:@(&gt;#[)) ({~ ?@#)) ^: (1&lt;#) 
...all functions are written in PascalCase. It's not the greatest of style.
Huh? Yeah I see that, how does that have anything to do with why the function name is capitalized?
Similar , but more room type based and architectural.
Creating a Windows Task Scheduler controller/module...Perhaps in the future it'll be ported to Unix/other platforms 
Even today, there are vast numbers of high schools that don't offer any programming classes.
60 seems rather low TBH, you in Central Arkansas or something? Up here in NWA salaries are a bit higher for that kind of thing. I'm trying to break out of traditional break/fix IT and get into programming myself, but the salary expectation I have doesn't line up with what people want to offer someone without "official" experience or a CS degree.
It would make it clear that it isn't just 'input()'
I see what you mean, but I would call that 'game_input()' or something. Caps are reserved for classes
The only issue is that it costs $10,000 for a 5 person license, per year. 
Thanks, I must be remembering it from one of the different languages.
I never said it was compliant :b
yes. Always! This is how I often work even when on my laptop. I SSH into the remote server and do most of my editing locally that gets pushed remote (with [this tool](https://github.com/Jwink3101/remote_edit)). My laptop is pretty powerful but nothing compared to my remote machine. Plus, I can spin that up and not deal with the noise or the heat! 
Wow this is great thanks! Ill have to sit and read this through. I've seen people add the shebang line to the top of their scripts, then go to the command line on their remote machine and use cmd 'python name.py' to run the code. Does this tool essentially do that automatically, because it would seem cumbersome to have to type that command each time you want to run the code.
Fwiw, this isn't true. `from __future__ import print_function` also makes `print 'a str'` (no parens) a syntax error when it isn't normally.
Yeah, I'm in the LR area. I know companies like Acxiom aren't the best payers, with their salaries starting around 45k (I've heard this from multiple people). Most of the positions I've seen at for SD positions with a few years of experience are around 60k, and anything that pays more than that is going to be pretty highly competitive.
And a lot of work with modern python is to make more of those errors get caught prior to runtime (type hints).
This seems pretty thorough. One way I like to use generators and iterators is for chaining together actions. For example, if I want to apply two functions to `A`, I can do it as B = [fun1(a) for a in A] C = [fun2(b) for b in B] or, I can do: B = (fun1(a) for a in A) C = (fun2(b) for b in B) (with the assumption I will now iterate over `C`) I like the second since it works both actions through something of a pipe-line. If I am parsing items, it gives a more real-time feel (though actual speed-wise, it should be about the same). I do not see a lot of examples of this, but I do think it is a nice way to chain things together. And, it lets you easily add a `multiprocessing.imap` when appropriate.
the user TheTerrasque gave an example of very short code which is cryptic but gets the job done -- rebuffing the silly assertion that shorter code is more readable. You can write cryptic code in any language. People like to pick on Perl because a lot of code that you see contains regexp's which are a quick and nimble mechanism to parse strings. Unfortunately parsing strings is messy in any language, especially without comments. Unfortunately, impatient programmers like to use Perl for this bc it gets the job done faster than anything else. I'm proficient at both Python and Perl .. and I have to confess that I find Perl more readable than Python, particularly for larger projects. 
[Here you go ...](http://lmgtfy.com/?q=how+to+decompile+a+pyc+file)
&gt; &gt; ...therefore easier to read... &gt; Not always. actually, almost never. I think OP's code is actually better from a maintainability point of view. 
Why is that the reason to stay away from it?
Thats only if you want them to host it for you. Its free to host it yourself. 
well, a few things. (and this pertains to *nix) My code does **NOT** do what you're talking about. All it does is (inefficiently) poll the files and see if they are updated. If they are, it pushes it to the remote machine. You could *easily* write a script to run on the remote machine that will execute every time the file changes. But that is not what my thing does. My thing has two components. On the remote machine, it tells the local machine what to do (via a hacky SSH-based API). On the local machine, it (a) waits for commands from the remote and (b) watches the files it has open. Neither is particularly efficient as I just poll the files rather than use something like [watchdog](https://pypi.python.org/pypi/watchdog). I wanted to keep it simple and be able to run on some locked-down machines. Also, it doesn't use too many resources and I have a lot to spare. The goal is that I can type `edit bla.py` in the SSH window and it will open in my *local* GUI editor Also, If you use a shebang, you do not *need* to type `python code.py` and instead just do `./code.py`. But that doesn't matter. 
hmmm. They seem to have changes the look of `lmgtfy`
No mention of Scala?
[This](https://github.com/Ema0/PythonStuff/blob/master/tris.py) is what I came up with a week ago. If someone has suggestions/improvements on my code feel free to comment.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [Ema0/PythonStuff/.../**tris.py** (master → 4a1499f)](https://github.com/Ema0/PythonStuff/blob/4a1499f7870cc605f7f57477a7530c5f98c7d576/tris.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dl0ut4k.)^.
I've actually done exactly this for a massive ship battle simulation. https://gitlab.com/willzfarmer/kobayashi There are a couple ways to think about a problem like this, and the big problem is that it's a trade-off between memory and speed. If your space is small enough, you can define it as a tensor/numpy array (as someone /u/aulloa already mentioned) which has the huge benefit of being super fast, especially since numpy arrays manage their memory much more efficiently than core python. If your space is larger though, you start running into problems with RAM. In this case you need to take a note from the "sparse array" handbook and essentially define the "edges" of your space and each point/object is declared as a pointer (or a coordinate) to a specific place in the space. This is waaaay slower, but the space in that case is effectively infinite, as memory is only used when you add something to it. In either case I prefer setting a traditional 3d axis so that it's easy to think about, but you certainly don't have to. Having relational axes works, or in space cylindrical coordinates with the local sun as an origin point also works. If you have any questions feel free to ask, especially about that code. I know it's dense, I basically wrote it in a week for a dnd game I was playing, so my apologies in advance.
[Hiring] Senior Django Developer at Jakt https://djangojobs.net/jobs/700/senior-django-developer-jakt/ … #python #django #jobs #hiring @byJakt #backend @djangocms #NYC
No, I refuse to accept that this exists.
Google my name. 
Touchdesigner!
I did. I originally meant the earlier reply as lighthearted banter, but you're truly conceited.
Like, virtual Lego?
I was thinking the same early (numpy) on. However, numpy is not that efficient when handling small matrices, it's actually slower in many cases. I can definitly see scope for a specific numerical python library dealing with coordinates systems and frame of reference. A pure python might actually be pretty fast there.
APL looks even crazier due to using a bunch of Unicode characters outside the ASCII range. Finding prime numbers from 1 to R: (~R∊R∘.×R)/R←1↓ιR
Creating a cookiecutter template for microservices in flask, with configuration through environment variables (as stated by https://12factor.net/), with deployment via docker, already setup with celery and database connection, and caching via redis. I am planning to use this to write microservices easier and making an MVP quicker for my startup. Maybe I'll open source it once it is in a stable phase.
Besides print being a function rather than a statement, I don't think there is anything in codecademy that won't work in python3. We have [a pretty long list of learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F) that you could look through. 
I really disagree here. There are so many "tab" operations in python already that adding a "space" notation wouldn't be all that bad. Maybe make it default to operator \_\_call\_\_ but it could still be overloaded, no? (As I said, I use python for scripting, and I actually do most of my programming in C++ or Fortran, so I am not sure what folks call overwriting the underscore-commands)
"making $70K and had more money than I knew what to do with" Found the user without kids. :)
IMO the SQL/SSIS/SSRS skillset will inflate your salary requirements faster than the python experience, but I'd think 80k could get you an analyst with 5 years experience considering low COL. To expand the pool of folks you can qualify, in lieu of python experience consider people who have comparable amounts of experience in Ruby or Perl. They will be able to pick up Python.
Oh boy, too many times had I to tell myself "codegolf hacks aren't meant for production".
Yes. You’ll probably want to post over in /r/learnpython if you’re looking for what I think you’re looking for. 
Anyone clicked on that link yet? Is it truly free? Every time I see a "track" in the link I tend to avoid clicking on it :-)
Somewhat , yap... Like that.
I was not suggesting including it in `__future__`, but that a similar pseudo-import (a pragms of you will) could be introduced. 
Install it and go through the guide. It uses a cdn for everything. If you don't want to use a cdn and even host the javascript and css files yourself you can do that too, theres documentation [here](https://plot.ly/dash/external-resources).
Interesting by inserting frame within frame you've created automatically generates horizon line and viewpoints ... Cool. 
I had the same experience as you when I was new to web development. I couldn't find any books or tutorials I liked for flask, so I ended up using the book Test Driven Development with Python, which teaches you Django. I really liked it, it's free online, and teaches you how to set up the database, tests, deploy your website, and all the nitty gritty bits I wouldn't have learned on my own. Once I got about halfway through that book, I knew enough about web development and frameworks to be able to read the flask documentation and understand how to build a app using flask. IMO, the documentation is enough if you already know the basics of web development (routes, HTTP methods, structure of HTTP communication) and already know Python. 
Exactly. This pseudoimport is actually a pragma, or an interpreter option switch on steroids
Only use case I can think for this is to get build number during CI from environmental and embed it into code. It just sounds fairly complex way to achieve that.
This second RC Python [example](http://rosettacode.org/wiki/Tic-tac-toe#Better_skilled_player) has an alternative method of scoring. 
No comments; I should clean it up but it seems to run.
Much more readable than J though
From experience, such a pragma would be denied on principle.
[removed]
&gt;using a bunch of Unicode characters outside the ASCII range. [I feel sick](https://cdn.meme.am/cache/instances/folder219/500x/57997219/jeff-goldblum-life-finds-a-way-you-were-so-busy-wondering-if-you-could-do-it-you-never-stopped-to-as.jpg) 
The global variable 'cards' will get wiped because you popped all of the elements from it. The instance variable 'cards' will contain the new list. d = Deck(cards) d.shuffle() print('global cards:', len(cards)) # prints 'global cards: 0' print('instance cards:', len(d.cards)) # prints 'instance cards: 52' Why don't you use the `random.shuffle` function? --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Sooo, mostly I get it. But to be on the same page... There is no framing in question... It is space positioning algorithm, like virtual Lego or virtual Tetris. So sun/camera/lights not necessary. The trade-off between memory and speed is quite interesting... I am trying to figure a way out of that by relative positioning. If you have a small bank of platonic solids and you have derivative function for their position... The main problem that that trade-off exists is since all the points/polys and etc. It is like universal function for ellipse... I would like to make a markup in python... Logic is the same only the way you approach it is different by programming language. As I figure it Yeah I too thought that implementing decrates coordinate system would be easier but rotation is easier to implement via 2 axies of radial coordinate system. It would be a Program you let run for some time and it spits out all possible solution and then you choose one. I am on mobile phone so it would take time to comb through code. 
Thank you for the direction. I just posted it.
Fixed: Issue was that the plot needs time to render the image each time. Adding plt.pause(0.05) after plt.show() fixes the issue.
Thanks for the suggestion, I will look into that. I am already familiar with web-dev concepts, but I will still look into that book OR just the Flask documentation. 
It was created mostly for fun. I wasn't expecting it to even work, and the result is reasonably simple.
&gt; Is [anything] documentation enough? No.
"So, ", "Thus," and the like have very valid use cases. 
My attempt, somewhat minimizing number of lines while keeping the features: win_positions = [ (1, 2, 3), (4, 5, 6), (7, 8, 9), (1, 4, 7), (2, 5, 9), (3, 6, 9), (1, 5, 9), (3, 5, 7), ] players = { 'X': input('Enter player 1 name (X): '), 'O': input('Enter player 2 name (O): ') } while True: board = [None] + [' '] * 9 # Better to waste an index than play games of off-by-one. turn = 'X' while ' ' in board: print('\n{}|{}|{}\n-----\n{}|{}|{}\n-----\n{}|{}|{}\n'.format(*board[1:])) print('\n{}|{}|{}\n-----\n{}|{}|{}\n-----\n{}|{}|{}\n'.format(*range(1, 10))) while True: try: index = int(input(f"{players[turn]} ({turn}), please choose placment (1-9): ")) assert board[index] == ' ' break except (AssertionError, ValueError, IndexError): print(f"Sorry {players[turn]}, that's not a valid placement.") board[index] = turn if any(board[a] == board[b] == board[c] == turn for a, b, c in win_positions): break turn = {'X': 'O', 'O': 'X'}[turn] if ' ' not in board: print(f"{players[turn]}, a winner is you!") else: print("Oh dear, it's a tie.") while True: answer = input("Would you like to play again? [y/n] ").lower() if answer == 'y': break elif answer == 'n': print ('Alright, goodbye.') print('*ASCII art goes here.*') exit() I feel like there should be an easier way to get a validated input from the user. Something like `input_validated(message, check_errors)`, with `check_errors` returning an error message or nothing.
Ah ok, I misunderstood you.
From the sidebar &gt; If you are about to ask a question, please consider /r/learnpython or the [learn python discord](https://discord.gg/jQtfh66) /r/learnpython is really helpful I have found, I havent tried the learn python discord before. Also put some more spaces before your code to format it for the readers, it helps a lot to understand what you wrote.
Absolutely. This isn't one of them
Right, there's no "physics/modelling simulation" part to it, the simulation aspect is each ship has a (currently) quite rudimentary AI core that is responsible for managing thousands of ships at once. Player ships can be controlled manually, but every other ship has its own actions. You're confusing a few things here, when I talk about speed vs. memory, I'm essentially talking about the difference (from a computer standpoint) to contiguous memory arrays, vs. a [sparse array](https://en.wikipedia.org/wiki/Sparse_matrix) which has mostly zero entries with a few exceptions. The relative positioning aspect is a different part of that same problem which can be solved with either sparse arrays or traditional arrays. No worries about time for code, like I said it's dense and I wrote it quickly, so it's not the cleanest....
Perl is a write only language. Everyone knows that so you can't just whip that out as the example. ;) 
Does it say which line?
Nope. Or OCaml. D, or a very large number of other languages of note and worth. These are the ones that interest me the most, your mileage may very.
You're pretty privileged to have gone to a HS that has that. 
Just because the code doesn't conform to PEP8 doesn't mean it's bad. PEP8, by the way, [is originally intended as a style guide for the Python standard library](https://www.python.org/dev/peps/pep-0008/#introduction), not every Python program there is, and they're perfectly justified in not using it. In any case, you should look past stylistic issues and focus on more important things, such as whether the code is readable or not, whether there is (unjustified) duplication, whether it works correctly and so forth. I also don't understand what role do "design patterns" play in a program like this?
Do you want a data analyst w/ Python knowledge, or do you want an expert Python developer who can analyze data?
Indeed, don't just blindly take his code as an example of how you should've done it OP.
1. /r/learnpython 1. Python doesn't have "POD types". 1. Python has reference semantics throughout - what are you *really* trying to do, and why do you think you need a wrapper of this sort?
He capitalized his functions! I mean really, do I need to say anything more?? On a more serious note, my point was, a professional developer is used to working on teams and with large codebases. They will do things like follow style guides and do things a more common/proper way. &gt; In software engineering, a design pattern is a general repeatable solution to a commonly occurring problem in software design.
Thanks for your feedback, I'm not a noob though. I guess I mean built-in types. For simplicity let's just talk about ints. I want to pass an int by reference.
Python already passes everything by reference (sorta). What you are trying to make is a mutable int. Your only option is to make a class similar to what you have, ie tkinter's `IntVar` type. Python does not allow mutation with the `=` operator. There is nothing you can do about that. Anything you do will have to use a method. In tkinter's case the `get` and `set` methods: &gt;&gt;&gt; import tkinter as tk &gt;&gt;&gt; r = tk.Tk() &gt;&gt;&gt; x = tk.IntVar(value=1) &gt;&gt;&gt; x.get() 1 &gt;&gt;&gt; x.set(42) &gt;&gt;&gt; x.get() 42 &gt;&gt;&gt; y = x &gt;&gt;&gt; y.set(103) &gt;&gt;&gt; x.get() 103 What is your end goal with this? This sounds like an XY problem. IOW there's probably a reason you are the first person to want a mutable int. 
Really we are looking for more of a Python web dev guy (Flask) that also can write some automation scripts (connect to databases and perform some ETL and business rules). Someone that can take a home grown Access DB with forms to a Python web app if that makes sense. Actually very little data analysis as we can cover that all via SQL/SSRS/Microstrategy and we have they covered skill set wise 
&gt; However, numpy is not that efficient when handling small matrices, it's actually slower in many cases. It's very, very rarely slower if you use it right. It's slower if you use `np.cross([a0, a1, b2], [b0, b1, b2])` as opposed to `[a1*b2 - a2*b1, a2*b0 - a0*b2, a0*b1 - a1*b0]` because you first converted all your lists to arrays, which is a fairly slow operation and then did the math very quickly. If you're doing 10 crosses and use something like `np.cross(a, b, axis=1)`, it won't be slower than the equivalent python code.
I'm assuming replacing 10 crosses with a simple function is a micro optimization. You may want to get rid of a dependency, but that's a separate issue. I'd use it just because then I don't have to code it or test it to the same degree.
I doubt I'm the first person after one. I want to pass numerous `int`s from a bunch of different places and record their values periodically.
The Flask documentation itself is not too bad, though I found Grinberg's Flask Web Development book to be a big help. What is really lacking in Flask World is good documentation (and examples) on the extension packages like Flask-WTF and Flask-Bootstrap.
I mean the big picture goal. The what, not the how. Explain it like I'm your mother. 
`from six import input`
Then I probably shouldn't show you The International Obfuscated C Code Contest website. http://www.ioccc.org/ 
I have a program that models the kitchen. I'd like to take the temperature of the fridge, freezer, dish washer, oven, and ambient air, all at once. They're all floats belonging to different classes, or they're global. I want a class that records all these temperatures every 10 seconds. I may also add a bunch of new appliances.
That whole thing was wonderful, thank you
I've been working on a small roguelike in Python 3. When I started the project I set a few goals. I wanted to do most of the heavy lifting myself, no libraries with pre-built game play functions. The only library I use is BearLibTerminal to draw to the screen. I also wanted to set a rule that I was not allowed to lift code from any Q&amp;A websites or examples without making an honest effort to understand how it works before plugging it in, or write it myself from scratch. This week has been level generation, specifically using Binary Space Partition for room generation. The basic idea is that you generate a subdivided space and connect sibling nodes with corridors. It's been quite a bit of fun, I added graphviz to the class I wrote so it spits out a binary tree that I can look at. I initially struggled quite a bit understanding how the BSP tree might work in python but I've since got a good grasp of that and I've moved onto the much larger task of figuring out what turns a BSP tree into a workable set of rooms for a level. Probably the biggest influencing factor I've found is how you decide when to split a node. I settled on two methods, the first was to set a number of "generations" and keep splitting until I reached it, but this caused some major room size disparity. I then dropped down into the node itself and tried to influence the location of split through restricting the bounds that the split location could be generated in, but this made levels very uniform. In the end I went back to an method I'd discarded which was to choose to split when an area was big enough to handle a split rather than run off a set number of generations. I discarded this earlier because you ended up in a situation where one sibling node had split (because it was big enough) and the other hadn't (because it wasn't). This caused issues with room creation as I was creating rooms at the lowest level of the tree which I defined as a node that has a sibling but no children. So if a node has no children, but it's sibling does, that messes up room generation; or more precisely the ability to connect two rooms that have the same parent node. It turns out the solution was pretty simple. Don't generate rooms for nodes where they have no children, but their sibling does. This has the side effect of placing walls in my level where there would previously be a room which helps break up the unwanted "grid of rooms" feel I was getting. This turned out to be a long post but it's nice to get all this out of my head.
https://xkcd.com/1179/
https://gist.github.com/JakeForsey/9371e6436da8d822b3924d4952b34ffb This is my nooby attempt, any criticism welcomed, looking to improve!
Seems like you might get more interest if you change the title of the role to better reflect what you are looking for.
&gt; They're all floats belonging to different classes, So they are already mutable attributes. So you can pass the "fridge", "oven", etc instances to your observer class. These will be references and since they are mutable you can poll them for changes. class Observer: def __init__(self, *watching): self.watching = watching def report(self): return "Observer reporting:\n " + "\n ".join('{0.name} temp is {0.temp}'.format(thing) for thing in self.watching) + "\n" class Appliance: def __init__(self, name, temp): self.name = name self.temp = temp fridge = Appliance("Fridge", 4) freezer = Appliance("Freezer", -10) oven = Appliance("Oven", 24) observer = Observer(fridge, freezer, oven) print(observer.report()) print() # lets change something oven.temp = 200 # turn on the oven print(observer.report()) 
I know ... we are locked to certain job titles as certain departments can only have certain job titles. We run a analytics team so we can have analytics and even though we build web apps I can't have a web developer title on my team... welcome to corporate America :( 
I think flask's documentation is pretty good to get up and running. Usually have to do some digging to find certain things. Here's another good tutorial on building a rest api via flask https://scotch.io/tutorials/build-a-restful-api-with-flask-the-tdd-way 
I'm currently in year 10, my mate is much older than me
True. I think writing clean python code is important. But that doesn't always means the shortest code. I sometimes split a line into two and add more variables if it makes the code more readable and elegant.
I lol'ed
Yeah, google guy's code is bugged on my first try haha. Player one got 3 x's up top and it still went to player 2 and then said they won.
I'm guessing that means you can't use a third-party recruiter either. If that is the case, are you able to expense an account on careers.stackoveflow.com, or are you limited to your corporate recruiters and what you can do on your own without expensing anything?
You're catching `AssertionError`, which will end badly if the user runs your program with `-O`.
That's the external style guide.
Thank you, you covered a lot of the issues I noticed reading his code. I think learning to write clean and readable Python is a big part of the appeal with the language, and it's an ongoing process. It's honestly what I love the most about Python, how readable and elegant it looks. I always love seeing new and better ways of doing certain thing
My desired interface is: Observer(fridge.T, oven.T, windspeed, ...) Some class attributes, some properties, and some globals. Trivial with double pointers.
Huh?
This is one of my favorite videos ever. Guy programs conway's game of life in APL in 8 minutes. https://www.youtube.com/watch?v=a9xAKttWgP4
/r/learnprogramming has a list of project ideas in its FAQ.
&gt; ...but I'm prepared to defend them all ~~Is there a reason the template doesn't line up? I thought maybe it was just a typo so I added an extra dash (from 3 to 4) in between each `+` in `template_2`.~~ Oops! My main question is about how `template` is being created. It seems a lot easier to read if `template` is a multi-line string (no brackets, no newline characters and no plus signs). I'm curious about the reason for this. In[39]: template = ( ...: '\n {} | {} | {}\n' + ...: '---+---+---\n' + ...: ' {} | {} | {}\n' + ...: '---+---+---\n' + ...: ' {} | {} | {}\n' ...: ) In[40]: template_2 = """ ...: {} | {} | {} ...: ---+---+--- ...: {} | {} | {} ...: ---+---+--- ...: {} | {} | {} ...: """ Other than that, I like your implementation! 
Special thanks to drallensmith, bennr01 and d0pa for code contributions and helping folks with questions and GitHub issues!
so much for scalability
Or https://codegolf.stackexchange.com/
`x ** 0.5` is fairly expensive. If you extract that out to the top of the `for x in range` loop, you can remove that cost. Note that the opposite way, `y * y &gt; x`, is also decent and runs less risk of rounding, but is harder to remove from the inner loop.
 Then as I said, you need to use a mutable type like `IntVar` or a dictionary. &gt; Trivial with double pointers. This has nothing to do with pointers, it has to do with *mutation*. When you change the temperature self.T = 42 You are making a new int object (sorta) and updating the pointer `self.T` to point to it. Now all the old pointers are pointing at the wrong object. In C you can modify the actual bits of RAM that represent the int, in python you cannot. And before you grump about python not doing something the same way C++ does: yes we all know that Python is not C++, and things are done differently. 
Django project for college.
This is a great idea, thanks! edit: although, something tells me python might already optimize this under the hood (i.e. if it already computed x**0.5 and it knows that x has not changed, it will just grab the old value) edit2: i tried changing y &gt; x ** 0.5 for 7 ** 2 &gt; x and it actually runs about a second slower (~4 vs ~3) for n = 1000000 edit3: storing x ** 0.5 in a var helps immensely, though (down to 1.3 secs from 3 where n = 1000000)
Nice
&gt; Indeed, the common discovery mode for an impossibly large buffer error is that your program seems to be working fine, and then it tries to display a string that should say “Hello world,” but instead it prints “#a[5]:3!” or another syntactically correct Perl script, From the classic [The Night Watch](https://www.usenix.org/system/files/1311_05-08_mickens.pdf).
Why would they have 2? And why would capitalization be different between the 2?
I thought about this but wouldn't it be better to first check for modulus with the lowest number and increment from there? (e.g. it will be a lot more common to eliminate a number early using x%2 vs some higher prime)
It doesn't line up because the `{}` are two characters that will be replaced by one.
I think maybe ill add an extra if before the set comparison checking for the first few low primes (2,3,5) and then do it with the set, this will be a little of the best of both worlds
Contribute to an open source project
Thanks for the help! I'll post there from now on! 
r/iamverysmart
My mistake about the spacing! You didn't respond to my main question though? 
Typing is great, but its very existence demonstrates my point: serious people, making seriously big projects end up doing static analysis to help make sure their code works as expected (I am on a small team and we do this because it sure as hell beats fixing a problem found by a customer...). Typing is nice 'cause it is not required: python is great when you don't have to think about all the details when you're in a hurry. I wish I could properly take advantage of such type hints in 2.7! Sadly, all I can do is try and use the IDE comment-style hints. In the end though, you will be using libraries and modules that do NOT observe the recommendations in typing, and as a result, you can be burned because it was an afterthought, rather than something Guido wanted in the first place. My other point regarding this is that hinting is literally just that...hinting. Enforcement can occur, but it is on an adhoc basis, unlike a language like C++ or Java where such things are verified by the compiler. Sure, you can do crazy stuff by using void pointers or dynamic_casts, but you have to choose to fly by the seat of your pants...the rest of the time the compiler will slap you if you try and use incompatible types. Kotlin I like because it could be '1 language for many things'. Not only are they working on a native (LLVM) version, it also benefits from being able to use all JVM compatible stuff already, and it can also be transpiled to JS nicely also. In that latter regard, it competes with Typescript. Typescript is another example where the big hitters of the software world have deemed JS to be unsafe for big projects. Even so, it is no panacea: it will help you avoid problems, but in the end, you are still using JS under the hood and I am kind of uncomfortable with TS because it doesn't -fix- JS' problems, and it can even produce some. This blog post has a couple interesting examples: https://blog.jayway.com/2016/05/06/typescript-web-and-the-illusive-type-safety-advantage/
I'm a C systems programmer by trade (I'm here because I use Python for tooling and home projects), so I am *very* familiar with C abuses :D
Honestly it's more to do with older code bases. It actually says you can use either naming styles, as long as you are consistent within the project. But I assume for newer (and external) projects, they stick to that public one that matches up with PEP8.
Ooh, love using sets for this in Python! Here's my implementation that uses the optimization mentioned by OP of only checking for divisibility of known primes: def primes_raw(n): result = set(range(2, n + 1)) div = 2 while div * div &lt;= n: if div in result: result.difference_update(range(div * 2, n + 1, div)) div += 1 return sorted(result) And a more aggressively optimized implementation of the same basic algorithm, eliminating repeated squaring of the div variable and taking advantage of the fact that all primes &gt;= 5 are equal to either 6k - 1 or 6k + 1 for some natural number k: import math def primes_refined(n): result = {2, 3} result.update(x - 1 for x in range(6, n + 1, 6)) result.update(x + 1 for x in range(6, n + 1, 6)) div = 5 max_div = math.ceil(math.sqrt(n)) while div &lt;= max_div: if div in result: result.difference_update(range(div * 2, n + 1, div)) div += 2 if div &lt;= max_div and div in result: result.difference_update(range(div * 2, n + 1, div)) div += 4 return sorted(result)
Wow very cool. What tools did you use to learn? 
I did this once board = """ TIC-TAC-TOE | | 1 | 2 | 3 -------|-------|------- | | 4 | 5 | 6 -------|-------|------- | | 7 | 8 | 9 | | """ allowed_chars = ["1","2","3","4","5","6","7","8","9"] already_played = [] x = "X" o = "O" number = 0 #[score] xscore = { "123":0, "456":0, "789":0, "147":0, "258":0, "369":0, "159":0, "357":0, } oscore = { "123":0, "456":0, "789":0, "147":0, "258":0, "369":0, "159":0, "357":0, } def adjust_score(who_score,num): if num == "1": who_score["123"] += 1 who_score["147"] += 1 who_score["159"] += 1 elif num == "2": who_score["123"] += 1 who_score["258"] += 1 elif num == "3": who_score["123"] += 1 who_score["357"] += 1 who_score["369"] += 1 elif num == "4": who_score["147"] += 1 who_score["456"] += 1 elif num == "5": who_score["159"] += 1 who_score["456"] += 1 who_score["357"] += 1 who_score["258"] += 1 elif num == "6": who_score["456"] += 1 who_score["369"] += 1 elif num == "7": who_score["789"] += 1 who_score["147"] += 1 who_score["357"] += 1 elif num == "8": who_score["789"] += 1 who_score["258"] += 1 elif num == "9": who_score["789"] += 1 who_score["369"] += 1 who_score["159"] += 1 def check_score(who_score,who): catsgame = len(already_played) for combo,score in who_score.items(): if score &gt;=3: print(who,"Wins") no_winner = False return no_winner elif catsgame == 9 and score &lt; 3: print("Cats Game") no_winner = False return no_winner #[/score] def remove_number(num): already_played.append(num) def check_if_open(num): if num in already_played or num not in allowed_chars: print("That move is not allowed \n") checking = True return checking elif num not in already_played: remove_number(num) checking = False return checking def move(num,token): if token == x: num = input("Player 1, Choose a Square \n") return num elif token == o: num = input("Player 2, Choose a Square \n") return num def board_refresh(last_board,num,token): num = str(num) next_board = last_board.replace(num,token) print(next_board) return next_board playing = True no_winner = True turn = x scoring_turn = xscore while no_winner == True: print(board) while playing == True: checking = True while checking: number = move(number,turn) checking = check_if_open(number) board = board_refresh(board,number,turn) adjust_score(scoring_turn,number) no_winner = check_score(scoring_turn,turn) if no_winner == False: break if turn == x: turn = o scoring_turn = oscore else: turn = x scoring_turn = xscore
A set literally only makes this worse. In-order tests are a good thing, and sets are slower than lists.
&gt; nightmarejs What a fitting name.
Good point. Do you often use `-O`? I've never seen it in the wild, since it does so little.
Eh, mostly habit, to avoid issues with indentation becoming part of the string. Of course, here we do want a leading newline and it's at top level, so that would work just fine :)
There's a Python module for Reddit called Praw. There's been a few hundred bots made with it. It has a stream function that feeds in real time info and keeps a connection. Then I continued to tweak all the functionality of the API to allow custom functionality with the user input. Right now i'm playing around with MySQL/Python to figure out how to save results to a database so I can make a list of the most popular subreddits on the fly and display like the top 15 for the last 6 hours or something. I'm stuck on creating a table lol so I'm googling around. See I'm new to Python lol.
By the way, the word 'trump' thing in the screenshot is just an example. I'm not taking political sides lol. it was random
well the way I did it was write the files on my laptop and transfer them over with SCP. Then run them with ssh. That's the best way to do what you want imo. And btw there are text editors on your rspberry pi you can run through ssh. They are better than just a terminal. But I would never write any substantial code that way. Just write it on your ipad, transfer the files, then run them with ssh. Fastest way to do it.
[removed]
[removed]
[removed]
[removed]
[removed]
As a super Python (and programming in general) noob. I've found it tough but less so because of the flask documentation and more so because flask touches lots of other crap - HTML, CSS, JavaScript, sql, etc. Sentdex (think that is is username on here too maybe) and his tutorials on YouTube have been my main source of learning and I've found those awesome (as with all his stuff, especially enjoyed/enjoying Python plays GTAV). As for the official documentation being a noob I've found flask and requests the easiest official documentation to read but I find it all hard to consume as a non-programmer. Maybe I like those the most because so much non-official documentation exists to augment things. But as somebody else said, there will always be things to gripe about regarding documentation and flask is not one I'd probably bitch about in the grand scheme of things :)
Ah ok, thanks for the response! 
 :(){ :|: &amp; };:
you know Bill Gates started out by making tic tac toe. just sayin
That's funny I'm writing a REST API controller library.
Thank you for the tips! I think the part I get lost at is actually running the code. How is that actually done? I know you can run a python script using cmd python name.py, is that how it's done for all different types of code? (HTML, JavaScript, etc.)
i hope that help you http://pythonhosted.org/pynput/keyboard.html
Looks cool. Maybe consider uses sys.argv, as that much user input can be annoying for some people. 
That's why I hate when languages would rather do something rather than error and refuse to run
Here is my half-assed python 3.6 version with no AI. There are so many functions because I used them to plan the code. from collections import namedtuple Player = namedtuple('Player', 'id marker') Player1 = Player(id=1, marker='X') Player2 = Player(id=2, marker='O') # 012 # 345 # 678 def win_set(win): return set(int(piece) for piece in win) WINNING_MOVES = ( win_set('012'), win_set('036'), win_set('048'), win_set('147'), win_set('246'), win_set('258'), win_set('345'), win_set('678'), ) BOARD_TEMPLATE = """\ _____________ _____________ | {b[0]} | {b[1]} | {b[2]} | | 0 | 1 | 2 | +---|---|---+ +---|---|---+ | {b[3]} | {b[4]} | {b[5]} | | 3 | 4 | 5 | +---|---|---+ +---|---|---+ | {b[6]} | {b[7]} | {b[8]} | | 6 | 7 | 8 | ------------- -------------""" def initialize_board(): return [None] * 9 def display_board(board): print(BOARD_TEMPLATE.format(b=[player.marker if player else ' ' for player in board])) def get_choice(player, board): while True: display_board(board) choice = input(f'Player {player.id}: make your move! ') if len(choice) == 1 and choice in '012345678': return int(choice) def get_move(board, turn): player = Player1 if turn % 2 == 0 else Player2 while True: choice = get_choice(player, board) if board[choice] is None: return player, choice def make_move(board, player, move): return board[:move] + [player] + board[move+1:] def player_won(board, player): player_moves = set(i for i, i_player in enumerate(board) if i_player is player) return any(winning_move.issubset(player_moves) for winning_move in WINNING_MOVES) def declare_winner(player): print(f'Player {player.id} won!') def declare_tie(): print("It's a tie. Bummer...") def keep_playing(): while True: choice = input('Keep playing? [Y/n] ').lower() if choice == 'y': return True elif choice == 'n': return False def play(): board = initialize_board() for turn in range(9): player, move = get_move(board, turn) board = make_move(board, player, move) if player_won(board, player): display_board(board) declare_winner(player) return display_board(board) declare_tie() def main(): while True: play() if not keep_playing(): break if __name__ == '__main__': main() EDIT: Some critique of your code: * Try to keep your functions are [pure](https://en.wikipedia.org/wiki/Pure_function) as possible. Basically, this means not reading any non-constant globals and not modifying any globals or function arguments. This make your code more testable and maintainable. For example, your `plyr1wintest` function should return `True` if player 1 has won, rather than setting the global value `winner`. * Prefer string formatting over string concatenation; that is, do `'{} {}'.format(foo, bar)` instead of `foo + ' ' + bar`. * Any code in the outermost scope of a module will be executed when you import it. Therefore, you should only put variable/function/class definitions there so that, e.g., you don't start the game just by importing the module. * The only time you should use a colon to put multiple statements on the same line is when doing PDB breakpoints (`import pdb; pdb.set_trace()`)
I mean, if he'd replaced those huge compound if statements with a check against a set or something I'd say his code was better.
Well HTML you load into a browser. Javascript you can also load into a browser. A lot of languages involved compiling code. So before you can run it you have to turn it into a *.exe file. Then you can just run that file by itself. C++, Basic, and a bunch of other languages are ran like that. For Python it depends on the code exactly. You can make python based websites with Django. And you can also make standalone executables with pyinstaller or py2exe. But for the most part, yeah you just run python with 'python mycode.py'. Python is an 'interpreted' language. It's not compiled into an executable in machine code. It's converted to bytecode (in a *.pyc file) and then it's interpreted from that.
Am I the only one getting the cool self-referential analogy in this?
Very nice. 
You aren't going to get much feedback on something you haven't begun implementing. Anyone who's given this any serious thought has either found something that works for them, or has started working on it themselves. Because we all have work to do. The fact is that the requirements of different projects tend to vary wildly. Which is why there are so many message queue implementations. Check [queues.io](http://queues.io) for a glimpse. It's also why the most popular options (e.g. Celery) have very broad support for different configurations. For the project where I make the heaviest use of them, I'm currently using a custom RPC protocol for messaging and [disque](https://github.com/antirez/disque) for my tasks. And that's after experimenting with many existing solutions. I may drop disque because it still doesn't quite fit the work load that I need to process. This is an interesting project, so I will be checking up on it's progress. My recommendation, however, is to focus on what you need it to do. If that turns out to be something that others need to do as well, then you'll get plenty of feedback.
Wow, ours are really similar.
Presumably because your file has 25 blank lines scattered through it. A blank line would sort at the beginning. You could filter all the blank lines out with a simple check: for line in unsorted_text: if line.strip(): # only add non-empty lines unsorted_fruits.append(line) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Are there blank lines or empty lines in your original file?
&gt; perl -wle 'print "Prime" if (1 x shift) !~ /\^1?$|\^(11+?)\1+$/' Reimplemented in Python python -c 'import sys,re;print(not re.match(r"^1?$|^(11+?)\1+$",("1"*(int(sys.argv[1]))))and"Prime")'
thanks for downvoting and not helping or saying anything... by the way, i tried this on git bash. i get this. $ python C:/Users/simrash2000/AppData/Local/Programs/Python/Python36/python.exe: error while loading shared libraries: api-ms-win-crt-heap-l1-1-0.dll: cannot open shared object file: No such file or directory 
vim + python-mode - all the rope horseshit.
Hmm. Try opening the file in universal mode: unsorted_text = open("unsorted_fruits.txt", "rU") If that doesn't work: How did you make this file? What OS and what version of python are you using? Show us the output of this code: with open("unsorted_fruits.txt") as f: print(repr(f.read(30)))
Differences/similarities to Celery?
I'm just trying to keep it user friendly. Theres only two interactions anyways, unless using a keyword, then theres 3.
First of all, take a look at the sidebar: &gt; If you are about to ask a question, please consider r/learnpython or the learn python discord. Secondly, this is a windows issue. It seems you are missing a dll that is part of the universal c runtime https://support.microsoft.com/en-us/help/2999226/update-for-universal-c-runtime-in-windows Please check if this is installed. Additionally, i would recommend you stay away from "Learn Python the hard way". The sidebar has considerably better resources. 
**Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
First of all, take a look at the sidebar: &gt; If you are about to ask a question, please consider r/learnpython or the learn python discord. When you post your question there, i recommend you include example code and what errors you are getting. Without more information, it is unlikely that you will get useful answers.
That's a great script, are you planning on releasing it to the public any time soon?
https://automatetheboringstuff.com/chapter18/ is about automating gui tasks. This should be exactly what you are looking for. As for getting keyboard input, that may be harder in your case, depending on which platform you are and how Hearthstone is capturing focus it may consume all keyboard events. In which case your only recourse may be to register global keyboard shortcuts. I had cases (under Windows) where games would block even these, so you should check this first. If it is possible at all, pysdl2 should make it easy.
Thanks! It's very poorly coded and kind of embarassing, but possibly. The biggest thing is that not any random joe can install it. They need to install Python, then the module Praw, then they need to get an API key off reddit by creating an app profile [here](https://www.reddit.com/dev/api/). To anyone at least relatively new to Python, it should be easy to set up. I just don't want to bother making a tutorial lol. Part of me is afraid that it might get abused.. Should I release it?
Can you try dividing the data 30 times and have each thread read the smaller set?
If you think it's poorly coded I say you don't release it, I suggest you work on development of it for a bit more. The truth is there is no way someone isn't going to abuse it. If you're not fine with releasing it publicly can you pm it to me, I see some use cases where this would be great
It's not that bad.. lol. Its functional. I can PM it to you.
Yeah that would be great
Sent it to ya in a pm
Just proofs converted to code really
Id love a copy I always like learning something new
I'll PM it to ya
Praw library. I'm almost finished making a text based Reddit browser. It already exists, but mine is mainly for alerting you when you have messages and responding to them with a small Reddit only terminal made with a raspberry pi. The praw module is pretty straightforward.
Your friend's code is pathetic for someone who supposedly works at Google - starting with the fact that it doesn't correctly evaluate winning states. Either you're lying or he is about to lose his job (or should be, anyway).
This subreddit is all about pycharm. That said I tried like 10x different IDEs and even learned the hotkeys/tools they all come with. Pycharm is the best by far. I also like spyder. It comes free with Anaconda. The autocomplete kind of sucks though.
Its only weakness is shitty autocomplete. If they made that better I would consider switching back to it.
He made his based off mine.
My comment still applies.
Yes. i divide the 30 request into 30 times. and with 30 thread, each thread handle one data. I test the speed, it is similar to the original time. I guess it is because the thread also need some overhead. we can't build the thread in advance and reuse it.
OPs code is not good from a maintainability point of view. It starts by having two *near identical* copies of how to calculate the winner. This should be condensed into a single calculation for who the winner is. The turns are also duplicated. There's a lot of manual iteration over a list. This is what they were talking about when they said "removing a lot of the duplication and redundancies" making the code easier to read and more concise. That doesn't have to lead to bloody code golf.
It's not very common for `-O` to be used, but `assert` statements are specifically intended for debugging/development, not to handle any actual logic that you need to be checked at runtime. You should never depend on them for anything, since in some environments they won't be executed at all (and your program's behavior shouldn't change because of that). There's some more info [on the Using Assertions Effectively wiki page](https://wiki.python.org/moin/UsingAssertionsEffectively), the key quote is probably: &gt; Assertions should *not* be used to test for failure cases that can occur because of bad user input or operating system/environment failures, such as a file not being found. Instead, you should raise an exception, or print an error message, or whatever is appropriate. One important reason why assertions should only be used for self-tests of the program is that assertions can be disabled at compile time. 
It may well be that he was following the style of whatever current project he's working on out of habit. My current project for instance predates Pep 8 by about 2 years. We have ofcourse upgraded all the way up to Python 2.7 but the old code didn't just vanish and we haven't changed it simply to suit a public styleguide intended for the standard library. Do I give Pep8 more weight than say the AirBnB styleguide...sure, but its still just a styleguide for an organization that's not mine. 
If you don't get much response here, try r/asknetsec
Nice, Flask?
Hi everyone! For the past few weeks, I tried turning one of my course projects into a working library. Here is an mvp (minimum-viable-product) of my side-project, and I would like to share it with you. :) The "roadmap" for the first major release can be seen in [this particular issue](https://github.com/ljvmiranda921/pyswarms/issues/5). The documentation can be found in [this](https://pyswarms.readthedocs.io/en/latest/) link. This is still in development, but suggestions, contributions, and feature requests are very much welcome. Thank you so much!
Confirming the other reply you received. Camel cased function names are still part of the internal code style guidelines in the fact that the most important rule is "keep your code looking the same as the code around it". As the old legacy style guide did not follow PEP8 as closely and advocated for camel case function names, a vast amount of their Python still has camel case function names. New code added to these legacy projects should still have camel cased function names so as to remain similar but I do believe brand new code in separate projects can chose the PEP8 naming style. Initially I hated the style guide while doing a contract there but most parts of it grew on me and definitely made sense internally at Google, especially the module level only imports.
Seeing your reference to date libraries reminds me: [freezegun] (https://pypi.python.org/pypi/freezegun) An amazingly useful tool for testing logic around dates.
Then you probably can start with representing space as infinite invisible lego [sheet](http://www.toysrus.com/graphics/product_images/pTRU1-19398468dt.jpg). To which you can stick your objects.
Both codes are quite ugly and far from being *pythonic*! Especially PEP8 shouldn't be ignored - even worse for an experienced programmer 🙄 But within the beginners code I wonder about the *global* keyword? What resource teaches this to beginners? 😲 @OP: Try to understand *functions* and *lists*. Both will help you a lot. Another hint: Look for the *all* function! It enables you to determine a winner 😉
With some languages (C# comes to mind), PascalCase is the norm for functions. So as the other commenter pointed out, maybe he was following the style guide of another project, maybe written in C#, just out of habit? I agree that it's ugly though :P . I know what a design pattern is, but I'm pretty sure that applying the GoF patterns to a simple program like this would make it worse, not better.
Holy shit, this makes so much more sense. Thank you for posting this
So what you're saying is, as standalone code in a new project, he's using the wrong style guide? :D
Cool job!
Yes, this. As someone interviewing developers I frequently ask questions that appear very naive at first blush. "What's your favorite programming language, and why?" I don't actually give a flying [d]uck what your favorite language is, especially if you can give me an answer that shows you've put some thought into the question and can think critically about language selection or why that matters. Most common answer: "Python, I guess. It's the one I know." Bad answer: "Python because it's just so easy to use!" Better answer: "I really like using Python because I find the syntax reflects the way I think about problems, but also because it promotes explicit code and not hiding the magic. Also, having the batteries included is nice. In reality though, there are different languages that are appropriate for different jobs." Best answer: Your answer teaches me something I don't know or makes me think about programming in a new way. *Disclaimer: I don't actually use Python at work, and I'm not hiring Python devs. You can probably come up with a better "Better" answer than I can.*
It's a free Udemy course. 82 lectures, 9 hours of video, and 1400 enrolled students. Gonna go through the material tomorrow, so can't comment on the quality/content.
I made an automatic bond issuance calendar for the liquidity management firm I intern for that shows optimal auction and settlement dates for 3 months and 6 months bonds by taking into consideration non settlement dates from clients in different countries (accessible through bloomberg api). I used the openpyxl module to display the data. This program saved at least 100 hours of worktime (given the complexity of the task)
I'm no Python expert, but I think my biggest problem with this code that as a reader unfamiliar with the code it's difficult to follow the code and tell what's important. (I think that comprehension at low effort is an important feature of maintainability and that it supports overall productivity. I understand this may be an unpopular opinion.) If I were code reviewing this I'd ask you to make your function names more descriptive, or at minimum add some newlines here and there to reinforce what the "important" part of a given block is. For example I'd add a newline after the call to game in main. As it stands, it looks like it's initializing some global state instead of a call into a deep function. Alternatively, calling that function 'play_game' gives the reader a LOT more context about what's going on inside the function and what it's in charge of. This particular program isn't a great example of my concerns, because it's necessarily fairly simple. (Maybe you ignored what I'm worried about *because* this is a simple example. /shrug) 
Thanks for your insights! Kotlin really sounds promising. &gt; Not only are they working on a native (LLVM) version I like this a lot, but on the other hand, wouldn't this break compatibility to the Java packages and divide the ecosystem? &gt; and it can also be transpiled to JS nicely also. This is great! Is there a package manager with centralized package registry in Kotlin, like npm/npmjs.org, pip/pypi, cargo/crates, etc. I couldn't find one? How do you handle dependencies?
I'm working on [Audible Reddit](https://audiblereddit.herokuapp.com). In which user can listen or read a news article from Reddit in there native language right now only five languages are available. My designing skills are abysmal, and few things need a fix but, do share what I can improve and what you liked and is there any chance you would like to use this kind of tool more often?
Well before my code wasn't working, when I emailed to him, global was his solution. And thanks for the help! &lt;3
well tbh I'm not sure how much python he actually uses.
Just remember, APL existed long before Unicode; it's Unicode which had to go "wtf is this crap, ok, you get some codepoints next to Elvish and Klingon."
I was expecting his version to show Google copyright and call your version.
Yes, this will be of great help, thank you
Ok, but the approach is okay right? I mean, can a password protected file be split? Should python ask for the password or something?
Thank you very much for the help you have provided. Should hearthstone consume all keyboard events and block global keyboard shortcuts, is there any way to bypass that?
Obfuscated C is typically artfully done, not just modem noise.
Honest question: how is that better than just adding simple, one line scripts to a bin/ directory that will launch those other tools for you? You'd change `make test` for `bin/test`, but everything else stays the same and you won't have to battle `make`'s syntax. Maybe I'm not that used to make, but I started using it as you described and I grew fed up with it, so I replaced my make commands with really simple scripts that anyone can read or edit without having to know an arcane syntax. Also, tabs... I can see the value of it for compiling C for example (I don't know CMake, so I can't compare), but for launching external scripts, well, why not use scripts?
Ok, my advice: **Forget about global**! Really, that is harmful and you shouldn't use it. You won't need it in 99,99999999...(much more)...9% of your code!
In game work, the `board` is the container, the `position` is the state vector of all pieces on (in) the board.
Hearthstone is build using Unity. I have not seen any Unity game that does this, i mentioned it more as a theoretical possibility that you should check. You could write a simple program that does nothing but call the following function in an endless loop and print the results. import ctypes import sdl2 def get_keyboard_state(): """ Returns a list with the current SDL keyboard state, which is updated on SDL_PumpEvents. """ numkeys = ctypes.c_int() keystate = sdl2.keyboard.SDL_GetKeyboardState(ctypes.byref(numkeys)) ptr_t = ctypes.POINTER(ctypes.c_uint8 * numkeys.value) return ctypes.cast(keystate, ptr_t)[0]
I don't know if a equivalent library exists for Python, but you can definitly use headless chrome through Selenium. Here is a nice article about how to make it work :) [Driving headless chrome with python](https://duo.com/blog/driving-headless-chrome-with-python)
It really does, I wonder how do they compare. There are so many python build systems, and for the more recent batch of them Meson seems to be the best one.
Thank You but the thing is that i want to use aws lambda. 
Page not found... But i think that we are now on same page :D Grid simplification is always the best way to do testing. Ok, and i did do that part, first in 2d than in 3d. It is not quite difficult. But there is a limit the variety of the spaces you position. If you have a some simple box shape it is easier to generate a virtual_grid per that object dimension ( so it can become from 10x40 to 1x4) depending solely on virtual units, and to just say that virtual unit has value of 10. But there is a catch, it is a scale and variety to the boxes. *Scale* Every 3d program uses this method, and then you have some complicated errors and workarounds if you wanted to use for example imperial vs metric system, since then space is behaving differently. *Variety* if you have n number of boxes and you dont have gcd within them that is bigger than 1 , then the speed of computing and the toll it takes on the computer is really big ( Since the number of points grows exponentially , because of volume ) and looping ( even generators ) take really big time computing that solution. The problem with variety is also the shape of the object, what if it box that stands on 1 point, or ball, or some other shapeless object ( need integrals to determine volume ), points often go haywire. Here i would like to lose all that nested loops and just implement the some geometrical axis ( or diagonal line // depending on the object ) and use euclidean rules to determine closes point in specific height or with or plane ..... That can not be done with point system. I mean you can, but then the number of points grows with logarithm function of number of elements you have and elements you add (lines,axies, rotation angless ... ) to calculate. The best way to do that is tho have some ethalon (virtual unit ) that has no space, a big nothing, and then count those nothings. You can more than half those points ( since you dont need them, as a point is intersection of those nothings ) and virtually those nothings have no mass ( computer space ) to it. Ofcourse , other data like lines, shapes, axies, points, have data to them, but it is much lesser number of bytes per element than needed, since you will generate specific point per need. Do you see what i am getting at? So the problem presumes, how to define a space in this manner and how to define space without space in it that behaves like space ? I tired going binary, and define a new null pointer (normal null = /x0, space_nul = /x000, where space_nul == nul but it can generate separate axies if needed, but then problem came out since vectorial math is not quite good with programming, there should be some kind of intepretor or wrapper to separate it from normal binary numbers to not raise errors. But then i end up back on tuples/lists/arrays etc, which brings me back to initial "too much points" issue. 
What, specifically, have you tried? What happened/ in what way did they fail? The fact that you start with npz is irrelevant - just get the numpy array out of it and go from there, there are a bunch of ways to turn a numpy array into a PNG. What shape are the arrays? If you're just using the PNGs in python anyway, can't you just leave them as numpy arrays?
splinter ?
Thank you very much, you are a life saver!
put'em in a github gist . 
Could you give more detail please ? Is this a library ?
Thank you! :)
&gt; You're confusing a few things here, when I talk about speed vs. memory Yap, i was think you were talking about shear number of data and speed of computing. Sorry. yeaaah... arrays use too much of computer memory for my taste. I would not like to have to use supercomputer to calculate m solutions for n object (where m&lt;n). So AI uses managing for movement ? In first comment, i mentioned that i needed to use a new data type, since number of overall points ( of each shape ) grows on logarithmic scale with each element, and i need to do non-relative permutation positioning, like tetris or lego. As long as it is commented i will have no problem with it. 
this: https://splinter.readthedocs.io/en/latest/ I've been using it for testing an ecommerce funnel.
CODE inquiries:
Well still it is not as good as this: https://github.com/graphcool/chromeless That is why i want to know if there is any way to use this chromeless.
There are no true real numbers in computer. Whatever you do, there is always going to be integers underneath it all. So why not just embrace this limitations, and work with it?
Try with [concurrent.futures](https://docs.python.org/3/library/concurrent.futures.html) and especially the ThreadPoolExecutor. Otherwise, there are really interesting approach (using some the futures paradigm too) within the [Dask](https://dask.pydata.org/en/latest/) ecosystem.
Couldn't `Input` be replaced with something like: if sys.version_info.major &lt; 3: input = raw_input ?
[arena.py/lne:40] (https://gitlab.com/willzfarmer/kobayashi/blob/master/kobayashi/arena.py) &gt; def update_fleet_attr(self, team, key, value): &gt; for ship in self.ships: &gt; if ((ship.team == team) and (not ite here. If i did not get something, getting element by name can be done with object[attr_name]=value, getattr(object,attr_name)=value, but i am not sure that object.attr_name can be done unless the object has attribute called attr_name but then the "key" attribute is not necessary. &gt; def distance(coord1, coord2): &gt; return math.sqrt(sum((coord1[i] - coord2[i])**2 for i in range(len(coord1)))) can you explain this to me a bit ? [util.py/line:17](https://gitlab.com/willzfarmer/kobayashi/blob/master/kobayashi/util.py) &gt;def all_neighbor_points(point): &gt; coord_mods = list(set(itertools.permutations([0,0,0,1,1,1,-1,-1,-1], 3))) &gt; new_coords = [tuple(point[i] + coord_mods[j][i] &gt; for i in range(len(point))) &gt; for j in range(len(coord_mods))] &gt; return new_coords See, i would like to avoid this. For loop nesting, that you need to use every time you need a point for some object. Of Course you could generate point by triangulation with 2 points and 1 reference but it is still nesting and nesting and nesting. Generators can speed things up, but ... still ... i would like to avoid the unnecessary calculation by proxy geometry. If i may comment. I see to much games uses wrong health/energy relations. Most game masters use the slogan "the better the weapon , the better the game". The reason why kobayashi is unbeatable is because every weapon has its weakness, so one type of weapon has some damage to specific ship, other type of weapon has small to no damage to different kind of ship. Therefore it is game of strategy not brute force. Otherwise you could generate a multi beam all powerful weapon that can annihilate all enemy ships with one dose, which becomes necessity in future of playing. In war , for every action there is opposite reaction, when people developed nukes, other people built shelters. And if i may ask, it seems that perhaps your game is data oriented, why not use maps, filters, and other function oriented programing ? So lets talk about space. You've made a unit grid and are moving ships in that grid. It works if 1 point is one ship and you cluster them in some form or shape. But if you are working with overall shapes and managing them , the shear number of points very quickly becomes the big problem. It would be like you are trying to position the cluster of ships A to the cluster of ships B to make a bigger cluster with not any empty space, and every cluster has lets say 1000 ships. It would take a different approach than grid lining. 
Shameless plug, but I just added headless chrome support to arsenic: https://arsenic.readthedocs.io/en/latest/reference/supported-browsers.html#headless-google-chrome
I agree with ducdetronquito, installing the chromedriver + selenium is the way to go in python, i've gotten it to work beautifully here: https://github.com/kingbuzzman/noworkday NOTE: the install.sh is where i install the chromedriver -- i like automation and reproducibility 
Well i can, but it must be a better way. Lets say i have 4 rooms ( 1x3,2x5,0.5x3,1x1) their owerall volume is 31 points in total (where .5 is becoming a unit), with max area representation that is permutation of all width and heights with smallest result. And that is with 4 rooms that are quite small. Now here you could use some multiplier to generate a fitting scale to normal room , but then you have problem if you start with metric and resume with imperial. If you get with a normal rooms with fixed ratio and then only display result with some scale, you will get infinite number of points and you would need supercomputer to calculate them all. 
AWS free tier is very generous, I'd go with Lambda. It's pretty easy to get started, and you set up an API gateway in front of it to handle requests.
splinter looks like it needs selenium: https://github.com/cobrateam/splinter/blob/master/splinter/driver/webdriver/chrome.py
My take on this is with Numpy: import numpy def generatePrimes(n): finish = int(n**0.5) + 1 numbers = numpy.arange(1, n+1) i = 1 while numbers[i] &lt; finish: numbers = numbers[(numbers % numbers[i] != 0) | (numbers == numbers[i])] i += 1 return numbers Edit: Just wanted to write my reasoning. I implemented your optimized version but rather then constructing the list from beginning I construct the range of numbers that should be checked and then apply sequentially the last known prime number to filter out the numbers that should not be in the list. For example: in the first check all the number divisible by 2 will fall out. In the next cycle (i=2) all the numbers divisible by 3 will fall out, but in the third cycle (i=3) all the numbers divisible with 5 will be checked, because 4 already fell out.
You have just invented floating point number. It is implemented in a way, that specifically addresses this exact problem.
[This](https://github.com/zyocum/tic-tac-toe/blob/master/tic_tac_toe.py) is my solution. I also used `numpy` and I think my solution for testing for a win is pretty "numpythonic", though probably is a bit cryptic if you aren't familiar with `numpy`. It doesn't use any arithmetic or special numbers, just set comparison, which is really how a human checks for a win too.
Thanks for checking it out!
The design of the "pro" code is superior, and it (likely) follows their own internal style guide. How would you improve the "design patterns"?
this code returns error: NameError: name 'someValue' is not defined 
I am surprised displaying the board is a problem. It's just print statements. Is this webdevs trying to do it in the browser with CSS or something?
Maybe you should save the return value of `input()` before calling `int()`?
Everyone has bugs. It's a simple missed line in the win conditions and will easily be picked up by testing. It's also easy to add that line due to the way the check is implemented. From its position it looks to be a delete line error misclick in the editor as it's the first entry in the 123, 456, 789 sequence. You wouldn't START that sequence with 456 so likely emacs fat fingers. Should he have exhaustively tested it? Well I wouldn't for a friend, for code this simple. What else is wrong with it?
In cases like this, it's easily resolved by asking the complainant to justify why they dislike the code :)
Don't you rather mean that you want to check it the input can be converted to an integer? Try this input_string = input("&gt; ") try: parsed_int = int(input_string) # Do stuff with parsed_int here except ValueError: print(input_string)
What version of python are you trying to run that under? https://stackoverflow.com/questions/21122540/input-error-nameerror-name-is-not-defined
Files are just a bunch of bytes plus some metadata. If you can get the same bytes back, there’s no reason you can’t do whatever you want with a file. 
**M,n,k-game** An m,n,k-game is an abstract board game in which two players take turns in placing a stone of their color on an m×n board, the winner being the player who first gets k stones of their own color in a row, horizontally, vertically, or diagonally. Thus, tic-tac-toe is the 3,3,3-game and free-style gomoku is the 19,19,5-game. m,n,k-game is also called a k-in-a-row game on m×n board. m,n,k-games are mainly of mathematical interest. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.24
how ? but you cant check if the input is string anymore.
Noice! 
python3
I don't understand. The function `input()` only returns strings in Python 3.
I can you recommend you this ebook: Python Crash Course A Hands-On, Project-Based Introduction to Programming (by Eric Matthes, ISBN 1-59327-603-6) Or, you could also check out python tutorials on this youtube channel: https://www.youtube.com/channel/UCfzlCWGWYyIQ0aLC5w48gBQ
Is there a specific reason you want to use AWS lambda?
Re.match("[a-zA-Z]+") https://docs.python.org/3/library/re.html#re.regex.match And: Try: &lt;block&gt; Except error as e: Print(e) I'm typing on my phone so please excuse any typos
I just want to scrape websites (with JS content) as fast as i can and it looks like the best way. Now i am using Selenium with PhantomJS but it is very, very slow.
In the beginning I would steer away from full-blown IDEs and go with a text editor, like Sublime or Atom, so you won't have to learn the IDE along with Python. Sublime and Atom are both customizable with extensions so you can build the editor that fits your personality. Sublime is my personal favorite. Try these resources: - [Setting Up Sublime Text 3 for Full Stack Python Development](https://realpython.com/blog/python/setting-up-sublime-text-3-for-full-stack-python-development/) - [VIM and Python - a Match Made in Heaven](https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/) - [Emacs - the Best Python Editor?](https://realpython.com/blog/python/emacs-the-best-python-editor/) - [Install and Configure the Atom Editor for Python](http://www.marinamele.com/install-and-configure-atom-editor-for-python)
Thanks for checking out my videos. They are a bit dated, but it can help solidify your knowledge by upgrading the dependencies to their latest versions as you go through the videos. http://discoverflask.com/ I personally like the Flask docs. I agree with you that they are a bit lacking in details, but you can always drop down to the code and find out more since it is well organized. Also, I am building out an advanced beginner Flask Microservices tutorial at http://testdriven.io/. 
Was it ever? Some major libraries or major changes where it's basically a new library might be appropriate but otherwise it's not interesting at all. Pypi is the place to publish your new versions. 
Fair enough, I won't post them here any more. 
The code as you wrote it isn't "checking for strings" anyways. You're getting a string out of input(), and then casting it to an integer.
In the past I learned about some interesting projects simply because they posted a minor release here, and postings of that type didn't seem to be uncommon, but I could just be remembering that incorrectly. Thanks for the feedback!
Your problem is that you are casting to an integer and probably not actually passing it an integer in the input. I ran your code in the python command line and here's what you get. So if you're just trying to get actual strings, you need to remove that cast to int() around input(). &gt;&gt;&gt; try: ... someValue=int(input('&gt; ')) ... except ValueError: ... print(someValue) ... &gt; hello Traceback (most recent call last): File "&lt;stdin&gt;", line 2, in &lt;module&gt; ValueError: invalid literal for int() with base 10: 'hello' During handling of the above exception, another exception occurred: Traceback (most recent call last): File "&lt;stdin&gt;", line 4, in &lt;module&gt; NameError: name 'someValue' is not defined 
I think sharing what you are working on is fair, give it a catchy headline and people that are interested will check it out. Whether a library went from 1.0 to 1.1 probably not very useful. 
For the general mass, even fairly popular package updates wouldn't necessarily get my attention if it was a patch build (unless there was a big gaping issue that needed to be patched, of course). In that case, minor and major builds with new and breaking features are definitely interesting for *popular packages*. But as for your packages, instead of just posting "version 1.6.3rc2 released" (which, for those of us not following your package means absolutely nothing) I would recommend you spend some time to write a short blog post explaining what your new feature does, maybe highlighting it with a short demo. Then if you were to post a link to that blog post here I think that may get more positive attention. *p.s. if you're new to blogging and don't want to deal with the massively annoying overhead of hosting your own solution, check out [Medium](https://medium.com/). It leaves much to be desired, but it is a good enough turn-key solution.*
&gt; You are wasting our time. I wouldn't say that. I learn about all sorts of useful projects here.
i'm making int() around input() because i want to make sure that input will be string 100%,
that's the only way to check if input is string or int
can u tell me how can i check if the input is 100% string?
yeah but if you pass a integer to input() in python 3 and then call int() on that variable it will become int, otherwise if it's a string it will cause an error, a ValueError. and valueerror is the only way you can check strings in python3
... that's not what int() does man. You are taking a string from the call to input(), and then **casting it to an integer**. You need to review the documentation. https://docs.python.org/3.6/library/functions.html#int &gt; class int(x, base=10) &gt; **Return an integer object constructed from a number or string x**, or return 0 if no arguments are given. If x is a number, return x.__int__(). For floating point numbers, this truncates towards zero. input() will **always** return a string, that's what it does. You don't need to validate that. The only thing to validate is whether someone gave you bad input, like you expected their Name but they gave you executable python code instead. https://docs.python.org/3.6/library/functions.html#input &gt; input([prompt]) &gt; If the prompt argument is present, it is written to standard output without a trailing newline. **The function then reads a line from input, converts it to a string (stripping a trailing newline), and returns that.**
I don't think you really understand the terminology you're using. input() returns a string, always. Every time. (Even if I type "1001" at the prompt, and you think that's an integer, it is returned from input as a String, not an Int.) You're not "validating" anything by trying to cast it to an int. This is really poor programming. If what you're trying to do is to validate that the input contains valid character sequences than you need to take the result of input() and probably run it through a regex.
idle really confuses me... *stares into nothing*
Some years ago I had memory issues opening big files, is that still a thing today?
 try: randomInput = int(input('&gt; ')) except ValueError: print("The input was string") this code right there ^ makes sure that if the input was string, it causes an error, then the except catches it and prints out "The input was string" there is no way print that line with entering an integer to the input so what im trying to do is MAKE sure the input will be a string and at the same time the string will be saved in the variable and not be deleted
what if you are making a Quiz program in python and you dont want people to enter an integer while you have a question like "What is your name"
Again, you are using incorrect terminology. "String" is a Type - it is a sequence of unicode characters that includes the standard Alpha-Numeric sequences, punctuation, special characters, etc. You are not "validating a string" in that code - what you're describing is that you want to make sure the user input was a non-numeric sequence. There are far better ways to do that. Your code as written is a poor solution.
I think most of us will agree that the code is ugly and non-idiomatic in some spots, but aside from the one bug, it's functional, and far from pathetic. Take it from someone who has worked at various large tech companies over the years: the engineering skill at these places is vastly overstated, so don't assume that someone at google is Guido-lite. The rank-and-file are your usual flawed but mostly competent engineers; where these places really distinguish themselves is how they attract and retain high-end senior engineers that really move the needle.
man.. try to make a simple Quiz with python that asks for your name and at the same time you cant enter a integer. you will see what im trying to say
I'd also like to see it... Also waiting until you're happy with the quality of your code to release it is a good way to never release anything lol
if you enter an integer, it will be converted to a string, and you cant even " if type(randomInteger) == str: " &lt; --- do this 
Then validate the returned string from input() against a regex pattern of [A-Za-z] Or, you can use the **isdigit()** method, or **.isalpha()** Seems like you're still very much learning the language so you might want to check out the documentation, some tutorials, and try posting to /r/learnpython instead of here.
i told u, make a demonstration how to make so user's input wont be integer 100%
i found the solution. user_input = input('&gt; ') try: some_value = int(user_input) except ValueError: print(user_input)
this one works
That is really, really poor form man. You're purposefully trying to throw an exception just to check if something is a name. name = input('&gt; ') if not name.isalpha(): print("Enter a name please") exit() 
i was searching over internet many ways to check if a variable is string or variable, but i didn't find this, though i remember .isalpha and isdigit() when i was learning python
but i prefer my way, still thanks for the help
Take a look at the desolate area of release announcements, that is /r/pythoncoding/. Noone will complain if you post your annoucements there. But hardly anyone will read it either. This sub have a volume of posts, that can absorb quite a lot of announcements, before they stick out like a sore thumb, so I'm not saying you should shut up, or risk creating the same effect here. But I still don't like the thought of having a mostly 1:Many communication at a place I'd rather see as a Many:Many communication space. 
Look, even if the user types `15`, the user's input **is** a string and **not** an integer. These words don't mean what you seem to think they do.
It would be better if you posted articles about problem solved using your library rather than a v0.15 changelog.
redditors are assholes just post when you have something you think is interesting don't worry about it
I feel like this post and the readme are missing a key piece of information. How many MB/sheet for letter/A4 size paper?
`PyAutoGUI` is the package you want. It can be used to map keys to mouse clicks quite easily. 
Medium? Really? A lot of people spend time building decentralised alternatives to popular proprietary services and where already have easy decentralisation (WordPress is easy to use like Blogger and has more features than Medium, it's Open Source and with other CMS contribute to keep the web open) people suggest to use Medium just because of fashion? Years ago the developers care a lot of Web openness. Now there is a new generation of developers that live on GitHub and suggest to use Medium instead of WordPress. I'm really annoyed by this.
Did you mean to reply to me or someone else? I'm not sure of the context of what you're saying. A setup.py file is something a project defines so setuptools / distutils knows how to construct an egg, wheel, etc.
Seems like the perfect fit! Thanks very much for the help
Sell the sizzle, not the steak.
Of course there is: https://groups.google.com/forum/#!forum/comp.lang.python.announce
I would use PyZMQ with JSON or Pickle as the serializer. ZMQ has a good guide, it will teach you network programming without having to deal with really micro things. http://zguide.zeromq.org/page:all 
Not fashion at all. As a long-time blogger and a switcher of many different platforms (blogger, wordpress, github pages, and now onto Medium) I just simply don't want to have to wrangle with managing *anything* but blog content. Simply put, I hardly have enough time to write blog posts as it is. Stack on blogging software or infra admin, and I'd probably not do it at all. Look, I don't blindly use Medium. There are *tons* of things I hate about it. The code formatting leaves much to be desired, and I think commenting is not ideal. But... the good outweighs the bad for me. The other good thing about Medium is visibility. I'm not internet celebrity by any stretch of the imagination. Writing Medium posts compared to the previous platforms, I saw about a 10x increase in traffic. Call it what you will, fashion or not. But my words got to more developers' eyes on Medium.
was it ever?
&gt; I'm really annoyed by this. congrats you're going to be annoyed til you adopt ethereum or whatever decentralized web solution emerges
No, it is ALWAYS a string. "123" is a string. "XYZ" is a string. They are both strings.
people still use google groups? when is it getting deprecated? /s
User input is always a string. You don't have to check that it is. Do you mean, how to check whether user input can be converted to an int? answer = input("Please enter a number: ") try: the_number = int(answer) except ValueError: print("Sorry, %r doesn't look like a number to me" % answer) 
&gt; something tells me python might already optimize this under the hood (i.e. if it already computed x**0.5 and it knows that x has not changed, it will just grab the old value) Wishful thinking? CPython does not cache arbitrary expressions.
First thing, is your CPU able to use the hyperthreading technologies ? With 24 cores, you will be able to support only 24 threads simultaneously. 
Thank you for the comments. I appreciate what you are saying. I does indeed seem to be difficult to get feedback on a design rather than an implementation, which may just be an unfortunate reality. At any rate, a lack of negative feedback is at least somewhat encouraging.
Here's a tip. Quit giving a shit about downvotes people are going to see it either way. Maybe it's not the top r/python post but if you enjoy posting it then who cares? It's Reddit 
Sure, that has happened. But I think if you want to promote your project the right way is to write a new blog post about it. Maybe a case study. 
Wow. This looks like a substantial amount of work and it is going to save me a lot of time when I get back to coding spectrum searches. So many good ideas and solutions here. After lavishing so much praise, may I offer one constructive criticism: [actually I can't .. I was about to recommend that you use a Seaborn color palette to make the spectrogram easier to read, But I can see from the frequency mapping that you are already using Seaborn, although I can't see where you imported it. Well, OK, maybe use a different Seaborn palette that would make the sgram easier to read?]. I am deeply grateful for these kinds of contributions.
I haven't performed a direct comparison to Celery. However, the [motivation section](http://lightbus.org/en/latest/motivation.html) should give an idea of the conceptual differences, and the [section discussing Celery](http://lightbus.org/en/latest/alternatives.html#celery) gives an indication of how Lightbus may differ.
It has a flask extension but the core tries hard to be decoupled from every framework.
Ah, it must be nice to have a fast computer... On my computer `slowPrimes(1000000)` takes 26 seconds. But `genPrimes(1000000)` takes 13 seconds -- much faster. For *small* N, `slowPrimes(N)` is faster because it has less code and so less to execute. But as N gets bigger, `slowPrimes` suffers badly for doing more work. Count the total number of loops performed by each, and you will see that `slowPrimes` does many more loops on average. 
For the code see my previous [github repository](https://github.com/neozhaoliang/pywonderland)
Have you actually timed them to see which is faster?
You're quite late to the party ;) http://ollydbg.de/Paperbak/ 
I don't care about up/downvotes, just trying to avoid antagonizing a community with inappropriate posts.
Why is this downvoted? Sounds like good advice to me.
Fair enough. You're not antagonizing anyone. That's what this place is for. I'd say keep doing your updates as is then. Others have mentioned good things about a blog post. Maybe go that route. But either way don't stop doing it. I'll be sure to check out the next one 
Nope, Arch Linux uses glibc. Were you thinking of Alpine ?
This is genius. But why don't you just store it on a disk on key? Seems much simpler.
You have to use to the setter based API if you want to get rid of the dt. You'll also need to reuse the axis object and not clear the plot. Matplotlib can be very fast, but it takes a lot more code.
`user_input = int(input("Type here: "))` is an int not a str is what OP means. OP is worried that if a regular string "foo bar" is typed it will obviously fail to convert to an int and break. OP wants to know how to to handle this.
Have you taken a look at existing solutions? Any reason those didn't suit you? i.e.: - http://fabioz.github.io/mu-repo/ (also in Python -- disclaimer: I wrote that one) - http://mixu.net/gr/ (done in node.js) - http://myrepos.branchable.com (done in perl) 
I don't want to manage hosting for my blog, I just want to post. So I use blogger. My actual projects live on another painstakingly cared for server that I break the shit out of all the time.
Yeah, I'm always surprised when someone posts an update to some obscure library and just links to a changelog. Tell me what your library does!
Not really - the person probably wants people to use their library and they'd like to better maximize their impact. That means they *have* to care about what people think.
I found mu-repo before starting to write on tsrc. It's very nice but as far as I know it does not have a *centralized* manifest, an we needed that feature. Same thing for gr Did not know about myrepos, will take a look, thanks ;)
Why would you take a pointer instead of a reference 
Why would I need to? Regardless, his professed speedup is *less* than just the speedup of extracting the `x ** 0.5`, which he also did, so he clearly isn't having any wins due to the use of `set`.
Both have negligible quantities of physical code, as far as hardware resources are concerned. The size of a Python codebase matters even less for performance than languages like C, since CPython is interpreted.
&gt; I tried changing y &gt; x ** 0.5 for 7 ** 2 &gt; x and it actually runs about a second slower You're changing the algorithm so the code does something different, so the results are meaningless. I guarantee `7 ** 2 &gt; x` is faster then `y &gt; x ** 0.5` on a modern CPython, because `7 ** 2` is constant folded, and `** 2` is cheaper than `** 0.5` anyway. &gt; something tells me python might already optimize this under the hood (i.e. if it already computed x**0.5 and it knows that x has not changed, it will just grab the old value) Generally speaking, you need a JIT to optimise anything involving variables in Python, since nearly any operation on nearly any variable could theoretically do anything whatsoever.
IDLE is almost universally considered to be the worst way to use Python. If you have the option (working on your own laptop), try Jupyter notebook, Spyder or Rodeo. If you have the option, use the Anaconda python distribution for Scientific/Data Science work as it will have most libraries pre-installed. https://www.continuum.io Are you able to run the sample code in the documentation for isolation forests? http://scikit-learn.org/stable/auto_examples/ensemble/plot_isolation_forest.html
I hope you noticed all the downvotes for the comment you replied to.
I copied it from wikipedia and their example was in C. So no references.
Thank you! I actually use `plt.style.use('ggplot')` to set the matplotlib style in the first code cell… 
Hey, thanks for the feedback. I'll add it to the readme in a bit, but with the current (hard-coded) parameters it stores 256 bits from the original file per QR code and 15 QR Codes per A4 page, so almost 4KiB per page. 
This algorithm is called the seive of aritostines.
&gt; Why would I need to? Why would you need to actually measure the speed of something before claiming it is slower? Well, how about to avoid looking foolish? Or worse, foolish and arrogant. On my computer (not the newest or fastest in the land, but it gets the job done) the original `slowPrimes(1000000)` takes 26 seconds, the improved `genPrimes(1000000)` takes 13 seconds, and the version with sets `primes_raw(1000000)` takes 0.5 second. Now I'm not an expert at profiling code just by reading the source as you are, but by my calculations that makes the version with sets *faster* than the original, not slower. &gt; he clearly can't have any wins due to the use of `set`. Oh, well if it is **clear**, you must be right. Sorry for interrupting your pontificating with mere measurements. Anyway, don't let a small thing like facts get in the way of your superior knowledge. Oh, and whatever you do, don't actually measure the code for yourself. Just downvote me and move on, secure in the knowledge of your infallibility. 
Hmm very cool.
Humm, I agree it doesn't have a centralized manifest, but it has a solution to manage dependencies by allowing to have dependencies made relative by each other (the idea is that you commit in the repo your dependencies through a .mu_repo file, then, you can locally enter that repo to issue commands and it'll understand that a repository is sibling to another). http://fabioz.github.io/mu-repo/cloning/ has more details... I'm curious if you do have a use-case that you need a centralized manifest (which is not covered by the config on .mu_repo).
Is this another one of your "facts" like "sets are slower than lists" and "there's no need to time code before judging which is faster"? Obviously not all Python bytecodes take the same time to execute, but on average, executing N bytecodes will take less time than executing N+M bytecodes. In other words, all else being equal, the more code you run in Python code, the longer it will take. The slowPrimes function is slower because it executes more code in Python. I thought about doing a big Oh analysis, but it's the wee hours of the morning here and I couldn't be bothered. You can count the number of loop iterations yourself, but the literature says that trial division by primes already seen asymptotically approaches O(N\*sqrt(N)/(log N)\*\*2), and I'm pretty sure slowPrimes will be something like O(N\*\*2), so you do the maths. Edit: formatting.
Thanks Michael for commenting, I really enjoyed your tutorial (i will go back and finish it). Curious, what do you mean by 'advanced beginner' Flask tutorial? I really want to get the RealPython course, a bit expensive for me currently, but I will get it when I can afford it. Can someone get individual books from the RealPython course if they can't afford to pay for the full course? Eg: just the Flask book from the RealPython course.
I like the idea of storing to PDF or png, both likely to be readable 200 years from now. The utility referenced, paperback, requires paper, also a good idea but slightly different.
You don't post just because you went from v1.2.1.a01 to v1.2.1.a01.1. Obviously you have to calibrate things. I'm assuming OP isn't a lunatic.
Exactly what I was looking for. Thank you !
Wordpress? If you mean Wordpress.com then it's the same problem as medium, if you mean the software then it's terrible and not comparable since it's just software, not a full hosted solution. 
IME, you should be doing both. There are tons and tons and tons of very obvious SQL queries that, if you're being a good dev, are going to get absorbed into a home-rolled ORM-ish system anyways. Eg, stuff like "find all the items in this user's shopping cart" is not conceptually hard, but a little tedious to write in SQL directly.
Threads in Python only make things faster for IO pretty much. 
Just lots of repositories in various programming langages :) We have a small team but are very versatile, we do Javascript, Python, C++ and Go, and it's convenient to fetch all the repositories without having a 'master' repo. Did not know about dependency management in mu, that's indeed a nice feature, but currently we don't really need it.
Some problems with the pip installation although installing from setup.py works (but only for command line). ModuleNotFoundError Traceback (most recent call last) &lt;ipython-input-2-37ebaece9358&gt; in &lt;module&gt;() 3 4 # Import PySwarms ----&gt; 5 import pyswarms as ps 6 from pyswarms.utils.functions import single_obj as fx 7 ~/anaconda3/lib/python3.6/site-packages/pyswarms/__init__.py in &lt;module&gt;() 15 __version__ = '0.1.1' 16 ---&gt; 17 from .single import gb, lb 18 from .discrete import bn 19 ModuleNotFoundError: No module named 'pyswarms.single' Also note an existing project named pyswarm. It took me a while to figure out that I had already installed that. Besides these minor issues, thank you for posting
I know we're all Python fans here, but this is a really fanboy-ish article which misses the mark at every step of the way. 1. R is just as easy for EDA as Python is - arguably moreso in some cases, thanks to knitr and Shiny, which don't quite have perfect analogs in the Python world. Furthermore, if you live in the tidyverse, the idioms you use to code R are just as straightforward and easy as you'd do in Python. 2. This trivially isn't true, unless you're full-stack Python all the way. At some point you have to serialize output or information to another format or a database - say for a client-facing API or service to pull from. In that case, what difference does it make if your back-end is Python or R? 3. For many machine learning and statistical analyses, R wins **hands down.** Do you have to do econometrics? Kriging? Extreme value theory analysis? These all have well-developed R libraries, whereas Python doesn't. I'd argue that in *Python* you can more quickly build and launch your first model, but chances are a domain expert has already built a more sophisticated model for you to use in R. 4. Really?!? Id' argue that Python is *much* better for big data, especially given the availability of toolkits like dask and numba. 5. Possibly agree here. ggplot2 is great but I would never make a production plot in it; I want finer control over my plot aesthetics and matplotlib's OO interface gives me that. For interactive visualizations, Shiny is much easier than the similar Python libraries. I don't think here's a "winner" here. One doesn't trump the other; a good analyst will have familiarity with *both* languages and pick the right tool for a given job.
This is amazing! Thanks for sharing!
Yes, I knew about this one but it's Windows only and actually does **more** than what I wanted. 
How about three spaces??
I also do that. :) This is meant as a last resort backup of a small amount of data (mainly the password/recovery keys of the mail services I access and from where I can recreate/obtain the rest of my data). Paper is very reliable against bit rot [citation needed ;)]. Using standard encodings (QR codes + base85), saving copies in two or three different places and the fact that it is unlikely to be used for anything else ("look! an unused pendrive lying around! neat!") should give me peace of mind against getting locked out of anything. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!