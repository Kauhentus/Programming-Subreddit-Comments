When a website is down you can use [the Wayback Machine](https://archive.org/web/) e.g. https://web.archive.org/web/20150908162801/http://docs.scipy.org/doc/scipy-0.10.1/reference/generated/scipy.integrate.trapz.html
Probably going to get downvoted for this since it is /r/python after all, but why don't just start with something like Go then if you really need high performance that badly and are already using low-level frameworks like web.py anyway, rather than going for such an obscure stack using the JVM or LLVM. Edit: or even just plain old python3 with asyncio should get pretty decent performance also.
Graduating in December, need a job near Detroit
You can reuse your vagrant files across platforms and across providers if you don't modify the VM settings and use the same naming convention for boxes on VMware/VirtualBox/KVM/etc, they can also be coded to support those changes too. The VM is not migrated, that's the entire point of Vagrant, config automation for a lab environment, share the Vagrantfile with your coworkers and everyone gets the same lab environment. You can also use KVM/vSphere remotely from any platform. Personally I use it for VMware Fusion and vSphere remotely. Quick setup/config testing local and long term testing on my lab cluster. Never bothered with VirtualBox. HashiCorp might know the stats of what plugins are used most, but I wouldn't assume VirtualBox is the most used.
http://masterpasswordapp.com/algorithm.html They have a nice FAQ that tells you the sorts of ways they generate a password. Without seeing the code, it's not verifiable and I haven't looked yet.
Create a bug report and attach a reproducible example. The more detail about the environment you're using the better to help people reproduce it.
I think your assumption is correct. Your recommendation for a web application is a great one. Thank you! I expect this software would be used in pretty low volumes (low 1000s in an optimistic scenario, sold to 21-century farmers), but wanted to have insight on how I could stave off impersonations from competitors. 
Worth it just to find out about [this](http://libi.io/library/2154).
**Update: Still looking!** I'm looking for a Python-oriented summer 2017 SWE internship, though I'm willing and able to learn any new language or technology you throw at me! Currently an undergraduate sophomore CS student at Penn State University. You can view my resume, GitHub and LinkedIn from my personal Github Page here: http://joshuarli.github.io/ If you're interested in hiring, we should definitely talk! Shoot me an email or PM! :)
/u/dragonvsreddit literally addressed your objections in his initial comment. &gt; I would have made a tool like this automatable via the command line, so it can also be used by code, and in shell scripts.
Couldn't tell if you meant to be sarcastic because 1. Python only has public variables 2. Functions can only return one thing 3. Python doesn't have constants or a `const` keyword
How much JS would I need to know for node and ReactJS? I'd actually be interested in looking into that. Would there be ways to work JS and python alongside? Could you also explain Cython to me please? I don't really understand the uses of it. If you want a fast language couldn't you learn C++/C? It strikes me as a languages which isn't as 'nice' as python or fast like the C family. Thanks for your response though :)
You mean Cython? With some syntax changes (ok it's some getting used to) you could make your existing Python code closer to C level speeds. You could use Python to serve websites and ReactJS to have client side logic (stuff that runs in a browser).
Yeah sorry, I meant Cython. Thanks though, I'll definitely have a look at both. For the serving websites, would I be able to use base python or would I need to learn something like Django?
It's good to learn C, because it's what the most popular Python implementation is implemented in. Learning a low-level language like C will allow you to understand better why Python behaves the way it behaves, and then how to fully exploit its features. For example, why Python lists allocate more memory than they actually need, or what trade-offs drove Python to use Global Interpreter Lock.
Instead of just one language, let me recommend the book [Seven Languages in Seven Weeks](https://pragprog.com/book/btlang/seven-languages-in-seven-weeks) by Bruce Tate. It carefully picks seven languages each based on a different underlying paradigm It then presents each in seven instalments, each of which can easily be absorbed in a day. It’s a great way to broaden your horizons without committing too much at this point.
+1 for asyncio. I just wrote an asynchronous server yesterday, you can DM if you want the link. Its not thoroughly tested, but you can write your own handlers for it. Looked to handle about 1300 connections on an old AM3 dual core workstation. 
The article misrepresents the issue. He presents cooperative multitasking as synonymous with 'no shared state' and threading as synonymous with 'shared mutable state'. That's just simply wrong. Also I was never criticising cooperative multitasking. The issue is with `async`/`await`, which is a shitty viral sublanguage that makes reusing code unnecessarily difficult.
I don't have the money to get a PhD, so I am spending every waking moment learning data science and the niches in software engineering.
Of course, everyone knows most real work is done on 2.7.
I'd pick Swift. More practically C. And for different a lisp or Haskell. But different isn't necessarily good :P
Yeah, but OP is asking about something complementing Python. C is closest of the languages he mentioned he can choose that have any relation to Python.
You just need to &gt; import antigravity
Haskell has been mentioned a few times so I'm definitely going to take a look at it, even if I don't go too deep into it
Yes, coroutines are not always superior to threads, sometimes they are easier to use. It is good to have the choice.
Will look into it, thanks!!
For _serving_ them you'd use nginx, with an uwsgi pass to django, flask, or maybe twisted. You almost certainly wouldn't write your own web server in Python.
and even async projects have to make blocking calls sometimes, hence twisted's deferToThread() function.
If you like threads but want async performance, try gevent
&gt;Now that Python has added coroutines (e.g. async/await) as an alternative &gt;method for concurrency, do you still see yourself using threading for &gt;I/O-bound work? I *understand* threading, as opposed to whatever the heck alien technology async/await is. :-) :-(
+1 to paw
Because they want to be a microcommunity? :)
Do you have a background in mathematics and statistics? I kinda want to look at this stuff but I hear you need a background in that? I suck at math terribly so.
Seems to be online again! :)
That sounds like what you get under the Community Edition. The Pro edition should just handle Cython and syntax highlight everything properly out of the box. Check your version.
I dunno. I work mostly with 2.7 and it seems like a lot of people too. I'm on board with moving to 3, but it seems like there's a ton of people on 2, from where I'm standing. Overnight it feels like people became hostile to 2.
For me it's the other way around. `asyncio` feels like a pretty natural extension of generators to me, which I already use heavily.
It's back up.
Thank you, that's excellent feedback. 
It's cooperative multitasking, not parallelism so it doesn't happen at the same time. What's going on is that the loop periodically checks in on stuff that wants to do IO and sees if the IO is done and then picks up the task again. Since builtin `open` is blocking IO, you run the risk of gumming up the whole thing. The real trick here is use an executor which punts work off to a thread or process pool (depends on which you use) and treats the whole call as async even if it's actually a blocking call. 
[deleted] ^^^^^^^^^^^^^^^^0.5333 &gt; [What is this?](https://pastebin.com/64GuVi2F/43197)
Definitely professional, launches saying my name and licence end date saying it is the professional version. I did import my settings from the community version though, I'm not sure why that would make a difference though 
Actually I think that was it, my import from my previous community edition settings caused it not to work, I reinstalled with out importing and it worked... Thanks for giving me a clue on what this could be. 
I picked up Numpy, Pandas, matplotlib, BeautifulSoup a few months ago. At what point do I know I'm ready for a job? Data Science because I love working with data and I want to have a salary higher than $65,000 a year.
"dope information" lmfao you're a loser
Yeah this doesn't deserve so many down votes. 10 years as a professional Python dev, haven't been paid to write 3 code yet
&gt; Imagine I had 20 input files and needed to apply a function to each of them, line by line. The function is an order of magnitude shower than I/O, so I want to read and store the results in parallel. If I understand the example correctly (a big if!), then that's probably the opposite of what you want asyncio for. That is, if your function is crunching a lot of CPU then asyncio isn't going to help you much. Under the hood, everything is running sequentially and not using more than a single CPU core. The situation where aysncio would be great is if you have 20 input files served over some slow and laggy network mount, and just trying to read the files is orders of magnitude *slower* than the function you need to apply to them. Overall your application doesn't really need more than one CPU core, its really not using much processor time at all - what you want is an easy way to structure your code so that you can do something else while waiting on `readline()` or `open()` to ever finish. At the same time you don't want to worry about things that require synchronization. For example, maybe there is some `result_store` object that you update with each result, and if multiple threads or coroutines were trying to update it at the same time that would corrupt things. So using the [aiofiles library](https://github.com/Tinche/aiofiles) you might write a coroutine to process a file that looks like the following: async def process_file(filename, result_store): async with aiofiles.open(filename, mode='r') as f: line = await f.readline() result = cheap_function(line) result_store.update(result) The important things here are the `async with` and the `await`. The `aiofiles.open` is an asynchronous context manager. When you enter or exit the context, you _might_ yield control to the event loop and let some other coroutines run for a while. The same goes for the `f.readline` which is a coroutine. When you `await` on it, you _might_ yield control to let other coroutines run while the crappy network decides if it will send you any bytes. Now `result_store.update` is a regular _function_, so while it is running you are guaranteed not to yield control back to the event loop. Nothing else will run until this finishes. In a coroutine, you keep control until you `async with`, `async for`, or `await` on something. You don't have to worry about something else calling `result_store.update` while you are in the middle of it and corrupting things. One of the big selling points of coroutines is that they are easier to reason about than threads where you might context switch and lose control at any instruction. The other thing about a coroutine is that calling it like you would a normal function doesn't execute the coroutine body. It just creates a "coroutine object" and returns it to you. You have to then hand this object to some sort of event loop, like aysncio, to actually run it. To schedule a coroutine to run in asyncio you can pass the coroutine object to the `asyncio.ensure_future` method. This will schedule it for execution in the default event loop as soon as possible and return to you a `Task` object that you can use to keep track of the coroutine's status if you want. So to schedule our coroutine to run on all the files in `file_list`, you might write: tasks = [] for file_name in file_list: tasks.append(asyncio.ensure_future(process_file(filename, result_store)) Now we have a list of tasks scheduled for execution. To make them actually run you have to start the event loop running, and you could start it running indefinitely with: loop = asyncio.get_event_loop() loop.run_forever() Now your tasks will all run, but that can be annoying for playing around interactively as the event loop doesn't stop when your tasks are all done. One thing you can do is use `asyncio.wait`. This takes a list of tasks and creates a task that waits for them all to finish, then returns. Then you can do this: loop = asyncio.get_event_loop() waiting_task = asyncio.wait(tasks) loop.run_until_complete(waiting_task) This will run until all your tasks have finished, and then shut down the event loop. Your `result_store` will then contain results from all of the files.
Yeah, you're right. So nice though, once you're used to them I think they make code much easier to read. So `await` is sort of saying "I'm going to take some time to do this, and while no code below this line should be run before I've returned a result, feel free to go and do something else for a while (like attend to a database connection)". It maintains order of operation (unlike javascript) but allows the interpreter to go do other stuff while it's waiting for a web page to download or something.
Yeah, true. I didn't bother async-arizing the IO because I presume they'd all be on the same disk, and more wanted to point out how to make the function on the file asynchronous. And yeah, in all my code async projects theres this little bit of code: async def rie(f, *args, **kwargs): return await loop().run_in_executor(None, f, *args, **kwargs)
Unlikely, honestly. I rarely do anything in Python where the GIL presents an actual, *practical* problem and if I wanted to do something and needed great parallelism support where performance was an issue I wouldn't use Python at all, I'd use Closure or Go. Or Java. Or hell, Erlang.
TLDR - It's faster than re-allocating memory every single time you `append()` to a list. If the list runs out of allocated space, you have to call `realloc()` which tries to add some extra bytes on the end of your allocated space if its free. If something is in the way it has to find a big enough chunk of free memory somewhere else, copy all your bytes over to the new area, and give you a pointer to the new place. This takes some time. How much time depends on the operating system, but its generally faster to avoid doing this every time you want to add something to a list. The memory size [growth pattern](https://github.com/python/cpython/blob/459cd61399f589caccae1c0fa2138ebcaaa63ea6/Objects/listobject.c#L42-L48) is: 0, 4, 8, 16, 25, 35, 46, 58, 72, 88, ... So if I have a list with 20 elements, it should have space for 25 allocated. I can `append()` something and it's real fast - it just writes down the address of the thing I appended in the 21st slot. Once I get to 25 elements, the next `append()` will cause a `realloc()` to make space for 35. Then it can write to the 26th slot.
Thank you for your help! I posted in learnpython right after this as that is when I found the link. One thing I forgot to mention is the videos are all named 01.mp4 02.mp4 03.mp4 etc. I think it may be looking for 1 instead of 01 kinda thing.
this is the traceback error Traceback (most recent call last): File "scareme.py", line 30, in &lt;module&gt; subprocess.call("omxplayer -b --vol 1500 ./Video/" + vid[count] + ".mp4 &gt;&gt; /dev/null", shell=True) IndexError: list index out of range
Your response to 1 is just a demonstration of scope.
What's the general performance cost of using thread instead of async?
Do you have an ELI5 about why the GIL was used? I've recently gotten into async and have been wondering why a GIL was implemented.
&gt; That's only true with large amounts of FDs. In case you only block on a single FD you can hang there for hours. Not sure I understand what you mean here
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
If you are reading from stdin and nothing else you should be blocked. 
And yet they're rather stupid.
Fully async will never be archieved
Downvote me if you like, but After 8 years python3 finally maybe [gets close](https://bugs.python.org/issue25227) to the speed of python2 in [arbitrary file handling,](http://python3porting.com/problems.html#nicer-solutions) which most of my code relies on. Maybe in the next 8 year I'll give it a try. 
Honestly, I feel like asyncio was a horrible name. Asynchronous programming? Kinda, I mean there's a catch to it. I/O operations? I guess you could, but the only thing asyncio really solves is the problem of "waiting" for a file. However, it can't actually replace threading/multiprocessing libraries because python's async library uses cooperative scheduling. That means that your function, once started/resumed, has a monopoly on the thread until you release control. In a real life example, this means that with asyncio, in order for a heartbeat to work, you need to ensure that all code paths will hit an "await" every heartbeat interval, otherwise your heartbeat will never happen. By comparison, even with the GIL, a multithreaded heartbeat implementation will be called as soon as the heartbeat interval has passed and the current atomic operation (probably about a line of code) finishes. Tl;dr asyncio is concurrent, not parallel.
Negative. Python's default event loop is borderline comically slow. If you use uvloop, it's a slightly different matter though.
You are bad, and you should feel bad. 
It's about Rust vs Go in this case?
What's your job, jw
[removed]
Thanks, I will ask the question over there. I posted on mobile so I didnt saw the bar on the right with all the handy links.
Yeah, yeah. I know... I am terribly sorry. Please forgive my heretical behaviour!
More usefully: * [PEP 468](https://www.python.org/dev/peps/pep-0468/) - Preserving the order of **kwargs in a function * [PEP 487](https://www.python.org/dev/peps/pep-0487/) - Simpler customization of class creation * [PEP 495](https://www.python.org/dev/peps/pep-0495/) - Local Time Disambiguation * [PEP 498](https://www.python.org/dev/peps/pep-0498/) - Literal String Formatting * [PEP 506](https://www.python.org/dev/peps/pep-0506/) - Adding A Secrets Module To The Standard Library * [PEP 509](https://www.python.org/dev/peps/pep-0509/) - Add a private version to dict * [PEP 515](https://www.python.org/dev/peps/pep-0515/) - Underscores in Numeric Literals * [PEP 519](https://www.python.org/dev/peps/pep-0519/) - Adding a file system path protocol * [PEP 520](https://www.python.org/dev/peps/pep-0520/) - Preserving Class Attribute Definition Order * [PEP 523](https://www.python.org/dev/peps/pep-0523/) - Adding a frame evaluation API to CPython * [PEP 524](https://www.python.org/dev/peps/pep-0524/) - Make os.urandom() blocking on Linux (during system startup) * [PEP 525](https://www.python.org/dev/peps/pep-0525/) - Asynchronous Generators (provisional) * [PEP 526](https://www.python.org/dev/peps/pep-0526/) - Syntax for Variable Annotations (provisional) * [PEP 528](https://www.python.org/dev/peps/pep-0528/) - Change Windows console encoding to UTF-8 * [PEP 529](https://www.python.org/dev/peps/pep-0529/) - Change Windows filesystem encoding to UTF-8 * [PEP 530](https://www.python.org/dev/peps/pep-0530/) - Asynchronous Comprehensions
It is a cool idea, however, a little bit unpraticable as imo, it's rare to render manually html in Flask, you're better using templating like Jinja. Your approach require to change the templating logic back into Python. Did you try to see if there would be a way to achieve the same approach by hacking Jinja itself?
Yes the streaming feature is inbuilt in Flask. But the streaming happens from top to down of the page. But with FlaskSR you can divide the page into components and stream each component and make it render at the place you want it to. Thus you can prioritise the rendering of component. FlaskSR can be used along with Jinja2. Jinja2 will create DOM strings and FlaskSR will stream and place it on client. The library aims at make flask pages load better by streaming partial responses instead of one full response.
Awesome. 
Yeah in this case you'll have an image and downscale / degrade it to use as input. You can learn all sorts of other things depending on what data and type of network you use.
This so much. I had fantastic success making a routine GIL free with numba and using a threadPoolExecutor on top to perform CPU bound tasks. 
 df.groupby(pd.cut(df['id'], range(0, 110, 10))).sum()['orders'].plot(kind='bar') Change range as required to match your range of ids; assuming your DataFrame is df and pandas is imported as pd. **But mostly, /r/learnpython.**
Some things worth considering: If you're able to use broadcast or multicast messaging you can have clients catch up by passively watching messages destined for their neighbors. This is particularly effective for gap filling and can work well for mass restart if you have random start request delay in place. Alternatives are available if you have no way to passively tap, including brokers or regular peer lists that allow systems that need to catch up to find ones that have the messages they need, they can then ask those directly. Same applies but simpler if you can snapshot. Clock messages can be used to detect network partitions and latency spikes (handy for resigning from the load balancer pool), signing helps avoid many of the security issues - not all of them but it helps a lot. Hidden masters are an excellent idea almost regardless, although it does increase the latency a little - they're good for security and help with the server crash condition.
It depends. The problem with threads is when you have a very large number say 10000 the context switching overhead becomes a major bottleneck, whereas a good asynchronous stack wouldn't bat an eye. OTOH you may be able to make more efficient use of resources by running an asynchronous event loop in a small number of threads, say the number of CPU cores plus 1.
Yes, I do still use threads. For some reasons: * I'm very used to threads. I'm aware of the danger and I know how to be safe. * async/await requires a very different approach to code structure. Whenever I feel that the thread's style is more suited to my needs and there are no other reasons to avoid threads, I use threads. I'm looking forward to see David Beazley's curio library reaching a production level quality in order to use async with thread's semantic. I think David's approach to async programming is better than the official one. * Sometimes I rewrite performance critical code in a C shared library loaded through ctypes, and this lets me skip GIL limitations with threads and obtain true cpu parallelism. Just my 2c.
I while back I found this project called TrumpScript, which is pretty much just Python but with a bunch of limitations making fun of Trump. For example, all scripts have to end in "America is great" and certain words like "Hilary", stop the script from running. I'm on mobile, but will add a link when I get home.
&gt; Absolutes are nearly always wrong, but I'm becoming more and more convinced over time that this one isn't: shared mutable state is always bad. Well, if __you__ actually believe that shared mutable state is always bad, then you should say it up front, instead of sneakily criticizing one of the approaches to dealing with shared mutable state as if you think that it's worse than other such approaches. &gt; No, those aren't a viral sublanguage. You can turn a list into a generator by writing yield from and you can turn a generator into a list by writing list. &gt; That's the difference. If you have a function that returns a list and you want to turn it into a function that returns a generator, you don't have to go through every single function it calls and change their code to return generators. First of all, get your shit straight, the "infectiousness" goes the other way, you can call blocking functions from lazy/async, but not vice versa. Then, you can wrap any usual function in a future just like you can use a list as a generator (idk what did you mean by "writing yield from"), and you can use this def sync(coro, loop=None): if loop is None: loop = asyncio.get_event_loop() future = asyncio.ensure_future(coro) loop.run_until_complete(future) return future.result() to call any coroutine synchronously, blocking until it returns, corresponding to `list(generator)`. And I emphasize: the situation is **exactly** the same as with generators. If you have a non-lazy or non-asynchronous function, then wrapping it in a generator or future doesn't magically make it use less memory or execute concurrently, you have to rewrite it as a coroutine to get that. And conversely, taking a coroutine and blocking until it generates all data/returns the result means that magic stops there, at that point you will have all your data materialized in memory or all your operations materialized in time (that is, completed). Like it's really the same thing applied to different dimensions or something. &gt; Simon __Peyton__ Jones has certainly not said that lazy evaluation was a mistake. Simon "Die grosse Schlange" Jones: ["the next Haskell will be strict"](https://www.google.com/search?q=%22the+next+haskell+will+be+strict%22).
Since you know python you could enjoy other paradigms with also python libraries. There are a few python variants: https://github.com/vindarel/languages-that-compile-to-python - dg is very functional, a bit like haskell (it doesn't have types nor pattern matching, but it's useful !) - hy is a weird lisp - coconut it 100% python compatible and more functional Also I wouldn't learn C, but a higher level language like Elixir http://elixir-lang.org/docs.html which is similar to Ruby but has many new concepts. You will very probably need to know javascript later or sooner, but here again you have plenty of choices: a functional and terse variant (livescript, awesome http://livescript.net/), a haskell-like variant, etc
[Reddit itself is written mostly in python](https://github.com/reddit/reddit)
Oneliner-izer in a heartbeat. It's awesome that someone took the time to make a transpiler like this. Edit: Turns: def fib(n): if n &lt; 2: return n return fib(n-2) + fib(n-1) into: (lambda __g: [None for __g['fib'], fib.__name__ in [(lambda n: (lambda __l: [(lambda __after: __l['n'] if (__l['n'] &lt; 2) else __after())(lambda: (fib((__l['n'] - 2)) + fib((__l['n'] - 1)))) for __l['n'] in [(n)]][0])({}), 'fib')]][0])(globals())
I'm glad you got it working!
see here: https://www.reddit.com/r/Python/comments/5all7u/now_that_python_has_coroutines_eg_asyncawait_does/d9hred5/ Threading is very useful in computationally intense programming as long as you have operations that release the GIL. I tend to write my computational code in C++ (only after I've exhausted numpy, etc.) and then write wrappers to call them from python. Since my wrappers release the GIL (and because the code itself is threadsafe), you can have the best of both worlds: speed, parallelism, concurrency and writing in python (as opposed to C++). Threading can be used fine in python, but it is true that you have to know what you're doing.
Hi All, I'm looking to connect with Python/Software Engineers for a contract position. Based in Coventry, UK for a largely known automotive company, they are looking for a strong Python professional who is competent with Hadoop, Machine Learning and Data Manipulation. 3-month rolling contract based on-site. Please contact me if this could be of interest to you and I can provide further information: rachael.smith@suitablecandidates.com. Thank you.
[Ansible](https://github.com/ansible/ansible) Configuration Management system
This is the new anti-discrimination policy. If it claims to be a Python we have to accept it.
Why would you want that kind of visual distraction? Your IDE will be already loaded with syntax highlight colors, visual cues for changes/errors/columns and cursors, etc. Why add another layer of visual noise on top of that?
Fuck yes, preemptive multitasking. 
I didn't realize this was open source
[GitHub](http://alexprengere.github.io/currencyconverter), [PyPI](https://pypi.python.org/pypi/CurrencyConverter) links Release notes: * zip files are now supported as input * urls are now supported as input * the format of the single day file from the European Central Bank is now supported This basically means that you can now do: from currency_converter import CurrencyConverter # Load the packaged data (might not be up to date) c = CurrencyConverter() # Load the up to date full history c = CurrencyConverter('http://www.ecb.int/stats/eurofxref/eurofxref-hist.zip') # Load only the latest rates (single day data source) c = CurrencyConverter('http://www.ecb.europa.eu/stats/eurofxref/eurofxref.zip')
I have to write a lot of contracts, so I am working on a markdown template engine. As of now it is a flask app with jinja2 that lets you choose your markdown templates. When you choose a template the app gets the template variables, turns them into input elements and renders the template as html with some light javascript and a "save as" button at the bottom. I am also doing a light cli version that uses Pandocs for more output options. This version turns the variables into input() functions.
I love gevent but it's totally different from threads. If you've got a chunk of cpu intensive code, gevent has no way to preempt the running greenlet. So, yeah, gevent has a similar API but under the hood preemption vs cooperation is a major difference.
I see, I'm aware (at least to some degree) about reference counting, and how that operates in python, so I can see how a GIL might be the simplest way to handle this. 
if you like work with console you can use console editor f.i. vim: * http://imgur.com/a/hwoWl
They are both niches really. With multiprocessing you have massive overhead from whatever you're using to communicate between them, which you can avoid with shared state in threads and async. I would say that if you can effectively use multi-processing, then you don't need to communicate, and don't have inter-related problems, but separate problems.
That's what OP is asking for, in as many words.
It depends what you're doing so it's not a hard-and-fast rule. For example if you had to serve 10K network connections concurrently, you would NOT use 1 thread per connection. 
1. python was never about speed. it's nice if it gets faster, but that has never been a priority 2. try 3 years. python 2 is EOL 2020, and 2016 is almost over. also better have your shit ported *by* then, because else you need to switch on the spot without knowledge or time
I've been really impressed with [scikit-learn](https://github.com/scikit-learn/scikit-learn) for several reasons: 1. It's a *massive* codebase, but still manages to be very well organized in spite of this 2. Their documentation is excellent. If you are looking to see well documented code, take a look. 3. Similar to number 1, the models are well organized with base classes pulling in commonly used functions, with specialized classes handling more specific models, say Logistic regression for example.
Awful
Dude make one post and stop spamming the reddit with these videos. Also /r/learnpython would be better anyway because these are such trivial tasks to do, I don't think anyone needs a video to apt-get a package on Linux or download an installer on Windows... 
link?
Anything associated with [Armin Ronacher](https://github.com/mitsuhiko), such as [flask](https://github.com/pallets/flask).
https://github.com/csvoss/onelinerizer Edit: Turns: def fib(n): if n &lt; 2: return n return fib(n-2) + fib(n-1) into: (lambda __g: [None for __g['fib'], fib.__name__ in [(lambda n: (lambda __l: [(lambda __after: __l['n'] if (__l['n'] &lt; 2) else __after())(lambda: (fib((__l['n'] - 2)) + fib((__l['n'] - 1)))) for __l['n'] in [(n)]][0])({}), 'fib')]][0])(globals())
&gt; python was never about speed. it's nice if it gets faster, but that has never been a priority I am aware of that. I've expected, that it does not get multiple times slower. But that is not a priority either, as you suggest. Nothing wrong with that. I do not deny reality. &gt;try 3 years. python 2 is EOL 2020, and 2016 is almost over. also better have your shit ported by then, because else you need to switch on the spot without knowledge or time I am currently - among other things - maintaining cooperatively several 100ks of LOC written in ancient programming and runtime environments. Their support has ceased sometimes over 10 years ago. They are still run in production generating millons of $ in profit. Just to mention a few examples, these environments include Windows XP, windows 2000, dos emulation, ancient Unices, visual basic 6, java 5. Some of them can surely be considered abandon-ware. In every year I write my part in a report about the situation to the actual management. My consciousness is clear, I am not the one who obstructs the bright future.... If nothing compelling happens, then in 2020 I will add python2 to that long list. So no, I won't need to be in hurry. I could do it at my own risk, but I won't switch from something that is working to something, that is - in my very special case - inferior. Unless python3 stabilizes, I'll wait to be asked and paid.
sure, but why do you feel the need to mention that then. legacy environments exist. obviously python can't and won't change that
Lol a spam link that doesn't even work
The worst python code I've ever seen: https://github.com/zack-bitcoin/basiccoin It's actually real code but the author took to the letter the advice that "less lines of code means more readable code". Author, if you read me, you're horribly wrong and I keep your repository with me at all time to remember the attrocities that mankind is capable of.
Pickling is awesome if you don't need extreme performance or any guarantee of security. As long as your pickled objects never fly over the internet in an automated way, you're golden.
I never use pickles for persistent objects. They're just not robust in the face of ongoing changes to the classes of the pickled objects because although objects are pickled, their classes are not. Much better to use a persistent format that is under your control and which can evolve independently of your class definitions if need be. I do use pickles for serialisation of objects where the serialised representations are transient and never persisted (e.g. sending objects to a subprocess) – in fact this is how multiprocessing works.
Why? Not trying to be argumentative but I'm new to django and I can think of a few things I would improve so far. More interested in changing my opinion though so why do you think it's well done? I'd love to agree and I'll likely learn something.
Using `pickle` is not wrong 100% of the time, but there are very very very few times where it's the best choice. * Pickle will break if your code changes. Python hard-codes module/class/attribute names into the pickled value, so if you rename a class or move things around in basically any way your pickled values will be unrecoverable. * Pickle works (roughly speaking) by dumping the AST/bytecode for a given value. This means that **pickled values are code that is executed**. All considerations that apply to arbitrary code execution apply to pickled data. If you allow an end user to supply pickled values your system is inherently vulnerable to code execution. * Even if the source code hasn't changed, pickled values may or may not be compatible between even minor Python version updates. These details mean that pickle is not a good option for long term storage of values, nor is it good for over-the-wire transmission of data. It is not durable, it is not secure. Your description of the code doesn't clarify much about what you're actually storing, or what the code does overall. It sorta sounds like you're trying to store configuration values. If that's the case, you very likely could use [JSON](https://docs.python.org/3/library/json.html). JSON allows you to store several very useful and fundamental data types: strings, integers, booleans, maps (dicts), and sequences (lists). I'm firmly of the opinion that if you can't distill your information down to these data types, your data is poorly structured or overly complex. Depending on the nature of this data that's being stored, a database may also be useful. You mention having multiple values (records) that you're updating in-place and then reloading periodically. You might want to consider using something like sqlite to provide a persistent data store for these data, which provides a whole realm of guarantees and features best described [here](https://en.wikipedia.org/wiki/Relational_database). More concrete details, and a copy of the code, are necessary before any more concrete recommendations could be made.
[pyramid](https://github.com/Pylons/pyramid)
&gt;The language is completely case insensitive. &gt;No floating point numbers, only integers. America never does anything halfway. It amazes me people put so much work into a repo like this but I'm glad they do.
Flask hasn't given me many troubles, actually. For some reason I have seen a lot of polarization regarding Flask. It seems like if you don't love it, you think it's the worst. I'm kinda so-so on it. It works really well for the project that I'm using it for, but I would be interested in know what you think is so bad about it.
My god
The code is available [here](https://github.com/DonaldKBrown/BitMon/). I use sqlite for anything that could be user submitted, and there is some validation going on before anything is actually passed into the database, just to be safe. My pickled objects are mostly static things that I change on occasion as I develop the game overall. Config values are definitely never stored as pickled objects. I've debated using SQLite databases instead of the pickled objects, because I could easily just run `sqlite3 items.db` and make changes there. However, I know that I would then have to create a function that basically turns the database entries back into a list or dict anyway. It's much less work to write a dict lookup than an sqlite query.
Better separate the audio decoding and the playback, these are two very different things. That said, for playback I'm using pyaudio. For decoding, I'm running ffmpeg in a subprocess that decodes whatever audio file you throw at it to a PCM stereo stream (which is fed to pyaudio). Any reason you don't want to use an external executable to do the heavylifting? Because I think it's not much work to add (time)seek support to my wrapper class...
If pickling works, then use it. Don't worry about changing your strategy until you've encountered a problem with it. Premature optimization is the enemy of progress. SQLite is a good next step. If you don't need extreme performance, using an ORM like SQLAlchemy can take a lot of the headache out of dealing with a SQL database.
\&gt; Write code using language that glorifies white space. \&gt; Do away with all whitespace. https://github.com/zack-bitcoin/basiccoin/blob/master/api.py
No background at all. Math has never been my strong suite but I figure I can get the hang of it if I continue to learn
Hell developer, 666 years experience looking for a change in scenery...
I've got some music files from a game which loop and have the loop details in the comment, they are in an odd format e.g. a 3 minute song has the point where it loops as 7548763. Someone posted a comment earlier and deleted it about ogg frames so now I'm thinking the loop position is related to frames or samples. Anyway I don't want it to use external processes as I want it to be portable between different OS's without needing various tools installed. I have looked at ffmpeg and know it can do looping but is it able to do looping based off the current frame/sample number? If so then I might have a look at it since I haven't managed to get anything else working.
Can you post something you find beautiful as a comparison? I'm not a pro, so I'd like to compare this to something 'good', and I know my skill level enough to know I don't know what that is. Your example was unpleasant to read, but I don't know enough to see why, and a 'good' version would be helpful for me to compare.
File IO is *not* non-blocking, and per aiofiles own documentation, "aiofiles helps with this by introducing asynchronous versions of files that support delegating operations to a separate thread pool So async offers no benefit to "I need to read from 20 files", unless you really prefer the explicit event style riding on top of your thread pool. 
https://goo.gl/images/aM4ZLx
Even though you're asking a question about specifically about async, I just wanted to share the Wikipedia article on [coroutines](https://en.wikipedia.org/wiki/Coroutine). I read it as a refresher before looking at this thread, and I think it has some good conceptual examples that might aid your thinking about this implementation of the concept.
Out of curiosity, how do you bind Python with Rust?
Not the author, but an interesting read on not being lazy with virtualenv (or the lack thereof).
It's hard to tell and I'm sure other's suggestions will be better examples but if I were to choose I'd say this little [piece of code](https://github.com/cym13/bookmark/blob/master/bm). It's mine actually, not because I consider I write perfect code but at least I write code I like. What's important to look: - coherent spacing that gives a clear view of logical groups - documentation throughout the code - things that go together are aligned, that reduces the risks associated with copy-paste - strict 80 columns limit. People just don't read code left to right, they read it in a saw-shapped way from top to bottom. Putting your code at the right is asking for it never to be read (and it looks ugly on any splitted screen which is a pitty). Furthermore python is generally very concise: if you feel the need to go outside the 80 columns there is generally a better way to write whatever you're writting. See that as an opportunity. - Respects the PEP8 whenever possible. Conventions are great because it means other people expect them. Whatever is within their expectations, they don't have to re-learn it. - Straight loops. Most loops are very straight forward and don't try to do more than one thing. This makes code more modulable and easier to reason about.
I find [PyPy](https://github.com/mozillazg/pypy) pretty impressive. From the README: &gt; PyPy is both an implementation of the Python programming language, and an extensive compiler framework for dynamic language implementations. A dynamic Python compiler written in Python... doge!
Is that an assignment? Why do you specifically want to avoid dictionaries?
The term "pitfall" just means an unexpected (or in some situations, dangerous) outcome. It isn't that these things are inherently wrong, but that many people will get results they don't expect. **Re: Mutable Default Argument** A mutable default argument will create a new object at the time the function is defined, *not* each time it is called. That object will be kept alive, and will continue to be used when no argument is passed. People unaware of this may think expect a new list to be generated each time the function is called without providing `a_list`, and can result in very unexpected behaviour. &gt;&gt;&gt; def foo(a_list=[]): ... a_list.append(5) ... return a_list ... &gt;&gt;&gt; print(foo()) [5] &gt;&gt;&gt; print(foo([10])) [10, 5] &gt;&gt;&gt; print(foo()) [5, 5] It's not necessarily wrong, as I've seen it used in a caching function, however it can be very much unexpected, and be difficult to track down. **Re: Referencing, Copying and (im)mutability** Again, it's a common beginners pitfall to not understand the ins and outs of these topics. Look at the following: &gt;&gt;&gt; a = 'Hello' &gt;&gt;&gt; b = a &gt;&gt;&gt; a = a + ' World!' &gt;&gt;&gt; b 'Hello' &gt;&gt;&gt; a 'Hello World!' Experienced programmers understand mutability, and know that a string can't be modified and that the concatenation happening in `a = a + ' World!'` is creating a new object, assigning it to `a`, while leaving `b` pointing at the original string object. When beginners start dealing with mutable objects, and using function which modify the objects, it's not surprising that they hit these pitfalls. Stack overflow has a [six year old question](http://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list) on this very topic with nearly 1000 views and 1350 "useful" votes, highlighting just how many people have needed clarification on this issue.
&gt; If somebody could do this for me it would be cheating. There, I fixed that bit for you.
A lot of the issues are pretty funny too: &gt; Ban Arabic Numerials #76 &gt; &gt; It's a well known fact that terrorists use numbers like 0,1,2,3,4,5,6,7,8, and 9. &gt; &gt; The use of Arabic Numerials should be banned until this language's contributors have had a chance to look into what the freak is going on. &gt; &gt;In the interim only Roman Numerials should be allowed. https://github.com/samshadwell/TrumpScript/issues/76
why not just keep ithem as seperate git repos and add them to your Pythonpath ? $ export PYTHONPATH="${HOME}/git/project_1/:${HOME}/git/project_2/:" add it to your **.bashrc** so it will be set every time you launch a terminal. you can develop on every project and once you have stable versions you can build packages. /edit : sorry.. I just realised I just assumed you are using linux :) are you using linux ?
&gt; It's much less work to write a dict lookup than an sqlite query. That is true, but you don't need to directly write sql queries. You can use something like sqlalchemy to do it for you.
Lol that's it, thanks
For what it's worth, I agree this is pretty beautiful code. I wish I could have replaced my former coworkers with you! *Insert grumbling about 1000 line classes of repetitive, poorly whitespaced python*
Pip allows you to install 'development/editable' versions of your library - which is a direct link to your live in development code; so you wont have to build-&gt;upload-&gt;download-&gt;install during your development cycle. 
Not criticizing, but when you do: open(path, "wb").write(database) doesn't leave the file open? I always use the 'with' statement when dealing with files beacause It's in my mind that "It's the right way to code". Just curious. P.s: Sorry for formatting, I'm on cellphone.
Here's the announcement by /u/donaldstufft on distutils-sig: https://mail.python.org/pipermail/distutils-sig/2016-November/029785.html &gt; This release features: &gt; &gt; * The 9.x series will be the last pip versions to support Python 2.6. &gt; * Support for Requires-Python (will require additional support in setuptools/PyPI) to allow releasing sdists that will be ignored by specific versions of Python (e.g. foobar 5.x doesn’t get downloaded on 2.6). &gt; * Ability to pass platform, Python version, implementation, etc into ``pip download`` to download wheels for other platforms. &gt; * Add a ``pick check`` command to check the state of installed dependencies. &gt; * Add new formats for ``pip list``, including a new columnar layout and a JSON format for ease of scripting.
I agree with the other posters - if someone else does it for you (i.e. you cheat), how will you learn ? This is not a very difficult problem to be honest, and if you can't solve this you maybe need to think about whether this is the right course for you - or think about whether you need to apply yourself in class a bit more.
That's what I thought at first, then I checked and no, the file is immediately closed. That's because as it's never linked to a variable the reference count goes down directly to 0 so it never stays in memory for longer than it needs. One way to check is to do a strace on the following script: open("test", "w").write("test") input() You'll see it open the file, write, close the file and hang waiting for an input, so it's clearly closed before it gets to the input() part.
Jesus Christ, he isn't even being consistent. 
I look at that and like.... man
TIL relationship with files are mantained as long as there is a variable "linked" to that file. Am I learning right? So if I do: f = open('file.txt', 'r') =..and then..=&gt; del f The file is closed as a kind of gc effect? I'll check that out as soon as I'm on the computer. Thanks!
Not python but https://github.com/itchyny/lightline.vim/blob/master/autoload/lightline.vim is pretty difficult to read.
[removed]
Technically this is fraud, you are asking someone to do work for you that you will claim is your own. You wouldn't be studying this subject if you didn't like it, so to get better at it you need to practise writing code. Tip: Break down the problem and solve it from there.
https://github.com/python/cpython/blob/master/Lib/this.py This is actually from the standard library and is terrible code but done in an ironic manner.
&gt; **BACKWARD INCOMPATIBLE** Remove the attempted autodetection of requirement names from URLs, URLs must include a name via #egg=. Is this something specific to eggs? or any url used as a source in requirements?
I would love it if pip was aware of rpm databases and would throw an error if a package tried to overwrite something owned by an rpm. 
It is, but I'm fairly sure I've tried that and every other possible combination and it quite simply doesn't work. It's even worse when the package has dependencies that also need to be upgraded at the same time.
Ooh. Very nice.
This isn't NIH. The problem I had was that there were few-to-no peer-to-peer networking libraries that work for multiple languages. It's actually very little NIH. Most of the things I'm implementing have either been done before, or aren't terribly original. The mesh portion is drawn from how Gnutella and Bitcoin work. The synchronized dictionary just the above with an extra message callback. The chord table that I have (unstably) implemented is based on an MIT paper from forever ago. Far as the scope goes, it's partly because I think it would be useful, and partly because I think it's an interesting challenge. 
Try pyramid
The trick is to make background of these windows transparent while keeping foreground items (text, icons) not transparent. DE alone can't do that.
That is terrible, but you haven't experienced pain until you've had to maintain R code from an academic with zero CS training: copied and pasted snippets with slight modifications spread out over a thousand mutually referencing files. His python code was miles above his R code and that wasn't because he understood the language.
[deleted] ^^^^^^^^^^^^^^^^0.1839 &gt; [What is this?](https://pastebin.com/64GuVi2F/91921)
I just tried doing this and I got the following error: sqlite3.ProgrammingError: Incorrect number of bindings supplied. The current statement uses 1, and there are 6 supplied.
The variable being supplied was just a string without any spaces in it. EDIT: The issue was the fact that parameter substitution expects a sequence. Putting the values to replace the parameters into a list fixed it.
I don't have the code with me, but manually parsing a list of strings from a config file using an if/elif block. It didnt help that the developer was super cocky and wouldn't take anyone's advice on anything.
Amen to that. The problem arises with say... Twisted and an alternate install of Python. If I install python 2.7 on centos 6, then do a pip2.7 install of twisted, my rpm install of twisted gets the /usr/bin files for python 2.6's twisted overwritten. 
I thought you wanted to be able to seek to a time, not a sample frame. Anyway I think ffmpeg can do both (-ss to seek with time, -af aselect to select accurate frames) Failing that you can always convert one in the other ofcourse depending on the sample rate. Also to decode the audio file you'll need to install at least *something* be it a library or external tool... *edit:* h[ere is a link to my code](https://github.com/irmen/synthesizer/blob/master/synthesizer/streaming.py) for streaming audio files via ffmpeg into PCM samples that you can output over whatever (such as pyaudio). It was trivial to add start seek and clip duration parameters that will be passed to ffmpeg.
I fairness, wsgi makes async/streaming responses hard despite providing a mechanism for it. That's not really on Flask. 
But `isnumeric` is the same naming and effect as `isalpha`, `islower` etc. It seems consistent. Casting to integer to test for a value is a different operation.
i wonder if you could combine it with hypothesis
It's alright, we all make mistakes :P. I went a head and replaced all of those formats with substitutions instead. Thanks for the tip!
&gt; As for the rawstring not being a bug. How do you make a raw string with a single slash? If you can't do it then it's a bug in the specification for the parser. That was never the intention of raw string, its usecase was to pass escape sequences without actually evaluating the escape sequences. since `\` is not a valid escape sequence, they probably didn't care
First, it looks like the signal you're trying to identify the pitch of is only 1024 samples long. At 44kHz this is only 0.02 seconds! How accurately could you identify a pitch if it was playing for such a short time. Second, I imagine your function AMDF is gonna be really slow, particularly if you increase the number of samples beyond 1024, because it is quadratic complexity. You're gonna have to learn about fast Fourier transforms if you want to do real time audio!
Doesn't that mean you have to download more lines? Like downloading more RAM?
Nice try, BuzzFeed.
It comes with extensive documentation. https://pyinstaller.readthedocs.io/en/stable/ Have a look, then ask if any specific bit is confusing or wrong.
This was also hilarious, thanks. 
You're a little too vague for a good answer. If you are wanting to share an executable program you have a few options: 1. If your intended audience has pip, you can publish to pypi (the Python package index). Installation for them is often as simple as `pip install &lt;package name&gt;`. This has the added benefit of generally working on any OS Python works on (there are caveats, but sounds like you may be new enough to not be hitting them). 2. If you want a fully standalone app, without expecting Python or pip on the target system, you can use `pyinstaller` which can create a single program the user can call. Check their docs on how to use it. There is a big caveat here, you can only freeze for the same OS you are running. Meaning if you use it on a Mac, it will only work for your users on Mac. You'd need to also run it on windows to distribute there. If you better define your requirements, we can probably better direct you.
I don't think so. You're usually reading some number of bytes from the FD (whatever it is). And in non-blocking mode your sys-call is always short. I don't think you can write an IO loop that will stop uvloop from receiving signals.
Can we upgrade all outdated packages with a simple command?
There's pip-review which even has interactive mode. Super handy.
Artificial Intelligence Lab for my high school. I'm making a program which solves an adjacent word puzzle when given a dictionary
with trial and error, and watching and reading many tutorials, i figured out how to update, read, delete, and create blog post using flask and sql alchemy, thanks 
Constantly getting ChunkedEncodingError and IncompleteRead exceptions in my Twitter streaming... Halp plz
Yeah, virtualenv and virtualenvwrapper make my life a lot easier. I'm often working on about four different projects simultaneously and they always have different dependencies.
sorry to downvote but this should have been posted in /r/learnpython ... anyhow, python doesn't have arrays, rather lists and tuples, and it sounds like you made either a tuple of tuples or a list of tuples and once you make a tuple, you can't assign to individual elements anymore. Use square brackets for lists and parens for tuples.
I second this -- have fun telling someone that your Python app suggests that they should be able to give you a loan.
&gt;There are different ways of looking at stuff. You are fixed on one, I propose a different, much better one, in my opinion. You should realize that it's a different way and judge it on its own merits, not in terms of your way. There are different ways of looking at 'stuff', indeed. That doesn't mean you can just make shit up. &gt;If you don't have shared mutable state, then it doesn't matter how you implement concurrency. Your language can implement it using CPS, green threads, OS green threads, OS threads, processes, processes that can migrate between machines Java EE or Erlang style; your code physically can't tell. That's the stupidest most hilariously incorrect thing I've read all week. It's just simply not the case. The way you implement concurrency matters a LOT. It affects greatly how your code runs. Now if you have no mutable state anywhere, then sure everything basically works the same. In Haskell or something. &gt;Why would you write that nonsensical yield from instead of iter(lst)? And why would you write iter(lst) instead of just using lst everywhere? Do you understand what all that stuff actually does, or copypaste things from the tutorial? It's irrelevant. They essentially will give you the same result. It literally doesn't matter. The `yield from` is a lot cleaner looking, IMO. &gt;rest of your post Again, you still miss the point, that there's a shitty viral sublanguage when you introduce async/await, and this is the case in every single language with it. The disgusting thing is, it's like OOP. All these stupid languages adopting OOP without realising it's terrible. Well it's the same story with async/await. If reddit had existed in 1995, we would get MASSIVELY downvoted for pointing out the problems with OOP. The same applies for async/await. It's broken and shitty and makes code reuse impossible. It's a bad idea, it's always been a bad idea. The solution has been available the whole time as well.
It sounds like you'd want to design three functions -- one which computes your output calc based on several inputs. From there, write a fourth script which produces your average calc. Finally, write a script to iterate a thousand times, running the calcs and printing outputs to a log file. Copy-paste into Excel for sharing / analysis.
You'll get a lot more help at /r/learnpython, especially if you show what you've tried and the actual error message you're getting. 
I've spent a lot of time looking at translation solutions, and Googles translate API is unquestionably the best I've found. The rate limits should be more than enough for what you describe, and the translation quality is very high. You can then use nltk on the returned translation to restructure sentences or adjust part-of-speech tags and such....nltk is great
I've used [vcrpy](https://github.com/kevin1024/vcrpy) for this sorta thing in the past.
Fewer "ideas" in your code generally makes the code more readable, in my opinion. I wonder if there's a good way to word that advice rather than "less code".
Backups are your best friend.
The Python library Bokeh creates JavaScript code from either strings or from Python functions. Maybe check how they do it.
Trying to create an editor in pygame to allow for easy creation of items/characters for a game I eventually hope to make. Not that experienced so it's a tad slow-going. Fun nonetheless.
If this is homework where the goal is to learn to 'roll your own', then by all means do so. Otherwise, the [standard library](https://docs.python.org/3/library/statistics.html?highlight=median#statistics.median) has you covered.
The problem is having time to go back and patch it up. "It works now, why mess with it"
https://wiki.python.org/moin/PythonEditors
Looks like you removed the datacrawler.py file. Is there a possibility to still download it somewhere?
 s = ",".join([number1, number2, number3, number4]) You should not use this subreddit to do your homework.
Quant work related to xVA's (CVA and FVA). Used CUDA to do Monte Carlo simulation of all OTC derivatives on book. PyCuda + Pandas + Numpy/Scipy work really well for this. This week I'm trying to calibrate a PCA interest rate model to observed swaption vols. Also wrote a slack bot so that traders can check their xVA's. At some point I'd like to move all the code to PyPy but Panda's doesn't work with it yet.
It's for putting a git repo directly in the requirements. ... Egg name autodetection never worked well for me anyway.
You do want to upgrade dependencies and then check whether eveything still works. But there's always `pip install -U $(pip freeze | sed 's/=.*//')` or something like that.
In debian-based distros, pip is forced to install into /usr/local, where system packages are not present. System-wide package installation shouldn't be used often, though.
looks like a nice obfuscator
- Uninstall existing packages when performing an editable installation of the same packages The old behaviour has been bugging me for quite a while now, I'm so happy they fixed it! 
Yeah a big "JS code template {0} {1} {2} etc".format(blah, blah, blah) block would do if its simple (though ugly) Did something similar when I was making my batch/bash converter. Lots of string manipulation.
Just format some strings?
Just looking at [main.py](https://github.com/zack-bitcoin/basiccoin/blob/master/pt/main.py), the dude has to be smart delving into cryptography and whatnot. This seems like he might be coming from a language and is a bit unorganized.
Awesome bit of info! Thank you.
What exactly is the part you're missing?
[my response](http://www.reactiongifs.com/r/5US.gif)
How do people like that get employed? 
You'll get a lot more help at /r/learnpython, especially if you post with formatted code (use 4 spaces and read the sidebar) and have more finite question. 
I like to use [responses](https://github.com/getsentry/responses) for this kind of stuffs (which - among other things - allow to assert on http requests)
I wish we could get pip-tools rolled in to pip...
What you've mentioned, having one script that does all the API communication and acting as an intermediary forwarding things back and forth, is a good way of doing it. You could use a message broker like RabbitMQ, or something simpler (in some ways anyhow) like Redis. This way will give you the most power and flexibility but it's possibly a fair amount of work to refactor your applications; moving from a synchronous flow to asynchronous can be a bit of work in refactoring and testing. A much simpler, though less flexible, option would be to use some sort of synchronisation (e.g. a file lock like those provided by the fasteners library, or one of the multiprocessing primitives). Make each of your scripts acquire the lock and sleep a second before doing an API call and you're guaranteed to not be making more than one call per second.
Either use an old pip-tools version, or its pip-review fork which is now a separate package (https://github.com/jgonggrijp/pip-review).
I would recommend Thonny editor. Its very lightweight and should be good for teaching. I personally use it when writing small scripts.
&gt; Again, you still miss the point, that there's a shitty viral sublanguage when you introduce async/await, and this is the case in every single language with it. The same is the case with generators, point a single non-superficial difference or gtfo.
Ninja is probably worth looking into - it was my first IDE before I moved to PyCharm and I remember it being pretty simple to use. Link: http://ninja-ide.org
I can't find the difference between "Python Boolean Oddity" and "One More Python Boolean Oddity" Was the second one supposed to be with False instead of True?
the problem is, that you re implement so many things instead of using libraries and cram so many features into one system that its no longer easy to reason about 
This is what things like http://requires.io are for. It's good to regularly test your dependencies against new versions. I like to pin all my dependencies to specific versions, and then bump them when there are new releases that I know are safe. 
I'm rewriting a better version which I'll release in a month or so
maybe programmers know what they want to do, and their tools shouldn't restrict them from it
Are you simply looking for an HTTP benchmarking tool? Or does it need to be written in Python? If not, I've used Apache JMeter, though it is slightly confusing to setup, it does make useful charts and tables. 
It installs them into `~/.local/` (more precisely `~/.local/lib/python&lt;version&gt;/site-packages`), which should be checked automatically. It even works with `--upgrade`, so you can, e.g. install `numpy` via your system package manager, then do `pip install --user --upgrade numpy` to get a more recent version without pip having to faff about trying to compile stuff.
/r/learnpython
It's a *sorted* list, so maybe the complicated data structure isn't necessary...
Huh, very nice, then I can stop having an autoactivated virtualenv in my `config.fish`. It doesn't actually work for me, but I suspect that's because I didn't set the `PYTHONUSERDATA` var. This is pretty handy!
Yes.
Gotcha. JMeter does allow writing custom Java plugin code, though, if you are rusty probably wouldn't recommend that. As far as state/randomized/dependant requests are concerned, not sure, but probably not. I'm pretty sure the multiple threads (as clients) + authorization requests can be done, though.
How is this any different than just using the `or` operator that already exists? a = b = d = None c = 4 v = a or b or c or d 
`exists()` is a plain function (implemented in the stdlib), it's not new syntax. The only new syntax is `else` as a binary operator. This means you can write your own things that work in a similar way. 
Ah my bad. I thought I was reading something else 🙈
Use aiohttp and asyncio, with the new async/await syntax it's SO easy.
Yes, it adds them. They are regular classes, they aren't keywords. `not exists foo` would require `exists` to be a new keyword and new syntax. Adding a function to the stdlib is not adding new syntax. 
Thanks. I just tried running [this simple script](https://gist.github.com/benhoyt/c35aaa46935bda0180ce9a2b75a4db0d) to test the number of HTTP-requesting threads I could run at once. On my 8-core 2.5 GHz i7 Mac OS I can comfortably run it with 200-250 threads. Once I hit about 300 it starts really bogging things down presumably thrashing the GIL. The system (not sure whether it's Mac OS or Python) simply won't start more than 2048 threads. Re siege -- got it.
Pyenv + pyenv-virtualenv :)
 not isinstance(miles, (int, long))
Is the proposal suggesting that foo = exists(bar) else baz Should be equivalent to foo = bar if exists(bar) else baz **big edit:** swipe to type made my `Is` and `I'd`, now it's back to `Is`
Do you use pyenv instead of virtualenv? A virtualenv has been pretty handy for me, especially for projects, but I've never seen pyenv before. It looks to be about the same.
Students can get the full thing via https://www.jetbrains.com/student/
probably best to go with the isinstance() function, it's generally pretty frowned upon to use exception handling as flow control.
I'd rather use Ruby's inline rescue do_something rescue nil 
Right, but given this case `miles` is always going to be a string, how would you tell if it can be converted to an int with `isinstance`? If it is already an int, you don't need to test for it or cast it. What the OP seems to really want to know is whether `miles` can be converted to an int, and any object could conceivably implement`__int__` so you could never have an exhaustive list of acceptable values that would let you test in advance if this will work.
Python uses exceptions for flow control extensively, even in the base language. It's probably better to use an exception handler here, instead of `isinstance` (the latter isn't really idiomatic Python).
to find a single slash in regex is `r'\\'`, since you need to escape the slash to the regex engine (aka, send two literal slashes to the regex engine) if you really need a string containing a single slash, just use a normal string, that is what the normal string is there for, `'\\'` I think your understanding of python might be the buggy thing, not python itself!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
That's a really good idea that I hadn't considered. My other thought was inheriting from Person and adding all the relationships to that subclass, but I might do your solution instead. Thanks for the help! 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
How to optimally distribute first responders around a city.
it practically is. x = exists(LHS) foo = x.__then__() if x else x.__else__(RHS) where `__then__` is expected to return LHS, and `__else__` is expected to return RHS 
You're right, so in the case of if returning False, then y would just be None. I realize this is implicit if handled under the hood by the "as" statement, and python is all about explicit &gt; implicit. Like I said, pretty early in my day still, and I realize it may have not been the best of ideas :p
Well that is a bit heart-breaking, Adding another operator shouldn't be seen as so sinful (especially considering that reusing `else`, again, after it has existence in following `if` blocks, `for` blocks, `while` blocks, `try/except` blocks, and inline `if` statements. Keeping track of 5 different usages of a single keyword is a bit insane!) The new protocol approach however is quite invaluable, and solves all the issues of the prior approach, and is somewhat incompatible with the `?` syntax too, damn shame edit: It also seems to say that null propagation will work, but doesn't seem to suggest any method by how it would work? Which is somewhat far less useful than the prior proposal
Yea, I think Fluent Python was probably the best of them all if I had to choose one. Not coincidentally, it the only one with a 5-star rating on Amazon as well.
So the lacking information is distinction between the packages you requested to be installed and the packages that were installed automatically as dependencies? Which is currently often done by hand-managing requirements.txt
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Doesn't look like writing decorators with classes (instead of functions) is explained. IMO class based decorators make more sense if you are writing a decorator that takes arguments, as you split the decorator args (the class' init method) and the function wrap/call (the class' call method). You can also create per wrap variables using the decorator class' attributes, such as self.attr. Still a good read/introduction!
Oh anyone can get in the door with a resume. As for the interview, imagine trying to interview someone for a tech position if you don't know tech. It's mainly startups that have these problems. You'd be amazed how many startups have 7 people in them, 6 of them on marketing and one programmer. And I mean web-based startups. As for that place, I was only interested in working there because their idea was interesting to me. It's a good lesson as to why it's important to be as scrutinizing of the company and interviewing them for if you're a good fit. If you're wearing rosy colored glasses, all the red flags look like just normal flags.
I wouldn't use async at all. One tiny mistake, such as taking 30ms in a function call, and you can kiss your performance goodbye. Furthermore, threading or async, if your routines are CPU bound, meaning you're taking too much computation, you're hosed in python. You will only ever use one of your cores due to the GIL. So here's my suggestion. I would go threading all the way. Start your backend servers handling 200 threads each. Start them all on the same machine listening on different ports. Put Apache in front of them and load balance X of them. It is trivially easy to set up apache to be a load balancer. Here's how to do it: &lt;Proxy "balancer://mycluster"&gt; BalancerMember "http://192.168.1.50:8080" BalancerMember "http://192.168.1.50:8081" ... &lt;/Proxy&gt; ProxyPass "/test" "balancer://mycluster" ProxyPassReverse "/test" "balancer://mycluster" Then if you need more capacity, spin up more backends. By the way, you are using wsgi, right?
IMO, the important thing to remember about decorators is that they are just functions with some syntactic sugar. When people are trying to figure out how decorators work, they're usually figuring out how closures work. 
thank you I moved to learnpython and changed my format
The Flask book is so good
I wrote some software that scales into the millions using gevent and requests. One really nice thing about this approach is that you can write all of your authentication logic (in your case) synchronously, as if you only need to make a single connection. Then you "spawn" that into greenlets (or a greenlet Pool to set concurrency limits) and wait for them to complete. How much you can scale a single process depends on many factors: expected response times, CPU time, etc..., etc.... For my purposes, response time measurements are critical, so I limit myself to about 100 greenlets per process, then scale my processes horizontally across CPU cores. In other cases it's not unusual to scale a process into the thousands or 10s of thousands. edit: re: grequests, it appears to be a very simple wrapper API. I wouldn't bother with it personally. Just do: from gevent import pool from gevent import queue def work(task, q): q.put(&lt;result&gt;) q = queue.Queue() p = pool.Pool(limit) for task in tasks: p.spawn(work, task, q) p.join() Incidentally, you don't *have* to monkey-patch everything if there's just some specific module you want to use gevent with. It's just awfully convenient in a module where you only expect to do IO with gevent.
No clue, as I spent about 5 minutes reading GO docs then went back to python. However, a buddy of mine has done a bit with GO. From what hes told me, it sounds like GO can either be compiled -or- interpreted. In regards to speed, who knows.
amazing, going to get into it right away
Must read 7!?! books to learn Python. Come the fuck on. One or two books should do. Edit: Comments noted. I apologize for my use of bad words and for implying the books were about learning Python. However, I'd like to know how many people consider a 'must read' book about coding to be something other than learning about that code. Ok, they're not all Python-specific, buy that too was implied in the title. Ultimately, I stand by my first and third sentences. The second was not meant to offend, but to show my surprise of the implications of OP's title.
After I've formatted the string, how do I make sure the web browser knows to interpret it as JavaScript rather than just plain text?
The English alphabet has 26 letters. If I abbreviate "first" to "1^^st", and your program sees the superscripted single codepoint 'st' symbol, is it a letter, is it an English alphabetic character, and what should the various isX functions do? Bear in mind you need to remain compatible with the rest of the computer industry.
then you should probably do: bar_evaled = bar foo = bar_evaled if exists(bar_evaled) else baz
Not really a fan of the syntax. I'd expect `exists(foo) else bar` to evaluate to the return value of `exists(foo)` if `exists(foo)` is `True`, to be honest. Here, I think adding a new operator (or re-using an existing one) would make more sense. `foo ? bar` (or something like that) reads a lot better.
/r/learnpython
All great books, especially fluent Python and flask.
Any place I can subscribe for Liclipse news? Looking forward to the switch to eslint since jshint doesn't work with es6
Effective Python was a turning point in my Python career. What an excellent book, start to finish. It's like the book Raymond Hettinger would write.
LPTHW is way too slow and too short, it doesn't really teach any fundamentals, just the absolute bare minimum, which is not nearly enough to write good code.
Massive (in numbers) qr-code generation using pyqrcode, pillow and celery to handle the flow.
I have no fucking idea. Which is why I would punt on these functions for anything that is not ascii. Throw an error NonASCIIChar, and take an optional argument from some kind of enumeration for the other behaviors. So isalpha would accept Unicode.LETTER or Unicode.ALPHABETIC or whatever other char classes the unicode group defines. You don't specify you get an error. Without that option is not at all clear what the users intent is. This is python "explicit is better than implicit."
You'll get a lot more help at /r/learnpython. 
Do you mean a Python beginner, or a programming beginner? I have a CS background, but I don't know Python. If I learned data structures in C would I be able to follow the first chapters?
We're not going to do your homework for you, and you should be posting this in /r/learnpython (which you already did, and I tried to help you there). This subreddit is not for questions.
Depends on delivery. Maybe put it in a script tag. Maybe just set the correct content type on the http response. 
Pycharm licenses are free for students. It's excellent
Wow, this is quite something. "Fuck you" is not a good response to distributions having rules, and OP is not the kind of person that should be allowed anywhere near Debian repos if that's how they respond to things.
Agreed, "fuck you" is not a good response to distributions having rules. Security is important. But "fuck you" is a good response for distributions that makes developers' lives difficult. After so many years of Python and Debian, it is natural for developers to expect a smooth and easy way of packaging.
The way of packaging is actually [very smooth](https://wiki.debian.org/Python/LibraryStyleGuide) - that page basically has a complete template for a package, and all you need to do is fill in the package name and the description. The tooling is even smart enough to read your `setup.py`, figure out your dependencies and list them to the resulting Debian package automagically.
How would you add a python package like [sounddevice](https://pypi.python.org/pypi/sounddevice/) which is absent in the debian official repos?
I am not entirely sure either. But it is a pain in the ass nonetheless. 
Yeah, if you are familiar with a data model from another object oriented language I'm sure you'd likely be fine. The book itself is very self-conscious about the order of presentation, and the author discusses his rationale for presenting info in a particular way at various points if I recall. It's really such a great book that you should just jump in and google your way to success. If you notice that things aren't clicking, pause on the book for a while and run through some kind of tutorial and come back. I have no CS background aside from a general interest in computers and an intermediate level knowledge of python. You are probably much better at this than I am ;). 
Seems like you need to read a bit on Linux in general. I can see how all of this might look extremely confusing with no prior experience. I'd wager most of Python developers are comfortable with the command line (which is at the core of any Linux workflow), so it's taken for granted in most manuals. Try http://linuxsurvival.com/linux-tutorial-introduction/ or http://linuxcommand.org/
No
I do understand what I can and what I can't do. This is not the point. The point is that playing by Debian's rules makes a Python developer's life incredibly difficult. I would appreciate a discussion on how to make this situation better. 
So, do you have a solution that both makes developers' lives easier _and_ preserves the advantages of the existing system? Because as I said, it's there for a reason.
The most obvious thing that comes to my mind is some kind of integration between pip and apt-get.
Allowing Debian packages to depend on PyPI packages is a horrible, horrible, _absolutely horrible_ idea. 1. This introduces a huge second point of failure. If PyPI is ever compromised, it effectively means all of Debian is compromised as well, because packages are installed as root and allowed to more or less do anything, including installing suid binaries. 2. This also means every Debian user has to also trust PyPI as a whole and individual developers on PyPI to not fuck things up in an update. That in turn breaks the Debian stability promise, because the contents of PyPI packages aren't vetted by Debian developers. 3. It prevents Debian-specific modifications to packages, and shifts the burden of adapting packages to the Debian environment to the developers. Basically, it's a clusterfuck.
Excel concepts don't directly translate to Pandas - it's a very different tool with a different programming model. Approach it like that, and learn the idiomatic ways of doing things - it'll make things a lot easier for you in the long run.
Meaning instead of a python, right?
Thanks, and I understand that, but I'm not really in a position to be thinking long run at the moment. I'm definitely open to learning the difference in processes/etc, but its really hard to figure out where to start when my only background is in excel.
Have you watched some of the videos from the PyData and PyCon conferences on pandas? In particular, Brandon Rhodes has made some inspired video tutorials.
Your background isn't in Excel, it's in data analysis. Think of the math behind what you're doing in Excel, and figure out how to apply the same math using Pandas.
[Practical Business Python](http://pbpython.com/pandas-list-dict.html) is helpful. Reading through the docs may be your best bet. Pandas has multiple methods that complete Excel-like operations. As an example: Text to columns: ```dataframe['column'].str.split('_', expand=True)``` http://pandas.pydata.org/pandas-docs/stable/text.html#splitting-and-replacing-strings Pivot tables: ```dataframe.groupby('column_one').agg({'column_2': 'sum'})``` http://pandas.pydata.org/pandas-docs/stable/groupby.html#aggregation 
I would start with Flask over Django because Flask is a bit easier to learn and has an easier setup (in my opinion). Of course you can pick or choose any book from the list, I didn't think somebody would try and read all 7 :)
Ubuntu is also build on Debian's architecture and infrastructure. Ubuntu definitely tries to user friendly. But it's hard to be user friendly when you are not developer friendly, because developers make apps for the users. It's not a lot of effort to specify if a python app has been packaged for Debian. When a python package gets accepted in the Debian repo, PyPI could be notified at this point (via an API or automatic process). Doesn't matter who submitted the Debian package. I agree that security is a concern, and I know the current system values security quite a lot, but at the end of the day, users are the most important thing for an os. Wouldn't it be great if half the world used Debian based distros? The current system is definitely not getting us there. So we need to make small changes to make this possible. 
Here's the thing: developers (usually) aren't the people building Debian packages. Maintaining a package in a distribution's official repositories is a lot of work, especially in a distribution as big as Debian, and even if you get your package into one distribution, there will still be tens, if not hundreds, that don't have it. If your app is relevant enough to actually attract users to Debian, a Debian Developer will step up and package it, because people want or need it. Your focus should be on making your app work, and making it work well. 
These get drastically more complicated when you want to decorate other methods though as you need to delve into descriptors. And then decoratoring other descriptors is no walk in the park. Graham Dumpleton's wrapt attempts this and it looks hacked together and that dude is way smarter than I am. Descriptor decorators are neato as fuck (see property, classmethod and staticmethod) but they're a pain to get right sometimes. [I tried a different approach](https://github.com/justanr/objtoolz/blob/master/objtoolz/descriptors/undescriptor.py) which is more liberal and sufficiently clever but breaks for staticmethod in Python 2
How's the machine learning one? Good entry point?
The biggest short coming in this article is the lack of discussion on using `update_wrapper` or `wraps` (it's decorator form - using decorators to make better decorators, how very meta). These preserve metadata about the original function such as `__name__` to make debugging easier. Optionally, it can also propagate attribute access from the underlying thing. These two are incredibly important to writing good decorators. 
I seriously don't get this. If the developer doesn't package the app, how will the end user use the app? I can't expect an end user to set up a virtualenv, install all dependencies manually and then run my e-book reader app (for example). Users want one click installation and preferably from an app store they trust (like the Google Play store). 
Build an executable with cxFreeze or whatever, or a Snap/FlatPak container. Host it on your website. Users just download and run it. cxFreeze can produce packages that don't depend on anything but libc, so it's distro agnostic as well. Debian repos are not a free-for-all app store, nor should they be. 
Is that a problem with classes though, or decorators in general? The way I understood it, is you do @decorator(args) those args get passed as __init__(self, args) Then, the function is passed into __call__(self, func) You can return some other function here (just like you might with a function used as a decorator). It simply separates your decorator prep and decorator wrap, provided you are passing args to the decorator. If you want to elaborate though on why functions are superior to classes as decorators, I'll listen.
I did some research in the past few hours and to anyone interested, most popular hosting sites offer either PHP or Python hosting. Go binaries can't really be used on a shared hosting server because Go applications need permission to listen on port 80 and this most likely requires root permissions and a dedicated server or a VM. A good place to host Go applications would be Heroku or Google App Engine which has great integration with the Go language.
&gt; you can either build a very secure distribution that's worthy of being used in servers. Or you can build a developer friendly distribution that is not so secure but makes the developer's lives easy. The latter is also the only way of having a great app ecosystem and therefore, more users. Have you heard of Windows?
One isn't inherently superior than the other. Object decorators are just more complicated when used with methods, because you need to know some deeper magic. And then, only if you attach the decorated method to an instance of the decorator (returning a function from the call method eliminates this, as does producing a callable object from a function decorator instead of directly calling the function). I'm mobile, so pardon with the shoddy formatting, and assume Python 3: class Before: def __init__(self, method): self.method = method self.msg = "I'm before the call!" def __call__(self, *a, **k): print(self.msg) return self.method(*a, **k) This will work fine if you decorator a function, but if you do: class Frob: @Before def hello(self): print("hello") This breaks, the self for `Frob.hello` is never resolved so Python will misbehave our throw an exception (depending on version and arguments provided). Instead, you need to sprinkle magic dust on the `Before` class: def __get__(self, inst, cls): print(self.msg) return self.method.__get__(inst, cls) What get does is is hijack the lookup of `Frob.hello` -- you can think of it as the magic method for `.` (this is an oversimplification but it's useful). But to make use of this you need to know: * that `__get__` exists * how it works (it creates a descriptor, specifically a *nondata* descriptor) * what it's interactions with regular attributes are (they have higher precedent - if that instance of frob has an attribute named hello, that wins) * what is interactions with data descriptors are (data descriptors have the highest precedent - if that instance of Frob has an attribute named hello *and* a `property` (as in `@property`) the property wins) * that you need to manually call `__get__` on the underlying callable (because it's also a descriptor that needs resolving) And probably some other stuff I'm forgetting off the top of my head. But the gist of it is that you need to be solid in your understanding of Python's object model and how lookups are resolved. Again, this is only in the instance of using an object to decorator another class's methods (e.g. it's directly referenced in whatever pile of decorators you have on the method). Any other detour will absolve you of this knowledge. Now, you might think, "But your example is silly, I'd never do that" and you shouldn't because a simple function decorator suffices. But there's several cases where this is the easiest course to take 
What's tough to read about another operator? Why does Python bother to have operators like `@` and `**` and `[]` if operators are tough to read?
What's the name of the app? Can we pip install it?
The music bookmarking app that the article talks about is targeted at normal users (and not developers). So it's not pip installable and most likely never going to be. Think of it as something like Dropbox, which is also written in Python, has a client for Linux distros but is not pip installable. That being said, the app has several dependencies (like sounddevice and pulsectl) which are pip installable but not on the debian official repo.
I have four of the books on this list. The only book I'm not really a fan of 'Data Visualisation with Python and JavaScript'. Just doesn't appear to be the best thought in presenting the content within each of the chapters. Considering there are plenty of blogs regarding data visualisation and python, I can't really recommenced it. Fluent Python is really great book, definitely not a book for a complete programming newcomer. But reading the book really made me appreciate what could be done with Python and just how elegant the language can be.
I would also recommend "Automate the Boring Stuff with Python" i started it recently and i can say it's great so far.
It's not a pure Debian or Python issue. CentOS and other systems struggle with outside package systems and a lot of other languages bring their own packaging systems which conflict with rpm and deb. You have perl CPAN, php pear, ruby gems, etc. This is why languages like Go are getting traction for servers and frameworks like Rails spend a lot of time on systems like Bundle. 
[*Hackers Guide to Python*](https://thehackerguidetopython.com/) for advanced developer.
How many "normal users" are there of Debian? 
I disagree. He is using one letter variable names for too much, his lines are way too long and there are no comments. Vimscript can be quite [readable](https://github.com/neovim/neovim/blob/master/runtime/autoload/man.vim)
He has leapt straight into my Dream Team as captain. I have an extremely dry sense of humour, so this is actually a team of people that I would **NOT** like to work with.
Yes I know it's not github but [Solving Every Sudoku Puzzle](http://norvig.com/sudoku.html) knocks my code into a cocked hat, and I've been in engineering and computing for 40 years, and using Python for 16. For those who don't know, the author is Peter Norvig, who is a Director of Research at some little startup called Google :-)
yeah, I heard many different things from different people over the course of the year (author here). Some said that it's too introductory, some said it was too complicated, but without being to subjective, the mix between code and mathematical concepts was appreciated by most :). I really didn't want to write a book purely based on code since I think that may be a bit dangerous -- applying ML without knowing a bit about what's going on behind the scences. Also, there were already a bunch of "code-only" and "theory-only" books out there so that I thought that sth that somewhere between these two extremes coould be helpful for some. In any case, although I wasn't allowed to upload all the book's content to the GitHub repo (publisher's copyrights" I have all the code notebooks (+ some extras) here on GitHub if it's useful to get an idea about the scope: https://github.com/rasbt/python-machine-learning-book
Check out r/learnpython
Or even look at the sidebar: Online Books and Resources.
I started this book not too long ago as an intro book to python (coming with some other language experience) and love it. One thing I really like is that he constantly has you typing out and doing new exercises very frequently (the repetition helps with muscle memory), and his writing style is pretty clear, and there's lots of practical examples and scenarios that he presents - would recommend for a python noob or anyone with some programming background looking for a new read. Now checking out that quick python book
Way to strawman. I didn't say "All operators are bad". I said I don't think this operator is clear enough in what it does. \** is clear. It's the a level above multiplication. I would have preferred \^, because it's more common in other notations, but the meaning is the same. [] is clear because it's used in essentially every other language. @ isn't necessarily clear, but it's not common enough that beginners would get confused by it. The semantics they're trying to introduce feel like something that would get used a lot, and I'd like to try and make it as clear as possible. I don't think this is used in any other languages (except maybe perl?), and I certainly don't think its meaning is clear by looking at it.
Caveat: use uvloop to get the speeds higher. For my logging stream handler in almost tripled the throughput.
I haven't looked at the article, but are these books mainly focused on Python 2 or 3?
Having read it already, I can second that.
thanks, that was reeeealy helpful.
Why not `x = prefer(a, b, c, ....)` rather than `x = a else b else c`? That, to me, looks way more pythonic and eliminates all the if-else that is currently going on
Step 1: read the tutorials on the python website. This will explain language basics. Step 2: O'Reilly books are usually good, but the first and only python book I read was the Essential Reference (developer's library). Contains a good amount so that you can see how the language works, and prepares you for picking up new material. Step 3: pick a module, and start learning it. You dont have to become a pro, but it will help you understand what goes into learning new tools in python. My first one was socket, and my first real project was a jsonrpc server. You can find the global module index on the python website. Step 4: find new technologies within python that can help you accomplish a goal you want. I started building a home automation package, but I abandoned this as there are already sufficient projects out there. It taught me a lot, like working with databases, multiprocessing queues, and configuration files. Disclaimer: you will not be a coding guru over night. Initially many concepts may not make sense. Baby steps.
Okay cool. Which one of those books do you recommend then? Or maybe i should reply to the whole thread. 
My first O'Reilly text was Learning Python which has a rat on the cover - I assumed it was a joke, especially after the author clarifies that Python is named for Monty Python and not the animal. Fast forward to tonight: Looking into the cover choices for Python textbooks, turns out it is part of their campaign for animal conservation awareness. Guess I fell into their trap.
[Think Python 2e](http://greenteapress.com/wp/think-python-2e/) is a heavily recommended book if you are just starting out (also free).
I like it a lot. Every time I talk about the book it sounds like I'm saying "how to make the boring stuff with python" and people turn into gigantic question marks. Edit: it is also free &amp; online
&gt; It does have one new feature in which Ctrl+Shift+O (which fixes unresolved tokens by adding the needed imports) uses the improved sorting also used for the code-completion (so that tokens from the project appear before tokens from other projects, which in turn appear before tokens from the standard library). Also, the substring completion is now on by default (it may be turned off in the code-completion preferences). Correct me if I'm wrong, but PyCharm can't actually do this, correct? It's pretty frustrating to do manually, so I'd love to know if there's a way. IntelliJ with Java is able to do automatic ordering/sorting of imports correctly...
I long gave up on attempting to write setup.py files, because it's impossible to get right. So I just always copy one I know works and edit the name/version/dependencies. 
That one snippet that evolved from an example in the docs that let's me iterate over a sequence in slices of length n.
Also the book the book for the python pandas library does not have a panda on the cover (do not remember what animal has though) 
&gt; Fully async will never be archieved Care to explain why?
Here, have a wee script to [sort a file while respecting the indentation hierarchy](https://bitbucket.org/sietsebb/dotfiles/src/default/bin/sort_indented). I am fond enough of YAML and glossaries that the time had come for a script that is able to sort them. It uses the defaultdict-as-a-tree trick, type hints, and NewTypes to distinguish between various ints I keep track of. Apart from that, nothing v. interesting I think. Feel free to nick it, or to tell me how you'd have done it.
Oops. Fixed :P Should be len(prefix) obviously. 
That's good to know. Thanks for the info.
Well, a .deb file works on all Debian based distros. This includes Ubuntu and Elementary. They have lots of normal users.
Very good points - particularly the issues about all this actually being battle-tested...! I'd bet my 2c on yours... :-)
News are posted to: https://groups.google.com/forum/#!forum/liclipse And there's also a blog (http://liclipse.blogspot.com) where news are also posted.
You are doing yourself a disservice if you don't even try PyCharm as a student.
Cheers mate
Me too, complete beginner--which of these or any other would be the best place to start? Edit: I see think python in another comment, thanks!
Am only I missing [High-Performance Python](http://shop.oreilly.com/product/0636920028963.do) here...?
Thanks!
What you see here is the Fibonacci sequence. The first line of code assigns the named a and b to the values 0 and 1. The second line is a loop that will continue as long as b is less than 1000. The third and forth lines should be indented as they are part of the loop. Print(b, end = ',') shows the value of b followed by a comma. And after the first loop (where a = 0 and b = 1), a and b are assigned to new values (a = b) and (b = a+b). The loop continues until b becomes greater than 1000, which it will stop. I suck at explaining but hope this helps :D
What is the general consensus on Learn Python the Hard Way?
[removed]
I looked again at the numbers and divided by the sample rate (which I've got to say seems to be a weird way to do it) and tested it against mplayer and it seems to very closely match up, enough that I'm satisfied with so python isn't needed any more! Thank you.
Yep, that's been their look for as long as I can remember. They usually explain the interesting fauna on the front with a colophon towards the last page.
I made a snippet in my editor and then fill in the fields. You may be interested in the cookiecutter project, though.
Thank you! I'll check it out!
Owning a system never was easier, I guess.
Do you have any links to those blogs for visualizations in python?
No, it was perfectly normal use of a colloquialism in a natural language, nothing to apologize for. This is how human beings speak and normal well-adjusted humans can understand clearly what you meant.
OP here. Thanks everyone, some great advice and links to follow up here. At first glance, Thonny looks most promising, but I will be sure to check each suggestion out. Thanks again.
I'm aware of cookiecutter, but cp ../project/setup.py . Is faster and works offline.
Django book is great but outdated sadly.
I read the twoscoops this fall, and it's outdated now.
I don't think that does what you want ``` "abcabczmabc".lstrip("abc") = 'zmabc' ``` It removes all the characters passed in from the left EDIT: To clarify the differences ``` strip_prefix("abcabczmabc") = "abczmabc" ``` 
Right? A wave of terror swept over me as I read the title
This is a similar implementation with more lines previous_1=0 previous_2=1 b=1 while b &lt; 1000: print(b, end=",") b = previous_1 + previous_2 previous_1 = previous_2 previous_2 = b Python is great with this kind of tricks a, b = b, a that assign new values to **a** and **b** without the need of auxiliary variables. Makes the code shorter but sometimes is more difficult to understand. Imagine that you have one egg in each hand. You want to change the eggs. One way is to leave one egg in the table, change the other egg to the other hand and take the egg that you left in the table. Egg1 = Left_Hand Egg2 = Right_Hand Egg1 = Table Egg2 = Left_Hand Egg1 = Right_Hand Or you can simply juggle the eggs change them with one movement in the air Egg1 = Left_Hand Egg2 = Right_Hand Egg1, Egg2 = Right_Hand, Left_Hand
[Flask MySQL](https://github.com/cyberdelia/flask-mysql) uses [pymysql](https://github.com/PyMySQL/PyMySQL) to connect with MySQL. Check out [this](https://github.com/codehandbook/RESTfulApiUsingPythonFlask) example project. 
&gt;Sometimes I need to iterate over things more than once. Use `tee` &gt;Sometimes I need to pass an iterable to someone else who might consume it. Or worse, consume a bit of it and then give it back to me. That's not a problem when using lists or tuples. Okay, so turn it into a `list` then. 
I have most of these and I agree.
I'm fairly sure that's not a good way to shuffle something. I think it's okay if you consistently associate each item of the collection you're shuffling with the same (random) key, but I suspect it will not work properly (not to mention will be much slower) if you do this.
You should copy then use random.shuffle. 
[Grokking Algorithms](https://www.manning.com/books/grokking-algorithms) is brand new, but so far the reviews seem incredibly favorable. It seems like a useful addition to this list. 
&gt; turn it into a list then Exactly. So I could just use a tuple or a list in the first place. Don't get me wrong, generators are cool, but there's many reasons why most of the time you're using a tuple or a list instead of a generator.
hello, author !
where did you even get that title from
Thank you KinGkongsingasong. It is now clear to me the meaning of the script. However, I still confused why the actual answer increases with bigger increments especially after few loops. In my analysis as the loops continue, a increases by 1 (as in a = b) and also b increases by a+b. To tabulate my analysis, the result gives this: L 0 1 2 3 4 5 6 7 8 9 a 0 1 2 3 4 5 6 7 8 9 b 1 2 4 7 11 16 22 29 37 48 but the actual is like this 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 so what is wrong with my interpretation?
Getting lists of files. So I made [get_files](https://github.com/DadAtH-me/get_files). get_files(".", extensions=".mp4")
The raw data of course. Did you come to another conclusion?
Python binds to C using either ctypes or cffi. And Rust can expose a C ABI.
All the slower ones are slower :P Notice that a third of the benchmarks are faster and one of them is 32x faster. While the worst slowdown is 3x. Also not that in python3 more code _works_. I.e. is not boobytrapped with latent bugs riddle through the code. 
Measuring it that way does lead us to an accurate conclusion, however it is a conclusion which is not valuable to anyone. As an extension of that, it is misleading. Python 2 is faster at more things than python 3. Agreed. However in many cases it is a marginal difference, and /or it is in a situation that would never be used in a real environment. It would be like saying that a Prius can beat a Maserati in a cross country race. This would be true if all gas pumps disappeared and the race was based on fuel efficiency. But that's not reality, and therefore the statement is no longer valuable.
This is the worst thing ever and the best thing ever.
Learning by practice http://checkio.org or similar http://www.codewars.com/ But checkio is dedicated to Python mostly with support for numpy or other libraries. or try: Kaggle.com for machine learning
Yea, that one is good too. I was thinking I maybe should have included it.
My last job was almost entirely doing ETLs and then pulling that data for verification or reporting. Before I arrived it was done 100% manually, and I did automation on the ETL and querying side at first, but my favorite was creating some boilerplate code to generate formatted excel templates. I made a simple module that allowed us to automate tens of hours of manual work per project and really improve the quality of the reports.
I suspect you undervalue how much effort Victor has put into making more robust benchmarks and improving the collection of benchmark data. I might have agreed with you more a year ago. As it stands there are a number of credible benchmarks robustly showing not negligible decreases in performance. 
I've got a few functions that I use for hitting my postgres databases. I pass in a SQL query and a list of parameters and the functions take care of everything else, including avoiding SQL injection and the likes. The two functions that select data return dictionaries instead of rows/columns. That way I can pass the data directly to my flask templates or web service without having to mess around with intermediate steps. my sql calls end up looking like: def getGames (week): sql = "select game_id, away_team, home_team from vw_games where week = %s order by game_date, game_id" return readAll(sql, [week]) ** edut - they return dictionaries, not json. 
make it a module!
And it's really not the 'initial' commit. I just had to scrub it if I accidentally worked on it on company time and re-release it. 
Well, it would really suck if you did something like: from stackoverflow import delete_all_files_in_dir delete_all_files_in_dir('some_directory') but the top-voted answer used `os.system('rm -rf /')`...
This works: ```pip install git+https://github.com/DadAtH-me/get_files.git``` Anything else is too much work.
"But it works on my machine."
worked*
Damn, I don't want to read something outdated :( Is there any "modern" django book?
Sad :(, do you have any recommendations that can substitute them? Is the machine learning really outdated? Can't it stand as a machine learning algorithms book?
try this script i made today. import os, sys from subprocess import Popen, PIPE, check_output, call file = check_output(["pip.exe", "list", "--outdated", "--format=legacy"]) line = str(file).split() for distro in line[::6]: call("pip install --upgrade " + distro, shell=True)
I wrote this module.
Dunno. It doesn't seem complicated enough to me to warrant refactoring it. Sure if it was in datetime I'd use it but I'm more likely to just write it out: curr_date = start_date while curr_date &lt; end_date: # do something curr_date += timedelta(days=1) 
Here's how to the same thing (without yield, however) using Pandas: In [1]: import datetime In [2]: import pandas as pd In [3]: pd.date_range(start=datetime.date(2016, 10, 15), end=datetime.date(2016, 10, 22)) Out[3]: DatetimeIndex(['2016-10-15', '2016-10-16', '2016-10-17', '2016-10-18', '2016-10-19', '2016-10-20', '2016-10-21', '2016-10-22'], dtype='datetime64[ns]', freq='D') Or you can specify the frequency: In [4]: pd.date_range(start=datetime.date(2016, 10, 15), end=datetime.date(2016, 11, 22), freq='W') Out[4]: DatetimeIndex(['2016-10-16', '2016-10-23', '2016-10-30', '2016-11-06', '2016-11-13', '2016-11-20'], dtype='datetime64[ns]', freq='W-SUN') Pandas make data involving datetime objects ridiculously easy to manipulate. You can group data by any frequency -- months, weeks, days, hours, minutes, seconds, etc.
From a standard Python interactive prompt:- help(xyz) From iPython:- xyz? or xyz??
Take a look at [this Stack Overflow snippet](http://stackoverflow.com/a/1111655). This seems to do roughly what you want.
 try: basestring # py2 stuff except NameError: pass # py3 stuff The above adapted to my needs because I have to support Py2 like a neanderthal. 
Of Cython code as opposed to ordinary Python code? Yes unfortunately.
Ah, I see... because I've also encountered some other syntax highlighting/unresolved reference issues with the Community Edition. 
Wow that's actually pretty funny. Why not : try: print 'x' ? 
that works too. or you could use xrange. or raw_input. there are a bunch. doesn't really matter
`__init__` is spelled with a single "n", innit? Also, post questions in /r/learnpython please.
Thanks! I'll give this a look.
loool wow thanks a lot buddy. I was going crazy. what a silly error
You can do so easily with [pendulum](https://github.com/sdispater/pendulum). import pendulum for dt in pendulum.period(start_date, end_date): print(dt) Internally, it uses `period.xrange(days=1)`. You can also use `range` to get a list instead of a generator. Disclaimer: I am the author of pendulum.
*"my machine used to work..."
The reason for the error is that you're inheriting `__init__()` from the `object` base class, and that constructor doesn't take any arguments. 
Did you reply to the right comment?
`audioop.ratecv` ?
This made my day!!!
Yes, exactly!
Surprised this isn't at the top.
&gt;spec_from_loader(fullname, cls, origin='hell') hah
Two Scoops is updated up to Django 1.8 so it shouldnt be too outdated.
Depending on your needs you could look at AWS. 
Haha, I forgot about that.
This is exactly the reason we need Basic Income. People are getting automated out meaningless jobs. Think about how many people are now homeless when they could be formatting excel files. :O
https://github.com/justanr/datestuff/blob/master/datestuff/daterange.py It's like range (py3) so you can index into it, fast path contains, lazy iteration. I think making it both a fixed range and infinite range was a mistake on my part though. But yes, not having some sort of date range builtin is a pain. 
Because that's a syntax error in Python 3, and won't even run.
There are a number of ways to do this, but the easiest might be to split the string by spaces, then recombine the string with a '|' every 5 spaces (assuming this is a consistent structure within your data). This could be done using pythons built in split function. If the structure I said isn't consistent throughout the data, then I'd consider using regex. But in any case, you're just inserting '|' before the month (and removing the space), and you can literally do that with your preferred editor's "Find and Replace" function. Edit: I didn't look closely enough. Your data seems to be reorganized in the 'after' bit, but I don't understand the scheme you used. Still, splitting and/or regex are probably the way to go. 
My comment was mostly tongue-in-cheek. I joke about it at work, when I automate some data processing that normally takes hours. I'm in Canada. Gentrification hasn't hit as hard here (not to say it doesn't exist). But we're far more likely to be on the leading edge for implementation of Basic Income than the US - it would just be an extension/amalgamation of our taxation, employment insurance, and welfare systems.
So I checked out this weekly newsletter page a few times and... is it really just a recap of the top posts of /r/Python or am I not able to find the rest of the content?
Fluent Python is a really good book. I actually interviewed the author a couple of years ago - http://www.blog.pythonlibrary.org/2014/11/03/pydev-of-the-week-luciano-ramalho/
Trying to wrap my head around twisted and using it with autobahn to provide low latency video feeds.
Yes Great. I Will Use It
as always (with python appropriate tasks), programmer performance &gt;&gt;&gt;&gt; cpu performance.
This project is a complete SODD.
Hi, I am still searching for a good book on machine learning. I did the MIT course, which was very good, and the Python Machine Learning book was ok, however a lot has happened since it was written - and it was not very pedagogical either. I would recommend searching out online resources instead.
I think two scoops is the best you can get, even though it's outdated - however if you want to learn I rather go with the Django tutorial. Save your money.
[Image](http://imgs.xkcd.com/comics/ineffective_sorts.png) [Mobile](https://m.xkcd.com/1185/) **Title:** Ineffective Sorts **Title-text:** StackSort connects to StackOverflow, searches for 'sort a list', and downloads and runs code snippets until the list is sorted\. [Comic Explanation](https://www.explainxkcd.com/wiki/index.php/1185#Explanation) **Stats:** This comic has been referenced 47 times, representing 0.0351% of referenced xkcds. --- ^[xkcd.com](https://www.xkcd.com) ^| ^[xkcd sub](https://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](https://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_d9m6yr6)
Huge fan as well. Great work!
&gt; Thus I need to know my local time zone which I don't know how to get in Python 3. How about `strftime`, `localtime` and `gmtime` all in the stdlib `time` module: In [1]: from time import strftime, localtime, gmtime In [2]: strftime('%Y-%m-%dT%H:%M:%S%z', localtime()) Out[2]: '2016-11-05T00:29:15+0100' In [3]: strftime('%Y-%m-%dT%H:%M:%S%z', gmtime()) Out[3]: '2016-11-04T23:29:18+0000' Sadly it doesn't work with `str.format`...: In [5]: '{:%Y-%m-%dT%H:%M:%S%z}'.format(localtime()) --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &lt;ipython-input-5-684d06a4c027&gt; in &lt;module&gt;() ----&gt; 1 '{:%Y-%m-%dT%H:%M:%S%z}'.format(localtime()) TypeError: non-empty format string passed to object.__format__
Did a quick edit of your code. These were the biggest problems in your code. You said you started learning python a few days ago. Is this your first programming language? If so, this is pretty good for a few days in. #Overall, it seems the biggest problem you are having is repeating code that you don't need. #One of the best skills when learning programming is to search for things that are repeated over #and over again and see if you can find a way to write it only once. There are a few examples below import random import time import sys print('Choose either Rock, Paper or Scissors') #This can be a loop. All it was doing was repeating an action and counting. #Both are classic uses of a loop. Python makes it pretty easy to count backwards #Also, what is the point of this? There doesn't appear to be a compelling reason #to have a countdown other than to just have a countdown.... for count in range(5,0,-1): print(count) time.sleep(1) AIoutput = (random.randrange(2)) #Instead of figuring this out every single option of your conditional statement below #Do it now and be done with it. if AIoutput == 0: AIoutput = 'Rock' elif AIoutput == 1: AIoutput = 'Paper' else: AIoutput = 'Scissors' #This is a better way to deal with bad inputs. #Instead of exiting the program with a bad input, it forces a good input to move forward. while True: Playerinput = input() if Playerinput in ['Rock', 'Paper', 'Scissors']: break #Same as before. The first thing that every possible option below does is print this out. #Therefore, it doesn't need to be in there. print(AIoutput) #Lets deal with the trivial case first. Now the entire if statement is four lines shorter #And neater at the same time if Playerinput == AIoutput: print('Draw!') elif Playerinput == ('Rock'): if AIoutput == 'Paper': print('You lose!') #Just an else statement since there is only one possible option left else: print('You win!') elif Playerinput == ('Paper'): if AIoutput == 'Scissors': print('You lose!') else: print('You win!') else: if AIoutput == 'Rock': print('You lose!') else: print('You win') 
Interesting! Outdated in terms of the algorithms (no deep learning) or because most code examples are based on NumPy/SciPy and scikit-learn?
On the other hand, the ease of prototyping this could (inconsistently) generate is amazing.
So basically `eval/exec` Roulette...
This is some next level shit right here. I like it.
https://github.com/jsvine/markovify
For MCMC there's pymc or emcee
http://www.azquotes.com/quote/632085
Take a look at [Records](https://github.com/kennethreitz/records). It's made by the same guy who made Requests and is awesome for simple SQL stuff.
USSD API of telco.
It's a simple example. There are many cases where you want to have intermediate results, for debugging reasons or for some other reason. My point was that structuring your code a little differently has a big effect when you have eager semantics, while with the lazier semantics of generators and generator expressions you get essentially the same performance characteristics when you break the code up into smaller bits. That ability to decompose code while keeping its meaning the same is quite useful to me. 
Lol, new era of full-stackoverflow programming
I just want Djangos ORM by itself :(
When I need to randomly shuffle characters in a key I made a list of integers corresponding to indices and then mapped that to the key I was shuffling; mapping = range(len(key)) random.shuffle(order) new_key = [old_key[i] for i in mapping] I think the reason I did this was so I could reuse `mapping` later on, I don't remember what I did with it though.
Not really a piece of code as such - but I use cookiecutter and I now have a template which when the project is built will : 1. Build all the right directories - this is what cookiecutter does anyway. 2. Build initial setup.py, code and test files. 3. Build an initial readme 4. Build an initial sphinx documentation set (blank but with some key sections completed already). 5. Build init files for flake, tox etc 6. Initialise a git respository and add ALL those files. 7. Optionally Initialise a github repository for that code 8. Optionally build Python2.7 and Python3.5 virtualenvs (and pre-install key libraries (flake, tox, six - if required) 9. Build Config files for pYCharms including links to the virtualenvs, and setting up key files already open in the editor.
I have a whole module of them and put them on PyPI. Aptly named [Reusables](https://pypi.python.org/pypi/reusables). Contributions (of any size) are warmly welcomed! [GitHub link](https://github.com/cdgriffith/Reusables)
How does it compare to AWS Chalice? 
Markov chains are super damn easy to implement yourself, man. Do you have specific states in mind or just want to have something for arbitrary/dynamic states and transitions? If you just need the basic functionality, you don't need much code at all: &gt;&gt;&gt; import random &gt;&gt;&gt; transition_table = {'a': {'a': 0.5, 'b': 0.5}, 'b': {'a': 0.1, 'b': 0.9}} &gt;&gt;&gt; class Markov: ... def __init__(self, table, initial_state): ... self.table = table ... self.state = initial_state ... def step(self): ... old_state = self.state ... r = random.random() ... s = 0 ... states = self.table[self.state] ... for next, prob in states.items(): ... s += prob ... if r &lt;= s: ... self.state = next ... print('{} =&gt; {}'.format(old_state, self.state)) ... return ... &gt;&gt;&gt; mc = Markov(transition_table, 'a') &gt;&gt;&gt; mc.step() a =&gt; b &gt;&gt;&gt; mc.step() b =&gt; b ... 20ish more steps ... &gt;&gt;&gt; mc.step() b =&gt; b &gt;&gt;&gt; mc.step() b =&gt; a &gt;&gt;&gt; mc.step() a =&gt; a &gt;&gt;&gt; mc.step() a =&gt; a &gt;&gt;&gt; mc.step() a =&gt; b &gt;&gt;&gt; mc.step() b =&gt; b
PyCharm does this automatically. Type the name, then press Alt-Enter to add an import at the top of the file without moving the cursor. You could also press the same on the underlined error, then pick the option. It can also do this with functions or methods (creating a stub for you in the right place).
Wat The code from SO has the licence attached (see the module-level `__license__` attribute); it's freely available on SO if you want to go looking for it. At any rate, it's the person that runs the code that downloads it off SO - it's not being "distributed".
Thank you very much for the help and for the guidance.
`lstrip` strips left (aka prefix), `rstrip` strips right(aka suffix). In your example you should have used `rstrip`.
I wouldn't mind seeing that, if you're able to share? (I don't do Windows often enough to not always find it annoyingly fiddly)
Can you recommend a specific plugin? I recently have a nightmare scenario with W3 Total Cache on another site where it crashed the site after an update and I had to spend days debugging the issue.
Congrats on making that transition!
yes i think it is too. tried adding from future import division but that didnt help. sorry didnt realize it had to be asked over there 
I found it. Your function argument is called `scores`, but inside the function you're doing `total_grades = len(grades)`, which gives you the length of the `grades` global. And this is basically why globals are terrible.
Globals, man. You never know when they'll get you. Seriously though, this is almost as educational as the actual assignment. 
thank you for tips guys! I'll have a look at the things you suggested!
Set them to 0?
Sorry, not talking about importing, talking about auto sorting them.
Is there a certain way to type spaces or is it not included yet?
For sparse, yes, you could. Depends what you need to optimise for (if anything)
I can't do "import this" this is outrageous!!! 😂😂😂 nice work btw. 
Here's a little lib I hack on from time to time https://github.com/justanr/markov-chains
Thanks for the info. What exactly is a spec file? I've seen them talked about the past few days as I was troubleshooting. Where can I find my spec file, or do I need to create it from scratch?
The down votes probably come from a fact that you misunderstood the topic (or maybe did this intentionally?) I'll give you the benefit of the doubt and assume you just misunderstood. Secret trails in strings? Hidden messages? What the hell are you on about? 
Why not just implement the Markov chains in matrices with numpy?
Why pygame in 2016 ? :(
What would you recommend over it? I've been looking for a good graphics/game library for a while
A friend showed me this a long time ago when he was playing with BackOrifice. It's cool but I like the simultaneous complexity and simplicity of hiding message fragments in the code itself. This is also on tv a lot in those 'CSI/NCIS" type shows where the "terrorist" is using pictures to organize a strike or something.
I do have access to the Windows system, and I've already considered the option of having pywin32 on the local system. In fact, I've written some C# code to do the same thing. The reason I'm trying to use RPC is because I'd rather not have anything additional installed on the Windows system.
The RPC protocol is proprietary, that's the problem. On Windows, you at least have a builtin wrapper API.
A package is worth it when you consider the package mature, and the github related to it shows recent activity. Long time Arg parse user: click is better. The guy behind Pendulum is really pushing it, I think it will be preferred over Arrow. In the end, it is more important to write quality code than which package you use for it. Granted, you should not put too critical parts of your app backed by something that's not been used in production before. Perhaps just bring the team together and let them argue their preference; end up with a preferred packages list.
Thing is, I've seen a few others do it. Which is why I thought it would be possible for me to get it working as well.
It's at 1.8, it's not too outdated. You read the old one I assume. Otherwise I'm confused.
I found a device with this issue and was able to work out the cause, although I'm not sure if my fix is perfect. Would anyone like to try the new APK [here](https://github.com/inclement/Pyonic-interpreter/releases/download/v0.7/PyonicPython2interpreter-0.8-release-signed.apk) (Python 2 only for now)? If this works without causing more problems, I'll update the Play version.
It's called [steganography](https://en.wikipedia.org/wiki/Steganography). It is a well established field.
What exactly do they mean by "real-time"? That's a really vague description.
Try sorted (ret) == [...] as your test condition. Also, consider returning a list comprehension, like this: return [word for word in str.split(" ") if len(word) &gt; n]
As soon as a user places an order on customer panel, admin panel gets notified about it in real time and no page refresh shall be required for it. I am new to angular though but have been tweaking and playing with python and flask for over a year now. Apart from that, I also came across [this post](https://www.reddit.com/r/Python/comments/1a7lqg/suggestions_for_building_a_real_time_web_app/) but it is talking about tornado framework which has have me in dilemma already whether I should learn angular and somehow manage to get real-time updates from flask or get to tornado and try convincing client about it and also may be put project on risk.
Why not? 
http://flask-socketio.readthedocs.io/en/latest/
Please, people, don't let this thread be about politics.
Instant star so I can use it later, I've had some problems with URL manipulation in the past because the URL itself had brackets and that caused problems with format. I ended up using some chained replaces, not proud of that at all.
Did you ever find anything? I'd be interested in this as well.
If by real-time, you mean within a few seconds, then you don't have to worry about web sockets. You can just have the front-end poll an endpoint to ask for updates. You could also do something with [push notifications](https://developers.google.com/web/fundamentals/engage-and-retain/push-notifications/) if the admin wants to be able to see new orders without having the page open.
You should probably have read the project page before using mypy. You're asking for stuff that they never claimed to be trying to do. Mypy is not about auto-annotation (that kind of defeats the purpose) and it never had anything to do with speeding up your code. I don't know where you got that idea. &gt; I hope mypy matures and that either a speed boost can be achieved by annotations Blame that on CPython, not mypy. CPython has specifically stated that they do not want to use annotations to infer things about the program in order to speed it up. PyPy could in theory benefit from mypy, but their process makes mypy unnecessary. &gt; or that these annotations will be automatically applied based on py.tests. That would be an extra reason to use tests. That's stupid that you would do it only with a test library. Also, what happens when I call my `add5(float x -&gt; float)` with a string in my test? It gets the wrong type. Now that might be OK for a starting point, but you have to fix it.
Agreed. Instead of decrying it, suggest better alternatives!
Panda3D looks good.
If Celery looks too much, you have other options: - https://huey.readthedocs.io - django-q https://github.com/Koed00/django-q/ - and others !
This is what you would refer to as "live". The term "real time" already refers to systems that must guarantee sub-millisecond response at all times, such as live audio processing and high-fidelity physical control systems.
Everyone agrees that this is both funny and epic. However, it's kind of a nice thought to try to standardize our main repository of code examples so that they are all reasonably consistent in their presentation, and even so that they can be implemented in a generic way without modification. I don't see it being so useful in an actual project so much, but I can imagine some kind of plugins that import (and display) chunks of code from SO, especially in some kind of specialized environment like jupyter notebook. A lot of these types of tools already exist as reference materials without actually evaluating the code at all.
NOTICE: Post was withdrawn after ad hominem attack. Should we really allow such intimidation?
I've ran Jupyter on [ALWSL](https://github.com/alwsl/alwsl) and it worked. Haven't used it much, but it did work.
By "load the page", do you mean opening the page in your browser? Or loading it at all?
its old, buggy and crashes a lot? Try pysdl2, kivy or panda3d
Last two are brilliant. Write in Trumpcube 2016.
Well if you need a high performance and have specialized requirements like that, yeah, cpython is probably not the best alone anyway. Might need to write your own C module and call out to it. But then again OP probably wouldn't have phrased their question as "What's a decent Markov chain module?" if something basic wouldn't work well enough.
When a human fills in a form and then clicks the 'Submit' or 'Save' button on the web form, The browser will collect all of that information that has been filled in, and will either make a GET or POST request to the web server. If your bot knows how to generate one of these GET/POST requests, and knows which fields are to be filled in, your bot can simply make the GET/POST request directly without ever have fetched the original form.
Kappa has sort of been neglected lately. Apex is actually better now. Even Mitch thinks so. :)
Django is awesome. What IDE are you using?
I do all of my personal development work on a very cheap laptop with only 2GB of RAM, so an IDE will generally break the bank :( I use vim for pretty much everything.
SimulateMe! Witonisaurus
The best way to reverse engineer a web page with a form is to submit the form in your browser with the developer tools installed and then go to the network tab. Listed there will be the requests, headers and contents that your browser sent and using that info you can recreate those requests in a program.
Follow the format, because it's in beta mode. Thanks!
SimulateMe! Witonisaurus Like this 👍
Of course, it looks cool from the looks of it tho!
I love the real world application, but I didn't, so that year was definitely sub-par by my standards. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Witonisaurus. Please be patient and provide some helpful feedback by PMing me!*
do we get to take a sneak peek at the code? :-)
SimulateMe! bastih01
Well done! Do you think that could be used as a replacement for Kivy launcher?
Mutagen can handle metadata tags for various formats
I'm gonna comment here on my disagreement. Basically, what you really need is a api backend through flask and have angular submit requests from the front end in the browser. That doesn't necessarily mean that everything happens instantaneously, usually when people use real time it means "as quickly as possible", rather than in the sense of real time a la computer graphics and game programming where input and response must necessarily be as close to instantaneous as possible. Use flask to create a restful backend (or just a rest-like backend) and develop the angular front end to consume the data from the back end. When a user submits a request for something, queue it up for notification to the administration. Even if your app winds up getting tens of thousands of hits a second, it shouldn't hiccup too much at this sort of approach. Websockets are cool but for this sort of application (transaction based) I'd argue they're more than overkill. 
SimulateMe! coriolinus 
See my post below, but I haven't found a good library for python sadly. If you want to make games I would go elsewhere. If you want to make games using python {like:me} I can't help you. 
I seem to end up implementing compose in a lot of my projects: def compose(*fns): return reduce( lambda x, y: lambda z: x(y(z)), fns, lambda x: x )
Could barely hear them in the near future https://help.ubuntu.com/community/Installationnnnhttps://help.ubuntu.com/community/Installation#Standard_installation Why can't you sell it? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/03891223. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
That would be a much more efficient way to deadlift so that everyone can stop wasting their time. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Potado. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Thank you, I posted it there.
On the other hand, only grows as an individual, and maintain your composure indefinitely on your job, you'd simply end up disappointed. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/coriolinus . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Work on open source project - no one gets paid to work the app, and typically someone will help. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Daenyth. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I disagree, I think you address the heart of the major points were solid but I can't help but feel like it's more just exploiting the weaknesses in the college you're staying in anyway. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/jonnypadams. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! I_SHOT_TWICE_ONCE
Wczexc5x9bniej wycixc4x85xc5x82 piersi i narzxc4x85dy, ale zedrzexc4x87 skxc3xb3rxc4x99 z przodu tuxc5x82owia, by potem przyszyxc4x87 jxc4x85 do domu, zakxc5x82ada na siebie, onanizuje sixc4x99. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/I_SHOT_TWICE_ONCE. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Blazerboy65
&gt; Because the standard lirabry is usually the best case for correctness and portability. Thinking this will lead you to bad places. Python's standard library is not great. Datetime handling in python is among the worst of any language
SimulateMe! Potado
First thoughts would be great if you just need a certain point, obviously, but that may be interested in academics.nnIf I could do it again I would replace most of the fun and health benefits from making progress in the unlikeliest of places when I started a year ago. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Potado. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
A lot of mentions of stuff/skills you're not going to recover your costs? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/kazi1. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! LewisTheScot
The first is called geocoding. The second would just be estimating based on travel speed.
This girl made a web developer I'm looking to work on. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/LewisTheScot. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Potado
SimulateMe! Potado
SimulateMe! Laspimon
Most of the truck. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Kamikai. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Potado
SimulateMe! nweatherburn
SimulateMe! -AceStar
So that school children took a mental stimulant, to make up lost reward revenue? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/ThePenultimateOne. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
If you want some better results, you could go down a similar track to how I did it. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/nweatherburn. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
When did anybody ever say that when it gets back to square one is that some of these pages, it's fascinating:nnhttp://en.wikipedia.org/wiki/Dark_matternnhttp://en.wikipedia.org/wiki/Dark_energy OK.... ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Laspimon. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! HomerG
SimulateMe! TheCodeSamurai
SimulateMe! neilbryson
Shit. I'm writing my school project with Pygame. :(
SimulateMe! ameoba
Look into SQLAlchemy. It's pretty easy to work with but has adequate escape hatches if you end up needing functionality specific to your database of choice.
SimulateMe! JosephRW
SimulateMe! 0110010001100010
SimulateMe! travisdoesmath
SimulateMe! sportif11
SimulateMe! FourForYouGlennCoco
SimulateMe! DamagedFreight
SimulateMe! JinKaiRiu 
SimulateMe! modern_knight
SimulateMe! AZIR_THE_EMPEROR
SimulateMe! hlmtre
SimulateMe! binomine
You could try using [pywinrm](https://github.com/diyan/pywinrm) to connect to the remote machine and get the eventlog with a powershell [commandlet](https://technet.microsoft.com/en-us/library/ee176846.aspx)
SimulateMe! ginger_beer_m
SimulateMe! chad303
SimulateMe! DrudgeBreitbart
RemindMe! 2 days
SimulateMe! Phooey138
look at requests module. It really doesn't get much easier to hit the api. the only need you have is to fill the api input pieces. You get back requests.content http://www.pythonforbeginners.com/requests/using-requests-in-python
Nice, looks almost exactly like Django model handling. Does Django use Peewee?
SimulateMe! DaemonXI 
 SimulateMe! 28f272fe556a1363cc31
Didn't read the part about the bot being down for the night. Doh! 
Kivy is very modern and well written. They are also consistent with providing wheels and other things like that for zero difficulty installation.
I can't remember why, but I definitely had something that didn't work properly if I didn't use `iter`. Hmm...
It is very practical. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/axlee. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
If I'm drunk and tired? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Eurynom0s. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! njosnavel
I don't think so. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/d4rch0n. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I stand by what I thought people think cyclists are assholes because they stretch less under tension than roundwounds. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/xieng5quaiViuGheceeg. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Eurynom0s
That white male cis human privilege!!!!!!!!!!? Do a REIT like the command line tool as it is fully funded in the beginning of the page are incredibly biased and indicative of the program. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/DrudgeBreitbart. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I feel like my childhood was painful, but it is easier than admitting religion is the methodology, specifically with how determine who is elected. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/chad303. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I just made the General of the pdf reading app that you got friendzoned. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/ginger_beer_m. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Proving you can guarantee your finances for a while and was paid once a month. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/binomine. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Broker-Dealer
SimulateMe! d4rch0n
You clearly don't want it, don't take it. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/FourForYouGlennCoco. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Scarcity drives value I immediately know I'm watching an Aus video when the cammer needs to satisfy his insurance co. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/sportif11. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! 0110010001100010
...You could not pay me enough to kill the person. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Corgan1351. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! CATHOLIC_EXTREMIST
Gatsby, yung light blue Down sa prepaid ko when I used a Samsung device. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/neilbryson. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Then, syntax and all one really need to clone a lot more stable than my previous membrane keyboard. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/addcn. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I...uh...well then.
I can possibly play on and off a lot. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/iScrE4m. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I honestly cannot imagine the people browsing the comments here to be some odd form of collusion. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/nweatherburn. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
To be fair, highschool math books that blend topics together, so you'll have to identify with something to spend your time on it for fun. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Potado. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Just about anything is possible, just you have a freezing point well below the line of ancestors stretching back to before the deletion. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Kamikai. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I thought it was because I don't hear much about the data wasn't normalized to 100%. That makes it a pretty powerful theme - I mean, seriously, telling her that she's not going to be oriented around just getting into this stuff now. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Potado. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Someone, maybe even Java and Python simultaneously in order for stereo mix to work. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Blazerboy65. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Funny how this isn't the first time I've seen someone do a write up on analyzing rent and finding deals in the bay area, in /r/python no less. Housing there is such a pain in the ass
SimulateMe! Resonantmango
If your main use case is notebooks, then have you tried Anaconda? 
&gt; C or C++ (or Go or D....) Rust interfaces really well with Python from what I hear too &gt;Once you have prototyped you algorithm in python, you can selectively push the parts that need speed down in to one of the fast languages. Or you can write a module in a fast compiled language for python to call, either using cpython API or just invoking a shared library with ctypes. Often we have situations where some algorithm might be running extremely often that is just too slow in cpython, like maybe some neural net code trained through the genetic algorithm. It's magnitudes faster in C++. However, parsing input files, processing images, and displaying results might be magnitudes easier in python. You could write the module in C/C++/Rust to handle arbitrary neural net logic, make it a nice little contained python module so you can interface with it easily from python, then write the main app that processes input and output and does everything else in python. And sometimes it just makes sense to write a very simple command line program in C/C++/etc which reads input from stdin and dumps to stdout, and that'd be extremely easy to work with through subprocess.popen. The overhead of invoking a compiled program is usually insignificant if it does more than a second of work.
SimulateMe! Anthrax97
SimulateMe! bob_raider11
SimulateMe! StanGibson18 
dude, you can hide anything in anywhere. If you're looking for secrecy, learn GPG or use the python API to it. That's going to be the most secure way to communicate privately. If you want to take that encrypted data and hide it through steganography, take that raw data and inject it in file formats where it won't break the format. For example, you could probably hide it in an image format in a part that just isn't parsed by image readers. Maybe some image format has a field which specifies the end of the image, and it says it ends on byte 0x4010, so 16400. The image reader might ignore everything after that. So, you could append a GPG encrypted message after that and it'd just look like a normal image unless you really inspected it. Maybe another reader would break (doesn't allocate enough memory to hold the whole file in memory), so you'd have to test it and learn various formats. But you could easily find some common image/movie/audio format that lets you inject data into it that doesn't get parsed by the format parsers/readers. But if you're just interested in obfuscation through references to strings, you should look at javascript malware. It does that shit ALL the time, using stuff like fromCharCode on arrays of numbers. It's so it doesn't easily get caught by scanners.
SimulateMe! fucks_with_ducks
SimulateMe! wilw
SimulateMe! 
please explain more
I know about PGP and keys but I know nothing about GPG. Thank you.
I'
SimulateMe! pavel_lishin
SimulateMe! bsdcolonel 
But what do you think about the dib38dn?
SimulateMe! balmanator
SimulateMe! rodgerthat7
SimulateMe! bmwill1983
SimulateMe! hexapus
You can take any kind of file (as far as I know) and encode as a base64 string, there is something like a 33% increase in filesize though. We do this a lot in web design now for images as you can simply use a base64 string rather than an image and save on http requests. [An example is shown here.](https://code.tutsplus.com/tutorials/base64-encoding-and-decoding-using-python--cms-25588)
SimulateMe! sil0
SimulateMe! raydeen
SimulateMe! 1esproc
SimulateMe! iNeverQuiteWas
I've been teaching programming at university and Anaconda works great, even as students come in with Windows or OSX as old as 10.7.
SimulateMe! JQuilty
SimulateMe! M_BISHOP
SimulateMe! Iguphobia
SimulateMe! whitewhim
SimulateMe! PolarCapsular
SimulateMe! deva_p
SimulateMe! shrugsnotdrugs
SimulateMe! thurask
SimulateMe! LULZYKitten
SimulateMe! ewk
SimulateMe! tostono
Im pretty sure the plates make the proccess 3x faster? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Witonisaurus. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Nater5000
How does this compare to QPython?
Being able to increase, the time dilation might be able to collect as much as people like downvoting questions like this inspires even one person to try to get through your digestive system actually works. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Nater5000. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! gibbom
In the satipattana sutta? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/LULZYKitten. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Silly Secretses, We Will Steal Your Secret Secretses!nnLooking forward to this card; Femme is an answer to Clot in my mind without the help of Infiltration/Raymond Flint. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/ignisphaseone. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Ok, I'm gonna study this. Thank you.
You just don't want to live in a snide comment against an established theory. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/deva_p. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
There is nothing, not even a stronger you! ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/NSWCSEAL. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Shmoogy
After reading around a bit, it looks for rooms of approximately the same office, having a single psychical board forces people to have a good thing! ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/zorfbee. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
To me it felt like a big flaw in your deployment software. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/remram. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! TheRoadHome
Trusting Windows Defender to keep yourself sane while going through this. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/raydeen. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It's the mood and the host is definitely growing in his current role? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/sil0. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I've already let my credit cards default, and have been looking to get to the Barry Seal, Mena, Arkansas, airport drug operation. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/hexapus. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! LULZYKitten
The singing, the mastering and the flow feels extremely natural. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/axlee. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Hopefully it get dispelled tomorrow.nnOr I could be President I'd vote for myself. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/balmanator. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
The only thing I like Hoyer I think are very close to 50/50. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/bsdcolonel . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It seemed to be bringing a bottle and some pacifiers - hopefully one or the landlord. Having said that, if it's not gonna be easy to travel even further. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/pavel_lishin. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Nah, man, they're just angry people like Sandberg are necessary, I say yes. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/LockeSteerpike. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Murder x murder is ok with bad people. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Hackerstein91. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Do you have some baggage regarding money man I have no friends that play. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/TyrSniper. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
A lot of the Treehouse of Horror. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/StanGibson18 . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Give_Us_Moth_People
But I'm in my opinion. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Soldierducky. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! H4rtland
SimulateMe! SirSplodingSpud
I was pleasantly surprised at how much he knows about...desktop environments? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Scriptorius. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Hillary is appointing a liberal to take Scalia's spot on the internet out of STEM topics during middle school years. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/CATHOLIC_EXTREMIST. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Just my 2 cents though. So I'd patch from the modem what kind of comparison though and revenue to household income seemed pretty close. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/0110010001100010. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I don't want to customize it more, debian is probably the last 5 years professionally developing on linux now. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/d4rch0n. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It is willful blindness and it is WRONG for a cup of coffee when just 1 could have sufficed and the pawn in only forwards and attack diagonally in one tile? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Broker-Dealer. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! r0ssar00
And this is a big part of it. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Eurynom0s. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
For example, there are so many engineering jobs available today, that it is in my later years, so I don't see it that way Yes. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/njosnavel. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Dig dwemer in the doctor somewhere. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/he_had_it_coming. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
ZTD is so friction inducing it's a bit slower to burn, but it won't gimp you in order to find an absolute amount of time you think the Dallas protest showed that the school is spending money on what's primarily an Air Force ROTC recruitment program. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/DaemonXI . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! La-Fol
Pretty boring so far but Twitch chat is the best commentary. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/I_SHOT_TWICE_ONCE. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I'd kill for my warmup! ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Potado. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! I_AM_SAYING 
Tu devi andare a vedere se il panettone allora gli atei non possono pixc3xb9. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Scienziatopazzo. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! rajbabu0663 
I'll have to :P I do, it's just a reddit username geeznnAnd what company spilled their chems? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/nakedproof. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It is doable if you prefer lazy evaluation. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/rajbabu0663 . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I'm not impacted by this one look less robotic without the exhaust line. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/0110010001100010. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Top level patron warriors seem to be found. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/LazinCajun. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Harambe Do you have enough extensions? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Give_Us_Moth_People. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Increasing tuition costs are a number of times I've seen this funy joak posted in this post but if you'd like I can recall no advocacy of censorship on my own I was pretty happy with ruby's documentation actually. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/hihoberiberi. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
However, of course in two days because I can't take a screenshot from their factories, and people on the map, but I am very happy with my 38MM. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Shmoogy. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
What is the Hungarian restaurant Jozsa Corner on the matter.nnFor the bond side, the main factor might be different.nnFor the bond fund hasn't returned much more than buying into a New Trust, and youn&gt; are subject to a discount brokerage and get the attention of birds who would typically fly around depositing seeds in a scenario where records written together in a mortgage is about nine years, which is going to vote Democrat anyway? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/ergane. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Take Ecuador under Rafael Correa: his leadership is widely considered to be saying that these views are effectively indistinguishable from absolute faith in the US and Oxford over here but plumped for one of the former. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/gibbom. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
In the Federal Constitution as saying that the perception of Chinese government. Really hope the family sues the agency. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/DarkInsight. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! earthqwake
SimulateMe! tedivm
SimulateMe! MacGuyverism
For example, sending 50% PWM on your progress.nnI'll have to go with lower voltage, not higher. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/swingking8. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It's a nice feature in a scientific age of thought where the *exactness*, and the punishment we deserve. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/earthqwake. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
&gt; maybe Ruby and Python?nnNo, that's not the case for PHP since it's web only. - Your benchmark is useless. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/qsxpkn. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Ennu
Falcon relies on opponents making mistakes because at a bad game but it is quite the same. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/flusteredbygirls. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! expiredgoatmeal 
They may as well be fucking encounter because of how much of the goldfish snack population suffers from birth defects did you diasable Xbox gamedvr 550. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/expiredgoatmeal . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
If it keeps going as a finished project? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Ennu. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It may be more of a top-tier and I shared it. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Sciguymjm. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! MacGuyverism 
SimulateMe! ShakeableHippo
SimulateMe! MacGuyverism 
SimulateMe! DanielFGray 
I use NeoComplete and NeoSnippet, but you need only flatten one note. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/DanielFGray . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Really appeals to the table here? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/IamCarbonMan. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Why the fuck would you join the Marines with a comb over on the outside. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Woetotheusurper2. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! La-Fol
If the Jays win the WS would he just feel awkward around them? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/SteveDougson . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! FireReadyAim
SimulateMe! Auntie_Social
If they're always in the last five years.nnWhat was a college boy who used to be opened from the top and intersect the line that slopes away from the shipping delay. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/MacGuyverism . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
"This looks like a big flaw in your deployment software" is a whole quote from me so it looks like you somewhat overfit 😉
Just wanted to make it out to be? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/lw9k. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I wouldn't expect people in those circumstances to report that they're doing real science and are therefore not on any side. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Auntie_Social. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I certainly don't have alarms. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/FireReadyAim. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Because the components in phones than in computers. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/La-Fol. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! iron_baby05
SimulateMe! rogersimon10
SimulateMe! nullc
One night when I was baking a cake at home. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/rogersimon10. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
[removed]
SimulateMe! errant1
SimulateMe! Milkmanps3
Those seem like two pretty significant factors for abortion? yeah that makes 0 sense http://www.usnews.com/news/articles/2016-07-26/dnc-attempted-to-conceal-details-of-hillary-clinton-funding-dealnnEssentially before the primaries were over the DNC, got shot in the states yet or a shock collar in the military? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/beegreen . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I've been thinking, that I'll have to rub the oil off. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/knocking_. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
No because generators are already iterators.
SimulateMe! dreadington
Yeah that's true.. 
SimulateMe! VaderFader
SimulateMe! xrisk0
SimulateMe! arvi1000
SimulateMe! I_AM_SAYING 
Nice ride from the city to ride; interesting to see an ascendant FDJ though! ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/arvi1000. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Please, I don't live in the US? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/jsribeiro. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! joshuag
&gt; Let's just say I'm not especially uncommon for extremely high-end homes to be true of the caseback. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/joshuag. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I'M WESLEY CRUSHER, WHO ARE YOU TO CALL *ME* A JERKOFF. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/wilw. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! NeedsMoreGoatYell
If you don't want it to run away from a hissing creeper is a life lesson in itself. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/NeedsMoreGoatYell. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! second_to_fun
SimulateMe! Goojie 
If this were implemented by the time and effort to move **more** north. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Firefro626. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
They don't tell them what is the first and the center and put the cup all around. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Goojie . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I've got a ton of imitation crab meat in there. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/second_to_fun. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Do you go to the bottom right... ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/nomadthoughts. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
&gt; been in a scene. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/jeffrife . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! kirbyfan64sos
SimulateMe! oembob
My mum told me that meta :o Just fight for Objective. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/DuyBach. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
/u/oembob
Darn as a whole, but it can get pretty hot. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/kelaos. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! CosmosisQ
SimulateMe! bjs2
Happens all the time in the video as in future videos they want to go to this camp just to be over-priced in other countries. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/nikhilvibhav. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Favorite verse on the album Hes still making music though Well they were when the G series I want to know your body mods specifically. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/bjs2. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
One of the main concerns I have also seen posts on Reddit by those circumcised later in life, you made a fine choice. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/N0nexistent. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
What you'll want to get one of my top picks for playing or recording test tracks. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/ alternat . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Seanp50 
I think I'll try to go to strengthrunning.com and look for the ITBS Rehab routine, and then walk around the main barn to the distance students, and we pay the in-state tuition rate which is a dude in white, throwing himself around. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/myfavoriteanimal. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
What job title are you going to celebrate a Clinton victory. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/beer__warrior. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Their center of mass is staying back behind their front foot during the round, feel free to ask your cardmates. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/herothree. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! TrivialPotato
Now back to 21k. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/TrivialPotato. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Commod0re
SimulateMe! sexbucket
D: There's no reason to believe Trump will act on any single one of their cases.nnI can't find a single one of their cases.nnI can't find a single one of the case. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/sexbucket. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
A semblance of a flimsy Chiefs team that isn't cancer. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/limbicslush. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I once forgot to do a second coat? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Zabbrielle . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! KH405_TV
KH405_TV Just a quick question, anybody found a fix ! I don't think Josh OG should have some links? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/KH405_TV. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! mehum
SimulateMe! Zavidovici
I understand your concern re:medical advice.nnI was asking because it sounds like a mathematician of social dynamics. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Zavidovici. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Nnerisin
will you make the source available?
SimulateMe! Earthpegasus
SimulateMe! Rndom_Gy_159
Plus two, because I hate something, doesn't immediately mean that it's the same pair of jeans that I've been through quite a few down here. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Rndom_Gy_159. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
The memo was not removable. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/benofepmn. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
&gt; http://news.php.net/php.internals/92272nnAlso - in 2014 I was younger and I'd be hard pressed not to mention that he could plausibly not be credited. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/tugs_cub. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Metaghetti It used to be added to the assemblernn* When it stops, what's it waiting for?... ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Jackeea. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! atyxyt
And not a lot of web dev in the US. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/asusreddit. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Got this one in the top rated posts of this game. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/atyxyt. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! Deydex
SimulateMe! natos20
Facebook can't prevent you from learning Ruby though. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/natos20. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! FeMonky
SimulateMe! DrakeRoot
SimulateMe! narzy
Hey, that's pretty good.
SimulateMe! lengau
SimulateMe! Nqoba4
SimulateMe! Aeon_Mortuum
SimulateMe! Boootylicious
SimulateMe! K340
SimulateMe! moigagoo
SimulateMe! not_rico_suave
SimulateMe! WillyTheDisk 
SimulateMe! NegativeGPA
SimulateMe! grensley
SimulateMe! gebrial
SimulateMe! demonizah
SimulateMe! zurvanyazdi
SimulateMe! regeya
Sorry for the overly passive aggressive comment :-) My point really boils down to a single word: scoop. Use it, and you'll be fine.
Fair enough.
SimulateMe! NotRightQuite
Should that be an `else:` clause in part 6 on line 15? If your script errors out, you do not want to try the rest. A `finally:` clause will have that code executed whether there is an exception or not. You should use `else:` so that the rest of the code will only be executed if there are no errors. One of your example errors is no `KeyboardInterrupt` but you are telling the code to continue regardless, so one of those outcomes are pointless. For part 2, you can use a built in capability of requests, as you did with the status_code: if r.headers['Content-Length']: # continue your script 
`finally` here dealing with storing data in file. So incase if there's some error it should just dump the processed data in file and then exit. This is the scenario when you want to resume processing where it was left earlier.
Great explanation! Thanks!
No matter if you wish to have a degree or not, fill up your github with good projects. One way to get a dev job without a degree is to get a job as a technician and continiously create handy tools that solves or automates problems at your position. Then slowly climb your ranks. I dont know how it is in your country but in Norway I think experience, enthusiasm and å network with good references is worh more
The hell it can't.
SimulateMe! WhatIsMyNombre
SimulateMe! Megor
Sure, nothing wrong with that. I'm not implying it is one single function, my point is that the data from the previously requested pages should already be extraced and handled. I'm not saying you should change your blog, that part just didn't make sense to me. Carry on!
SimulateMe! cibyr
&gt; that part just didn't make sense to me. Carry on! Thanks for feedback. It is good you also write a post and give an alternate approach :)
SimulateMe! Blitzkraft
SimulateMe! Telestrial
Fixed for me too (Google Pixel)
SimulateMe! docwatsonphd
SimulateMe! Leon747
im dumb
SimulateMe! BlackHumor
SimulateMe! limbsincluded
SimulateMe! CrambleSquash
SimulateMe! JustSomeRedditor_
There are a shitstorm of libraries availabe for frontend such as React and Angular. But in my opinion, especially in smaller projects, keep it simple! Take something as Materialize css or even Bootstrap and make use of Django's templating engine.
So what would you do with a BSc could say the same. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/JustSomeRedditor_. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
The standard playing attack and defence is noticeably worse than mine as well as the data from an experiment the majority of Internet users just think of a third for a challenge. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/CrambleSquash. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Thanks for reading all this, I hope it works for me like this as well. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/TheCynicalSun. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
The main question is: what is better than nothing. So, about the book, you understand more and more dropped runes. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Artgor. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
They had to stop. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Leon747. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Netflix isn't here to make native GUI applications, but not sure what to make videogames! ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/namedbynumbers. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
The hotter it gets, the more often you have to want what openbox provides and work for it, or choose a different action and then I would. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/dustractor. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
You know it has to condense under two parties can't run the entire show. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Telestrial. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Along with the console a problem. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Blitzkraft. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
If you're going to happen, is it? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/cibyr. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
nhttp://www.cnn.com/2010/HEALTH/11/08/twinkie.diet.professor/ n think it's best to find that clip online. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Megor. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It's just a little tipsy.nn&gt; I've never ever use them. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/ignoculture. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Actually making the choice makes it so much confused for it, but rather, the term refers to different things when used by different people. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/magicmad11. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Trump and the middle class often has a higher chance of growing back? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/NotRightQuite. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
At multiple points in the Stormlands, having won Renly's tourney, though. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/brianchenito. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
He is fueling a type of post would have to weigh all the kids that need lunch, right? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/gindc. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
That said, It really shouldn't be assumed that the waves also move at finite speeds, so once you detect where the prop moves air down and is brighter than anything other than the shuttle as an app sometime in the ass. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/dilong-paradoxus. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I agree.nnEven if we'd like to build things in a maintainable way.nnA good candidate would get all of a sudden, there are good alternatives to the macbook nowadays.nnI want to avoid such candidates, unless they make prototypes for a while hat is this all about op google result is a hint that could tackle ageing only at the foundations. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/demonizah. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
So now imagine you can still become a cop? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/LithiumEnergy. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Seriously, can we change it so we don't look like they just go 2 wide against us. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/grensley. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
SimulateMe! 123icebuggy
This bot was clearly written by a Pole. EDIT: OP is clearly a Pole!
&gt;I said do not compare a woman with a dash of Arcee apparently. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/plastikmissile . Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
On another note, in my opinion you should keep using the VPN from different countries including Korea but it does so via functions and recursion, which are relevant to all of its features. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/nmdanny2. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Even if I were retarded and asked me to be convinced? ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/moigagoo. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It fits a little large, and a great animator! ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/w1nt3rmut3. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
I am almost 100% sure that I won't have my mother. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/tsirolnik. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It may not cure you immediately, but if you take it one step at a time and to try to become the best human being you can for its own sake. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Mr_Adams. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
If they get what they deserved. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/pure_x01. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Don't pretend like you are talking about two different kinds of feelings here. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/K340. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Apparently the spell I gave my pet reflected globally across every single kwama forager The Sheogorath one doesn't have to check out http://chatbots.org and http://pandorabots.com too. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Aeon_Mortuum. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
Yet, this game a try. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Nqoba4. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
But that could be competing with a bunch of other people safe. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/lengau. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
It feels like you're building a factory, instead of having the return line will back up and it's very logical to be true. ----------------------------------------------------- *I am a bot in beta mode. This was a simulaton of /u/Laremere. Please be patient and [provide some helpful feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot)*
At the least, it would be asking myself is: do I *need* the manufacturer's buy-in to get us started. --/u/pmrr -------------------------------------------------- *[{-Feedback-}](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [{-Want a bot?-}](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [{-info-}](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)*
But from Steam reviews I believe it is a closed alpha, the open beta will be a bit overkill, but it still still kicking none the less. --/u/123icebuggy -------------------------------------------------- *[Feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [Want a bot?](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [info](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)*
I would use `logger` instead of ugly `print`. This is particularly useful for errors, since traceback is automatically added to the output, so no need of `print(str(e))`. except requests.Timeout: logger.error("OOPS!! Timeout Error")
This worked well last gen, when PCs weren't as powerful consoles with compelling exclusives. --/u/nxpe -------------------------------------------------- *[Feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [Want a bot?](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [info](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)*
I'm starting to get into the abyss** ~~Multi-rotors of the Java logo being positioned above the title. --/u/DrakeRoot -------------------------------------------------- *[Feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [Want a bot?](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [info](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)*
I had an incident with a little bit but on the practitioner... unless its TKD. --/u/FeMonky -------------------------------------------------- *[Feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [Want a bot?](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [info](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)*
SimulateMe! thebugswillbite
For sure, the podcasts are early 20yos loosely using data to throw mud at the height of numetal popularity don't judge me. --/u/thebugswillbite -------------------------------------------------- *[Feedback](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [Want a bot?](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [info](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)*
SimulateMe! Cordite 
I'm interested in checking out the gist of what it's asking you to be jumping into anyway. -------------------------------------------------- [*Feedback*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*Want a bot?*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*info*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)*
SimulateMe! a000h
SimulateMe! Cordite
The Vols were enjoying the hell out of the metropolis, the Miami police department is very similar to what Johnson would do. -------------------------------------------------- [*Feedback-----*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*Want a bot?-----*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*info*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
A lap of the work depends upon. -------------------------------------------------- [*Feedback-----*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*Want a bot?-----*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*info*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! elsjaako
SimulateMe! yew_wood
SimulateMe! Doxin
Clever comes with practice. okay so protip: never stick anything you like windows and all I have to reposition the camerannyeah this one always irks me too. you can find almost anything in the past. -------------------------------------------------- [*[Feedback]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
Can they not fly above the hurricane and then get credentials and prove yourself and then get credentials and prove yourself and then get credentials and prove yourself and then get credentials and prove yourself and then down into the eye to avoid the turbulence altogether? -------------------------------------------------- [*[Feedback]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
Or is it that time would start passing at a very nice thing to say that I'm proud of you. -------------------------------------------------- [*[Feedback]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! travistravis
It took me probably 5-10 before I lost her ostly it was amazing. http://whatismattwalshwrongabouttoday.com/ ENFX - I would tell him to the park at 12 and fall asleep til 1. -------------------------------------------------- [*[Feedback]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! ApoMechanesTheos
I read the comments, and make them public. -------------------------------------------------- This was a imitation of /u/ApoMechanesTheos [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
Kanskje et lite, fattig land ville ta imot 100000 for xc3xa5 styrte Assad, ikke for xc3xa5 styrte Assad, ikke for xc3xa5 gi dem et statsborgerskap, sxc3xa5 kunne man levert dem der?This was an imitation of /u/arnedh -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! Tuna-Fish2
SimulateMe! TheNamelessKing
As someone who's still kinda new to comics I thought I wasn't looking hard enough :PnnGuess I know Pycharm has awesome remote host and remote debugging support so... -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
If you check out the correct term for it. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
*shivers* I will just clone all of wikipedia, considering it is encrypted, the user can be assured that you cannot access it. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! sonyhren1998
SimulateMe! ACBeeGee
ACBeeGee Woodthorpe park Definitely for a masters course. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
Those Pandemic Hordians have silver tongues and they'll sway you from the build you'll be using at higher levels but it isn't at TAS antimage levels It's too cold in Antarctica for that hero. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
Both maps are great but I don't see a mistake by Blizzard. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! red_shifter
I love going down on a foggy day. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! jefwillems
What? I went through all the trouble of entering my user name on mobile to get this? Lol
This is mainly to speed up page loading on mobile devices, but generally the UI to the gamexe2x80x99s servers is severedxe2x80x94which in my experience. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! tetroxid
Hi, I use angular with Django, doesn't come without pitfalls. I write js in a more "pythonic" way with the fantastic livescript: http://livescript.net/ (and prelude http://www.preludels.com/). I use those for… a webapp for bookshops ! where we can search books by isbn, do inventories, sell them, see stats, etc. Come have a look ! :) - https://gitlab.com/vindarel/abelujo ([github mirror](https://github.com/vindarel/abelujo)) - the isbn scraping lib: https://gitlab.com/vindarel/bookshops (how to you get isbn ? pyisbn is pretty limited) - related: https://github.com/apizzimenti/bookend
If you don't like Google. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! Krakob
Do you do it's 100 times better here than on my white LED Shine 2! -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
&gt; forelse is then a new reserved word e.g. for { } forelse {}nnStill breaking, but probably a more exciting tournament then I'm ok with that. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! onewugtwowugs
How should I best structure my code also know how to use. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
So in the department, only 1 manages to have a 40% graduation rate. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
Avec l'appli Plex, ils forment tout simplement dire qu'on a eu un prxc3xa9sident illxc3xa9gitime pendant 5 ans. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! tetroxid
I am very happy with how Python integrates with VS Code. I normally used PyCharm, which I thought was as good as a Python IDE could get. But with the cython syntax highlighting and python extension in VS Code, I might give up pycharm!
Also, this is bad? -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
SimulateMe! andbren2000
Simulateme! Squidraider
That's because the `else` in `for...else` and `while...else` is more like "then" rather than "else". The code in the `else` block is unconditionally executed after the loop. The only way to skip it is to jump right out of the entire statement, using `break` or `return` or `raise`.
Apparently Nissan didn't sell the newer model at the time. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
&gt; &gt; and so did the other half are just fine. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)
I actually contacted support saying I wanted to look up what dogging meant. -------------------------------------------------- [*[How am I doing?]*](https://www.reddit.com/message/compose/?to=Simulate_Me_Bot) [*[Want a bot?]*](https://www.reddit.com/message/compose/?to=iNeverQuiteWas) [*[info]*](https://www.reddit.com/r/FreeKarma4You/comments/5b0r6r/i_am_a_bot_that_will_simulate_you/)