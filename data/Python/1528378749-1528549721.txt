It is if the exercise is to learn JS and you use python.
Python was a mistake
Can you talk me through how you made it? 
I got my PhD in computational chemistry, and taught a pchem course. I tried to stress to students that learning a bit of programming would make their life easier, the few that listened thanked me. I didn't get many thanks. Our school had a methods course that taught a lot of statistical analysis and such, but not much programmatic approach to it. What a shame. Would love to read your thesis.
I built a stock evaluation program that runs through the Russel 2000 and SP 500 and returns stocks based on my criteria
This is so wrong I can't even argue. I'm not going to either install a user-specific Python installation or get some package from the web and pollute my system with it. Every other OS has a package manager, and that's a better thing.
I'm going to be brutal here. Unless you stumble across something incredible you're not going to find a job that you can 100% automate. You might find some jobs where you can automate parts (even large parts) but everything that is within a high school students ability to automate has most probably already been automated. I'm assuming you are somewhere between 14 and 18 years old (US high school age according to google). If you really absolutely need the extra income then the only advice I can give is to find some small job and be on the lookout for the mundane things that you could automate. Honestly it's doubtful you'l find anything (and in the age range it's extremely rare to find work that is not manual labor....). I'm sorry if this comment is negative but it's the cold hard truth from my experience.
What should `list({"a": 1, "b": 2})` be then?
I renew my noip free account
\*Hugs waifu pillow and cries silently\*
I made a modbot for one of the subs I mod. The bot checks for a comment by OP on each new post (there's a rule you need to add background info, but a lot of people forget, or if they are spammers don't ever supply it). My bot reminds them once the post is 30 minutes old if they haven't already added it, then it removes the post once it's 1 hour old and still has no comment and PMs OP saying why and how to get their post approved (by making the comment on their post). It then keeps an eye on the post for 10 days watching for OP to comment so it can put the post back. All of this is tracked in an SQLite database, with a daily report to a back end mod sub. It's been running for about 18 months now and usually performs about 10\-15 actions per day. It recently performed it's 6000th action. I wouldn't have the patience to do this by hand, and I wouldn't work 24 hours a day either.
The firewall rules at my job prevent me from streaming college radio shows, so I built a script that turns [Spinitron playlists](https://spinitron.com/wzbc/pl/148188/Postmodern-Baseball) into [Spotify playlists](https://imgur.com/a/B4q4A).
I am currently writing my dissertation in organic chemistry and i need to analyze mass spectra. I can use a program to access these and export the data into a text file. I use Python to parse the data, round the values, take only those above a certain threshold and write them to a csv, in which every second value has parentheses around the value. This needs to be done about 20-80 times for about 20-40 values each time. My colleagues need to do this by hand. Type out every value, round it and add parentheses. My neat little script is available on github and has only a few lines. I am quite satisfied with it :) 
I made a scraper for my bowling scores that are published each week. This sends me a notification or email. [https://github.com/parkourben99/ZoneBowlingStats](https://github.com/parkourben99/ZoneBowlingStats)
I wanted a list of lots baby names, but the website had them with a large font with one a few names per page. So I iterated of the page numbers, downloaded and extracted the tables with pandas, concatenated into a single series, then saved to a csv. Then I copied and pasted the text into a 2-column word processor document. I reduced dozens of pages to 4 in just two lines of code. I also had a lot of duplicate pictures and videos, but the metadata was different so I couldn't do a simple `fdupes` search. So I wrote a python script to compare the raw data of the files, excluding the metadata. Then I copied metadata from one duplicate to the other and deleted the redundant copies. I had a bunch of folders that had been copied to multiple places on multiple computers at multiple points in time and then backed up. I was trying to organize the backups so I could actually find stuff. So I used python to find identical deeply-nested folder trees above a certain size so I could eliminate all but one copy.
&gt; NOTE: especially in your position, in which you are working with highly intelligent PhD level people There's your problem. The highly intelligent PhD people tend to sometimes have poor social skills, and have probably taken this as an insult to their intelligence - "look at that guy who thinks he's better than me with his little program".
Dang! That's a really good question. I hadn't thought of it. I'd argue it's entirely okay for it to be returned as an array of two-tuples. It's a little like this: &gt;&gt;&gt; mytuple = (('one', 1), ('two', 2), ('three', 3), ('four', 4), ('five', 5)) &gt;&gt;&gt; print(list(mytuple)) [('one', 1), ('two', 2), ('three', 3), ('four', 4), ('five', 5)] If I'm iterating over a data structure, I really do expect to get all of its data by the time I'm done. If I'm converting it into another format, it should probably do the intuitive thing and return key, value pairs. If you ask for a list, it should probably return as a list of two-lists, because it should stay mutable; if you ask for a tuple, it should return as a tuple of two-tuples. 
Do you happen to have the code on github? This sounds awesome and I’d like to look at the source
Nice.
Well, I do iterate over keys very often. Also for loops doesn't know unpacking. What you are using is tuple assignment. You can do crazy stuff with that. for (idx, (key, value)) in enumerate(mydict.items()):
 class NewImprovedDict(dict): def __iter__(self): return self.items().__iter__() 
I mostly agree with OP, but it's almost impossible to change the behavior of such a fundamental part of python without breaking existing applications. The PEP would have to target Python 4.
Doki Doki 2, I see you.
A very newbie programmer. Mind if you share what would be the first step to learning something like this?
&gt; Would love to read your thesis. Haha, thanks, but I'm not sure you'll like it. I work with surfactants in specific aggregation shapes, and I mostly study how the solvent affects some properties, like the critical micellar concentration and viscosity. Besides, it will be written in Portuguese, as is almost the requirement here, so there will be a little language barrier :)
AFAIK threads never run faster than serial. Asyncio does run faster because a sleep call makes context to switch next job, but plain threads always share one core and do busy sleep when waiting data. 
I wrote a chatbot (Jabber) to interface with my domotica system (Domoticz). I also wrote a system to notify me over Jabber when certain actions are done (like a long copy process). Several other small things. I love python for that.
Could be anywhere in the world. But, my guess is USA.
I have it on gitlab, I made it public - https://gitlab.com/pranav151971/ysync-backend/ P.S. - Ins't the best quality code I have written so have mercy on me 
Could be anywhere in the world. But, my guess is USA.
Get active window name from operating system, get active website from browser plugins. That's how many time trackers like rescuetime works. A bit complicated but works well. 
Iterating over keys is useful, and giving it a single variable should still retain that behavior. It's the default case. As for for-loops not being aware, if they're already doing this (in pseudocode, to save us all time): for item in iterable: if len(item) == len(variables_provided): unpack_into(item, variables_provided) It could also do this (still in pseudocode): for item in iterable: if iterable is a dict and variables_provided == 2: variables_provided[0] = item variables_provided[1] = iterable[item] yield variables_provided
Yes, it's easy to solve, but like many things that are easy to solve, that easy solution really belongs in the standard library.
Two days ago I rigged an AWS Lambda function to send my wife Slack messages every hour to remind her of an important thing she needed to do. I should probably go throttle that now that that's over... ...but I am seriously considering combining that kind of thing with our Trello for housework management between the two of us to send out notfications and fill in recurring tasks.
This is why those stereotypical Japanese master artisans practice their whole life to perfect simplicity.
I may agree with the fact that items() would be better default, but there is no way such breaking change would be accepted today.
This is lit
My parser combinators library improvements and gnostic python code generator 
Wrote a simple `ssh-search` script that parses my `.ssh/config` file for entries by name, then prompts if I want to connect to the match (or asks which one I want to connect to if there are many). I have a lot of ssh servers I need to maintain at work so I tend to forget the exact name I gave them.
https://github.com/Aditya-Khadilkar/Face-tracking-with-Anime-characters
This is where you'd think Google would be a bit more clever. They already have a pretty decent streaming service, I happily switched from Spotify to Google Play over 2 years ago and love it. And people use Youtube for podcasts, and music, so what does Google do? They sure as hell don't help those people get on Google Play. No they launch a new music service for youtube. wtf?
Cheers!
delet this
This is my previous project I will post the new update on github soon
This comes at a good time. A site I was automating some stuff with (legally, ethically) has now put reCAPTCHA on it. What I don't understand is: If I log into the site manually, it does not give me a reCAPTCHA to solve. If I log in with Selenium, it does. How does the site know I am automating login? Also, when I do get the reCAPTCHA images, and answer them manually, it never ends--I just get page after page of finding street signs. I think once I got it to end and let me go to the site. What's causing that?
I've found sololearn to just focus on syntax rather than logic, ATBS is the best thing for a beginner.
Nice.
You got more out of that than nearly everyone else. Good job!
Really cool! I don’t watch a lot of anime, but I bet similar program with a star athlete instead would appeal to a lot of audiences
Never getting laid is the first step.
You pick up a copy of Al sweigerts - automate the boring stuff. Its available for free online in html format or you can purchase a hard copy through Amazon. https://automatetheboringstuff.com
Every day we stray further from the light of Guido
`pass` into the iris
Oh god what have you done
Lol where do I start. For one, my job requires me to log into 9 separate instances of automated dispensing machines, and check against some barcodes and medication references that are submitted by users. Then if they're not linked mark them for linking and send them to a specific directory. I know, it is stupid, but anyone who has ever worked with Pyxis ES can attest. Now the interface is basically JavaScript because they don't want to query the database in the back end (even though the JavaScript still queries it!). So we get 10-30 references to check against daily, which is upwards of 1-2 hours of work. I created a multithreaded script using selenium and pandas to log in as me and validate the references and create an Excel file with the results then save it to the directory location. It takes a fraction of the time. Now our manager has caught wind of it and thinks it can't be trusted because I'm not doing it physically -_- and she doesn't trust the computer to give the right values.
Yeah. I hit my first wall at classes and had to find youtube videos on it. My impression is ATBS only covers what you really need and not the niche complicated stuff? Yes i know classes are essential
Probably right :)
I'm doing a pull request to improve resource management and version compatibility on the [`AuTest`s](https://https://bitbucket.org/dragon512/reusable-gold-testing-system/src/master/) for [Apache Traffic Server](https://github.com/apache/trafficserver)
Calculate key performance indicators that you can output of your sap(work order management software). That way your not spending your time highlighting rows in excel. You have it compare how many work orders you have completed to how many that are not completed and then you find the percent completion.
I like it. I think this needs to be developed for mobile first.
I have an online class where weekly quizes are given with unlimited attempts. Instead of saving print screens, typing out everything in a master sheet or copy paating over and over I made a regex program that does it for me. Then I got into pyautogui and made a bot that can take the quiz and randomly select an answer, it does this over and over and then the other program can clean it all up. I don't use the second bot, it was just interesting enough to keep me hacking at it to get it to work. From this I learned how... inconsistent web pages are (or can be) and also ways to deter simple bots from being used on these pages. I have selenium and beautiful soup on my radar so I might dive deeper on these tasks before moving on.
Are you in GIS, I have the exact same Problem... I have to do a lot of maps every week, data could always be the same except 1 layer.... What I need to do is perform a clip and apply a categorized style to each layer. Then export the map to PDF, don't need a legend, just the pdf, without a background. I currently read Automate the boring stuff but havent picked up gis scripting...
Would've made more sense if they'd used Monika.
I made made a script in my bash profile which filters the ssh config file and adds all the hosts as tab-completion targets. 
It won't rewrite everything, _intentionally_. I'm not out to make your code look worse :) 
&gt; Also, you try explaining in a code review why you subclassed dict just to avoid writing eight characters. Oh, that would be easy. You can just say that the whole reason for using python was to avoid writing more characters in C, so I am just in line with this idea.
Flask if you want small, Django if you want big.
&gt; Member since June 4, 2018 I'm guessing you probably moved to Gitlab after Microsoft's acquisition of GitHub. And as it turns out, [the project's accessible on github](https://github.com/jtdaling/OpenIrrigation). Amazing work, btw :)
Intentional if you read the contents of the issue :) 
Django would probably be easier and faster for a school project.
https://github.com/asottile/future-fstrings You're welcome! 
Steam + Coding == NoLife
Nice (👁 ͜ʖ👁)
Only if you ask for that option, by default it won't break anything back to python2.7 -- the other options (f-strings, unicode literals) are purely opt in. 
A secure and fast cross platform file transfer system people could use to share files in any setting.
Yes, same here. It actually makes me happy to teach them some scripts, or even spend my free time writing scripts for them! So if someone really wants to learn, or even just wants me to do the automation for them, I'd happily work with them! There was one guy at that law firm, named Mike, who was awesome, and he actually told me, "I want you to give me as many of those fancy scripts of yours as you can! The less amount of work I have to do today the better!" So I worked closely with him to automate his stuff. I miss working with him... he and I worked together amazingly as a team and helped each other whenever we could with our own individual talents an together we accomplished great things when working together. 
Sign up happens through website or app? 
The replicator in Picard's Ready Room so that when he asked for "Earl Grey, hot", it would be ice-cold.
The website this scrapper uses is legal. Else kissmanga would have already been brought down.
I love python and open source for everyone. Every great invention is somehow always used for evil though. 
For key in mydict: Print(key,mydict[key]) Makes more sense to me. I think you may be a bit over reacting. honestly I would like to hear your opinions on JavaScript in the same situation 
Everything works for me on Firefox on android P beta 3 except the download links.
/r/neckbeardthings/
That is totally not a valid reason to keep it.
Monika's blushing Sprite was not available so I used best girl instead XD
[removed]
[Python Crash Course](https://www.amazon.com/Python-Crash-Course-Hands-Project-Based/dp/1593276036/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1528383713&amp;sr=1-1)
Care to share this?
Actually I sell the list quarterly
Yes, I made a home automation system mostly in Python. I'm currently enjoying completely automatic fan controls. It also wakes me up in the morning, and controls my lights.
Previously working tkinter programs will no longer show UI elements like the buttons labels and images 
A NLP library that doesn't make me sad.
*tsktsk* window.navigator.webdriver 
do you work in facebook apis?
Ah, thanks!
Wow this comment sure had a better response than I had expected. Tell you what i'll work on it this weekend to sort out the issues on other browsers, maybe use a javascript media player library. I'll try to add an option where you guys can add new playlists as well that you might wanna listen too. I'll have an update next week :)
Online and not a book but how about [learnxinyminutes.com] (https://learnxinyminutes.com/docs/python3/)
Next to zero documentation, no visible way to manage native extensions, not even a way to assess OS features... I don't even want to continue. This is not a serious project. TOML is not a good configuration format, but the PEP didn't even mention any decent options for configuration format to begin with. This all is so terribly amateurish and doomed from the get go, so why not? Be the one to contribute to another quick patch, that will stick with us for decades ;)
I'm not sure about efficiencies in python 3, but in python 2 there were reasons: https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops
Ah, I see you are man of culture as well.
A personal journaling system (almost a diary) that works like access, but keeps events or records in varying data stores. It would act as if the data was completely local, but could actually be sourced from a PHR, Outlook, or remote flat file.
Are you talking about PEP 518, flit, or both? 
Are you talking about setting different tasks to run on different threads within the code?
It's hard to know for sure, but generally, I would not expect I/O to be faster with PyPy than with CPython. And web frameworks are mostly I/O.
&gt; install a user-specific Python installation or get some package from the web and pollute my system with it. &gt; I'm not going to either install a user-specific Python installation or get some package from the web and pollute my system with it. You're not going to download Python 3.6 (or 3.7 in a month) and use it? If you're using Redhat 7, you're stuck using Python 2.7.8 as the system Python (Redhat 8 is coming soon and will switch to Python 3), but even regarding Python 2.7, that's ancient. That's ~5 years old. What's wrong with user packages? Numpy, scipy, matplotlib, vtk, django, tornado, etc. are amazing. &gt; Every other OS has a package manager, and that's a better thing. Yes, having a package manager is better. I don't disagree with that. Having Python be tied to your machine and then upgrading it is a terrible idea. Install a separate Python and you won't have an issue. Use a package manager to do it if you want, but that's kind of irrelevant.
A Python, but without GIL and with Go-style approach to concurrency.
&gt;you should make use of async if you suspect you'll be IO bound. The OS should be stripped down linux with as much realtime stuff enabled as possible (doubt this will actually make a real difference though) and use a kernel not userspace firewall. Would you mind expanding on some of this or do you know of any tutorials that might be helpful? I've never worked with Linux before, but I'm sure I can do that no problem. I'm not familiar with async, kernels, or any of those options within Linux. Thanks in advance.
Top comment from previous thread: &gt; "Your scientists were so preoccupied with whether or not they could that they didn't stop to think if they should."
No, i just pointed out the [Argumentum ad populum](https://en.wikipedia.org/wiki/Argumentum_ad_populum)
Yes, hence my question.
I wrote a script that rips anime off of a streaming site, separately gets the subtitles, then converts the video to MKV, changes the subtitle font to my preference, then merges it into the MKV. It can do videos singularly, in a list, or an entire series in batch.
Oh, what's wrong with this girl? She scared me.
God dammit I thought we discussed this
more problems: mydick = {(1, 2): 'onetwo', (3, 4): 'threefour', (5,6): 'five six'} for k, v in mydick: print(f'{k} {v}')
&gt; You're not going to download Python 3.6 (or 3.7 in a month) and use it? Luckily, that's already available in the Ubuntu repos, but I've had big problems with e.g. Raspbian, which doesn't have it yet. Deploying scripts there is a nightmare because you basically have to install a Python binary, and if it messes with your PATH or something, good luck finding the problem three months later when something breaks randomly. &gt; What's wrong with user packages? Numpy, scipy, matplotlib, vtk, django, tornado, etc. are amazing. User *packages*, nothing. User *interpreters* are too much hassle. I've had problems every time I user-installed a different Python version, and I won't do it again. &gt; Use a package manager to do it if you want, but that's kind of irrelevant. Indeed, if it's in the package manager I don't have a problem installing it. My issue is that there is *no good reason* to do this. You've been writing code without f-strings all your life, you can hold out a bit longer for the sake of your users. If your app will only run on your system, go nuts, use 3.8 from git if you want, but it will be a hassle for your users if they don't have the version you require. Basically, if you make me install a new version of Python just to use your script, your script isn't getting used.
In a benchmark like that, there just isn’t much Python code to JIT. Most the code being run is Python calling out to C code.
This has been my side project for some time. I've removed some proprietary bits and cleaned it up a bit. It's not finished by any standards, but it kind of works. If you are using Google's version of Protobuf and have some free time, could you give this one a try? I'd be particularly interested in hearing about speed (memory isn't important at this point as this should be rewritten in many cases). Also, of course, if you run into errors, that's something I'd like to know about. Any general code-related criticism / advise is welcome too.
1. `flit` has almost zero documentation and native extensions. 2. PEP is the one which doesn't mention any reasonably good configuration formats. 3. `Pipfile` is a joke. HTH
Everyday we stray further from gods light. 
Same, but we're in the progress of moving to Artifactory. For Sonatype Nexus, we developped a tool to upload Python packages, with dependencies resolution &amp; upload : https://github.com/voyages-sncf-technologies/nexus_uploader
I appreciate your stance, but I must ask: have you had any experience or luck with using chroot or virtualenv with your users? Being on 3.6 gives you quite a bit more than f\-strings, and it appears that your main gripe is a lack of consistency with setup and not so much needing backwards\-compatible code. Case in point, [https://github.com/asottile/future\-fstrings](https://github.com/asottile/future-fstrings) covers the basic consideration of running the code still on 2.7\&lt;=3.x.
A lot of people are having fun at your expense, but this is great stuff. I assume the video is tracking YOUR eyes, not the camera?
Could be anywhere in the world. But, my guess is USA.
It's tracking my face I have just held the camera below my face
stop
Could be anywhere in the world. But, my guess is USA (GA, FL, AL, TN, KT,TX) 
Sorry, I made it public now!
Yes 100&amp;#37; right! And now it is public, sorry for that!
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) and found these results which might be useful: 1. [Creating Python one-liner with for loops](https://stackoverflow.com/questions/32684185/creating-python-one-liner-with-for-loops) 2. [Optimized for loop python](https://stackoverflow.com/questions/32855983/optimized-for-loop-python) 3. [Python plotting data generated from for loop inside for loop](https://stackoverflow.com/questions/26743852/python-plotting-data-generated-from-for-loop-inside-for-loop) Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
The web view in iPhone is always safari, doesn't matter u open it from Reddit or not.
No, I moved the project from Github and forgot to make it public accessible. 
I'm just learning the basics right now, just made my first odd and even program. Even though it's very simple, I was excited to see my first program running.
&gt; preempted like threads can What do you mean by this?
Pypy is slow at start, and takes a lot of time to figure out where to apply its optimizations. By the time it will start doing anything, the benchmark is over. Also there isn't that much to optimize in such simple benchmarks. This is very poor usecase for Pypy.
Is it possible to learn this power?
this is seriously impressive but why is it necessary, the college is acting like a nanny
You can do it fairly easily with open CV. Take your webcam feed, use the opencv libs to detect the face in it and see what percentage of the frame is covered by a face.
This sounds like a great start. Do you have any other similar student requirement (sorry I didn't go to college in US, so not much of an idea about US colleges), I was hoping , may be we can make domain specific tools/utilities. In this case the domain is college student.
Grace Academy?
Looks like I have a head start
That's cheating :-) /s
I was spooked at 0:31
More proof the world is coming to an end.
Well a video through Derreck Banas is a good for when you simply just need to see how the syntax works. Your can also look at the notes of his code if you think he goes to slow (he is normally really efficient and explains more in the video). 
You communicate with your wife on slack ? Is she in IT too ? Nothing wrong about it. Just that, I've never seen anyone using slack for personal communication.
Data science from scratch \- Joel Grus Deep Learning with Python \- François Chollet Theorical bible : The Elements of Statistical Learning \- Jerome H. Friedman, Robert Tibshirani and Trevor Hastie you can read here : [https://web.stanford.edu/\~hastie/Papers/ESLII.pdf](https://web.stanford.edu/~hastie/Papers/ESLII.pdf)
Do you have a repo?
Apparently they do warm runs.
A lot of Indian ebgg colleges are like this. Though, the "calling parents" didn't happen in later semesters but they do have alternative punishments for defaulters and in even semesters they can detain you and prevent you from giving end sem exams if your attendance is &lt;75%
&gt; User interpreters are too much hassle. I'm not suggesting you use PyPy. Outside of that, there's not really any user interpreters. Maybe I'm not following what you mean by that. &gt; Basically, if you make me install a new version of Python just to use your script, your script isn't getting used. About 1/2 of people still use Python 2.7. I still support it with my open source package, but for the rest of the people, they just pick the latest Python and run with it. My company solves the dependency problem on Linux the same way we solve it on Windows, which is bundle everything up into an exe using pyInstaller. Our users don't have root access and aren't going to make a virtualenv to run our code.
What exactly do you have in mind?
Cache is not retained after your python script has stopped execution. So, unless you make a service type of program that is 'always' on this is not applicable. Also, as mentioned, caching makes no sense for reading a file, because as soon as you read it (eg in a big string or list of strings) it is already available in your memory, so you can access it. 
Thanks yt
i was born just in time for the golden age of technology. great work brother
That is not a good tutorial at all as all it does is show you the script an barely explains it.
 df.isin(['instaceA']) Will return a boolean mask for your array. You can combine with result.any() to get a total answer. Is this what you want? 
I never got round to starting it. Or any python learning -_- 
&gt; have you had any experience or luck with using chroot or virtualenv with your users? Virtualenvs aren't used for installing new Python versions, and I haven't tried chroots, because I always keep backwards compatibility for my users. In the times I've broken it, I've heard enough people complain to know that it would be a serious problem for a large proportion of the userbase if compatibility was broken. &gt; Being on 3.6 gives you quite a bit more than f-strings, and it appears that your main gripe is a lack of consistency with setup and not so much needing backwards-compatible code. If you absolutely need a 3.6 feature, then fine, there isn't much that can be done. If you're upgrading already-working code just to use the latest and greatest, though, that's what I have an issue with. The problematic setup is just one of the issues regarding removal of BC. Generally, I view BC as too important to break just because.
Kareoke! 
If you're Windows, you can look at how to trigger your script using Task Scheduler. If you're Linux, [crontab] (https://www.howtogeek.com/101288/how-to-schedule-tasks-on-linux-an-introduction-to-crontab-files/) or [atd] (https://linuxconfig.org/how-to-schedule-tasks-using-at-command-on-linux)
Artificial General Intelligence seems to be the only answer. Kinda like a wish for infinite wishes if it can truly be done in its entire scope.
I keep it private because I don’t want the site it’s made for running after me. But all it really does is utilizes mkvmerge, YouTube-dl, and handbrake CLI. I can PM the code if you’d like.
Oh my god this is amazing lmfao. So many good pranks are gonna come out of this
You see my problem is i've done like 4 different things and not finished them because i'm busy and cba to get too into the complicated stuff. Of course i've learned a lot but haven't gotten much practice or developed any skills, i still have to look nearly everything up once i get the motivation to start again
Oh this is just the beginning :) I am planning on making a horror game with this newly found power
Thank you!
Yeah, you're right, my bad:)
&gt; Outside of that, there's not really any user interpreters I mean interpreters installed user-wide, rather than system-wide. &gt; It's crazy to make a user install dependencies unless they're running a script. I agree, but, as a developer, I rely on libraries. People whose libraries are 3.6-only are a major source of hassle because they force me to not use them unless I also break BC for my users.
You mean /r/justneckbeardthings 
Yeah but then he has to go open them, isn't that just as fast as googling the lyrics? Would make sense if he has them open once they've found them but he didn't say that
Safe AGI you mean.. otherwise all your wishes go down the drain! 
I meant that celery can use SQS/RMQ/Redis as message broker. I’ve used celery (running on auto-scaled EC2 instances, with SQS queue length the trigger for scaling) with SQS successfully in production; we were running &gt;5M celery tasks per day.
I dunno man I was just trying to be funny. 
The colors, they won't stop. 
I am just curious...what is a reasonably good configuration format?
What's stopping a safe AGI from creating a neutral/bad AGI? AGI is akin to a human, and that means it has the capacity to create other AGIs.
Yikes ...
[Flit's documentation](http://flit.readthedocs.io/en/latest/) includes an introduction, a listing of all the options you can set in the config file, and a reference for the command line interface. Rather than waving around a vague 'almost zero', what specifically do you think it *should* have?
One step closer to genetically engineered waifus
Packages set up with flit don't need twine, but you may still want twine installed if you're building packages in other ways - e.g. for a package with a C extension, which flit can't help with. `flit install` is like `pip install .` - it installs a package from a local directory. You still need pip to install packages from PyPI. Flit also isn't the only modern option - there are tools like poetry and pipenv which are also aiming to make this kind of thing easier.
Thank you man, I really appreciate it!
Thanks bro!
Sounds awesome man!
that's a polite way to spin Apple's walled garden approach
i think it's the demographic targets of every media company since the 50's. Target 12-18 year olds and hope they stick around when they actually have money to spend. 
Can you please share?
teaching em young to both follow metrics and observe how useless metrics can be when measuring correlation instead of causation. gg
+1. While Flask is tempting to use, Django Admin is a huge help if for something like a school project.
What?
*laughs in weebonics*
Have you ever Clifford the big red stab wound
Feedspot is a spam site trying to siphon views from these blogs by forcing you through their interface and tracking your usage. Don't do this.
Running your program on PyPy and CPython may be a "drop in" replacement in most cases, but if you're really trying to optimize for performance there are things you can do to speed up PyPy that just don't matter in CPython. For example you can add additional `if` blocks to check type or state that will get JIT'd in PyPy but remain static in CPython. I'm willing to bet they ran the same Python code for both runtimes without optimizing for each.
&gt; What's stopping a safe AGI from creating a neutral/bad AGI? The same fear of an even powerful, bad/neutral AGI dominating/destroying humans would hopefully worry a good AGI as well. 
ie, your school enforces a rule: 1. Students must attend class atleast 80% of the time Your school has observed a correlation between student attendence and good grades, and believes that students who miss class are causing bad grades to happen. But the reality, to many, is that it's not a causation, but a correlation. People who are either: 1. Having issues outside of class will do poorly on class and miss classes. 2. People who don't understand the material will skip classes 3. As people's grades go down, their class attendance will flag. While going to class certainly has some causation on grades, rules like these don't necessarily correlate to higher grades. The same thing happens in software oriented development, such as metrics companies in the old day would measure as Lines of Code and enforce various 'benefits' or 'negatives' to not hitting the target. So your program teaches people both the benefits of metrics and how useless they may actually be for the goal.
Dunno if my book will satisfy you but you can check it out here: www python101.org
If I could program *anything* then honestly I’d want to program a thing that can transfer me Scrooge mcduck level money without fear of getting caught. 
Sure! Im at governors school right now, but ill share it as soon as i can.
You are correct. Even with 80% attendance in the first sem I failed 2 subjects. But personally I blame it on myself because I didn't self study, which is again caused by spending the whole day at college.
Thread preemption is when the cpu or interpreter has decided that a particular thread had run long enough, interrupts it with a signal, packs away its memory and let's someone drive for a while. This can happen at the cpu level with coroutines but not at the interpreter level. 
Well you see, the very meaning of an AGI is that its learning and it changes like a human. This means that while a human programmer might ingrain a piece of code that the AGI can never violate, there's nothing stopping the AGI from 1. changing the code, 2. interpreting the variables/conditions given differently. This is very likely possible because an AGI would have to come to terms with what a "human" is and what does "humanity" deem as good, which are both very abstract concepts that change over time. Which also means the AGI has to change its definitions over time, which by extension means that an AGI can never truly be "good" or "bad" since good and bad are concepts that vary from person to person over time.
i don't know how to pare my GUI to my location for this to work i don't even know were to start
Trying to learn some python, so decided to try and make an API for a website for Formula1 stats. Check it out if you want: https://github.com/OlofNymanson/F1_API
The future is now.
For learning PyQt5, this video series helped me a lot: https://www.youtube.com/playlist?list=PL1FgJUcJJ03uwFW8ys2ov2dffKs3ieGYk
slowly but surely my waifu will be real
Sign up happens through the website. My script uses selenium to “click” the appropriate buttons. 
I created a library to help with this long ago. https://github.com/kootenpv/yagmail Please don't make your own implementations with MIME objects (if you don't know what that means, I sincerely hope it can stay that way).
The weeb inside me approves this.
👁️👄👁️
Can someone make her nude?
repo?
TIL thanks!
I don't see Natsuki...
This implementation has been working for me for years with 0 issues. Mind sharing why I should use a library for scripts that aren’t necessarily complex? I pulled the use of MIME objects straight from Python docs. 
Sorry about that - I commented the script but mind sharing which parts you’re looking to have explained? Python docs has great detail on this as well, I was focused more here on linking to gmail as it took me awhile to find that myself (though sounds like a good library may exist per other comments). 
I would recommend using [Arcade](http://arcade.academy/), it is really user friendly and the docs are well written and easy to follow along with. 
Interested to know what happens if there are two people infront of the screen.
Currently learning Django. I just finished the basic tutorial where I made a polling web app. Yesterday I made a basic blogging website that orders posts by date published. I am probably going to eventually learn React for my front end later this month.
Perfect girl for this.
By the way, Seaborn has a function to access colors by their names defined in an XKCD poll.
GASP!!! But pipenv! /s
B/c pipenv is the only implementation of the standard and pipenv is far from being a professional tool at this point.
Your proposal would break the symmetry between membership testing and iteration. In lists we have # memership if item in mylist: whatever() # iteration for item in mylist: whatever() But dictionaries would have # membership if key in mydict: whatever() # iteration for key, value in mydict: whatever() So as you can see what is to the left of `in` no longer the same between membership and iteration. This would make dictionaries different than sets, tuples, and lists. 
If you’re on a Mac, you can make an “application” in Automator that contains a script with all the commands you would need to then run your script. You would then save it and add it to your startup items. (Settings &gt; Users and accounts &gt; login items)
there are a lot of things about the language a perl coder can easily dislike. the symbol table, the way anonymous subs arent, and the lack of context. in perl, this could be handled with wantarray() items() doesnt bother me as zip() does.
This isn't exactly daily life but I used Python to draw names for Christmas gifts among my siblings. There are a lot of us and it was annoying trying to make sure people didn't end up with their spouses or the same person every year. 
Ah yes... I think you're right. I can certainly see how some might look at it that way! (Especially if the person doing the scripting is really really excited and overly eager about their scripts!) Well... I guess it is best in the end, to just keep it on the down low, enjoy the benefits of being able to work faster than other colleagues, and if someone asks about it, then gladly show them the ropes or do some scripting for them if they want it. 
I disagree. I find it intuitive that when you are talking about the members of a dict, you are talking about the keys and you are "agnostic" to values. Values can be anything, including nothing, functions, objects without str representation, other dicts, etc I like it the way it is, but could be because I have got used to it. 
The moment you want to do anything beyond what works for you now, you're going to have to reimplement a lot of the functionality again. You cannot deal with attachments, html, keeping passwords safe. It doesn't have a nice abstraction. Everything is just in global scope. Like please, this is trash.
The essential Python reference. Great book and fluff. 
Location: Windsor, Vermont (primarily on\-site) Position: Senior Software Developer [Mascoma Bank](https://www.mascomabank.com/about-us/) We're looking to expand our small internal development team at Mascoma Bank. We currently build software to support business functions within the bank, primarily in Python and Scala. Let me know if you have any questions, or head to [mascomabank.com/careers](https://mascomabank.com/careers) to apply. Thanks for checking it out! Essential Functions: 1. Collaborate with the rest of the engineering team to design and produce software that meets Mascoma Bank’s needs with regard to functionality, safety, and performance. 2. Participate in team planning sessions concerning creation or modification of software. 3. Write code (independently or with team members) that is clean, robust, and maintainable. 4. Write automated tests to ensure continued proper functioning of software. 5. Log work, decisions, and other relevant information in team tracking software. 6. Participate in code review sessions. Give and receive feedback and suggestions in a respectful and team\-oriented manner. Requirements: * Experience consistent with 5\+ years of professional software development * Strong understanding of software development concepts and practices * Strong understanding of how design decisions may impact performance, security, scalability, and maintainability of an application * Strong understanding of networking concepts * Expert familiarity with Python and/or Scala * Experience with front\-end client application development * Experience with REST API development * Experience writing automated tests * Ability to take general functionality requirements and use experience, best practices, and clarifying questions to implement them effectively in code * Passion for learning new things and applying them to create a better product As a Certified B Corporation, our vision is to be a force for positive change for our customers, communities, and employees. Mascoma Bank is an Affirmative Action and Equal Opportunity Employer, M/F/D/V
Forgive me, I'm a little slow... what's the benefit of using this vs. using the normal protobuf compiler?
Which athlete do you want?
Her eyes rapidly switch between two direction. It doesn't really look good. So I advise whoever downloads should be alone infront of the webcam
Nude sprites aren't available. Maybe we should ask shädman for help
Hey, this ain't evil :) 
&gt; there's nothing stopping the AGI from 1. changing the code You can, if you have some constraints you could write a piece of code and discover a mathematical function oh how this code will never violate that constraint. This is "possible", but yes, certainly extremely difficult. There's good research on safe AI. Some really good ideas, although anything implemented/proved is very basic. &gt; interpreting the variables/conditions given differently. Yes, an AGI will have to adopt with the changing and abstract definitions of good and bad. If an average human can align with humanity's interests, I don't see how an AGI can't.
Not arguing - was genuinely curious - no need to be so rude. Everyone does not always know the ‘optimal’ implementation of everything, believe it or not, which is why this subreddit should be a safe place to ask questions and learn from others. 
The future is now!
you can do it un rust /s 
You cannot expect to give a human free will and ensure that human will always do the "good" thing. What more can you say for an AGI? Sure the AGI will not have constraints such as needs or aging, but the AGI also will not have constraints such as familial ties, legacy planning and love.
Pretty close
Which service/site do you use for this, a few of the sites I've used were pretty finnicky and very quick to ipban/timeout if i looked at more than like 10 pages a minute
No, claiming fallacy makes no sense here because this IS a valid reason not to change it. People flipped shit when py3 broke stuff and now we're T-minus two years to EoL with half the userbase not having migrated. Introducing such a fundamentally-breaking change now would just kill the ecosystem again
That's so cute and sexy at the same time :)
I can tell what the difference is. The reason is kind of subjective. The difference: `protoc` generates Python source code (files), which then is used to parse messages. My version generates Python run-time objects from Protobuf source (no Python source files are generated). I suspect Google's approach to work slowly (too much Python code needs to run before it gets to reading the data), but I didn't test it yet. Another (possible) benefit is that my code is about order of magnitude smaller than Google's Protobuf implementation (just a dozen of files, vs couple hundreds files).
&gt; Python was a ~~mistake~~ triumph There, fixed it for ya.
How it should be
It's a toy open source library that you shouldn't be using if it requires Python 3.6 or whatever. For an internal library, I'm far more lenient (unless you're on Python 2.7 in which case you should support Python 3.5/3.6 as well). If the open source library is a tool to help users upgrade vs. a something the user imports, by all means. I'm totally fine with pyupgrade as that's kind of the point.
`Pipfile` doesn't solve any real problems. You still need `setup.py`, where you do all the real work. `Pipfile` just sort of gets in the way with its bizarre vendoring and overrides of `pip`, `requests`, TLS-related stuff and so on, and, finally it outsources the only real thing it's supposed to do to `pip` and `virtualenv`. So, I kind of fail to see the point of this enterprise: seems like a lot of busy work with zero added value.
You should've given her the eyes after getting too close... You know which one I'm talking about. 
Well, like I wrote earlier: native extensions. A monkey with half a brain can package Python source code, you really don't need options and command line tools for that. Native extensions is where it gets interesting. But searches for "native" and "extension" through Flit's documentation yield nothing. Another interesting aspect of packaging Python code is the mess of v2 vs v3 vs `six` and friends, but Flit ignores this. So, again, it sort of solves the extremely easy problem, that doesn't need solving, but the hard stuff is on you. :/
God fucking dammit.
FBI, open up!
Anything NBA would be a hit right now. LeBron James in the arms out stance after JR Smith tanked the play in game 1? [Memes for days.](http://thecomeback.com/nba/twitter-lebron-jr-smith-memes.html) 
Rural Alabama. 
I would like to see your Tkinter version!
i feel like /r/anime would like this
I'm working on my dissertation in political science, and so I spend a lot of time working with LaTeX. Statistical software tends to have built-in functions to generate LaTeX tables from models, but the format is not always so good. At the very least you have change the variable names from the name in the dataset to a more readable form. So I use Python to edit those tables to make them look nicer.
This would be a fantastic prank for the bored NSA guy to do to everyone! 
So why publish a blog post, with the intention that other people may learn from it, if you don't really know what you're doing?
Sahi maje le rha h launde. Good work. 
Oooh living with a woman, nice! 
Does zip() bother you?
/r/UnexpectedDDLC
[spacy](https://spacy.io/)?
Yuri is still the best girl, btw.
I'm sorry, but I will *not* switch off my ad blocker.
Yeah that's what I figured too. Spotify has a giant brand that most demographics know while Google Play is relatively unknown still. At least that is the case here in Sweden. What could make Google Play more known are speaker systems that allow casting like Sonos.
That's really nice and I will definitely try it at some point. I'm doing research with neural nets and other algorithms and know this problem. Especially, since I'm using Jupyter most of the time. I guess your script can't help me in this case to keep track of my experiments and outputs. And to add another point, I found it difficult, especially with keras, to set a seed which will make sure that the exact same weights will be reproduced during the training of an NN. It's possible, but not nice. I like scikit-learn more in this regard, because it let's you set a seed for each function call that internally uses an RNG.
Just got an internship at a company in Portland Maine. Because I'm an intern I got stuck with a bunch of annoying stuff to work on. Part of my job is taking large pdfs of schematics and cutting them up and adding coversheets and all that jazz. I'm basically making a bunch of permit applications. Soooo being the python fanatic I am, I wrote a script that pretty much automated my job. The script is literally less than 200 lines and it makes my life 200 times better. I'm working to make it full put more kinds of permits.
Awesome dude! I'm really fucking impressed with what you did, keep it going! Please don't care much for the fun and trolling comments.
Nah, it's slightly more inclusive the first way
Oh, they will be.
try ```from __future__ import *``` on the first line and see if the module will run, and if it does, see if your project will accept future statements
This code is surprisingly concise. I don’t think that I’ve ever seen a python file with a space in the name though
I lose sleep over it. ;) Seriously though, I'd have to use python solid for 6 months before I could legitimately complain. But it is a bit annoying for an old Perl coder to work in python. The philosophies are much different! 
Sure thing weeb.
So this essentially allows python 3 code to run in python 2?
While Python is acceptable for game making you may find that you get more out of a full engine. Godot while still fairly young is free and has a python like scripting language.
very sketchy workaround but doesn’t hurt to try
I stand by my words, this is evil of the highest order
Doesn't look evil to me
Algo trading and making a python bot
Just go into the library and glue some books together.
That would be nice! I was thinking about doing the same thing and then I saw your comment
Holy shit thats creepy
I have to agree with several other comments it would be a challenge to do100&amp;#37; automation. So, my suggestion is to look for gigs that are about data, lists, spread sheets, data files etc. Usually, you can map out and automate data tasks such as consolidating data from several spread sheets, combining data files, appending lists etc. There are some great python libraries for working with spread sheets but spread sheet automation can be more of a challenge than working with data files and lists. But you never know, I've seen businesses have thousands of spread sheets wanting them consolidated into a data file that some guy on the IT team wants to stuff into a database. That may be a reach for a high\-school student why not give it a try.
Behold! The next evolution of H-Games!
Assembling and publishing MATLAB reports from multiple source files. https://github.com/ahoetker/matlabreport
After some research, I have found that this type of problem is called a recursive definition. However, I have not yet found an adequate solution.
After some research, I have found that this type of problem is called a recursive definition. However, I have not yet found an adequate solution.
Hehehehe
Has science gone to far?
I'm old\-ish. It's not exactly either of our first go round, but yeah, living with her has be pretty nice for many years. The problem was that for a long period of time I was half moved in with her, and most of my life was on my desktop computer, hence the need to stay on top of my IP to ssh into my home computer.
Bad bot 
Born too late to explore earth... born too early to explore the stars... Born just in time to have an a n i m e f a c e t r a c k i n g w a i f u p o w e r e d b y p y t h o n
hay do you know how to pair GPS data to a gui
Your suggestion at the end is really the only viable solution I see. You can’t have a shared recurse definition like that in python. If they really do rely on each other then you’ll probably want to define them all first without connections and hook it up afterwards. 
That is exactly what a weeb would say.
Thank you for your response! I just realized a clean and simple solution to the problem is to create a list of all the exits within the game, and then search through that list for all the exits that correspond with the active room that the player is in. This would remove the exit dependency from each of the rooms, but not the room dependency from each of the exits; so the list of exits would have to be defined after all of the rooms. Most importantly, all of the exits wouldn't have to be contained within separate variables, keeping the entire game script short and clean.
Well, it's a beta, so try reporting it to apple.
This doesn't work, does it? with open("name_of_my_doc.pdf", "rb") as infile: input1 = PdfFileReader(infile) print "document1.pdf has %d pages." % input1.getNumPages() By the way, if you don't have a particular reason not to be using python3, I'd be using python3.
If you are about to ask a question, please consider r/learnpython 
Assuming you can also code the arduino, you can use any serial communication library, such as pyserial, to send commands and receive data from the arduino. I think django and react is a bit of an overkill for such a project, but if you fill more comfortable doing it that way, it should work fine. I had a very similar project when I was at university, controlling a heating station through a PID loop with an arduino and graphing the current status and controlling the setpoint using Processing and it worked pretty well . I didn't have any web development experience at that time but it was pretty easy to do, and it was a few years ago so I can imagine there are new tools that make it even easier.
You'll probably get better responses in /r/Arduino. Assuming you want a GUI program on your computer controlling the code on an arduino via USB cable, you will probably use C/C++ on the arduino, python and any GUI framework on the computer and use [pyserial](https://pypi.org/project/pyserial/) to communicate with the arduino,
You might want to look at data oriented design too. I saw a talk about a game company using it.
Was it a game engine or producer? The Unity game engine has a lot of data-oriented design with ScriptableObjects, etc.
Yes, I am in GIS, using arcpy and other libraries to automate the map making, also built several customised toolbars to make my work easier:) 
Matthew 7:7: Ask, and it shall be given you. Thank you! I'll have a look into integrating with my current projects. 
Nice ( ͡° ͜ʖ ͡°)
I can already hear those reeeeeeee
Im fairly new to the programming scene, can you explain all this sudden movement from GitHub to GitLab? Whats the difference and why the sudden change?
These a both pretty normal responses to this kinda thing. People are almost universally happier with their work if they feel it has a purpose and is and valuable. If you write a program that completely trivializes the job, in their mind you are essentially trivializing their time and effort as well, and this rarely feels good to people.
Ok, stupid question, how do I close it? I mean, I love yuri, but I don't want her staring at me while I sleep!
Github was just purchased by Microsoft, which some people don't like or they are just being cautious.
I think you don't understand what you're talking about. For loops just iterate... that's all they do. The iterator gives the for look something to iterate over. That's all. 
Oh ok, guess im kind of r/outoftheloop - I still dont see why this is a bag thing. Wouldnt being purchased by a big company like Microsoft give it more exposure? What exactly are the downsides / what could Microsoft do to it?
I wrote a script that automates checking the lottery numbers against my ticket number.
Damn, I can't find it anymore. It was a game engine developer I think. Anyways, the idea would be that all your rooms are in a configuration file. Then your program can look at that and instantiate the object from that data. That way you don't have instances already setup for the entire game, just what you need on demand.
Here's a quick demo of what I'm thinking about. [https://repl.it/repls/UnequaledDecentRedundantcode](https://repl.it/repls/UnequaledDecentRedundantcode)
COOOOOOOOOOOOOOOL
Triple quotes introduce a multi-line string constant. Everything until the next triple quote is included in the string, even if it spams multiple lines. (It's not just for documentation strings.)
Should be awesome to have it as screensaver
The code runs fine for me on a PDF file. Maybe there's an error in your particular PDF file. If you have Ghostscript you could try fixing it with a command like this: gs -o repaired.pdf -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress corrupted.pdf
Exactly my point. Will have to think some other options to reduce the number of hits on the CSV. It at all possible. Thanks everyone. 
Monika is best girl because she did nothing wrong.
When I first opened this the video end time read Infinity:Nan
Now make the freaky eyed version.
Hideous
Everything in Python is an object, there are no 'primitives' in the same sense as in Java or C or what have you. So even the simplest of objects has a little bit of overhead.
A weapon to surpass metal gear
First off, it doesn't matter at all because only two boolean objects should ever exist at any given time -- they are singletons. The actual thing that will take up any significant space is just the size of the pointer to the PyObject, and I don't think that's measured by getsizeof. PyObjects store more information than just the data though. Off the top of my head, I think there is also a reference counter (maybe not really necessary for bool, but again it doesn't really matter) and pointer to the type structure that defines what you can do with bools. It would be uncommon for bools to be implemented so that they actually only take up a single bit even in other languages, because generally allocating individual bits isn't a thing that one does. You would need to manage the memory yourself I think.
I'm developing diskover for visualizing and managing storage servers, check it out :) If you want to test out docker images, I'm working with [u/exonintrendo](https://www.reddit.com/user/exonintrendo/) over at [linuxserver.io](https://linuxserver.io/). Message him to get access.
It looks like what I am trying to achieve, but I'll have to do a bit more research and tinkering with it; hopefully it won't be too difficult. Thank you for your help, I really appreciate it!
Share the code, my god.
Yeah about that! I had added a function which was supposed to close the program if you hit "q" on the keyboard but that kept crashing my code because it was a while (true) loop. So if you want to close it you need to close the console window and the program stops :) if you can add the code to close I'll be happy to merge with main
Will you be sharing it to GitHub soon?
I already did here's the link https://youtu.be/rxHIsFZzRO8
Spot on. Storing bools as bits will only be efficient if you know you are going to have regular arrays of them. And even then...
Natsuki one please?
But this is coursework, so a full game engine may not be acceptable.
What if your keys are tuples?
May I ask what algo trading is?
I would recommend the [python machine learning 2nd edition](https://sebastianraschka.com/books.html). The books is very good for beginners, tons of examples
Yes, performing different tasks in parallel, inside one python script. Those tasks can be computationally demanding (using python to calculate/process data) or time demanding making python wait for the task to complete. **Multiprocessing** is appropriate for the first type of tasks, **Threading** is appropriate for the second time of tasks. For the *time demanding* tasks, it could be waiting for data coming from the network, or waiting for data being sent to the internet (imagine a proxy implemented in Python). In that case, python in 100&amp;#37; in charge. Or it could be that python is waiting for the output of a very computationally intensive task performed by another program (in C\+\+ or whatever). In that case, **Threading** is still fine, because Python is not performing the calculation itself. The external program can be launched usin**g subprocess.Popen**() from inside one python Thread. As an example, I work on this project [https://github.com/pnprog/goreviewpartner/](https://github.com/pnprog/goreviewpartner/) where python is used to perform calculation intensive treatment of data, but those treatment are performed by external program (Go AI) that used GPU (Cuda or OpenCl). Here python is used to collect the data and format them nicely to present to the user. Here is a simple example of Python2.7 using to make some computationally intensive task by itself (so using **Multiprocessing**). In that case, the threads communication is performed using **Queue()** from multiprocessing import Process, Queue from time import time from random import random def do_sum(q): x=1 k=0 while k&lt;20000000: x=(x+random())/2.0 k+=1 q.put(x) def main(h): q = Queue() pp=h for p in range(pp): one_worker=Process(target=do_sum, args=(q,)) one_worker.start() for p in range(pp): q.get() if __name__=='__main__': for h in range(8): t0=time() main(h+1) print h+1,"---",time()-t0 Here, the computationally "intensive task" is **do\_sum()** and the result can be read by **q.get()** Then, the script first launches 1 task. Then 2 tasks in parallel, the 3 tasks; then 4 tasks... up to 8 tasks in parallel, and display the time needed to perform all those tasks every time. The output on my computer: 1 --- 3.5984480381 2 --- 3.75509595871 3 --- 5.71201682091 4 --- 8.04888606071 5 --- 10.0625638962 6 --- 12.0062479973 7 --- 14.1867039204 8 --- 16.0457191467 You can see that performing 1 task or 2 tasks in parallel takes almost the same time, showing that python is taking advantage of parallel execution. One task takes \~3.6s, and 4 tasks \~8s, so around 2s per tasks thanks to parallelism (and clever CPU optimization). If your computer has only one core, the complete time would scale almost linearly (4 tasks in 14.4s instead of 8s). Finally, there could be case where python needs to deal with both "time demanding" tasks and "computationally demanding" tasks. Imagine a VPN that deals with sending/receiving data from the network (time demanding) and also encryption/decryption of those data (computationally demanding). You can indeed mix both approaches, but it might be a bit more complicated. And for this, I really re command using Linux. Here is an example of such approach: [https://www.reddit.com/r/learnpython/comments/7g5mi9/help\_passing\_information\_between\_thread\_and/](https://www.reddit.com/r/learnpython/comments/7g5mi9/help_passing_information_between_thread_and/) Hope it helps!
I've only looked very briefly at this but I gotta ask, why? What does this do that argparse, optparse, [click](http://click.pocoo.org/5/), [fire](https://github.com/google/python-fire), and so on doesn't do? It seems like you're trying to reinvent the wheel, which is totally fine and valid and good if that's what you wanna do, but if it's because "argparse isn't good enough for my purposes" then I would hope that you've at least looked into these other options. Anyway one thing I noticed and have criticism about though is you seem to have created your own `ErgoNamespace` class that from the example behaves just like argparse's `Namespace` class. Maybe I'm the unique one here but everytime I use argparse the first thing I do after parsing is to extract the `Namespace` object as a `dict` and then ignore the original namespace object altogether. Looking at the code for your namespace class it also feels like you've made a class for the sake of making a class.
Because of their history of being hostile to open source community in general and linux in particular many old school open source devs don't like Microsoft. But recently, especially after Nadella took over as the CEO they are contributing more and more to open source and have really embraced open source. [Microsoft has most number of open source projects on Github](https://cdn0.tnwcdn.com/wp-content/blogs.dir/1/files/2016/09/Microsoft-tops-GitHubs-list-of-orgs-with-open-source-contributors.jpg). Some of their recent major contributions include Git Virtual File System, VS Code, .NET Core, TypeScript. Also when they bought Xamarin they made it free and open source
I only needed to change two lines in two files to get the game to play in python2. Just try running it and fix the errors as they occur. Probably best to ask for further advice in /r/learnpython.
Even a "boolean" in C is a full byte. I'm no expert but I'd be surprised if there were many/any major non-assembly programming languages out there where a boolean took up a single bit.
How long have you been learning Python in order to get there? Or did you already programm and then you picked up the gis stuff? And how tough do you think will it be to write a script that performs the task that I described? 
It's easier to put something together with basic threads for me.
Where's the code man?
`vector&lt;bool&gt;` in C++ is a specialization of the vector container which creates a contiguous array of bit sized bools in order to save space. The cost of doing this becomes the need for a special reference that can access the memory, but it becomes slower to access elements in the array. You could imagine that this might be useful if you wanted to store some enormous binary array that wouldn't otherwise fit in memory.
Thanks so much for sharing that! Was scrolling through discord.py github and noticed cogs a lot without any understanding of what it was. This explains so much!
Nope. This is just more low rent SPAM.
You could store the rooms in a dictionary and just pass an id to to your Exit function, your exit function can look up the id in the dictionary to retrieve the room
( ͡° ͜ʖ ͡°)
I've been working on a bot for a discord server I moderate focused around a multiplayer league of /r/basketballgm. I'm fairly new to python, and this is my first non-school project so I'm very proud of it. I wrote 2 separate scripts. The first is the bot itself, it will take DMs from users and log their usernames, messages (specifically free agent offers), and the timestamp into a text document. The second is a bit more complex, and I learned an assload from it! First, it gathers the data from the document, parses it, and puts it into a Google spreadsheet. Next, it backs up the file, using an automated naming system (for which I learned rudimentary json) and then clears the original log file. It's fairly basic, but I learned soooo much from it. I'm super proud and excited at where I could go from here. 
Trying to learn some Django. There are just too many new frameworks to learn
an automatic system that makes money
Thank you! The main "catch" -- or what made me snap + go "I need to do this myself" -- was the need to lump different options together under premises like "these ones **must**/**must not** be used with each other" or "these ones are interchangeable except when the other rules apply" and so forth, a purpose served by `@parser.clump(...)`. You sure as hell can't do this via argparse (see the `required=False` hoops I had to twist through in order to sort-of emulate XOR in the "before ergo" link above?) and neither, that I can see, could any of the other solutions I looked at (although docopt comes close). My wanting to be able to define those complex sorts of interdependencies easily is why I'll probably have to keep using ergo. That notwithstanding: out of the solutions I fiddled with prior to biting the bullet (being argparse, docopt, click, fire, and cleo), the -only- one that stood out to me as "good" was docopt. Click, for one, puts far too much into its decorators (heck, *I'm* pushing it with clumps and whatnot), and having your actual function definition disappear between a leaning tower of decos and a long docstring isn't too good a look, IMO... and then on the other side of things, cleo seems like a more-rigid + less-pretty docopt and fire is just... weird. Tries to do too much, I think. (The number-handling that its README pushes as a good thing also does not seem friendly in the slightest... although it's a relatively minor part of everything, I think ergo's typehints do this elegantly enough) ErgoNamespace isn't trying to be anything special or unique, really -- I mostly just wanted a dict with dot attribute access, so that it could be used like types.SimpleNamespace (which also gives it the nice repr) while being iterable and not requiring a getattr call for non-literal keys. Thank you again for your critique. Got me thinking about my goals and reasoning for making this.
You could just try to map it in a data-driven way using a dictionary of synonyms to start with. The fuzzy stuff might not be trustable enough. Man U Vs Man city. Etc. 
I wrote a script that processes the transaction logs I download from my bank. It parses them, categorizes the transactions, alerts me to anything strange, then uploads all the data to a google spreadsheet for pleasant viewing.
It seems like spam, but I want to say is I spent $1 to test the cheapest one and I got books. 
Your readme fucking kills me https://i.imgur.com/NKrSpGj.jpg 
Ah, the announcement of a personal project that most likely won't happen.
I am afraid.
So you don't like what flit *does*. That's not a lack of documentation - the documentation describes what it does. You want a tool that does something else. Fine: use a different tool. Maybe enscons is more useful to you? Flit is useful to me. I never claimed it's the answer to all packaging problems.
https://github.com/Aditya-Khadilkar/Face-tracking-with-Anime-characters
https://github.com/Aditya-Khadilkar/Face-tracking-with-Anime-characters
https://github.com/Aditya-Khadilkar/Face-tracking-with-Anime-characters
I would make a pull request if it wasn't for the possibility of a job recruiter someday wanting to look at my github account. Not sure how they would react to anime/waifu stuff.
I think they will look at the possibility of this project. Although I have chose an anime girl for this, the same code can be used in horror games or as a UI for Google personal assistant. It won't be "embarrassing" then
Just did a quick test, and it seems like your "q" code works fine event = pygame.event.wait() pressed = pygame.key.get_pressed() if (pressed[pygame.K_q]): break Just uncomment those 4 lines, and comment out line [114-115](https://github.com/Aditya-Khadilkar/Face-tracking-with-Anime-characters/blob/master/YURI%20FULLSCREEN.py#L114).
Alternatively `$ python "my file.py"`
Now this is a true masterpiece.
Thanks, fixed.
Creating a notification screen with a Pi 3, PIR motion detector, and contact image scanner touchscreen!
There's two different questions you're asking: packaging (with [setup.py/setup.cfg](https://setup.py/setup.cfg) and flit) and installation (requirements.txt and Pipfile), the difference of which is covered by [https://caremad.io/posts/2013/07/setup\-vs\-requirement/](https://caremad.io/posts/2013/07/setup-vs-requirement/). For a personal project that's not a library, you can use whatever you want (pip, pipenv, conda). If you're working with people (on a non library), consider what tools they use (e.g. neither requirements.txt nor Pipfiles work with conda for example). For libraries, it's PEP 517 that needs to be implemented (unless the project provides a [setup.py](https://setup.py) stub, I'm not sure if flit does, @takluyver can answer that), and currently pip lacks support for PEP 517 (see [https://github.com/pypa/pip/issues/5407](https://github.com/pypa/pip/issues/5407)). Additionally, there are other tools than pip which use the [setup.py](https://setup.py) (e.g. linux distros, conda build tools), so if you want your library to be used (and likely to reduce bug reports), sticking with a [setup.py](https://setup.py) is probably a safer bet for now.
But the user agent can be different and youtube reacts differently to different user agents 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_expyriment] [0-25 python blog sites](https://www.reddit.com/r/u_expyriment/comments/8pies9/025_python_blog_sites/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
The coding is cool. The subject matter is creepy. 
I saw a couple on twitter before that used it, made new channels for specific things like trips 
The entire idea behind captchas is to prevent the automated use of a website.
I tried it but for some reason the code just hangs for me. Maybe my laptop can't handle the while loop
No, I don't like lies :) Packaging Python means packaging native extensions, dealing with versions, dealing with different interpreters and distributions etc. When the tool that claims to do packaging doesn't even reflect on these issues that's just the same as when a government bureaucrat doesn't tell you you are eligible for compensation money: 10% chance of ultimate incompetence and 90% chance of willful deceit.
&gt; The main "catch" -- or what made me snap + go "I need to do this myself" -- was the need to lump different options together under premises like "these ones **must/must not** be used with each other" or "these ones are interchangeable except when the other rules apply" and so forth, a purpose served by `@parser.clump(...)`. You sure as hell can't do this via argparse Sure you can! Here's a quick example: import sys import argparse parser = argparse.ArgumentParser() parser.add_argument('infile', help='required') group = parser.add_mutually_exclusive_group(required=True) group.add_argument('outdir', nargs='?') group.add_argument('-f', '--find') groop = parser.add_argument_group() groop.add_argument('--hello', action='store_true', required='--world' in sys.argv) groop.add_argument('--world', action='store_true', required='--hello' in sys.argv) print(parser.parse_args() - `inifile` is required, always - one of the following is required: `outfile` or `-f outfile` - `--hello` and `--world` are optional, but if one is present then the other is required Not saying your way is worse or this way is better, but you can totally do it with argparse :)
I understand this, but this one has been put in place unnecessarily. It kick in too early. I probably refresh about 5 times a day.
&gt; What am I missing? That every "object" in CPython (including `None`, `True` or `False`) is [a PyObject](https://github.com/python/cpython/blob/598ceae876ff4a23072e59945597e945583de4ab/Include/object.h#L106), with all the baggage that implies meaning the baseline is a type pointer (8 bytes) and a refcount (8 bytes). Furthermore, Python booleans are integers, which means they share the implementation, and integers are [variable-length objects](https://github.com/python/cpython/blob/598ceae876ff4a23072e59945597e945583de4ab/Include/object.h#L112) so we're adding a count (8 bytes) and [the base int payload](https://github.com/python/cpython/blob/598ceae876ff4a23072e59945597e945583de4ab/Include/longintrepr.h#L85) (4 bytes). You may have noticed that this yields 28 bytes, that's because I'm looking at the Python 3 implementation, where integers and booleans are in fact 28 bytes (baseline). The difference is that Python 3 unified "int" and "long" so in Python 2 "bool" is an integer, which is a fixed-size object (- 8 bytes for the lenght) but has a base payload of a long (-4 bytes but 8 bytes on [LP64 platforms](https://en.wikipedia.org/wiki/64-bit_computing#64-bit_data_models)). And there you are, 24 bytes for a Python 2 bool object. Not that it matters that much, as other commenters have noted `True` and `False` are singletons.
`"""` is just an alternative of `"` which can contain newlines (very convenient for docstrings &amp; other multiline strings). `r` marks it as a "raw string", meaning backslash characters (`\`) are literal, not escape characters. `^` is part of the regex syntax.
https://i.imgur.com/kRUfJfr.gif
If you find it useful, I can extend it to notebooks. Setting a random seed is also a good idea, do you know if tensorflow and all the other libraries use the random module? Would it be sufficient to call random.seed() once at the beginning of the script?
I think you're missing what I'm saying. That is going to be your absolute last concern. Focus on the big things first. I don't even think applying such optimization would yield a measurable improvement to you as just normal variance in network latency will overshadow any gains made. Focus on the primary concern I mentioned. Then get working code going. Test to see if meets your requirements, and if it does then leave it at that. If not, PM me in a week or two when you've done and I'll help you with those things.
Pay some kid a little bit of money to remote desktop into your system and solve the captcha whenever one pops up.
That is not for you to determine though. Anyway, here is how you bypass capcha: https://www.reddit.com/r/Python/comments/8oqp7v/hey_i_made_a_google_recaptcha_solver_bot_too/ 
Science has gone too far. 
You are right. Didn't think about user agent.
If you try to print that pdf do you also get errors? That message is familiar to me from a printing aspect. Assuming it’s corrupt. 
I haven't used Flask in a while, but there are Flask alternatives to Django Admin, right? Still, for a school project, batteries included is probably easier and quicker.
let me introduce to Dynamic DNS services like no-ip
I've never thought about it this way, but I think this consistency keeps the language much more intuitive than OP's suggestion might.
Perfection has been achieved.
XD
I know about it. I like my setup though =] - Gave me a project that let me learn a ton about programming and Raspberry Pi at the same time.
What did this particular “nice” do wrong? Lol
Clickbait
Don't be so hard on yourself! The code is short and simple and gets the job done (even more so if you start supporting other browsers/OSs in addition to your own!). What else is there to worry about? But one recommendation. You shouldn't add the `__pycache__` folders to your repo (or any auto-generated files like `*.pyc` in general).
please don't do the `register the project name of PyPI` step until you have something working. There are already so many good project names taken just to sit around.
Hey thanks for the inputs! Will keep that in mind in the future
God dammit, WebKit. 
Please read reddit's formatting help.
Flexibility and rapid deployment would be my guess. 
Which site is it and which url returns captcha?
Absolutely! So it’s a algorithm that executes trades based on the criteria you give it. People have algorithms that can beat the market by 800% and it’s fun to do so I’m hoping that my hobby will pay me one day. I’m using Quantconnect and I don’t know python the best but it’s great to learn and you can figure it out.
flexibility, data science libraries
Not all data is clean, pentaho and tableau aren't always available. A good data scientist can use any tool, like the bear Grylls of data. At my current client I have to do MI on a locked down server using only the tools in git bash. I have now sharpened up my grep/sed/awk skills and have learned me some perl for the first time. And I drink my own piss. Needs must.
That sounds really fun actually.
I do enjoy it. It's like a puzzle.
Almost certainly I'd choose sqlite for this. Creating two column tables of "key" and "value" and storing JSON in "value" is dead simple, and you can make it more complex if you like. SQLite even has support for JSON built in so you can query inside it (if compiled with it enabled) See http://charlesleifer.com/blog/using-the-sqlite-json1-and-fts5-extensions-with-python/
And also those basic unix tools are so insanely well documented and feature-rich that it sounds more rewarding than if you were restricted to a different tool set.
I have used Tableau in the best and it is a great product for producing dashboards and visualizations, but it is not a programming language at all. It is best described as excel on steroids. I would not trust making a business decision on anything other than a simple visualization because there is no way to unit test anything you produce. It's best use case is nice presentation of canned data in a database.
I get 28, what interpreter/arch are you? 
Oh absolutely. Before this I was having to do manual find-and-replaces in notepad and file renamings to be able to ingest into the MI system. Now I have a 5-10 line script that does the whole lot for all the files I throw at it (was manageble when I started when it was ~20 log files we had to ingest but now there are literally hundreds with another 10-15 being produced daily). Immense levels of satisfaction. Now if only I could find a way to imitate cron and I wouldn't even have to turn up...
I started a similar project, and dealing with different names was way harder than it seems like it should be. I had everything in a sqlite database. I think I had a team table with a name many to one foreign key i.e. one team to many names. So, I'd look up the submitted name in team_names and join with the team table, which joined with other things... as I remember. One issue I also had was that there would be two teams with the same name in different leagues: something like Atletico Madrid A league and Atletico Madrid B league and Atletico Madrid Women's league. I had to check everything manually.
Oh, I am a GIS developer with experience in ArcObjects, C#, Java and now Python, more than 10 years... As for your task, it shouldn’t difficult, maybe a few hours, need more details, e.g. data structure. I used to work in Mining and Retail, now is in forestry. 
Take a look at [Scrapy](https://scrapy.org/)
Here's a possible solution - your exits can be specified as strings rather than as variable names. Then you're shifting the problem to performing a lookup based on the string. This could be done by defining all of your rooms within a class, so that you have Rooms.start_room, Rooms.end_room, etc. Then your lookup function would involve finding the room within the class. I think using getattr(Rooms, room_name) would work here. However, just because this is possible doesn't make it the best solution. Enumerating all your rooms beforehand may still be the cleaner design and if you have a typo when you specify an exit, it's more likely that you'll be able to catch it earlier
No requirements.txt or Pipfile? :'(
I feel this applies to many celebrities confronting their corrupt/phony world: &gt;For we wrestle not against flesh and blood, but against principalities, against powers, against the rulers of the darkness of this world, against spiritual wickedness in high places. 
I have told what you need in read me itself. But I am going to update the repository with an .exe file for those who just want to try it out
Sounds like they don’t want you to do that.
You are literally doing the exact thing that captchas are meant to stop and you are being stopped by a captcha. I would say they did a good job in their placement.
I was only mostly kidding. Good job on the project. I would recommend pipenv + pylint if you're going to write larger projects.
Lxml easy and fast 
Working on an internal website to get current meetings for a room resource with ews, exchangelib, hosted with flask and mod_wsgi. 
&gt;Advanced Python interview Questions - seriously?
I added a random seed setter for numpy (also used by scikit\-learn), tensorflow and Python's random. It only works if numpy is imported as np, teensorflow as tf and random as random, but in the README I added a note how to adjust that.
It's a general purpose language after all. Data analysis is one thing, but eventually you'll need *eg* to download some weirdly-formatted database several Gb in size and parse it (and I said weirdly-formatted, so no TSV/JSON/XML parsers for you; be grateful if it's documented and doesn't store booleans as int bytemasks in plaintext with docs like `Field 23 stores subcollection inclusion data`; or doesn't use IDs from several different public databases which you need to distinguish if you need metadata; and "Several Gb" doesn't actually mean "Just under a terabyte, accumulated over twenty years while the naming conventions slowly evolved"), then filter the data using some obscure old tool. Which actually has a nice command line interface, but requires yet another weird format you were hoping died out in 2000, which does not permit values for a certain field longer than ten characters and has three equally moronic dialects. Or it requires an actually nice universally accepted format instead, but this format has one quirk: everyone and their dog has a different opinion about which part of the record name is the actual name and which ones are for the metadata. And that's *before the actual analysis even starts*. Welcome to the wonderful world of scientific computing, I guess. Have fun figuring this all out in your shiny Excel. Also: it's a mature language with an ecosystem. Tons of testing systems, trivial VCS integration, about a bazillion of learning sources and ease of integration with all the non-data-science code out there. Now, "With tools like R, why is Python used for data science" is a much better question. I personally haven't learned R, but from what I heard it has most of the Python's advantages and better speed without all the C code imports.
CAN I SEE THE SOURCE CODE AND REQUIRED THIRD PARTY MODULES
You have perl and git bash. A (terrrible) cron replacement in perl wouldn't be hard to build.
[https://anti\-captcha.com/](https://anti-captcha.com/) [https://rucaptcha.com/](https://rucaptcha.com/) and gazzilion services like this. See their Python API.
I'm more amazed about the fake waterfalls then the python code :)
Thank you!
I think the ultimate idea is to get away from instantiating everything right off the bat and do it as needed. Otherwise, if you did manage to work around this issue, literally your entire game could potentially be in memory.
You have to ask more specific questions than this. The only reasonable answer so far is "yes" or "no". 
I doubt that, its still WIP not to mention it will be shared without the features since most of them are related to my work.
Sure, there is an csv module in the standard library: https://docs.python.org/3/library/csv.html Should be easy enough to combine the writer example with your script.
Fair enough, thank you
/r/learnpython
Nice
Noob question: why is this possible with Python, but not with R? Atleast, that's what I understand so far.
I've been using WinDirStat for years because I've never found anything else that could give such an understandable overview of a computers storage. This looks like a fantastic upgrade!
I don't, I think that behaviour is useless and (key, value) iteration would be significantly more useful than keywise iteration on dicts. But sadly this ship has long sailed.
Cheers for the tips, was hoping people would expand on their experiences really
… How is that a problem in any way, shape or form?
Thanks
2captcha api
Iteration and membership test have no reason to be symmetric.
… why does zip() bother you?
I like that Python has well-defined protocols and usually keeps to those lines of having very explicit behaviours. You may want to switch to Perl, which can do exactly what you're talking about.
I’m not well-versed in C, so I’m confused why the minimum size of PyObject isn’t 32 bytes. You have 3 pointers (next object, previous object, and type object) at 8 bytes each, and the reference count. I believe the reference count is 8 bytes on 64 bit systems. What am I missing?
I tried using Problog, which is a python-based probabilistic prolog-like language, and it was a fucking mess.
Thanks, hope it helps you out :)
The previous &amp; next pointers are only present if `Py_TRACE_REFS` is enabled when compiling the interpreter. This is not the default, and it's a subset of the "debugging builds": Defining Py_TRACE_REFS enables reference tracing. When defined, a circular doubly linked list of active objects is maintained by adding two extra fields to every PyObject. Total allocations are tracked as well. Upon exit, all existing references are printed. (In interactive mode this happens after every statement run by the interpreter.) Implied by Py_DEBUG. 
There are no next or previous object pointers in the bool structure itself. Where did you find them?
Just get Bentley's paper from ACM.
Crouton OS
MeToo.
1) How many of those target websites do you scrape? I would probably build a dictionary with synonyms manually, and the scraper will do the conversion and only the normalized name will be stored in db. 2) I would also check if those websites don't have API... it is much better than to scrape directly the website. You would be surprised how often some websites change their html code, and also they can ban your IP address if you overdo it with downloading. 
This looks really cool, though I do have to ask why you picked pycairo over e.g. a plain SVG library, considering that GTK+ 4 is moving away from it...
I was hoping this would go into more detail on how to route this large format video content, but the blogpost was basically just about how to turn the screens on and off and test for errors. /shrug
Ok ok calm down, the boobs will be bigger in the next update
It’s theoretically possible to compile any code to a .exe, there just might not be a tool to do it easily. 
i've used it a bit. I think if you already know Prolog (I used to use it a lot), it kind'a works ok. But thinking in Prolog is very different than thinking in Python. Ths may be the problem have. Otherwise, go for and contribute.... 
I've taken several programming classes in the past, but two weeks ago was the start of the new semester and I'm two class sessions into my "Intro to Scripting" class that uses Python. Having fun learning so far, and I'm excited to see what I can do with it. I'm also learning Windows Server 2016 and I want to see if I can utilize Python/PowerShell to automate things like user account creation, application install, etc. I'm excited.
Pretty cool gig - setting up a video display wall for a cruise ship! I'd like to control my 2 X 65" Hisense displays via python. Right now I'm using an arduino with an IR, but it only works if I want both units to do the same thing (since both respond to the IR signal).
"Bother" is probably a bit strong, but the philosophies are different. In Perl, you could do what zip does this way: @hashmap{@keys} = @vals; But you can also do this: %hashmap = @hashmap; $hashmap = \%hashmap 3 unique variables in 3 symbol tables and it's possible to load an array of key,Val into a hash in multiple ways. I really like the multiple symbol table in Perl, because you can have an array called @apple and a scalar referring to an individual $apple, in python all apples are the same symbol. (As in most languages, perl is clearly the odd one, I just happen to like it) Python has much different views. It will take some getting used to. :) I suppose a fish would not like the dessert either.
Not entirely sure what you are after but it sounds like the realm of procedurally generated dungeon cave systems. Just 'a thought....
I thought for a second I'd be reading a post on controlling a cruise ship with python.
if I were approaching a need for templates, I'd probably get into Jinja2
that's like asking people to rtfm. A file you can point to when people become abusive 100% accurate as opposed to citing some line from a readme
I am more interested in how this became an idea. Was it how we put a waterfall here? Or what do we do with those 34 monitors?
Not template as in html template, just a string format that's reused often. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
They are waiting for you to write it :) I tried a while ago (called it urilib) but didn’t see much benefit out of it and didn’t finish.
It looks like you're right. None of the request functions appear to be await'ed. Reviewing the code, most of the async is hidden behind a magic async function called 'call' async def call(fn, *args, **kwargs): if inspect.iscoroutinefunction(fn) or inspect.isawaitable(fn): fn = await fn(*args, **kwargs) elif callable(fn): fn = fn(*args, **kwargs) return fn I'd be curious what calls are actually async, as I don't see them in the request handlers for sanic. Never used sanic, but wired aiohttp together which does require a bunch of awaits to get various request data.
[removed]
Nobody likes systems code :(
See recursive definitions. A part of A's definition is B, and a part of B's definition is A.
Yeah I can see the problem with the two ways of thinking, I like the way you can define a prolog knowledge base in another file then just query in python mostly tho 
https://www.amazon.com/Python-Visual-QuickStart-Guide-3rd/dp/0321929551
Ok, neat! One more question, do you think you could add support for unix operating systems? Most of ctypes doesn't work on anything other than windows.
Hmm I don't know much about Unix system but you can find a library which works for Unix instead of ctype. The rest of the code is pretty much the same. I have merged a pull request which works on MacOS if that helps
yeah, but jinja2 is just a templating language. HTML is just the primary use case. I've used Jinja2 to generate nginx configs, host name files, etc.
Was this article translated with Google Translate?
Just a note, I needed to import each function individually because `import *` is not allowed for the package. so I used `from __future__ import nested_scopes,generators,division, absolute_import,with_statement, print_function,unicode_literals` to get them all, may have been overkill, but the code required a lot more hacking after that to get it to work
https://github.com/Aditya-Khadilkar/Face-tracking-with-Anime-characters You will need OpenCV, pygame
Oh I didn't even see the macOS merge, thank you!
:)
[How to Think Like a Computer Scientist](http://openbookproject.net/thinkcs/python/english3e/)
I'm not talking about that kind of template. I'm saying a string template like `"{} is deprecated and will be removed in version {}"` which is used in several places. 
the name of the ship - Titanic
If you make an executable, does it make your code run faster? Is there a significant performance boost?
https://www.programsinformationpeople.org/runestone/static/publicPIP/index.html might be a good one. Also provides interactive console embedded in the website so might be handy for students to try out what they learned
https://pypi.org/project/pyttsx3/ This library wraps the win32 API for using the text to speech engine and makes it easier to work with. It has a simple function for changing the voice. 
how are you editing these images to cut eyes out?
This is not compilation. Pyinstaller (and py2exe and cxfreeze) only packs the python and whole interpreter into one archive. There's a lot of caveats of this approach starting giant exe files.
Best beginner Python book I can recommend is "Learn Python The Hard Way" https://learnpythonthehardway.org/book/ 
No. This doesn't compile the Python code to machine code or something. PyInstaller just takes you code, all dependences, and your local Python interpreter and puts them all together into a single file. E.g. like a zip file. This way everything is bundled and can be executed on a machine misses some packages or even Python. But your code is still interpreted by the same Python interpreter as usual.
&gt; I get 28, what interpreter/arch are you? Probably Python 2 on an LP64 platform, that fits the 24 bytes.
Thanks!
compile: verb; 'to collect in order to produce something' it's not being used in the computer science definition of the word but in one of the classical senses. 
Did you try other solutions, for example [this one](https://stackoverflow.com/a/49769015)? It seems like the server is refusing the connection because the client is using an old SSL version
Just have to say, I am a big fan of cffi instead of ctypes. It fits in my mind better and is much faster on PyPy. With that... Ctypes tries hard to behave like C, it is type sensitive. So `c_uint == c_ulong` only on a python interpreter compiled with a c compiler where that is true. Basically "this design has implications" because those are two different types that happen to be equal on the interpreter you are using, just like it would have implications when you use different C compilers. For the second question, do `a.xyz == eH.x.value` instead. Long answer: `eH.x` is a `c_uint` object with the value of 0. `a.xyz` is a field of `a`, the interpreter converts it to a python `int` object via a `getter`. So you are comparing a python int object to a ctypes `c_uint` object, and it fails, just as does `0 == c_uint(0)` Keep learning python \- try things out, don't be afraid to experiment and ask questions.
Does anyone know if this code can be decompiled to get the source code? How secure is this to distribute python code?
Hello FriendArin. Would you like a new lung? 
Omg I love Yuri
It's great that you wrote us a novel. You could have spent a tenth of that time and accomplished a whole lot more by reading sidebar which is full of useful information and googling. 
Python can never be effectively "Secured" if distributed. Decompilers are remarkably good and the code isnt even hard to read. 
https://wiki.python.org/moin/PythonGameLibraries
GIMP photo editing software because its free
&gt; You could imagine that this might be useful if you wanted to store some enormous binary array that wouldn't otherwise fit in memory. People use some sort of 'bitset' class for this. If an obvious implementation is not available within the language or one of its standard libraries, then the team will write one. They are quite useful!
My bad on not reading the sidebar, I can see how my novel might be annoying posting it in here, but the harsh sarcasm was a little unnecessary in my opinion.
Brasileiro? Eu fiz pesquisa em Sao Jose dos Campos dois anos atrás. I mostly wanted to read the section on what you've done with python.
If you can't muster the effort to read the sidebar, which a bunch of people have spent a bunch of time compiling for your benefit, or to spend even one minute googling something like "python data analytics", why do you expect to be coddled? Barging into a community without doing a lick of your own work and expecting said community to do everything for you is rude. 
Generally you can decompile everything that you can run on a machine. Python as an interpreted language is easier to get insights than some other languages. If you pack it in an executable you only add small layer on top. People with time or money will get the code if they want it. But that is also true if you write your code in C, it just takes a bit longer. Your advantage to pack it an executable is that the distribution to windows is much easier since it is not required to install python itself on the system and you only need to transfer one file.
This is my code: topics_dict = {'title':[],'score':[],'id':[],'comms_num':[],'created':[],'body':[]} for submission in reddit.subreddit('btc').submissions(1527000000,1528000000): topics_dict['title'].append(submission.title)
 topics_dict = {'title':[],'score':[],'id':[],'comms_num':[],'created':[],'body':[]} for submission in reddit.subreddit('btc').submissions(1527000000,1528000000): topics_dict['title'].append(submission.title)
 topics_dict = {'title':[],'score':[],'id':[],'comms_num': [],'created':[],'body':[]} for submission in reddit.subreddit('btc').submissions(1527000000,1528000000): topics_dict['title'].append(submission.title)
Congrats on starting the long journey to becoming an able programmer! Since you sound serious, can I suggest taking a university course like Programming I? They might use Python, or another imperative language. Don’t worry too much about that. Even if you take a course using Java or C++, you’ll learn the fundamentals of programming, which transfer to most other languages. 
It took a bunch of people a bunch of time to compile putting a simple link to another reddit page on the sidebar? And thank you captain obvious on teaching me how to google something, clearly I have so much to learn about how the internet works...I came here to hear what some actual people had to say after reading what I wrote to see if they had any tips, tricks, or had a particular thing that they found helpful when they were learning that this weird thing you call "googling" doesn't do. Believe it or not, but hearing from people that I can have an actual conversation with can be quite helpful. I may lack the knowledge to understand everything people talk about on this subreddit, but you my friend, lack this simple thing called respect. It's a shame that so many peoples first reaction is hate on the internet and the term respect is completely thrown out the window. P.S. \- I love how you claim I "barged" into this community like I made everyone stop what they were doing to read what I wrote and give me answers. Haha thanks for the laugh, that was a good one.
it's 24 bits all set to ones. it is **very** true.
So there is a few things to understand for a beginner your level that will help you 1- you can learn at home and for free, at least to start you just need to find a resource that begins from the very beginning and assumes nothing about any or existing knowledge 2- programming is telling the computer what to do. To learn programming you need to learn two separate things. One is the philosophy of programming itself as in, what do you want the computer to do. the second is the syntax of the language Think about it this way. You can learn Spanish, but you can’t teach one how to use Microsoft office in Spanish unless you understand Microsoft office separately. 3- don’t believe all those those things advertised as (learn python in 24 hours) as they Ony teach syntax, not programming. You need something for the absolute beginner 4- they will always start at a very basic level that doesn’t seem to do much other than print words to the screen. But that is like a child learning the alphabet. You can’t write a novel if you don’t know the alphabet so be patient and start there 5- once you learn the basic syntax (the alphabet) you can start learning frameworks and libraries. That is where the fun starts. Very rarely someone can write a useful program from absolute scratch. Instead you will just import the libraries created by other programmers to make your own Finally, I have found that to start a complex subject. It is easier to start with video lectures, once I get oriented, I usually drop the lectures and learn on my own. I would recommend Udemy. You can get a course for $10 to get you started. Watch a few hours then if the examples aren’t fun for you then you can find others online that suits you more 
Clever :) I've spent a while, on and off, trying to dredge up more examples of argparse's shortcomings here (in addition to the stackoverflow answers that showed there wasn't a clear way to handle what I wanted), but it's been long enough that I really can't recall or find any of it anymore :( But I can say that when the mixing-and-matching gets complex and you start having to check things yourself after parsing has occurred (and/or by outsourcing, ish, to external functions as you've shown), I feel it's cleaner to have the lib be able to sort things out for you instead -- especially when things like aliases come into play. Time will have to tell if the sort-of-bloat that comes with it is preferable to the bloat on the other side, though.
Bullshit. You're lazy. That's super lame. 
Cool as it is, the last thing I want to see on a cruise ship is water running down walls :-)
Things can be confusing to beginners man. Yoj don’t know where to start. I know r/pythonlearning exist But people don’t know that at first. The side bar is not visible for the mobile app
You should move "todo" to Issues. Will be easier for people to get ticket and start developing things, and you will know if someone is working on specific thing. :)
Yes! I'm working a few km from where you did your work. Ok, I will keep that in mind, I still have to write it. Oh boy.
1: it's /r/learnpython. 2: the sidebar is visible in every single mobile app I'm aware of. Google the name of the app and "sidebar". 3: I don't believe for one second that OP typed that out in anything but a browser. 4: &gt; Yoj don’t know where to start. That's literally why the sidebar exists. OP is lazy.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [I made a python cheat sheet](https://np.reddit.com/r/learnpython/comments/82t191/i_made_a_python_cheat_sheet/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
Py2exe works great
First off I wanted to thank you for actually being a genuine human being instead of a troll like my good friend mudclub. Anyway, I have thought about taking a course, but since I am graduated and have a full time job now, it would be difficult for a number of reasons. When I was in college, I found that for more than half my classes, I had to learn everything on my own anyway, so I worry that a course would be a waste of money, especially if I have the resources online for free. But what you said about learning the fundamentals of programming, which transfer to most other languages, that right there is exactly what I want. I want to understand the fundamentals and understand how coding and programming works. I want to be able to look at a piece of code and know what it is doing or at least not look at and not have a single clue what I am looking at. Once I understand that, I believe learning other languages would be much easier. But thanks for the answer!
Lmao whatever you say champ.
I appreciate the support man, it makes me happy to know not every is as rude as mudclub. But lets leave him alone, he is obviously struggling to find any sort of happiness in life since he comes on reddit to bash newcomers who are simply looking for help.
If you're looking to keep the code from being stolen, consider wrapping all the important parts in cython. This will compile it down to equivalent c extensions and with the right compiler options also strip out an source map leftovers. You might also get some performance boosts. 
Why is it mandatory in data classes if its optional?
First off, amazing answer. This is the type of response I was hoping for. As lame as it sounds, it is comforting to hear what you said in #4 because that is my current situation. I follow tutorials online and follow what the person is doing exactly, then pause and try to make sense of it, but at the end I hit print and it prints correctly, but then I realize I don't fully understand the how and why it is doing that. The other big point you made is the syntax. I think I understand what that means, and that is something that I am finding is challenging to understand. But the saying "you can run before you know how to walk" fits pretty perfectly I think to what you said. I am trying to understand too much too quickly. I need to step back, take a deep breath and focus on learning and understanding one thing before I rush to the next. That is how things get confusing. But thank you for the advice, can't tell you how much I appreciate it.
Too video; didn't watch link?
https://www.reddit.com/r/changelog/comments/7tus5f/update_to_search_api/
No problem. There are lots of free courses too, for example EdX has a beginner course using Python.
Decomplilers are shockingly good. I've thrown a very difficult program at it. It was near perfect.
Nuitka is really cool, but i wasn't able to get it to work for my project. I had some complex external libraries using compiled C and Fortran libraries and it caused a lot of problems with the Nuitka compiler. I'd like to revist it someday though when i don't have a super tight deadline and give it a real shot.
Because we are discussing using python cross\-platform i do think using 'bundle' or something similar would be better. Compiling does have a specific connotation in a context like this. 
What were they asking you about generators? They are pretty useful and I've found myself reaching for them more and more for projects, but i don't know if I'd use them in an interview question for candidates.
I second this. I started learning Python from this book with my only programming experience being a little bit of Basic in the early 90's when I was about 10.
compiling has a specific connotation in all of computer science. they're just using the word in a semi-lazy manner. i liken the python to exe process as 'packaging' rather than compiling, as it's way more accurate. 
Probably not much, if you're always gonna use the dataset interaction style. The apsw driver may be faster and more thread friendly, and peewee offers many ways to interact with databases as well as an extensible design. Since peewee can do what dataset can, and other things that I sometimes use, it's simple for me to just always choose peewee (of the two). I also like that the developer maintains other modules for nosql dbs, sharing a similar usage. On the other hand, it may be impossible to improve upon the dataset logo.
\\#MeToo
I'll keep this in mind next time I need to control 34x$6000 displays.
Because a bare identifier in class scope produces a `NameError`: class A: b Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; File "&lt;stdin&gt;", line 2, in A NameError: name 'b' is not defined
Generators are like the first intermediate python topic. They're a great way to differentiate between beginners who have read the Python tutorial and are now "Python programmers", and people who have built non\-trivial applications.
2captcha api
If you are trying to extract text from a PDF, then you will probably end up needing PDFMiner. Its documentation is harrowing, but it's probably the best tool for getting text out of a PDF in Python: https://github.com/euske/pdfminer
You are a monster douche. I pointed you at the sidebar which is full of information, I pointed you at the correct subreddit, which is full of information, and I told you to look into auditing or taking programming classes at your local university. Fuck you, dude.
Not sure you've posted in the right place (I'm a psychologist myself too). 
No problem. Programming is a big world, a lot bigger than what online tutorials make it out to be. Unfortunately all these one page tutorial tells you how to do one thing without all the underlying infrastructure. But once you get to know the infrastructure you will find the tutorials more useful. The good news is the initial phase will be over quickly. Part of it is just getting your brain training to think like a programmer. That will only come with experience. Again it is like a natural language, you can read a dictionary but that won’t make you speak like a native until you hold some conversations in that language. Python is a good place to start. It has a relatively easy syntax without a lot of the brackets other languages use. It is also great for data science. A couple more thing you need to be aware of is that no body learns just one language. Everybody will need to learn more than one and sometimes the comparison between them is what makes you understand more about programming. Stick with python for a while and then look into something like C or java to get a better understanding of programming and how computer work in general. C in particular is the big mama of all current languages so everyone should take a brief look at it. But it is too low level to be a good beginner language 
That's not a good book. Automate the boring stuff with Python is a much better book, and closer to the requirements the OP has listed.
lol, how was ur interview? What did they ask :P
As a video engineer, I'd say you most often don't. It's a lot easier to just slice the video for each display and play them in sync. (as they seem to be doing on the cruise ship) There are $250 hardware media players that can do this. When you work on the content you don't have full detail and resolution until you render it, and then you only render each slice separately. A 17 meter high video wall with 55" monitors gives about 24\-25 displays. That's 27 000 vertical pixels, if going full resolution. AFAIK there's only one system that can handle such large canvases, Watchout, and that would be spread over multiple machines. But then it essentially slices the video for you in the background anyway.
1: even I who has been around here for a while didn’t know that on top of my head . How would he know that 2: side bar is not visible on the iPhone app. Highly doubt it would be visible on any small screen 3: may be, but most of the side bar info in reddit are stuff people gloss over 4: I know OP is not lazy because I was in his place a year ago. And it took me many hours to figure out where to start. And then when I decided on one place, I was so wrong it was hilarious. I was trying to use Wordpress to build a mobile app 😞 As OP has mentioned. He has read a lot of stuff online but didn’t understand it that is why he was here. I Too after a long time researching got so confused and asked the question and got a mean response. Eventually I found a python for the absolute beginner page that I was able to truly start. Then found online video courses and now I now a couple of languages plus a good understanding of multiple databases. 
Which decompiler did you use?
How easy is it up update that wiki? Sometimes the admins etc put up a lot of resistance to edits. I need to add [renpy](https://www.renpy.org/). It's the most widely used python game library used in commercial games. They even have [their own category](https://store.steampowered.com/search/?term=renpy) on Steam (but most games of this type don't list their engine so there are some missing).
&gt; 1: even I who has been around here for a while didn’t know that on top of my head . How would he know that The same way I did: I googled it. &gt; 2: side bar is not visible on the iPhone app. Highly doubt it would be visible on any small screen Yes, yes it is. You click on the menu at the top right and hit "community info". Here's the link from the very first google hit for "reddit ios sidebar": https://www.reddit.com/r/help/comments/5vp9x6/how_to_access_sidebar_on_reddit_app/ &gt; 3: may be, but most of the side bar info in reddit are stuff people gloss over And that's a valid excuse how? &gt; 4: I know OP is not lazy because I was in his place a year ago. And it took me many hours to figure out where to start. And then when I decided on one place, I was so wrong it was hilarious. I was trying to use Wordpress to build a mobile app 😞 You know how I started? I googled "python tutorial" and "reddit python tutorial", then I read the sidebars and found a ton of super helpful information compiled by redditors about resources for learning python, how to apply it to specific disciplines, etc. And then I started trying to write simple things in python, and when I ran into problems, I googled them. It worked AMAZINGLY WELL. &gt; As OP has mentioned. He has read a lot of stuff online but didn’t understand it that is why he was here. Read my fucking original comment. Especially the part about &gt; On top of that, check out intro level comp sci courses at your local universities (if any) and consider auditing one if. Having a grounding in/understanding how to code is generally independent of a language, but more and more schools are offering python courses at the intro level. Also: OP's been a reddit ~4 times longer that you have. He fucking knows how reddit works.
Also, /r/learnpython has 124,928 users as of right now. I'll guarandamntee you that the overwhelming majority of them found that sub without posting lazy shit in r/python first.
@crabbone, You have helped me in a strange way, I used "VS" instead of "Visual Studio" next to my problem keywords in google search and found a nice link which had the solution: [https://github.com/Microsoft/PTVS/issues/106](https://github.com/Microsoft/PTVS/issues/106) Here is setting mentioned in this GitHub discussion, which allows me to step into code from Python libraries which I call from my main file: [https://i.imgur.com/TIu1aPg.png](https://i.imgur.com/TIu1aPg.png)
That's not the root of the question. Some human decided that was OK, and to ship like that, but why?
\*Django
last time I tried I could see the comments as well
they don't necessarily create a giant exe, you could use a separate zip file instead of embedding it into the exe
agreed, this just seems like someone that’s new to python would brag about without really knowing what to look for. 
First off, break the task down into smaller, more manageable parts. 1. Design the gui. 2. Build the gui components 3. Find out how you can get GPS data programmatically (via IP is an option, what are the pros and cons of that, via a separate device, what are those pros and cons, what about accessing a device's own GPS data, is that an option?) You can build on those, but it's best to take a large, complicated task and turn it into smaller easier tasks. 
Data classes use annotations to know what members should be added. It doesn't matter what the annotation is, but type hints tend to be the most useful.
Bas ass, I LOVE it. But... we all know that pd should be reserved for pandas ;)
If you want to become a data scientist, you're going to like need an advanced degree in computer science or statistics or another math degree. I don't want to discourage you, but data scientist is probably not in your future. That said, programming in general you need to tackle the logic first. I took a great course at a community college that tackled just that. We even used pyton for it (since it's so close to pseduo code. Our instructor would say, this is not a Python class, it's a pseduo code class- we just use Python to check it.
recaptcha? another kind? or custom?
Your pip version is out of date. Upgrade to pip 10.
From GitHub to "[opensourceprojects.org](https://opensourceprojects.org)". It's already happening.
I think I used decompyle. I punted my coworker some code who was convinced it worked and he ran it. Then I look at it and yeah...it was really good.
Perfectly balanced
What should class A: b do?
Do you have any thoughts as to why they aren't using projection mapping for this installation? Ambient light doesn't look too bad so maybe price? I've seen a handful of barcos put out a similar image in environments I perceived as brighter than that of the waterfall.
Automate the boring stuff is an excellent book - but it's really targeted at automating tasks and processes and not building application software.
That's some great frontend- I'm currently struggling with my own since I've never mucked around with JS/HTML/CSS for long. How are you creating and designing yours?
Python, exciting though it's not even new Come try it, when it says "self" it means you Python, programming's sweetest language Let Perl go; it's not 2002 Python Boat soon will be making another run The Python Boat promises arrays begin at zero, not one Sets? Of course! Adventure? What else with Raymond Hettinger! Programming wont hurt anymore When it's open source and dynamic at the core! Yes Python... Its Python... Python Boat soon will be making another run The Python Boat promises to clean up your memory when you're done Set a course for the breakers With iterators and generators Python won't hurt anyone Its got no pointers so you can't shoot your foot with a gun! Its Python... Its Python... Its Python... Its the Python Boat Its the Python Boat [With all due apologies to the lyrics of The Love Boat theme song] 
I like [this one](https://linux.pictures/projects/pythonhearted-picture) quite a bit. 
Jobs that are interviewing stupid little specific questions like this are ones you don't want anyway. 
Is this Windows? Linux? A box of crackers with an OS loaded? Maybe something like: http://www.cogsci.nl/forum/index.php?p=/discussion/2017/solved-parallel-port-trigger-stopping or http://forum.cogsci.nl/index.php?p=/discussion/3553/ubuntu-eeg-triggers-parallel-port might help?
I'm away from my computer, but I believe you do **dir (function-name)**.
Type annotations are the Python's current "cool feature". When designing data classes, I doubt much effort was made to avoid them. [Rich Hickey describes this](https://www.infoq.com/presentations/Simple-Made-Easy) as "complecting" two language features. His philosophy is that this should be avoided - that language designers should prefer "simple" to "easy". However, Python's philosophy is the opposite.
I recently had an interview question for which generators were perfect: print all strings of length n containing only balanced parens. Something along these lines: def parens(n): if n % 2 != 0: raise ValueError('n must be a multiple of 2') elif n == 0: yield '' else: for sub in parens(n-2): yield f'({sub})' yield f'(){sub}' yield f'{sub}()' for p in set(parens(10)): print(p) I've used this pattern for several entry level interview questions: define your cases in a generator and wrap in a set to dedupe.
If you're looking for available parameters and defaults, check out inspect (https://docs.python.org/3/library/inspect.html) For example: import inspect def learn_about_function(f): return inspect.getargspec(f)[0]
To find all the attributes of an object (bars, functions), call __dir__() on the object like so: `&gt;&gt;object.__dir__()`
It wasn't Nice enough ʘ︵ʘ
Lol ok buddy. Time to move onto the next post to rage at. The adults are talking and having a civilized and useful conversation. Bye.
David Beazley covers this topic amazingly. just check out any of his YouTube videos. I followed his scheme and I use coroutines (even today). The major benefits are the lack overhead associated with creation/destruction for frequently called “returning” functions using the stack, they can persist local variables allowing entry and exit points of execution, and they can be “piped” together. They’re like lightweight, chainable message passing objects with none of the overhead! They’re great and make processing super fast. Such a powerful language feature. I haven’t even mentioned “yield from”! Seriously, definitely worth a few hours of working through examples. OP, can you be more specifics? I am not sure memorizing a definition would help. It’s a language feature and a concept. 
Will it run on a machine that does not have python installed?
In the repl, I use `help`: &gt;&gt;&gt; help(open) open(...) open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None) -&gt; file object ... 
Should do, it bundles the interpreter in.
Aracde. 
&gt; f'( What does the ```f'``` do? string formatting? I tried your code in py2+3 but it would'nt run with the ```f``` before string. 
Okay, but how do I find out what options "newline" takes, for instance?
That's an [f-string](https://www.python.org/dev/peps/pep-0498/). It works like `str.format` but better. They were introduced in 3.6, and they're great.
I’m taking Python Bible course from Ziyad Yehia. Man Udemy is on a massive sale right now lol.
Yeah I just saw it. I like ```.format``` a lot so this looks awesome.
So that seems to work with open, but not with print I am also having trouble understanding the output. Sorry, I am very inexperienced.
The output of that is very confusing to me. &gt;&gt;&gt; dir(open) ['__call__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__text_signature__'] 
&gt; The output of that is very confusing to me. &gt; &gt; &gt;&gt;&gt; dir(open) &gt; ['__call__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__text_signature__']
Fyi, Udemy is always on massive sale it never ends. Just be very careful of spending your money there. You can get pretty much most of the stuff on youtube. You looking to learn basics or ? 
Yeah, me too. I'm also a "beginning" python user even though I've been using it for years. 
Impossible to read thanks to an awful fullscreen "BlockAdblock" ad...
print isn't really a function, it just looks like one. For print, you're passing it one or more objects print(my_string) print(my_num) print(my_string, my_num, my_custom_class_object) It uses the values of the .__repr__ method you see listed when do a "dir(my_object)"
Trying to develop a script to detect my favourite NSFW pic using machine learning. As there are many body parts involved, I feel like I'll need quite many samples to get decent data. 
In this case, it takes any string at all, which would depend on the file and filetype you're dealing with. Above the poster used `...` to skip the details.
Using `with` as a transform stack is a little devious. I don't know how well it works in practice, if there's a LOT of transforms, but it's an interesting idea. I second the suggestion that a crisp clean SVG render output would be very useful.
You need versioning tags and metadata in your life
I'm dumb, I didn't actually run it. This looks exactly like what I'm looking for! Thanks so much!
I'm a beginner and I'm trying to learn how to work with OOP. Actually is the very first time I really work with classes. It is somewhat simpler than I expected, but it doesn't mean it is easy, though. To learn it I set up this simple project: I like to listen to podcasts, but also listen to lectures that are available on youtube. I often download the video, convert it to mp3, upload the file to dropbox and create a rss file using the huffduff website. So my objective is to automate this process. What I'm trying to do is: - Download the audio (and eventually some infos like description or other stuff) directly from youtube using youtube-dl library. - Upload the file to dropbox and create a shareable link (and convert to direct link, which is kind of easy, since you just chance the domain name). - With the direct link, create an rss feed. I initially thought I was going to use Huff Duff services, but I don't quite know how to automate sending information to html forms, so I went in a different direction: Create my own RSS feed, using the minimal required tags so my app can get the info. I thought it was going to be quicker than it is. But God Dammit, sometimes it can be so frustrating! I'm learning everything from scratch, so I had to look how to call the youtube-dl api, how to connect with dropbox and send files, read files, manipulate the files once they are there and these things. The hardest part is to create my own valid XML file. So many nuances that I have to track... I was losing my mind trying to figure it out why the app was reading the rss but not loading the audio file. Only to, some hours later, realize that I was using the wrong tag "&lt;enclosureURL..." instead of "&lt;enclosure url="...". Don't ask me why, because I don't know! Yet at the same time it is so gratifying when you make a step forward!! I think I'm 80% there. I just need to polish some bits here and there and then connect all files I've created and make it work! 
&gt;It uses the values of the .repr method you see listed when do a "dir(my_object)" Sorry, I'm not sure what that refers to. Also, if print() isn't a function, what is it? And how would I know if something is or isn't a function?
In python 2, print is a statement (like "if" or "while"). It did become a function in python 3 which is why you now have to use the parentheses. It still doesn't work with inspect though.
Thanks!
1. I think you should look into /r/learnpython for better hands-on learning 2. Part of learning is definitely asking questions. However, Python comes with an _excellent_ plethora of online resources. That includes, but is not limited to its extensive [documentation](https://docs.python.org/3). Really look at the [Brief Tour](https://docs.python.org/3/tutorial/stdlib.html?highlight=docstring), [Python Tutorial](https://docs.python.org/3/tutorial/index.html) and [Library Reference](https://docs.python.org/3/library/index.html). 3. Some of the answers here are already inaccurate or confusing 4. There's no equivalent of a man in python, but there may be several options you can choose to use: - [inspect](https://docs.python.org/3/library/inspect.html) module, specifically the [signature method](https://docs.python.org/3/library/inspect.html#inspect.signature) - many python classes, methods and functions will have a [docstring](http://www.pythonforbeginners.com/basics/python-docstrings). If an object has data there, you can access it with something like: `object.__doc__` - dir and help (also mentioned in the brief tour above) - look in the documentation for the specific file you want, and then look at the code itself. 5. For someone brand new, may I recommend using an IDE? [Pycharm Community Edition](https://www.jetbrains.com/pycharm/download/download-thanks.html?code=PCC) is excellent for that (and free).
Man, should have listened to you a month ago. Microsoft buying github...did not see that coming. 
Oh? Types are useful huh?
It's cool that I can regress all these survival distributions with features.
Thanks! Like anything from Beazley, pure gold. For the lazy \-\-\&gt; [http://www.dabeaz.com/generators/](http://www.dabeaz.com/generators/)
`dir(open)` lists the methods of the `open` object. Although you think of open as a function, a function is just a type of object that has methods of its own, since everything is an object. Most of the methods exposed by `dir`, however, are not useful to typical users. 
Python is a general-purpose programming language. If I need to mangle some text files to get data out of them, I can do that. If I need to talk to a REST API, I can do that. If I need to plot a graph or make an animation, I can do that. If I need to scrape a website, I can do that. If I need access to industry-standard deep learning libraries, I've got them; if I need computer vision or linear algebra, I've got them. If I need to interface with dozens of other languages, databases, or hundreds of file formats, I can do that. If I want to do this while basically writing pseudocode, with no lengthy compile step and a useful REPL, I can do that. That is why python is used for data science.
If you cython the code it basically gets obfuscated into c and then compiled to machine code. Pretty legit. 
We adopt a very simple book [starting out with python 4th edition](https://www.pearson.com/us/higher-education/program/Gaddis-Starting-Out-with-Python-Plus-My-Lab-Programming-with-Pearson-e-Text-Access-Card-Package-4th-Edition/PGM335157.html) as the textbook. I find students who don’t have any prior experience in programming could understand the material very well. It covers everything you need except lambda, map, and filter. The book is well organized and I think it is very good for beginners
Doing: help(function_name) at the python prompt may show some information.
The same as what dataclasses do now. Type annotations don't actually do anything (for now)
I mean in a non-dataclass context.
Have you looked at the [Godot Game Engine](https://godotengine.org)? It's Free/Open Source, 2D and 3D. The native scripting language GDScript is very Python like and you can also program it in Python, C++, C#, etc. Might be a bit overkill for what you're looking for though.
No, the two features are not complected: https://www.reddit.com/r/Python/comments/8pjq2t/optional_static_typing_for_python_guido_van/e0cqlig/ 
Snakes on a... boat?
I hate to put it out there, but I have highly technical friends with visual difficulties (one wholly blind at this point, and one who'll get there if optic prosthetics don't improve significantly first), and the number one problem they have is syntactic whitespace. Sure, there's python with braces, but contemplate how you'd collaborate with a py project that doesn't use them.
Thanks for the write up. I'm working on implementing threading (two threads) for one specific task, but that is the only place that I can utilize it. I'm using Python 3, so I'm working from this tutorial: https://www.youtube.com/watch?v=NwH0HvMI4EA
I could really use a do-what-I-mean-not-what-I-say module. 
I'm not saying that my code is 100% optimized to the fullest extent, but I'll be making a purchase soon for a dedicated computer. I don't want to have to purchase a Raspberry Pi, upgrade to a real computer, then have to change the quad core processor for a faster clockspeed dual core, etc.. I'd rather just purchase the right hardware from the start. I can always update the code in the future, but updating the computer means money wasted. Even if by upgrading from a Raspberry Pi to a $1000 machine will produce a gain of 1% in speed it is worth it to me. I'm just trying to figure out what matters and what doesn't? Hard drive speed (SSD) or is everything stored in RAM when the program is running, more cores at a lower clock speed or less cores with a higher clock speed, does a certain chipset offer advantages when running Python, etc...
and how are you calculating the movement of eyes, is it some kind of algorithm or just hit and trial method?
assigning one list to another doesn’t give you two different lists. use: list_b = list(list_b) 
typo: list_b = list(list_a) 
You can edit your comments, you know! 🙃
Thanks man for your response! I really appreciate it.
FYI, if you have sublists within your list [[a, b], [c, d]], this the sublists will end up with the same problem you started with. In this case, try out copy.deepcopy()
Personal choice.
I have made a formula which scales down the coordinates of your face to her eyes
That's like asking people whether they prefer putting their right or left leg into their pants first... It really is just a matter of personal choice; however, a common recommendation is to use double quotes (a few style guides I've seen) primarily, but most people do the opposite because it saves them having to hold down shift to get it. I come from a C environment so strings are almost always double quotes, but single characters are single quotes. 
I'm creating a (hopefully) non-shitty text adventure with rooms, exits, items, inventory, enemies and NPC's. Like the good old days! It is heavily object-oriented and customizable, so in the future I may be able to make other adventures based on the same game engine. I'm making it with Python 3.6.5.
As a below commentor noted it’s basically impossible now due to Reddit changing how their API searches for things. If you really want to try check out r/pushift .
I'll keep that in mind. Does copy.deepcopy() have any downsides? Thanks!
Being consistent is the best practice. I personally like double quotes just because stray single quotes seem more common. Like in "It's its unless you mean it is". 
Personally, single quotes for internal strings, like the name of a data file, and double quotes for presentation strings the user might see, like a warning message. Never triple single quotes for multiline. 
Speed. It's a lot slower than a shallow copy.
Python was my first language, and I have always used doubles. Thanks for your response! It is nice to know that I am going with the style guides.
Python can solve that problem if you have home automation hardware that puts the devices on a common IP network.
I've never seen triple double quotes for multiline before, only triple single quotes. Out of curiosity, what is the problem with using triple single quotes? Thanks!
Python is already most ideal. Things like string and array slicing, list comprehensions, packages, etc. are so practical and helpful in programming that other languages are also trying to emulate them now. In fact, this question should be asked in the community of PHP and Java devs in order to make more sense.
Can't they tackle the whitespace issues with IDE theming? IDEs these days have all kinds of theming options like night/dark modes and various coloring options.
Do something related to Software Design and Development. Maybe make it a project.
A MacBook pro with function keys, a gpu and a decent keyboard.
&gt; It doesn't matter what the annotation is, but type hints tend to be the most useful. In fact, [uses for annotations incompatible with [PEP 484 -- Type Hints] should be considered deprecated](https://www.python.org/dev/peps/pep-0563/#non-typing-usage-of-annotations).
Get rid of the 80 character screen width thing. I don't care if "PEP8 says so", nor do I care if half the world uses Vim and needs their hard-coded 80char splits, it's no excuse for hard coding the line breaks into the src. If anything, you should have a client-side solution to wrapping your own view, not forcing everyone else to use your stupid limitations. It's like the "put the toilet seat down" argument. Absolute retarded bullshit.
blind people use screenreaders, so it'd be like (by default) `def f open paren close paren colon new line return x new line` I imagine you could make a screen reader that was smarter than that but it's still like `def f open paren close paren colon new line 4 indent spaces return x`
It looked like in one of the videos that the waterfall goes down a level. So, it has to go past a walkway and it would be incredibly difficult if not impossible, to line the projectors in a way to have a seamless mating of the projectors. Plus in a ship the movement could cause the projectors to become unaligned whereas monitors are bolted to a wall and firmly in place.
How do I join this I'm on mobile and the link data is either gone or set to private. Also Mudcrab is a douche lol
Probably namespaces like in Java so a module can span multiple files without circular imports. 
this is the first valid argument i've heard against significant whitespace...hrm...but then again why is a bracket easier to identify than a gap? 
That's one of the few guidelines that is in PEP 8: &gt;For triple-quoted strings, always use double quote characters to be consistent with the docstring convention in PEP 257. 
QBasic, way back in the day, would let you step through code one line at a time, set break points, watch variables, and set break conditions while watching variables. Are there any Python tools that allow these capabilities? 
Thanks..
1: /r/learnpython 2: read the sidebar 3: VSCode and PyCharm are excellent editors and IDEs respectively. 4: &gt; How to set variables to be usable in multiple Instances without needing to reinitialize it(basically global variables) Uh. More information needed. Probably text/config files, if I'm understanding you correctly. There are a ton of tutorials on google about connecting to various smart devices around the home. Google: python and the name of whatever you're trying to control.
You could pee sitting down so you'd never have to lift it in the first place.
Can't see the side bar almost always exclusive on mobile Reddit I don't want to connect to the devides just yet, I've already seen that what I would like is just being able to connect to a device out side of where the program is running like basic level turning a light on or off etc
This will depend more on if the device developer have created APIs with the right permissions. Plenty device developers do so, where they hide the exact manner in which the home Wi-Fi or a Bluetooth connection handle the permissions, and you instead can work at the application layer. One instructive example is the [Phillips Hue light bulb](https://www.developers.meethue.com/philips-hue-api) that can be instructed via REST API, for which python has nice libraries to deal with. If you on the other hand ask if you can figure out without admin privileges to the router or some interface on the device, if said device is connected by running a script on say your laptop connected to the home router, would be unlikely. That would be too easy to hack so you will need to deal with permissions, sending passwords etc. Certainly possible, but if you have all that, I'm not sure what problem remains to be solved. If you want to go advanced you should search for so called IP packet sniffers. When debugging certain IoT devices (or hacking them) these are helpful, but it's not like you receive anything that is trivial to interpret as a message from your fridge, but indirectly you might figure things out. I haven't coded these in python so I can't help on that. 
Check your router for their MAC addresses.
&gt; Can't see the side bar almost always exclusive on mobile Reddit google the name of your reddit app and "sidebar". As for devices, I still don't understand wtf you want to do. If you're trying to interact with circuits, you'll need something that can do GPIO like a raspberry pi or an arduino. If you're trying to turn on a house light, you'll need a smart outlet/device.
Data classes are dependent on annotations and, as I've posted above, annotations are specifically for type hints. The two features certainly seem "entwined" to me! But, if you don't agree with my assessment, here it is from Guido himself: "[we must see dataclasses as a close friend of typing](https://github.com/ericvsmith/dataclasses/issues/14#issuecomment-308560026)".
Can I use this formula? I will just use it in a similar project to add to my portfolio.
Pdb
Did it specify resolution in the article? (I may have missed it). I know we've overcome some of the limitations by setting displays to something like 1360*768. Also depending on how it's playing you can remap it to fit in a square almost, but the displays will look like it's flowing. Again, all dependent on what software they're running. 
You have to mention me in acknowledgements (my GitHub profile) if you agree to this, then go ahead
Out of curiosity and not trying to start an OS war, what do you like about MacBooks that makes you want one if they had these few changes? I just find that most people with macs regret getting one. Not trying to bash anyone that prefers Mac, just like hearing people's opinions. 
I’m not sure about him, but I’m into learning basics. Any starting points? Reference: I have trouble coding the dice roll code.. 
Looks fantastic!
This post is better suited for r/learnpython 
Now that you mention it, I've never seen an editor that wraps AND indents. If that were more common, maybe you'd have a point. As it is, I like side-by-side editors, and 80 chars works really well on a wide variety of setups.
So does this do compiler optimization? Or is this still just Type Hinting?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) and found these results which might be useful: 1. [Extract filename and extension in Bash](https://stackoverflow.com/questions/965053/extract-filename-and-extension-in-bash) 2. [What are metaclasses in Python?](https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python/6581949#6581949) 3. [How to merge two dictionaries in a single expression?](https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression/26853961#26853961) Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative)
Aliasing is a common issue when learning python. As previous comments have shown. Saying list a=b then changing b will also change a because they point to the same spot in memory. You can fix this by doing list(a), b=a[:], or, if working on more complex lists, I recommend importing copy and then b = copy.deepcopy(a).
Pycharm has a great debugger
For initial detection, you might try a [homography](https://docs.opencv.org/2.4/doc/tutorials/features2d/feature_homography/feature_homography.html) between a template of the triangle and the game screen. This is really slow, so once you find it, you should also use a tracker instead of detecting it new with each frame. Opencv has [a great tutorial on object tracking](https://www.learnopencv.com/object-tracking-using-opencv-cpp-python/). Examples here are in c++, but you should be able to use the python opencv library to implement all of them.
Maybe is there any way to read the games memory? There’s probably pointers to the angle the triangle is at and then you can use that to calculate where to go
Both so that gives me a place to start. If I create a variable in one class and want to use the same one in another class Also forgot to mention I've seen the side bar aplently I'm not looking for that in this particular instance for this question I wanted an actual dialogue, article, tutorial even that would show me or teach me what I'm looking for Also goes for the learn Python code comment as well I'm looking for a quick "this is how you connect multiple files" not sifting through a bunch of links. Again I understand a good portion of the laungague I'm just missing certain core parts I'd like to get refilled in on. Thank you for the links just in case anyone else needs them and the other answers were helpful as well
This is specifically for docstrings, as it says. In fact, I tend to use triple single quotes outside of docstrings for this same reason.
Predictive text for IDEs, but like more intelligent than it is now
Yes, PyCharm: https://www.jetbrains.com/pycharm/
Of course I'll mention you. I'll send you a link to my GitHub.
Jose Potilla’s courses are pretty good, well executed and concise. These are the ones I recommend because they are cheap, cover Python 3.6 and use Jupyter for most of the coding. I’m sure you can find free course that cover the same material, but for $10, he does a good job.
Free pizza for coding in Python would really help me out.
That is a very strange sentence, and to be honest I'm not convinced it isn't a typo. The docstring convention it references only concerns itself with docstrings (as its name implies) -- &gt; For consistency, always use `"""triple doublequotes"""` around docstrings. -- and makes no mention of triple-quoted strings elsewhere. (In fact, I tend to use triple single quotes in all places but docstrings just to keep them distinct)
In Python, while debugging, it's not possible to peer inside the first 5 or so values of a generator. In other debuggers, you can watch/peer into what's in a generator (without actually iterating over the generator such that the value is discarded.) Basically, you can see what's coming as you're attempting to debug something before you get to those lines. Sure, you can often coerce something into a list, but then you have to remove that line later. Being able to peek into what's in the first few `next()`s of a generator in the debugger would be immensely useful.
Automatic test creation.
Unfortunately, this is not the place to be spoon-fed information. You were already directed to the appropriate subreddit for these sorts of things. For connecting multiple files, you want to google something like "python how to use modules". And I just saw this in another thread: &gt; How do I join this I'm on mobile and the link data is either gone or set to private. Also Mudclub is a douche lol &gt; Edit: Adjust the name so mean old Mudclub with come get me &gt; Update 2 I saw what was wrong he's probably coming for me Good luck.
pdb, pudb, ipdb, VSCode debugger, PyCharm debugger, ...
I personally dislike the way you handle keys in dictionaries and have to hardcode the keys as strings. I get it that not all languages are like that, but coming from c-style languages it's a bit of a pet peve
have you looked at razer laptops? They're basically pimped out MacBooks. I don't think it's too tough to get MacOS on them either. The new razer's even have a glass trackpad 👌 the old trackpad was trash
Couldn't you use IDE theming to replace control whitespace with control characters like brackets? The IDE would interpret the whitespace as brackets for what's displayed, but they would still be the correct whitespace for collaborating.
Only because screen readers ignore one of them by default.
Hey don't be a douche to beginners and people who want to learn ;) Thanks for being half decent 
Virtualenvs still aren't what they need to be and are pretty much a hack on how python works.
I guess I didn’t swipe far enough to find the edit option :) 
Static typing with inference, or type annotations....I've been a Typescript and Go developer for the past several years, and I have to say that static typing makes development so much faster int he long run. I appreciate Typescript's optional typing as well. With that said, it has to be complete enough of a type system to be useful. Having type defs, interfaces, generic functions, etc, all help quite a bit.
As far as checking if they're connected to the network, there's a really easy way: Step 1: set up your router to give them a static IP address. Step 2: ping that IP address. Step 3: identify success or failure of said ping. Controlling them is a bit more involved. Generally I hook into an IFTTT interface, because it's easy. It's possible they have a developer API floating around out there, but that's a bit much to hope for in most cases. Alternatively, I use WeMo smart plugs for a lot of that (e.g., turning on a fan when the temperature gets too warm, keeping my fermenting beer at a specific temperature, etc.)
you can use other hashable objects in dictionaries. What's the other way? I'm not familiar with C.
Usability and sustainability. 
any hashable type can be used for dict keys. also you don't have to hard code them
go read the first line of PEP8. If you want to write more than 80 characters in a line do it what is stopping you?
vim doesn't care how long your lines are. 
I started from scratch by taking MIT 600.1x on Edx. I wouldn't regret it for a second. It have a steep learning path though. But learning CS is so essential at the beginning in my humble opinion. 
A big problem with what you're proposing is that generators can have side effects like this: queue = [1,2,3,4] def gen1(): while queue: yield queue.pop() def gen2(): while queue: yield -1*queue.pop() a, b = gen1(), gen2() pass # set breakpoint here assert list(zip(a,b)) == [(4, -3), (2, -1)] If your debugger tries to get the first few values of the generators `a` and `b`, it will alter the outcome of the program, even if it has some temporary storage to re-output the first few values, since both generators modify `queue` when they run.
I’d fucking love to get Clojure style keywords in Python. They make getting and setting dicta so easy, they’re easier to read and write than raw strings, and they’re interned which makes them fast as hell. 
I find exactly the opposite – that most people who buy Macs like them. "It just works."
Problem being that Unix systems on Windows laptops have a habit of killing batteries. Being a huge Linux fanboy, I wish it was possible.
&gt; A big problem with what you're proposing is that Oh, I didn't say it would be an easy problem to solve, but I know that Microsoft's debugger can look into IEnumerables (which could be lazily evaluated queries or the equivalent of Python's generators), to show you what's coming down the pike. It's a verrrrry useful feature.
&gt; I just find that most people with macs regret getting one. Everyone at my job uses a mac All of our clients use macs I know literally no one who regrets getting a mac you are just full of shit They are expensive but are amazing development machines Windows is an absolute joke of a system and Linux is just too prone to have issues
The Unix terminal while still having a decent battery life.
It’s unix-like so I have a real terminal, my package manager works great, it can run more memory-hogging pro apps at once (I rarely ever close photoshop and illustrator and usually have at least three web browsers open) without me feeling the memory pressure because the swap and compression is incredible now. (I have a fully loaded 2015 MBP though). If anything goes wrong with it Apple fixes it for free within hours so I don’t have any downtime. If you mention you’re a contractor or freelance they flag your account and treat you even better. They last forever anyway, my little backup laptop is a 2011 air that’s still awesome for working on airplanes and stuff. I’ve had the opposite experience, almost everyone I know uses and loves macs. They’re mostly developers and tech people though. Mac laptops aren’t as much fun necessarily, I run windows on one of mine to play games and stuff, but they just simply get more work done with less downtime so if you earn your living hourly on your own computer, it’s the better bet in my opinion. 
Biggest issue for me is the GIL. I do mostly machine learning, and we waste an incredible amount of time figuring out workarounds (eg Tensorflow, or rewriting parts in C++). 
The default repr() of a string uses single quotes. I therefore tend to think of them as the “canonical” quotes. But it is a matter of style. 
I have mentioned your github profile in Readme. https://github.com/gurneesh/Face_track_python3
What distro you running?
Make 3.x backwards 2.x compatible 100% without issues
I run Arch.
Auto complete dictionary keys, pandas column names 
While I agree with your general sentiment, that pep (and many others) is a recommendation rather than a rule.
Packaging to \*.exe / installers, for people without Python in their computers. Also including data files in the package is quite troublesome. Sometimes, true power comes from the data files, really. 
Add more built in functions. 
Never going to happen. Guido's requirements for a solution are basically impossible to achieve. At least C++ got a little better with regard to threads in C++11. Maybe you could look into Go+Gonum.
Including pipenv?
PyPi/pip is not great. It's amazing that there is a de-facto package manager but there are a bunch of annoying quirks. * Can't view dependencies before installing the package. * Can't view dependencies on the PyPi website. * The output from `pip freeze` is a total mess. Key dependencies? Dependencies for dependencies? Who knows. * Because of the above, you really have to keep track of your dependencies manually (maybe actually good practise?) * Packages further down in `requirements.txt` seems to override the dependencies from above. Need `protobuf==3.0.0` in your first entry but the latter needs `protobuf&gt;=3.5.0`? Latter wins out with no warning. * Dealing with dependency conflicts is hard/impossible. I honestly wouldn't mind some legitimate support for vendored dependencies (e.g., node style) just to save the hassle. Comes with other problems, though, unforuntately.
Are you pretending a `dict` is a `struct`? If you want to take advantage of Python's static analysis, you need to ensure that all values in your map have the same type, but that doesn't sound like what you're doing.
Any modern IDE will let you do this. VS Code, PyCharm, etc.
Aka static analysis :)
Thanks, I’m using http://getbootstrap.com as a base style sheet and then customising that by overriding with my own style sheet.
What do you know about regex? Do you know how to say "any character repeated for as long as possible"?
Tbh I don't know much about regex expressions, I always look for expressions other people have made and just use those. Normally I find what I am looking for but not this time :/, hence this post. As far as using expressions, I can do it to an extent... I mostly use re.match(), re.sub(), and re.compile() for when I need to re-use that expression.
documentation that always has a cut out very small simple example that only includes the current element in question. I hate when the examples are whole programs that only incorporate the topic I am looking up.
Pipenv for what understood adds even more cumbersomeness without actually solving anything. Dep version locking is not the real issue IMHO
&lt;script type=“application/python”&gt;document.get_element_by_id(‘content’).inner_html = ‘Hello World’&lt;/script&gt; I’d also say get rid of the html too, just good ole python and json.
that was my main reason for buying a mac! i do music stuff, and the setup required for plugins/audio systems is so much more modular and contained in mac. whenever i want to do something, i make the changes and... it just works. i later realized how relevant it is outside of music too, s/o to actual package managers 🙏
Seriously? The standard library is immense! What did you have in mind? 
Better async library (asyncio is terrible).
Im not sure whats meant by cumbursomeness but if i can run pipenv run python3 blah.py in one go and not have to be fannying about with activating venv then it solves all my problems of automated work.
I like that I have a unix terminal, but a working OS.
What's wrong with multiprocessing?
I would make a Python compiler so Python wouldn't be so slow and I would never have to work with anything but Python ever again.
Idk why you're getting downvoted. I've been using Windows computers since forever and when I can afford a mbp I intend go get one it's kind of hard to argue that they're not better as a developers environment then Windows. 
With a DE?
I came from 20+ years of development with static types, and my experience was the opposite: dynamic typing cuts through so much scaffolding and housekeeping and appeasing a compiler. Large parts of statically typed languages are devoted to getting around said static typing, from casting to function overloading (yes, you actually write the same #$*$&amp;# function multiple times rather than acknowledge the superiority of static typing).
Just wrap it?
Packers have its problems too. You need to spend at least several hours if your project using complex external libraries. I myself had the problems with matplotlib and tcl/tk.
An ap that would pick the exact right next song to play so you didn't have to mess with the playlist. 
RemindMe! 1 week
I will be messaging you on [**2018-06-16 06:38:27 UTC**](http://www.wolframalpha.com/input/?i=2018-06-16 06:38:27 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/8ppvaf/to_python_developers_if_someone_could_make_any/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/8ppvaf/to_python_developers_if_someone_could_make_any/]%0A%0ARemindMe! 1 week) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Recommend to **avoid classes** in python/ML tutorials if possible.
There's already a programming language with that functionality. It's called JavaScript, look it up.
# Dependency resolution and packaging
U have anaconda
Remove 99% of all unnecessary keywords, such as len or file, and make Python an object oriented language instead.
Why Arch if I may ask? Never used anything other than Ubuntu and Kali. I use Ubuntu for my personal and project stuff and Kali for a security class I took last semester.
read again, never said it was a rule you stupid fuck
idiots like you who quote pep8
Memory copies to start.
Plz give pip the ability to update all installed packages in one go for the love of all that is holy. 
I wish you luck then! I just wanted to point out that there are other ways, not to change your mind, but because extra knowledge is never a bad thing :). I've personally tried to like Fire because the idea is really cool, that you don't even have to do anything special to get it to work. But a lot of the scripts I write for my purposes are usually run on minimal system python installations or custom envs that adding another dependency is just extra bloat. So I'm stuck with argparse.
It's much nicer than that. You don't have to manually manage your venv with pipenv. All you do is this (in a new directory): pipenv install library1 library2 library3 # you can even use it with no libraries pipenv shell and that's it. The only problem is that `pipenv install` seems to take forever
Pycharm does this inconsistently.
Auto correction/conversation of Java (and similar languages) to Python in IDE. For example, code blocks to proper tabs, semi colons erased, for loops conveyed to for i in range, etc. Would make transitioning easier if it showed me the correct way to write stuff. Eventually I would get it (like I do now). 
Might be easier to update screen readers to announce leading space indents.
import re word = "some text {data I want keep} some other text" pattern = re.compile(r"[{].*[}]") result = re.findall(pattern, word) if result: print(result) I might have it wrong but that is the gist of it. There are online testers you can use until it picks up on what you want.
Check out pudb, though pdb is the standard library one that comes with python. But in general you are just describing your everyday debugger and all languages will have one.
I dig some of the stuff they are trying to do with it, it seems to be heading in a direction that might be appropriate, but its still yet another wrapper for virtualenv's the way they've always been. pipenv seems to make everything more verbose.
Sounds like a opportunity for a screen-reader to intelligently report block indentation levels. Does anything exist like that already?
I like https://github.com/jazzband/pip-tools
tenary if, switch-case, inline def. Especially inline def, functions are treated as first-class citizens but you need to start a newline to define?
I haven't had a chance to mess with asyncio much yet, but it seems horribly unintuitive and the syntax starts looking real nasty with the `async def` and `await` stuff. Why are there like 3 functions you have to call to even trigger a basic coroutine? Messing with gevent or celery was always so much easier. Is there some technical issue with just implementing a coroutine syntax through a decorator or something? Why not just have something like this @async def get_stuff(...): return ... job1 = get_stuff.async(...) job2 = get_stuff.async(...) result1 = job1.wait() result2 = job2.wait()
I would highly suggest that you take the time to learn regular expressions. I reccomend using https://regex101.com/ to test out your regular expressions while you're learning - it will show you how it's matching and what it's doing.
Nim is close to Python in syntax... might be worth a look.
Python is extremely slow, with or without GIL, why would you do ML in it? I'd assume every ML library would be written in something else and you only do the setup in python. Also, check out cython. It's easy to write and you can drop GIL, depending on your problem. Just can't use python lib in the nogil sections, obviously.
Been liking Wing for this. 
http://cython.org/
(going to move to r/learnpython in 2 minutes)
I think I saw a talk this/last year that there is ongoing work on being able to start multiple python interpreters within the same process, which would more or less solve some GIL problems.
I like the possibility of non-oop. Not all scripts are so complex.
Python is great... but if you have not had trouble with Python's ecosystem (and this is true of any sufficiently complex system), you have not spent enough time with it yet. There are bunch of issues... its slow speed, bad packaging of apps, etc.
It sorta reminds me of those meal recipes that have seven pages of life story about the time at Alan's parents summer cottage where Susan cooked up the most delightful little cookies and the smell of summer was in the air and I was able for just a day forget about the affair that Alan had had and just enjoy the joyful smells that were aminating from Susan's kitchen, even though in the back of my mind Alan's gambling problem was still a worry I mean he spent an awful lot this month and has been down a few months now but at that moment the most important thing wasn't Alan's gambling, his affair or thr cost of our little Billy's ballet lessons it was just the sweet smell of Susan's cookies, here's the recipe:
When I hit a "NoneType has no attribute" error, I think static typing is better But then when I hit an "Expected List, got NonEmptyList" error, I think dynamic typing is better. 
Do you really need switch-case? A list or dict often does the job much better.
Use something like this then: class AttributeDict(dict): __getattr__ = dict.__getitem__ __setattr__ = dict.__setitem__ __delattr__ = dict.__setitem__ 
Readability. Lists and dicts are fine but switch-case is more intuitive because a list/dict statement put the variable at the end.
Try pipenv it solves alot of the issues you've pointed out.
I haven't tried it, but I think I'd like having just interfaces typed, i.e. function arguments and return values. 
There is, or was, a project that did that quite OK.
Personally, I use Arch for its rolling release format. It tends to have the latest version of stuff in repos well before my Debian install. 
Don't Lambda functions fulfil those requirements? 
PyPy kind of, maybe?
I'm not super knowledgeable about Microsoft's debugger, but [it looks like they don't address the problem of side effects in generators, they just ignore it.](https://msdn.microsoft.com/en-us/library/a7a250bs.aspx) If you want to do something like Microsoft does and look into an iterator without regard to side effects, you can use [itertools.tee](https://docs.python.org/3/library/itertools.html#itertools.tee): def gen(): yield from range(10) g = gen() if __debug__: g, g_for_debugger = itertools.tee(g) # prints [0, 1, 2] print(list(itertools.islice(g_for_debugger, 0, 3))) for i in g: # iterates over g as normal pass
Python 3.5 added type annotations, you can check them out here: https://docs.python.org/3/library/typing.html
Optional chaining operator would be nice to have: I.e. instead of: try: name = article.author.name except AttributeError: name = None Write like this: name = article?.author?.name See https://en.wikipedia.org/wiki/Safe_navigation_operator
Do PyInstaller / py2exe work for your purposes? I haven't tried them myself, just saw them mentioned elsewhere...
try sth like this ' entryVar = StringVar() def callback(): x = entryVar.get() return x entry = tkinter.Entry(window, textvariable=entryVar) entry.pack() button = tkinter.Button(window, text="get", command=callback) button.pack() '
I disagree on readability. Switch-case is more verbose and has a lot of repeated code, and this gets worse the more cases you have.
Anaconda is sort of buggy in my opinion.
`r"\{([^}]*)\}"`
Nuitka is a compiler for python. Very early in development but I have found it works really well
&amp;#37; is not as expressive as .format() I exclusively teach .format() for now. f\-strings are still very new. Maybe next year I'll start to teach 3.6\+ instead of 3.4\+
Jupyter does that. But jupyter is kind of cheating with regard to autocompletion... 
If you want interfaces, you can use the abc module.
Python has alread object oriented capabilities. And it has the power to also be used in a functional way. This is a win-win for me as I can choose what fits the job best.
Have you heard of [Nuitka](http://nuitka.net/)?
They do work but just kind of. I have used these only for few things but they always needed significant messing around to get working. So they just seemed unreliable to me.
I didn't say that it does lack object orientation. However, all those keywords can easily be changed into object methods, e.g. len. And I mean Proberaum object methods, not those obfuscating pseudo-hidden underscore methods.
Packaging an application for distribution on systems that probably do not already have Python installed is cumbersone and if you are using compiled extensions often error-prone. While there are improvements for developers (wheels for package distribution) bringing software to an end-user never feels right. Currently packaging software for each OS separately works the best but I'd love to have a way to just bundle up an binary and distribute it on all my Windows/Linux systems without having to build it for each and everyone.
Thank you in advance for your honest book review
Also the locking seems to only work with one Python version. Makes it kinda useless if you want to reuse one for multiple versions.
A nice package manager that works like npm
Excuse me, but I used it and found it more obfuscating then problem-solving. It's not something you see in the class signature and immediately know what's going on inside of the class, clearly no. I instead kept on implementing my list and dict class member methods on my own, and in addition I had to document the class signature to communicate what I did. It's not a concise object-oriented solution anyhow.
I wish I did not have to install the c++ compiler for python packages when i need to use paramiko on another computer.
True point, but also Kotlin has that. It's not a must for being OO as you see.
Agreed. Not good for proper deployments.
Would you be having the project somewhere? I'd really use some help working on this. And I agree, working with the different names is insanely difficult
Visual Python, in the sense of Visual Basic. It's sad that after all those years Python is still behind VB 6 in regards of effective GUI development.
For some values of “quite OK”... pyinstaller is not trivial to set up. There should be a simple command in stdlib to get an executable. A lot of other languages have this, so it’s not rocket science. The main obstacle seems to be that there aren’t enough Windows skills in core-dev teams, but they also won’t ship anything without good Windows support, so it’s a catch-22.
Currently developing a multi-platform (windows, macOS, Linux), backup solution using Python and I'm using PyInstaller for freezing the code into a portable package. Initially, it seem a little hacky, but once you start using it and figuring out the little things, it works great!
there's `more_itertools.peekable`, which allows you to peek at the upcoming elements, and caches the results, so the side-effects are only executed once. 
I second that
It's really annoying when you have a fresh install of Python (2.7 or 3.x, I've seen it with both), and you go to use Pip, and for whatever reason the installation just outright doesn't work. It's even worse if it's a "curated" alternative like Anaconda. If a package is going to be on the repository, it should be able to install to a typical fresh installation. Furthermore, if I have a standard install with nothing "weird' going on, there is no reason the install should fail because someone somewhere decided to change the way downloadable packages were being stored. There is no excuse for [ASE](https://wiki.fysik.dtu.dk/ase/install.html), as an example, to fail to install to a relatively new (but not day-one-fresh) install of Anaconda because the devs just decided to change the way the archive was handled a couple months ago. That's a terrible UX.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://wiki.fysik.dtu.dk/ase/install.html) - Previous text "ASE" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20e0dh085) 
For me pyinstaller works perfectly, but I really wish it could package cross-platform, so I wouldn't have to boot up the VM every time I need to make an executable.
I’ve actually found it ok for my needs - setting up a simple custom-protocol server was a breeze, no need to mess with sockets and threads. For that use-case, it succeeds fairly well. I admit the async landscape is vast and there is probably an area of more advanced usage that is not served well enough yet.
Just in this second two votes of your disappeared. Looks like here a lot people that downvote everything with pipenv. 🤔
This. The elegance, modularity and scalability of a dict of callables is dramatically superior to switch/case. For starter, no “oops, forgot to `break`” bugs; more compact code; isolated functions that tend to do the minimum amount of operations strictly necessary and avoid side-effects; the switch key can be of any type; etc etc.
i think its because pipenv does _not_ solve most of op's issues. pretty much only the pip freeze complaint...
I disagree, it’s too late for that. Looking back, providing a `-py2`switch in py3 could have made a difference... 10 years ago. But it would have drained dev resources, because effectively maintaining and shipping two versions at once would have been a massive undertaking.
Find a solution to make python faster in some cases, and make this solution the official solution. Type annotation are not making code faster, yet I think it should. I know python is not meant for speed, but I wish it would.
Pipenv
By the way, have you heard about [Syncthing](https://syncthing.net/)?
There are beta Python bindings. If you don't need compiled libraries from pip, you're good to go already 
It's not a big profound thing. I just would like to be able to hover over things and get a brief explanation of what they are. Say I have a variable called x x = ['cake', 'samantha', 'invite', 'me', 'to', 'the','wedding','you','bitch'] It would be cool to see what this array contains, y know? But this also isn't a Python-specific request.
That's really a fallacy and not the case. People don't "downvote everything with pipenv"...the comment isn't true because pipenv really *doesn't* solve *any* of the issues the main comment mentioned, even though the reply says it solves most. Literally bullet by bullet &gt; * Can't view dependencies before installing the package. Nope, can't do that with Pipenv &gt; * Can't view dependencies on the PyPi website. Literally unrelated to pipenv &gt; * The output from `pip freeze` is a total mess. Key dependencies? Dependencies for dependencies? Who knows. Pipfiles don't make any proper distinction here either. It tries, or seems to try, but still fails quite miserably. Not to mention the real "full" requirements.txt is the Pipfile.lock (because of the security hashes) and that is, by the standard, not human readable. &gt; * Because of the above, you really have to keep track of your dependencies manually (maybe actually good practise?) If the above are broken, regardless of how, so will this. &gt; * Packages further down in `requirements.txt` seems to override the dependencies from above. Need `protobuf==3.0.0` in your first entry but the latter needs `protobuf&gt;=3.5.0`? Latter wins out with no warning. Same problem with pipenv AFAIK because this is a matter of package dependency resolution and I am pretty sure pipenv uses the same resolution algorithm as pip. &gt; * Dealing with dependency conflicts is hard/impossible. Literally no solution no matter what dependency spec you use. This is less of a problem with the dependency spec and tool and more the inability to keep sister packages on a system separate of their dependencies (and this part pipenv solves) and the dependencies of one familial unit separate from it's dependent/future down the line dependent, which it doesn't solve (unless you decide to clone the repo, install it in editable mode, then use pipenv to install from the local clone, which no one does, is a waste of space, and ends up causing it's own problems). &gt; * If a dependency includes something else (e.g., `requests`), being able to do `import requests` no bother makes me feel uneasy. No way to tell where it's come from without double checking your `requirements.txt`. Literally unrelated to pipenv. This isn't a matter of requests being a dependent of some package and being uneasy having it, there's unease in vendored packages as well, which is arguably a more common scenario for this to occur. &gt; * PyPi package names not matching the importable names. (i.e., `PyYaml` vs `import yaml`) Literally not pipenv. &gt; * No warning for missing system dependencies, or calling out in general (e.g., `unixodbc`) This I don't fully understand, but regardless of what it could mean, pipenv does not do. It's great that people use pipenv. Or poetry. Or pip tools. Or whatthefuckever. But none of them solve all or even many of the things mentioned. And circlejerking around any one tool won't change that fact. Adding to the tool will. But when you do you get told your request is out of scope. And when you go up to the big boy tool pip, it'll take forever to get implemented (ex, pip still can not fucking read Pipfiles, even though pipenv is being touted around like the official package writing messiah).
* Better OOP (and namespacing) * Improve the dependency system like node, php, etc... * Easier way to have a "local project" I don't really care about the default one being system\-wise or not, but when I work on project I don't want other project mess with my system or with others projects.
As nice as that is, that part is really syntactic sugar and nothing else. People can practically just as easily activate their venv and then just install via pip.
Ok, but you when you install everything in a virtual environment it is less important to know beforehand what are the exact sub dependencies.
Being able to do web UI with only python (no html/css/javascript etc)
A push button tool taking your code, and outputing : - .wheel - .pex - .deb - .rpm - .msi - .app Compiled with nuikta, and that undertand most UI frameworks and the most popular c extensions (numpy, pillow, malplotlib, etc). 
Maybe I am misremembering Guido's requirements, but I wouldn't call them impossible. Difficult to be sure to retain C API compatibility, is the largest hurdle I'd think. But it is possible. Hey, maybe in Py4/5?
🙈 you have a point
A lot of the AI space is in Python. The underlyng libs are in C of course, but python is everywhere. 
While they work what I don't like is they practically take a python installation and include it inside. And that really isn't fun, space and release wise. It would be nice if Python had the ability to hard compile in some way-- ex py--&gt;pyc--&gt;so/dll/binary, but I'm really not hopeful. There's a similar problem with Java, except that's solved by Java being JDK and JRE, and the JRE is well known and commonly installed. The Python SDK (PSDK?) *is* the VM/runtine environment. So if you want people to start installing it like they install Java they get put off by the developer-ness.
Most people like Macs because most of them "just work". When it comes to MacBooks, I will never buy them nor a Mac again because in the first the hardware has too many design / engineering issues and in the second the pricing is just way too high. OS is cool though besides some general "most OSes do this" cant be done without $20 external software.
I think it's a case less so of identification and more so of not having to worry about indentation afterward. You'd just left brace, code, right brace, and regardless of the indentation you possibly fuck up it will work as a single scope.
So basically a `getattr` operator?
An overhaul of the people who run python. Eliminate those who can't be bothered to make pip work reliably. Eliminate those who spend more of their time bragging about what they have done for python at conferences than actually doing things for python. And completely eliminate those who keep blah blahing about doing strong typing. 
Do you recommend any reources that wouldn't be as misleading? I would love to check them out without inadvertantly confusing myself
Asyncio has it's fair share of usability and understanding warts. While higher level than the lower level stuff, it manages to be way too complicated-- there isn't much of a "just dive in" like other langauges. I think the worst issue is the fact that couroutines have to be manually wrapped in Futures to chain actions instead of just doing `await coro.then(newcoro)`...and also no easy way to inline define coros, but that's more of an issue with how function definition works.
Jython?
Goodbye memory 
Lambdas in python are unfortunately not like in Java-- python lambda don't have proper multistatement execution without hackily using semicolons.
*Everything* is syntactic sugar, that doesn't stop it from being sweet :) That being said, even just the fact that pipenv uses a standardized location for its virtualenvs is what sold it for me. I know it's from another package, but pipenv does bring the whole thing together. I definitely knew about venvs before, but even so, I've been mostly using the system Python on Windows (Linux, especially on Raspbian, is a completely different beast) to install packages globally. With pipenv, I've now starting doing the sensible thing, because it's so easy.
It is never in this way "less important". You move the time of when you get fucked over from install time to runtime.
'4' + 1
Not saying it isn't super sweet. Just that no amount of syntactic sugar will solve the overarching original issue that venvs are not what they need to be.
The biggest problem seems to be that no one's been able to remove the GIL and maintain equivalent single threaded speed.
Less encoding errors. Stop with the ascii nonsense.
My post was assuming using a virtualenv, so all the points are with that in mind.
What do you mean? Are you referring to dependency conflicts inside the same venv? BTW, the fact that you have a dependency tree in pipenv is something that a simple venv won't do (or maybe I just don't know how to do it).
I don't think that's the "impossible Guido requirement" because that has to be doable-- it wouldn't make sense for it not to be, you are literally removing overhead. But people attempting to get rid of it are trying to cut it out like a surgeon and keep everything else the same, which is the issue. GIL is a tumor, yet it is not properly operable without full exploratory surgery. People so far are only trying the non invasive option, just as a "let's see if we can get lucky". Well, the non invasive option has failed. Time to start hacking away at the body. But then the issue is C API compatibility. Which is possible, but hard in such an extensive change/rewrite.
I used a mac for years and loved it, best dev env I've used, the keys make sense, installing stuff is simple and I can easily open things people send me. I moved away this year though since the touch bar is a pos, they can't hold enough ram and the gpus aren't tensor flow compatible, it's a shame really. My little dell isn't bad but it's not a comparison to my old machine in terms of comfort of use. Linux has too many "the right way to do this is...." issues that getting things just how you like them takes years 
I meant you install it in a virtual environment and run pipenv graph / pip freeze to see what where the dependencies. To check it during the development.
That's what we have bryton for: https://github.com/brython-dev/brython (there are about 3 other alternatives too!)
Try poetry
That feature is such a no-brainer and still most languages outright refuse to adopt it
The [original comment](https://www.reddit.com/r/python/comments/8ppvaf/_/e0dbar9). Pipenv solves *some* issues of dep management. But [not others](https://www.reddit.com/r/Python/comments/8ppvaf/to_python_developers_if_someone_could_make_any/e0dhoun/?context=4). But even then, it does not solve the issue that venvs are hacky piles of poo. Pretty sure it literally just creates an entire copy of the interpreter and any linked libraries, as well as the stdlib and the third party package directory structure. That's *extremely* hacky and that amount of isolation is unneeded-- the interpreter and standard library is, or should be, fine regardless of what you are doing. If they instead just formed a special layer that did third party dependencies and used an appropriate linking layer that says "hey Python interpreter that my user set, use *this* third party package directory right now instead of your default!", it would be *a lot* better.
Yep, that's exactly what I'm talking about. Instead of throwing up the error, js tries to "do-what-I-mean-not-what-I-say".
Symmetric coroutines
Learn Python the Wrong Way doesn't teach you that either - no book does, really. Automate the boring stuff does a much better job of teaching you the core of Python.
Right...but at that point you can just use `pip list` to a vast extent. Not disagreeing, just that it is more and more overhead for far too little benefit (fancy graph) without solving the actual original problem.
The problem isn't just that the side effects might be executed more than once. It's also a problem that they might be executed *out of order*. E.g. if you observe (and cache) the next three values of `a` in my example code, `list(zip(a,b))` will produce `[(4, -1)]` instead of `[(4, -3), (2, -1)]`. It's not a particularly contrived example either: if you write code that uses generators for a producer/consumer pattern, you usually don't want to consume before anything has been produced. It can also be a problem if the side effects are executed *at all*. E.g. def go_through_files(path): for filename in os.walk(path): yield filename os.remove(filename) files = go_through_files(".") # breaking here and reading a bunch of values in 'files' would be very bad for filename in files: contents = open(filename).read() if contents.startswith("Sensitive data:"): break print(contents)
C++, JAVA and many others never had a problem making sure it was backwards compatible, I don't see why this wasn't possible in Python. I still have a 2.x project with more than 3 mil python lines of code to maintain. And trust me, I'm not the only one, and yes we have no ambition or time to run it on 3.x and fix migration problems. As trust me, I'm not the only one thinking like that. 
Initial setup overhead can be a little arcane.. I just built a docker container for general purpose python -&gt; exe and never looked back. It’s so much better than pretending like installing a glut of public dependencies on every machine is realistic or a good idea. Especially if you’re running several python applications.
&gt; Pipenv solves some issues of dep management. But not others. Most of the problems that this comment refers to are more-or-less solved by pipenv, and specifically pipenv graph. I wrote a one-by-one rebuttal, but the only thing I was writing in response was "pipenv graph" 🙂 I'll reply to one of those specifically, because it's not a venv/pip/pipenv question in itself. &gt; * No warning for missing system dependencies, or calling out that they're needed in general (e.g., unixodbc is a system lib needed for some database related packages.) That's solved with proper wheels, instead of uploading a tarball to pypi. &gt; [venv] just creates an entire copy of the interpreter and any linked libraries, as well as the stdlib and the third party package directory structure. Well, you can have different Python versions on your PC, so I don't really think it's overkill. But I get what you're saying. NodeJS is supposed to have a lot better dependency management like that, but on the other hand, it downloads half the Internet in `node_modules`, so it's not without its problems. I think out of the recent languages, Go does a fairly good job in both dependency management and packaging. Especially packaging.
All the current freezing tools do this "finding which modules you need" thing, which is great for tiny scripts that use one or two modules from the standard library, but it just falls apart when you start taking dependencies on packages with some sort of metadata that you need to take across. Anything that uses setuptools extension points for example (cryptography, I'm looking at you) needs its metadata brought across, and then you can't zip your dependencies because setuptools assumes that any library that's loaded from a zip file is coming from an egg which has a different layout to what py2exe does, so setuptools still misses the metadata. So now you've got hundreds of .pyc files to scoop up into your installer, which takes longer to install than a ~25Mb .zip file... By the time I'm taking dependencies on SQLAlchemy, wxWidgets and cryptography, I don't care about the fact I'm not using difflib, or that I'm bringing along the sqlite SQL Alchemy driver when I'm only actually using the SQL Server with pyodbc driver... Just package up this virtual environment, or this bunch of wheels from this requirements.txt for me along with the standard library. The time I'll save in not having to chase down dependencies ModuleFinder missed will vastly outweigh the time my users will save downloading and installing my application. Of course all this is based on experience primarily with py2exe and a glancing look at bb_freeze and cx_freeze.
The projects you mention have massive commercial backing. The Python ecosystem struggles to get funding as it is, let alone to basically double up existing efforts. Does your 2.x project generate revenue? Are you passing some of this revenue on to the foundation or core developers? This said, even someone with pockets as deep as Oracle recently broke backward compatibility. Some things are just too hard to be worth the time and effort. I won't be sucked into the usual py2/py3 argument; I just wanted to point out why it wasn't done like that.
I seems to me that Qt / PyQt / PySide solves your problem.
Interesting, but no. Just something like an auto corrector that changes common syntax/semantics to python’s. Kinda like a training wheels for those coming from another language. 
I agree. Curio is the right way to do the same thing, it should be in the standard library.
An easier way to work the gpu. 
All previous attempts at removing the gil has lead to degradations in single threaded performance because you need to lock before every reference count without the gil. Attempting to make the code check if it's threaded or not before locking has lead to even worse single threaded performance.
That's a great start, but now what about: * Examining diffs * Working with pull requests in GitHub * Discussing patch sets on mailing lists
/u/13steinj 's [comment](https://www.reddit.com/r/Python/comments/8ppvaf/to_python_developers_if_someone_could_make_any/e0di4wa) is almost word for word what one of my friends explained to me directly. Braces allow him to maintain a mental stack, whereas if all you have is an indentation level, you have to think in terms of a map or heap.
/u/13steinj 's [comment](https://www.reddit.com/r/Python/comments/8ppvaf/to_python_developers_if_someone_could_make_any/e0di4wa) is almost word for word what one of my friends explained to me directly. Braces allow him to maintain a mental stack, whereas if all you have is an indentation level, you have to think in terms of a map or heap.
That depends whether the string inside {} may have nested { or }. If yes, RegEx solutions are difficult. This solution should work for nested {}'s: def foo(s): i1 = s.find('{') i2 = s.rfind('}') if i1 != -1 and i2 != -1: return s[i1:i2+1] else: return s 
/u/13steinj 's [comment](https://www.reddit.com/r/Python/comments/8ppvaf/to_python_developers_if_someone_could_make_any/e0di4wa) is almost word for word what one of my friends explained to me directly. Braces allow him to maintain a mental stack, whereas if all you have is an indentation level, you have to think in terms of a map or heap.
I do get 10 hours with Ubuntu 18.04 with tlp (a power management tool), but I do have an m3 which I believe is a low-power chip. Still, its possible to get decent battery life out of linux.
/r/learnpython
&gt; A lot of the AI space is in Python. The underlyng libs are in C of course Which is basically what I wrote?
I think the overhead is justified by pipenv parallelising installs which really speeds up setting up a new environment compared to using just pip.
Have you tried trio ?
Pizza
 foo = 4 if bar in list
I think [this](https://gitlab.com/snippets/1722912) is what I was using for the db models. I can't put together all the other pieces just now, though. Multiple names are handled with the adjacency list pattern in Player and Team.
And same but for Python web apps - easy way to deploy the way PHP apps can be deployed.
Not really-- it parallelizes installs but then is extremely slow at it's initial resolution. It's a trade off, as are all things. But this isn't one I'd think is worth it.
I saw something like this on a post a while ago: https://github.com/NARKOZ/hacker-scripts/blob/master/python/fucking_coffee.py for a coffee machine, so I was curious if I could do the same for other devices haha
Web UI without HTML? How do you see that?
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [NARKOZ/hacker-scripts/.../**fucking_coffee.py** (master → 64f2d1b)](https://github.com/NARKOZ/hacker-scripts/blob/64f2d1b7dcbe20e7522cbbd96b5b092a5f08598c/python/fucking_coffee.py) ---- 
Yeah i think it might be a little more than I thought. I saw a reddit post a while ago that linked to this: https://github.com/NARKOZ/hacker-scripts/blob/master/python/fucking_coffee.py and I wanted to do something similar but for other items as well.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [NARKOZ/hacker-scripts/.../**fucking_coffee.py** (master → 64f2d1b)](https://github.com/NARKOZ/hacker-scripts/blob/64f2d1b7dcbe20e7522cbbd96b5b092a5f08598c/python/fucking_coffee.py) ---- 
Thank you. This worked flawlessly.
I suggest Enthought EDM. It is just great. https://www.enthought.com/product/enthought-deployment-manager/ Disclaimer: I work at Enthought.
Yeah I will definitely make it an effort to learn reflex, I never realized how useful it is up until now. And I already use regex101 but thanks nonetheless 😊
Support for native multi threading
Maybe regex to get the location of the text and go from there. Do you have an example?
Relevant for this problem: https://xkcd.com/927/.
Really? I use it all the time especially when I am writing complex SQL queries. It’s one block of text and f”””{x}””” still works for formatting! What’s the preferred method?
Replacing javascript in the browser with python.
What is that ?
Multithreading is native, just limited by the GIL. 
Let me save you some clicks: https://www.udemy.com/the-modern-python3-bootcamp OP please give some context next time. Are you delivering this? Have you done the course? This is not a place for spamming and advertisers. 
Like Jupyter and widgets, where it's all under the hood and all you need to worry about is python
Logging module for humans.
IMO regex seems like overkill for this.
Most major IDEs will already let you do this. See attached screenshot from a method in PyCharm open at a breakpoint: [https://imgur.com/a/10q2J73](https://imgur.com/a/10q2J73)
Not to mention the quirks with compiled modules... 
oh thats super interesting! I applied for forestry once and it sounded like such a good job because a big part of the job was GIS and another part was going into the field, which sounded like a good balance. I will pick up a book/documentation on the topic and then dive into the fun part! I wish I had the knowledge and experience that you have! But thats some more years of hard work down the road. 
If programing in python, then memory is not a problem.
 "id": "5b1314f33048b200c3c718ea", "creation_date": "iso", "visible": true, "platinum": 114, "quantity": 1, "region": "en", "platform": "pc", "last_update": "iso", "order_type": "sell",&lt;--------i want to remove this segment of text "user": { "id": "5ae85d9db0a6a40182a36ad0", "last_seen": "2018-06-03T14:06:56.023000+00:00", "reputation": 1, "reputation_bonus": 0, "ingame_name": "Noobrik-Da", "avatar": null, "region": "en", "status": "offline" } }, { "id": "5b1355d2ffe75600e067c9aa", "creation_date": "iso", "visible": true, "platinum": 120, "quantity": 1, "region": "en", "platform": "pc", "last_update": "iso", "order_type": "sell",&lt;---------------------i want to remove this segment of text "user": { "id": "5a07c642c6113601ebba18f2", "last_seen": "2018-06-05T05:27:48.788000+00:00", "reputation": 0, "reputation_bonus": 0, "ingame_name": "Rudoxito", "avatar": null, "region": "en", "status": "offline" } }, { "id": "5b135f0ac34b9200cd13898f", "creation_date": "iso", "visible": true, "platinum": 137, "quantity": 88, "region": "en", "platform": "pc", "last_update": "iso", "order_type": "buy",&lt;----------------------------------------i want to keep this segment of text "user": { "id": "57f25ef00f31392dac0abc27", "region": "en", "reputation": 0, "reputation_bonus": 0, "ingame_name": "shayuchixiaoyu", "last_seen": "2018-06-09T09:17:28.063000+00:00", "avatar": null, "status": "offline" } Ok so if i want to remove the components of text that have the vaiable order_type= sell removed how do i do it?
I don't think it will happen simply because it's more easy to just change to another language.
It's JSON. Load it to a dictionary, edit the dictionary, reserialize to JSON. The json module is your friend. 
If you don't know are you qualified to build it? 
Not sure why you're being downvoted. You're just pointing out that high performance ML code can't be written in pure python, so the GIL is irrelevant since you'd be using the C API anyway.
Watched the video. It was very helpful. Never PEP8 onto somebody else's code. Always PEP8 onto thy own. Thank you for introducing Hettinger. Plan to watch more videos when possible.
Wait, automatic type deduction requires an initial type deduction? Is type-bootstrapping part of the PEP standard? /s
 import re # Regular expression support, nice tool: https://regex101.com/ '''Removes a certain segment of text, in this example the first two words before "amet" from the text''' sample_text = '''Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet cli ta kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.''' '''replace with an empty string to remove the desired words/characters using exact matches''' def remove_literally_dolor_sit(): return sample_text.replace('dolor sit ', '') '''using regex to find strings which are containing everything between "dolor" and "amet" and replace it with "foo"; likewise with "" as an empty string, which will cause an effective removal from sample_text.''' def remove_dolor_sit_with_regex(): regex = r'dolor.+amet' # regular expression, more on https://en.wikipedia.org/wiki/Regular_expression return re.sub(regex, 'foo' + 'amet' , sample_text) # "amet" will be replaced in the progress, thats why we include it here. '''locating any two words before "amet" and replace them with any string which will be given by a parameter, defaults to an empty string.''' def abstract_removal(s=''): regex = r'(\w+\W+){2}(?=amet)' return re.sub(regex, s, sample_text) # amet will not be replaced in this method, because the regex is matching only the to words before amet '''Testing''' def main(): print(remove_literally_dolor_sit(), '\n') print(remove_dolor_sit_with_regex(), '\n') print(abstract_removal(), '\n') print(abstract_removal('ketchup '), '\n') if __name__ == '__main__': main()
It's okay Guido fucked it up, just face it. 
With Anaconda, you can access your virtualenv from anywhere and use any version of python. You can't activate it from powershell, but cmd is fine, so could be better, but good enough.
How's battery life on Linux compared with the same machine, but running windows? In my tests likely at least 15% less. That is why I prefer native Unix machines like MBPs. 
I meant the same, python would be great without the limitation of GIL. 
In docstrings, yes. But in normal string literal usage I’d be surprised if the PEPs said anything against triple single quote strings.
You read the docstring assuming it's there. A good docstring will list all the options. Alternatively, check the docs if the exist. So that's the general answer. In pracricality, most people are lazy or the docstring is out of date, so read the code and if you can document the function, even if it's only partially documented.
 import json '''replace data with your json content, validate it first! https://codebeautify.org/jsonvalidator''' data = '''[{ "players": [{ "name" : "A", "order_type": "sell" },{ "name" : "B", "order_type": "sell" },{ "name" : "C", "order_type": "buy" },{ "name" : "D", "order_type": "buy" },{ "name" : "E", "order_type": "sell" }] }]''' # to fully understand this step I recommend being aware of the capabilities of dicts and lists/arrays # furthermore https://www.youtube.com/watch?v=pTT7HMqDnJw for the json module. players = json.loads(data)[0]['players'] # load the json data, make sure, you are using the right structure for order in players: # going over each element in players if order['order_type'] == 'sell': # checking if someone sells order['order_type'] = '' # replace it with an empty string to "delete" it. print(players) # showing results
The protocol is ddp. I saw a demo with [Django-ddp](https://github.com/jazzband/django-ddp) that might be interesting to you to have a browse at the codebase.
Even then there were a lot of cases where it straight up wasn't working. For simple applications, scripts and whatnot, it would do fine. But start doing anything complex and everything became a complete shitshow. One of the first things I did in Python was create a GUI application with wxpython. Got it working pretty great, then went to create an installer to share it with the people I was creating it for... Never did get it working right. Since then I don't even bother using Python when I need to create something that requires distribution.
Good luck, mate!
https://stackoverflow.com/questions/36606930/delete-an-element-in-a-json-object
In the same way I responded to the pipenv recommendation, poetry also solves none or barely solves one or two of the issues mentioned.
I think everyone hates enthought here :p
debugging in python is, in general, just not great.
But if thats the issue can't the IDE just create a sandbox for the side effect and mock it out in the sandbox (whatever the sideeffect may be)? Psuedo speak for forking the process (ex `os.fork`) and in the forked process all system primitives are faked? This isn't a problem with some super complex solution-- as evident by the fact that some IDEs already do this preevanlutation for other languages.
Night view for IDLE
This. I want a one\-line command that can do: \- compile to machine code no matter if i use pyqt or pyside or... (cython seems furthest along on this path but it still struggles with pyside2 threads for example) into one reasonably small binary or just compile the main program if deps exist on pip which users would then be automatically be able to install on installation. So if user goes this route command should also make a install program that can install the deps so i dont have to share a 1gb file. \- encrypt the program \- make binaries for windows/linux/macosx without having to go into VM. Golang already makes machine code and binaries for win/linux/macos through one command, there's no reason why python can't do the same(first convert code with cython, then embed parts of python interpreter imported libs need, then embed parts of libraries code uses for example).
Spammer. The account is 19 days old, no comments, and every submission is similar to this one - pushing something.
That's what he is saying...
They should ask the wine guys for help, those dudes know the windows library! Or maybe check out how golang does it.
They aren't as easy to use as other "IDE\-binded" GUI libraries like was Delphi VCL (or dotNET's GUI, ...)
There's a common tool for probing a network for devices. it's called [nmap](https://nmap.org/).
Have you tried Conda?
I guess one could run a command on all python code locally adding braces or what have you and then on running of code removing them and running. Then for github having it auto format on push. Just some ideas.
How would you do it?
There's a hack explained somewhere on the interwebs showing how with the help of wine you can build it for windows through wine on linux. I havent tried it myself but i'd imagine it should work pretty well.
https://docs.python.org/3/library/functions.html?highlight=open#open ?
Stolen from StackOverflow: &gt; In the asymmetric coroutine model, "asymmetry" refers to the fact that there is a stack-like caller–callee relationship between coroutines. A coroutine can either call another coroutine or suspend itself by yielding control to its caller, typically also yielding a value to the caller at the same time. &gt;In the symmetric coroutine model, a coroutine may yield control to any other coroutine without restriction.
Dude, try vim. It does both easily. 
Ah, that's cool. I'm trying to use Flask-Bootstrap but I'm stuck with the current default style, and can't design for the life of me :')
There are a few nice ones out there. I really like poetry. 
Hah, someone is not a fan :P It is also in the tutorial :) &gt; color_palette() will accept the name of any seaborn palette or matplotlib colormap (except jet, which you should never use).
Thanks!
Thanks for the help
So what i got from this is to basically use either regex or json modules? Am I right? 
Isn't this resolved with the option of using spawn in python 3.4?
Profiling can be kind of a pain. All of the tools I found were difficult to visualize what’s really slowing down my program. For example, sometimes I want to be able to roll up library call time to just that line of code that calls it in my code and then be able to click into it if I need to. Completely ignoring asyncio in profiling would be nice since it’s usually at the top of the list even though it’s really not doing anything that slows down my program (because it’s usually just idle between doing what I need to test it while profiling). Another thing is that I wish there was automatic dependency finding. Like a cli I can run that will help me find all my deps to add to poetry or something. Instead of running it and hope I hit the code that requires it (import at the top instead of in a func/class). Finally, I wish there were more resources around learning Cython and an easier way to integrate Cython modules into packages. I sometimes want to use that to optimize some library code and find myself struggling to figure out how to write more idiomatic Cython than just writing pure python with type hints and cdef funcs. 
Here is why `jet` is a bad color map: http://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/ tl;dr; It was once the default for matplotlib, but it sucks because the colors lie to you. The perceived luminance of the gradient jumps all over the place and you might see highlights and features that simply are not there.
Sounds like [PEP 505](https://www.python.org/dev/peps/pep-0505/).
There are some tools such as :https://kite.com that are working on this. Remains to be seen how intelligent they can really become. 
IDLE already has a builtin dark theme.
I agree, but I have to give credit to the JetBrains folks for making it as useful as it is. Their PyCharm IDE is (probably) the best Python IDE out there. And it definitely improves upon Python debugging.