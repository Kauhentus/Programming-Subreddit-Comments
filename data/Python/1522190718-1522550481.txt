Add a readme! Idk what this is :D
That is amazing!
Is there anything like this for a web browser? Kind of like a pseudo-graphical version of Lynx?
would you like to use flask_sqlalchemy? I'm current using that and it's pretty good. with this: db = SQLAlchemy() SQLALCHEMY_DATABASE_URI = os.environ.get('DEV_DATABASE_URL') or \ 'sqlite:///' + os.path.join(basedir, 'data-dev.sqlite') + '?check_same_thread=False' def create_app(config_name): db.init_app(app) you will have a db instance, then just change to different SQLALCHEMY_DATABASE_URI you can quickly switch between sqlite and mysql. I started with sqlite and now on mysql, the transition is very smooth. Worth taking a look 
Your terminal displays emoji?
it's still a rough idea and I'm looking into v-rep to see if I can do what I want. I want to be able to read a file and know where some features are (right now the feature I wanna find are holes where I need to put screws. I might need to be able to know where more features are though, like walls and the floor for a room, for instance). 
Cheers! Also let me know if it works and if you face any errors.
You can do anything with it that you would do with a typical class, it just maybe nudges you in the (generally sensible) direction of writing classes for the things it's actually useful for. a perfectly appropriate example follows (though typing on my phone, so dunno if the single, line attributes are valid): @dataclass class Box: x, y, w, h: int @property def area(self): .... def resize(self, w, h): ... @classmethod def from_size(self, w, h): ... You gain repr, comparisons, optional hashabilitly and pseudo immutability, generally a less repetive init, and probably more I can't recall offhand
Lol what?
I haven't really heard of sqlAlchemy before. I'm new to both flask and sql so I've kind of just been learning as I go because I don't find my prof to be all that helpful. What exactly is sqlAlchemy?
Right now I'm just trying to use sqlite commands from what I'm following along with a login page guide that i found, i think my issue comes from the fact that at the start he configured the mysql_CursorClass to output dictionary and as far as I can tell sqlite by default outputs a tuple and I am unsure as to how to configure that. I'm gonna meet with my prof tomorrow and show him the code that I have so hopefully he can help out.
I would recommend to have a read at this post: https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-iv-database when you have time. I followed the tutorial and it's quite useful. Once your project is setup with sqlAlchemy, switching between databases can't be more easy. Plus it alos works well with the object model in python. very convenient to use.
I am not at my computer but I suspect that there is a scipy routine that can do this. I think the idea is to deprecate mlab but yeah, it’s surprising there isn’t an alternative stated
So what you're saying is, the bad guy should have used 1000001. Silly bad guy, Batman always wins. ;) 
That sounds familiar. Good to know
If you have to ask, then you'll never understand
This is interesting and it's probably amusing to try to guess the pics haha
This past week I built a Discord bot to display fortnite stats. This was my first time making a bot. It was lots of fun, I still want to add more features. https://github.com/Ryoliveira/fortnite_discord_bot
I would love to see the code!
alright I'll have to take a look, Thanks!
Alternative: ncdu
&gt; I wish there would be a great manufacturer of linux laptops. I've always had great luck with thinkpads
Sure, https://github.com/Gprime5/Music . Only run it at your own risk. There shouldn't be any significant bugs. You just need to download ffmpeg and change the save folders in the main file. My newer version will be better written and better tested.
Class { sign in to work for the day } Class { Coffee } Class { Stack overflow yesterday’s bug } Rinse, repeat. 
I just ported Alexmojaki's [birdseye](https://github.com/alexmojaki/birdseye) to vscode Birdseye is a debugging tool that records the state of any function that you decorate with @eye You can see all your variables at that time and even go forward or backward through loops (among many other cool features) [demo gif](https://camo.githubusercontent.com/152587d9ee6dcc92d535ecead8f005bbd068b6f8/68747470733a2f2f692e696d6775722e636f6d2f323336476a32452e676966) [marketplace](https://marketplace.visualstudio.com/items?itemName=almenon.birdseye-vscode) | [repo](https://github.com/Almenon/birdseye-vscode)
mother of god
Great app! Weird question, trying to wrap my mind about how to use Dash. Would I need to tie it in with something like Flask, or does Dash spit out a thing that I can then upload to a server?
Dash is built on top of Flask is my understanding, so app = Dash.app() handles all the Flask stuff. I'm more familiar with data than web programming though, Flask is still in the 'to-learn' column.
I really hope this one will work. I am really goot at python but not having a good statistics education. Previous course (another university), seemed fine first two weeks then flipped to statistics expressions without explaining it. 
Ah interesting! That would then create something to upload, how cool. The best Flask Tutorial I found is the mega-tutorial (not sure about the link, it pops up on google). He really goes in depth with making a full application. Highly recommended. 
Going to make another attempt at a better understanding as well
Thanks! I was nervous to share, but am glad people like it!
Meh. I've rewritten projects in the *same* language the rewrite is always at least an order of magnitude faster. You know what you want to do (or not do) and can head right there. Also, you can usually do it in pieces and use the remainder as a test harness.
Thanks for having a look! It feels good to put some work in front of other people
If you print the url, with the overlay text in it, can you use a browser or wget in a terminal to fix the output? It might need to be "urlencoded", use the apache logs to see what is actually received.
Heck if I know. I never understood that either as it was a pretty simple application. 
I took this specialization last year after learning Python essentials. Really enjoyed it and can recommend! If you are already familiar with Pandas and Matplotlib, then skipping to the third part of the course might be better - that's where the fun starts!
I totally agree. I've done that many a time. I do think I would have done a the application a lot quicker in python from the start though
Thanks for sharing :) 
 result = cur.execute("SELECT * FROM User WHERE username = ?", [username]) if result &gt; 0: data = cur.fetchone() password = data['password'] This is basic database code. What you really mean is: cur.execute("SELECT password FROM User WHERE username = ?", [username]) data = cur.fetchone() if data: password = data[0] I didn't use special row factory there, you can adjust accordingly.
Find that x and y position that would set the bounding rect to the values that you want then update the position of the bounding rect relative to the new position of your entity. 
Thought they are free unless you want an actual cert
I've tried that but it gives results that are not expected.
I just checked. Coursera charges $49 a month?
Maybe take a probability course before jumping into Machine Learning? MIT has a good one on YouTube 
Read both DBAPIv2 PEP and sqlite3 module document. Answers are in the doc. //On mobile, so no links. Google Python *keyword* if you don't know where the doc is.
Javascript is a ghastly den of sin and a taint on the whole of computerdom. Seriously though, if you're good at python and don't know much JS, futzing around with a static site generator built in python is probably going to be easier and more rewarding than one in node. 
I 2nd this suggestion -- Machine learning is barely distinguishable from statistics, they revolve entirely around probability.
Anything possible in any one Turing-complete language is possible in any other Turing-complete language.
I think he said adding people to a late project makes it later...starting from greenfield and I have 20 and you have 100...if you can't do more it's a failure of management not a law of nature.
Yes, struct.unpack was throwing an incorrect error message when provided with bad input.
I agree, `data class Foo:` would've been better and would also help static analysis tools such as mypy. 
Wow, seg fault! Any idea why that happens? I would have expected simply hitting the recursion limit.
Forget these courses - try reading a classic book like [Data Mining](https://www.amazon.com/exec/obidos/ASIN/0128042915/departmofcompute). Note that this book isn't about Python in machine learning, just machine learning. I can't speak for the latest edition, but I found an earlier one could take readers from zero knowledge up through reasonable competence. These four-week course things just aren't the same - too little time, too broad, assume lots of prior knowledge (i.e. other courses). Call me old fashioned, but I think you're much better off with a good old book and the ability to learn at your own pace. With the likes of Reddit, Stack Overflow, etc., you can also get questions you have answered easily. 
Yeah, my experience is that corporate Java devs are way more likely to be lazy as hell or to over engineer things. The language doesn’t _require_ that but it, and the culture around it, encourage the behavior. 
So the course is 49 regardless of certificate? 
2 points: - price is for the whole specialization (5 courses) - price is per month. If you take 2 months to complete, it's 2 times that. I'm more than half way through (course 4) and think this specialization is totally worth it.
This is more practical than theoretical. You will learn how to do ML regardless but will appreciate more with prior stat understanding.
Totally agree. This is a great specialization. I'm done with the first 3 and on course 4 now. Already got a job in DS partly thanks to this.
I've just started the 10-week Python for Data Science course through edX UC San Diego. It's the first of a four-course "MicroMaster's" certification. Free to audit the course (no certificate), but I think it's $350 to get the certificate.
I think this is actually a reentrancy bug, but if it wasn't, it would probably segfault from recursion. My understanding is that the C stack doesn't have awareness of stack depth like the Python interpreter stack does. Since itertools is written in C for performance reasons, it is ignorant of recursion depth.
Thanks!
You can either specify proxy when using pip: pip install --proxy=https://swinghu@company:port &lt;packagename&gt; or set it globally: set HTTP_PROXY=username:password@company:port If not, you can just download the packages directly and run `python setup.py install`
Joytan, the free audio/textbook maker: https://github.com/kokimame/joytan I'm making many videos for language learners with my app. Please be the first contributor and let's make the app even greater! Demo: https://www.youtube.com/watch?v=ysMp0k4oR5c Key modules: PyQt5, Pyinstaller, pydub, jinja2, boto3, BeautifulSoup, requests etc 
Issue #2 is completely unfounded. Sanic uses the TCP transport provided by the `uvloop` library. Sanic does not implement any flow control, because flow control is handled internally by uvloop. &gt;Data is sent to a peer when the next data chunk is available. If TCP socket's Write Buffer is overloaded -- the data is pushed into process memory. This is false. Uvloop maintains a 65kb flow-control send buffer. If the buffer hits this limit, the tcp `write()` command _blocks_ the calling thread until the buffer is successfully sent. In this case, it is not possible for sanic to continue to produce streaming data if the client is consuming it slower than sanic is producing it. It will keep hitting the 65kb buffer limit and waiting for the client to catch up.
Thanks, that makes sense :)
If editor does something weird, and configuring PyCharm you may have missed something, you can remove this layer of indirection by adding: import pdb; pdb.set_trace() where you want a breakpoint. Then just run the code normally, once the execution gets to that spot, it will break, and drop you int debugger. You are, sort of, "lucky" that Python cannot run code in parallel, because debugging parallel code would require suspending all threads and then redefining what "continue" or "step" commands do in the debugger, but asyncio code executes sequentially, so once you hit the breakpoint, the interpreter will freeze.
Edx.org has an awesome MITx python based CS course on. Free, of course. 
Automate the boring stuff with Pyhton. Great resource and it is free. You can donate if you want to. The book teaches the basics of Pyhton 3 and some useful libraries.
That’s the one!! You’re a champ. 
Yes, when CPython builds for production (with optimization), it needs to run tests (it benchmarks them and using the benchmarks, it later applies some optimizations). The problem is, one `asyncio` test tests if it can handle signals, but in many situations, such as, for example, running this build in a container / in Jenkins CI, the signals never get sent to the test, and this test hangs forever. It's a bad idea in general to write tests which can possibly not terminate, but this specific one was kind of obvious. I've later seen this bug reported, but I haven't seen it fixed yet. The workaround is relatively simple, and I don't care enough about this bug to follow up.
As you’re already involved in CS coursework, you could take some of the projects you enjoy working and implement them in Python as well. Also, if you have a particular domain of interest, that will help scope the discussion. Python’s power comes from the massive amount of high quality open source packages that are available. I do a fair bit of data analysis for my job and use Python for as much of that as I can. Some of the tools I like using to help here include Jupyter Notebooks (a tool that sits on top of iPython, allowing interactive coding in a web browser), as well as the packages numpy (array classes), Pandas (extensive queryable spreadsheet-like class), matplotlib (data visualization base package for which there are numerous extensions such as Seaborn and Bokeh). Scikitlearn is a full featured ML package for which there’s a ton of documentation. If you’re working in a windows environment, I’d recommend using Anacondas for virtual environment management.
If you showed us some example we could tell you.
Why do they make it so hard to find out what it costs
Working on a custom smart home virtual assistant with my roommate. Our goal is to have a chatbot much like Siri or Cortana that you’d type your request to (e.g. Brew me some coffee), it would understand the request and then communicate with the available sensors and actuators to fulfil the request. The project is still in its very early stage but I believe we might build something decent in the end! Here’s the [project’s page](https://flopeters1337.github.io/palantir-project/) if you want more info.
Sanic maintainer here. &gt;Good news: Sanic development team runs so fast that new backward incompatible changes can land into master without any deprecation period and related procedures. They did it several times, the project is still in beta stage. We encourage people to pin releases to improve reliability. We see master as a development branch. Not sure how you're facilitating this on aiohttp, but nobody told people to use the master branch for a reliable release in the sanic repo. Regarding &gt;The problem can be reduced by adding monitoring tools for looking at Sanic processes memory and killing problematic web workers. But default configuration has no such monitors. Firstly, it can be reduced by configuring the request body memory limit. See: https://github.com/channelcat/sanic/blob/06d46d56cd4e20850019f0b096c1e26e145f853a/tests/test_payload_too_large.py#L8 In general, I would discourage using monitoring/alerting here, and encourage people to use multiple memory limited sanic processes (hint cgroups) rather than monitoring/alerting around this issue. Think 12 factor app -- it should be stateless and able to be replaced. Furthermore, a sane solution to mitigate this in the real world would suggest IP address throttling, at least to discourage DOS and force DDOS. In conclusion, it seems that you could have opened some of these issues (the memory limit seems more like a question -- that is configurable, so you're kind of just fear mongering for no reason) with the sanic project, rather than write a reddit post first. Are you trying to inherently promote your own project as an alternative? Feel free to join the discussion here, if you're actually interested in sanic: https://github.com/channelcat/sanic/issues/1176
I'm working on a Mac and I've been using Jerbrains IDE's for pretty much anything. I thought about taking my C++ Hw's to Python to begin with. Next semester I'm taking Data structures, which is more c++, but companies ask for Python, at least the ones that come to my Campus, and I want to give it a try. I don't have any projects yet, besides building a simple website or creating a small game to get used to the syntax. I didn't know what iPython or Scikitlearn was until now that I googled what you wrote. 
How about [DevDocs](https://devdocs.io/)? (You need to manually enable Python.)
I'm at the moment doing a Datacamp course for Data Science/Machine learning starting from 0 knowledge. Anyone jave good experiences with Datacamp? Seems pretty ok so far.
There’s a ton out there. Just be prepared to hold your face in front of the fire hose for a while. Python is loved because it is super fast to develop big solutions. Execution time is abysmal as compared to optimized c++. But you can wrap critical c/ c++ algorithms in Python and get a nice blend of both worlds; or just use openNebula and parallelize to your hardware’s content. I’m aerospace engineering background so I don’t know what most of this stuff actually means; I just hack stuff together. With your CS background, this sort of stuff could make you critical to a great many solution spaces. On Mac, you can still use Anaconda if you choose. Otherwise, definitely familiarize yourself with venv. Things change rapidly in the Python community and upgrading packages can/ will break your code. Learning to manage these will save you lots of curse words. Best of luck and welcome!
Added a command line interpreter to drive the py-fortress RBAC entities into LDAP and described how it works here: https://iamfortress.net/2018/03/28/using-the-py-fortress-command-line-interpreter/ It's open source released under the apache license on github.
Shame its a video, it would be interesting if it were text.
taking MIT's linear algebra course 18.06 taught by Dr Gilbert Strang. Damn that man is a genius...
One way is to open the pac file and extract working proxy out of one or more load balanced proxies used dynamically.
I made a simplistic api-like bot for instagram called [onegram](https://github.com/pauloromeira/onegra). To print image urls: from onegram import posts for post in posts(): print(post['display_url'])
Can confirm, have done this in the past.
You may also find the following posts interesting in respect of how to set up the proxy and ``mod_wsgi-express`` behind it. Those posts were using docker, but is still all relevant if not using docker. * http://blog.dscpl.com.au/2015/06/proxying-to-python-web-application.html * http://blog.dscpl.com.au/2015/07/redirection-problems-when-proxying-to.html
1: read the sidebar 2: post in the correct subreddit (see above) 3: read THAT sidebar 4: format your code properly (see above) 5: include the expected output, the actual output, and any errors you are getting
Downloaded both python3 and Atom to run the script but no luck :( Should I try running the start.py file in Terminal? Any suggestions are much appreciated! 
what?
#1: READ THE SIDEBAR #2: POST IN THE CORRECT SUBREDDIT (SEE ABOVE) #3: READ THAT SIDEBAR #4: FORMAT YOUR CODE PROPERLY (SEE ABOVE) #5: INCLUDE THE EXPECTED OUTPUT, THE ACTUAL OUTPUT, AND ANY ERRORS YOU ARE GETTING
I'm new to reddit too so i don't understand what you are saying haha 
To improve speed you can use Numba. In this case I think it would be as simple as ``` from numba import jit @jit def histogram_equalization(image): try: assert len(image.shape) == 2 except ValueError as e: #what exception image = imread(image) assert len(image.shape) == 2 source, indicies, counts =np.unique(image, return_inverse= True, return_counts = True) s_cdf = np.cumsum(counts).astype(np.float64) s_cdf /= s_cdf[-1] new_values = np.around(s_cdf * source).astype('uint8') new_image = new_values[indicies].reshape(image.shape) return new_image ``` I have not dug through your implementation to see if it can be improved however. It does seem reasonable to me, and no obvious sources of unnecessary computation. 
&gt; starting from greenfield and I have 20 and you have 100...if you can't do more it's a failure of management not a law of nature Depends on the project. If the project only breaks into 20 pieces, putting 5x the people on each piece does nothing.
Some of the comments seem pretty shilly too.
Ok. But let's say for example I've got an executable .exe file and I want to perform a heuristic scan on this particular file. With my knowledge so far, we have got static (passive) and active heuristics. How would I then proceed with a passive heuristic scan? Do I have to disassemble it or can I look at the hexdump of the file and work with that?
Yeah, sure. I am working on the readme.
Please, check out the Python idioms before writing in it like you write C++. I've seen too many people do that and it's awful.
How do you like it? I'm considering doing some studying in this area on behalf of my students, simply because it's fun to make projects with big, real world data.
Not possible without rewriting the AST. What's your end goal here?
Got an ad for Coursera as the page opened on mobile. Classic. 
As I said, that is not possible without rewriting the AST. What's your end goal?
https://stackoverflow.com/questions/5972664/python-twisted-iterators-and-yields-inlinecallbacks#5979862 Twisted does something akin to this. Perhaps investigate what they're doing.
 fo2 is a function that handle a request . so it may call other functio and some may be blocking , so i have a special decorator "save_context" and whe i use that decorator and yield , the webserver can continue doing his job and restore context when blocking call is finished where i put yield . so i dont want to put yield everywhere but i special decorator wich will replace all blocking call with a yield fo() when the caller call fo()
&gt; If the buffer hits this limit, the tcp write() command blocks the calling thread until the buffer is successfully sent. Sorry, but it is not how asyncio (and uvloop) works.
It does, I missed the qval argument for some reason
This is not possible without rewriting the AST. Make your `yield`s explicit.
i am actually using twisted bu i want an implicit yield when a decorate foo
i really want a implicit one , the caller know that fo is decorated
That is not possible.
Sanic collects a request body in a memory before calling a handler, this is a problem. You can pin down both max memory limit and handler execution timeout but now you can do it globally (on application level) only. By setting `request_max_size` to e.g. 16 KiB you solve the problem but disable big files uploading at the same time. &gt; Are you trying to inherently promote your own project as an alternative? Sure no. The article has no "aiohttp" word at all.
sad
Beyond `help` or documentation others have shared other options could be those along the lines of "introspection", e.g. using `dir()` &gt;&gt;&gt; import math &gt;&gt;&gt; dir(math) ['__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atan2', 'atanh', 'ceil', 'copysign', 'cos', 'cosh', 'degrees', 'e', 'erf', 'erfc', 'exp', 'expm1', 'fabs', 'factorial', 'floor', 'fmod', 'frexp', 'fsum', 'gamma', 'gcd', 'hypot', 'inf', 'isclose', 'isfinite', 'isinf', 'isnan', 'ldexp', 'lgamma', 'log', 'log10', 'log1p', 'log2', 'modf', 'nan', 'pi', 'pow', 'radians', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'tau', 'trunc']
Assuming that close can be divided by 3 exactly, what you wanna do is make a loop that grabs three items at a time. Something like this: for i in range(1, len(close)/3): startIndex = 3*(i-1) endIndex = 3*i listSection = close[startIndex:endIndex] For example, if you have 9 elements then you get: close[0:3] close[3:6] close[6:9] Then just do whatever you need to do for each list section. If the list is not divisible by three, you'll need to add a check to make sure end index isn't bigger than the length of the list before you slice. 
You could very clumsily wrap your function in a function whose only job it is to call your function. ``` def special_decorator(): def dec(func): def wrapper(self, *args, **kwargs): return yield func(self, *args, **kwargs) return func return dec ``` You'll have to mess around to make sure the twisted yield behaves properly, but I seem to recall that it does (you can call functions and so long as they are marked @inlineCallback they do what you expect them to do). There's a lot of indirection here, so you'll have to mess with it.
I'm really orderly when it comes to my code. I feel that I'm not great at it but in class I keep my code as organized as possible. I'll definitely check this out
Tagged
 Python documentation is, in my opinion, very good: https://docs.python.org/3/ The tutorial has a lot of information about language features, keywords, etc.: https://docs.python.org/3/tutorial/index.html And then there's the library reference that I use a lot: https://docs.python.org/3/library/index.html
Thanks! But I'm trying to get close[0:3] close[1:4] close[4:7] close[7:10]
In addition the zen of python says "Explicit is better than implicit."
Alright, so I just tested the code out: close = [8111, 8099.45754039, 8060, 8058.7, 8043.1, 8039, 8053, 8043.2, 8031] for i in range(0, len(close)/3): startIndex = 3*(i) endIndex = 3*(i+1) listSection = close[startIndex:endIndex] print(listSection) When I type that code in, I keep getting this: (even though the list is divisible by 3.) &gt;TypeError: 'float' object cannot be interpreted as an integer
Thanks! But I'm trying to get the following: close[0:3] close[1:4] close[2:5] close[3:6] etc. 
This is a part of a series of courses. He just linked to one particular course. If you check other courses, one of them is on python actually. And the other one is on data exploration and presentation. 
What editor are you using? Many editors will have plugins supporting Jedi or Rope that can display help as you work. This includes parameters as well. If you're using pycharm, there's a panel to display it all the time as well which can be convenient. There are also tools for docsets like dash/zeal/velocity which let you download docs offline and easily search through them. They often have integration with editors too so that you can look up stuff directly from your editor. 
Thanks. My first thought was to use the scipy griddata function but it doesn't seem to be a direct replacement for the mlab function and I haven't been able to get it to work with my code...yet. I've also tried using the Triangulation function, Triangle interpolators, and tricontour plot. Which is what's vaguely suggested in the deprecation note. Tricontourplot almost works but the contours are the convex hull of the data points. It looks like I can mask off the inside corners but I figured I would try to replicate my prior code before rewriting everything to use tricontour. 
Ah sorry, I misunderstood, that's even easier infact! Something like this will do it for i in range(0, len(close)): listSection = close[i:i+3] So for each i it will the item plus the two items after it. However, this is going to return an error when i gets to the second last element, since i+3 will be bigger than the length of your list. Depending on how you want the 2nd last + last elements to be handled there are a few options you could take. :)
Wow, you must be really stupid to publicly show your fraud attempts
what how is this fraud?
I doubt the mlab function can go outside the complex hull. Unless it is doing extrapolation. If you have a specialized use case, you may need to more carefully tailor your solution 
I took a look, even tried it. Could be something on the website's end that's going wrong- you're getting a 200OK back from the post so.... ? Perhaps reach out to them? 
Also, see http://scipy-cookbook.readthedocs.io/items/Matplotlib_Gridding_irregularly_spaced_data.html. It may have some more examples
ok thanks man :)
Mac iterm2 : )
I believe there exists an extension that does this but haven't really dig into it yet.
Thanks!
Right, I'm not trying to go outside the convex hull. In my previously working version of this code, when I contour plotted the points it only plotted the contours within the defined grid. It did not plot the convex hull, it plotted the grid with any inside corners properly shown. However, the triangulation and tricontour plot just triangulate all the points all the way to the convex hull. I know the outside grid points so I suspect I can mask off the inside corners. For now, I'd rather put effort into seeing if I can figure out the scipy griddata function to minimize changes in the code. 
For anyone who is searching the same info on internet, I managed to get it working with Lark: Grammar: !start: logicexpr parenexpr: "(" logicexpr ")" logicexpr: compopr | logicexpr "and" logicexpr -&gt; and | logicexpr "or" logicexpr -&gt; or | parenexpr compopr: atom "=" atom -&gt; equal | atom "&gt;" atom -&gt; larger | atom "&gt;=" atom -&gt; largerequal | atom "&lt;" atom -&gt; smaller | atom "&lt;=" atom -&gt; smallerequal | atom "!=" atom -&gt; notequal | atom "in" atom -&gt; in atom: WORD -&gt; var | ESCAPED_STRING -&gt; var | array array: "(" [atom ("," atom)*] ")" %import common.WORD %import common.ESCAPED_STRING %import common.WS_INLINE %ignore WS_INLINE input string: 'version in ("test", "test2") and ((issuestatus=open or resolution="dev dev") or memm = "as as")' output: start and logicexpr in var version atom array var "test" var "test2" logicexpr parenexpr or logicexpr parenexpr or logicexpr equal var issuestatus var open logicexpr equal var resolution var "dev dev" logicexpr equal var memm var "as as" If anyone sees anything wrond, pls let me know
If your heuristics are simple enough that they can be applied to a hex dump, then you can use a hex dump. Disclaimer: I have no experience with this.
I’ve used something like ‘ax.add_geometries(shp.geometries(), ccrs.Miller(), facecolor='none', edgecolor='black')’ for a previous project. You have to make sure the projection is set when creating the figure and that they match when adding geometries. 
Yes, I'm thhe leader of the aiohttp development team. The post is not about aiohttp/Sanic features comparison but Sanic problems. aiohttp mentioning appeared in comments, not in the post body. I am the **Python Core Developer** also. I was involved in `asyncio` creation from the very beginning, at times when the library was called `tulip`. Now Yuri Selivanov and I are the library maintainers, we work hard on `asyncio` bugs fixing and adding new features. Assuming this I can say that I have the very deep understanding of how asyncio-based code works, what pitfalls should be avoided etc. Returning to Sanic. Yes, early routing can help. Giving a chance to library user to decide if hi want to read request BODY or not, providing a way to read BODY chunk by chunk can help a lot. Adding a flow control to streaming responses (say, converting `streaming_response.write(data)` into a coroutine (`await resp.write(data)`) can eliminate the second security problem. Everything is possible, Sanic can fix own problems. But now the library is very insecure, it can run out-of-memory surprisingly easy.
Without further information, I can only nudge you into the right direction. Check out `Numpy` for reading the images as numpy arrays, `PIL` for image manipulation and `Scikit-Learn` for using machine learning to detect patterns/compare the arrays etc
I stopped reading when it says that Swift is in the top 10 languages although its number 11 in the graph shown. Also no code examples for a comparison of programming languages is pretty lazy. 
&gt; first of all, i didn't expect you to "drop everything" to help me. Then remove HELP! from your title, silly. &gt; I DONT EVEN KNOW WHERE THE "SIDE BAR" IS Its a side-bar, a bar on the side. Left or right, figure that out or quit ffs. Its right under your login. Do you have your own event horizon? &gt; like i said I'm completely new to this Then how about you try to post correctly next time? Your code failed and your reddit post failed. **Both** because you **rushed into shit without doing the bare minimum of effort** (like posting the error output or formatting stuff correctly).
Title also misses out the fact that it's a paid course. 
Maybe the function match_template from scikit-image will be useful for you, or some kind of perceptual image hash http://scikit-image.org https://github.com/JohannesBuchner/imagehash 
Ok, I think I got it as far as I can tell to make it return a dictionary I need to use: db.row_factory = sqlite3.Row with that and some of the tweaks you suggested I have it working now, Thank you!
I have removed this post as it is content aimed at beginners 
This post is better suited for r/learnpython 
This post is better suited for r/learnpython 
Yeah for beginners 
Could be bots.
See https://github.com/benjamincrom/baseball for code
I'm not disputing the quality of your post or its accuracy. If Sanic is reading the entire body before routing that's a problem even without bad actors getting involved. It's just hard to see what hat you're wearing with this post: core dev, aiohttp maintainer, or someone who has seen all the sanic posts here and is concerned about the stability of the library. Or maybe it's all three. I don't think any of them are inappropriate view points, in fact the first two add more weight to your post. I guess my notion of wanting disclosure is coming from my own view point. I maintain libraries, that apparently other people use, and if I recommend them or post something critical of a competing library I disclose that I wrote and maintain X even though I doubt my name carries much, if any, recognition outside of small circles. I didn't mean to cause offense or detract from the conversation at hand. 
Well, that is exactly where I am stuck.
Man this book is so expensive in India, can't afford. 
This post is better suited for r/learnprogramming
This post is better suited for r/learnpython 
This post is better suited for r/learnpython 
Businesspeople are weird that way.
Killer feature: you can now scroll through loooong list of arguments in build/test configuration.
Its nothing that deep atm, what I have so far are comments on how creative/interesting the combination is, but I plan to develop it into a full character maker tool to be used in tandem with the book.
0. Python already *is* strongly-typed. What you mean is statically typed. 1. There is a static type checker for Python called mypy. It will not make your code faster at all (type-checking the code with mypy and running it are different steps), but it can help you find bugs. 2. There is Cython, which is a statically compiled *superset* of Python with type declaration and some other useful stuff. It's very focused on performance. Cython's type declarations are very different from those of mypy, but you will find them familiar if you already know some C. Cython also works well with Numpy, which is nice. 3. There is RPython, which is a statically compiled *subset* of Python. You probably shouldn't use it unless you are trying to write an interpreter. 4. If you simply want "Python but faster", try PyPy. It's an alternative Python implementation mostly compatible with the default implementation (CPython). You could also try Numba. Numba works well with Numpy, which is nice. Both PyPy and Numba use just-in-time compilation (just like Julia does), whicht might or might not match your definition of "compiled". 5. Finally, there are compiled statically-typed languages that are, although clearly not Python, to some degree inspired by Python. One of the most interesting of them is [Nim](https://nim-lang.org/). It's not (and never will be) a drop-in replacement for your Python interpreter, but you can call Nim procs from Python code with [nim-pymode](https://github.com/jboy/nim-pymod). I hope it helps.
Today i played with pdb debugging. And i have some trouble with it. I posted it on /r/learnpython, but nobody answered yet. If any of you could help, i'd be very grateful. https://www.reddit.com/r/learnpython/comments/87qfiz/question_about_syntax_error_in_pdb/ https://www.reddit.com/r/learnpython/comments/87q6yz/looking_for_good_articles_videos_advises_on_pdb/ 
$50/mo. 
Is it possible to open files/dirs across a network yet?
You can run and develop code on a server over SSH. You shouldn't open files on a Windows share (Samba). 
How do I create a new project in PyChart out of an existing folder?
It's the larval roko's basilisk, making sure that there's enough people working towards the goal.
Create a new project and point to that folder. It will ask if you want to make a project including those files.
I've managed to adapt the matplotlib example to use scipy.interpolate.griddata in place of mlab.griddata. One difference between the two is that mlab.griddata mlab's version will accept 1D arrays of differing lengths for xi and yi to define the grid. scipy's version expects a fully meshed grid. I used np.mgrid to generate the required xi, yi arrays. I still need to work this into my code and see if it exactly replicates the plots. from numpy.random import uniform, seed # from matplotlib.mlab import griddata from scipy.interpolate import griddata import matplotlib.pyplot as plt import numpy as np # make up data. npts = 200 x = uniform(-2, 2, npts) # 200 random points between -2 to 2 y = uniform(-2, 2, npts) z = x*np.exp(-x**2 - y**2) # define grid. xi = np.linspace(-2.1, 2.1, 100) # 100 x grid points yi = np.linspace(-2.1, 2.1, 200) # 200 y grid points xi, yi = np.mgrid[-2.1:2.1:100j, -2.1:2.1:200j] # grid the data. # points = np.vstack((x,y)).T zi = griddata((x,y), z, (xi, yi), method='cubic') # contour the gridded data, plotting dots at the nonuniform data points. CS = plt.contour(xi, yi, zi, 15, linewidths=0.5, colors='k') CS = plt.contourf(xi, yi, zi, 15) plt.colorbar() # draw colorbar # plot data points. # plt.scatter(x, y, marker='o', s=5, zorder=10) plt.xlim(-2, 2) plt.ylim(-2, 2) plt.title('griddata test (%d points)' % npts) plt.show() 
I got the scipy griddata function to work! I've added a comment to my original post with the code that replicates the matplotlib example using the scipy griddata function. 
What do you mean? The entire function is pasted. 
I use: object.__class__.__dict__.keys() That or I do: object_methods(object) object_attributes(object) from types import MethodType def __object_attr(obj, mode, keys_to_skip, attr_type): """list object attributes of a given type""" #print('keys_to_skip=%s' % keys_to_skip) keys_to_skip = [] if keys_to_skip is None else keys_to_skip test = { 'public': lambda k: (not k.startswith('_') and k not in keys_to_skip), 'private': lambda k: (k.startswith('_') and not k.startswith('__') and k not in keys_to_skip), 'both': lambda k: (not k.startswith('__') and k not in keys_to_skip), 'all': lambda k: (k not in keys_to_skip), } if not mode in test: print('Wrong mode! Accepted modes: public, private, both, all.') return None check = test[mode] out = [] for k in dir(obj): if k in keys_to_skip: continue try: if check(k) and attr_type(getattr(obj, k)): out.append(k) except: pass out.sort() return out #return sorted([k for k in dir(obj) if (check(k) and # attr_type(getattr(obj, k)))]) def object_methods(obj, mode='public', keys_to_skip=None): # type: (object, str, Optional[List[str]]) -&gt; List[str] """ List the names of methods of a class as strings. Returns public methods as default. Parameters ---------- obj : instance the object for checking mode : str defines what kind of methods will be listed * "public" - names that do not begin with underscore * "private" - names that begin with single underscore * "both" - private and public * "all" - all methods that are defined for the object keys_to_skip : List[str]; default=None -&gt; [] names to not consider to avoid deprecation warnings Returns ------- method : List[str] sorted list of the names of methods of a given type or None if the mode is wrong """ return __object_attr(obj, mode, keys_to_skip, lambda x: isinstance(x, MethodType)) def object_attributes(obj, mode='public', keys_to_skip=None): # type: (object, str, Optional[List[str]]) -&gt; List[str] """ List the names of attributes of a class as strings. Returns public attributes as default. Parameters ---------- obj : instance the object for checking mode : str defines what kind of attributes will be listed * 'public' - names that do not begin with underscore * 'private' - names that begin with single underscore * 'both' - private and public * 'all' - all attributes that are defined for the object keys_to_skip : List[str]; default=None -&gt; [] names to not consider to avoid deprecation warnings Returns ------- attribute_names : List[str] sorted list of the names of attributes of a given type or None if the mode is wrong """ return __object_attr(obj, mode, keys_to_skip, lambda x: not isinstance(x, MethodType)) 
Open a directory with your project files in PyCharm using "File | Open". You may need to specify your Python interpreter if PyCharm doesn't pick up your system interpreter or your virtualenv. Go to "File | Settings | Project | Project Interpreter".
I used to have my code on a network share and phpstorm/pycharm would freeze up and crash after a while. I only use local paths now.
I gotta say: I remember ranting on their user forum about how Partial Commits was a no-brainer (along with seemingly hundreds of other commenters). I'm really pleased to see they've actually listened to the custommer base. Good stuff.
Dataclasses support! I'm so stoked. Proper hinting in PyCharm was the only thing holding me back. And even if you're on 3.6, you can `pip install dataclasses`.
Looking for some input? I'd be glad to look at the code for you.
Is there a way of quickly switching both interpreters and deployment at the same time to different SSH targets? I find that I need to jump between multiple embedded targets and it is annoying to switch both interpreter and deployment each time. 
I would look at np.meshgrid. I am not sure about mgrid but it certainly seems to have a very non-standard syntax!
Longtime vim user here, not touched an IDE in probably ten years. Change my mind?
Partial commits is a win. I'm using git-cola for this now.
This is what I do.
https://confluence.jetbrains.com/display/PYH/Configuring+PyCharm+to+work+as+a+Vim+editor You get all the benefits of VIM, but all the benefits of an IDE (run tests inline, find usages that is context aware, linting, etc)
Oh, huh. I’ve never even used PyCharm’s builtin git stuff. I use GitKraken on the side for all git-related doings, and the IDE doesn’t touch my commits. This is a feature I’ve been used to for a long time; I’m surprised it took so long to get into PyCharm!
This task is more suitable I think for a dictionary lookup type thing. I could make a framework for it if you like. Inputs: desired variable (velocity) and available data (acceleration and time) Output: Best formula to use OR closest match and what info is missing Is that what you're looking for?
Yes, basically. From there on the code gets a lot more easy, it’s just a matter of calculation then. If making a framework is not too difficult for you, then it would be greatly appreciated. Thanks!
If so you just need all the possible formulas in a table and six degrees to Kevin bacon functionality
I use it at work on a fairly large Python 2.7 project, and for me it's all about early detection of stupid blunders. PyCharm has an understanding of what the code does, and can detect mistakes that even linting would not catch. For example, if you do the docstrings right then it is able to tell "_Hey that argument is supposed to be an iterable, but that attribute you're passing clearly isn't_". Unless you're using 3.6 type signatures or other libraries dedicated to that, it's hard to have this level of safety net in Python. One other feature that I love is its ability to jump from am function/class usage to their definition in a single click/key, and back the other way around list the usages of said function/class. It's especially helpful when working on "legacy" code that you did not write. The thing is that Vim can do most of that with the right plugins. Some user have extremely customized and powerful setups and are very productive. But more often I've seen devs join in on our project with only syntax coloring + autocomplete, and those people had a hard time getting their code to pass the strict linting and syntax tests we enforce. It's very frustrating to watch.
I tried meshgrid first and it didn't quite work. Then I found an example using scipy.interpolate.griddata that used mgrid and that's what I ended up using. 
You can do this with mypy and comments even in 2.7
I think for hardcore vimmers the reason to switch is minimal, especially given the rise of LSPs.
https://kapeli.com/dash Has integration's for every editor, even vim and emacs!
Love this documentation style, especially the type signature
I just subscribed! I didn't see it bet for some reason. Thanks.
This are the two sources I use, I admittedly only dabble in all of this though. But even I understand them. Adafruit has a “learn” section on a lot of the things they sell. Maybe that would be a good place to start applying what you’ve learned. 
The one feature of PyCharm (or any JetBrains IDE) that I find difficult to live without is the ability to Cmd+Click (or Ctrl+Click if on Windows or Linux). Cmd+Click on a variable to point back to where it was defined (and if that's in another file, a separate tab is opened, so you won't lose your place). Cmd+Click on the name of a class, method, or function to go to the code where it's defined. Do you want to know where that function/method/class/thingy is used in your project? Cmd+Click on it where it's defined, and you'll get a dropdown list of places where it's used. The time saved by this feature more than offsets the cost of a PyCharm subscription.
So... You're saying I need a table and a function taking into account the six degrees of separation? 
Yeah, but you did not show us a single processed image.
Not my bug, and scheduled to be fixed in 3.8, but using `yield` in list comprehension is considered a bug since it's an artifact of how python interprets list comprehensions as functions. example: list(((yield x) for x in range(5))) returns [0, None, 1, None, 2, None, 3, None, 4, None] which actually makes sense when you think about it, but it isn't supposed to be allowed and it's not really readable.
&gt; While vi takes learning a few commands to ever type a sentence, Emacs has a tutorial as soon as you start it, and a graphical interface with buttons. Yeah, but by the time emacs actually loads up, your newbie vi user will already be an expert with the interface.
Do you have any results from your tests?
Created an API wrapper for **Pastebin**. I didn't find many packages and said why not ,it was also a good chance to learn some other things like sphinx, CI etc... take a look it's still bad but any suggestions are welcome :) https://github.com/Mikts/pbwrap
Our code is forked from a 100,000-line open-source project; this feature has saved us weeks worth of work hours just for trying to figure out WTF was going on. Totally agree.
It's numpydoc. It's a little longer, but it's super clear and it's totally valid Sphinx (just install numpydoc). https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [numpy/numpy/.../**HOWTO_DOCUMENT.rst.txt** (master → bea7614)](https://github.com/numpy/numpy/blob/bea761424753c0612a65a6a91d44f9a81bdc4c12/doc/HOWTO_DOCUMENT.rst.txt) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dwfohd8.)
So the equivalent of `git add -p`?
Just a simple script to go through hundreds of folders, find specific files and copy them renamed. Saves me tens of hours of manual effort. This is why I love Python. 
Thank you u/deadorg and u/tqm2012! I have been getting through Code Academy without much of a struggle and really enjoy it as of late. It’s fun, hands on, and gives practical examples. I’ll check the other resource you gave me. 
PyCharm Pro IDE is free to students/teachers and some Opensource projects. I have used profiling to speed up my code. Helped in http://codewars.com time requirements.
Yes. Exactly. 
No problem! I love AutomateTheBoringStuff because of the practicality. You can read one chapter and already do stuff. Hope you like it. 
Thanks! This is awesome.
I guess there really is nothing wrong with it. Use what you want. I just think it seems really esoteric. I am kind of surprised `NumPy` even offers it. Seems wonky at best with the imaginary numbers, etc. xi, yi = np.mgrid[-2.1:2.1:100j, -2.1:2.1:200j] xi2,yi2 = np.meshgrid(np.linspace(-2.1,2.1,100),np.linspace(-2.1,2.1,200)) np.all(xi2.T==xi) np.all(yi2.T==yi) You need to take the transpose to be the same. Again, use what works. I just think the `meshgrid` is much more readable
Partial commits is huge for keeping a clean and organized commit history. Not having this feature easily accessible was a major reason I avoided PyCharm's VCS features. Psyched to try it out!
You don't even need do strings for it to be able to do that. Holding ctrl and hovering over a variable/parameter will tell you what it things it is as well. Related to the function definition thing, the refactoring tools are incredible: scope aware safe renaming/deleting; the ability to modify the function signature/name/etc in one place and have it change all usages in a given scope is unmatched.
with PyCharm's vim emulation a simple `gd` will take you to the definition, just like in vim.
YOU have sausage fingers.
vim user, I really like the database tool with PyCharm. The fancy ide refactoring stuff seems so much easier than rope. They've got macros working in their vim emulation. It's good vim emulation, but not perfect. It's solves the Python2 vs 3 warts you sometimes get in vim with linting and running things.
The debugger is incredible. My favourite feature is the "Step into next line of my code", which is super useful because if you've got a line with complex 3rd party library code, it won't take you on an unnecessary adventure all the way through every part of the call to a pandas function for example. The debugger also has numpy array and Pandas dataframes support, so you can being up a nicely rendered display of your dataframe and then watch it change as you step through your code. Conditional breakpoints are also super useful: only break if this type (s) of error is thrown. PyCharm professional also has built-in profiling tools (using cProfile IIRC), complete with configurable parameters so that complex profiling can be done at the press of a button. It also auto-generates a series of graphs so you can easily visually inspect everything. Professional edition also has a concurrency tool: run it and it'll build a graph of what and where is running parallel and async. I've found that super useful for debugging async stuff to ensure that it is actually doing what you want/expect. Semantic highlighting is also a really nice QoL touch as well. In a scope aware fashion, it will give different variables different colours, so at a glance you can see all the places something occurs. The built-in type-checking and code-completion is hands down the best I've ever come across. It'll get it right for classes you've written, 3rd-party library code, stdlib stuff. I can't count the number of times where I've gone "what was that method to do &lt;X&gt;? Foo? Fortune?" Hit ctrl+space, a list of available methods and they're parameter requirements pop up. Type to search, currently highlighted method will display further information from the documentation of it's available. Ctrl+hover over a variable to see what type it is. Especially useful when you're working inside a function because it'll tell you what type is actually being passed to it. Will warn you when you attempt to use methods that aren't defined on a variable. Built in PEP-8 compliant linting as well.
I mean these are like the total and absolute fundamentals, and I'm not even being facetious.
I still need to code the backtesting script. Will update.
Yep, and it can even alter docstrings correctly when you rename something. 
I suspect that's exactly what's being called under the hood.
Using `git` on a repo sitting in a share drive is also painful. I don't like multi-second waits to see the result of a `git status`.
IIRC in the IDEA change log they actually say that explicitly. Could be wrong though. 
ok
Yes
http://www.practicepython.org/ has a bunch of little practice exercises to try. 
Hi there, I offer Python (and Data Science) training. Send me an email matt@metasnake.com and I can probably get you hooked up.
Automate the boring stuff is the real shit. Learned so much from there. 
threads and concurrency. you're going to hate the whole set of issues / debates / workarounds / GIL / async / etc. Threads in Java are super common, trivial, uneventful, and ubiquitous. In Python, you're getting involved in a bar brawl.
None of what you said (except maybe the drop down of usages) is different from VS Code, for example, Atom too IIRC. Are there any other things you use a lot that might not be available in less tailored editors? I've considered picking IDEA up (I mostly use Python and Go professionally) but I'm not sure what it'll offer me that VS Code doesn't.
Still no pipenv support yet... can’t wait to see it added. Glad to see more docker support though.
People miss loops when they learn the basics? Sorry, that's like missing multiplication when learning arithmetic.
It's a bit generous to say "all of the benefits of Vim". Vim's handling of buffers, for example, way outclasses PyCharm. That said, after 15+ years of Vim, I switched to PyCharm, and in spite of having poured probably hundreds of hours into my .vimrc and workflow, PyCharm was better for Python code editing on day 0.
The loops article is about avoiding index variables, and how the range function works. A lot of people misunderstand those things when they first start. Things like zip and filter are all that obvious either.
&gt; I keep finding new things I didn't know about the language. That's amazing! Can you share some interesting things you have found out about Python recently? 
Tabpy is awful. Put the data into a database and use a dbconnection to read the data from Tableau. 
You select which changes from within a file you want in a commit. That way if you make random changes while you happen to be in a file, you can include those in a separate commit from your main commit. That kind of thing.
Hmmm. I'm also noticing that the IDE itself looks pretty different. It looks like perhaps there's more padding, lighter borders, brighter gray. Something like that?
I believe you are using Graphene APIs based on an older version of it. That is, it should look more like: ``` def mutate(self, info, name): // ... do stuff ``` Simpler. Alternatively, you could replace `name` with `**kwargs` to silence any potential cases where you forgotten to include a keyword argument, then perhaps fetch it with `kwargs.get('name', '')`. If you need the context, you can retrieve it using `info.context`. Hope that helps :)
I like he new loading graphic
Your last point (your edit), I literally could not code without. Especially for Android when there can be upwards of 50 constructors. I don't know how they do it, but I like how they add the most likely one you're looking for at the top, even if the signature isn't the smallest with the fewest constructors. With a massive API set or even on a large project, this saves so much time not having to look at the class definition at all. 
Speaking of the database tool, has anyone noticed the new "Database Changes" tool window? I don't see that it does anything. :o
I have removed this post as it is aimed at beginners
Visual Studio Code but I can't install any extensions because of a company fire wall. 
I'm reasonably sure that by default PyCharm uses the system Git executable for git tasks.
Happiness. As someone who learned both early in their career I didn't really mind "features" of either because I was young and naive. To this day I absolutely love python and it's my go to for most projects. The three things that will drive you the most nuts with python are threading, dynamically typed variables, and the syntax (specifically indentation)
ok well thanks for the pointers then, hopefully they'll be addressed
Yes, thanks. I recall now while reading somewhere that multiprocessing makes a copy of the function that puts into processing, which would explain why it's not updating the original values. I suspected something like that was going on but wasn't sure. Any ideas on how to fix this and get it to change the original values?
Check this out: https://eli.thegreenplace.net/2012/01/04/shared-counter-with-pythons-multiprocessing Basically, forget about creating a class and use the multiprocessing.Value object designed for multi-process access.
What's the end goal of this code? Does it have to be high performance, or is state/consistency more important? Is it always just going to run on a single host? 
Link: https://github.com/nyavramov/WEBMARIZER The code quality is awful (lots of globals and structural problems), but I wanted to share since I've had fun making it. 
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Data classes and the Protocol type for typing
This was already posted
I use vim since 1998 but once you go Pycharm Professional, you just cant go back :) 
But its Wednesday! 
How does it compare to latest version of Visual Studio? I've never tried it for python but IFAIK they are adding python specific features and getting a stronger support.
I need to dive into it properly, for some reason Home brew isn’t creating the symlink for python3.7 but I have python3 —version to 3.7. Next step is getting it the /bin values set up with Pycharm :) Will go over data classes! 
Okay, well I'll warn you not to spend too much time looking at this if you're new to programming because MPI is a bit obtuse at first glance, but maybe spend 30 seconds looking at mpi4py: https://mpi4py.readthedocs.io/en/stable/ mpi4py will spawn separate python interpreters for each instance, similar to multiprocessing. It's the communications framework used in a lot of HPC applications. You can use it to easily do a lot different complex communication patterns, share data, across many nodes at once, etc. It really depends on what you're doing though, as MPI doesn't have a good resiliency model, meaning if for whatever reason a node fails, you have a hardware problem, etc, the entire program barfs. So people get around this by checkpointing their applications to disk once in awhile. At the end of the day, I think some of the other posters here have had better suggestions, unless you need to run these calculations on multiple nodes at once, share state and be able to efficiently transfer large arrays of intergers/floats/etc quickly, whichout dealing with Python serialization.
What are partial commits? Are they used in Git? I'm a newbie but I feel like you should either commit your code or don't. Why do it partial?
`git add -p` Basically lets you partially add a file to a commit rather than an entire file. Useful for "we can add this part of the file, but this next part is still being implemented".
At the same time, if you are able to, support the team by actually purchasing the product
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
This may be the shared memory wrapper your are looking for. https://docs.python.org/2/library/multiprocessing.html#multiprocessing.Value
Thank you very much. I tried to find the rules for the sub but I am new here. 
You'll need to stop thinking of classes as a simplification. If it doesn't represent a common object that you often talk about in reasonably simple English, you probably don't need a class for it. Learn PEP8- once it's your style, reading basically anyone else's published code will seem cleaner and properly styled. For the most part there's no holy wars about this... closest thing to one is probably the max line length.
Does this help/ https://stackoverflow.com/questions/2369492/generate-a-heatmap-in-matplotlib-using-a-scatter-data-set#2371812 
I have tried Python in VS very seriously, so maybe I missed something, but even in recent VS, it seemed far worse than PyCharm for a somewhat heavier resource hog.
This is big. Sometimes you will just write a few lines of code. Classes are only used when oop actually makes a concept more clear. Maybe you won't even have everything in functions for some things. Python can be almost as convenient for utility scripts as bash or powershell for very simple tasks, and it becomes far better for medium complexity, so you might find it to be a tool for things you'd loath in Java.
Try using a seaborn heatmap - https://seaborn.pydata.org/generated/seaborn.heatmap.html#seaborn.heatmap after you pivot the table using pandas.
Assuming the definition is in the file you have open. PyCharm indexes the entire library and will open the specific file and go directly to the line of a definition in an import. I like vim a lot, but PyCharm has some nice features.
Since people are offering Pycharm help in the comments, one thing I cannot figure out is why my new virtual envs always start with setuptools 28 and pip 9.0.1, when my system interpreter has been updated to the latest for both packages. Any idea how I fix this odd behavior? Windows user.
It just might. I'll have to unpack it with my brain before I'll be sure. Ninja Edit: I'll be damned, but it kind of does help, yeah.
If you know the index of the geometry you want to plot you can just `ax.add_geometries(list(shp.geometries())[index], ccrs.LambertConformal())`If you don't know the index, you can loop through the geometries and records of the shapefile at the same time to find the desired polygon: ``` for r, g in zip(shp.records(), shp.geometries()): if r['attribute'] == 'target attribute': ax.add_geometries(g, ccrs.LambertConformal()) ```
Nvm i fixed it :P 
This is not the right sub. Please go to r/learnpython. You're looking for A = input("Pick an apple? Y/N") if A == "Y": # do something here
Don’t use capital letters for inputs. Caps are for constants, conventional anyways. Try putting your code under main like below: if __name__==‘__main__’: a = input(‘Enter Y/N’) if a.lower() == ‘y’: print(‘You entered Y’)
This sounds awesome!!
Not sure if this will help, but a friend of mine is into 3D heatmaps over time and she uses ArcGIS. From what I understand, there’s a Python programming interface!
Use a Manager dictionary or list to communicate between/with processes. See "Managing Shared State" at Doug Hellman's PMOTW for an example https://pymotw.com/3/multiprocessing/communication.html
Ok, question for you. We are using Python with Spark. We need to run our code as spark-submit over SSH. Here is the issue. After we SSH, we have to get elevated access using pbrun, and login again. The spark-submit runs on that pyspark shell. Is there anyway to debug that using Pycharm Professional?
This Ctrl+click thing.... My God. How have I not known this?! This is glorious. I just spent thirty minutes bouncing around a project giggling like a school kid.
My favorite thing to do when learning a new language is to code simple games like rock, paper, scissors, and tic-tac-toe. Based on the bullet points you provided, it seems like your next step is learning flow control like if statements, which is why I think creating a game of rock, paper, scissors playing against a computer that picks a randomized choice is the best thing to start with. You have to creat logic for the game.
The best thing I ever did with Python was learning pandas. I used it at work all the time, it’s a really powerful tool that beats the hell out of spreadsheets. For that reason, if you get a job as something like a supply chain analyst, I think it would be a good fit. I’m not interested in web design either and I worked as a surgical supplies analyst at a hospital and it was some really interesting data to work with. Supply chain is cool because you can tie your analysis to physical items in their quantities and prices, and bonus for if you’re doing it on a huge scale. I don’t work in supply chain anymore, I’m actually using my engineering degree now and doing other stuff with Python, but if engineering ever takes a dip I definitely would get a job in supply chain again.
Can’t you just do pandas.read_excel() and say something like “for sheet in sheets do this”? https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_excel.html
That sounds like fun also a good way to start. I learned JavaScript when I was younger and the first game I created was connect four. It was fun and satisfying knowing that I had the ability to create something like this. Thank you for the starting points and ideas!
That’s awesome!! No problem, let me know if you want me to dig up my code for when I made my game :)
Are you comparing it to Community version of PyCharm or the pro one. Some webdevelopment function seems to be missing on the community edition. It may not be important for professional developers but hobbyist may not want to pay for licence.
Definition jumping is fairly easy to set up in a vim environment with ctags. [Guide](https://andrew.stwrt.ca/posts/vim-ctags/).
I spend about 80% of my python time in vim. Not because it's better than PyCharm, but only because I'm usually already in a terminal session anyhow. I use an IDE when I want to debug something. Setting breakpoints is trivial; I don't have to drop stupid pdb.set_trace() everywhere. Plus effortless inspection of variable values on run time. It's also nice having an easy to use and intuitive test runner.
It's been possible for a long time. All our files at work are over network mounts and work just fine. 
Java development is heavily influenced by certain aspects of the language. For instance: Java doesn't produce executable files, so the development tools need to provide developers with some way of running their code, something like Spring boot, for example. There's no need for that in Python. Any Python code file is runnable to a certain degree. You can load functions and classes in isolation, without loading the gigabytes of framework code first. There's no such thing as POM in Python. Maybe, to some extent, you can think about either setup.py or Pipfile as replacing it, but not really. Typical cycle of Java development is: write some code -&gt; maven / gradle / ant build -&gt; maven / gradle / ant run (in debugger), whereas you launch the automation tools from your editor (and often don't even know how to do it otherwise). In Python, there's no need for this complicated process, however, some popular tools, that have been written by Java programmers try to add this complication (PyCharm, for instance). On the other hand, dependency management in Python is primitive and super inefficient, so much so that in a realistic scenario you may run into in-house built tools to help with that. Python inter-operates with other languages / environments a lot better than Java. You may program in Java for 20 years and never use JNI or JNA. In Python, you run into C or C++ extensions all the time. However, this also means that eventually you run into inter-operational issues, and you also need to know at least a little bit about compiling those languages, how operating system shares libraries etc.
You win second prize thread MVP. Sweet work.
[Python is not Java.](http://dirtsimple.org/2004/12/python-is-not-java.html) Read it twice. And [Java is not Python either.](http://dirtsimple.org/2004/12/java-is-not-python-either.html) Probably the biggest difference that you will have to get used to is that [classes are not the centre of the Python universe](https://www.youtube.com/watch?v=o9pEzgHorH0). We try to use more functional and even procedural techniques But don't worry, [classes are still okay](http://lucumr.pocoo.org/2013/2/13/moar-classes/), its just the crazy-extreme [*everything* must *always* be a class](http://steve-yegge.blogspot.com.au/2006/03/execution-in-kingdom-of-nouns.html) that we object to.
Aren't there some security issues with it?
Depending if your program is latency intensive or processing intensive, you will find that the pickling for inter-process communication will completely tank performance. If you care about low latency (i.e. many small pieces of work to be done), any shared state will not work well, since there is bidirectional pickling and syncing of the processes. If all you need is to do some embarassingly parallel work with no shared state, by far the easiest thing is using a `multiprocessing.pool`; from multiprocessing import Pool def foo(x): return x ** 2 def main(): inputs = range(100) with Pool() as pool: outputs = pool.map(foo, inputs) # do something with outputs... if __name__ == '__main__': main() If your version of `foo` requires sharing of intermediate state between the processes, you can checkpoint by breaking down your code with clear points of synchronization and repeated calls of `pool.map`. If there is more complicated shared state, I would write the hot spot in C or Cython and handle all of the threading, locks, read-only shared state, etc at a lower level. Python is not well suited to that task. If your code is mostly numpy, then you can probably use `cupy` and just replace `import numpy as np` with `impor cupy as cu` and change all of your `np.` stuff with `cu.` stuff. Since there is a latency of 10-20 microseconds to talk to the GPU, very tight algorithms (many many small pieces of work to be done) do not scale well on a GPU.
Or tell him he can ctrl-B instead 
Did you *install* python in MacOS? Not intending to be annoyingly technical on the issue of semantics, but you said you *downloaded*, from what I recall, High Sierra (10.13) comes with Python 2.7 pre-installed automatically, so you'd have to update it if you go that route. Pretty simple to find a guide online for that.
Wouldn't hurt to play with it and try for yourself.
It is better regardless, imho.
Been using Vim but I just fired this up and I am going to take it for a spin.
And to run C code you need C runtime and to run Assembly code you need a CPU. That's not the point. The Java files that a developer interacts with typically are *.java, *.class, *.jar. None of that is an executable file by OS standards (you would never see a JAR or class file with an executable bit set, if only by mistake). On the other hand, *.py files can be executable from OS perspective, it is very common to have the executable bit set on a *.py file.
the link shows broken to me, could you please provide more details about the book you quoted? like author(s) name(s) / ISBN
yes i am already usung inlineCallback bu the thing that i realy want is : def somefunc(): res = maybe_blocking() # and maybe_blocking would be a rather imaginary macro as : maybe_blocking = { d = maybe_blocking() ; if (d == isintance(Deferred) ) yield d else d 
ok
i searched gevent but i don't think that it has orm and sendmail etc .... i am using all that
Also, try updating pip from pycharm - crashes on file access for me, and corrupts the venv 
Thanks for a mistake. I will correct
Do Memento in this, then your brain will explode
Furthermore, Java has very limited abilities when it comes to data definition. It only has support for literal integers and strings, which is typically not enough for configuring something. Python has literals for lists, dictionaries, sets, tuples, which allows writing configuration, or at least a large part of it directly in Python. Subsequently, the knowledge of how to parse all kinds of configuration / data formats takes a central place in Java world, while it's really not that important in Python world. Since Java needs to be compiled to run, whenever a Java program needs to be automated, it will typically be automated in another (most likely embedded) language, which it can interpret. So, Java has interpreters for JavaScript, BeanShell, Groovy, Python, Ruby, Scheme, Common Lisp, Lua etc. It doesn't make much sense to automate Python in another language, so, whenever there is a language implemented in Python, it is probably just an exercise for school, not a real thing.
&gt; Change my mind? No. I don't care what you use. 
Same here, better to learn while doing! Hmm, not really but if I remember correctly bunch of people have recommended https://www.codewars.com/ haven't used it myself though. 
Could you please please provide diacrictics support on us-intl keyboards on Linux? I'd like to switch my team to pycharm, but considering our language has those pesky diacrictics and the issue is open since 2010, they might not see it too kind...
Lol what are the odds? I saw american psycho 12 hours ago 😁
&gt; so i will not worry i will just call all the function normally In my opinion, this desire in itself is a bad idea but that's your choice. Having said that, I think the other commenter is correct in that what you're looking for is a code editing macro which would require rewriting the AST. It's not simple stuff, and I'm not sure you want to go down that path.
wow, you write a ton of comments! I scanned a few pages just to find something politely witty to say in response to that, like "Please reply to my comments in a time frame where it's reasonable to assume I care", but fell into some rabbit holes of interesting discussions. I like the way you think. Cheers mate.
You should use whatever you prefer to write code. We don't need to change your mind.
Yeah, obviously. What else would they be doing? You think they're implementing some custom thing that isn't already a part of git? How would that work?
I think that I am gonna let down thank you
Is it something more than Vim+ale+(any python linter) can't achieve?
Thanks - I can add that (soonish)! If you want to compile it, you can download ffmpeg.exe &amp; ffprobe.exe to same folder that the python file is in, and it should run. Also you'll need PyQt5. I'll add this to the documentation
I mean orm integrated with the event loop like twistar for twisted
Agreed, though it was really shorthand (via the [change my mind meme](http://knowyourmeme.com/memes/steven-crowders-change-my-mind-campus-sign) for "please give me a list of reasons why I should consider using PyCharm or any other IDE because I'm too lazy to download a trial and too cheap to pay, and too snobbish about my sad devotion to the ancient religion of vim to switch" :-)
TIL
That was indeed the problem! Cheers man!
Anything you said is available in any other editor that uses jedi
I've been missing Execute Code in Cell a lot having used Spyder and Matlab. I'm just curious, is it possible to configure the behavior of this function? It always opens a Python console instead of using the run configurations, and I really just want to be able to do this in the console opened in the Run window, but it doesn't really work as expected. Any tips?
Make sure you run as administrator, use python -m pip install pip --upgrade. If that fails use easy_install.
Could you please create a ticket about this issue? https://youtrack.jetbrains.com/issues/PY We'll likely also need to have [your log](https://intellij-support.jetbrains.com/hc/en-us/articles/207241085-Locating-IDE-log-files) to be able to see exactly what went wrong. Thanks in advance for helping us!
Will this work from pyinstaller-packed code?
True
It does.
Good
Damn, I used PyCharm in school and never knew about this stuff.
Not quite sure, but probably not. AFAIK pyinstaller tries to bundle only necessary dependencies (through some kind of analysis) so it will probably lack pip, despite ensure_pip available on py3.4+. And it manipulates with sys.path / has it's own import hooks which might interfere. You could try it though. :)
My impression was that Spyder was for scientific programming/exploration I don't know if pycharm is any better for that although it does have some support for ipython notebooks but it's probably much better for general development
What? Having executable bit has no meaning at all. Python source files are not executables by any means, they are just scripts. It does not matter if you OS has associated python shell with .py files and does the job for you. Setting executable bit in Unix system will not turn your text python script into machine code. There is no such things like C runtime, C is compiled directly to executable formats like ELF or COFF. 
Pycharm community has everything except web functions, db functions, and code coverage
Hopefully next release will have pipenv support so it will do it for you
&gt; Which is more concise, more readable, and overall nicer. Unless you dislike disguising a call to eval() as a string literal. Unless you like *explicit* calls to format a string rather than implicit ones.
Good
Could you please tell us why you'd like it to be executed in the 'Run' window rather than the Python console? 
Of course people can come up with some pretty awful nested comprehensions, but with the judicious use of white space and indentation to lay out the logical structure of the nested comprehension, there's no need for them to be hard to read. array = [expression for x in [expr for y in values] ] ought to be fine, as should be: array = [ [expr for y in values] for x in values ] Nested comprehensions are easy to abuse, but that doesn't mean we ought to reject the simple cases. 
Better
"You know, the most amazing thing happened to me tonight. I was coming here, on the way to the lecture, and I came in through the parking lot. And you won't believe what happened. I saw a car with the license plate ARW 357. Can you imagine? Of all the millions of license plates in the state, what was the chance that I would see that particular one tonight? Amazing!" - r feynman
Holy Shit! You... You just aint funny man... 
This should catch `ImportError`s and automatically install the package imho.
Good
There won't be any `ImportError`s unless the package is missing on PyPI. It's all done with import hooks.
Because sometimes you work on a feature and you realise there's issues here and there (maybe bugs, maybe incorrect formatting, maybe, etc…), you reflexively fix them as you go along and then you're left with a bit of a mess of a working copy where multiple concerns are mixed together. And you don't want to create a big nonsense commit which does 5 unrelated things and would require a schizophrenic commit message. So what you do instead is split out the working copy using `git add -p` and creating commits from subsets of the working copy until you've either committed or reverted every bit (that also serves as a review of sorts).
It will also understand regular sphinx or epydoc docstrings e.g. def test(foo): """ :type foo: list[str] """ test(1) test([1]) test([""]) PyCharm will warn about the first two calls.
Good
You forked Django?
This is not good
Shameless plug: this could also be done with [Moviepy](https://github.com/Zulko/moviepy) with the following script: import moviepy.editor as mpe clip = mpe.VideoFileClip("my_movie.mp4").resize(width=200) final_clip = mpe.clips_array([ [ clip.set_start(t1), clip.set_start(t2), clip.set_start(t3)], [ clip.set_start(t4), clip.set_start(t5), clip.set_start(t6)], [ clip.set_start(t7), clip.set_start(t8), clip.set_start(t9)], ]).set_duration(2) final_clip.write_gif("thumbnail.gif") 
Ah, I see, that's what line 34 is doing, right?
Yup. Of course it's a bad idea to have a side effect like this done when importing, but... you know. :) Anyway, you can read more about import system [here](https://docs.python.org/3/reference/import.html).
this is awesome...do you have a github page?
...if this isn't sarcastic can you please explain? If it is sarcastic, how bad is it on your machine?
You can get some Vim back via IDEAVIM
100% sarcastic my friend [https://imgur.com/a/uI4J8](https://imgur.com/a/uI4J8)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/oPF7Cwz.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dwgy4c7) 
http://gd2.mlb.com/components/game/mlb/ You can also download all games from 2008-2017 [here](https://spaces-host.nyc3.digitaloceanspaces.com/livebaseballscorecards-artifacts/baseball_files_2008-2017.zip).
......that.....I.....what the fuck do you have open that's causing 6.33 GB of memory use? I'd file a bug, default java configuration options only allow some over 256MB, and I have mine set to *one* GB just because it helps with mako and javascript processing. But that's insane.
"What could go wrong?" the library Cool idea though!
this isn't strictly true, there's the _convention_ of a leading underscore for protected and then there's the name-mangled version of leading `__` that makes it effectively private, unless you really go out of your way to break the encapsulation. 
Well, yes, it's a joke. It actually spawns pip to do all the work. :)
I've got 3 instances of PyCharm open (just Python projects, not much open within those instances) and I've got the VM options adjusted to allow it to us up to that much memory; I found it was too slow with the default settings. -Xms128m -Xmx6144m
Yes use https://pythonhosted.org/python-geoip/ You can get a general area with the free database and more precise if you pay for their data source. 
The hell? Mine rarely exceeds 1.5GB, I'm on Windows 10 x64. 
Yeah they definitely visually updated the platform this year since all the editors now look a bit different. 
What’s with the comments?
Double shift was a game changer too when I found out about it. Four years of using PyCharm nearly daily and it still has secrets to give up.
We use the file system very heavily for code intelligence. You'd notice the difference in performance between having your code on a spinning hard drive vs an SSD. The network latency and samba overhead makes it slower than we'd like. Furthermore, we watch the filesystem for changes to make sure we don't show you old information, and we can't watch for changes on a network mounted drive. If you want to work with code on a network drive, you could set up local deployment, which makes sure PyCharm works with a copy on your local drive, and then synchronizes the changes to the network drive. You can [configure this](https://www.jetbrains.com/help/pycharm/tutorial-deployment-in-product.html) in Tools | Deployment | Configuration.
If you make sure you don't have another Python console window open, it should execute things in the session you already have opened in the 'Run' window. Could you please see if that help you with your use case? 
I'm not really expirienced programmer but is really Python any good for mobile apps? Also I don't really think that Python competes with C since it's high VS low level programming 
[removed]
&gt; If you make sure you don't have another Python console window open, it should execute things in the session you already have opened in the 'Run' window. Could you please see if that help you with your use case? It executes the first cell I have marked in the session in the Run window, but at the same time opens a Python console which it uses for all subsequent executions. If I minimize the newly opened console, I can execute one cell in my Run window, and then it opens the console and switches focus again. This happens on both my macbook and my ubuntu installation. This happens when I have the Run window in floating mode, but it's still glitchy when it's docked. 
Three instances, permitting me to fullscreen three projects on three separate desktops and just four-finger swipe between them. "PyCharm isn't meant to have more than one instance open at a time" seems like a bit of an empirical statement- do you have a reference so that I may educate myself correctly?
The Vim plugin is passable from what I've read. I'm no Vim power user so I couldn't put it to the test though.
ctrl+q while your cursor(as in caret) is on something with a docstring will display that as well.
My reference is the fact that any time I *try* (accidentally, it specifically tries to forbid it from even occuring on linux, and you can only do so if you manage to click the shortcut in an extremely quick time frame) it yells at you or at least is supposed to. A cursory google search shows others experiencing the same, only able to bypass this by starting three separate instances with different idea.properties files which would mean different configuration directories. But thats kinda a hack.
Very cool, thanks for the explanation! I think line by line commits would be hugely helpful
Very cool, thanks a million for the in-depth explanation :) Now I'm quite excited for partial commits!
Because support for this inside the IDE you're already using is preferable to leaving the IDE and dealing with other programs.
[https://imgur.com/a/vLKlf](https://imgur.com/a/vLKlf) I just select the "Open in new window" option- so maybe it's not a new instance. ¯\_(ツ)_/¯
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/oCloniE.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Go to Settings &gt; Build, Execution, Deployment &gt; Deployment. Add a new server with the type of `Local or mounted folder`. I also go to Settings &gt; Build, Execution, Deployment &gt; Deployment &gt; Options and set `Upload changed files automatically to the default server` to `On explicit save action`. Then go to Tools &gt; Deployment &gt; Browse remote host. Right click the folder and click `Download from here`. Now you can edit the code locally and, assuming you've set the upload changed files action, the changes will be sent to the remote(local/mounted) files.
Well, you're allowing it to use ~6GB of RAM then complaining that it uses ~6GB of RAM. RAM is usually handed out willy-nilly by the OS to anything that wants it until you approach 100% usage then it gets nit picky and takes stuff back. I've got 1 project open in IntelliJ, 2 in PyCharm, and and 1 in PhpStorm. Those 3 combined hardly break 3GB RAM.
this makes no sense at all... do you just want to *say* deep learning to hype it up? Your problem is absolutely completely trivial, you can accomplish the whole thing literally by using a dictionary and a simple if/else decision tree.
Python is not a good fit for mobile, in the same sense that you would not pick C for webdev.
You can make android apps with Kivy and python. 
theyre good
I'm not complaining, I've still got 10GB free- you honestly don't think that PyCharm uses a lot of RAM for what it is? I understand that it has a lot of plugins and such, but I find that Visual Studio Code uses a lot less for the same level of functionality and open projects. Please accept my apologies for the incorrect use of instance- there is only a single PyCharm process running (multiple project workspaces). I promise from this point on to keep my sarcastic opinions to myself and only echo the agreed opinions of the hivemind.
Something that I may redo in the future
To the first question, I mean that the AI would be able to judge the values it is given, look for the optimal formulas to use and in the end, alter the formulas (if needed) to suit the output. In answer to your second question, well.. yes and no. I’d like it to learn a function and then learn to either reverse it or change its order of operation if necessary. If you think it is overkill, you are probably right, it was never actually the plan to build any AI-s into this program, I just got sidetracked and thought that maybe, just maybe, it could prove to be a better alternative. 
wants expert advice; doesn't post code 
yay blogspam! go here: https://www.python.org/downloads/release/python-365/
Oh. Well. Okay. Well then, back to the original plan it is. Thank you for your opinion, it helps to have people give inputs on such things. 
Yes, that's convention, not actual privacy. Going "out of your way" means calling the class or function by name like any other
There's no need to get defensive about what I said. I wasn't attacking you or anything.
Python would be good as a backend to a mobile app.
Indeed they are and most other git GUIs support it. It’s really only that the VCS integration in the idea based IDEs has been a bit lacking (probably because they support not only git but also svn and who knows what else).
(ignoring the obvious typo) type() returns the class object, which creates instances by being called, so yes, you can do whatever you want with it. But first ask yourself whether you really need to do it like that, since it's weird to read, and could probably be done in a clearer way. Also, read the PEP8 and use flake8. camelCase in python is horrible. 
Scraping that is going to suck. Is there a reason why you can't use? https://www.pgatour.com/stats.html 
While I'm a big fan of Python, this article does not prove much as to why Python is a "must learn language" or even much to document its "rise." At least a reference to the TIOBE index would have been nice. Not much factual meat in this article...
That's sort of my question. I guess I could do some quick math. If I have literally a book of say, 100k words...say there's an average of...5 characters per word. Say I have 1,000 or so...so thats 1000 * 5 * 100000, which is 500MB. Half a gig of RAM (with a *very* full dictionary). I guess I won't ever reach that much RAM, but it still kind of bothers me to have so much data being pulled into RAM. I can store a filename instead of the literal contents and just have my dictionary point to another dictionary for the individual entry that can be loaded when necessary, instead of ALL at the same time.
Thanks for the response. Is it because all of the clicks? The reason I can't use PGA is because I am looking for tournament specific info, and while that does have all the same stats, they are player specific and not tournament.
If your data fits in RAM, there's nothing wrong with keeping it in RAM.
Most python thing Ive heard today. Have an upvote my dude.
Thanks 😝
It would help if I also put a link to the issue here: https://youtrack.jetbrains.com/issue/PY-29238
 I had a 200k entry dict on a 8gb ram machine. Everything worked fine.
I think it should be stated very clearly that this is a joke project and should not be used *anywhere*. It's a security nightmare and all. It's a cool demo for import hooks though. Has anyone ever built a library measuring the number of import calls of each module? Sort of a PopularityContest for Python.
Looks like v3.6 was released just 4 weeks ago, first release in over 2yrs.
The last I looked, neither Atom nor VS Code did the kind of deep code introspection that PyCharm (or any of JetBrains' IDEs) does.
Yeah those are project windows, not instances. Still surprised by the 6gb need.
Right, I've heard that, but could you describe what that gives you in practice?
Exactly!
Not sure if it's a joke, or if they're so good at AI that the video was created by one. 
Why didn't you just try? It's not like your computer is going to explode.
The ability to get *actual* intellisense on things, even when it's the first time I use a particular thing in my project. This, as opposed to the "Oh, hey, I'll keep track of the keywords and stuff you're using in this file and regurgitate them back to you" version of intellisense.
well I've worked on some pretty huge projects with vim :-)
For datasets in the tens or even hundreds of thousands redis wins hands down. Not sure which python version your using but our team benchmarked 3.5 with datasets of irregularly sized strings between n=10k and 1e6. Around the 20k mark we noticed python performed noticably less well. At a million records redis returned the object almost 30% faster. This was using a local redis instance inside a docker container so network traffic wasn't going external but there would be some overhead.
great answer. Will be giving it a go next time I'm not under enormous time pressure and can bear the dip on the productivity curve.
Python is useful for ai project
It's nice but there is no calibration or at least comparison to other devices. Knowing how much commercial devices are accurate (not a lot), it's a pity
Is it missing elements from the beginning? It seems like the first clip is after he kills Paul Allen, which is probably like 30 minutes in.
So, I just fired up VS Code, opened a new file, set the syntax to Python, and started to type import pandas as pd As soon as I got to the end of that line, VS Code "helpfully" recommended a list of three things to replace `pd` with: `pdb`, `pudb`, and `pandas`. PyCharm knows enough to know the semantics of what that line actually means: I'm importing `pandas` and aliasing that module to `pd`. PyCharm knows better than to do a dumb lookup on `pd`. I then went to the next line and typed pd.DataFrame And then I hit Cmd+Click on `DataFrame`. Absolutely nothing happened. In PyCharm, I would have gone directly to the definition of pandas' DataFrame class.
What does "a more serious language" even mean?
OK I didn't know I thought that it requires some special mechanism like twisted , i am gonna explore it more Thank you
From context, I think "serious" &lt;=&gt; "statically typed" probably.
I personally shill for Julia for scientific programming, but Python is good, too - but you have to recognize that your code isn't all going to be in Python. Rather, Python is the high level organization tying together pieces of high performance low level code that do the heavy lifting, for performance.
Thanks! Swear I'm going blind!
&gt; "Widely used for scientific programming", I don't know if this is true elsewhere, but this is not at all my experience. So this basically means "lots of people use numpy" I think. I get the impression it's big in finance (not very "scientific" but lots of scientific people work there), biology (bioinfomatics for example), linguistics (nltk), and other scientific fields with "lots of hard to design experiements at a little programming" e.g. social sciences, psychology etc. But yeah, these are more "I need to make something quickly" than "I need to make something quick" areas. 
https://docs.python.org/3/faq/windows.html Also, obligatory: /r/learnpython is a better place for this.
A lot of "big data" right now means API calls to job queues and resource pools, and for that, Python does just fine, as does Scala and many others. The surprising loser of the data race has been Clojure, the the language of pipes!
A lot of processing nowadays is just passing data off to API's, such as to Spark or Tensorflow.
I feel like you can break the components of any language down and find another language that does one thing better. Python is inferior to all the languages you listed in those categories as well.
Sorry, I'm new. Thanks for the info though. 
&gt; I feel like you can break the components of any language down and find another language that does one thing better Indeed, that's the point. Languages represent trade-offs and if that particular aspect is massively important to you you might light to use that language instead of a more generally used one. I to pick categories that are very important for particular use cases - important enough that you might use a different language. &gt; Python is inferior to all the languages you listed in those categories as well. Well yeah! Python is very much the "all-rounder" of programming. I was listing things that you might consider serious which C++ is not exactly a serious language for. I guess what python is serious about is productivity for a broad range of things. 
Thanks for the feedback. I am actually working on a comparison of sensors and requirements for using them (amplification, filtering, etc.) but it was getting too long so I split out this part. When you say accuracy, in what sense? The sensor used here is analogue, so just outputs changing light levels (the HR calculation is in the code). The biggest issue I've seen so far is noise.
The debugger is awesome. Having everything integrated and not sucky is awesome. It’s just a really good IDE. Easy to manage pytest, venvs, etc.
Thanks for the thorough reply. &gt; I hit Cmd+Click on DataFrame. Absolutely nothing happened. Nothing happened because in VS by default it's F12 to go to definition. Shift+F12 - show dropdown list of where the thingy is used Mouse over to get docstring and so on. 
/r/learnpython 
Accurate in the sense of providing the good heart rate. Sorry if I sounded harsh, it's just that I noticed that commercial (not medical) wristwatch with heartbeat detection usually give bad results.
There's no overarching reason why you wouldn't be able to import a library if it exists in the site-packages for the current python interpreter. `.pyc` files are generated every time you run a python script. Think of them as "compiled" python files. There's probably a bunch of information that you're not including here that would make debugging possible... docker-compose file, dockerfile, invocation of import, etc. 
This seems trivial and useless as hell. I can guarantee that these characters appear under the hood as well. 
 import random class Reel(): def __init__(self, name): self.name = name self.val1 = random.choice(values) self.val2 = random.choice(values) self.val3 = random.choice(values) def show(self): print("Reel: ", self.name) print(self.val1) print(self.val2) print(self.val3) print() values = ["hearts", "diamonds", "clubs", "spades"] reel_1 = Reel("one") reel_2 = Reel("two") reel_3 = Reel("three") reel_4 = Reel("four") reel_5 = Reel("five") reel_1.show() reel_2.show() reel_3.show() reel_4.show() reel_5.show()
Best thing I've read in months, my man.
Data Mining, Fourth Edition: Practical Machine Learning Tools and Techniques by Ian H. Witten (Author),‎ Eibe Frank (Author),‎ Mark A. Hall (Author),‎ Christopher J. Pal (Author) Review "...this volume is the most accessible introduction to data mining to appear in recent years. It is worthy of a fourth edition." --Computing Reviews From the Back Cover Data Mining: Practical Machine Learning Tools and Techniques offers a thorough grounding in machine learning concepts as well as practical advice on applying the tools and techniques in real-world data mining situations. This highly anticipated fourth edition of the most acclaimed work on data mining and machine learning will teach you everything you need to know to get going, from preparing inputs, interpreting outputs, evaluating results, to the algorithmic methods at the heart of successful data mining approaches. Extensive updates reflect the technical changes and modernizations that have taken place in the field since the last edition, including substantial new chapters on probabilistic methods and on deep learning. Accompanying the book is a new version of the popular WEKA machine learning software from the University of Waikato. Witten, Frank, Hall and Pal include the techniques of today as well as methods at the leading edge of contemporary research. Key Features Include: Provides a thorough grounding in machine learning concepts as well as practical advice on applying the tools and techniques to your data mining projects Concrete tips and techniques for performance improvement that work by transforming the input or output in machine learning methods Downloadable WEKA software toolkit, a comprehensive collection of machine learning algorithms for data mining tasks-in an easy-to-use interactive interface. Accompanying open-access online courses that introduce practical application of the material in the book. This is written by the people who originally developed the [WEKA](https://en.wikipedia.org/wiki/Weka_\(machine_learning\)) machine learning suite. 
It's not quite that bad.
I programmed a script to pull images from a downloaded html page and name them in order from 0-End so I could download manga from this site, I made it on Linux but it should work on all OSes. It's on my GitHub ---&gt; github.com/toldoth
thank you
You *can* but in my experience you really shouldn't. Back end server for one? Sure. But performance is degraded if you're going to use something like Kivy. And it's "designer" is currently still in alpha. On the other hand, near completely cross platform and quick dev time. Personally I write mobile apps in Java/C#. Kotlin is also a good choice.
There's a wadsworth constant setting. I think this may be the culprit
they're good dogs drvinceknight
Ah, well, Shift+F12 *did* bring up [something, but not something that's useful](https://i.imgur.com/rB6DmY5.png), I'm afraid. Even over a minute later, that "Loading..." box is still hanging. PyCharm, on the other hand, opens up the code for Pandas and brings me to the DataFrame class definition in a fraction of a second.
Oh not at all, was just trying to clarify inaccurate in what sense. Lot of places for it to go wrong. Yep the wristwatch sensors are really sensitive to being jiggled while moving, creating noise which can look a lot like beats. With this sensor I can the raw data while wearing it, would be interesting to see how bad it looks!
Never seen a real benchmark like that, very interesting. But you should probably re-run the benchmark on 3.6, since the dict implementation was replaced by a new compact data structure that is supposedly faster than 3.5's.
Off-topic-ish: As a non anaconda user, can someone explain to me what the point of it is? It seems to be just a bunch of packages that could easily be on pypi, a package manager that confuses new people and isn't any better than pip, and something to do with R and maybe deploying?
No, pycharm has recently added scientific mode which is really great for exploring code blocks interactively.
Show defintion - F12 
`No definition found for 'DataFrame'`
Oh cool, they I'd think pycharm would be better for the vast majority of cases It's just got a ton more polish and effort 
i also just learned about this lmao. And i use pycharm everyday. Thank you people of reddit :D
Do not post images of your code, post your actual code on a site like pastebin or whatever.
Project 12 of Treehouse's Python TechDegree. A big social network/team-building type site with plenty of features. Project 12 is the final one before the final test and I don't feel even remotely prepared for any kind of job, but it's definitely a good foundation for further independent learning.
You want to control the odds? If your list was values = ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine] Each value has a 1/10 chance, so 10% 
Well, what can I say? I have no idea how you "fired up" VS Code, but you definitely did something wrong. If you want VS Code to work for you, check its settings. But if you just want to prove what a piece of shit VS Code is, then let's simply finish this conversation. 
It works out of the box on a number of platforms and seems geared more toward researcher/science than programmers. My colleagues are able to use python scripts and notebooks and make tweaks but are not able to do things from "scratch". The included libraries are the ones we use most for data analysis so all they need to do is run the install and then they are up and running.
not sure how ethical is this here in the subreddit, so I won't post any links but it took me 15 seconds to find it online 
That depends on what you mean by noob.. If you have no programming experience, then there are a lot of minor things you need to learn. To do this, you need to learn how to use loops, if statements, strings, pythons urllib library, json data structures and twitter api 
Ah lol. It applies to youtube videos with long intros, but I don't know about movies. The movie is 1h40 long and the first clip is just after 30 mins. Might be a little too draconian.
In most cases conda packages come with all dependencies pre-built while pypi packages do not. It's no fun to have to hunt down C/Fortran libraries and figure out how to build them and get all the environment variables just right so everything works. conda takes care of it automatically. Also conda by default installs things in the home directory, which is very important when working in a computing environment where you don't have admin privileges as many scientists do. Plus some packages are published to conda-forge months before they make it to pypi.
Total noob. I did java programming for fun like 12 years ago. That is it.
Something like this should work. import requests api = 'https://koinex.in/api/ticker' r = requests.get(api) koinex = r.json() btc = koinex['prices']['BTC'] print(btc)
I will check it out, thank you!
 def much_much_easier(list1, list2): for entry in list2: if entry not in list1: list1.insert(0, entry) return sorted(list1)
check out /r/learnpython too
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [I made a python cheat sheet](https://np.reddit.com/r/learnpython/comments/82t191/i_made_a_python_cheat_sheet/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
There have been some good answers so far but I thought I'd elaborate a little more. First, "will there be performance problems?" is underspecified. Are you concerned about performance problems doing key lookups? Manipulating the *values* associated with those keys? Or perhaps insertions? You can do a lot of different things with a dict. Lookups are constant time ( `O(1)` amortized ). Insertions...I don't think have a 'generalized' big-O cost because it depends heavily on the underlying implementation of the hash map. From what you've said so far, it sounds like you're building the dict ( insertions ) only once per execution, so you can probably mostly 'ignore' the cost of doing so. What about lookups? How frequently are you searching for a key? How many keys are there? For a large number of keys, you start encountering the risk of key collisions. Python's hash map implementation has contingencies for handling key collisions ( that I cannot summon details of off the top of my head ). How often is this program run? Is it always 'start from scratch'? Is it a persistent daemon/service which is queried by external code? If it's the former AND the program is executed frequently, maybe you *shouldn't* 'ignore' the cost of building the dict. If this program is run many many times per second and the dict is large, but it only looks up a single value and does something with it, then exits, then *building* the dict may have a non-negligible cost and you should consider using some sort of binary storage format or even offloading storage to something like a database ( SQLite for local-only work, redis/memcache as mentioned by others if multiple applications/nodes are querying this data ). If the program is a persistent service, you should look at the usage patterns. Generally speaking it's hard to get more efficient than a hash map lookup. Squeezing more efficiency out of lookups would probably involve switching to a more advanced storage mechanism like a real database with indices on relevant columns. Odds are good that the dict is one hundred thousand percent NOT going to have any meaningful impact on your performance. It's very like that what you do with the data contained therein will be most impactful. Are you doing string manipulation? Are you doing network operations? Are you nesting `for` loops in places where you might be able to devise an algorithm that performs fewer operations, or devise a way to reduce the number of iterations these loops perform ( filtering results out of your data set before ever entering the loop in the first place ). For example, the following code is *quadratic* in execution time: for x in range(0, 1000): for y in range(0, 1000): do_stuff(x, y) If your work can be reduced down intelligently, such that you can do fewer iterations, you'll see performance gains: start_x, end_x = 450, 500 start_y, end_y = 25, 900 for x in range(start_x, end_x): for y in range(start_x, start_y): do_stuff(x, y) Simply because you'll do fewer overall iterations. Of course, the exact nature of the 'work' you're doing will determine what sort of optimizations you can make in this vein.
That is awesome. I didn't even know that existed.... Will definitely check that out - thanks for sharing!
Python is English like so you can just get the syntax easily! It's best to divide the tasks into sub tasks and then figure out how to accomplish those tasks. For instance, for you bot Tasks could be - 1) find tweets with defined words 1.1) how to connect to twitter 1.2) fetch tweets 1.3) find subset of tweets with your defined words 2) compose a reply...... This way you can check subtask one by one, test and build the code. I suggest keep the code on GitHub or bitbucket. It helps in step by step development. 
A better question is how hard would it be to ship your own cpython env(10mb+-) on android inside your app? Because at-least then you can use python as the core of your hybrid mobile app.
Thank you!
 True... that iterates through list1 each time through the for loop. Even easier if we aren't worried about the O(n) time: `sorted( set( list1 + list2 ) )`
Maybe [Folium](https://github.com/python-visualization/folium)? 
I have been trying to get around to doing something similar yet to the end of measuring heart rate variability. This tutorial is useful but I was wondering if you have any thoughts?
It's fairly easy, if you access the statistics with a browser first and then just copy the cookies into the http library of your choice. The following code works: import requests from pyquery import PyQuery as pq years = ["2015", "2016", "2017"] cookies = dict( JSESSIONID="2EE53DDFC576BB012BDA7FFF426A23FE.cfusion", CFID="4167011", CFTOKEN="74756338", acceptedtos="yes", frominside="yes", ) for year in years: url = f"https://tfdfreports.pgatourhq.com/inquiry/prod/statrecapbyevt.cfm?page=statrecapbyevt.cfm&amp;t=R&amp;year={year}&amp;sid=02564&amp;type=Y" result = pq(requests.get(url, cookies=cookies).text) rows = result.find("table [bgcolor='#FFFFFF'] tr") for row in rows: cells = pq(row).find("td") print(",".join(pq(c).text() for c in cells)) 
Thanks so much! I'll try it when I get home. Well, the past data will never change, so it's just a one time scrape for all the stats.
If you don't mind installing pandas, then this will give you BTC price: import pandas data = pandas.read_json("https://koinex.in/api/ticker") data["prices"]["BTC"]
Exactly what I thought, he could probably monetize this.
Well that's 5 ways to run a shell command in python, and one of them isn't wven complete...
Nicely sorted list for different objectives to leaen py
I made a spam email for this purpose. I made it reply so I could read the funny responses the "AI" (that responds) comes up with.
That's so annoying! You have to remove the trailing slash from the URL. Make sure that your address bar matches this: http://gd2.mlb.com/components/game/mlb/year_2017/month_04/day_09 NOT this: http://gd2.mlb.com/components/game/mlb/year_2017/month_04/day_09/
Can you send me the command you're running in the terminal?
Nice list! I just open sourced a platform that teaches python by developing arcade games.. http://predigame.io. Check it out!
What's your event data like? \(I.e. event size, volume, burstiness, etc.\) The standard solution is "use a message queue" — RabbitMQ and Kafka are common options. Depending on your performance needs, there's a good chance Python's not fast enough, either, but if you're just prototyping or plugging into a larger system it should be fine.
[removed]
numpy.random.choice lets you specify probabilities 
Couple messages a second at max given the current speed. I'm really looking for something straightforward that gives me clean pythonic code. 
This was posted by the official PSF twitter account. It looks like they haven't fixed the link yet. https://twitter.com/ThePSF/status/979463676083261440
Just add a few red arrows and rings and the top youtubers will buy that thing.
If you're sticking with pure Python, there are Twisted and PyDispatcher. Haven't used either, but an old colleague was a major Twisted contributor and described it as "grotesque, but powerful". If you're going with an external MQ (Rabbit, Kafka, even Postgres, …), it basically doesn't matter — just pick an adapter and run with it.
Not very versed in Python. Why is it a joke?
.npy is fine, but this article is not good. First, the benchmark includes splitting and reshaping in the pure python, and not in the npy example. Second, the right baseline is genfromtxt, not pure python.
Haven't run it but it looks like your bullet checking code is outside of your main game loop so it never runs. This means that the bullet state never gets reset to ready. Try moving those functions into your main loop. Also, no need to set move_left and move_right twice.
I love moviepy! Use it all the time for video edits. 
&gt; a speaker told her class that having Python on your resume would be a huge plus for some firms. Absolutely right. We have [a pretty long list of learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F). Try a few and see what resonates. I recommend you guys dream up a project and start on it as soon as you can. I think it's a lot more fun to program with a personal goal. Come visit us in /r/learnpython if you get stuck. 
It's far less useful than it was 2 years ago. Now `pip install scipy numpy matplotlib pygame` all works on windows, whereas it used to explode 
The main plugin for Vim is [python-mode](https://github.com/python-mode/python-mode). It's good, but sometimes code that runs on Idle gives an error on Vim. It also has problems opening large files or pasting large strings. I can quickly go through a 100 page string on Idle, while Vim/pymode chokes when I paste long text.
Hi Folks - I run the Python teams at Microsoft. Currently looking for devs to work on [cross-platform VS Code/Python editor++](https://code.visualstudio.com/docs/languages/python) and [Azure Notebooks (Jupyter as a Service)](https://notebooks.azure.com) VSCode: is mostly typescript, some python. You can check out the code on github. Azure Notebooks is hiring for FE and BE devs. FE is C#/.net. System runs on linux/docker. I'm looking to hire about 5-7 devs during the next 2 months. Local (Redmond) is preferred, but exceptions can be made! All our code, whenever possible, is OSS with a permissive license. Ideal candidates have 4+ years of relevant industry experience, are passionate about Python and developer tools and productivity in general. Having written extensions for VSC or Jupyter is a plus! If interested, pls send your resume to pythonjobs@microsoft.com with the title "VSC-Python" for VS Code or "AZNB" for Azure notebooks. Thanks! External jobs posting links (you should apply here as well, tho email to the adrs above will get processed sooner): https://careers.microsoft.com/us/en/job/402347/SR-SOFTWARE-ENGINEER https://careers.microsoft.com/us/en/job/390321/Software-Engineer 
EDIT: I think you might be talking about the Pycharm plugin. I tried it, it's okay.
Ah, I see, thanks.
Not my fork, just wanted to share this here because this deserves more attention.
lol every in "go" they call it a feature `import "github.com/user/project"`
Python 3.6 added [`random.choices`](https://docs.python.org/3/library/random.html#random.choices) which also allows probabilities. 
&gt; I recommend you guys dream up a project and start on it as soon as you can. +1 
To me, it's just always seemed kind of insular. The whole thing could probably be replaced with a python or bash script that just installs things + dependancies, and from then on you're not hamstringed by the surrounding ecosystem, or having to juggle both conda and pypi etc.
I agree, Moviepy is wonderful! I needed a visualization of eeg seizure data and it was the simplest and quickest way to get what I wanted done. The flexibility of the library is amazing
From what I have been reading it is best to test your HRV first thing in the morning. It is a "score" on how healthy you are at the moment (maybe healthy isn't the right word) High HRV is good and low is bad. Basically a measurement of your bodies ability to adapt to changes in your environment. Meaning it can ramp up your heartrate, if necessary and down regulate easily. So you would need to measure the time differences between heartbeats and measure those small differences. Thanks for the link to the library I will look into that. I am also looking to work on a RPI and basically have it set up on next to my bed so I can test it every morning.
Do you have any project recommendations to start?
Agreed, but meh, conda comes with pip so you can just install it and forget about it. It was a godsend 2 years ago back when numpy on windows was hell, but now I don't even install it
Thanks for the response! My girlfriend has asked a couple of times “what does it even do?” and I’ve had a bit of difficulty answering that because it’s not really something I ever think about. Any input on how to explain to her “what it does”? I wish I was better at explaining to her because she assumes I’ll have answers since she knows I’m in the lab writing code most days.
Always, always, always profile performance before thinking about optimization. So how fast does your code run on your test dicts?
TL;DR version &gt; So: is Python compiled? Yes. Is Python interpreted? Yes. Sorry, the world is complicated...
The lazier solution may be a better option. Depends on your use-case exactly. Pulling contents from a file as needed will simplify parallelization and allow you to scale as much as needed. Load it all at the beginning if you want to run analysis on ALL the data, versus individually.
You may want to check out some jupyter notebooks too. There's plenty of public ones that can go a long way towards some of the "but what can it do?". They are used a lot in data analytics and also to help bridge conversations between technical folks and not-so-technical people. Sorry I can't send links at the moment but it's just a Google away.
It looks like you never grabbed your variable bullet from the global state in fire_bullet(). See how you do "global bullletstate", but not "global bullet"? 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
This is better suited for r/learnpython and /r/learnprogramming 
This has nothing to do with Python and is spammy
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
For more background information on automatic differentiation in general, this survey article was recently updated: https://arxiv.org/abs/1502.05767 
Ah, okay. I’d probably do pd.read_excel() and do my analysis using pandas and then do df.to_excel(), but I might be missing the point! Are these files too huge to load into memory?
Appreciate it. No, the pandas excel completely removes all other info from the spreadsheet which isn't good. I just need to truncate and load a sheet whole preserving the rest 
I'm not sure how qualified I am to answer this. But I might have a bit of relevant experience, I used to answer my girlfriends programming questions and have vaguely mentored a dozen or so people with different capacities in various capacities (including utter beginners). I'm sorry for the length... I'm actually mostly writing this for myself :/. Some thoughts: # Learning styles [Learning styles as normally conceived are garbage](https://en.wikipedia.org/wiki/Learning_styles#Criticism). However, I think there are a couple of things that can play a role: * Related experience * Personality type This can all feel a bit forced at times. But if someone has done a bunch of music, maths, language or philosophy these all vaguely feed into programming. An interesting point is that "design patterns" have their root in [architecture](https://en.wikipedia.org/wiki/Christopher_Alexander) as a kind of "typology of interacting forces and common solutions" and I would maintain that this sort of fuzzy "balancing of conflicting forces" is an important skill in large projects that doesn't necessarily show up in a CS degree. So yeah, leveraging experience can be useful... though at times difficult to do. # Interpersonal style So this one can be a bit complicated. But you should be careful not to overteach since this is one of the most likely problems you might hit up against. This wasn't really a problem for me as my girlfriend was sufficiently disagreeable and opinionated (in a good way) that she would basically never be overtaught. I'm the kind of learner who will have tried a bazillion things before I ask people, and generally find that other people aren't any use, but if they *are* useful I'll turn them upside down and shake them until the useful information falls out of their head... but other people don't have this... forceful... style of learning and instead will politely sit there and listen to one spout irrelevance. I imagine it might be relatively easy for you to * Smother your girlfriend's agency as a learner * Smother her with complicated knowledge * Assume things are easy when they aren't So there are a million different ways such interactions can go, and a million different solutions. But a few ideas are: * Pointedly refuse to type anything on your girlfriend's computer - that way at least every action at least goes through her head. I find this generally works quite well for me... but I've had other people still complain that they don't understand what they are typing. * Give your girlfriend a chance to do stuff by herself without you watching. A good way to do this might be to kind of laze around coding while watching television and then have her ask you questions as they come up. That's kind of the optimal "ask stuff when you are stuck but not feel like I'm interrupting or being talked at environment" ## Learning by doing versus learning by itself So I have recently developed this suspicion that "orderliness" affects how you like learning - this while I was learning a foreign language. I discovered that my favourite way of doing stuff was kind of "find something hard" and then use a dictionary, corpuses etc etc to ask all the questions that come up and that I utterly hated duo lingo and exercises etc etc. Even before this I had a word for this "learning debt", find something hard to give all the theory meaning. But I know someone else who is pretty good at languages and self-teaching and his approach is pretty much "work through the books in order doing the exercises". But I've spoken to people at my work who have quite different ideas, they say things like "you should learn maths well before starting such and such"... they also had a very neat desk and wore shirts to work. I really thing there might be a difference here in how people learn. Why's this relevant... I'm not sure. But this kind of thing can make a massive difference for self-directed / semi-self directed learning and what the approach should be in a way it doesn't in formal education because in formal education you kind of "do the role that you are meant to do". I just suspect there are different degrees to which people like to "go through everything in order and understand stuff" and "get good and messy" when learning, and this could be a point of disagreement. # Learning communities Learning communities are useful. It might be good for your girlfriend to learn python together with another beginner on her course, that give her someone else who will be trying to understand the same things. Teaching them both stuff at the same time would very much change the learning environment (and make it harder for you probably), also be an interesting interaction. (anecdote: I saw a language teacher teaching someone in a cafe this week, and then a woman came along with another couple of students, and I saw this interaction where the language teacher was studiously ignoring this other woman to the point of not even looking at her, and then the students left together and they started talking like good friends / romantic partners - yeah an interesting interaction) You might consider going to a python meetup together. It helps that you both don't know python that well here. You could act as "social glue" (again depending on what your personalities are like), to facilitate interesting questions. There was a medical doctor I met and a python meeting who was trying to learn programming and he seemed to get a lot of help and good contacts out of doing this, programmers seem to love helping people from different fields. # Mastery and the mundane So one of the beginners at the company I worked for who was working as a general analyst / useful person in a finance company posited learning SQL as being the most important thing in him learning python. That's a slightly odd thing to say, but the reasons he gave was that you could "understand how the whole programming thing works in a limited environment". My model of this is more that * It's something that was useful for him every day * It interacting with the rest of it worked * It allowed him to answer questions that he actually wanted to answer * It was a small enough problem that he could experience mastery over it I've heard it apply to other people who have become programmers by automating bits of their job. I know that my girlfriend who taught herself programming learned in this sort of way (before I knew her) * Using the command line * Learning latex * Automating bits of document generation * Learning vim * Automating bits of her day to day life (e.g. she had a command line program to tell her the weather). I don't know how that might apply to your girlfriend, but I think it's worth thinking about. Things like using `python` or `R` for her statistics, playing with `ggplot` for any plotting she's doing, using markdown rather than word, playing with a markdown language for any drawing she is doing rather than using a drawing program etc etc are all interesting things to do, using mutt for mail. Basically *any* activity that use a command line or textual interface that you can get mastery or control over is the kind of thing that "turns one into a programmer" rather than just someone who is learning to program. ------ Anyway, I hope that might be useful and not just boring wittering. I would entirely agree with the earlier suggestion about going through resources to see what fits best and getting a mini-project. 
What does python do? Anything. Python is turing complete, so in theory any computer program can be written in python. In practice, python is used mostly by websites (reddit, youtube, dropbox, etc are powered by python) and data scientists. Compared to other languages, python's strength is that it's very fast to program. This means programs written in python can be very dynamic, you can add features very quickly. Or you can quickly experiment with data models. A big disadvantage of python is that as a scripting language, it's hard to hide your source code. That's why most python programs are open source or offered as a service (ie a website). In terms of your gf she seems to be asking "what does a computer program do"? A computer program is good at boring repetitive tasks. Anytime she finds herself doing something repetitive, she can write a computer program to do that for her. For instance, I got tired of refreshing reddit all the time; now a python program checks reddit for me and opens up any new posts or mail. Once you know what's possible you will find a million uses for it. 
As far as "what it does", I think that scraping / beautiful soup has some immediately obvious noticeable action.
&gt; I didn't down vote you. Sorry for the assumption :/. Have an apologetic upvote!
&gt; Just because another language does something better doesn't mean that it's the only language that is serious about it. I'd agree with that. Seriousness is a kind of vague word! I'd say that C++ is no where near as serious as *golang* is about concurrency for example, and nowhere near as serious about formal verification as *ocaml* or haskell in different ways. &gt; I just don't think anything you said is relevant to python seriousness in regard to scientific programming. Yep. I'd agree with that. I guess I was trying to say that "serious" is a pretty use-case specific term in response to the idea that "python isn't a serious language" but "C++ is a serious language". I'm mostly responding to this suggestion by saying "hey what you mean by serious is really really use case specific". This all gets really linguistic. My assertion would be that python isn't an "easy to use toy" as far as scientific programming goes. I think python is a fine language for a whole lot of scientific computing, numpy is great, scipy is pretty good, there are a lot of people doing maths in it. It's probably second only to `R` in terms of the number of useful libraries for it. And even if you need to use libraries in C++ you can. The limits you are going to hit up against are performance / multiprocessing issues if you really really need to use every clock cycle your computer has (rather than say - just use 10 computers) and the fact that wrapping libraries in other language can be a bit of a pain. The additional seriousness that `C++` give you are mostly to do with performance, control and what languages people in your field are using rather than scientific computing itself. 
https://kivy.org/ 
`print_pretty_cards` expects a list of cards, not a single card. To print a single card you need the `print_pretty_card` method: Card.print_pretty_card(card) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
btw pil is an actual python library: Python Image Library.
Or http://ProgramArcadeGames.com
I use python-mode too.. Never had too many problems. If you have folding enabled, it will slow it down. That is a issue. I have solved that using the `FastFold` plugin. From what I recollect, the FastFold plugin disables folding, when in insert mode etc.. so it speeds it up quite a lot.
I do have folding enabled. I'll investigate he plugin you mentioned. Thanks.
"Another factor that makes Python such an attractive programming language is its readability and efficiency." Readability, yes! Efficiency, big no.
Yeah, I was going to use it as an example but realized that the virus was more relevant to the real risk. Installing PIL by accident would be relatively benign.
I use YouCompleteMe, but its not as good as the autocompletion in VSCode. Is there a good write up how to use LSP with python in VIM in linux/windows environment?
Ah, I see. I wanted to experiment with just one card to check it was working. Not knowing it needed multiple to work. Thank you! I actually intended to post there but forgot when I changed accounts, oops! Thanks for the advice, I plan on learning a lot soon.
Ah, okay. Spreadsheets suck in that way, with people communicating via color coding and putting multiple tables on one sheet and stuff.
Haha yes. So the xlwings I posted is suppose to do that however somehow in 1day that code doesn't work 
use urllib2 to request the twitter api http(s) link https://developer.twitter.com/en/docs/basics/getting-started when you use requests, the api will return a json response and then its up to you to extract the data you want from that json response. you can always watch some video tutorials on web scraping 
Awesome thanks!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
If you could find an interest group, local enviro, justice, research, etc. that needs web presence, analysis, communications, or research you could volunteer as a developer. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Oh so it needs to match up with global each time? 
Just getting started with Make Your Own Neural Network by Tariq Rashid, and I'll be exploring that all week!
&lt;3
Heres the thread: https://github.com/python-mode/python-mode/issues/523
No.fucking.way. You are awesome bro , thanks for all the content. 
Why was "let a DB engine do most of this work" not a solution?
Look up codecademy for syntax. For application of Python, Udacity and Udemy are mostly free and are AMAZING (Tutorials and hands on application). I’ve had huge success with both for learning ML and data science in a relatively short time. That being said, learn Git and master GitHub. Build yourself a GitHub page and be ready to show that to hiring managers when applying to jobs. They will ask for work experience — your GitHub page is work experience, whether you got paid or not. It’s not about how well you code, it’s about your willingness to learn and how quickly you can apply it. Then, of course, you’ll have to show iteration on your projects and show that you’re constantly trying to make them better/more efficient. Work ethic, critical thinking skills, and competence are far more valuable skills than actually knowing a language forwards and backwards. 
Thanks! But when I tested today, the problem was gone. I reinstalled neovim from source yesterday because of another problem, so I think it fixed something I was not even aware that was broken :P
RIP
I would start with pandas and plotly. Just get all 4 types (http, tcp, dhcp, dns) on graph with 1 line for each. Once you do that you can start trying to figure out how to use dash. Starting with dash right away if you don't know how to use plotly will seem really complicated. 
Depends on what you mean by proficient.....like, working level? I.e you don’t need to google syntax....probably a month or two if you have experience with coding in any other language and how the logic of programming works. However, if you’re talking like everything you ever need to know and you don’t need to consult outside references? Probably a few years at least. Like I said, I’ve been doing it for 9 months and I know enough syntax to read and digest and think about code, but if I’m doing something that I haven’t done before I’ll still consult stack overflow and I don’t see a scenario where I’ll ever stop consulting stack overflow tbh. It’s a fantastic resource. If you’re looking for books, O’Reilly has a lot of REALLY good python books that are super easy to read. The pocket python reference book is a must have......sorry, I’m rambling now. I can talk all day about it. Any questions, feel free to PM me.
Trying to go straight into Dash has been very hard. The plotly examples seem much more straight forward. I like how easy it is test Dash with running the python file and seeing it with the localhost address. For testing plotly, do I use jupyter notebook? And, thank you for your input. This has been very stressful for me..
Your rambling is appreciated my friend. I will definitely PM if I have any other questions.
Lol ... Read the article.
Thank u I will try
https://www.fullstackpython.com/
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-11) - Previous text "edX" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
You might get the impression that machine learning is where all the jobs are by reading this sub. I don't believe that to be the case, and it's not going to be a good path for someone that doesn't have years of programming experience or a formal education background. If you want a job as a programmer, the path of least resistance IMO is to go through the 'dev ops' route. Learn linux, get a linux certification, pair that with your programming experience and 'tech support' experience, and you just might find yourself in the field. Other than going the devops route, the other entry level route is web apps. Django, Flask, other similar frameworks. Learning how to write DB queries will be helpful. Again, most of this stuff is going to run on linux, so learning some linux isn't going to hurt you.
Efficiency in the the sense that developer time is more expensive than CPU time. 
&gt; In our example, the machine has 32 cores with 17GB of Ram. About the data the file is named user_log.csv, the number of rows of the dataset is 400 Million (6.7 GB zipped) and it corresponds at the daily user logs describing listening behaviors of a user. Wtf.....
You need to set up some form of IPC, the simplest being a mp Queue. https://docs.python.org/3.5/library/multiprocessing.html#contexts-and-start-methods The multiprocess library forks (in linux / posix os) a new process, which is a copy of the existing process. Thus, any references to instantiated objects will not refer to the same memory location. The Queue allows you to pass data back and forth between processes. You put the while loop in each process. You terminate and join the processes in your main program after the loops terminate for some reason (interrupt, etc). When you join() a process, the program waits for that process to finish before continuing.
And a standard format is much better - Arrow or Parquet for 2D data, HDF5 or NetCDF4 for multidimensional data. 
Trying to get relationship working for [GINO](https://github.com/fantix/gino) the asyncio ORM. Just found a [nice way](https://github.com/fantix/gino/pull/179) to assemble database rows into expected objective structures.
I just switched from vim to pycharm. The syntax highlighting is more fine granular and easily set with the GUI. For example i can set type hints, named arguments, whatever, in a different color in pycharm. I use the python-mode bundle in vim and its syntax checker or autocompletion sometimes leads to a hanging UI for several seconds, which is quite annoying.
read up on how name-mangling works in python. 
i wish some of my python codes can run faster, how can i use PyPy to achieve this goal ?
Thanks! I've not heard of Netmiko before and will be sure to take a look.
No worries at all. It's a wrapper for Paramiko. It takes care of the low level things like buffers and also makes it extremely easy to interact with network gear and the like. 
Lol. I have processed 100Gb worth of semi-structuresd data in machine with 16 cores and 64Gb of ram in few minutes. All with python, dask, and having the data in avro format. Newer format like parquet can provide better performance on some use cases.
Looks pretty solid, id have to give it a shot. 
You won't regret it. I've used it on quite a few projects, often interacting with 600+ devices and it has been solid every time. 
I made a game show buzzer system with pygame to determine if the key a or b was hit first and display an arrow pointing in the corresponding direction. My real goal, *which does work*, is to use a GameCube controller USB adapter and DK Bongos, and map one side as 'a' and the other as 'b' and use them as a Family Feud type buzzer system. I'm a college student at a pretty heavy liberal arts school and it's my first real personal project so I'm super pumped about it! The only problem is if both buttons are hit at the 'same' time then it shows the arrow pointing one way and the changes to the other immediately. It points to the first option in the first event.get() loop. Some feedback would be great if anyone would care to help! :) https://github.com/RamoRJ/BongoBuzzer 
Convince me this isn’t homework and I’ll help. 
Proof that I'm not in school and working on personal projects in order to get a job: https://www.reddit.com/r/FreeCodeCamp/comments/7z3dqn/what_should_i_do_after_free_code_camp_im_a/
Cool! My dad is an old ham operator slowly learning Python so I got him a RTL-SDR dongle. He wanted to use it with his raspberry pi, but SDR# was difficult to install with Mono and GNURadio UI was challenging. I’ll try this one next time I’m over there. 
So if I understand correctly, you want to remove all sublists that are an integer multiple of the previous sublist? 
I want to remove all sublists that have "duplicates" in the sense that the duplicate could be an integer multiple of that sublist. The location of lists could be anywhere, and they don't have to be adjacent like I had in the example. I think the first step is to reduce all of the sublists to the simplest form, and then to remove any duplicates, but I have no idea where to start really.
Hmmm I tried to run it but got "checkpoint_required" printed to the console and it exited. Any ideas?
Could be handy if run in a virtual env while experimenting in interactive mode
You could do this in one pass: * Initialize an empty set * For each item in the list, reduce it to its LCD and add that to the set
Edx is the name of the platform the course is hosted on. But it's a good course, make sure to do both parts. 
Any aspects I can use to punt this instead of other SDR libs? Specifically in a pi environment?
How do I reduce the array though? I'm having trouble with this step.
def cycle(array): return array[1:] + array[:1]
Show us what you’ve attempted? It can be helpful to break down into steps what the program needs to do.
/r/learnpython and read the sidebar.
not work
Can’t work. Wrong
Okay. So on the last line `input_list = input_list[1:]` you aren’t actually modifying the list that was passed to the function `cycle()` you are creating a new list and just storing that list in the variable `input_list` but not altering the original list that was passed to the function `cycle()` So put shortly you code is doing: 1. Append first item of input_list to the end of input_list 2. Create a new list which contains all but the first item of the list using a slice You need to work out how to delete the first item from the list. :)
Just use stackoverflow then
so maybe I use .remove() ?
Problem solved. Thank you everybody 🙏🙏🙏👍
So the way lists work in python is the variable points to the list in memory, it can be a little unintuitive at first but take this sample bit of code: a = [1, 2, 3] b = a b.append(4) print(a) # prints [1, 2, 3, 4] By modifying the list with the variable `b` it shows up the changes in `a` because both variables point to the same value. Now take this for example: a = [1, 2, 3] b = a a = [4, 5, 6] print(a) # prints [4, 5, 6] print(b) # prints [1, 2, 3] We first assign `a` to a list, copy it to `b` then create a new list and assign it to `a`. When we print `a` it shows us the new list, but printing out `b` shows us the original list. 
Much appreciated. And how did you type so many letters? In a computer? Can you recommend me some PC console of Reddit I am Chinese and just start studying python in english(which is a torture but that’s ok😂😭🤣) And only started using reddit for 3 three weeks Sorry for wrong grammar 
Problem has been solved, but thanks for your hospitality 👏🙏👏
When you realized there is literally one more (and more) site(s) for writing things like Medium for programming and technology --&gt; Bookmark literally.
Well, you can always just use the web page. Just go to **reddit.com** in your browser and you're all set. Good luck with Python :)
Thanks (⁎⁍̴̛ᴗ⁍̴̛⁎)
Writing a script to grab alarm history from SQL Server, create a pretty Excel report and email it out.
Problem has been solved, Still thanks
I’m only a year deep in python but I used WinPython to get behind issues like that with my work computer. Doesn’t need root access.
If you've installed it but your Python can't find it you've probably installed it to the wrong Python. What platform are you on? (Mac/Windows/Linux?) It's a lot easier on Python3 with PyQt5 fwiw. If you're starting a new project Is go with that.
No way i'm doing your home work but look the doc for python generators (keyword yield). good luck 
Recently downloaded my Facebook data and deleted the account. But I found that all the messages are not named based on whom I was chatting with, but a number like the n'th person I had a chat with (0.html, 1.html and so on). There are 1000+ chats. I need some of those chats so I'm planning to write a script to filter out the chats I need.
First make a routine that calculates factorial(x), that outputs factorial(5) =120 etc. Then use that to make the estimator. 
OK on it
Dude! This is dope. Thanks for sharing.
noice.
def factorial(n): if n == 0: return 1 i = 1 answer = 1 while i &lt;= n: answer *= i i+=1 return answer def find(n): answer = 0.0 i = 0 while i &lt;= n: answer += 1 / float(factorial(i)) i+=1 return answer num = input("Give the number: ") if num &gt; 0: print find(num) else: print "Enter non negative number"
''' def factorial(n): if n == 0: return 1 i = 1 answer = 1 while i &lt;= n: answer *= i i+=1 return answer def find(n): answer = 0.0 i = 0 while i &lt;= n: answer += 1 / float(factorial(i)) i+=1 return answer num = input("Give the number: ") if num &gt; 0: print find(num) else: print "Enter non negative number" '''
God bless you 🙏🙏🙏😭
I really have no idea. How can I possibly installed it to the wrong Python? I just followed the installation procedure. Im using Windows platform for my project. Are you familiar with the Leap Motion? Cause it only supports Python2.7 which is awful. 
Wow!
You can have more than one version of Python on your system, so it can end up in a different python than the python you get when running python ;) Do you have a link to the install instructions you used? Never used the Leap Motion I'm afraid.
Yes, that's standard in regular python though so not a benefit to conda. It works on all platforms.
Scrapping a forecasting website and plotting all moments with good surf in my agenda, using requests, lxml and the google calendar API.
Don't they use versioning for libraries? 
Look into the Django web framework for python.
Hey All I found the very sad and simple way to make this work. #XLWINGS #load workbook that has a chart in it wb = xw.Book(filename) ws = wb.sheets['Sheet1'] ws.range('A1').options(index=False).value = df wb = xw.Book(filename) wb.save() xw.apps[0].quit() 
SQLite is also an optimization option for certain use-cases like this if you reach limits of what you can hold in RAM. On a modern SSD server it is faster then flat files and diskspace is cheaper then RAM. It also supports multiple readers so you can multi-process if you must (multi writer not so great though). https://pypi.python.org/pypi/diskcache
PyPy is a drop in replacement
I dont know about Windows but should work. Now I use asynchronous plugins- so does not interfere with editing...like ALE for linting. For autocompletion I use deoplete-jedi and supertab.
Working on a Flask API [https://github.com/w4nt/MyFlaskAPI](https://github.com/w4nt/MyFlaskAPI). Presently I'm trying to handle registration a bit more gracefully. Otherwise, its been great so far.
Thanks for your opinion Andrew. Feel free to remove, or let those who would enjoy and appreciate helping, enjoy and appreciate helping.
&gt; Is there any other reason this would give different results in different environments? The mimetypes module reads extensions mapping from files on the system (or the registry on windows). It's possible that either these mappings are odd, or that Amazon has replaced the module entirely to avoid the cost of reading a bunch of files.
to elaborate on what masklinn said: probably no mime.types file can be found on the system (due to lamda running in a minimal, probably amazon customized, environment). my investigation of this on my local system (ie ubuntu 16.04/"xenial", but probably similar for debian 9/"stretch"), but hopefully to help you learn to "catch fish" (instead of merely being "given fish"): $ touch file.json $ strace -f python3 -c 'import mimetypes; m=mimetypes.guess_type("person.json"); print(m)' 2&gt;&amp;1 | grep 'open(' ... open("/etc/mime.types", O_RDONLY|O_CLOEXEC) = 3 $ dpkg -S /etc/mime.types mime-support: /etc/mime.types $ python3 -c 'import mimetypes; print(mimetypes.__file__)' /usr/lib/python3.5/mimetypes.py $ grep -A10 '^knownfiles = ' /usr/lib/python2.7/mimetypes.py knownfiles = [ "/etc/mime.types", "/etc/httpd/mime.types", # Mac OS X "/etc/httpd/conf/mime.types", # Apache "/etc/apache/mime.types", # Apache 1 "/etc/apache2/mime.types", # Apache 2 "/usr/local/etc/httpd/conf/mime.types", "/usr/local/lib/netscape/mime.types", "/usr/local/etc/httpd/conf/mime.types", # Apache 1.2 "/usr/local/etc/mime.types", # Apache 1.3 ] $ grep -A2 'def read_windows_registry' /usr/lib/python2.7/mimetypes.py def read_windows_registry(self, strict=True): """ Load the MIME types database from Windows registry. $ grep -A2 IANA /usr/lib/python2.7/mimetypes.py # Before adding new types, make sure they are either registered with IANA, # at http://www.isi.edu/in-notes/iana/assignments/media-types # or extensions, i.e. using the x- prefix 
It would be annoying to have Anaconda downgrade my python though. PIL doesn't support python 3, but by import magic pillow installs as PIL. Similarly, I think it's elementTree that installs as xml, which is a core module...don't do that.
Well I can tell you right now that I probably do not have the hardware to process 400 million rows .... That's just downright insane
You should also add cubicsdr and gqrx to your list of apps to check. 
A couple years ago i decided i wanted to learn Python and was told that 2.7 was a good place to start even though 3.5 was coming out (already out?) and the differences were negligible. After several months of working with 2.7 i quit Python altogether just because life was getting in the way. now here i am, taking an online class in Python 3.5 and i see that 2.7, though the same in a lot of ways, is different enough that if i would have stuck with 2.7 i would have been behind the curve. With that...here i am getting back into python and learning 3.5 but looks like im going to be back in the same situation with a newer version of Python being released while im learning the older version...does anyone know if there are going to be any serious differences between 3.5 and 3.7??
Having recently gone through this myself I can say it took me a bit of digging to discover what worked for me. If memory serves me you can follow the instructions here for python2.7: https://stackoverflow.com/questions/22640640/how-to-install-pyqt4-on-windows-using-pip 
There are some pretty specific things that have been added, but nothing that would break your current code.
whew...ok, good to know. 
This is excellent work from top to bottom and should serve as an example for those putting together projects. Well done.
My setting don't open up code from site-packages. I activate the virtualenv from the command line. Pip8 formatting is available from a plug in. PyCharm is great.. I'm not trying to knock it. I use both. 
Since it wasn't clearly documented, [here's the devices supported.](https://github.com/lutusp/PLSDR/blob/85ddf1bc0b4572ee32f98141aa2cf5a301b29fc6/PLSDR.py#L63-L79) /u/Simbuk this may help you decide what to get. /u/lutusp I would put at least this kind of information into that rather... sparse... readme. self.device_dict = { 'RTL-SDR':'rtl', 'RTL-SDR TCP':'rtl_tcp', 'HackRF':'hackrf', 'SDRplay':'soapy=0,driver=sdrplay', 'LimeSDR':'soapy=0,driver=lime', 'USRP':'uhd', 'BladeRF':'bladerf', 'AirSpy':'airspy', 'OsmoSDR':'osmosdr', 'Miri':'miri', 'RFSPACE':'sdr-iq', 'FCD':'fcd', # this IP must be changed for any specific installation 'RedPitaya':'redpitaya=192.168.1.100:1001', 'PlutoSDR':'ip:pluto.local', }
I'm not a ham guy; can anyone ELI5 what this does? It looks cool.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
After 1-2 months I finally got my python cryptocurrency trading program running live this week :) It's been running for two days straight without crashing (new record)! I have a couple indicators and it has backtesting functionality to test strategies. My hope is in the future it will be able to detect which trading pair has the most potential to earn (by checking volatility and volume, and maybe checking how many times a coin has been mentioned on reddit and 4chan lol) and will automatically select that while testing out which parameters for the indicators would be the most beneficial. I'm using the binance api and I have the twilio api text me whenever an error occurs or a trade happens. 
As a big fan of [Plumbum](http://plumbum.readthedocs.io/en/latest): from plumbum import SshMachine with SshMachine('hostname') as remote: remote.upload('here_file', 'there_file')
Interesting idea thanks, would definitely be a lot less susceptible to noise/jitter. There are FFT packages available for MicroPython too so should be doable.
There are [examples of using native APIs in plyer repository](https://github.com/kivy/plyer/tree/master/plyer/platforms), but unfortunately there is nothing for payments as far as I am aware. Tito's [2048 kivy clone](https://github.com/tito/2048) uses some google play APIs, no idea if there is any overlap, but it's something to check out if you run out of ideas :)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [kivy/plyer/.../**platforms** (master → 6e1f86c)](https://github.com/kivy/plyer/tree/6e1f86c75fe9391dad50c752c1d176584e4c86b1/plyer/platforms) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dwjdda3.)
400 million is only approaching big. It's quite normal to generate that much data in a day. If you try to do any sort of long term analysis billions becomes normal
Looks like this guy has a lot of Andriod to kivy stuff! Thanks I'll poke around his codes and try to compare to the braintree api stuff.
That is pretty crazy. But I can't imagine that it would make any difference. Say I'm working with a thousand data entries. It's not like I'm going to look through all thousand of them on my own with my own two eyes. 400 million, 4 million, 40 billion. The data is far too massive to look through on your own anyway. So the only difference is that you will have different Hardware requirements but I can't imagine the difference any other way
Just make sure that AGPL doesn't pose any legal risks for you.
I will post it there now, sorry.
Well, considering I work in science, conda is a good fit for me. Nice to see that other options exist as well though.
No, you should be totally fine. For the most part the upgrades from 3.x to 3.x+1 has just been adding new features (i.e., there are no major breaking language changes like there were from 2-&gt;3). 
Not that I know of, however you can just search on Github for vim-lsp and then the python LSP client is just python-language-server, by Palantir. It works just as good as any IDE. Plus, if you integrate the mypy extension of the LSP you'll get type hints - just like PyCharm.
I was very excited when I read it, but unfortunately, it is confusing to me. The example is like one of the largest pieces of code in a single file I've seen... I do not understand what is happening there or what its purpose is. I'd like to see some simple example of like doing a HTTP request in C++ making it available for all those languages. Would such an example be possible :)? 
No it isn't. numpty.zeros is commonly used to initialize arrays.
Why use 3.5 though? It isn't difficult to install 3.6 on most operating systems. And 3.7 won't be difficult when it is released.
I finally dumped all the types it had, and the list was pretty standard. Very odd that whatever they are pulling from didn't include JSON. So I added it and a few others, and should be in good shape now. Thanks!
Yeah
🤔
All of this sounds like a pretty good fit for SaltStack. 
10/10
🤔
Lol wheres the script
🤔 searching for link....
ahahahah sorry now it's here :D
https://github.com/inosms/version_bridge Sorry, haven't used reddit in a long time :D
It's okay!!!
Perhaps. From OP I thought he meant 3.5 specifically.
Are you making market or limit orders? I had a similar python bot but it just traded ETH/BTC on GDAX. After a week it was down 10% so I pulled the plug, but the loss was all from taker fees. Anyways, never had the time to think about implementing limit order functionality because of all the complexity involved with determining a price, updating a price and monitoring the order.
No Windows version of Pytubes ?
Recursion should best be avoided in python, because the language was not designed for it. This is the stance of the creator of python. He considered adding tail call optimization to python but decided against it because it would lead to worse debugging. He concluded that loops should be used as much as possible instead. In general people have an easier time understanding loops than recursion, but it depends on the problem and the person. Some problems are much easier to solve with recursion, for example moving through a binary tree. The problem you have in python is that the stack size limits the depth of trees you can process. Some problems such as the Fibonacci example is best solved with a loop, because you don't need a big cache. Using a cache to save all the solutions when you really only need the last value is a bad approach. You can avoid explicitly writing temporary variables, with tuples. f1, f2 = f2, f1+f2 If you really want to use recursion check out the tco library. https://github.com/baruchel/tco
Looks interesting. You might consider a less tragic story as the example story though.
5 hours? I deploy 100+ components in under 3 minutes with kubernetes. You are still an order of magnitude off. 
Right now I'm doing market orders because they're nice and simple. I'm currently trading FUN/BTC and I've had both gains and losses, I'll see where it goes after a week. Like you said, limit order functionality is pretty complex so my goal is to eventually try it out and see what happens once I get started on other strategies. There are so many factors! I like binance because the fees are only .1%. Do you remember what indicators and interval you were taking into account with your strategy?
I find it’s far slower for basic operations than `os`, and the funky division notation clunkier than `os.path.join` (not helped by the fact that space around operators à la PEP-8 makes them look odd). And in each case, why do I have to work with `glob` to regex matching of directory contents?!
Similar feature: Ctrl-P shows you what parameters your function takes.
I can see the appeal of it in cross platform applications that rely heavily on path manipulation. Encapsulating all of the path operations into a dedicated type, rather than just slicing and dicing strings is sometimes appealing. That said, I haven't used it in anger yet, and the "division hack" is pretty gross. 
You mean the first post on the blog demo?
Yes. About the church shooting.
Yeah, rough intro, but article ([from Aeon](https://aeon.co/ideas/are-you-just-inside-your-skin-or-is-your-smartphone-part-of-you)) is very interesting though. Thanks for the feedback though!
Is there a specific module that’s the driving force behind this post?
Thanks. I will try out ALE/deoplete-jedi and supertab. Since I started using VIM8, even Syntastic works well.. so havent thought about switching, but will try them out.
Many many many many. The problem is people look at you cross-eyed when you ask them if they would update their print statements. I've even made regexes that will automatically fix all print statements in a python program and given the results as merge requests and I end up getting a no thank you. Right now I'm trying to build 3brown1blue's math [animation software](https://github.com/3b1b/manim) and there are dependencies that are enevitably giving me trouble (on arch). But a few larger, more common projects utterly refuse to be forwards compatible like node-gpy which leads to some node modules to be uninstallable on arch. Once again one simple parenthese could take care of it and I've given them the code. I guess the point I want to get across is that people are not crazy for asking you to put that parenthese in there. They have a good reason to request it and entire systems are getting broken. Code for portability. That's a concept we've understood as programmers since C. There is a reason why the linux kernel, writen in C, can end up on so many systems but python is breaking on many distros. It's not because C is more portable than python. It's because of the culture in each. Your first job as a programmer is to make sure your code is as broadly distributable as possible. That is priority number one in determining what is a pattern and what is an anti-pattern.
Fullstackpython.com has a much better (and easier to understand) Pelican blog tutorial, in my opinion.
&gt; I will probably do that anyways just from an organizational standpoint. If that is your main concern you should consider using a real database. Postgres can handle (indexing, aggregate) json as a type, also elasticsearch is a search engine that works directly with json. So before you are working on your indexing mechanics I would recommend you to usw a database here. Also a traditional relational database design is an option. The thing is you can't stream jsons in a good way, so essentially you have to load the whole file even if you just need to grab one item from it.
1: /r/learnpython 2: you can google the solutions to all of those problems to check your work.
If a package is using `print` instead of `print()`, that package is not Python 3-compatible. Unless the maintainer erroneously says the package is Python 3-compatible, I see no problem. If you want to contribute to open source packages to make them Python 3-compatible, go for it. Complaining on reddit, however, seems to be an...anti-pattern. 
Rename your README to README.md
Sure. I will add diagrams soon. Thanks much for this point.
That is power of latest technology. I automated old process. But you are right. We have to migrate to latest technology.
Really? I have not used it. But with the help of winrm, we get some help.
Thanks for sharing! Great resources.
Lol, they had an endless amount of topics they could've used in their example post. It could've been as simple as a macaroni and cheese recipe. But no! Let's throw a church shooting blog post. Come on...
criteria = [400, 100, 4] def is_leap(year): return all(item % year == 0 for item in criteria) print(is_leap(2020))
I did on my phone without an interpetor but the all() method checks if all criteria in a list is true. I believe that or something close is what you are looking for.
If not try: criteria = [400, 100, 4] def is_leap(year): return all([true for item in criteria if year % item == 0 else false] ) print(is_leap(2020))
Pelican, the solution to a problem that didn't exist
one liner that doesn't add an extra list for no reason return year % 4 == 0 and (year % 100 != 0 or year % 400 == 0)
I think it's a pretty good solution, it's clean, crisp and not unnecessarily short. (No need to play code golf on HackerRank) The only thing I might recommend is to not use the variable *leap* (or rename it to *isLeap*) but use early return to clean things up a bit. def is_leap(year): if year % 4 != 0: return False elif year % 4 == 0: if (year % 100 == 0) and (year % 400 != 0): return False else: return True return False 
I've only glanced at the code and the documentation. (Sorry). Would/could this work as a decorator? 
so we only really care about the true case can assume that all other cases are false. if x % 400 == 0, then x % 100 will equal 0, and if x % 100 == 0, then x % 4 will always equal 0. so we should only have to test for x % 4 == 0 to determine it _could_ be a leap year, and hand the special case of x % 100 == 0 is not a leap year unless x % 400 == 0 as well... or x % 100 == x % 400... which gives us the one liner you wanted. def is_leap(year): return year % 4 == 0 and year % 100 == year % 400 
heads up when using rtl_tcp, on line 67 of PLSDR.py, the key 'RTL-SDR TCP' maps to the parameter thats passed to gnu radio so that should be rtl_tcp=127.0.0.1:1234 or whatever the address is for your local setup
I would say it's better to start with cases that cover others and remove the need for 'and' statements. So first check divisibility by 400. If so return True. Then check for divisibility by 100, and if so return False (because we already know it's not divisible by 400). Then do the same 4 (since we have covered the 100 and 400 cases)
Why don't you first show us what you've tried already, rather than expecting us to just solve it for you.
Good example of OOP
Thanks I appreciate the advice!
print ('Enter arrow base height: ') arrow_base_height = int(input()) print ('Enter arrow base width: ') arrow_base_width = int(input()) print ('Enter arrow head width: ') arrow_head_width = int(input()) # Draw arrow base (height = 3, width = 2) print ('**') print ('**') print ('**') # Draw arrow head (width = 4) print ('****') print ('***') print ('**') print ('*') arrow_base_height = int(input('Enter arrow base height:\n')) arrow_base_width = int(input('Enter arrow base width:\n')) arrow_head_width = int(input('Enter arrow head width:\n')) while arrow_head_width &lt;= arrow_base_width: arrow_head_width = int(input(width = 4\n')) print('') for i in range (arrow_base_height): i = ('*' * arrow_base_width) print(i) for j in range(arrow_head_width): j = '*' * arrow_head_width print (j) arrow_head_width -= 1
[removed]
The logic isn't this simple. 1996 was a leap year, but isn't divisible by either 400 or 100. Most years divisible by 4 are leap years. The exception is years that are divisible by 100 but not 400. A simple solution might look like: def is_leap(year): return year % 4 == 0 and not (year % 100 == 0 and not year % 400 == 0) There's not really a way to make this much simpler since the logic can only be reduced so much. An more readable (though a little less intuitive) alternative: def is_leap(year): return year % 400 == 0 or (year % 4 == 0 and year % 100 != 0) And I'm pretty sure it can't get much simpler than that! You can use basic logic to rewrite it a few more ways, but you're going to need three clauses.
Wouldn’t this fail on any year that was divisible by 4 but not divisible by 100?
"Lecture"
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Nice. The last one should be slightly different than the first two, something like return year % 4 == 0 so it returns false for 1993
What book 
Do something that interests you! I’m at a similar stage and eventually want to use python for data analysis/finance. But currently, since I’m still grasping basics, I’ve made a couple of games cause they are fun to continually improve and can teach a lot!
If you are about to ask a question, please consider r/learnpython 
`if year % 4 != 0: leap = False` and `if (year % 100 == 0) and (year % 400 != 0): leap = False` are unnecessary and can be removed since you set `leap = False` at the beginning. Of course this will require you to modify your if-conditions. As a side note, for clarity, try to avoid negations (!=, not, etc.) in if-cases where you have an else-block.
Well, it isn't clear whether generated code is covered. Licensing it LGPL wouldn't resolve the issue either. Ideally, if he wants a GPL-like license, he should consider the [gcc license](https://gcc.gnu.org/onlinedocs/libstdc++/manual/license.html) (GPL with exception).
&gt; true for item in criteria if year % item == 0 else false This is a syntax error in python.
/u/Math-Code-Love This above code is wrong... a corrected version. criteria = [4, 100, 400] is_leap = lambda y: (sum(1 for c in criteria if y % c) % 2 == 0) print (is_leap(2020)) Another needlessly funky way to do this... is_leap = lambda y: ((y%4==0) ^ (y%100==0) ^ (y%400==0)) print (is_leap(2020)) 
Thanks! I’ve been trying to learn more tkinter. Any suggestions?
Qt
Or wx... Anything but tkinter
You should think of a problem that you have and try to fix it. 
Pyqt5 do yourself a favor.
I don't think * 0 is obvious at all. It's about as obvious as 0**0. Obvious if you know the result, unclear otherwise. Clear is much clearer.
I'm include your project in TextDistance: https://github.com/orsinium/textdistance#side-libraries Thank you for response :)
I'm include jellyfish in TextDistance: https://github.com/orsinium/textdistance#side-libraries Thank you for recommendation :)
I'm include python-Levenshtein from regex module to TextDistance: https://github.com/orsinium/textdistance#side-libraries Thank you for recommendation. This library very fast!
Personally I prefer to get rid of all those comparisons to 0. def leap(year): return not (year % 4 or year % 400 and not year % 100) But this rests on Python's notion of truthiness, and I get that it's not the most clear up front.
qt5 is better but practicing this can still help solidify the concept of making a GUI
The output code does not fall under the GPL. It is for you to license as you please. I'll clear that up in the License section.
If you're on Python3: from antigravity import geohash print(geohash(37.421542, -122.085589, b'2005-05-26-10458.68')) From [here](http://xkcd.com/426/).
&gt; `else year % 4 == 0:` Syntax error here. Also if you're using early returns you may as well not bother with else paths. def is_leap(year): if year % 4 != 0: return False if year % 100 == 0 and year % 400 != 0: return False return True
Yes, I prefer not to use nested logic or complex boolean expressions unless they're necessary. I know it's a matter of taste but to me, this: if year % 400 == 0: return True if year % 100 == 0: return False return year % 4 == 0 is far easier to understand and parse quickly than: return year % 4 == 0 and (year % 100 != 0 or year % 400 == 0) Leap year logic probably won't change, but for complex application specific logic, I think the former style is usually easier to change and still understand too.
While not as capable as SWIG (en excellent project btw) here are the points of interest I can think of: - Uses the CPython limited module, meaning all CPython 3 versions starting from 3.2 and up are supported from the same wheel. - A binding API is generated so you can easily interface custom code with the existing binding. eg. Check if a PyObject is an instance of MyClass and retrieve a pointer to it. Convert a C++ object to the target langage and back. This can be done with SWIG but not through a clear API. - Error messages as native as possible to the target language. For example you will find no mention to the C++ types. Everything has a bound name (the name used in the target language) and that is always what is presented to the script user. - Written in Python, so hopefully much more maintainable than SWIG. FWIW I fixed the 2+ years standing bug in SWIG that broke operator overloads on classes for CPython3 (the tests did not exist for Python 3) and it really wasn't fun (https://github.com/swig/swig/pull/136 and https://github.com/swig/swig/pull/617). - Can output an XML for documentation purpose listing all bound symbols along with prototypes, etc... I remember having to give up on SWIG when I hit a bug related to std::shared_ptr&lt;&gt; and containers. I cannot remember exactly the context but that was the tipping point for me. SWIG proved the binding thing to be a good thing but I already has sunk months worth of effort in working around its deficiencies (mostly broken operators (fixed), very complex almost C++ but not quite parser (if you think the FABGen Harfang script is huge don't ask for the SWIG one :)), no way to output bound symbols to generate a documentation). I also have not benchmarked FABGen output against SWIG output but I don't expect any major differences. If anything FABGen might come on top as I used a few tricks to prevent too many dynamic allocations on small objects. But performances wasn't much of a concern with SWIG.
People. Tkinter comes as part of the standard install of Python. If you have Python available, Tkinter very probably is there as well. QT and WX are not. For people that don't have control over what packages are on the machine, this is a vital point.
Yep. It should have been an elif, and yes, it would be rather unnecessary.
I just started learning python, coming from swift. My friend texted me this little problem, asking if I could figure out what the smallest possible number is with exactly 36 factors. I feel very accomplished to say that I put my extremely basic coding knowledge to solve that!
Tkinter has limitations but its good for making small programs try pyqt5 for better applications 
What's so terrible about tkinter? I've used it a bit and while I'm definitely not happy with it, I don't know how to evaluate GUI packages
The problem with pyqt5 is the you cant sell your program under their license and only share it as an open source unless you buy the comercial license wich is expensive and for people that like to make small programs and maybe a few bucks thats a no no 
No, not subjective at all. Some code is more readable than other code objectively. 
[Polly](https://aws.amazon.com/polly/) and Lambda are a fantastic combination. 
This is goddamn amazing.
No, I'm not using a wrapper. But I'd like to bring more functionality to it, so I might look into that. I am enjoying doing it all myself at the moment though - it's perfect for what I need, which is just experimentation.
There's PySide2. It's the same as pyqt but lgpl.
Hey, original author here. And yeah man, I take that on my chin. The code is pretty ugly. But I wrote that code at the end of a long writing session, learning my way around inkscape and was very sleep deprived in general. I now realize I totally forgot you could put weights in a list, and call enumerate on the loop. Plus, totally blanked on list comprehensions when initialising the weights. Believe me, I generally don't write ugly code (I avoid loops like plaque, go for vectorised fn/ map instead), but guess I screwed up. Thanks for taking the time to correct the code. I
Yes I still can't read that! Oh well I guess I am very late to respond to your messages anyway!
No problem, didn't want to blame your code, but you know it was just not that pretty ;) Personally I really love to use comprehensions and format strings, most of the time it makes the code cleaner and sometimes even faster (if you playing around with generators). Of course in the domains where you need vectorization for performance bottlenecks other techniques are better suited but here on your toy example it just looks better ;) If my understanding is correct pytorch provides a convertion from numpy arrays to tensors, so that would be the way in production. Avoiding loops or list concatination is more a style or resort thing, it highly depends on what your goal is and what tools you are using. Sometimes it is better to just use a good old for loop to keep the code clean and readable, maybe not for number crunching but more for some stuff like printing the results etc. like in your case.
Learn to work with a weather api. Seriously. You learn sooooo much so quickly by doing that. 
I'm so unfamiliar with python gui apps that you'll probably lose knowledge of you reply to me, but... How easy is it to do a cross-platform interface in tkinter? I really dislike working with html/css, so ditching flask/web browser interfaces for small "click, browse for a file, click" interfaces in tkinter would be great. I'm mostly looking for windows + Linux cross-platform ease here, and occasional windows + Mac os. For reference: I've been working in python for a few years now and I really love it. I mostly build cli tools using the click library, or edit/run basic scripts on the Linux console (bash or increasingly often in xonsh). I'm looking for something I could modify and have reliable for other people. Any and all advice is appreciated, even though I'm sure this isn't the best venue for it. 
I can obtain one 
Don't starimport tk. There are a lot of common words used, like TOP BOTTOM CENTER and the like wich will swamp your available names. 
Tk works on all of these iirc
I also use Winpython but couldn't get around the proxy/pac. How did you manage that? 
Make it look pretty: https://pythonprogramming.net/styling-gui-bit-using-ttk/
Wow! I love Pelican's new logo. This is the first time I've seen it. I like Pelican but it's like 10% too complicated for me. I want something slightly less complicated.
What's wrong with Tk?
I am also interested in your question since, I assume not much, maybe to write some simple script to test specific part of financial statement, but I would like to wrong on that matter.
Yep I'm doing the same thing; this is surprisingly easy. The API's are perfect - I recently started using Google's voice API because of its contextual intonations - In addition to the recent wavenet development I doubt we'll see quality like that on the desk for a while. However. I prefer /r/selfhosted, so for some years I've been working at the same. Invona supply great fidelity voices - for less than $40 I got a bunch of amazing voices https://www.ivona.com/us/about-us/voice-portfolio/ Any SAPI compatible voice is fine: https://harposoftware.com/en/2-main/s-1/language-english_uk Nuance and Ivona do amazing voices at accessible prices. --- Then you can use ol' fashion python make your PC speak: https://pypi.python.org/pypi/speech/0.5.1 --- So that's done. The computer will speak and you can continue building skynet. Assuming your real goal is a lovely Iron man Jarvis style robo cool - you can use FFMPEG to edit saved sound files. "ffmpeg-20180310-950170b-win64-static\bin\ffmpeg.exe" -i .\saystr.mp3 -y -filter_complex "aecho=0.8:0.88:6:0.4, chorus=0.4:0.5:30:0.5:0.7:1.3" .\out2.mp3 --- At that point I struggled with converting/speaking/streaming audio into something usable. The solution was python 3 comtypes! import comtypes.client # Importing comtypes.client will make the gen subpackage import os import subprocess try: from comtypes.gen import SpeechLib # comtypes except ImportError: # Generate the SpeechLib lib and any associated files engine = comtypes.client.CreateObject("SAPI.SpVoice") stream = comtypes.client.CreateObject("SAPI.SpFileStream") from comtypes.gen import SpeechLib voice = comtypes.client.CreateObject('Sapi.SpVoice') stream = comtypes.client.CreateObject('Sapi.SpFileStream') stream.Open(filename, SpeechLib.SSFMCreateForWrite) voice.Speak(message) So now you will write the spoken text to a file (such as mp3) and edit/play that. --- Hope it helps. 
Can py2exe or pyinstaller be used with pyqt5 to create an executable? It seems there are some designers as well to avoid coding the layout of elements. 
Thanks a lot! 
How does this work if I want to develop something for work that will only be used internally and isn't a part of any commercial product? Basically an internal use only tool 
https://youtu.be/pWdd6_ZxX8c
Awful documentation, doesn't seem to fully support whatever it's wrapping. And also tutorials like this one. Using a starimport on tkinter will swamp your namespace like nothing else
The Dude references aside, what is it exactly that could've been more clear? Or what's missing in your opinion? Always interested in learning how to improve content!
AFAIK, they have dual licensing, so you either pay for the license or you use the GPL version, which in turn means you must license all your code under the GPL. In practice, it works out like this: If anybody demands to see the code of your internal tool (given they know of the existence of your tool), you are legally obliged to give it to them. Which in turn means that you can't splice together the GPL version of QT with proprietary or otherwise incompatibly licensed code in your tool. So yeah. I'd like to give them money. But not that much money just to be able to fool around.
https://www.reddit.com/r/Python/comments/2cxdml/python_for_business_analytics_reporting/ https://pypi.python.org/pypi/financial-statements-downloader/0.1.0 https://www.youtube.com/watch?v=9c7cGM593AU
I wrote ones that find phrases and comment on them, and other ones that parse subreddits from front page to give a counts of subreddits that contribute.
why did you go for pysandbox even though it is broken?
Kivy had horrific flaws until 1.1xx I tried hard, but a GUI for touchscreen which comes with a hard coded screen keyboard which doesn't scale with the resolution, isn't acceptable
If your `a` is hashable, you can use a dictionary of `{value: count(value)}`.
I am really like dissertation. Lot of things make so much sense in relavance with Python. 
Yeah I can definitely appreciate not using a starimport. Thanks for the info, everyone seems to suggest Qt. What would you recommend, and why? I have no dog in this fight as I don't develop GUI applications just curious as it's something I'm totally unfamiliar with.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_mharbol] [Python GUI](https://www.reddit.com/r/u_mharbol/comments/88jdqj/python_gui/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
[collections.Counter](https://docs.python.org/3/library/collections.html#collections.Counter) also offers some convenient tools around this format.
Maybe you can use a regular data type like a tuple or a list, but make a convention of always sorting the elements. That way the ordering doesn't matter and the collections would be easy to compare.
You could just sort the tokens, unless you need other set operations.
Yeah it can be used for some data crunching. How viable that is depends on the nature of the transactions &amp; the type of company being audited. &gt;Also would doing those things be difficult for someone with 0 experience in programming? Yes. There is a bit of an initial learning curve for someone that hasn't programmed before. And then once they're up to speed there is quite a bit more ground to cover to the point where they can apply it in a useful fashion to actual problems.
If it's an RPi, unfortunately my app is too big to work there. I have an RPi and I tested it. The RPi sounds like it's choking on a carrot. :) But Gqrx works on an RPi -- of the apps you mentions that I've tested, it's the only one that works. CubicSDR has a library conflict, mine is too big, SDR# is Windows-only, Gqrx works just fine.
Yes, absolutely. My app relies completely on the GnuRadio ecosystem to do what it does.
Thanks!
&gt; I would put at least this kind of information into that rather... sparse... readme. Not sparse if users visit the [PLSDR Home Page](https://arachnoid.com/PLSDR/) . That complete resource covers this issue in a lot of detail, and recommends that users tell me any errors they find or additions they want.
python
I have to say that most hardware will work with both an RPi and Windows, but my program is too big to work on the RPi. But another program, Gqrx, works on both the RPi and Windows, and with all the popular radio devices. Shopping for radio devices can be tricky. If you want to be able to receive signals below 24 MHz, then my personal recommendation is a combination sold by NooElec. The upconverter is called "HamItUp," and any normal RTL-SDR dongle works with it. So there's two pieces that connect together and then to the computer. All the popular SDR applications work with it.
"For instance, part of the output of Bison (see above) would be covered by the GNU GPL, if we had not made an exception in this specific case."
Use /r/LearnPython for these kind of questions next time please. Once you've got praw authenticated, you can do something like this: words_to_count = ['breakup', 'no','yes'] submission = r.submission('88jt5f') body = submission.body count_of_words = sum([word in words_to_count for word in body.split()]) -- Check out [PRAW](https://praw.readthedocs.io/en/latest/) before getting started.
is there any tutorial to learn pypy? or i just need to execute the same code with pypy interpeter?
Thanks for the clarification, what stinks is that my company probably won't want to shell out the money for the license but won't be ok with the ramifications of GPL either.
Check out /r/learnpython. You can use the input() function to capture user input and assign it to a variable, then use it in the if-else conditional and print() out the result
Thanks!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
This post is better suited for r/learnpython and r/learnprogramming
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Anyone know how to use the pip config command?
In general, I've found that using browsers for UI has had lots of advantages over bundling UI into my Python code for the past few years. HTML + .js gives access to a lot of well-designed and good-looking visualization tools, and plenty of github-hosted examples of usage. Fetching data from the backend application is easily done with a small backend server framework like Flask. I've also driven the front end from back-end notifications using services like PubNub. Separation of concerns like this makes it much easier to be platform-agnostic for your display stuff, which will work on mobile, desktop, tablets, any client OS, without too much futzing about.
The decorator would then be added to the function in the 2.7 script? If yes, I am not sure how this works then, because you would have to import the script, which could already cause problems with the other python version I suspect - or did you mean it in a different way?
Thank you very much for your detailed feedback! Indeed the class is super useless - the override is because I wanted to be able to call module.functionname() - is there a better way to do this?
Thanks!
For Hire: Software engineer with 3years experience at NASA doing data analysis and data visualization, 7 years of software engineering experience, undergraduate degree in Astrophysics. Publications available on request. I'm able to do outside work agreements as per my federal employee guidelines. Meaning I'm allowed to do additional work in my free time, it just cannot be done in a way that provides a conflict of interest, or for work for the federal government. Obviously must be legal, cannot be for a foreign government either, etc. Experience: 7 years python 2 &amp; 3 Bokeh, matplotlib, scipy, astropy, pandas, mechanize, pyqt5, asyncio, kivy, sqlite, scikit-learn Other information available on request, such as other languages I use, projects I've worked on, and what kind of pizza I like. I'm mostly throwing this out there to see what's available. As a federal employee my pay isn't great and I work in a locality where pay at NASA is much less than industry compared to other locations. I'm a big fan of data analysis and visualization, so any work in that field is my expertise.
The default to upgrade only if needed is a nice improvement.
I like crash course for python, and animate the boring stuff.
This question has been asked and answered ad nauseum. Having a look at this subreddit's sidebar will yield the information or path you're after. A simple search will yield seemingly countless results. The answer is out there.
If you don't mind, do you have any examples of tools you've built or tools you use regularly other people have made? I'm trying to figure out how to make my python learning more useful to me, I feel like I'm tripping up on understanding how to write code to be executed outside of the python REPL. Everything I've written so far usually has no additional arguments and is executed from within Sublimetext 
Go with Django, and use the browser as your UI. This will also better enable you to perform updates without having to redeploy to every machine. 
Please search, read the sidebar. Check out r/learnpython and their sidebar
This is neat. I *think* you may be constrained by the memory limit of the one single Lambda you are running. In solving a similar problem, I chose to have lambdas self-invoke as my method of concurrency so that I have n lambdas concurrently running their single-thread. It works but has complexities in reducers. I can see how this solves other problems easily though!
 &gt; anybody demands to see the code of your internal tool I don't think so. If you are not providing a binary, then you are no obligation to provide source code.
Correct - the obligation follows distribution not knowledge of existence.
In my opinion it isn't actually much easier to learn than some other useful languages. It just types more like English, so the syntax barrier is easy to overcome. Once you understand basic concepts like variables, operators, loops, and functions, I think you're pretty much all set to learn any memory managed language.
It is easier to use what you already know. If you don't know either to begin with, than go with a web interface. It is much more useful in other projects, plus there is seemingly infinite resources on HTML, CSS, and JS.
Train a neural net on people’s voices. 
The sole and only thing I feel is like English is an if statement with the keywords in and not
Easy to read and very extensible.
Jupyter Notebook would be the easiest solution if you just want to provide a static report. You can host a notebook server but if you do that than I'd just suggest flask.
&gt;I'm asking if it's a good language to start with Yes &gt;will it lead to job opportunities? The market is there, the rest depends on you. 
those in addition to is, or, and None make writing/reading a bit easier I guess. If you're new to programming than python: if myvar is not None: .... makes way more sense than C#: if(myvar != null){ ... } Which is why I think, once you know what operators, variables, data types, and loops are, learning any memory managed language is **pretty much** the same as learning any other.
If you could find an interest group; local enviro, justice, education, etc. that needs web presence, analysis, communications, or research you could volunteer as a developer. Organizations like those are sometimes underfunded and starved for programming support. 
It reads and writes more like written English than most programming languages. It's well documented. It has a mature and broad community that in my experience is exceptionally welcoming and informative.
"Strongly typed" does not have a standard, agreed upon definition. Say what you mean by it, and the question can be answered. Does Python enforce its typing rules? Yes. Does Python forbid implicit type conversions? No. Etc.
I agree. I sometimes like this approach: def is_leap_year(year): canDivideBy4 = year % 4 == 0 canDivideBy100 = year % 100 == 0 canDivideBy400 = year % 400 == 0 return canDivideBy4 and (!canDivideBy100 or canDivideBy400) In this case it seems a bit superfluous because much of the code for the booleans is very similar, but your result becomes very readible (and booleans are often not that similar). Opinions?
Don't forget about things like for and while. Stuff like var item; for (var itr=0; itr&lt;subjects.length; itr++) { item = subjects[itr]; is a lot less intuitive and involves a ton more boilerplate than for item in subjects: or if you need an iterator for some particular reason for itr, item in enumerate(subjects): 
Tabs. The end.
Its written specifically to be easily read
A few things: You’re spawning a thread for each url. This means you’re spawning 1k threads. This is too much, you should be using a queue to manage your threads and tasks. I’m on mobile so I can’t give you an example but give “python thread queue” a google. Next, you’re acquiring the lock before calling fetch_url, don’t do this. fetch_url blocks your code from continuing. However, by putting it on a thread- you’re only blocking that thread (which is good and how we use threads to achieve concurrency on I/O tasks.) however by acquiring the lock before doing your I/O task, you’re blocking all the threads from continuing. Simply remove the lock completely and you’ll see dramatic speed ups. Lastly, a very easy way to implement this is with the built-in (python 3.2+) concurrent.futures module. Specifically, see the ThreadPoolExecutor class. It’ll give you a very easy way to implement the suggestion I made in point number 1.
You don't need the `!= 0` -- you're using it as a boolean, so any nonzero result from `year % 100` will be `True`.
One aspect is that can be used in an interactive way and as a scripting function. I think this is a much bigger factor than the syntax. My first language was Java which, by comparison, has to have a class built for everything and then it has to be compiled. Much harder to learn.
Here you go: def is_leap(year): return not year % 4 and \ any([year % 100, not year % 400]) This covers all the cases required, is absolutely faster to execute than your original, and I suspect will be faster than most of the other solutions presented here while also short and readable.
It's not the {} that is scary. It's making the life decision. function() { //Code } OR function () { //Code }
Because there is always one good way to do things. At most 2. Want to make http requests? Use requests. Want to parse XML? Use lxml. Want to work with dates? Use datetime and dateutil. All the tutorials you find will tell you the same thing. To take JS as a counter example, most tutorials will use a different library, won't explain the complete setup, etc. Makes it easier to lose yourself in npm and do things without understanding them imho. And all of the above as well...
I know this isn't what you asked but Scrapy is quite good at managing all this for year. Async requests, multiple spiders scraping at the same time, al out of the box. 
I think that meaningful whitespace and strong, unified community style guidelines goes a long way towards making python code more readable than many other languages. The design philosophy of "one and preferably only one way to do it" too.
When the project leader demands other language.
Concurrency or good looking websites 
I mean you are limited in the visual behavior a flask app can provide 
You probably wouldn't want to write low level system drivers in Python.
Lots and lots of documentation, plus an excited, evangelical userbase. Plus it's pretty simple.
When you care about an efficient use of available resources.
Sorry - only experienced building a few flask apps. Is that a common structure? My experience was that python web frameworks were clunky and static 
milisecond critical performance is not pythonic. 
When your program is large, with lots of internal interfaces, and data structures are important.
Python has nothing to do with the HTML, CSS, and JS that runs on the clients browser. Good looking sites have nothing to so with what runs on the back end
Django and Flask, the two major python web frameworks are some of the best around.
When the codebase is already in another language.
Minor nit `enumerate` returns a tuple of the count (index) and value, not iterator and value.
What language is good for that?
I don’t think I would choose it if a GUI is required...
C++ or Rust.
Why?
Exactly as it says. If performance is priority one, then you need to use a faster language than Python.
Micro controllers dealing with memory registers. 
Much appreciated!
that's not answering his question
Never did it myself, but I'd say if you want to develop a iOS or MacOS app -- here, Swift would probably the best choice
Even fast websites can be written in python as long as you have a sane caching structure, and horizontally scaled. 
When you're making love to a beautiful woman.
I’ll have to check that out then!
Your anaconda don't want none?
I think PyQt5 is the most recent version, so much of the knowledge base references PyQt4. If you have a distribution manager, I think Anaconda comes with it pre-loaded
- Large projects become painful without static typing. 
Because low level languages are faster, such as C or assembly. In Windows Python (kinda) gets translated into C during execution. If you were running C, it would have already been parsed into assembly by a compiler when you built it. Some languages are interpreted, some are compiled. Python is interpreted. 
is https://micropython.org/ any good? i've never tried...
When types matter. 
This might get better with [type hinting](https://docs.python.org/3/library/typing.html), but I haven't tried to do anything real with it yet.
Kivy (or even PyQt) can be used for cross-platform GUI development. Of course if you want something heavy, that will be used under high load, you should choose a native languages. 
When you are trying to learn low level concepts 
Here's a tutorial which shows great games made with Pygame and its use of OOP. Game Development with Pygame: https://www.youtube.com/playlist?list=PLsk-HSGFjnaH5yghzu7PcOzm9NhsW0Urw . Fantastic tutorial (not just for kids).
As PyCam said, you need to use some sort of queuing. Here's an example... #!/usr/bin/python from multiprocessing import Pool def worker(webcast): ## do something with the URL here if __name__ == '__main__': webcasts = "http://www.npr.org/rss/podcast.php?id=344098539", "http://www.cbc.ca/podcasting/includes/quirksaio.xml", "http://feeds.feedburner.com/AndroidCentralPodcast", "http://www.radiolab.org/feeds/podcast/", "http://podcastinit.podbean.com/feed/"] num = 3 pool = Pool(num) pool.map(worker, webcasts) pool.close() This will create three processes that will each request a URL from the pool and do something with it. When it finishes, it will request the next URL from the pool.
Python is both 
False on.its face but okay ...
Any large project where refactoring will be needed. So you know, most of them. 
From what I understand Python is compiled into byte-code which is then interpreted.
GIL, there I said it.
But what if you have to process and organize a lot of messages that come to your computer, for example? If there are 1000 messages/second, but you can only process 100/second, you will either lose messages or create a huge delay.
Python is a forgiving language, but that makes certain optimisations difficult to implement. 
This is a weird perspective. What if you have 100 million data records streaming and you need near-real-time and it's not limited by a memory bottleneck (i.e. SAS Hana)? Don't you want to remove all other bottlenecks, especially if you're processing this data every minute? 
Haven't used it either, but it's still an abstraction. You probably don't have access to registers, actually, and it adds overhead, so there are performance losses.
You spin up 10x the VMs and put a load balancer in front of them
Micropython does very well on microcontrollers. 
I agree with you but I don't understand the data structure part. Structuring data in Python is pretty good isn't it?
It's not a really pythonic package though. 
It's not fun, but you might be surprised. I just found out Deluge is in Python and it has a pretty nice UI
This is right but I'm going to expand on it. When you run Python the interpreter does a few things. First it parses the code to make sure everything is *syntactically* correct. This checks that every while loop has a condition, you spelled all your keywords correctly, and other things like that. It does not check *semantics* such as variable scope, types, or anything like that. Then the interpreter reads the Python one line at a time (more or less) and converts the Python into bytecode. The bytecode is sort of like assembly but instead of having x86 run on your i7 the bytecode gets fed into the interpreter which then executes the instructions. These instructions do eventually become x86 but the interpreter as an intermediary step makes a big difference. The interpreter tries to execute the instructions and at this point it does semantic analysis. Are you trying to subtract an int from a list? Are you trying to call a variable that doesn't exist? This doesn't make sense and Python won't know what to do so you get an error. But let's assume you're adding 2 ints, storing it in a variable, and this instruction is valid. The interpreter will read the bytecode, update the value of the variable in it's big list of variables, and then execute the next instruction. These additions, storing, lookups, all are executed on the cpu as x86 but the interpreter abstraction layer lets you have more flexibility with how you interact with your program.
The question was 'when is python not a good choice', not 'has u/xilc been in a situation been in such a situation before?'
Yes, yes, yes, having to spawn a new process to use each core can be painful, and when you need to share variables? Ugh, I do it in Python sometimes, but if threads worked correctly on Windows I’d be sooo happy.
Python types are already enforced at runtime. What you want in a large project is for types to be enforced at compile time.
As I know one advantage is being able to use the screen card cpu too which is good for parallel processes, for example matrix algebra that 3D stuff needs a lot. But otherwise Cpp is better in one-by-one processes (not sure about this part).
Someome hire this person
No they are not, variables can hold an object of literally an type at runtime no matter what the type hint is. type hint violations are merely displayed when linting the code.
Languages/DSLs. Homoiconicity is useful there eg. lisps. So is a strong type system, eg. Haskell's parsing libraries are very powerful.
I recently rewrote a Python Lambda function in AWS that was getting throttled by AWS as it was being involved so often. It was taking about 300ms to execute. I rewrote it in Go and it executes in 85ms and the throttling has dramatically subsided as a result. I love Python but it be sllooww.
Well done, team, that was a wonderful pair of comments!
You want a language that is compiled because assembly code will always run faster than interpreted code and real-time because every millisecond matters. C, C++, and a rust are all languages that fit this. Go doesn't because they have their own goscheduler which doesn't meet real-time constraints.
yeah, good point, but while Kivy seems to be a nice library for that, it might not be a *good* choice to use Python here vs using something more native to the OS's
what exactly are you trying to do that requires stalling all other coroutines while this coroutine runs? what's the point of it being async in the first place? 
Obligatory reminder that PyPy exists :) There are definitely still some perf-sensitive areas it doesn't cover, but it's probably a lot less than most people imagine.
Real time web applications (like web sockets). Having worked on one written in Python, I'd say just use nodejs or a language with better concurrency like elixir, go, etc.
Ive gotten pretty used to tkinter and I find that great and pretty easy to manipulate in Python. Though, from what I’ve seen, it’s available in other languages.
I don't have to, but the way the library is written I have no other choice. The only way to go back to the loop to allow other coroutines to run is to return from my method back to the library code, and as soon as the method returns it will assume everything's done. There's no provision for returning a future and having the caller wait for it. I've opened an issue for that, but I'd like to have some way to proceed in the meantime.
This is true, my hope is that it makes somebody passing in str(5) instead of int(5) for seldom used/fallback variables more obvious to spot or help figure out what data type poorly documented interfaces expect. Like I said though, never used it outside of essentially "hello world" programs so there might be some disconnect between what I hope it does and what it is actually good at doing.
Use a `with` statement with the pool to make this even better!
Read the questioners other comments, clearly your reading between the lines of the single word question "why?" was completely wrong. Which is why I answered the actual question, instead of deriving a lengthy and specific interpretation from a single word, which ends up being wrong.
I recommend using a multiprocessing pool or requests-futures. They handle most of the hassle for you.
PySide2 is more pythonic but less mature
Like I said below, that kind of excessive interpretation applied to an ambiguous, single word question is not helpful for encouraging good questions. And in this case, totally off base considering the "why?" person's subsequent comments. So I'll take my downvotes but you know deep down I was right, because now you're all downvoting "why person" as well ;) 
How large is "large"? I have a personal project that will take years and tens of thousands of lines of code - does that make it qualify?
Well, a lot of people here don't know about Cython! It's an amazing tool that enables your code to be compatible with C++ code, amazing speed ups, and includes types, and is around pretty amazing!
Their failure to communicate does not justify your misinterpretation of their "Why?" in context. And your obsession with internet points instead of communicating better is going to guarantee you failure in both endeavours.
Assuming your project is fine with the licensing. 
I would remark that, with Python, the issue with data structures isn't so much performance as it is memory efficiency. Data structure performance in Python is actually very good, better than you would probably guess with an informed implementation, and the main drawback is the large space overhead imposed by the dynamic runtime. I don't really agree with your point about large projects, but it's honestly always a matter of discipline, experience, preference, and tooling.
Absolutely. I tried to write a major application in Python once and will never do it again. It can absolutely be done, but in the long term a language like Go is easier to maintain in my experience. Static typing is one reason, dependency management another tho that’s way easier now with the prevalence of docker. I love Python but only use it for scripts and small things now, like AWS Lambda functions. If I’m cracking a thousand lines I definitely break out a more robust application language like Java or Go (or C/C++ in special cases).
That's the point, *I* didn't misinterpret it. I answered the question, as asked, to indicate that if it needs expanding upon, then a more specific question is required. Which was vindicated by your interpretation being wrong. You are the one putting words in others' mouths and paraphrasing incorrectly, not me. I'm suggesting good questions and good answers are the best outcome, not internet points. I stood my my initial comment for that reason, which is vindicated by your interpretation being wrong. Your comments fixating on the brevity of the answer are the things adding nothing, suggesting you are more interested in being right than contributing yourself. I am only posting this final post on the sacrificial alter of downvotes so that you and others can downvote and move on and next time consider addressing the questions/answers themselves instead of "playing the man and not the ball" with this pointless pack downvote mentality.
benchmark speed with nested `for` loops.
No one uses python in these anyways.
Haha. This one made me giggle. 
When packaging matters.
I am sorry to be pedantic. For HFT, every *micro*second counts. I don't mean to be rude. HFT just operates on scale so tight that it matters, a lot.
Not to mention go is explicitly for small services. Trying writing a big framework in go and good luck
When you want to spawn multiple threads. GIL is limiting
Python isn't the end all, be all. Acting like it is is just lying to people, no matter your knowledge on the subject. Python is interpreted and parsed into unambiguous C code, yes, but trying to act like it's optimized is lying, which is detrimental to the community, particularly when someone is asking about Python performance snags. I mean, your comment will get you upvotes on Reddit because it's witty, but spreading false information is much worse, and I hope you recognize that and stop doing so.
I guess so, for my application I ended up incorporating the widgets with other packages which made it feel more like a real python package.
When you need to share it with non programming folks in a work environment. I've written some handy little scripts for work (I work in IT). Talking people in my team into getting the code, firing up a venv, pip installing before finally running the code is doable but a pain for all involved. Yes they work in IT but they're not programmers nor do they have time to become one. I'm about to switch to Go for this very reason so that they can use these tools with less fuss.
I don't really see that much of a problem in practice. A lot of the time you can just run multiple interpreters and avoid the problem and the GIL does effectively confer a bunch of benifits.
Python is good when speed of development is the most important thing. Other languages excel when speed of execution is the most important. Then there's java... And yes, there's better choices when graphics or guis are involved.
yep
and that's why they are called type "hints" and not something like type "rules" :) 
Off the top of my head: - Concurrent programs - Programs requiring response time guarantees - Embedded programs - Anytime you can’t afford to ship the interpreter 
A not-very-useful but totally valid answer: when another language is a better choice for the given problem.
Truth
Truth
This is the best answer. Trying to use Python in a Java shop (for example) is an uphill battle.
But how large is large enough to need that?
Good to know about curio and trio, and they do look interesting, but if concurrency was at the heart of your program Go, Clojure, and Erlang would be much better suited to the task. Clojure is the one I actually have experience with, and it’s quite nice (core/async borrows from Go). 
This isn't a Python presentation, but if you want a really interesting talk about the subject, you can watch this: https://youtu.be/NH1Tta7purM
I guess the problem is that object attributes are defined at runtime, so you'd have to look at the docs to see what attributes an object returned by some library function has, and if you spell an attribute wrong, you won't know until your program crashes at runtime.
- For large *client side* projects I agree - Larger server side projects could be done with microservices in python (as well as variety of other technologies as needed) fairly easily 
&gt; neovim remote plugin host I don't know what that is, but i suggest that you ask your question to its authors. 
In my experience they are definitely a good thing, especially for documentation. But hints alone are still pretty limited compared to actual static types. e.g. I don't like that the code compiles fine despite violated types. Also the hints can be kind of clumsy, e.g. generic types (with TypeVar), not all variables can be annotated, etc.
Can anyone explain this ("Python is interpreted and parsed into unambiguous C code") better? C is compiled into an intermediate representation by the compiler toolchain, and then into executable machine language. I'm not familiar with the guts of the Python runtime, but my understanding is that it is compiled to a bytecode that has nothing to do with the C language, and then interpreted. I think Cython uses a subset of Python to emit an IR for LLVM, which is then compiled into actual executable machine code. Am I missing something?
Python doesn't support threads? Is that true?
 if 'buns' in hun: anaconda.state = 'want some'
I myself am not open source. I won't give you a blood sample of me. Neither are the project I am in charge of open source. I won't give you the code, and I am not even allowed to.
Go is strong and widely used for HFT, as is Erlang.
Hi-performance in Python means using modules written in C, and passing the largest possible chunks for taks to the module. Pure Python in not a performance solution.
It's not explainable because he has no idea wtd he's talking about and IA.flat out wrong 
This is my favorite thing right now. 
But only a limited subset of Python's standard library I think.
I think I’d rather live on the street and eat garbage than write java for a living. 
What do you mean? 
Due to the [GIL](https://wiki.python.org/moin/GlobalInterpreterLock) a single process can only use one core at a time. You can still have multiple threads, but you'll never have two threads executing at the same time. There are some ways to get around this using multiple processes, but it's not as fast or simple.
I guess it depends what you mean by "type enforcement", which is not something that has a formal meaning I am familiar with. Some languages do type coercion, which python does not. It seems you are referring to static vs dynamic types, which is a different matter. Either way, checking things at runtime doesn't really help for large, critical applications because it's too late. You want to catch type errors before they hit production, in which case type hinting gets you closer to compile time type checking because you can run analysis during the build.
This is quite wrong, but it's too hard to debate on this kind of a forum. I've taken an data processing task to fully cuda enabled mode for a 200x speed-up using python... *insert obligatory: compiled code isn't C* *insert obligatory: you could achieve that with C as well* 
When you want to do Websockets to power web apps. NodeJs is so much cleaner for this.
When you are running in a browser. [12 input](https://transcrypt.org/examples#jquery_demo): __pragma__ ('alias', 'S', '$') def start (): def changeColors (): for div in S__divs: S (div) .css ({ 'color': 'rgb({},{},{})'.format (* [int (256 * Math.random ()) for i in range (3)]), }) S__divs = S ('div') changeColors () window.setInterval (changeColors, 500) get transpiled to [2441 lines](view-source:https://transcrypt.org/live/transcrypt/demos/jquery_demo/__javascript__/jquery_demo.js): "use strict"; // Transcrypt'ed from Python, 2017-08-05 11:21:09 function jquery_demo () { var __symbols__ = ['__py3.6__', '__esv6__']; var __all__ = {}; var __world__ = __all__; // Nested object creator, part of the nesting may already exist and have attributes var __nest__ = function (headObject, tailNames, value) { // In some cases this will be a global object, e.g. 'window' var current = headObject; if (tailNames != '') { // Split on empty string doesn't give empty list // Find the last already created object in tailNames var tailChain = tailNames.split ('.'); var firstNewIndex = tailChain.length; for (var index = 0; index &lt; tailChain.length; index++) { if (!current.hasOwnProperty (tailChain [index])) { firstNewIndex = index; break; } current = current [tailChain [index]]; } // Create the rest of the objects, if any for (var index = firstNewIndex; index &lt; tailChain.length; index++) { current [tailChain [index]] = {}; current = current [tailChain [index]]; } } // Insert it new attributes, it may have been created earlier and have other attributes for (var attrib in value) { current [attrib] = value [attrib]; } }; __all__.__nest__ = __nest__; // Initialize module if not yet done and return its globals var __init__ = function (module) { if (!module.__inited__) { module.__all__.__init__ (module.__all__); module.__inited__ = true; } return module.__all__; }; __all__.__init__ = __init__; // Proxy switch, controlled by __pragma__ ('proxy') and __pragma ('noproxy') var __proxy__ = false; // No use assigning it to __all__, only its transient state is important // Since we want to assign functions, a = b.f should make b.f produce a bound function // So __get__ should be called by a property rather then a function // Factory __get__ creates one of three curried functions for func // Which one is produced depends on what's to the left of the dot of the corresponding JavaScript property var __get__ = function (self, func, quotedFuncName) { if (self) { if (self.hasOwnProperty ('__class__') || typeof self == 'string' || self instanceof String) { // Object before the dot if (quotedFuncName) { // Memoize call since fcall is on, by installing bound function in instance Object.defineProperty (self, quotedFuncName, { // Will override the non-own property, next time it will be called directly value: function () { // So next time just call curry function that calls function var args = [] .slice.apply (arguments); return func.apply (null, [self] .concat (args)); }, writable: true, enumerable: true, configurable: true }); } return function () { // Return bound function, code dupplication for efficiency if no memoizing var args = [] .slice.apply (arguments); // So multilayer search prototype, apply __get__, call curry func that calls func return func.apply (null, [self] .concat (args)); }; } else { // Class before the dot return func; // Return static method } } else { // Nothing before the dot return func; // Return free function } } __all__.__get__ = __get__; // Mother of all metaclasses var py_metatype = { __name__: 'type', __bases__: [], // Overridable class creation worker __new__: function (meta, name, bases, attribs) { // Create the class cls, a functor, which the class creator function will return var cls = function () { // If cls is called with arg0, arg1, etc, it calls its __new__ method with [arg0, arg1, etc] var args = [] .slice.apply (arguments); // It has a __new__ method, not yet but at call time, since it is copied from the parent in the loop below return cls.__new__ (args); // Each Python class directly or indirectly derives from object, which has the __new__ method }; // If there are no bases in the Python source, the compiler generates [object] for this parameter // Copy all methods, including __new__, properties and static attributes from base classes to new cls object // The new class object will simply be the prototype of its instances // JavaScript prototypical single inheritance will do here, since any object has only one class // This has nothing to do with Python multiple inheritance, that is implemented explictly in the copy loop below for (var index = bases.length - 1; index &gt;= 0; index--) { // Reversed order, since class vars of first base should win var base = bases [index]; for (var attrib in base) { var descrip = Object.getOwnPropertyDescriptor (base, attrib); Object.defineProperty (cls, attrib, descrip); } for (var symbol of Object.getOwnPropertySymbols (base)) { var descrip = Object.getOwnPropertyDescriptor (base, symbol); Object.defineProperty (cls, symbol, descrip); } } // Add class specific attributes to the created cls object cls.__metaclass__ = meta; cls.__name__ = name; cls.__bases__ = bases; // Add own methods, properties and own static attributes to the created cls object for (var attrib in attribs) { var descrip = Object.getOwnPropertyDescriptor (attribs, attrib); Object.defineProperty (cls, attrib, descrip); } for (var symbol of Object.getOwnPropertySymbols (attribs)) { var descrip = Object.getOwnPropertyDescriptor (attribs, symbol); Object.defineProperty (cls, symbol, descrip); } // Return created cls object return cls; } }; py_metatype.__metaclass__ = py_metatype; __all__.py_metatype = py_metatype; // Mother of all classes var object = { __init__: function (self) {}, __metaclass__: py_metatype, // By default, all classes have metaclass type, since they derive from object __name__: 'object', __bases__: [], // Object creator function, is inherited by all classes (so could be global) __new__: function (args) { // Args are just the constructor args // In JavaScript the Python class is the prototype of the Python object // In this way methods and static attributes will be available both with a class and an object before the dot // The descriptor produced by __get__ will return the right method flavor var instance = Object.create (this, {__class__: {value: this, enumerable: true}}); if ('__getattr__' in this || '__setattr__' in this) { instance = new Proxy (instance, { get: function (target, name) { var result = target [name]; if (result == undefined) { // Target doesn't have attribute named name return target.__getattr__ (name); } else { return result; } }, ....... Including monkey patches on builtins, which nobody does for the last eight years.
Python eats 400 million row datasets for breakfast. Learn to use the *right* libraries in python for this kind of task.
Micropython is a thing and people could try them but they'd need to know the tradeoffs. 
Never underestimate the tendency for idiots to be idiots.
Large project, many teammates, need for stable and well-defined API.
That’s really not a fair assessment of Go at all, but my mention of Go is also not the point. Just replace it with Java, C# or even Rust if you dislike Go so much. The point is I’m not choosing Python for a large monolith in most cases.
I'm not sure I understand "the implication". Are you asserting that python isn't deterministic in its execution time? Or are you saying that python can't be optimized? Because check it: import numpy as np import math import numba.vectorize arr = np.ones(100000) * 3.14 %%timeit for x in arr: math.sqrt(x) =&gt; 10 loops, best of 3: 15.1 ms per loop %%timeit np.sqrt(arr) =&gt; 1000 loops, best of 3: 279 µs per loop @vectorize(["float64(float64)"], target="parallel") def do(arr): return math.sqrt(arr) do(arr) %%timeit do(arr) =&gt; 10000 loops, best of 3: 183 µs per loop 
What's a good choice for a scripting language with threading?
I have used it for automation of sampling process for our narcotics audits on some of our anesthesia staff. Mainly just use pandas, numpy. As for the results, I host an intranet based dashboard using plotly that links to a sqlite db stored on the shared network drive. Cheap and instills fear pretty well :) all open source.
When you don't want your user to download and install python as a requirement.
Says it's experimental. Any good?
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_xhohenheim] [Nice move!](https://www.reddit.com/r/u_xhohenheim/comments/88nnqo/nice_move/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
If you're in an environment where Python literally cannot be run.
You're still missing the point. Your comment was not justified by being a correct interpretation of the asker's intent. Regardless of whether you correctly interpreted their question, your response was not helpful. “When is Python not the answer?” / “When performance matters above all else.” / “Why would you ever want performance above all else?” / “If performance is priority one, then you need to use a faster language than Python.” You literally just restated the *exact* response to which “Why?” was being asked. The interpretation of the “Why?” is immaterial, because your answer was not useful for any interpretation.
Anyone worth their salt is using numpy anyway, but it's disingenuous to say python is as close to the metal as C. It's an abuse of language but we all know what I mean when I assert that the ways to make a python program run shitty are more easily accessible than one in C. It's duck typed at runtime FFS.
When buying a pet for your child.
No, it’s not “quite wrong”, it’s dependent on the requirements. 
But CUDA is doing all your heavylifting and CUDA is written in C. 
That's a very specific example. It can be optimised, but code tends to be large and more verbose and the overheads really add up to make things slow.
We control our live trading with python processes. And R&amp;D. Actual trading logic is all in c though.