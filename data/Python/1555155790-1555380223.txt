Oh no! Python has a virus!
That one got me access to the back room at the local junk/electronics store. Doug always had interesting things. . . also learned freesco and DSL for him.
This article really says "use lists". I do not think OP does not know about lists.
Arcolinux, cause its based on Arch. So you have a nice always up to date system and packages. Most of all it has several editors Like Atom, Pycharm, Sublime already installed. So you have nice choices. And everything else that is developer friendly about linux in general. Also. It is very easy to install. With a bonus of fast boot time. Im in the mini.iso Ubuntu camp for servers. You can net install most server configs. Easy to use installation UI. Also. You can use it for bare bones installations of other Ubuntu flavors.
I presonally use Manjaro Deepin, Arch based, just because its store and the AUR are amazing. However, I really believe that it does not matter that much unless you do server side work. As long as you are happy with the GUI (which is 70% of why would someone like a distro) then your choice is good. I do recommend you try bunch of different distros first though, it gives you a glance. (first week of trying linux, I downloaded and tried like 7 distros)
I dont see why VSCode is too heavy. If you do not like it, you can try Atom or Sublime. But I think trying Vim is gonna be a pain for you. ( even existing Vim is a pain :) )
The feature you need is called "reflection", and reflection in Python is very simple. for n in range(5): globals()['Step'+str(n)] = n print (Step3) # prints "3"
&gt; manjaro I haven't even heard of Manjaro before, so I went to their webpage. Last sentence said "Manjaro dedicated hardware". Tf?
Bunsenlabs, formerly CrunchBang. It feels so lightweight and yet I have everything I need. Based it on Debian Testing.
cool, that's a releif
i know about lists
The distro you are using doesn't really matter. All distros are essentially the same OS with small differences. Just go with the one you like more/feel more comfortable with.
ill try it out, the code im making isn't a serious thing and just help for revision. Ill try it, thanks
Ubuntu because it's generally the most common, and it's the distro my organization like to use.
Rasbian
OK, hold on. Are you trying to compile a Python interpreter for those targets, or are you trying to "compile" your Python code for those targets? What is the end goal here?
just think of the screen as an [x-and-y](https://www.google.com/search?client=firefox-b-d&amp;q=x+and+y+graph) graph. the middle of the screen is x = 0, y = 0 so when you type `object.goto(0,0)` the object goes to the middle of the screen sure, x can be +ve and -ve and so can y play around with it and you will get it
.
Are you trying to compile a single binary that runs on all of those architectures then?
No, compile multiple binary for those target ofc one binary for x86, one for mips etc etc
that's the thing, I don't really know what I'm after. I've turned every painful excel in work into a dataframe and added some functions to automate my workflow a bit better and now I've hit the end of the road with that. So I'm looking to expand my horizons and learn more. Ive got a MSc in physics but i was more of a 'pen and paper' student so i think the best jumping off point would be numerical methods/data visualisation (love a good graph). Im not entirely sure what symbolic computation is tbh
Ubuntu. I came to Linux from Mac, the 14.04 version didn't make me feel completely clueless at the first look so I stuck to it.
If you really want to get pissy, MacOS is Mach with a BSD userspace and syscall API.
Someone's machine learning system is broken - but this might be the right place to fix that. What if the computer knows this and is asking for help?
Then you might want to look into [PyInstaller](http://www.pyinstaller.org/) - it's a tool that bundles a Python interpreter, all of your dependencies and the compiled bytecode of your application into a (potentially) single file binary.
How is Atom heavy? VSCode seems faster, but all of them are light editors. VSCode really answers all your requirements. When you're learning, the worst thing to do is to be too picky about editors. Focus on learning and writing code.
&gt; And arch switch to default python 3 ages before others ! That was awesome in that time. RIP every other distro not deciding to move `python` to point to a python 3 T_T
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Mint Xfce is great
In what way is writing software in sublime beer than in Atom?
Manjaro, because it is stupid simple and it has always the new versions of python, also i really like pacman and the stability of manjaro
Sometimes you don't care about customising every little thing about your tools, you just want ones that work out of the box.
There were many stories with many things. Things got better. You could try to be less condescending and more rational.
Why?
Debian because is light in all of his meaning. The ISO is 300 MB !! You can use it everywhere because it has minimal require. And everyday it surprises me.
You need Scypy packages. :D This link is a great book for engineers, you might find a lot of what you need here. https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://www.southampton.ac.uk/~fangohr/training/python/pdfs/Python-for-Computational-Science-and-Engineering.pdf&amp;ved=2ahUKEwi8m8D5hs3hAhWxGLkGHT3OBdMQFjAAegQIAxAB&amp;usg=AOvVaw12mlORgBKE6lhYF2pWoimJ&amp;cshid=1555158025266
I would recommend "Data Science for Business," by Provost &amp; Fawcett
.
It uses whichever Python interpreter you're running on for the final bundle, so if you run it on a MIPS platform you'll get a MIPS executable. If you want to use the single file mode, you might need a C compiler installed to compile the unpacker that will be part of your bundle.
OpenSuse ... but I generally have to use RHEL as the final resting place so I will fire up a docket or qemu instance for testing and packaging. Why OpenSuse? Been using SuSE for over 15 years now and just works for me.
So why aren’t you able to use a list?
You have parens mismatch. Also, wrong sub.
that's good to hear. it's been about 10 years for me in the debian/ubuntu/mint distros, and i've been thinking about trying manjaro. might give it a spin this weekend
he asked for lightweight, lighter than atom. sublime is some highly efficient code. while vscode might also be lighter than atom, we don't know if that's too heavy for him either, and sublime is therefore a good pick given the limited information available to us.
I was concerned It would take too long to transfer the hundreds of variables into a list
Scientific computing is a big enough field, and with sufficiently specialised specialties, that you're much better off trying to learn the things you need to solve your current problem, than trying to learn to be a generalist. All of the scientific computing experts I know got into the field to tackle a specific problem. What is the problem you are looking to solve?
Similar. Most of my deploys are to Ubuntu, and I have Ubuntu desktop systems (and have used it as a daily driver in the past). But my daily driver for work and play is MacOS. Being able to access Exchange, Webex, Excel, and PowerPoint while developing in a Unix/BSD environment all on the same machine is just an ideal experience. I do heavily rely on virtualenvs for each project and I default to a "user-wide" python 3 virtualenv for consuming my own tools. Additionally, more and more, utilizing python-alpine Dockerfiles build and distribute tools. I might include a "toolname.sh" file the runs the tool inside of a docker container. We do the same thing with ansible, because we want our roles and inventory to target a specific ansible version and python version (with all the proper python modules installed). We found that ansible+python installs among the team can be all over the board (and ansible often makes minor, yet breaking changes).
pycharm is faster than atom im not certain how the user has defined lightweight
Fedora.
More extensible than atom isn't going to happen (except for emacs). That's atom's main technical strength.
Add setup named argument together with number: number = 100000, setup="import matplotlib.pyplot as plt" [https://docs.python.org/3/library/timeit.html](https://docs.python.org/3/library/timeit.html)
What's the reasoning behind having a load of from builtins import str At the top of modules?
Emacs is the way to go with python, IF you already know emacs... this said... Newcomers may find Spyder (https://www.spyder-ide.org) a lot more user friendly. It has the editor, console and file explorer ready from start. Also, python built in IDLE is the most lightest thing with graphics I know.
Ubuntu is the most used distro in almost any means you wish to measure, with redhat/centos running second. The majority of comments in a thread like this will be for the niche distros reminding people of their existance.
i like there are lots of little things that are thought of that can get annoying in other distros. and it's easy to find answers to things because someone has asked already. i don't like cinnamon personally though. whatever the distro, i'm xfce for life
I love Mint!
These days it doesn't matter. My entire Python workflow is Dockerized so it runs identically on any distro. Anyway, I use Ubuntu.
Arch is super nice, but it requires more investment in learning linux/unix. For anyone interested in the upsides of Arch without investing the time it takes to shape it to your liking: When I started out I used Manjaro, which is way more similar to ubuntu, but also uses pacman and therefore allows access to the AUR. I have since switched to arch though. &amp;#x200B; Also, the arch repos make it super easy to install nvidia drivers and cuda, which is important for me as my python work is mostly machine learning.
&gt;i3 is on both of them. It's now awkward to go back to gnome on my work desktop. Right? I kinda wanna get a tiling windows manager for my Windows desktop too. I just can't imagine life without it now.
Setting up a stable personal environment is more important than a stable digital one. At least imo
I use Ubuntu too. I personally haven't felt a need yet to move on to other distros, though I suspect I may try Parrot and/or Kali once I get more into pentesting eventually, but that's it.
Pickle is not really robust and requires the same setup on both ends. Try to avoid pickle. Try a more robust method to serialise such as [Cap'n Proto](https://capnproto.org/). use /r/learnpython for questions.
[Bunsen Labs](https://bunsenlabs.org) is by far the best linux OS for usability in my opinion.
Rasbian is great unless you want a 64-bit OS. Then the options were (last time I looked): Alpine (running in memory, not a “sys” install) SuSE Ubuntu (beta, soon ish) I don’t think the benefits of 64-bit are noticeable to the average user.
[removed]
Yeah, I have almost the exact same workflow, and I use GitLab CI to do testing and packaging in docker before it goes out anywhere.
I use a VM running whatever OS the client will be running the code on. Using a VM keeps each project isolated (you can - and I usually do - use a virtualenv to isolate python, but most significant projects end up being more than just python code). Using the same OS helps detect any weird issues early (it should be cross-platform but, again, significant projects often contain more than pure python)
Not really a python dev... But i do write a fair bit of scripts when hacking (legally). Im running arch, but thats because i really enjoy the fact that it only has what i manually installed on it and no bloat at all
Wat? OOP in python is extremely powerful, especially as it allows multi inheritance which allows for writing very powerful mixins.
You make as good point although making my a Unix / Linux distinction doa not sound pissy to me. I do accept though that my anti apple bias might have to so etching to do with it.
Same here, my enterprise is 99% RHEL.
You need to frequent distrowatch.com
make sure to pronounce it x-force
i just hear good things about solus. can it be that good? what are the annoying things about it?
Ubuntu for no reason 🤣
can i ask.. what do you think is better using debian than something like mx linux?
Debian/Ubuntu/ParrotOS, but I usually end up using anaconda/miniconda for my python instead of the installed python.
geany is cool. i love how it has a 'symbols' section and a nice black theme
Parallel programming?
How can atom be too heavy? It would even run on my mobile if someone bothered to make it an Android app.
My usual cycle is, every few years after I settle in a new environment, I will go on distriwatch, see that X distro is suddenly all the rage, try it out and be blown away by the improvements.
I have to agree and I've been using for years now. It even replaced my Notepad for .txt files. Lightweight, extremely fast, customizable and extensible with packagecontrol. Also, plugins are written in Python
Mint is Ubuntu with extra bullshit. You need to go the other way and use Debian if you don't want bullshit.
I'm thankful that we have options for both the "power users" and those who just want something functional with minimal configuration.
I use Ubuntu because it had the least painful path to running deep learning applications.
Take your meds bro. You're manic right now.
KALI because why not!
Are you sure you know about lists?
Who knows what hardware OP has? I just assume OP is correct if OP says atom is too fat for their machine. I think the days of phones being treated as low spec devices is over. Some of them are $1,000+ now. It's going to be faster than a laptop that was $200 when it was new and is now old.
Thanks, I've finally gotten it. Spent the whole day on this and your comment just popped up. I'm grateful 🙏🏽🙏🏽🙏🏽
This is all I have used as well
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Mint and Pycharm ide. Because it works "Out of the box" and because I came from Debian (so I'm probably ". Deb" addicted). Probably I could use a lot of other distro but at the moment I'm focused on development and
thank you so much
Be aware that PyInstaller does prevent users from reverse engineering the code, as it will basically package a Python interpreter and your source files. &amp;#x200B; In case you absolute do not want to have users access to the code, choose a programming language that can be compiled to machine code (C/C++/Rust/etc).
I mostly use it for writhing code and pushing it to my github. Nothing special that I use it for, so I don't need 64-bit.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I do everything I can to avoid Jetbrains, personally. Their IDEs feel way too much like what they are, java-based desktop apps. Everything is slow and sluggish. VS Code, even tho it's Electron-based, is lightning fast in comparison. I haven't found or heard of a compelling reason or feature to use Pycharm. I work on everything from small 1-file Python scripts to enormous projects spanning hundreds or thousands of .py files and VS Code takes care of everything. &amp;#x200B; It's a nice combination of text-editor with just the right amount of IDE features, a plugin system that allows me to add what few things I need added, and it's not much more than a thin wrapper around all the command line tools that I use on my build servers and CI environments. &amp;#x200B; Pycharm is just way too heavy. It tries to do too much. It has too much stuff integrated. I end up having to set up everything in Pycharm then set it up again in my build/CI environments, where VS Code is happy to just use the same tooling as my CI environment. Pycharm does everything slightly differently and I end up having issues where things work on my workstation but fail in CI or build. It's annoying and frustrating. Combined with the overall crazy amount of sluggishness of Pycharm, I just can't say anything other than "hate it" when it comes to Pycharm (or any other Jetbrains IDE).
Some applications don't provide native binaries for Solus, but that's all I can really think of
Antergos, for the same resons already pointed out about Manjaro, but without Manjaro's issues.
Manjaro. Reasons: - always newest versions of packages available through package manager (nice AUR) - Arch under the hood but a lot of things are already done - very nice pre-installed window managers like for example i3.
no idea what you're using to write this post on, so no, we can't tell you without more information. you can change the font in pycharm though. open the settings and type 'font'. you will have to change the font in both the Appearance section and the Editor section in the past there were some font rendering issues, but it is dependent on your OS, so you'll have to search google for "pycharm font rendering &lt;your os version&gt;"
Honestly, Ubuntu has replaced OSX for me. It's do sleek and it works perfectly on every machine I've put it on.
Even with languages that compile down to native code, you can still reverse engineer stuff. Even if you run a compressor and an obfuscator on your binary, it can still be reverse engineered given enough effort - just look at any videogame released in the past ten years. Honestly, OP, you probably don't want to care about this - if your application gets popular enough for people to care about pirating it, they'll find ways to do it anyway, and until then it's highly unlikely anyone will.
Kubuntu - just because I prefer the KDE Plasma look over Ubuntu and Xubuntu. I have a nice GUI and yet most of the time my workflow goes: "Win+T" to open hyperterm (with fsh), change directory to a python project, "atom ." to open the project in Atom, and then just run/debug/git from the terminal. P.S. I even have Kubuntu installed as my primary OS on my university allocated machine that I use for my degree.
They should probably make a [Google](https://fonts.google.com) for that.
Ubuntu LTS here. I've been around the distro block after using Linux for 20 years and I'm too old to be debugging xorg or other random shit anymore.
You are looking for nuitka https://nuitka.net/pages/overview.html. You will need a cross-compiler and patience. If your code uses c-extension modules like lxml or numpy or has a gui like pyqt or wxpython it will get complicated quickly.
Same. My one adventure into Linux Mint was frustrating as the simplest things went wrong with no simple solution to be found. Now all three of my computers have Ubuntu installed.
Ok, my 300$ phone is enough to run Atom :) I manage computers for my entire family. My dad has been using second hand laptops for a while now for his browsing stuff and running legacy software. His laptop was low end and cheap when it was bought 6 years ago. Over the years I just added 4GB more for RAM and a 30$ basic SSD. It runs Atom without breaking a sweat, as it should.
Home, dev: Ubuntu VMs, Raspbian Home, prod: Red Hat, CentOS, some Ubuntu VMs Containers of all shapes sizes and flavors everywhere, too.
Just google monospace fonts and pick what you like :)
Yeah exactly. End up not sticking to one distro. Coz i check like almost every month 😂
&gt; OOP in python is extremely powerful, especially as it allows multi inheritance which allows for writing very powerful mixins. Yeah good luck debugging / comprehending that, particularly when someone else wrote it. You could just use functional programming style and write top-level functions. Here are good arguments by an experienced programmer. [Object-Oriented Programming is Bad](https://www.youtube.com/watch?v=QM1iUe6IofM) [Object-Oriented Programming is Embarrassing: 4 Short Examples ](https://www.youtube.com/watch?v=IRTfhkiAqPw)
I use Linux. Because of GNU CLI apps being available without a fuss. Because of IO pipes. Which Linux? Any distro that offers me the Python version that I want to use without too much fuss. Really doesn't make any difference at all. Fedora, Manjaro, Debian, Mint, etc. CentOS sucks because of using older Python versions, but if that's what you're using in production and you don't have a very good testing environment, then CentOS it must be.
For Linux, I use Ubuntu on workstations and CentOS on servers. For Python, I use Anaconda. It bundles a lot of the libraries and tools I use on a regular basis. For IDE's, I jump between vim, Jupiter notebook, and PyCharm.
Can I ask, why was LFS necessary for Python development? Very curious, if someone asked me to do that I'd have a heart attack
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I recommend this book: Effective Computation in Physics: Field Guide to Research with Python
Isn't this what gists are for? The nice part about using gists is that they are still attached to your github profile, so still only one VC system to worry about.
Nice sum up
LFS gig had nothing to do with python, was back when perl was the deal. . Was doing stuff with sensors on an old box for a homebrew weather station. We used LFS because it was nifty and shiny and the guy that was letting fiddle around in Valhalla thought it would be cool.
I started with a python course on edx.org The courses are pretty good and free.
You know, I get that, but as someone who has been using Linux since 2012 I've never found anything I stick with the longest. Not even Debian. Ubuntu being so well supported feels like the OS just gets out of your way so you can get shit done. I even kind of miss Unity. There, I said it.
[removed]
Seconding vim! :term C-w C-x ipython Is my ideal setup How has how far have the autocompletion bin libraries come? They used to take forever...
He said lightweight. He already has one operating system.
No, not an opinion on technology itself, but the reason to use it, and this applies primarily to the question about distros, since most of them are very capable and not too many tasks can be done in one but not in the other.
Fedora! It's practically upstream CentOS.
Don't
This is a classic (heh) classification problem - definitely a thing you could try and solve with machine learning. Take your dataset, normalize it, then feed it to something like TensorFlow or maybe CatBoost and see what comes out. If your model is decently accurate, there's a whole bunch of ways to evaluate which features contribute the most to an accurate prediction.
The classic book used for a long time to teach algorithms used in science is [Numerical Recipes](https://en.wikipedia.org/wiki/Numerical_Recipes). It teaches many essential tools used in, e.g. physics, like fast linear algebra methods, interpolators, integrators, etc. etc. Mostly because of its license (all code in NR is proprietary...) it was superceded in a way by the [GNU Scientific Library](https://www.gnu.org/software/gsl/doc/html/intro.html). Now, since you are in the Python sub, I should say that those two resources linked above are all for C/C++. In Python, as others have mentioned, tools like numpy/scipy have become the norm, but they don't really help you *learn* scientific programming/numerical computing so much as provide very optimized tools to do so. A quick google search told me that some books about numerical computing in Python [do exist](https://www.oreilly.com/library/view/numerical-computing-with/9781789953633/) but since they are all so new I don't think anyone can speak to their quality in comparison to things like NR/GSL. I can say as someone who has done numerical computing in physics their whole career, the best way to learn is to do. Take some physics problems you remember from your degree days and try to write solvers for them yourself. For instance, you can imagine writing a wavefunction solver given an arbitrary potential in QM. It's *just* a complex ODE integrator ("just" in italics because you will find implementing your own integrator will be challenging). Throwing the problem at scipy will yield a result, but implementing it yourself at least once can be very illuminating. Hope that helps, and I'm happy to answer any specific questions you might have.
Bouman led the creation of an algorithm that adjusted the previous VLBI algorithms to this purpose. However, her specific algorithm wasn't used ultimately, but it was one step in the process where they created several things and learned from them. But yes to say that she led the development of the algorithm is false. It's a quote from an MIT article in 2016 that the papers picked up, and in that article wasn't a lie, but they didn't know at that time how the picture would be actually taken, that was just one step on the way. Papers made it sound like there was one algorithm used that she created which is not true.
&gt;Kinda like the font used in this post. I see what you mean, it's a [nice font indeed](https://i.imgur.com/iJVJFRk.png).
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Nothing wrong with that. I prefer Ubuntu as my workspace in general. I use CentOS/RHEL at work on the servers, but Ubuntu as a general programming environment is great.
Why do you have so much storage? What do you use that for?
Fedora. I started using because I had problems with Ububtu years ago and moved to Fedora to see with things would work better, and never changed again.
pyttsx3 is great, since you can pick TTS voice from your system!
Linux Mint it ran more stable on my machine then all the other distros I tried
Virtual machines and docker images. Before I became PHB, we do genomic analysis and raw data combined with analysis output is about 400GB so sized it for that too. In reality, it’s way more than I need.
Yeah, learn assembly for data science instead, way better. /s
Gist saves at each ctr+s?
I used Antergos too. Although at least in the past it was also a pain to install because of bad repos during install or other stuff.
Lubuntu, because of the lightness and because I am way more familiar with Ubuntu than any other distro
Everyone should be using venv anyway, so their projects are reproducible
You're actually rich by a lot of people's standards. I regularly see 2 GB machines with Intel Atom CPUs. they're borderline for Windows without the several hundred MB of ram atom editor consumes.
Nice! I recently got a coding interview (also career changing, sort of). Even if I don't get the job at least I will know what I need to practice for next time.
&gt; Get to use the PPA repos can you explain this a bit more. I know what PPAs are but is there a difference when using the net installer?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
I mean, sure? &amp;#x200B; Setting up a repo takes less than a minute once you know what you're doing. Even less for a gist. For me, taking shortcuts on something as fundamental as version control is a bad code smell.
1. /r/learnpython 2. "localhost" is a magic address that refers to the current computer. We can't access _your_ computer especially if you don't even tell us its public IP address. Post the text of the rror.
This is bad advice. Setup a repo. Once you do it a lot it takes about 30 seconds.
Debian. I'd use Slackware if I still had the time needed to keep it, and all manually installed software up to date.
Sounds like a case for principal component analysis. I'm not super familiar with it but it's basically used to determine the n number of variables that most contribute to explaining the solution. But I agree with others that its probably easier to just throw it in a random forest and see what comes out.
So I'm not a real developer, just a student atm. Currently I use Arch but honestly I've been thinking about switching to Debian. I do love the customization of it, but I don't have as much time to manually configure everything. And at the end of the day any distro is still Linux.
Amen brother.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I cast my vote to arch.
Vanilla MATE desktop = productivity, stability Fedora = Latest packages, of course not everyone wants them &amp;#x200B; A, mix of those = Bliss
The connection was reset The connection to the server was reset while the page was loading. The site could be temporarily unavailable or too busy. Try again in a few moments. If you are unable to load any pages, check your computer’s network connection. If your computer or network is protected by a firewall or proxy, make sure that Firefox is permitted to access the Web.
How lazy could you be to just do git init git add . git commit -m "initial commit" ?
So, something is dropping your connection. It might be Vagrant itself messing up, or it might be something on the server. Can you post your Vagrantfile?
Sublime, set tabs to four spaces, get package install, install a terminal launcher, maybe a linter if you need it. Ooh, a dark theme. Yeah, you're good to go.
It shouldn't matter (provided you can get the packages you need, etc) but people are bringing up good points for using containers, VMs, and rolling release distros I use ubuntu mate right now but I'm not particular to any distro. I like rolling release distros for the latest packages (I used OpenSUSE tumbleweed for a while). Some distros packages aren't old but ancient so somewhere in between is fine for me though i tend towards the latest.
# -*- mode: ruby -*- # vi: set ft=ruby : Vagrant.configure("2") do |config| config.vm.box = "bento/ubuntu-16.04" config.vm.box_version = "= 2.3.5" config.vm.synced_folder ".", "/vagrant" config.vm.network "forwarded_port", guest: 8000, host: 8000, host_ip: "127.0.0.1" config.vm.network "forwarded_port", guest: 8080, host: 8080, host_ip: "127.0.0.1" config.vm.network "forwarded_port", guest: 5000, host: 5000, host_ip: "127.0.0.1" # Work around disconnected virtual network cable. config.vm.provider "virtualbox" do |vb| vb.customize ["modifyvm", :id, "--cableconnected1", "on"] end config.vm.provision "shell", inline: &lt;&lt;-SHELL apt-get -qqy update # Work around https://github.com/chef/bento/issues/661 # apt-get -qqy upgrade DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade apt-get -qqy install make zip unzip postgresql apt-get -qqy install python3 python3-pip pip3 install --upgrade pip pip3 install flask packaging oauth2client redis passlib flask-httpauth pip3 install sqlalchemy flask-sqlalchemy psycopg2-binary bleach requests apt-get -qqy install python python-pip pip2 install --upgrade pip pip2 install flask packaging oauth2client redis passlib flask-httpauth pip2 install sqlalchemy flask-sqlalchemy psycopg2-binary bleach requests su postgres -c 'createuser -dRS vagrant' su vagrant -c 'createdb' su vagrant -c 'createdb news' su vagrant -c 'createdb forum' su vagrant -c 'psql forum -f /vagrant/forum/forum.sql' vagrantTip="[35m[1mThe shared directory is located at /vagrant\\nTo access your shared files: cd /vagrant[m" echo -e $vagrantTip &gt; /etc/motd wget http://download.redis.io/redis-stable.tar.gz tar xvzf redis-stable.tar.gz cd redis-stable make make install echo "Done installing your virtual machine!" SHELL end
Please format your code properly for Python.
Oh God what it would do with tabs I almost want to try it as a challenge
You (and every other OP comment here :P ) could definitely be right. I love this about programming. You find a way to do something. Someone sees it and goes "oi, here's a better way".
I have been using Debian for 8 years.
What is the procedure of releasing something to pypi? Was your code reviewed?
I have been on testing or unstable for years. Same old Debian but with modern packages. For python in particular, I have not had trouble compiling it in years, so I can always get the version I want. I have some instructions squirreled away if you want them.
This is pretty cool! I’ve not searched for something like this so I don’t know if there are others like it, but the documentation and features are really straightforward. I could see myself using this. Well done!
I am using Kubuntu, but after years of distro hopping, I really don't care about the distro. The first thing I do with a distro is check if my tools are installed and install them if needed. Emacs, zsh, gcc, gdb, python3 as default, pudb, mosh, cowsay and fortune. Once I have these, I could care less about everything else. I don't really install software that much and I even forget which package manager I am supposed to be using because I mostly just pip.
Ubuntu has come a long way
At work, I'm limited to CentOS or REHL.
\# -\*- mode: ruby -\*- \# vi: set ft=ruby : &amp;#x200B; Vagrant.configure("2") do |config| [config.vm.box](https://config.vm.box) = "bento/ubuntu-16.04" config.vm.box\_version = "= 2.3.5" config.vm.synced\_folder ".", "/vagrant" [config.vm.network](https://config.vm.network) "forwarded\_port", guest: 8000, host: 8000, host\_ip: "[127.0.0.1](https://127.0.0.1)" [config.vm.network](https://config.vm.network) "forwarded\_port", guest: 8080, host: 8080, host\_ip: "[127.0.0.1](https://127.0.0.1)" [config.vm.network](https://config.vm.network) "forwarded\_port", guest: 5000, host: 5000, host\_ip: "[127.0.0.1](https://127.0.0.1)" &amp;#x200B; \# Work around disconnected virtual network cable. config.vm.provider "virtualbox" do |vb| vb.customize \["modifyvm", :id, "--cableconnected1", "on"\] end &amp;#x200B; config.vm.provision "shell", inline: &lt;&lt;-SHELL apt-get -qqy update &amp;#x200B; \# Work around [https://github.com/chef/bento/issues/661](https://github.com/chef/bento/issues/661) \# apt-get -qqy upgrade DEBIAN\_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" upgrade &amp;#x200B; apt-get -qqy install make zip unzip postgresql &amp;#x200B; apt-get -qqy install python3 python3-pip pip3 install --upgrade pip pip3 install flask packaging oauth2client redis passlib flask-httpauth pip3 install sqlalchemy flask-sqlalchemy psycopg2-binary bleach requests &amp;#x200B; apt-get -qqy install python python-pip pip2 install --upgrade pip pip2 install flask packaging oauth2client redis passlib flask-httpauth pip2 install sqlalchemy flask-sqlalchemy psycopg2-binary bleach requests &amp;#x200B; su postgres -c 'createuser -dRS vagrant' su vagrant -c 'createdb' su vagrant -c 'createdb news' su vagrant -c 'createdb forum' su vagrant -c 'psql forum -f /vagrant/forum/forum.sql' &amp;#x200B; vagrantTip="\[35m\[1mThe shared directory is located at /vagrant\\\\nTo access your shared files: cd /vagrant\[m" echo -e $vagrantTip &gt; /etc/motd &amp;#x200B; wget [http://download.redis.io/redis-stable.tar.gz](http://download.redis.io/redis-stable.tar.gz) tar xvzf redis-stable.tar.gz cd redis-stable make make install &amp;#x200B; echo "Done installing your virtual machine!" SHELL end
Bro my first distro was Red Hat in 96' then Slackware, Gentoo and I end up with Ubuntu actually Xubuntu (Xfce) earlier I've used Fluxbox. I'm completely happy with this Distro and old saying is: **"If is working don't change it"**, so I do.
Wow that's awesome! Do yo know if they have a library for the Endpoint side of things?
Pop!_OS because I have an Nvidia card and need cuda.
There is no mandatory review required for releasing to pypi if that's what you mean. The code has not been reviewed by anyone but myself. You can read all about the process packaging and releasing [here](https://packaging.python.org/tutorials/packaging-projects/). I [configured gitlab-CI](https://gitlab.com/max-tet/gconf/blob/master/.gitlab-ci.yml) to do all this for me on every push to master.
friggin noobs are killing this sub
You do realise that for example django uses OOP to a great extent and it is extremely successful? Class based views are superb and an incredible time saver compared to traditional function based views.
I feel like all of us Linux users WANT to use some hip hardcore distro, some esoteric thing based on Arch or something... but every time I VMware something that doesn't end with "buntu" I end up wasting 3 hours and saying to myself "WTF are you DOING?!"
&gt; I installed 16.04 when it came out as couldn't face reinstalling everything when 18.04 came out. You know running `do-release-upgrade` doesn't uninstall anything, right?
Thanks! Well, there is of course the [configparser](https://docs.python.org/3.5/library/configparser.html) from the standard library. But I find the file structure clunky compared to yaml. And I needed a feature like the temporary override via a context manager. That is why I did my own thing.
When you get into Python, pretty much everything is a dictionary. Classes? Dicts (see myclass.\_\_dict\_\_). Modules? Dicts (var(mymodule)). How local and global variables and methods are stored? Dicts (globals(), locals()). Every function call involves multiple lookups in multiple dictionaries. Python is pretty much a language designed from the idea "What if everything was a dictionary?"
No, there isn't. The net install is a minimal installation. No libre office or any of that stuff forced on you. You can choose your desktop environment at install time, but since I use I3 I just leave it blank and install that afterwards. The only painpoint I've had during installation IST the WiFi drivers, but if you do a minimal installation that's the same everywhere. The benefit of this is that I can use any Ubuntu package I need later (like printer/scanner) for example without having to worry about how stable it is. I prefer the PPA repos to the arch ones because they're stable. If I want to use bleeding edge packages (which is truly rare) I can still install the appimage or compile it. As for the Python thing, I use minconda to manage my python environment anyway so that's a non-issue for me.
[https://scipy-lectures.org/](https://scipy-lectures.org/)
Fedora, Ubuntu for servers
http://scipy-lectures.org/ was my go to moving form Matlab doing scientific type sruff
After trying out some other CLI packages like Click, and Docopt, I couldn't help but feel helpless in creating a CLI that has subcommands to my commands. My goal was to have commands and subcommands to my application, similar to `git`'s: `git init` `git show -q` `git &lt;command&gt; [&lt;args&gt;]`
I agree yaml is a better approach for config files. And the context manager feature seems nice, it might come in handy for testing.
I'm working on a Bitcoin library written entirely from scratch with a focus on readability and comprehensiveness, using nothing but the Python standard library: [https://github.com/onyb/littlebit](https://github.com/onyb/littlebit)
There are times when you are stuck with OOP because say some library is heavy on OOP. Sometimes OOP arises naturally in UI libraries for example. I don't use Django. I use Flask. You don't have to use classes there. You can just use functions. You don't have to generate html/css/js from flask - it could be static and separate just using ajax to fill in what is missing. My original comment was: &gt; avoid OOP when using Python whenever possible ;) There are several functional languages at this point that don't allow classes and polymorphism and all that stuff - only basic structs. They have web UI frameworks for sure.
Where did you get this from? It's... Really weird.
my reddit had an ugly ass rectangle in the top left corner along the lines of "new reddit". i clicked it and suddenly reddit looks MUCH better.. . i don't social media for "reasons". some based on principle some bc im (actually) a rejection sensitive autist. it just so happens i downloaded a chrome extension for new tabs which is nice. but it just autosigned me into reddit (see, that would be a principled reason not to participate). neway, the extension is nice even in spite of showing me posts on reddit python (im not gonna do the slash thing). if i get replies, or downvotes, or upvotes, or msgs, or "dms"(?) ill prob read them some day when im feeling particularly confident (i.e., soon **™**). other than that, im here to blurt things out in a way that only ass burgers can. &amp;#x200B; so thats the general idea. but you stated it much more clearly. and i want to express my gratitude for that. i can only offer an upvote. and an upvote you shall have.
Yes, that is the main reason for the feature.
Given the RedHat/IBM merger I would consider moving to Debian/Ubuntu for personal projects. In 10 years CentOS/Fedora will be affected, and possibly closed source like Oracle did with Solaris.
Kali, which is debian based, and you have to work a bit tricky since the default login is root.
Sign up for a free account, type a command. Job done.
Mint. It works for me.
It would be very easy and valuable to add TOML to this! It has some advantages over YAML (some drawbacks too). This would be a particularly awesome tool if it allowed you to abstract over the actual format of the config file.
Yeah I run this on my Thinkpad and an old iMac. Amazingly fast, everything you need in a desktop PC, everything 'just works' even more so than distros like Ubuntu etc. Big fan.
I've been doing Python for about a week. I just wrote a program to determine if an inputed integer will satisfy the [Collatz Conjecture](https://en.wikipedia.org/wiki/Collatz_conjecture).
Fellow physicist here, a few years ago I found this book: https://hplgit.github.io/primer.html/doc/pub/half/book.pdf Written by a Danish professor who has since passed away. It’s a really good read with a lot of examples and it’s free. If you’ve got any questions feel free to drop me a message and I’ll try to help!
Boooo TOML, it's like YAMLs special cousin that people keep insisting you take to the park with you.
I was using Ubuntu and Elementary but recently bought ThinkPad x230 and put a MacOS on it and I've never been happier lol, such a great OS
Debian, because I want something that works without much fuss, but I don't need or use any of the cruft Ubuntu stacks on top of it.
ctrl+vim
this looks amazing!
i think you should just uninstall and leave it at that.
Fedora with XFCE
Clear Linux a after learning it's python distribution and optimisations make it there fastest standard python available.
OS X and docker because it’s *nix not Linux.
The argparse module (and the add_subparser() method, in particular), might be what you are looking for.
Linux Mint is 95% the same as Ubuntu, no?
&gt;From python dev perspective almost any distro will work out just fine anyway. this is it.
It looks to me like you are just doing a lot of work to replicate this functionality. https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_subparsers
Manjaro sells their own laptops with Manjaro preinstalled. I don't really see the point, but it is a great distro
Lol. You should probably quit worrying about optimization until you have some idea of what actually needs to be optimized. That's not one of them.
Yeah idk, several programs I installed just wouldn’t open. Spent many hours troubleshooting to no avail, I think it had something to do with a graphics library but idk. Also had GUI issues, one day I opened my laptop and the desktop environment was completely different. No clue how that happened. I’m generally pretty competent with troubleshooting but after a few months I was fed up and switched back. Never had a single problem with Ubuntu.
Eats up battery life and uses lots of RAM (Electron...)
Spotted the troll
I'm the same, but with Debian. I sometime will feel adventurous and install Debian Sid on a VM.
I use Fedora. It's just personal preference. I started on on Mandrake (based on Red Hat) then Debian and eventually Ubuntu. I've liked Fedora for a long time but it was never up to where I wanted it. Now it's to my liking AND I work as a Linux Engineer and my corporate environment is all Red Hat. Fedora helps me stay on top of where Red Hat is going.
This is why I chose Lubuntu. I don't want fancy. I don't want to spend hours learning the pros and cons of every possible option. I want to get things done. I also don't have bleeding edge hardware.
Same principle, but Debian stable. I just want it to WORK. And I usually compile my pythons, so the official sources being a bit behind doesn’t bother me.
I lost all my savings in 100 lines of code! Click here to find out how YOU can do it too! No knowledge of programming required!!
How is this related to python at all? You should probably post somewhere more generic about programming or fonts in general. Also, you probably want to post what the font you are seeing looks like (images help) as HINT: nobody here can see your screen.
Idk. Maybe cause the fucking font is in Python? And I'm not fucking retarded, cunt. No shit you can't see my screen. Perhaps it doesn't have anything to do with the question? How is my current font relevant. I want a different font
He means by hand. No one wants to do list.append(cat1), .. list.append(cat400000).
I used to align my distro with my place of work, but in the last few years I have gotten too used to the creature comforts of Debian based distros. Whenever I dev for something like Red Hat, I'll use my system to write and a Red Hat VM to test. I loaded my current dev station with Pop OS from System 76, and love it. Gnome plus Debian just feels great as a user experience to me.
Switched from fedora to manjaro+i3 just yesterday, very happy with the change
Do you have recommendations for how to find clients?
Well, presumably in a week you'll be able to. Channel your future self ;)
If you use pyenv it shouldn't matter.
&gt;Idk. Maybe cause the fucking font is in Python? Nope, it isn't. It is a font installed in your operating system like all other fonts. That is absolutely nothing about ANY font that makes it "in python". &gt;Kinda like the font used in this post. You literally asked us to identify the font YOU are seeing on YOUR computer in THIS POST. You realize that varies by operating system, browser, user settings, plugins etc? As in, odds are you are seeing a completely different font in this post than the rest of us?
There is an old argument to be made to management when it comes to these types of things. Buying better computer hardware is cheaper than forcing your developers to use inferior tools because they don't have the computing resources they need. I run the most recent version of PyCharm on a $600 Dell Desktop with 16 GB of RAM and a cheap Samsung SSD purchased for less than $100 at Amazon with. You take the hit on the initial load time when you want to get started and don't close it out. And really 16GB is the low-end for what I would recommend on a Development machine per paragraph 1 above so saying that leaving it open eats up too much memory shouldn't be an issue. Visual Studio Code is great, but it's autocomplete, refactoring, test integration, linting and finding errors up front is clearly inferior. If one wants to go down to the "lighter" editor option, then I can simply say VIM (which is what I tend to use for quick open, reviews and hacks) is the superior choice when that is the focus.
 $ lsb_release -a LSB Version: 1.0 Distributor ID: VoidLinux Description: Void Linux Release: rolling Codename: void $ uname -a Linux ceci 5.0.7_1 #1 SMP PREEMPT Sat Apr 6 06:19:37 UTC 2019 x86_64 GNU/Linux $ python3 --version 3.6.8
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Your `update` method updates the dictionary in-place, so there's no need to keep assigning to `_merged_dict` when you call `update`. This would let you get rid of some `global _merged_dict` (since `global` is only necessary if you are assigning to the variable) statements and make your code cleaner.
Less CPU/RAM usage. VSCode isn't heavy, I'm not a real big fan of microsoft, tbh.
I use ubuntu everywhere. I was on antergos for a year or so. Other than that always been on ubuntu.
You won't learn anything if others do your homework. If you can't do the assignment then you'll be lost at work
People hate Ubuntu because it's easy and popular, not because it's a bad distro. Same can be said about bash as the default shell
You should look into using [virtual environments](https://realpython.com/python-virtual-environments-a-primer/), this will solve your problem and is very useful for developing code with a consistent set of packages.
I will also have to be contrarian: standard corporate OSX on the laptop (plus dotfiles) for browser/documents/teleconference/ide stuff. Usually a hundred live virtualenvs; one per repo. Docker for Mac used locally; every project with a daemon lands in a docker image these days. And then bunch of Ubuntu Server VMs for workloads (most immutable &amp; trivially replaceable, no dotfiles), with a few thousand Debian/Alpine-based containers on top (each lasting less than a day).
I like it on the desktop *because* it's easy and popular. I've got work to do. I'm not pissing about with Arch when Ubuntu works out of the box and has been stable for me. My work desktop has been upgraded from 15.10 all the way to 18.10 without issues (yeah not even running LTS). Servers at work are always CentOS though. (Debian at home).
I’ve been using arch on my home desktop for about a year now. It’s been relatively problem free, AUR is awesome, and really not having to hunt down packages or repos for obscure shit.. it’s really just great. Coming from centos/Debian, it’s so much more quick to get random things up and going. _However_ the only thing I’ve had to be patient about is upgrading. Specifically if I haven’t upgraded for a week or two and want to install a new package. From time to time doing a pacman -Syu requires booting to a rescue image to fix a kernel module, or something. It’s not a huge deal, but I wouldn’t want to have this be a concern on my work machine. I’ve been using osx for probably the last decade now almost. The last couple of years doing OS upgrades or even patches has been _less_ stable and consistent than say going from kernel 4 to 5, or even earlier versions of 4 to newer versions (there were some bumps post-4.20.x iirc). But the real problem is that troubleshooting Linux (arch specifically) is extremely easy. Boot to a love image, chroot, poke around and fix things, etc. With the mac it’s hopefully trying to get some info out of logs + googling and or just dropping my laptop off with IT. So in summary arch has been more stable and a cleaner experience overall than osx while also running an nvidia card. So that’s saying something.
&gt; The developers' current stance is that the initialism no longer stands for anything specific. https://en.m.wikipedia.org/wiki/Xfce
Desktop link: https://en.wikipedia.org/wiki/Xfce *** ^^/r/HelperBot_ ^^Downvote ^^to ^^remove. ^^Counter: ^^250924
**Xfce** Xfce or XFCE (pronounced as four individual letters) is a free and open-source desktop environment for Unix and Unix-like operating systems, such as Linux, Solaris, and BSD. Xfce aims to be fast and light-weight, while still being visually appealing and easy to use. Xfce embodies the traditional Unix philosophy of modularity and re-usability. It consists of separately packaged parts that together provide all functions of the desktop environment, but can be selected in subsets to suit user needs and preference. Another priority of Xfce is adherence to standards, specifically those defined at freedesktop.org. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
And a large repository of packages. It gets a little annoying when you try to compile something and there are dependency issues, and those dependencies have dependency issues.
Anger management, anyone?
I used alpine for ages to generate base images for applications, but musl is a hard pass for production. Not because I have a problem with it but internally anything that cares about libc isn’t developed against or compiled with musl.
 &gt; the fucking font is in Python? It is in a program on you machine. It depends on what you installed and configured. &gt; And I'm not fucking retarded, cunt. Some manners might help. Beggars can't be choosers. &gt; Perhaps it doesn't have anything to do with the question? How is my current font relevant. Well. You asked for a font you are currently seeing on your screen. So this was relevant. As you so eloquently stated &gt; No shit you can't see my screen. So maybe you could ask someone in a nice and respectful way for help. &gt; I want a different font. As others said. Ask Google how to install other fonts. Look for Monospace fonts. That means all letters are equally wide. That helps when writing and reading code. After you installed the don't ask Google how to change the font in PyCharm. That is not that hard.
what's so good abot the aur compares to the ubuntu store?
Mint because I CBA to learn how to install it any other way
Why are we worried about how many lines of code it is? Isn't the goal to make money, not to make it 'easy'? 100 lines doesn't mean anything. Does it work or doesn't it? Does it beat index funds? That's all that matters. Don't try to compress it to as few lines as possible so that underachievers can think, 'Finally, something for me! An idiot!'
Isn’t OSX much “smoother” though? I feel like I can do whatever I want on OS X, like when browsing, I can pretty much zoom in / out at anything whenever I want. Also, Ubuntu drains battery life much faster than OSX does.
Locally, any nix distro does, but I run Ubuntu 18.04 (LTS). In production it's almost always CentOs/RHEL. &amp;#x200B; Containers are changing everything though. We're just defaulting to lean alpine images.
/r/learnpython is more than happy to help with homework assignments, on the condition that an attempt must be made to solve the problem. Post your code and what you're trying to do, if you're getting an error, and you'll get help. Otherwise, we won't do your homework for you
Sles aka SUSE. It has the best driver support and apparmour is awesome. Yum is amazing as well.
100 lines of code means I can understand the whole process and build on it. &amp;#x200B; If they told me I can do this in 10,000 lines of code, which I'm sure is more realistic for professional trading software, the bar would be too high for regular schmoes like me to test the waters.
I don't think it's encouraging the right mentality.
Introduction to Programming in Python by Sedgewick, Wayne, Dondero... It's straight out of the Princeton curriculum and is slightly heavy for an Intro book... But the content is pretty awesome... Percolation Problem, Towers of Hanoi, Recursive Fractile/Graphics drawing, Transition Matrix, Markov Model...... searching algorithms ie DFS, Breadth First Search, etc etc... It's not easy. But that's why it's worth it.
ubuntu and because
I have never used TOML and can say nothing about its usefulness. But you are right, the ability to parse many different file formats would be useful. I was planning on adding at least a JSON parser.
One that hasn’t been mentioned is Think DSP by Allen Downey. http://greenteapress.com/wp/think-dsp/
Good catch, thanks. I will look into it.
Are there any iterations of Vim that are beginner-friendly, like Neovim, etc? It's not that VSCode is too heavy, I'm just not a fan of microsoft :/
If it's an educational project the length does matter. You don't have to let it loose on the market if you don't want to and the subject matter can motivate students.
too much
seems okay, not that great though?
Checkout InputTypes (currently only at phone, else i would explain it more)
You can’t beat plain ol’ Ubuntu!
https://t.me/python_textbooks
PyCharm pro has full support for Jupyter notebooks and is free if you have an educational email. Highly recommend.
Arch with Gnome3 at home, Ubuntu with i3 (in a VM) at work.
What was the problem you had with the sphynx tutorial? It worked for me. However if you claimed to be a professional and above intermediate, I would expect you to read and understand the docs.
Why are people downvoting this? It's clearly a joke, and a pretty good one at that haha
Apparently there are a lot of similar alternatives, like arcolinux, archmerge, archbang. Even manjaro has an installer with i3 already set up.
is this guy real with that v neck shirt?
Okay, thanks
_How to Spice Up Your Day-Trading Game with randrange()_
You aren't wrong about the installer. Cnchi is garbage.
&gt; but it's autocomplete, refactoring, test integration, linting and finding errors up front is clearly inferior. Maybe if you are comparing both straight 'out of the box', but I don't really think the balance is in the favor of Pycharm when you factor in some plugins. I have Kite installed, so autocomplete in VS Code is pretty amazing. It's available for Pycharm, too, so it's not a point in favor of VS Code, but they're pretty much even. For refactoring, pretty much the only thing I use from an IDE for that is the "extract to method" and "extract to constant/local variable", which is more than sufficient in either. Anything more complicated I don't trust an IDE to do with Python. I've had one too many things break terribly trying to do anything more complicated "automatically". As for linting, depending on the project I have 1 or more running in VS Code. It does pep8, mypy, pylint, pylama, pydocstyle, flake8, prospector and bandit. I really don't see how Pycharm does better at this, either. VS Code runs the linter and gives output so you can go fix it. Test integration is similarly the same. I have a similarly powerful, but not top of the line machine. It's not just the initial load, it's just overall usage that drives me nuts with Jetbrains stuff. Everything is just sluggish. Opening menus. Switching code tabs. Just overall. Getting a faster computer only helps so much, but anything that makes Pycharm faster makes VS Code (or VIM) faster too, so the delta remains between the two.
Arch with ZFS boot environments for creating non-conflicting setups of tools.
Sure. Just to be clear, premature optimization is an anti-pattern in all programming. In Python, the focus is always on writing code that's easy to read and reason about. If you follow the conventions for doing that (pep8, etc.), the most readable code is often the fastest code, too.
&gt;import oandapy as opy &gt;import seaborn as sns There's two libraries I've never heard of in this project. I'd study a shit load of code before I threw account details at some foreign library. The '100 lines' bit is a gimmick and should be frowned upon.
piss off
tHiS iS nOt tHaT hArD. for you. have u perhaps thought i didnt know how to do it and thats why i was asking?
As should the logic of "This is 100,000 lines therefore you know it must be good code". I've seen codebases of thousands of lines that should have been hundreds, and codebases of hundreds of lines that should have been more. Quantity != quality with code.
Thanks for asking! I use Debian testing primarily. (If you're more territorial over your computer's security, then it's the way to go.) I have one server that uses Ubuntu, but it's only purpose is to serve a django app. At one point I considered trying out Scientific Linux, until I saw the horror of Anaconda's presence on it. Debian offers you the same level of customization (or length of rope to hang yourself with) as distros like Arch, but I've found that the aptitude package manager provides a much more intuitive experience than pacman.
not my stance x-force!
Amazon Polly.
Open BSD
Debian unstable. But really almost any distro works for a python dev as long as python is packaged for it.
I don't think it is better. I just had a very good experience with it all these years. I wanted to try Ubuntu in the early years, but every new release had something broken out of the box. These day it is quite solid and lots of companies use it. In my years of Debian use, I just never had the need for bleeding edge packages, so it never bugged me to switch to something else. Even Steam works great. Just been playing XCom 2 now. :)
Mint because it's isn't MacOS or Windows yet, it being Debian, everything pretty much just works. Anaconda has a simple installation and VSCode and Docker are even more straightforward. It's just easy and pretty.
the creators have heard your concerns and address them [here](https://www.youtube.com/watch?v=_Q9iU4uA_gY)
Re: battery life, yeah. I mean you aren't going to get better than when is and hardware are developed to work together.
I used xpath methods to scrape information from a few financial websites , and I had no idea how powerful and versatile it was. But it wasn’t exactly user friendly or convenient
Exactly, that's why it's always my go-to distro. And it's plenty customizable, it's just not forced on you that you have to customize it.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Seaborn is a great visualization library built upon Matplotlib. Very common in data Science
 This article is the "Hello World" of trading software basics. Is "Hello World" a gimmick that should be frowned upon? I learned every one of my languages with "Hello World" and even decided not to learn a language because it took 3 times for my "Hello World" to compile. &amp;#x200B; And if you haven't heard of a library than you look into it, you don't reject the sample code. Otherwise you are either not going to get very far in programming for a living or you are going to waste a lot of your employers time and money.
This reminds me of the flash crash! Interesting wikipedia read: [https://en.wikipedia.org/wiki/2010\_Flash\_Crash](https://en.wikipedia.org/wiki/2010_Flash_Crash) Interesting documentary (mainly Dutch, partially English) [https://www.youtube.com/watch?v=6vbXTxG06-c](https://www.youtube.com/watch?v=6vbXTxG06-c)
HPL was Norwegian, a professor at the University of Oslo, and widely known as an excellent educator, much loved by his students. Some of the people in his group where the main driving forces behind FEniCS for a long time, THE framework for solving partial differential equations in Python. His FEniCS tutorial book is free and a very good starting point if you want to solve PDEs. The book was published after his way too early passing. He also wrote other books on Scientific Python. Some of them may seem a bit dated now, since he started with Python for science a long time ago, working on Diffpack
Great explaintions! You explain complicated tricks in an intuitive way. It is really interesting. You have a lot of talent. I would like to learn more from you. Thanks!
Ok, the problems that I’ve ran into is that I don’t know how to make a boundary that represents a mountain. This might not even be needed because I could create a statement that once said line is touched, destroy ship. And only allow it to be landed in certain parts.
Here is a paragraph from the conclusion of the article that does a great job of explaining what you get by reading it. This probably should have been added along with link by OP &gt;This article shows that you can start a basic algorithmic trading operation with fewer than 100 lines of Python code. In principle, all the steps of such a project are illustrated, like retrieving data for backtesting purposes, backtesting a momentum strategy, and automating the trading based on a momentum strategy specification. The code presented provides a starting point to explore many different directions: using alternative algorithmic trading strategies, trading alternative instruments, trading multiple instruments at once, etc. Probably the most useful thing is that [Oanda.com](https://Oanda.com) allows you to setup a free trading account that uses fake money and they have an api with a python package oandapy that allows you to call it to gather historical data and to execute trades using python. Seaborn is used to create visual graphs to help compare how your algorithm performs with different intervals for the data points. For the length of the article it does give a lot of useful information for how to use python for trading. My concerns would be limits on the api for historical data. In order to be effective you would want to be able to test the algorithm against thousands of different stocks. Ultimately the more data you could get the better chance you have of turning a profit. TLDR: Free [Oanda.com](https://Oanda.com) account that allows you to trade with fake money that has an api and a python package for using it. The code helps you to test against historical trends and then to actually test by making trades. Seaborn is used to create graphs that help visually compare outcomes. Example does lose money btw.
I've never had a "Hello World" intro where I needed to import a library. I in no way said 'reject' any part of this either. I just said acting like you only need to study 100 lines of code and then you'll know how it works is wildly misleading. Especially in a case where you're going to throw account details at it...you should know exactly what anything you're throwing personal account info at is doing with it.
Ehh, bash is old and crusty. That's fine, a lot of Linux is that way, but there are good reasons to use something else.
Polly wanna cracker?
That makes sense. I use Tableau for visualization at work (mandatory).
While I agree the title is not great and the OP should have included a summary in the post, I think it is ironic that you commented about "lazy fucks." From the context of your comment there is very little chance that you read the article or reviewed the code. What does that make you?
I just did what I jokingly call my semi-annual attempt to switch to Linux, and I think it actually stuck this time. Manjaro i3 has been so nice, Windows feels...sluggish? in comparison. It gets in the way all the time. Also it's amazing being able to use Python for everything, and that's not unusual at all on Linux.
Awesome stuff! Keep up the good job!
I found Antergos itself to be fine, but when I asked a question in an Arch subreddit they kindly told me to fuck off because I wasn't really using Arch. I don't ask questions in Arch communities anymore.
I'm curious, what made you switch to Arch? It seems like it would be easier to tweak it than to start over.
PyCharm just had a huge update to it's Jupyter support, and recently announced a partnership with Anaconda. Definitely a great tool for academia.
PyCharm Pro has every feature from their web IDE WebStorm built in. Just like Intellij IDEA Ultimate has PyCharm (and WebStorm) built in.
I'm not sure how you are coming to the conclusion that the decision wasn't based on a rational analysis. I, like others, was excited about the initial proposition of atom. The reality of it though is not something I would encourage anyone to use unless they were a web development organization first. Javascript is an unmitigated shit show. There is a new fancy project claiming to solve that mess every few months, but it just adds to the pile. It's a castle built on sand and I would submit that anyone that disagrees simply hasn't objectively analyzed the situation.
We're still talking about Linux right? The Kite site says they don't support Linux yet.
It doesn't use electron
They said they wanted something more lightweight. Electron is a resources hog and is bloatware imo
I'm curious what tools people use. The distros don't really matter for python, except that some like Manjaro have `python` linked as 3.7 out of the box, which is nice.
Yes, I know, I'm middle class in a first world country now. Mind if I ask whose standards? I'm genuinely curious. I believed I came from a poor country (my first salary as a software developer was below 150$ per month, and that was a lot compared to what people the same age as me were earning). Laptops were indeed a luxury, since you're paying much more for poorer performance than desktop. I've dragged around a Celeron 366MHz inside an IBM 286 case and power supply that I've reused from my old PC, until I got a 1 year old Athlon 3000+. Looking at people from my country, I always donate old PCs to those who would have it as an upgrade. There are many PC components to go around. Many people today would think that an Athlon x3 450 has outlived its usefulness, but that computer would still be very much powering through everything that Atom throws at it. Even LGA775 dual core CPUs would handle it. And those are dirt cheap today. There are people compiling Atom for Raspberry PI 2B+ a couple of years ago. They are using it afterwards (probably wait for a full night for it to compile). ---- Who on earth has access to the internet, and isn't able to run a program like Atom? This is a completely honest question. Maybe someone should organize a computer donation charity that takes old computers and monetary donations (for shipping) and ships them to people who actually need that? Except I've seen that in the past this was a scam to get rid of electronic waste, since nobody wants old computers (which would plow through Atom still)
There's nothing wrong with the Sphinx tutorial, but I consider it more introductory. I guess I'm looking for more of a walkthrough of a large real-world project rather than a simple generic introduction. And not just Sphinx either. I want to see how everything comes together. For most tutorials/books/courses, there's a big gap in what is taught vs what you need to know on a professional level. So I'm looking to fill these gaps, but trying to learn all these things has turned into a matter of random Googling, and clicking through links, when it could all be in one place and explained more succinctly and effectively. I'm not trying to rant here. I'm just asking if anyone knows where something like this might exist.
Click supports it out of the box. Take a look at @click.group() decorator
&gt; I'm not sure how you are coming to the conclusion that the decision wasn't based on a rational analysis. A bug with caret blinking in some software years ago says something about the platform it was developed for? Think about that for a second. &gt;Javascript is an unmitigated shit show There's nothing wrong with Javascript (I mean there is, it's a very specific language that sucks in its own ways, like many other languages). The community that relies on micro-dependencies is the problem. However Atom is a usable editor right now, that has a ton of useful features, and it works out of the box, so people learning, say, Python, can just focus on the language rather than setting up an editor or learning to exit vim.
Do you care what sits behind or do you actually want to code instead?
The easiest way is to use the string replace function sentence = "the cat smells" print sentence.replace("cat", "kitten") the kitten smells This will also replaces instances of the letters "cat" inside of words though print "duplicate cats".replace("cat", "kitten") duplikittene kittens for more sophisticated behaviour you need regular expressions (re.sub) which are much more complicated but documented here: \[re\](https://docs.python.org/3/library/re.html). If you want to play around with them while learning I'd strongly recommend the extremely useful \[pythex\](https://pythex.org) website
Thanks for correcting me! I should have looked him up but I was on the bus and trusted my memory too much. (I’ve updated my comment) It is truly a shame that he passed away, I encountered his work a few years ago and passed his essay “Learning Outcomes for Computing Competence” around my friends at University. When I saw OP ask this question I was surprised no one had suggested this book yet, I found it incredibly useful.
I'd rather not have my editor devour my ram.
that's nice. How about we go back to Windows 95 or MINIX, and write our own editor in Assembler? Or... we can just focus on coding what we need to code. All software today is bloatware. That which isn't is severely limited in features. Features create bloat. Instead of complaining about a perfectly fine tool, people should focus more on actual programming.
 "Computational Physics" by Mark Newman [https://www.amazon.com/Computational-Physics-Mark-Newman/dp/1480145513](https://www.amazon.com/Computational-Physics-Mark-Newman/dp/1480145513) There are sample chapters available if you want to try before you buy [http://www-personal.umich.edu/\~mejn/cp/chapters.html](http://www-personal.umich.edu/~mejn/cp/chapters.html)
Apologies for the (lack of) formatting... My mobile app let me down
I disagree. Sublime text doesn't use electron. Just because windows is bad is not an excuse to use a bad editor
Even though it's rolling release, some updates might take a while to trickle down -- either precisely because they care about not breaking your system, or simply for bandwidth reasons, Solus is much more of a mom and pop shop (which I really like in itself!) than your Ubuntu or even Arch. For instance, we're still on Python 3.6.x in the repos [for a combination of those reasons](https://dev.getsol.us/T6817) -- 3.7 introduced a breaking change which requires reviewing the other packages for compatibility, and there have just been other priorities in the meantime. Another small gripe is Phabricator, which the Solus dev team uses for maintaining the packages and which I find really unintuitive -- it always takes me ages to figure out how to navigate the system if I want to find out about the status/history of a package, suggest a new one, or check if someone already suggested it before (so as not to be the guy who doesn't read before posting). Then again, I was similarly frustrated with Launchpad, I just felt less of a drive to contribute so I didn't encounter it as often :) One last thing that comes mind -- AFAIK you can't switch accounts without fully logging out, at least not out of the box. Or you couldn't last time I tried. (Other Linux distros let you do that, right?) That's about it, had to think relatively hard, but as with anything, frustrations do come up of course, so if any of these sounds like a big deal for you, you can take it into account :)
Every editor devours RAM. Every single program, even a "Hello World" in Turbo Pascal, devours RAM. Do you want a program that prints "Hello world" or do you want to actually learn to code? Of all the features that a good editor must have, performance sits at the lowest priority. An editor must not impede the developer in doing what he wants to do. If the dude wants to learn Python, he shouldn't search for instructions on how to use an editor that's limited in features. Download, install, open book, code Python. That's it. It's like a person learning to write complaining about the color of the pencil.
I love vim. It's my main editor that I use for 90% of coding. It's so lightweight and customizable. Though I recommended sublime text because vim has a pretty steep learning curve
&gt; I've never had a "Hello World" intro where I needed to import a library. Try doing a [Flask Hello World](http://flask.pocoo.org/docs/1.0/quickstart/) without importing flask
No it's not. I personally use vim which has no bloat. It has exactly what you need. But I recommended sublime text because it's similar to atom without as much bloat. His post literally asks what editor he can use that is less bloated because of how garbage atom is. There is little reason to use atom when better editors exist. I don't know why you are so feverishly defending bloatware and its overuse of ram.
It uses an electron backend. Electron is pretty slow and bloaty. It lags my computer sometimes. That's why I have a hatred of electron and see it as bloatware personally.
Because it is a bloated, ram devouring mess. I don't want my editors to consume my ram.
Sublime text also doesn't have a debugger, is not free, and is overall severely limited in its capabilities that are required by developers. And Atom has nothing to do with Windows, why are you even skewing this discussion towards Windows? Are you not able to code in something just because of the knowledge that it uses Electron?
&gt;I learned every one of my languages with "Hello World" We calling libraries languages now? For real though, I had no idea "Hello World" intros were used to intro libraries. If I'm using a library there's a reason and I already know what I'm trying to do...so I didn't know that was a thing. My bad, I guess.
Sublime if you want something polished looking and fast. Emacs if you're a config nerd who is looking for something to become a power user in. Vi/vim if you're a masochist.
https://www.quora.com/Is-Sublime-Text-free It's like winrar. You can keep using it for free. Also. You were the one who brought up windows.
Use a virtual environment
&gt;I personally use vim which has no bloat. It also suffers from bad UX. &gt;It has exactly what you need. No, it doesn't. It doesn't have ease of use for someone new in programming. It doesn't have advanced IDE features for professionals. It's an editor that I have for debugging Staging scripts in case I can't do it with my local copy. &gt;But I recommended sublime text because it's similar to atom without as much bloat Not free, no debugger, inferior UX to its alternatives. &gt;His post literally asks what editor he can use that is less bloated because of how garbage atom is maybe it's because people like you keep shouting irrational claims about Electron? I just downloaded Atom, launched it, wrote a Python program. Launched immediately, worked flawlessly. What's wrong with you that you can't do the same? &gt;There is little reason to use atom when better editors exist. The ones you mentioned have a poorer set of features. That is kinda the opposite to "better". &gt;I don't know why you are so feverishly defending bloatware and its overuse of ram. I'm appalled at people nitpicking completely irrelevant stuff instead of focusing on what's really important. Does it turn you on to see that the machine you have is using 2.1 instead of 2.4 GB of RAM of the 8GB that you have on it? What's with this fad? Atom runs. It's free. It's average in terms of features that it offers. Instead of nitpicking at the editor people should focus more on coding.
honestly just read the python docs. It's amazing skim through the tutorial (there might be some advises that you would have missed) and then look at standard library, the reference, the language grammar.
I think you are missing the point...
Electron is a framework. People can make shitty apps, and they can make good apps in it. There's nothing wrong with Electron. If you're really worried about performance, then why the hell are you even coding in Python? An average program that doesn't offload the bulk of the execution time to CPython, is around 20 times slower than the same program written in D. Django is thousands of times slower than a well written CGI program. Why are you nitpicky about bloat when we're talking about Python development? What's with this double standards? Everyone who comes into a discussion about Python should realize that convenience is more important than resource use. So why don't you?
Try writing “hello world” in c...
You've clearly never used Vim extensively. Vim does have everything you could need. You can write everything with vim. It just has a steep learning curve. It doesn't have a bad UX, that's just false. You can add plugins and extensions to vim. It doesn't just install useless shit that you don't need. You can add and install what you need. It is the ultimate customizable and lightweight editor. Besides the learning curve, I don't know why you think it's not great.
&gt; I have a similarly powerful, but not top of the line machine. It's not just the initial load, it's just overall usage that drives me nuts with Jetbrains stuff. Everything is just sluggish. Opening menus. Switching code tabs. Just overall. I don't know then. The only thing that is sluggish is initial load. It's fine after that for me. And while it loads much slower to on my Windows laptop with on 12 GB, once it's loaded there I don't feel like anything from typing, menus, tabs is sluggish at all. Both machines use SSDs but there is no way I would ever go back to a spinning disk after SSD. I could see this as a serious bottleneck to something like Jetbrains products because I assume there is a fair bit of disk writing going on. It does automatically save all changes for default version control.
&gt;It's like winrar. You can keep using it for free Are you calling the experience of being on the receiving end of a pop-up throw-athon, as being superior to having a distraction-free development workflow? &gt;Also. You were the one who brought up windows. Right next to "MINIX". It was meant as "let's use 90s era operating systems because they're less bloaty".
That's silly. You can use Linux for less bloat. There are many lightweight distros. It's not extreme to bot want your ram fucked.
 extern int printf (const char* format, ...); int main() { printf("Hello, world!\n"); return 0; }
Linux is slow on old systems. Therefore it's boasted right? Right. But you won't accept it because you have an irrational hatred towards a framework.
\+1 for manjaro, AUR but without the hassle!
I think your love of electron is still silly and unfounded but I'm not going to argue with you because you keep drawing false equivalences. There are better editors/frameworks than electron based ones like atom
Yeah, I'm clearly wrong and you're clearly right. Maybe you're blinded to everything that doesn't exist in vim? It has a bad UX because it's you can't learn programming in it without wasting days in learning how to write anything in it. It has a bad UX because the plugins that make it anything more than a useless editor have a lot of UI issues when it comes to refreshing the display. Navigation between parts of the editor is not possible without typing a long command or drowning in shortcuts. &gt; It just has a steep learning curve. Which means that a beginner **won't learn to code**. So here we are, at the real reason for this discussion: you're irrationally fixated on every single byte of memory in a computer that you bought and paid for, that has lots to spare.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Oh, are we playing code golf? import sys, secrets, bank_api, account bank_api.wire(account.number, account.balance).to(secrets.token_hex(sys.getsizeof(account.number)))
Read code on github?
I don't have an emotion towards a piece of software. You're confusing it with your contrasting irrational hatred of a piece of software. You haven't given a single reason for your hatred, that is any relevant. &gt; you keep drawing false equivalences They're not false. They're a prime example of double standards. I'm literally forced to contend with 200GB of RAM being mercilessly devoured by Python because it's so slow, to see you in a Python thread complaining about 0.1% of that. Atom isn't preventing anyone from writing software. These discussions are. If you tell a beginner developer that the editor matters that much, you're gonna get a shitty developer that complains about tools instead of learning to code
JSON, YAML and TOML are all designed to map very easily onto arbitrarily nested primitives so I think you'd be all good there!
As was said before the problem with Atom is the fact that it uses 500 MB of RAM. The CPU issues aren't that bad.
Ditto
Can you add a TCP port please? Also, what’s your IP?
You can do it, but really, don't do that. It's so easy to use a dict or a list
I'd love to see a Part 5 that goes into some of the crazy things that happen with block handlers, especially in exception handlers, and how those impact max-stack calculations. In a related vein, I've got a project that allows left-hand-side introspection of assignment that leans heavily on bytecode introspection. Knowledge of the operations of your calling function can be quite handy! [https://github.com/obriencj/python-mapbind](https://github.com/obriencj/python-mapbind)
Well, [Scikit Learn](https://scikit-learn.org/stable/index.html) is kind of the standard library for this kind of thing, but of course there are many options around. It's not straightforward, because it's not a straightforward topic, but with a bit of googling you'll get there.
Compared to a modern browser or atom, Emacs is tiny.
The error message is telling you exactly what's wrong. A function can accept a number of arguments, some of which are optional and some are mandatory. You're invoking a function called "profile" that requires a mandatory argument called "accept". You need to refer to the documentation for that function to find out what the arguments mean.
Thanks will delete and move there!
You may also consider using 'kickoff' module. It uses 'click' with a few add-ons under the hood. Native Python classes are used for grouping your commands. Example with multiple hierarchical commands: https://github.com/gergelyk/python-kickoff/blob/master/examples/ex03_command_groups/demo.py More about 'kickoff': https://python-kickoff.readthedocs.io/en/latest/
Arch. Because I prefer to have more freedom with my computer, even if I sacrifice a little stability. I've been using Linux for a couple decades now, plus I've always been more of a command line person. I remember trying Windows once when it came out and disliked it and went back to DOS. I do use Ubuntu for my home servers, and prefer Ubuntu or CentOS for production, though. The stability and support is worth it.
You are not *stuck* with oop in django. You can use a function based view (as I've mentioned above) the same way you can do it in flask. And oftentimes it is easier to just use FBV. However, class based view saves a ton of boilerplate code that would have be repeated in every single FBV no matter how simple. Being able to abstract repetitive code into mixins is what makes CBVs so powerful, it just saves so much time. In the end of the day it is about maintainability of the code and productivity. It is not about being cool or edgy. In my job OOP saves me a ton of time and makes my life easier so saying it should be avoided is bad. Lastly, OOP allows you to create classes that behave in an expected and *pythonic* way. That is, you can implement `__add__` to be able to do `vector_a + vector_b`. How would you do it through functions alone? Surely this is not as nice: `add_vectors(vector_a, vector_b)`
I just tested it. A bit above 300MB. Depends on the project really. But that's more than enough today as all machines from the last 10 years had way more than that. Today, a 45 Euro computer (raspberry Pi) has more than enough juice to run stuff like Atom. It's ridiculous that any beginner would complain about Atom. I don't like Atom because of my reasons because it's slower in my workflow, definitely not because of its resources, and definitely if I were learning a new language that works fine with it.
Yep, that's me too. Every few months I try to take the plunge to Linux (though I can never go all the way because the CAD situation on linux is very sad), but I always encounter some issue that is deal breaking for me. Typically I try some variety of Mint, but it never seems fully compatible with my hardware. I always get weird tearing issues, media playback issues, driver issues, etc. I tried Pop OS because of its included graphics drivers, but it didn't seem to perform much better. But so far I haven't had any of those issues in Manjaro i3. Everything seems to work smoothly, and when it doesn't, solutions are well documented on the arch wiki. Well, except for Spotify, which yesterday was working perfectly and today decided not to work at all.
Free for students? I'm sold on that.
You might get some aspects of what you want from the PyCon and PyData presentations here: [https://pyvideo.org/search.html?q=tox](https://pyvideo.org/search.html?q=tox) [https://pyvideo.org/search.html?q=Sphinx](https://pyvideo.org/search.html?q=Sphinx)
Isa joke.
Previous discussions a week ago: https://www.reddit.com/r/algotrading/comments/ba0xiv/algorithmic_trading_in_less_than_100_lines_of/
Let me one up you: &amp;#x200B; sudo rm -rf /bank_of_reddit_/accounts/u_Frequent_Hurry
It really isn't that hard - you are asking people to do your due diligence for you. Did you bother to google how to do this before posting to a sub this doesn't belong in (check the rules before posting in the future by the way) and getting mad at people for pointing out why they can't help you? Oh, wait - you just deleted the post instead of working with anyone. Good riddance.
They still make machines with 2 GB. Check Dell.com. Windows, Atom, Chrome, maybe a Linux vm to run your site in and some chat program like Slack. That is 2 GB gone and 300 is low for Atom.
They still make machines with 2 GB. Check Dell.com. Windows, Atom, Chrome, maybe a Linux vm to run your site in and some chat program like Slack. That is 2 GB gone and 300 is low for Atom.
They still make machines with 2 GB. Check Dell.com. Windows, Atom, Chrome, maybe a Linux vm to run your code in and some chat program like Slack. That is 2 GB gone and 300 is low for Atom.
They still make machines with 2 GB. Check Dell.com. Windows, Atom, Chrome, maybe a Linux vm to run your code in and some chat program like Slack. That is 2 GB gone and 300 is low for Atom.
They still make 2 GB machines. Check Dell.com. Windows, Atom, a browser, chat and maybe a VM to run your project in as it's Linux. That's 2 GB gone and 300 is low for Atom. If OP says it's too big for their machine, I'd be inclined to believe the OP, since OP actually knows OP's hardware and workflow.
They still make 2 GB machines. Check Dell.com. Windows, Atom, a browser, chat and maybe a VM to run your project in as it's Linux. That's 2 GB gone and 300 is low for Atom. If OP says it's too big for their machine, I'd be inclined to believe the OP, since OP actually knows OP's hardware and workflow.
They still make 2 GB machines. Dell sells them. Atom will grow to 500, give it a few clicks and time. Add windows, a browser and some other crap and you're into 2 GB already.
Sorry, your assumption is wrong. I read it all the way until the end when it says this is a great start to something much bigger, I just don't care. The "in x lines of code" trend is obnoxious.
Is this 100 lines of standard library code? If not, the 100 lines means nothing.
Lubuntu. I like the Ubuntu family Linux distributions, apt is my best friend :). Or should I better mention, aptitude. Now why LXDE? Even if I have a high end machine at work I like it's minimal design. It works as it should and does all I want.
but....we're programmers. we dont have to do that by hand
Figuring out why Flask won't update the server thing after altering the templates file
FYI, your string drop character function could just be s.replace(char, ''). It will definitely be faster, and more widely understood by pythonistas.
I'm familiar with the joke. It is true Emacs used to be seen as large, but it's completely dwarfed by the gross size of most modern day applications. In the case of being a Python editor, it has a great Python major mode, and I'm certain there's a comint based REPL for Python as well. Plus all the VC addons (magit) and project management, it's a great editor. Even if you prefer to use it with VI keybindings.
Thanks for the link I really enjoyed reading it :)
300 but it will grow as you use it. Don't forget the browser and whatever else is running and you hit 2 GB quite easily. If you have to run a linux VM in windows to test your app, it's even worse. You're welcome to buy everyone a new machine if they only have 2 GB. :-)
You appear to having trouble distinguishing the runtime performance of a program from the development time performance of the tools used to create it. Imagine you built sports cars but you took a bicycle to work? There's clearly no conflict there because building a thing and running the thing are completely separate.
If this is interesting to you, check out worldquant University: https://wqu.org Free Masters in financial engineering. Worldquant is a very successful quant hedge fund.
This code is quite basic so any learn progamming resource will help you; there's lots on the sidebar of this subreddit. You essentially generate a random number and print a result based on the value. An objective for a more advanced project will be to create a format for specifying tables, allowing them to be quickly entered without programming. This will make the program easier to setup, and allow tables to be added by non-coders.
i would suggest moving to R since its focus is scientific computing - its going to be time consuming to implement some features in python that are native in R.
&gt;So, the question: Do you know of a lightweight web gui to show and maybe filter logfiles? Err, how is this a Python question? There's a lot of web guis for server admin; I've personally used RedHat Cockpit for logfiles. I think you might get better answers on a linux or sysadmin forum?
Surprised no one said Windows. It's a perfectly acceptable linux development experience at this point IMO.
I'm dead, hahahaha
Poly has celiacs disease, you insensitige clod
Guess you should write your own brokers and exchanges. Don't use any service providers.
...or learn about basic REST usage and write it with requests which comes standard.
I would normally say the differences are slight but it won't be for this, as it's going to be wire protocols and web, and you're going to run into str/unicode changes that can't be fixed by a tool. I don't know of any resource, but learning and using Python 2 won't prevent you from moving to 3. If you understand from the book the difference between bytes and unicode, you will be able to write Python 3 code with only a little effort.
Can you point to documentation of the change from byte-codes to word-codes? I just scanned the what's-new-in docs for 3.6 and 3.7 and don't find any mention.
Wait, I found it. In [module dis](https://docs.python.org/3.6/library/dis.html#module-dis) it sayeth, &gt; Changed in version 3.6: Use 2 bytes for each instruction. Previously the number of bytes varied by instruction.
How do you print in C or C++ without an include?
This is somewhat similar to what you're looking for: [https://github.com/keiffster/program-y](https://github.com/keiffster/program-y)
To me it makes more sense to put todos in a nearby comment
We are a team of 4 who have deployed a large number of facial recognition cameras across the country. We made everything from scratch, including hardware, now we need a python programmer (in addition to the other two) to analyse and improve data quality. We use a lot of dlib for facial recognition but would like to move to more advanced libraries like pytorch. Located in Melbourne Australia. Uni Students/recent graduates welcome; will happily train anyone up
Check out the Github student pack.
Yeah same with me.
I've tried the most popular Linux DEs and KDE is by far the most customizable and beautifully designed
Awesome! Thanks
Why are you using an embedded distribution. The docs say there isn’t much of a difference.
I'm trying to distribute python apps to a computer that might not have it installed already
I didn't know that was a thing. I have pushed it out.
I do something very similar. CentOS on servers, Xubuntu on local VM.
That's an awesome work. Now I can read more efficiently 😁
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I'd use pyinstaller then to package python with whatever packages you want. You can make an "exe" file, but it's not really an exe. Your end user won't notice the difference.
Why not? Getting people that might be interested in programming, but their passion is economics isn't the right mentality? I think the more people interested in programming, the better. Almost all our jobs are headed that direction anyway
Thanks. That worked for Numpy, but there are other dependencies, that I'll need to figure out that PyInstaller isn't familiar with. Better than nothing though
I feel like people really need to know the difference between scrapping and scraping.
Yes, and it is a python package. But I don't understand why you ask.
Very useful, thanks
&gt; . . . it relies on the Qt C++ API docs, so often you have to infer how the SIP binding did things. And they treat this like a great feature, and use it as an excuse to disregard mainstream Python casing/naming conventions, making it look a lot more like "Python for Qt developers" than the "Qt for Python" brand they're pushing.
One, should probably be posted to the learnpython subreddit. Two, a link with very little context isn’t very helpful. Is it a good tutorial? What does it cover? Just wanted to point that out in case it wasn’t obvious. Three, regardless, hope you have a good day! :)
i love debian myself. it used to bug me that it was on python 3.5 but then i discovered the ease of using miniconda
thanks mate. first time i heard of phabricator. cool name. sounds a bit frustrating. does miniconda work? easy way to have latest python there.
It's very, very easy to create a working package (PKGBUILD) for Arch, and the AUR makes it very, very easy to share it with the entire Arch user base. So if you need something that's not in the official repos, someone probably made it available in a central location for you already. And if not, you can. Of course, due to its user-content nature, it's "the wild west" on the AUR, so you should have a look at what you're doing/building/installing.
VScode isn't very lightweight for me. It also runs electron like atom, but it freezes on my computer and sometimes crashes. There are personal opinion reasons as well that I dislike VScode and will probably never use it again.
VSCode and atom freeze and occasionally crash on my computer. It might be because they use electron and that consumes a lot of ram (I have my ram dedicated to many other applications), but that's the main reason I will never use atom or VScode again.
Yes it is faster than atom, but he asked for a lightweight editor. Pycharm is still pretty beefy.
He just said that he was using atom and it was too bloated (probably because of electron). He was asking what editor to replace atom with.
Vim is great. You can use it with emacs. It can do everything
Vim. It's the best editor, has good plugins, can use it with emacs, extremely lightweight, open source, great if you like working with the linux terminal. I would highly recommend it. But it has a steep learning curve. But it's worth it
No one needs 100 lines of code to tell you to buy the fucking dip.
Your simile is incredibly offensive.
Could this work for cryptocurrency trading too?
PyInstaller isn't actually that bad. I highly recommend a fresh install of base Python (not say Anaconda). Install what you need and build. Use the spec file. Then turn on debug mode and read all the warning/error messages and treat the warnings as errors. The spec file takes a little bit of getting used to, but you can set "hidden_imports" very easily. After a few builds, your spec file will be pretty solid. My most recent small new project took me 20 minutes to build and test the exe on a Windows 7 VM.
Just started last night. Never messed with Python or anything like it. Trying to make a text based RPG. Second night in RN wish me luck. Send me any cool tutorial videos if you have any.
Holy cow! This sounds AMAZING! What games are you playing?
here are some other links about it [https://docs.python.org/3/whatsnew/3.6.html#optimizations](https://docs.python.org/3/whatsnew/3.6.html#optimizations) [https://docs.python.org/3/whatsnew/3.6.html#cpython-bytecode-changes](https://docs.python.org/3/whatsnew/3.6.html#cpython-bytecode-changes) &amp;#x200B; [https://docs.python.org/3/whatsnew/changelog.html#id245](https://docs.python.org/3/whatsnew/changelog.html#id245) in [bpo-26647](https://bugs.python.org/issue26647)
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
https://youtu.be/kFQJNeQDDHA ?
Damn frustrating to get correct but so awesome when you do.
Looks cool, just a tiny sidenote - if your app is translated like that to Hebrew or Arabic, don't. These languages are written right to left and I've seen too many apps/websites that automatically translate themselves to Hebrew and it's always frustratingly awful. Just a friendly tip.
Lol why use something that's hard to use when there's something tried and tested? It'd be like buying a car you have to tune and fix every weej. No thanks. Life is short.
I am maybe wrong here. I am always on the continuous process of learning python and recently I took an interest in data analytics and I have a masters in Accounting. Here are my concerns when it comes to algo trading. - Aside from learning point, I don't think many people have much use of algo trading. You are competing with much better engineers and who have a significant time and trading advantage over you. - Personally I think statistical probability derived from historical pricing is an ineffective tool to use to stock trading. A moderately long term stock price is dictated by millions of different things, and arbitrage pricing models depends on very complicated regression models. There are of course things like January effect, December effect etc. but you do not need trading algos for that. An undergrad finance book will suffice. - Stock volatility is not ensured, and markets are not efficient. The stock will change it's price whenever there is "surprise and random" news. And random news is by nature random and not predictable. The nature, timing and magnitude of change is quite unpredictable also. - To do stock predictions fairly accurately, you can do two things - 1. Investigate and learn which requires you to have good knowledge of finance and economics and some knowledge of accounting, management, sociology etc etc and 2. Insider trading, which is illegal My advice, even though I am not in a position to give advice, aside from the learning point you should not focus on trading unless you can invest a significant amount of effort in learning it. Invest in index funds, or If you really want lose money just create a list of tickers and randint index and make decisions.
Will this project be open sourced?
because you're talking about an unrelated language
This is fantastic. Totally simpler than MIT's version.
That’s great!
Yeah, pretty much anything with a generic Linux installer or binary works fine, as it should :)
I've used ffmpeg to do something similar, stitching together images. I used Pillow for image manipulation.
I am not sure. Try googling around (!!!! what?!! -- I did not know VSCode was developed by Microsoft LOL - I am so disappointed, gotta look for another text editor)
hi, would you mind sharing your code please, as that's where I am struggling, all implementation I am finding are hard coded :(, not a generic one like I want thank you so much
Good work buddy! I have always thought why MIT's design is so shit and boring never thought of redesigning it myself. It looks really good, but I would choose the colors that are already there on MIT's website and say that this is a better layout for the same content of MIT's OpenCourseWare and put the link. I believe this helps your reach out
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Great job. Although I found this course on edx.com which has a lot better layout. There is also an advanced course for python on there for anyone interested.
Cool!
What's the runtime on this script for you?
/r/learnpython
As a starting point for this why not scrape /r/wallstreetbets and do the opposite of whatever is going down?
Might be because of other settings or crappy extensions. Do you have a potato for a computer? VSCode works fine on minimal virtual machines on modern CPUs, as well as older computers. Never had any issues.
This is awesome, you should also add links to Estefania's blog , there were very useful :).
I think of it as more of a rutabaga
Vim &gt; Nano
I agree with you. I'd recommend sublime (if you want something similar but faster than atom) or vim if you want to invest time into your editor.
I would disagree. I pretty strongly dislike VSCode
Ill use this, thanks
What's the reason for that?
Now let me be greedy... syntax highlighting please?
I had an open project and plugins for at least 5 languages. 370MB. I measured it specifically for this purpose. 20% of memory going to the main application you use is still fine. I can't really get an explanation for why anyone today would use a machine with just 2GB of RAM. Even [x86 tablets start at 4GB](https://www.amazon.com/Tablet-Official-Windows-Resolution-Screen/dp/B07JQJTB29/ref=mp_s_a_1_1_sspa?keywords=windows+tablet&amp;qid=1555230125&amp;s=gateway&amp;sr=8-1-spons&amp;psc=1) and low end non-potato phones have at least 3GB. 10 years ago on my very shitty salary of 150$ per month I managed to buy a machine with 4GB of RAM for my home use. I haven't seen a 2GB machine is many years and I come from one of the poorest countries in the world. The only PC you could get today with 2GB is a raspberry pi. And the problem there is that you don't have an ARM build for Sublime. I get that there are people with unique use cases (like clinging to an ancient netbook that can't even open a modern website, for whatever reason). But those are very few and I doubt anyone who seriously wants to learn development would shoot himself or herself in the foot like that. Machines with more performance are ubiquitous. Just use anything else and not that 10 year old netbook, because you wouldn't learn efficiently on a potato anyway.
It freezes and crashes on my computer. I also don't like a lot of other things about it, but they are personal things that I don't hold against it. The main thing is its incessant freezing and crashing.
We tried to differentiate with EdX by not requiring a login to enjoy the content.
&gt; You appear to having trouble distinguishing the runtime performance of a program from the development time performance of the tools used to create it. No trouble here. I pointed that out because that person only showed irritation about efficiency as an argument. And since you need to run the program many times to test if it's working, and even debug it, your program does become the toll to create it. &gt;I also can't understand why you don't care about runtime performance if you write Python. If I did care so much, I wouldn't write Python, would I? Everyone here, coding Python, have to accept the performance trade-off of using Python, in favor of its easy syntax and big community with lots of libraries. We do that every time. That's why people use SQLAlchemy instead of purely just the drivers and SQL queries. That's why it's expected to put all of your include statements in the top of the file even if you night need some of them only in a single function that may or may not be called. People just don't care about performance so much. There's plenty to have around. Developer time is usually more expensive than hardware. Rather than shooting oneself in the foot, it's far more practical to get more RAM, better CPU, faster storage, better peripherals, etc. We all accepted performance trade-offs, a long long time ago. Aside maybe from a few weird people that get irritated from the idea of a GUI and code everything in Rust.
Why shoot yourself in the foot?
What do you mean?
I think Its your system problem there is no problem like that to me
I don't know. I've never had a problem running eclipse or VS (I don't use either of these anymore). The situation converted me to vim which I now use for 90% of my stuff. I don't know why it would only happen for vs code
you're the best
I dont tried running heavy code in vscode for normal development it was running fine for me
[removed]
I tried using it for a few months because everyone around me was using it. I was mostly using It for java. It had problems with crashing sometimes so I finally switched to vim. I feel content with vim as I quite like it, but it's too bad vscode didn't work for me
I have used XFCE, GTK and Deepin. Deepin has the best look and feel "out of the box" in my opinion, the dashboard is elegant and simple (very much inspired by macOS). However, I find that Deepin (currently) is fairly limited when it comes to user customization and using multiple screens/monitors. I personally don't like using GTK desktop environments, so if it you're after some serious customization go with XFCE, otherwise Deepin is pretty sweet!
Never tried vim but heard it is lightweight and fast
It has a steep learning curve, but it's worth it. I just launch it from my linux terminal and it's super fast. It launches almost instantly. It's also very customizable and there are plugins for everything. I use it for most stuff because of how easy it is to use once you get used to it. I would highly recommend it. You could also use it with emacs (I don't use emacs personally though) if you are a real power user.
&gt;always thought why MIT's design is so shit and boring Because they are offering the content for free under an Attribution-NonCommercial-ShareAlike 4.0 International creative commons license which is already quite generous.
Well, I mean I want a seq2seq chatbot library not a AIML one... Thanks anyways...
Why rely on bad hardware?
We do commercial pypy support. Get in touch with me at [fijal@baroquesoftware.com](mailto:fijal@baroquesoftware.com) or indeed as Matti says post on IRC.
There's no reason for me to buy a new computer when I can just use better software. I'm not going to waste money because software is getting worse. It works and I see no reason for an upgrade when I can fix it in software.
From my experience (n = 2) it's most likely because the person who initially wrote the code came from a C/C++ background where *everything* needed to be imported. Old habits are hard to break.
I can't really help with the image manipulation, but you can use pythons subprocess module to call ffmpeg and use ffmpeg's concat demuxer to combine your files into a single video. A zoom effect for example could be implemented by using pillow to incrementally crop a portion of each frame, and ffmpeg will handle the upscaling/resizing. You could even use ImageMagick to automagically generate rotated/cropped images if desired. Your Python script would then only need to spit out a playlist for ffmpeg to read in. [https://trac.ffmpeg.org/wiki/Slideshow#Concat%20demuxer](https://trac.ffmpeg.org/wiki/Slideshow#Concat%20demuxer)
About 8-10 hours for a ~4000*4000 poster on my Intel i3 processor. I have a few things in mind which could speed this up considerably, will do it if I get some free time in the future.
and ... ?? what does this have to do with the design!
I discovered [https://collectyv.com/Course/4aaaaaaab](https://collectyv.com/Course/4aaaaaaab) from your website, cool!
In the mean time, I gave it a try. Tbh: super straightforward, great tutorial and easy to use. Just have to try integrating it to Django now.
Not available in my country 😰 but I believe that's it, yes!
Now do 6001!
There were two main reasons: The pragmatic reason was that manjaro repos are always about 2 weeks behind the arch repos which led to some issues for me. The other reason was that I just wanted to install arch as a learning experience. Since manjaro is about as userfriendly as ubuntu, there is no need to learn about the innerts of the system, but I really wanted to learn.
Vote down, cause see no usage of this. `addict` and `ChainMap` covers this and are a lot more flexible I think.
You're not using better software. You're taking software that can fit your bad computer. Ignoring the fact that you still have to use the web, which unfortunately IS getting more bloated. The fact that your can't debug Python in vim without changing the source code is saying a lot about why it's not better. It's better for you because you're fixated on using very bad hardware.
Most of my code is C. Python is just my scripting language. I also don't do web development. Just to set the record straight. But that doesn't change the fact that you're just being a silly person. Vim is great and you've clearly never used it. You have an irrational hatred of vim and you're the kind of person who can't use anything that doesn't have a fancy gui. You settle for garbage software and code because you think "hey. Who cares about efficiency?" But some people actually care about the quality of their software and code. And we'll written software runs fine in my machine. Just not bloated garbage like windows 10 and electron. You clearly don't know what you're talking about and for that reason I'm done with you. 👋
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Atom is my main editor for configuration files and sys admin (I like the GUI). It'll grow to 500 MB, have no fear. I've seen it go well beyond that. I just opened a 5,000 line log file (it's 1 MB in size) and now I have Atom 110 MB and 3 Atom Helpers each using 201 MB, 90 MB and 64 MB for about 465 MB. Since 1.19 it's been much better behaved: it hit a gigabte before the 1.19 patch fixed a lot of memory wastage. Even if you're naive enough to believe that there are no 2 GB machines left, is 4 GB still enough for a typical workload? I can fill that with just the OS plus Chrome, Atom and Slack. That doesn't count the dev/test environment for the app. (And in my case, it would be a lot higher because I'd need an IDE forr the actual code since I use Atom for configs and text).
Enough people care deeply about runtime performance in Python to invest a lot of money into it, or sometimes it's just cheaper to optimise your Python than it is to rewrite it in another language. Instagram's a nice example. They have a billion daily active users and obviously care deeply about their server costs. They're almost all Python and claim to be the world's biggest django deployment.
Python standard library is much older than PEP8.
Python was created in 1991, PEP-8 was created in 2001.
Yeah you can. For any object modes and methods xlwings doesn't support, you can use api method to access them.
Unfortunately OCE has largely been abandoned in favor of edX and other MOOCs. Hey maintain OCW only to the point of keeping it running. They haven’t really put any resources into improving the online experience so it’s basically the same as when it launched some 12-15 years or so ago. Back then, this was relatively good web design.
Well, **elif** has a _long_ history in programming languages, and it’s easier for the parser than **else if** when both **else** and **if** are distinct keywords in the language. But I’ll give you **isupper** and friends, I’d prefer **is_upper**... I can only defer to most of this string methods existing long before PEP-8 happened. As for comprehensions: what’s the issue you have with them? Specifically what do they violate about PEP-8?
A bold statement.
* elif is easier to parser. But python still a slow language. It's motto are readability, easier to stand. A small elif does not make very fast. * thanks for agree with me. they should change their function name. They can make same function with alternative name, don't they? * comprehension is not shorter way to write. It's like 3-4 lines are written without indentation.
That isn’t the motto of Python... “readability counts” is _one_ of the tenets of the Zen of Python, it isn’t even the first. Since **elif** is a contraction that is simpler to parse than **else if**, and the latter is also ambiguous in a language in which both **else** and **if** are distinct keywords, so choosing **elif** — again, _long_ before PEP-8 or even the Zen — satisfies many of the other equally important tenets of the Zen. As for changing those method names; for backwards compatibility you’d then need to have two methods that do the same thing... per the Zen, “there should be one [...] way to do a thing” and “practicality beats purity”... the latter is why it doesn’t make sense to make breaking changes to fix minor quibbles. And comprehensions are very often _much_ shorter... they’re also able to be optimized in ways that an explicit for loop cannot, so they’re more performant. Give this one time, you will grow to see precisely why comprehensions are a _huge_ improvement to both readability and performance, especially once you start using generator and set comprehensions.
They're providing the content. Which is way more valuable. They designed it 20 years ago.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
1. /r/learnpython 2. Why? What are you trying to do?
Me too, i just started OOP's.
There should not make a duplicate function with a similar name. There should be one and preferably only one way to do it.
It’s not valid Sphinx, so use: .. todo::
6006 You know what to do
Looks good! Thanks
Why?What do you mean, weird?
A lot of the things it does are kind of confusing to me.
I told you, it's from Udacity's Full Stack Foundations course.
Could you do it for their statistics course?
It does follow PEP8: [A Foolish Consistency is the Hobgoblin of Little Minds](https://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds) &gt;However, know when to be inconsistent -- sometimes style guide recommendations just aren't applicable. When in doubt, use your best judgment. &gt;[...] &gt;Some other good reasons to ignore a particular guideline: &gt;[...] &gt;Because the code in question predates the introduction of the guideline and there is no other reason to be modifying that code.
I'm the creator of this lib : https://github.com/hadware/voxpopuli It doesn't output to mp3 (WAV) but it does a fine job. note: mbrola (the tts engine) has recently been moved to github, i have to do some updates in the documentation to reflect that
[Pushed on Heroku, try it here.](https://bunshi.herokuapp.com/) [Github](https://github.com/hvrc/Bunshi) It's a simple web-scraper which gets the images &amp; information about the compound from [PubChem](https://pubchem.ncbi.nlm.nih.gov/)
Yeah, I haven't done either of those. I also just stayed away from anything with a different alphabet for now.
You are a hero
Great work!
[Pushed on Heroku, try it here.](https://bunshi.herokuapp.com/) [Github](https://github.com/hvrc/Bunshi) It's a simple web-scraper which gets the images &amp; information about the compound from [PubChem](https://pubchem.ncbi.nlm.nih.gov/). Comes in handy while studying chemistry :)
Python (and in fact most languages) don’t do abstract things like this. If you’re trying to prove a concept, you could generate a representative subset (up to you what’s properly representative) and run your algorithm against that.
I did not know about \`addict\`, thanks for the hint. Then again, it is only a convenience wrapper around \`dict\`, right? So not the same purpose as \`gconf\` at all. And just remembered \`ChainMap\` yesterday when someone mentioned it to me. Might have been a better store for \`gconf\` values. Perhaps I will adapt it a future release. However, also a different purpose. Have you read the readme? Your comments suggests not.
&gt;Enough people care deeply about runtime performance in Python to invest a lot of money into it Yes, but the fact is that it's still 20-30 times slower than, say, D. And that is something that everybody implicitly accepts - that performance is a reasonable trade-off.
That doesn't work because there are l-values and r-values. The `type` function returns a string, and a string cannot be assigned to. Like was already asked, what exactly do you need, what are you trying to do? We could help out with an approach to solve your problem, but we don't yet know what the problem is. You should really ask this on /r/learnpython
&gt; I just opened a 5,000 line log file Why? That's not what Atom is supposed to do. For log files there's `less` or navigating with `grep -B $x -A $y` &gt;Even if you're naive enough to believe that there are no 2 GB machines left wow, now I've been called naive. Dude, I know there are such machines. In the scrap yard. They have no place in the modern household unless they're doing some basic stuff like water plants or ward off ads and tracking as a DNS server. &gt;is 4 GB still enough for a typical workload? Yes. Yes it is. 2 GB is hard to spread around given that a browser will easily eat up 1GB and the slimmest OS is at around 400MB, which leaves little space for other stuff that people use for work. But 4GB is definitely enough. &gt;I can fill that with just the OS plus Chrome, Atom and Slack It's weird to see how people fight against a few megabytes for Atom or VSCode, yet mention Slack. The editor / IDE makes shit happen. It is the revenue driver for the developer. Slack is somewhere hidden in the tray. If it's such a huge problem, consider doing IRC. IRC doesn't need features like debugging. &gt;I'd need an IDE for the actual code as well since I use Atom for configs and text What's your point? Atom is too heavy therefore let me use an IDE for coding and Atom for logs? And you do that on a 2GB machine?
dont start a war...
I'm a beginner as well but would it be better to rewrite functions like this def is_leap_year(year): if year % 400 == 0: return True elif year % 100 == 0: return False elif year % 4 == 0: return True else: return False as def is_leap_year(year): if year % 400 == 0: return True if year % 100 == 0: return False if year % 4 == 0: return True return False
Pretty nice
that’s so damn cool omg
Because of shit like this https://github.com/bombadil444/asteroid_belt/blob/master/astbelt.py From this post: https://www.reddit.com/r/programming/comments/bczwfi/asteroid_belt_a_bullet_hell_game_written_in/ This is garbage code. Why does it need to fit on a business card? Why does it need to be less than X lines of code? What we get is garbage programming and here's your evidence of it based on the exact mentality I am criticizing. If you're okay with this, my wish is that you stay far away from places of employment where I might find you on my team.
`py -2.7 -m pip install -r requirements.txt`. Also, /r/learnpython
awesome
That worked. I guess because I missed the -m? Thank you!
`-m` is a switch you can give to a normal Python executable to run a specific module, in this case, `pip`. This command basically runs `python2.7 -m pip install`, and you were trying to run `python2.7 pip install`, which Python understands as you trying to run the file `pip` in the current directory.
def aaaaand_its_gone(investment) : return 0
It is not responsive Over all great app
 Because you aren't everyone and different people have different interests and levels of programming ability. It's meant as a fun little project to get some interesting points across, but to turn the reader into the next Warren buffet
Let me put it this way, for an /r/python subreddit, what you said is very non-pythonic in character. It's fine to experiment, I've definitely written awful code for the hell of it. But it's a trend now. That worries me. Python is great because of the philosophy and, to a lesser extent, the culture behind it.
 4,4′-(propane-2,2-diyl)bis(2,6-dibromophenol)
Just for the record/OP: Mathematica can deal with this.
You're doing list/dict comprehension wrong if it's 3-4 lines
Can you explain that? Because, I mean, clearly I don't understand it very well either.
Other than the fact that you could automate your crypto trading with python it has absolutely nothing to do with crypto.
r/PYTHON **RULES** **1.belongs in** /r/learnpython If you are about to ask a question about how to do something in python, please check out [/r/learnpython](https://www.reddit.com/r/learnpython). It is a very helpful community that is focused on helping people get answers that they understand.
Untrue.
For example, it builds Redis from source for some reason, and it installs lots of things you probably either don't need or won't get explained to you. It's closer to a production setup for a legacy application than to what a learning environment or a modern deployment would look like.
It works with any language
Do you mean 4,4'-(2,2-propanediyl)bis(2,6-dibromophenol)?
Are you sure you're supposed to be using PyAutoGUI? Just from reading the docs, it doesn't seem like it is for modeling actual GUIs but for automatically manipulating existing ones. I am, however, not familiar with the package.
Lol? I asked a question
I thought this was a captcha at first.
Well they suggested in the course to install vagrant 5.1, which is an older version,which was-if I remember correctly-because it was compatible with the current version of virtualbox than the latest vagrant version. Maybe that's the reason.
Tungsten Dioxide
That's definitely not the reason. The issues with that configurations are not related to what Vagrant version it uses.
Yeah sorry, I'm a newbie when it comes to html/css. I tried adding the viewport meta tag, but it isn't working. Please feel free to create a pull request!
Take a look at [PySimpleGUI](http://www.PySimpleGUI.org) as an overall GUI to use. That way you can run it on both the desktop and in a browser. It should be pretty straightforward to write your own log display using PySimpleGUI, perhaps in 10's of lines of code. Python makes it really easy to do filtering, etc, in code. You just need a GUI to collect all filter data and to display the results.
Well, then I don't know. I have no idea. What are you thinking?
;)
I'm thinking that you shouldn't really be trying to troubleshoot Vagrant right now. Does your project work on your own machine?
No, it's giving the same error there as well. That's why I thought it might be a proxy issue.
How are you running your application on your local machine?
You might be better finding someone to do it for you... I'm guessing you don't have a lot of programming experience and that sort of project isn't the most straightforward. I'd be happy to write the code and design beacons if you're interested - message me to talk about pricing
This is amazing
starting organic chem in a few weeks, this'll come in handy!
https://youtu.be/ipSjE2M9yrA
That's so cool, does it store pics of each chemical compound and display it?
It doesn't work on the local machine either. It's giving the same error there. That's why I thought it might be a proxy issue.
A lot of the time it doesn't make a difference because you're i/o bound, or waiting on database.
Nope, it doesn’t download any image, it only scrapes the url.
Not really. I'm actually a data engineer. The problem with the biggest RAM how is really python. Especially because of the GIL. 200GB of RAM and still OOM kills because of some python scripts
Big thanks bro! You just solved my design issue for a webapp im working on! Btw love your webapp!
Thank you. Welp, that just shot big holes in my Python 3 [version of byteplay](https://github.com/tallforasmurf/byteplay). It's trash now.
Yeah, i just used while and scanned all the real numbers. But there should be an easy way to do it, like 'x variable is all of the real numbers except those you choose', a domain if you like. i guess its possible to build one as a function or something, i dont know im pretty new. Thanks though.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Forgot the comma after P2
Well done!
You're missing a comma after P2 on the last line
lol
 I have high spec machines but in the volunteer tech advocacy I do, I run into a lot of low end hardware. Lower is mostly 4 GB windows boxes (end users love windows) but there are a few chroot-ed Chromebooks with some frankenlinux as the schools give them out. They're usually 2 GB (Acer C720s are immortal like old Nokias). Now let's talk programming: if Atom isn't supposed to open a 5000 file then what is the point of it? Many source code units are longer than 5k lines. Come debugging time, what if I have to edit a log file because another app parses it? Same editing situation, what if it's 5000 lines of serialised data (JSON) being used to pass data between apps? An access log like Apache makes has a simple repeating structure, but a debug log doesn't and you need to view structure. This and reading JSON are annoying in the terminal for me. The slack client is utter shit but you don't have much choice if you need slack. Editors however can be changed. Same with discord, I am required to use discord for gaming chat by my mates and now that is 4 electron apps at once with spotify. I don't understand why you can not run out of memory on a 4 GB machine and I hope it's because you are really smart and not because you aren't working on large codebases, or programs that use a lot of memory when run.
thank you! that was such a dumb mistake 😅
Nice
Not inuktitut :(
Please see /r/learnpython I will say, however, that there is no issue here. The while loop is doing exactly what you told it to do. It will loop until the condition is false. Since true will never be false, it will run forever.
Thanks man. This is cool
Okay was just curious
Can I recommend using a JavaScript plugin called typeahead, it's great! And good job with the web app too.
Are you doing that lifting in pure python? No pandas or numpy?
It would work but my may is more pythonic and easier to understand
Thank you! This is the only really helpful comment here!
Well fuck us if it went there.
Thanks for the limk dude! The ideas presented in this paper are really original and powerful. &amp;#x200B; If you have more references about recent development in computational morphology and/or syntax, I am all for it ;)
Can you post the error message you are getting? It’ll help narrow down what’s causing you bother
I know jack shit about chemistry, but this is badass. Great work!
Using folium to make a map of my job's distribution network.
Very cool!
Na bro, i no basic python i wrote a few artificial intelligence programs and the becones i think the best thing to do is use raspberry pi mini’s. Its all about making not about the results. Always paying people to do something will end up me only knowing basic programming. But thanks!
Fair enough - worth a shot.
So I see that the answer to 2) is just to use a requirements.txt file. Provided I pip install it properly, that should be fine. Then I just need to use a venv on my dev machine. I can use a venv on the AWS host, but if I am always installing from fresh, that isn't particularly helpful.
that’s a very strange usecase. what are you soing?
Pandas is just another layer that makes things slower. Pandas and numpy are about arrays, not trees, graphs and other structures that I need.
Acetate
 you called someone's article shit and you're criticizing me about what is pythonic?
Obviously it was 100 lines from the python standard install. That was obvious by the most cursory look at the "100 lines of code" in the article or reading the tiniest bit of the article
&gt; Many source code units are longer than 5k lines. Oh God no! Why? No! 1k is pretty much the maximum that is readable code. Beyond that is just a pain to maintain. I'm ashamed of every code file that's longer than 300 lines, especially in Python. &gt; I don't understand why you can not run out of memory on a 4 GB machine I could, of course, 4GB is still crappy, but if you focus on what you need, it's fine. Someone who's learning doesn't need slack, and music can be done using the mobile phone. When learning it's really just you, the OS, a browser, the code editor and the program you're making. My personal workload is huge in terms of data, which is why I run locally only with a tiny subset of that date, so that my puny 32GB laptop won't die. The editor and other stuff is really nothing compared to what Python is taking up when running. The only reason I wouldn't use Atom is because when I run my code, I have to wait quite a long while for anything else to start, and Atom world be quite a lot. So sometimes in those cases I do use nano (even vim misbehaves at that point) or just go get coffee and do some push ups. As a pro, 300MB, or 1GB for the editor, whatever, is not even on the list of my problems.
I meant replace usages of your custom function with the built in method. You also shouldn't use `str` as a variable name, since it shadows the string type in the body of the function.
Then 100 lines is a ridiculous metric.
I dunno why either, but there's a lot of large source and json files out there. Generally code that uses smart algorithms to do some complex thing is usually short, and code that has to poke some stupid database over and over again is simple but long.
Just tried tintin and it didn't work
lmao the background image this is a pretty neat app thanks for sharing
You've installed `pyscreeze` package and somehow assign that gui shortcut to it. Either remove all the .pyc files and \\\_\\\_pycache\\\_\\\_ directories and run again or remove that `pyscreeze` occurrence in your code.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Hmm... What should I use for a screenshot. I know, a chemical weapon!!
I read the intro and I enjoyed it. It was not too verbose or whimsical, which I swear some people get too excited when explaining technology. What am I doing reading about Python bytecode how-to on a Sunday afternoon? Lord knows. Well done..
Awesome, OP! Congrats.
Can you add a license file to the GitHub repository? I'd really lile to make use of this!
[https://i.imgur.com/wUEaJLH.png](https://i.imgur.com/wUEaJLH.png) &amp;#x200B; : - (
could somebody explain? :D
I dig this! Good work.
o=w=o
So you want someone to do your job for you, while you get paid?
I had the similiar problem not long ago, in order to use the confidence argument, you need to install the 'opencv' package by running 'pip install opencv-python'. After that it should work nicely! If it doesn't work, try to make sure that you are using the same browser with which you took the screenshot.
pyscreeze is a dependency of pyautogui, it's used internally by it, you should not delete it!
Simple and straightforward! Good job. Cannot find anything when I type in "acid" tho ;)
I wrote /r/surgetraderbot - it's FOSS ... Also I wrote [gridtrader](https://github.com/metaperl/gridtrader).
have just found out about vaex and was experimenting with it today on the nyc taxi dataset from the kaggle taxi fare comp. But I found it really difficult to get it to parse a column into datetime format... (it's in the form 2009-06-15 17:26:21 UTC, so np.datetime64 does't parse it properly), and using the parse_dates option in the read file just seems to take forever... Any suggestions on getting vaex to play a bit nicer with datetime strings? 🤔
I’m new to Reddit. How do I view the app? All I can see is everyone’s comments.
Not really the thrust of this post, but I asked [a question based on the quickstart](https://www.reddit.com/r/learnpython/comments/bd7g7s/how_are_arguments_parsed_by_a_function_that_has/).
sorry. forgot to add the error message Unhandled exception in listener callback Traceback (most recent call last): File "C:\\Python34\\lib\\site-packages\\pynput\\\_util\\\_\_init\_\_.py", line 157, in inner return f(self, \*args, \*\*kwargs) File "C:\\Python34\\lib\\site-packages\\pynput\\keyboard\\\_win32.py", line 240, in \_process self.on\_press(key) File "C:\\Python34\\lib\\site-packages\\pynput\\\_util\\\_\_init\_\_.py", line 78, in inner if f(\*args) is False: File "C:/Python34/test.py", line 42, in on\_press main\_function() File "C:/Python34/test.py", line 57, in main\_function [keyboard.press](https://keyboard.press)(('x'), Key.enter, [Key.space](https://Key.space)) AttributeError: 'module' object has no attribute 'press' Traceback (most recent call last): File "C:/Python34/test.py", line 76, in &lt;module&gt; listener.join() File "C:\\Python34\\lib\\site-packages\\pynput\\\_util\\\_\_init\_\_.py", line 198, in join super(AbstractListener, self).join(\*args) KeyboardInterrupt
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
nah, tank top :)
This worked! Only issue is that the confidence level was only 0.61 for this image, even though I just took a screenshot/cropped it.... Why wouldn't this be a higher confidence? Do I need to be concerned with false positives?
Personally as i don't like too much the Ubuntu look i always try to deviate to elementaryOS, i love it. In the end all resumes to efficiency for me, and also the old one "don´t repear yourself" :)
Answered :)
But with no sim card, you're kinda limiting your range.
That's a good question. I did some research a while ago and someone mentioned something like 'operating system effects' that would change the image slightly. So far I've only used pyautogui for a fun game automation project, so I didn't have to deal with possible false positives. One thing you could test: instead of a taking a screenshot using the OS, take a screenshot using a) pyautogui b) the browser Maybe there will be a difference?
Did you crop inside the search button or right on the border? Is any type of image compression/resizing applied on the png or the screen for comparison? You may be able to work around this by making sure search.png is a perfect square so that any resizing calculations for comparison are cubic
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Trying to read in an excel file at work without an error :) I am pretty new at this and have only worked with CSVs so far.
No deletion of any package mentioned in my comment, just eventual removing pyscreeze from his code and cache deletion.
Our sidebar has a brilliant intro for you: r/PYTHON **RULES** **1.belongs in** /r/learnpython If you are about to ask a question about how to do something in python, please check out [/r/learnpython](https://www.reddit.com/r/learnpython). It is a very helpful community that is focused on helping people get answers that they understand. &amp;#x200B; And their [wiki](https://www.reddit.com/r/learnpython/wiki/index) is an icing on that cake.
What a great idea. I wonder if you could get something like these wifi enabled lightbulbs to work? [http://ecomunsing.com/controlling-wifi-lightbulbs-with-python](http://ecomunsing.com/controlling-wifi-lightbulbs-with-python)
Because it's executing code without any kind of checking. Which means if you're taking in a pickle from a source, be damn sure it's trustworthy and can't be hacked.
There’s nothing inherently insecure about using pickle _correctly_, the problem is it’s often employed in places it should not be with untrusted content. Basically if there’s _any_ way that the content you’re about to unpickle has been controlled by someone else then you’re about to give them arbitrary code execution ability when you unpickle that content. In any situation in which you trust the pickled content, your fine, but how many such situations exist? Since pretty much anything can be serialized to for instance JSON or msgpack without incurring the risk of code execution, why use pickle at all in the majority of situations in which establishing and maintaining that truest is _hard_? The attack vector is easy, BTW... a pickled object with a `__reduce__` method that returns a properly constructed payload will execute they payload without any opportunity to inspect or sanitize it during the unpickle call. An example and a reasonable writeup on the issues is [here](https://www.synopsys.com/blogs/software-security/python-pickling/).
Big issiue with my discord.py bot... my bot return all the channel from another server...and can’t figure out why! For example, on server 1 i type the command to call the bot and instead of returning all the channels on server 1 the bot returns the channel of server 2...
I've been thinking of learning Vim or maybe Lua to be able to work better with Emacs. I'll look into Vim for beginners/noobs.
I would recommend it. It's real nice
thank you, this is very informative, im still young (abt 3yrs) in programming, so it was kind of a new concept to me, and i still know, i guess, the proper uses for it, but i can definitely see what you are saying, and in vice versa, a pickled data set when being unpacked could be used to launch a malware attack, but wouldnt things like comodo's HIPS or spybots teatimer be able to protect against that?
thank you, i will read tat article. i always assumed the danger was in the pickled information being easily hacked or something of that vain, i never considered the real danger is the unpacking process, because it allows the pickled object to do things like run commands or write files without any transparency or break points for security checks.
but i want to pose the same question i gave above, would things like comodo's HIPS or spybots TeaTimer be able to catch those threats? or would they be ignored because the software allows the python interpreter to run at an elevated permission?
What is amazing on Python is that such a few lines of code can create an application.
I doubt it. Because how will they know the code will execute that way until the execution actually happens?
well, they dont know until after, but the point of teatimer is to keep a profile of your current setting and image state, then notify and request permission before anything can change it, like with teatimer, if i try to install a program, i will get 2 or 3 notifications saying things like "so and so program wants to change such and such registry entry, will you allow?" but i dont know is if it will catch pickling because if teatimer already is allowing the interpreter to run, would it catch the unpack process? i guess that might be a better question for spybot forums...
Have an exam tomorrow. Might actually use this a bit to study.
&gt; wouldnt things like comodo's HIPS or spybots teatimer be able to protect against that? Maybe? Why would you take the risk in finding out?
Because if you drop the jar, the ground gets simultaneously slippery and sharp. And don't even get me started on the harm that can be caused by eating a pickle full of glass shards. Forget about it. Doing the pickling yourself increases the chances of these risks (as there is more handling on your end) than just buying a jar. \#TheMoreYouKnow
Could try interning at a zoo. I imagine any zoos with Pandas are gonna be really tough to get into, though.
I think a good starting for finding a job at a zoo would be Animal Control. Valuable experience for me. &amp;#x200B; Signed, Top Panda Researcher in the World
Come checkout github.com/freqtrade/
Well shit, if you're the top panda researcher in the world, who am I to argue? Carry on you magnificent bastard. Your research is a noble pursuit.
I'm occasionally surprised by experienced devs who aren't aware of the capabilities of set operations. The most common use case is to get the members of List A that aren't in List B `A = [1,2,3,4,5,6] set(A)-set(B)`
Thanks! Well which acid are you looking for? Try hydrochloric acid, acetic acid or aspirin.
I posted links to the site and GitHub in my comment somewhere up top. [Here’s the link anyways](https://bunshi.herokuapp.com/)
Definitely. I’m not quite familiar with the conventions of licensing but I’ll get on it.
Go through [this](https://www.youtube.com/watch?v=5JnMutdy6Fw) video with Brandon Rhodes and with [these](https://github.com/brandon-rhodes/pycon-pandas-tutorial) resources. A little dated now, but still really valuable.
Plz answer you ASAP?
This app is pretty nifty! Btw chemistry graduate student at UT.
Nice work, can I see your code?
This app is really nifty! Btw I’m a chemistry graduate student at UT.
Make youtube video explaining little bit about your code bro
&gt; 7 upvotes, 123 comments I'm here for the editor drama :)
Thank you for asking the question. Something I have wondered myself!
I understood that reference
Perhaps not quite in the line of what you want, but there is [ANUGA](https://en.m.wikipedia.org/wiki/ANUGA_Hydro). The wikipedia page [links to the github repository](https://github.com/GeoscienceAustralia/anuga_core). The installation manual is in the *doc* directory.
Desktop link: https://en.wikipedia.org/wiki/ANUGA_Hydro *** ^^/r/HelperBot_ ^^Downvote ^^to ^^remove. ^^Counter: ^^251221
Source: [https://github.com/vivek3141/pacman-ai](https://github.com/vivek3141/pacman-ai)
I teach Python and frequently suggest people to use Sololearn. It's one of the best apps to get started on your own.
That's good to know. Where do you teach?
How this really work, you added all compound structure or make own structures with algorithms or according to user generated
I teach free Python classes in San Francisco. Not affiliated to any school.
Awesome. Do you recommend anything else?
Free, I doubt
its basically eval
The structures are not generated using an algorithm. It scrapes the url of the compound's image from PubChem &amp; then displays it.
For an example of "monitoring" user inputs, there is a program here that I've contributed to: [https://github.com/calexil/FightstickDisplay](https://github.com/calexil/FightstickDisplay) This particular program is for streamers to have a visual display of their inputs to show in their stream.. It's using the \`pyglet\` library. There is no built-in way to inject input with pyglet, however, since all joysticks are opened for reading only.
Here you go, just put this together for you. [Introduction to Algorithms - MIT opencourseware](https://collectyv.com/Course/5aaaaaaab)
1-Diazidocarbamoyl-5-azidotetrazole or (5-azido-1H-tetrazol-1-yl)carbonimidic diazide
Have you considered requesting API access to MLS systems? Some Real Estate Associations may be willing to work with you on that.
Are you trying to scrape a single-page-app style site that dynamically loads content/data with Javascript?
The short version from a security perspective is that once there’s code from an adversary running on your machine, everything after that is just forensics. It’s not paranoia if everyone is in fact out to get you, and with modern information security this is the world we need to live in. Also, it’s relatively trivial these days to find non-executable data formats for wire protocols and data storage, and then you also get the benefit of not having your data tied so directly with your implementation language.
Nice. Congratulations!
Sololearn is really great. I had been learning C# for years but only through the Sololearn cours I finally understood some key concepts.
Abitrary json is also considered a security risk
Coooolll
This video tries to cover so much, it ends up covering nothing.
Maybe it would. Or maybe the code in the payload can sneak around them. Or kill them. Or just reboot your machine or exhaust resources before any defensive software notices. Do you really want to risk that?
Security aside, the idea of stored executable code gives me the heebie jeebies in terms of maintenance. &amp;#x200B; I want data to be dumb dumb dumb.
Learn how to read code yourself bro. That’s what docstrings are for.
oh i personally dont want that risk, i was just reading about it and remembered hearing about it and was curious, i personally worked my ass off to learn how to properly write and read data to a JSON using dictionaries, but i had heard about pickling and read a bit about it, and got curious. it took me damned near three months to write this little script but by the end of it i had a much better understanding of jsons. i just was curious about pickling and wanted to know more, someone who used to talk to me alot about programming would tell me to never use pickling because of security problems but never said why, and we dont talk anymore so i cant exactly just go ask him. https://ghostbin.com/paste/cms5f
It was a joke, but maybe it's a good idea to implement keyword search, so when I type that in I can get to choose :)
So your problem isn't actually with JSON as a concept, it's with going from JSON to a class instance and back. You might want to use a helper library here, maybe something like [serde](https://pypi.org/project/serde/)?
This is the error I get on my local machine:- # Error response Error code: 501 Message: Unsupported method ('GET'). Error code explanation: HTTPStatus.NOT\_IMPLEMENTED - Server does not support this operation.
https://kite.com/blog/python/pandas-dataframe
im looking into the link now, as it is, i just wanted the data saved to later in the program i could load it and alter it as needed then save it to a temp file to hold the character information as part of the save state. there was a couple other things i did with it after. i havent worked on this in a while though, ive spent alot of time studying c# lately, but over the last week or so my interests are coming back to python so i might pick this project back up. https://ghostbin.com/paste/aapsb
Now that is a sensible error. What does your code look like?
Gave me a new idea for an application to add to my portfolio (C# though). Awesome🙌
omg yes serde look amazing, i definitely need to take some days and break into it... thank you, so very much...
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Yikes, that wooshed right over me -_-
With sololearn often the comments are very helpful to get more information on a concept as well.
I'll do it for $5.
lysergic acid
i can definitely agree with you there, but also from a maintenance point of view, being able to store executable data could definitely be useful for doing regular tasks, like i could pickle a process i need to run weekly as part of a program that i run daily, then just load the pickle (hahahaha my dirty mind) to launch the weekly maintenance, or something like that. but yea, now that i have read this thread, pickled data is definitely something i will be far more wary of.
Do you have any resources? I haven't been able to find anything to suggest this
Seems like a CSV file to me (or rather, a TSV file, since you separators are tabs and not commas). Still an easy job for the built-in `csv` module.
What the code main file which I want to run?
Yes.
from http.server import BaseHTTPRequestHandler, HTTPServer \#from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer &amp;#x200B; &amp;#x200B; &amp;#x200B; class WebServerHandler(BaseHTTPRequestHandler): def do\_Get(self): if self.path.endswith("/hello"): self.send\_response(200) self.send\_header('Content-type','text/html') self.end\_headers() &amp;#x200B; message = "" message += "&lt;html&gt;&lt;body&gt;Hello!&lt;/body&gt;&lt;/html&gt;" self.wfile.write(message,"utf8") print(message) return else: self.send\_error(404,'File Not Found: %s' % self.path) &amp;#x200B; &amp;#x200B; def main(): try: port = 8080 server = HTTPServer(('',port), WebServerHandler) print ("Web server running on port %s " % port) server.serve\_forever() &amp;#x200B; except KeyboardInterrupt: print (" \^C entered, stopping web server...") server.socket.close() &amp;#x200B; &amp;#x200B; if \_\_name\_\_== '\_\_main\_\_': main()
http://github.com/monocongo/climate_indices
( 。・\_・。)人(。・\_・。 ) Mah man!
I'm running this on Windows 8 using Python 3.6
You haven't actually posted the source code to your program.
It is a security risk ... _if_ you **eval** it in JavaScript, or in Python you use a custom JSONDecoder, or implement and pass unsafe functions for **object_hook** and/or **object_pairs_hook**. Using the default implementation of **json.load**/**json.loads** is considered safe, as only a few basic, safe-parseable primitives [will be converted back to objects](https://docs.python.org/3.7/library/json.html#py-to-json-table), while everything else will just become a **str**. Dont’t **eval** said **str** and you’re fine.
It’s not risky in Python using the default behavior of **json.JSONDecoder**.
Which program are you talking about? This is the one I'm trying to run.
from http.server import BaseHTTPRequestHandler, HTTPServer \#from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer &amp;#x200B; &amp;#x200B; &amp;#x200B; class WebServerHandler(BaseHTTPRequestHandler): def do\_Get(self): if self.path.endswith("/hello"): self.send\_response(200) self.send\_header('Content-type','text/html') self.end\_headers() &amp;#x200B; message = "" message += "&lt;html&gt;&lt;body&gt;Hello!&lt;/body&gt;&lt;/html&gt;" self.wfile.write(message,"utf8") print(message) return else: self.send\_error(404,'File Not Found: %s' % self.path) &amp;#x200B; &amp;#x200B; def main(): try: port = 8080 server = HTTPServer(('',port), WebServerHandler) print ("Web server running on port %s " % port) server.serve\_forever() &amp;#x200B; except KeyboardInterrupt: print (" \^C entered, stopping web server...") server.socket.close() &amp;#x200B; &amp;#x200B; if \_\_name\_\_== '\_\_main\_\_': main()
 **keno44@seznam.cz**
Amature room porn would be my preferred subreddit to pull data from as well. Especially when sorted by 'hot'.
Your problem is that your method is called `do_Get`, and it needs to be called `do_GET`. Case matters. Also, whatever course you're doing now seems even more weird to me - `http.server` is not a good solution for, uh, anything really.
In the course they're calling BaseHTTPServer. But since I'm I'm using Python 3.6, the requirements are slightly different I think. The following was the original call:- from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer
:) yes been lurking and clicking everytime to view the image is so tiring and so...
 [https://www.facebook.com/maryna.petryshyn](https://www.facebook.com/maryna.petryshyn)
Oh my God, I don't know how to thank you! I took your advice about the casing and then tried it with a github solution on my local machine (without vagrant) and it worked!Thank you so much!!!!!!!!
First, notice that both those products mention registry keys... both those products are for Windows. A hell of a lot of computing _isn’t_ done on Windows. And while similar systems exist on other operating systems, protecting system critical files isn’t the same thing as keeping the user from running a command that recursively encrypts every user-owned, non-critical file on their machine with a random key. Or just finds and shreds every video and photo in what appears to be the user’s porn store. Or what have you. You don’t need to launch a known malware attack, you just need to be unknown malware once. If you’re run by a user with sufficient security privileges to perform an unpickle, you’re capable of doing anything that user could manually do without triggering those sorts of products... which is a lot. _Never_ unpickle untrusted content. If you need to pickle, transmit, and unpickle, then cryptographically sign (via HMAC) and verify the signature before unpickling. Encrypting/decrypting the content with a secret you control also works... though arguably the most secure would be pickle -&gt; encrypt -&gt; sign -&gt; transmit -&gt; verify sign -&gt; decrypt -&gt; unpickle. Of course now you need to trust the entity that you’ve allowed to craft the content of the pickle on the sending end... but at least you know that entity has access to your crypto keys. So you either do trust them or you’re completely boned already.
thank you.
What about sending something to multiprocessing? Whenever you send something to be executed in multiprocessing, it gets pickled/unpickled. What if I send some unknown text to it? For example, I read a big chunk of text, and want to send parts of it to several different processes to be analyzed or something. Am I in danger of code execution from the text file?
`BaseHTTPServer` is the exact same thing, it just got renamed in 3. It's still extremely, uh, basic, and not something you'd ever use for real applications, especially now that we have WebSockets, HTTP/2, TLS, asyncio and all the other things it doesn't support.
I think this might be the case! I am not much of html/JavaScript guy just know the basic stuff! I'll check and let you know if I find this out! What if I am trying to scrape the dynamically loaded data with JavaScript
Yes. I admit to referencing comments.
OP is the creator of this library. So probably not worth considering.
Sad that so many parents can't instill at least some basic decency into their offspring. Not that that is any excuse for his behavior. Sad none the less.
beautiful
1. /r/learnpython 2. PyAutoGUI seems like a bad tool for the job - Python can work with Excel files natively, and do most things Excel does by itself. What is your end goal?
No antivirus can catch the malicious code that plainly and openly deletes or uploads your files and quits. Because how would AV tell it apart from a new browser? This is the reason why I say "Windows has no security" because all other OSes allow some ways of limiting per-application file access.
A detailed introduction into SVMs with the scikit-learn library in Python [here](https://blog.finxter.com/support-vector-machines-python/). In it's simplest form, using SVMs in your project takes only a single loc -- thanks scikit-learn!! :)
Awesome! Now I can use my mobile on the toilet and actually kinda understanding what's in the air freshener!
Shame I live 5000 miles away :(
5000 miles is 8046.72 km
Use pyautogui to keytype `pip install gspread`
Not sure this is really a "cheat-sheet" so much as you just telling people to import scikit-learn.
Electronic engineer student graduating at a company where my assignment is to re-implement existing Machine Learning algorithms (written in python) on GPU's. Altho GPU code is done in C, I have to do a lot of coding and refactoring in Python too. Enjoying the shit out of this graduation project.
That's an issue with the server. Contact whoever is in charge of maintaining it.
Any idea what the fault might be? It would be great if I could suggest some fixed. My university doesn't offer support for python so its a little do-it-yourself haha
Did you install Python yourself or something? It seems like some files are missing. Or maybe a lot of files.
I was considering recommending SoloLearn to my students but their variable naming is a bit evil. In their taking a shortcut questions: Naming list a list??? Why would you do this?? That leads to all kind of fun syntax errors which are completely not needed for beginners or anyone. IMHO, mylist or something like that is preferable to prevent confusion between reserved keywords.
Its on the university server. I had python and jupyter installed (both of which needed SUDO permission which I don't have). Is there any command I could run to check that python is still there? Why I type &gt; python ImportError: No module named site error.
Multiprocessing is a pretty safe use case. The processes all run the same version of code, eliminating serialization across code version problems, communicate over local-only sockets, and don't persist data.
How did you "have it installed"? Did you do it yourself, or did you ask someone to install it for you? Right now, you have large chunks of Python itself missing.
I'm taking lessons on python in sololearn. Intermediate concepts are not explained well. You will be looking for better explanations in comment section after awhile. Only good for introductory lessons. I would rather recommend python lessons of Corey Schaffer from YouTube.
The video's on [here](https://pythonprogramming.net/pygame-python-3-part-1-intro/) are 20 ish minutes long but are a great place to start. Abstracting away from the `event` loop `might or might not be a good thing to do. I feel like I've got a good grasp on basic PyGame, if you have any specific questions feel free to DM me. On a side-note: r/learnpython might be a better sub to post this.
1. /r/learnpython 2. Yes, that should be enough - you can compute the values with `numpy`, and then use `matplotlib` for the actual drawing.
Have you tried to run the executable form a CMD? If you run it like a normal executable, it will just close when it crashes.
Thank you! Also, I completely forgot that /r/learnpython exists.
Seems useful, i will cehck it sometime. But there is one point more. Of you stored your dtirngs in xml file, you can write A script to replace translated words automatically.
1. /r/learnpython 2. Is this a one time thing or a production process? If it's a one time thing, I'd just spin up a MySQL server, load your dump into it, then use [select ... into outfile](https://dev.mysql.com/doc/refman/8.0/en/select-into.html) to dump it to CSV directly.
my supervisor did it. It was something along the lines of &gt; sudo pip install python
Then contact your supervisor and have them fix it. I'm not sure what you did, but reinstalling Python is definitely going to be part of the solution.
Might not be fast but looks cool.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
There is no perfect, general tutorial for Python (or any other programming language, even any topic of any profession). Having said that, Sololearn is: * Free * Straight to the point * Desktop/mobile version * USEFUL &amp;#x200B; I have seen myself (to my own shame) looking for some detail in the Sololearn course instead of other documentation sources, just because it can be short, concise and clear. Yes, it is true that there are some specific cases where the example is not the best or has some small errors, but considering its free nature and the amount of tutorials with repeated (copied) information in the Internet, I am happy with Sololearn and wish they should go further with more languages (I have long commutes, \~2h, and the reading in the train helps a lot, even just for hobby to learn something new).
I wanted to make a python parser
Why?
For real time as far i know you have to pay.
I am fully aware of that and would be ready to!
I read only first part, my bad.
Just because
Look at quantopia
Does this sort of stuff really belong in /r/python ?
If amplitude == 0 and timestamp is None: Timestamp = datetime.now() If amplitude &gt; 0: Timestamp = None If timestamp &gt; (whatever 1 second is in datetime): Song_ended = True
Thanks, but as far as I am aware, Quantconnect and Quantopian only provide historical data
Check [regex101](https://regex101.com), it has the Python regex engine, and is really helpful for defining regex due to its interface and visual aids. A very rudimentary (and probably bad) way would be reading from the `CREATE TABLE &lt;ID&gt; (` until the corresponding `)` based on the indent. You could use capturing groups to get the content that you need to write. E.g. &gt;import re &gt; &gt;regex = r""" \^ CREATE \\s+ TABLE \\s+ \`\\w+\` \\s+ \\( \\n\\r? ( (?: \\s\\s \[\^\\n\\r\]\* \\n\\r? )\* ) \\) """ &gt; &gt;matches = re.findall(regex, text, re.MULTILINE | re.VERBOSE) &gt; &gt;for match in matches: &gt; &gt; print(match) &amp;#x200B; Of course, I did this on the fly, it might not be exactly what needs to be read, but from here you can dive deeper into the regex if that is finally the option. Check the generated regex [here](https://regex101.com/r/7aycfv/1/).
Check [regex101](https://regex101.com), it has the Python regex engine, and is really helpful for defining regex due to its interface and visual aids. A very rudimentary (and probably bad) way would be reading from the `CREATE TABLE &lt;ID&gt; (` until the corresponding `)` based on the indent. You could use capturing groups to get the content that you need to write. E.g. &gt;import re &gt; &gt;regex = r""" \^ CREATE \\s+ TABLE \\s+ \`\\w+\` \\s+ \\( \\n\\r? ( (?: \\s\\s \[\^\\n\\r\]\* \\n\\r? )\* ) \\) """ &gt; &gt;matches = re.findall(regex, text, re.MULTILINE | re.VERBOSE) &gt; &gt;for match in matches: &gt; &gt;print(match) &amp;#x200B; Of course, I did this on the fly, it might not be exactly what needs to be read, but from here you can dive deeper into the regex if that is finally the option. Check the generated regex [here](https://regex101.com/r/7aycfv/1/).
The thing that separates this trie from the conventional one is, this allows for pattern search whereas a regular trie only goes with prefix match. So no need to index all the scenarios you want to search for. Plus, you can associate any data with the keywords you index. Therefore while retrieving you can collect all the data that matches your search text
How this related to crud web development in Python?
No it doesn't . So much hype about machine learning
Relevant XKCD - https://xkcd.com/353/
I've always been interested in machine learning and stuff like that, but it never "clicked" with me. For me, it seems like an overcomplication. Is there a good ELI5 that could change my view? I even started some courses but I don't know, its always so theory and math and overcomplications, I learn with practice, just give me a code that will do something cool, make me run it, and I'll start digging it up to see how it works, and then maybe I'll start applying the theory.
Actually yes, Google al sweigart, he has a teaching python website some free books and interactive activities, very solid books if that's how you learn.
If you are able to do it and you can get paid i will recommend you, if not why bother and come to insult me? i'm very good at my job, but not that good with trading, is that a PROBLEM???
Thanks man
Tell me know what you do in your day-to-day life, and I can probably give you a few examples of where you might find machine learning useful in things that you might write. (In terms of machine learning in daily life implemented by others, I think you might have a good idea already of how it's useful? If not, let me know.)
Thanks !
Whats wrong with that?? as soon as possible whenever you can, if you can't just ignore it?? what's wrong with the world today?? focusing on less matters ??
I choose the [**Best Machine Learning Company in Noida**](http://pythonandmltrainingcourses.com/) for learning Machine Learning and has gone through a lot of developments since then, and I am not really sure if the link I shared is correct one. However, I think the courses at pythonandmltrainingcourses are great for beginners. The best part is that the courses follow an application based approach rather than getting deep into the theory. Note that that’s just a personal choice. If you are interested in theoretical ML, you should prefer sticking to any other course online or classroom classes it's up to you. Though, I did not take online courses. I rather took offline ones at **pythonandmltrainingcourses** at Basic and Advanced ML.
What do you mean, real applications? What are the alternatives to it?
On my way home..will try and let u know !
Thank you for sharing. So you have a PDF or higher resolution version handy?
Anyway you could add a function that stores a list of selected chemical compounds and formats them to print out as flash cards?
What you're looking for is called *onset detection*. You can either do a web search and implement it yourself or use an audio library, e.g. [librosa](https://librosa.github.io/librosa/generated/librosa.onset.onset_detect.html).
I work with programming and systems development. I find the ideia of machine learning, AI, etc, very very interesting. But the moment I sit down to learn it, it becomes so boring and theoretical that I give up. The moment I saw that flappylearning thing in github, where a dude makes a machine learning algorithm that plays flappy bird, I thought "holy crap thats awesome", but damn isn't it boring to do.
Got few errors while running on CMD 1. Portaudio library not found ( I have it installed ) 2. A lot of File&lt;"Frozen importlib._bootstrap&gt;" , line 983, in_find and load ....stuff 3.cannot load library "path to library /portaudio-binaries/libportaudio64bit An error code of 0x7e 4.Failed to execute "filename" I tried running a 2 file program where one file1 calls file2 ..file2 contained a fileopenbox where I drop in an image ..the image is shown out and pytesseract is suppose to happen and the obtained text to be printed on screen ( this did not happen ...pytesseract part ) Idk what to do!!!
Got few errors while running on CMD 1. Portaudio library not found ( I have it installed ) 2. A lot of File&lt;"Frozen importlib._bootstrap&gt;" , line 983, in_find and load ....stuff 3.cannot load library "path to library /portaudio-binaries/libportaudio64bit An error code of 0x7e 4.Failed to execute "filename" I tried running a 2 file program where one file1 calls file2 ..file2 contained a fileopenbox where I drop in an image ..the image is shown out and pytesseract is suppose to happen and the obtained text to be printed on screen ( this did not happen ...pytesseract part ) Idk what to do!!!
By "real applications" I mean literally anything you'd ever run in production with more than, like, one and half people using it. The alternatives are to use a web framework like Django or Flask, or any async one like Quart, and deploy it with a fast server like Gunicorn or Uvicorn, preferably protected by a reverse proxy like Nginx.
Then you'll probably have to parse SQL to do this correctly. [sqlparse](https://github.com/andialbrecht/sqlparse) may help here.
https://www.refinitiv.com/en/products/elektron-enterprise-data-management/market-data-feeds/
Django or Flask can be used for "real applications"? And if so,just how can they be used? If you remember I asked about Django a bit at the start.
Django and Flask can be used for real applications, yes. What do you mean by "how can they be used"?
Nice. Thank you. I'm sure I'll learn something. It'd be nice to save the images with the post title appended to the filename. I'll see if i can contribute tomorrow
Actually getting started really. Finishing up my masters degree in math just now and figured some coding skills was always an area I wish I was better at, so took the simplest book out the library and have started making my way through it.
there is a youtube [channel](https://www.youtube.com/channel/UC0e3QhIYukixgh5VVpKHH9Q) with a guy who takes small games or builds them himself and then applys mashine learning for the model to learn to play the game. You might enjoy watching it.
You are asking for help with your job for free. You are demanding an answer as soon as possible. That’s what is wrong with the world today. I’m sure you didn’t intend it that way, but since I am guessing you are newish to this whole work thing here is some free advice: Don’t place timeline demands on free requests. Pay for a deadline. Don’t make free requests for assistance doing your job. I’m sure you are capable of doing your own research based on the area you work in.
You forgot my favourite profile viewer: snakeviz
I use pyautogui to work with repetitious data manipulation in excel like situations. Basically large grids, not excel, proprietary database, locked away from accessing except through the gui input. Works a treat
Yes, I found some of their code confusing, too. Fortunately, I could still follow it from previous programming experience. In a way, the confusion is helpful. I had to look at the code much more closely, instead of simply skimming through it.
Thanks, I just subscribed to him. And, I already downloaded one video to watch later.
Thanks. He has a YouTube channel, so I just subscribed to him.
I was literally thinking about this 5 minutes ago :O
Sorry but this isn't an introduction to SVMs. This is an introduction to how to build SVMs with scikit-learn.
This does not answer the question at all.
This is the correct answer! This is a well-known problem, and not an easy one. Don't reinvent the wheel - find out what other people have done.
It would be helpful if you posted the full error. Can you also tell me what command you use to compile it? I'm getting the impression it cannot find some external files.
Lol
Aside from the security issue, pickling involves storing code with your data. Trust me that in the long term, this will unload a world of grief. One day the code that is stored with your data will interact badly with your code today, and fixing it will be extremely hard. And there are other reasons. For example, what if you need to read that stored data in some language that isn't Python? You're out of luck. Always, always, always serialize your data (that's what you're doing) as dumb data, using some well-known format like JSON (or Yaml, same thing), protocol buffers or the like.
Thank you to everyone for all the knowledge and advice given. i very much appreciate it. a few more threads like this and i can graduate with my reddit degree in programming! jk. ty again..
It's insulting for you to take a work project and have someone work it for free while you are the one getting paid. If you are unable to complete a project due to technical limitations (i.e. you don't understand how to execute the project) then you should how a contractor to complete the project or be up front with your employer. I don't doubt that you are good at your job, but it looks like you're very poor at handling this situation.
On a larger scale, balancing the clusters etc is done with machine learning nowadays. Do you think you'd find it more fun if you wrote an AI for swarm bots fighting other swarm bots (virtually)?
&gt; Abitrary json is also considered a security risk Considered by whom? The easiest and most common way of reading JSON is completely safe: import json data = json.load(open(filename))
I ran the full code using pyinstaller to convert it to an exe file and the conversion took place without errors Command used "pyinstaller project.exe" The error I got when I ran it using anaconda prompt https://gyazo.com/collections/8bbef434ced845b9c1a3968bf90f4045 I checked whether I had pyaudio up https://gyazo.com/collections/d45e4b32e10f2b0464245509b74a0dec And finally ran the exe of my project .."project .exe" using cmd and got the following https://gyazo.com/collections/3c406f6eca8deb68181ece7d11b1cbde .. This is getting on my nerves the code works brilliantly when run on an ide but once I port it out to an exe I don't get anything!!..
Make sure you're using the same environment as your IDE does. You might have PyAudio installed in your IDE's virtual environment, but not on your system's environment.
That depends. Why do you want to get an online certification?
thanks! that's good idea.
How do I do that??
Well I would like to get one because I know it will probably look good on a resume now and when I get older and am looking for some sort of job in programming (I am 15)
Note also OPs post history. He is not here for the memes.
Can you go into the terminal and open the Python shell and import the audio library you're using to see if you've got it installed?
You really don't need to worry about this right now then. By the time you're looking for a job, most of those certifications will probably be outdated and invalid. Focus on learning, and maybe get some open source projects done - those will be way more valuable for any reasonable employed than some certificate.
This is not a charity, honey. NEXT!
[NEXT JOKE ORIGIN](https://www.reddit.com/r/ChoosingBeggars/comments/7kr5as/i_need_a_free_100mile_bus_trip_for_20_people_and/)
A lot of the machine learning stuff is math related, so there is no running away from it. But I think the books introduction to machine learning with python and hands-on machine learning with scikit-learn and tensorflow are a good introduction to the subject without getting into the math. Other than that, there are the repositories on GitHub with examples like Hvass-Labs/Tensorflow-Tutorials, which also has YouTube videos explaining it, or MorvanZhou/PyTorch-Tutorial. I think you can do useful stuff without learning the math, but you'll need to learn it after a while. Also most of the machine learning models (that I know of) are just a complex mathematical function that adapts to data.
[removed]
been using the latest Kubuntu since 2006. Just used to it and it does what I want. I prefer KDE look and customization capabilities.
finding the prime numbers between top and bottom limits given by the user.
maybe i’m too familiar with programming that my approach is already stuck in my head. I can’t figure out your application still
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
alt = int(input("Alt sınırı giriniz&gt;")) üst = int(input("Üst sınırı giriniz&gt;")) while alt &lt;= üst: if alt &lt;= 1: alt += 1 else: k = 1 while k &lt;= alt: if alt % k == 0 and not (k == 1 or k == alt): break else: k += 1 if k &gt; alt: print(alt) alt += 1 &amp;#x200B; something like this
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
You might find this useful: https://github.com/RipMeApp/ripme
The terminal is unable to find the pyaudio module..reinstalling it ..hope this fixes it
Good bot
Thank you, Kaligule, for voting on ordinarybots. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://botrank.pastimes.eu/). *** ^(Even if I don't reply to your comment, I'm still listening for votes. Check the webpage to see if your vote registered!)
Ahhh, I see. That is sad.
My plan is to make a project using python that scrapes job listings from Big N/unicorns and pulls out all the relevant skill data and then visualizes the desired qualifications into a graph. I have no idea how to do this yet.
Online certifications are not that valuable as credentials. They are more valuable for the practice you are getting. Instead, focus on writing lots of Python programs. Come up with a project and keep developing it. Put it in a GitHub repo, so you have a coding portfolio to share. Comfortably and thoroughly talking about or coding in Python is much more valuable than any online certification you may complete.
I think you mean dependency injection https://github.com/metaperl/python-oop/wiki/Dependency-Injection A related term is inversion of control.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Charity?! I said if you are good i can recommand you, it seems that you are full of hate and surely you are some kind of joke yourself, if you are up to do it (im 10000% sure you wont, its not easy) i said u will be paid by them, i asked for ressources or some help to get through it, i dont need negtive people like you. Go find yourself something or someone to do with your life.
Nope i'm not, its just that you guys are full of hate and prejudging everything, did i say "is anyone here up for a free job" ?!?! If you are good at it, just let me get u in contact with them and do it yourself and get paid yourself, if they KNEW YOU EXIST, they def will hire you for the job, I'm up to do it just doesn't know that much about trading and this specific platform, so why not asking before judging?! Or maybe trying to understand more before saying anything??? P.S. i found a community of freelancer who are welcoming and they are super excited to collaborate, they will get paid, they asked gently for details, why you people tend to get super aggressive about something that is super simple?!
You can still use pickle or other ways of storing executable instructions, you just need to keep security in mind. For example, if anyone could give you instructions to execute (in pickle or otherwise), how would you know if they were malicious? You could implement a bunch of checks for obviously bad behaviour before you execute it. But that only saves you from the things you know to look for. What is you only trusted code that you wrote? Then you'd need some way to ensure you wrote it, such as a digital signature. You'd also need to ensure someone isn't tampered with your code. And what happens if someone discovers the key for your signature? How do you address that if your code is actively running elsewhere? If you are automating tasks at home or at work in a secure environment, don't fret about storing pickles. If someone gets into your system to the point where they can edit your local data, they already have the keys to the kingdom. Consider other issues with pickles. Pickle actually stores something like a bytecode for building object instances. This system doesn't handle changes to the underlying classes. If you change your code, expect your pickle files to fail to load or to result in subtle bugs when they try to run old, incompatible code. Also consider other formats. JSON is much easier to read and modify and is supported on many platforms. If you just want to serialize data, that's a good alternative. And if you want to store executable instructions, storing a string of Python source code and evalling that isn't really any different, but it's a lot easier to read, modify, and audit. You can even parse it into an AST without actually executing it. Overall, people use pickle for things where it's inappropriate without considering the consequences. It's a fine tool of used responsibly.
Who said that i asked for free???! Did i mention the word free anywhere????
How much are you paying? If you give everyone some budget details, I could direct you to some great trading resources.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
But what about the kernel?
Okay... Again, how exactly do you compile the script? Are you using `--onefile`? If you're using it, try without it first.
Pm me. And next time try to not judge or say anything before knowing the whole details, i was in a hurry writing the text before getting to a sport match, didn't crafted my text very well thats it.
Definitely practice, practice, practice. I use codewars.com with my students. Also, try to learn the underlying principles for how programs work - like understanding memory allocation of variables, scope, how interpreter executes a program, etc. This tool: http://www.pythontutor.com/visualize.html can be useful for that. It shows what definitions are in memory at any point, what order things are getting executed, etc.
Why not put your budget out in the open so we can help you?
Why are you using Jupyter Notebook and expecting an IDE-like experience? It's not designed for that, it's designed for fast prototyping and literate programming. Just use an IDE like PyCharm or maybe Visual Studio Code (note: _not_ the same thing as Visual Studio!).
dependency injection doesn't make much sense in interpreted languages
Dependency injection is still a totally valid concept in python. I'm not sure why you're saying it's related to static typing? It's a design pattern not tied to type systems, but rather to system architecture.
Seriously man?! I asked to come in private to help me decide the price to put on, because i don't really know how much they are paying for this kind of tasks, you are prejudging again man and you are overreacting and over analysing a simple request. I think that you are not here to help, if so tell me then how much they are paying for this kind of jobs, and give me some references and i will hand you the job with a 50% down payment, and lets see who is the wrongful person here, our CEO already said yes for the payment, and he asked that we report to him some progress now and then, go ahead give me your price i will send u some indicators, and the 50% of the money, and all you gotta do is report to me the progress and you show me the results. Let's see where you skepticism take you.
I wouldn't recommend using python 3.0. It's long EOL, has a bunch of unpatched security flaws, misses out on loads of useful language features, very few 3rd party libraries will be tested on it at this point, and later versions of python 3 should be very compatible with python 3.0 code.
I will check those all out, thanks!
As a python beginner, I thought this was helpful. Maybe it’s better suited for /r/LearnPython.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [Why study programming when you can just play an RPG?](https://np.reddit.com/r/learnpython/comments/aw0au0/why_study_programming_when_you_can_just_play_an/) \#2: [Al Sweigart, author of the legendary 'Automate The Boring Stuff' book (and many others) now streams beginner-friendly live coding on twitch!](https://np.reddit.com/r/learnpython/comments/ao3zq2/al_sweigart_author_of_the_legendary_automate_the/) \#3: [Just spent 2 hours to automate joining csv files saving hundreds of hours a year](https://np.reddit.com/r/learnpython/comments/a085dx/just_spent_2_hours_to_automate_joining_csv_files/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
Do you have a test on this later? Why do you need a cheatsheet?
Pretty cool! Seems similar to [SubredditSimulator](https://www.reddit.com/r/SubredditSimulator/)!
Just plain pyinstaller and the filename.py
Thanks! Yes, the project was inspired from that subreddit. Since I couldn't find the source code I tried to recreate the complete process from scratch.
I'm using the Jupyter for class. I guess it's popular for machine learning purposes because Anaconda comes with all the necessary packages and it's easy to prototype while working with it before exporting the file as a .py file. I would rather use a real IDE, but I'm finding that the same modules are no longer found when I try it in IDLE or visual studio. I ran the below import sys for path in sys.path: print(path) and it's telling me everything is located in ...\Microsoft Visual Studio\Shared\Python36_64 Should I go through Visual Studio to install all the relevant packages I need? I'm a little confused about selecting a good IDE because the articles that describe them say one might be better for data science than another. Ideally I'd have one that's good for data science as well as general-purpose automation. &gt;maybe Visual Studio Code (note: not the same thing as Visual Studio!). I'm using the Visual Studio [Python](https://visualstudio.microsoft.com/vs/features/python/) add-on. I know Visual Studio Code is more bare-bones; is there anything that makes it better than regular VS?
thank you! This seems like it could work, if I limit it to just basic functionality (probably not enough time to cover start menus/score/etc) And thanks, I wasnt sure where to post, I will try there!
It seems to me you're using Visual Studio with some sort of a built-in Python install and not your Anaconda install. I'd try PyCharm - it can work with any Python install you have, including Anaconda.
Thanks I'll give it a shot!
Human learning machine learning
I think of dependency injection as one way to achieve dependency inversion, if that makes sense.
It ain't working man...am not able to debug it too..always getting the same error again and again
The biggest point you're missing is how are support vectors chosen to maximize margin. In short, you're missing math and/or intuition. Without that you're just looking at SVM as some magic black box classification solver.
Well the guide mentioned the math intuition behind SVM, that is, SVM is a maximal margin classifier with the goal to choose support vectors that would separate the points away from some margin that is large as possible. To me this is good enough without getting into math (i.e., forming the objective function).
I'm not sure I agree. An example of where it's used a lot is in Django, where you can configure pretty much everything from the outside (ie your config). For example, you can use the orm without knowing which database engine it is backed by. That's dependency inversion.
Why is this done via machine learning? Can I assume n-dimensional vectors?
What is your tedious process?
I cropped the image outside of the border... I'm also using this process for URL links as well. It seems that it not only has a lower confidence, but also sometimes changes. I've run my program a few times and once in awhile it will fail because the confidence is too low (and when I lower the confidence, it ends up picking something else)
Hi also, why aren't you more like your cousin? HE'S a lawyer!
You just posted on /r/slavelabor looking for someone to do this job for you... I’m guessing you are a bit price sensitive.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
It's popped, Jim
Great read. Now please write part 2. :-)
Ha thanks - yes should be in the next few weeks.
Awesome. I've never heard about dependency inversion, but after reading your post, I see clearly how bad I need it for a couple of my work projects. ;-)
I have a pro annual subscription. About 8 months left. Is that what is required or do I have to renew, anyone know?
Step 1. Provide more information.
Try to get it added here: https://github.com/vinta/awesome-python#command-line-tools
One bit of advice would be to put a little more effort into your question. Tell us what you're having trouble with. What have you tried on your own to solve it?
/r/learnpython read the sidebar google don't be lazy
My biggest problem is that I know the steps I need to do to write a program, but I have trouble remembering what to use, maybe it’s just my memory is bad but when I go to write a program I just blank.
The decision boundary and support vectors you see in the image are only learned after multiple epochs of training, i.e. machine learning. Yes, SVMs can work with n-dimensional vectors.
A big problem of mine is I know what the goal of my code needs to be but I’m awful at actually writing and remembering statements.
Try to associate everything with a physical tool, you would use a hammer to drive a nail. You don’t think much about it because you’re probably familiar with a hammer. With practice and interest you’ll get to a point where you know what you need to use through time.
From your comments it looks like the exe creator is not including all of the libraries you need. I use cx_freeze for making exe files and that I give cx_freeze a list of packages to ensure it includes because it misses them in the automatic inclusion. See: https://stackoverflow.com/a/22105547/3166424 It looks like pyinstaller has the option --hidden-import=PyAudio (or whatever the missing libraries are) might help.
Have a look into Selenium https://selenium-python.readthedocs.io/
Reading your answers just one thing comes to mind: practice. The beginnings of programming aren’t hard to learn, it just takes time. A lot of us aren’t ‘naturally’ good a programming, we just choose to put in the effort to get good at it. So my advice would be; just get going at it. Gotta do something more than once? Make a Python-script for it, just for shitz n gigglez. Once you find a way to apply it to something useful, you’ll learn soon enough.
I do this in Pandas, guessing it would work the same but not sure df.to\_csv('myDataFrame.csv') &amp;#x200B; or &amp;#x200B; pd.to\_excel('dir/myDataFrame.xlsx', sheet\_name='Sheet1')
This literally just drew a line between two groups of dots. At least show some intuitive maximizing distance / minimizing error visualization.
*Akshooally* SVMs decision boundaries are calculated as a minimisation problem and therefore not multiple epochs of training. I believe these are calculated through linear algebra techniques by optimising via the dual (although it all gets a bit complicated) in sklearn, implementation is in section 4.1 of [this paper](https://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf) if you want the maths
Default is linear using the SVC class.
I'm using pyglet and tkinter lately.
Just an ERP system (Tryton) :)
Before writing any code, break your code up into functional chunks. Like milestone steps. Each chunk takes output from the previous and feeds it into the next. Then when the idea behind each one is sufficiently well refined, write the code to do it. I find that code is less about syntax than it is about good structure.
If you're determined to get certifications for a resume I'd go a slightly different direction. Instead of Python, look for IT/sysadmin courses to verify your competency with linux, networking, hardware, etc. [A+ Hardware](https://certification.comptia.org/certifications/a) [Linux+ OS](https://certification.comptia.org/certifications/linux) [LPIC-1/2/3](https://www.lpi.org/our-certifications/lpic-1-overview)
It might be more pragmatic to use an external queue, like Redis/RabbitMQ, and subscribe to a feed to process.
That's pretty interesting. I usually render the reports using Jinja, then use Pandoc to convert my HTML into a PDF that I distribute.
You can open a file for writing using `open('filename', 'w')`, there's also a CSV module in the standard library, or you could pipe your script output from the command line: `python script.py &gt; output.txt`. Ask again in /r/learnpython
Since pypugjs/pyjade does not seems to be maintained anymore, I've just write something inspired by pug but simpler and easier to maintain: https://github.com/ducent/spenx So now, I can generate html from something more compact and integrated with Jinja2 and Mako 😀
:s/dependency inversion/inversion of control/g
Nope i posted because you are avoiding to answer me and i see that you are not skilled enough, your only skill is to open your mouth wide open and speak nonesense. Go ahead give me your offer!!! I can sense that finally you understood that your skepticism wont take you anywhere?! Right?! Good luck with your miserable skeptical life. Bye.
Fire is fine, but all of the automagic comes at a cost. You dont get good docstrings and other things I mentioned [when comparing it with Click and Plumbum](https://www.reddit.com/r/Python/comments/aa05jt/i_prefer_plumbum_for_creating_commandline/).... [Kickoff](https://python-kickoff.readthedocs.io/en/latest/#quick-start) seems to have solved most of it's issues.
Do you think it is not possible to do with asyncio's Queue? Anyway, interesting clue. (Haven't had much success with /r/learpython.)
Without knowing many more details, I would offer you $500 US for a requirements establishment session. Guessing since you are using this for a company to do forex trading that it’ll probably land within the $10,000 to $30,000 range to meet with compliance and tax requirements for securities trading. I’d be willing to do it for 75% if I get 3% for every dollar transacted under 100,000 on the platform and 1.5% on every dollar over. But I am guessing you are some Algerian scam artist, the company probably belongs to your uncle and real money isn’t something that is going to be on the table. So enjoy your /r/slavelabour mess. Or maybe you could try upwork. I think I have seen this project requested often.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Google's server, not Chrome, decides which captcha to send you.
I tend to follow "one loop per process," so sharing data between loops (like you asked) isn't something I'd really do. Copying Python objects between distinct processes can become cumbersome. Instead, I spend the time deciding what really needs shared, serialize it, and put it on a Queue. I can then write my own consumers or someone on another team can too; as long as they follow the data format you can't go wrong.
Have you looked into rmarkdown package for R. You can write python chunks of code and parameterise the whole report. Downside being you now need R aswell as python but we do this regularly and it's great
Dude share these kind of excerpts on twitter and you will get thousands of followers in no time. One cheatsheet a week is enough. Then end of the year you can sell it as a book. Thank me later.
Yes but this cheat cheat doesn't even touch on this...
Yes but this cheat cheat doesn't even touch on this...
So there's a way to do it? How could I? I think it fits very well what I need. Here's my two scripts: db\_enqueuer.py import logging from docopt import docopt logging.basicConfig(level=logging.INFO) logger = logging.getLogger(__name__) db_queue = Queue() async def enqueue_db(args): print('running db_enqueuer.py') await db_queue.put(args) if _name_ == '__main__': loop = asyncio.get_event_loop() loop.run_until_complete(enqueue_db({0:1})) &amp;#x200B; &amp;#x200B; test.py from db_enqueuer import db_queue queue = asyncio.Queue() async def enqueue_db(): d = await db_queue.get() print(d) def main(): loop = asyncio.gather(enqueue_db()) loop.run_until_complete(enqueue_db()) if _name_ == '__main__': main()
Digital Ocean https://www.digitalocean.com/
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Unless i'm mistaken, their cheapest plan is $5 a month, which would be $60 a year. I'm looking for $10 a year or less
The `print` function has a `file` keyword argument. By default, it's set to stdout (i.e. your terminal), but you can set it to a file instead. Just make sure you open the file (probably in **a**ppend mode) first. ```python with open("my_file.txt", "a") as f: print("something", file=f) ```
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Thanks! That's a good idea.
Feel free to comment if you like or dislike the project. Also don't hesitate to give a start in github if you find it useful. This way we can measure your interest and estimate how much effort we should invest in maintenance. Finally if you discovered any issues or have an improvement idea, please create an issue in github. Thanks!
It's weird your parser accepts "SUM(1;2;3)" when Excel doesn't. &amp;#x200B; Also generally if you "run" it like this, we'd call it an evaluator or interpreter, rather than just a parser.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Well you could sign up for Google, get a free year, then migrate to Amazon, get a free year...
If they’re all minimal, you could probably use the free tiers of a few cloud services, for example a t2.micro on EC2 or even something like Heroku if your DB is under 10k rows. If it’s truly just one user, would packaging the app so that the user runs it on their own computer work?
stare at it harder
A VPS for $10 a year or less that isn't a time limited free tier? You should ask for a pony while you're at it.
Bloomberg, Alpha vantage, IEX, Quandl. Depends on what you want to do? Is it for trading or for research? If you are thinking of something like algorithmic trading and high frequency trading just forget about it:))
interesting idea, but not sure how big your user base might be; I guess I'd assume that I'd run the script with a remote shell instead.
Working on a Twitter bot that parses books in Spanish using Spacy and posts meaningful sentences. Sentences are currently stored in a CSV file (I'll move that to Postgres in a nearby future). Libraries used: Tweepy and Spacy. &amp;#x200B; Just started doing automatic posts today, if you want to check it out (and know Spanish), here's a link: [https://twitter.com/TextoFraccion](https://twitter.com/TextoFraccion) &amp;#x200B; Not in Github yet, still cleaning code.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Numba sucks with strings, doesn't it? What are you trying to do?
There's gooey. CLI to Windows App - https://github.com/chriskiehl/Gooey
 [https://lowendbox.com/](https://lowendbox.com/)
The text says you can make generators in numba, not pass python generators into numba functions
Haven't actually used this one myself, but reading through the article it seems like it'd be pretty simple to implement and looks nice as well. &amp;#x200B; [https://towardsdatascience.com/visualizing-artificial-neural-networks-anns-with-just-one-line-of-code-b4233607209e](https://towardsdatascience.com/visualizing-artificial-neural-networks-anns-with-just-one-line-of-code-b4233607209e)
Hm. I thought you only have to write "print(x)" instead of "print x" now.
https://www.blackhat.com/docs/us-17/thursday/us-17-Munoz-Friday-The-13th-JSON-Attacks-wp.pdf one i quickly googled. i haven't read it completely but the main takeaway is: Do not deserialize untrusted data
Yea i'm aware of this site, I just wanted to see if anyone has a VPS they use / recommend.
From what i've researched, all the big cloud free tiers end after 1 year, and this is expected to run indefinitely. The intended use is from a mobile phone to connect to the application. I don't know if a phone can run flask / web app as i've never tried that.
On it ..
1. This SO question should help you get started on that: https://stackoverflow.com/questions/29239211/how-to-use-python-3-x-with-pythonx-y But overall the consensus is to use another library. 2. Python3 comes with a new upgraded version of pip. If youd like to keep both 2.7 and 3.x you can navigate to either versions Scripts directory and run pip there. 3. You can do this several ways. I'm not an expert by any means but I've programmed a bit for Pcs and Macs and to make it easy on myself I simply had both 2.7 and 3.x installed. Then simply rename the appropriate .exe to 2 and 3 and run python3 like you mentioned earlier. This is simple and effective although depending on which IDE you're using it could require more setup steps to keep it functioning.
Gotta go fast.
Just to increment this answer. SVM has a linear algebra solution but there is a iterative version that people still refers as SVM that aims to avoid the huge memory requirement (O(n^3) for data size if I remember correctly).