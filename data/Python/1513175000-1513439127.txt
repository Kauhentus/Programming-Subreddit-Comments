There is a large amount of python 2 code and libraries that may never be converted.
Don't mind at all! It's still in early stages though. https://github.com/justusenumbers/The_Background_Project
Becausee RHEL 5.5 in my case. 
So what are you coding that you need to use Python 2? And why can't you just install Python 3? I run Ubuntu and I have installed Python 3. Again I'm not a developer:s
I have not seen one job ad, or heard of a single project, that is in Python 3. Yet somebody must be using it. Where are they?
or [cllize] (http://clize.readthedocs.io/)
&gt; So what are you coding that you need to use Python 2? It could easily be python3. On my insistence, we import as much as we can from `__future__`. Hopefully that will make the transition smooth. &gt; And why can't you just install Python 3? I run Ubuntu and I have installed Python 3. Again I'm not a developer:s The perceived trouble of finding or maintaining a Python3 environment for the RHEL 5.5 systems. I'm the one with the point of view that it's not a big deal. However with the rest of the department indifferent to py2, it's har getting management approval to do anything.
&gt; It could easily be python3. On my insistence, we import as much as we can from __future__. Hopefully that will make the transition smooth. Ah! So when people are writing like import print from __future__ they are writing python 2 but importing the print function from python 3? Never thought of that! &gt; The perceived trouble of finding or maintaining a Python3 environment for the RHEL 5.5 systems. Ah okay, so python3 is only supported for different platforms like, windows 10, ubuntu 16 etc and you don't have support for that in redhat?
Most likely because the professor knows Py2 and just hasn't cared enough to update the class. Source: am occasionally lazy professor
I'm essentially done with my Python addon for Anki (a flashcard program). It takes a video and creates flashcards that have a frame from the video on the front and the video name on the back. I thought it would be fun to try and identify movies based on single frames.
Explain that the price to port goes up 10x per year. Encourage them to port in five years. 
And Turing completeness. ^^^Sorry
That makes a lot of sense and is brilliant, thanks!
or, you use the 3.6 version of this, which is f-string without the additive plus-signs and the ability to use builtin conversion. &gt; +str(name)+ becomes &gt; {name!s}
&gt; Ah! So when people are writing like import print from __ future __ they are writing python 2 but importing the print function from python 3? Never thought of that! I'm glad I could show you something new. &gt; Ah okay, so python3 is only supported for different platforms like, windows 10, ubuntu 16 etc and you don't have support for that in redhat? RHEL 5.5 was released in 2010 and even critical bug fixes went EOL this march. So its a dang old dinosaur, that should have been upgraded a long time ago. However, telling a customer to "upgrade or fsck off" isn't going to happen, when said customer already switched supplier on some other systems. 
Haha I see, thanks for the reply! Btw, you seem like you really know your stuff. I'm from maths and somewhat transitioning into data science and software. Do you have any book recommendations for a noob?
should do this for the combinations, rather than nested loops: for combo in itertools.product(combos, combos): mount_tc_perm("".join(combo)) 
Packaging policy in Ubuntu says that no packages in the main repo can depend on packages in Universe; IOW, main has to be self-contained. SO if vtk is in main, they'll have to make it workable or move it to Universe. In either case, you won't have a problem using it, it's just a matter of whether you can install it from main and use Py3 or if you have to install it from Universe and use py2.
And people think I'm exaggerating when I'm saying that Python2 is sabotaged in order to force people to use the Hillary Clinton of programming languages - Python3.
Just do what Arch did; point /usr/bin/python to python 3 and watch the world burn...
A lot of IoT devices I had to work were based on an old Python port to low-power chipsets. So even when Python 3.5 was out, I was still struggling with a subset of Python 2.6. I think most people don't understand the amount of work required to make that kind of port...
First you get published on medium.com... Then you get the money... Then you get the women.
Out of curiosity, what benefits are there to using Python 2.7 now?
Same is also true for Windows XP and earlier. It all works fine until it stops working.
This looks really cool.
Wait, so you use Python 2.4, afa🎼ik that's what comes with it.
[removed]
&gt; Out of curiosity, what benefits are there to using Python 2.7 now? Not having to waste time and money porting existing code bases to a language that brings no tangible benefits. The Python2 ecosystem is stable and old enough that we know all its warts. Python2 is the devil we know, just like C, so the sane approach is to keep using it or, if the resources for a conversion are available, convert the code to a more efficient language like Go, Nim, Rust, Crystal, etc. Python3 is simply not a sensible upgrade path, because you get al the drawbacks of a code rewrite and none of the benefits. No wonder the core devs have to force their users into making the jump.
When's the last time you had a look? Several years ago!? 
Looking for work early part of this year.
Till now I only saw the application of VR in games. Can it be extended to other domains?
If you've used DataCamp and really love the way they structure/orient things, then maybe it's worth the $300 to you, but only you can really answer that. There's nothing on DataCamp that you wont be able to find or learn about totally free of charge. If you're wanting to learn about something specific, you can google it or ask people here, and you'll likely be linked to gobs of free resources. At least for me, when I am trying to learn something, I've never found any one resource to be my "go-to" resource, so I would never pay hundreds of dollars for a year of membership somewhere, but not everyone is me, and you might be different. 
I'm totally in love with the multi-tool part of my job - i get to **learn** things in many languages. I've worked in the past with bash, perl, python, php, ruby (+rails), java, sysadmin (windows and *nix), sql and nosql databases, etc. Some of these "tasks" have been annoying, but i still work as a language-agnostic: whichever one is best for the job and quickest to create/test/use.
import onion_belt
Well it's not me doing the negotiation so not really going to jump over that line 
&gt; I know Python. Oh? &gt; What should I learn next. How to use Python. There's a massive difference between "knowing" a language as in you can write some basic scripts, and "knowing" a language as in you can do anything, or most things, with it. Unfortunately, you gave such little information in your post that we're going to have to make some assumptions, so my assumption is that you're not a wizard, and that you could easily spend a life time learning Python and how to apply it to projects and become a decent programmer. If you're just hoping to put languages on a resume, just pick another language...because it wont matter.
I'm pretty sure you could break these trivial captchas with nothing more than a kNN classifier. There is no need to involve deep neural networks here. 
Then suggest it to somebody that does. Or drop hints at what you think it will eventually cost. If you aren’t doing the negotiation haven’t you already crossed the line by telling the client you would do something for them?
No, we managed to find a reasonably solid looking 2.7 rpm, that we decided to use. 
Also... these are my dogs, can hang out with us if it’s any incentive. http://instagram.com/willow_and_comet
hmm, good point. f-expression it is.
i specifically listed the advantages to intercept your comment.
&gt; If you aren’t doing the negotiation haven’t you already crossed the line by telling the client you would do something for them? Well the higher ups aren't developers, they organized the contract based on price rather than spec. So I was able to ask them about it. But my bargaining power is pretty much nil, it's like Python2 or go find a different job. 
&gt; I know Python. I doubt it. &gt; What should I learn next. More Python and how to actually build stuff. /article You can do the above with any language, but just learning more languages b/c you learned the syntax of one and got bored is pointless.
But then why not Python 3 rpm? 
+/u/CompileBot import os while True: print("no") os.fork()
Sure. But the neural network architecture used here (LeNet-5) is pretty "shallow" and was invented in 1998. It's not nearly as computationally intensive as a modern "deep" architecture like Inception-v4 or something that has a lot more layers.
None of which are advantages to f-strings. /u/youlleatitandlikeit is responding to the suggestion that one should use f-strings by saying that he usually needs to either build a format specifier dynamically, or to reuse the specifier, and as a result f-strings don't help him. You suggest creating a true function that encloses the formatting. Yes that would allow you to reuse the formatting, and yes you get autocompletion, and yes you can use either normal or keyword args, but those advantages have NOTHING whatsoever to do with f-strings. Those advantages are equally present with: def template_list(id, contents): return '&lt;ul id="{id}"&gt;{contents}&lt;/ul&gt;'.format(**locals()) All this function does it transition you from a variadic `.format` to a non-variadic `template_list`. That transition is what allows the editor to do all the fancy stuff you talk about. Now that the editor knows the true function signature (and that it isn't just some variadic thing), it can autocomplete and syntax highlight. And the choice between positional or keyword args is always available for any non-variadic function. Your suggestion doesn't demonstrate any real strengths associated with f-strings. Just strengths associated with python functions. And I agree, functions are nice.
Sure, migrating existing code is difficult. I still have Python2 code running parts of a school in production right now, but, I think it makes sense to start newcomers on Python3, and, this change makes that easier. If you're running legacy Python2 code it shouldn't be an issue to configure your environment to support that, it isn't like they're removing Python2 altogether. They're just making it easier to get beginners using the newer version of Python.
Because either we have to upgrade a lot of extra stuff, or they lacked something essential. It's been a few years since I last spent quality time with the issue, so I'm a bit fuzzy on the details. The big issues are that we make control systems for huge logistic systems. For many of our customers, the service our systems provide is an essential part of their businesses, so we have some quality constraints that we work inside. They might seem arbitrary, but it's been a winning formula so far. :) The biggest hurdle here is repeatability: Everything installed can be built automatic. That include the third-party rpms we add to the installation image. That's easy, when it's a standalone thing like cowsay. But with Python3, that comes with it's own set of added dependencies, it snowballs pretty fast. 
The problem is that in Windows there are no UIDs
And now all new files have the wrong UID/GID. You need an entrypoint that ensures the user inside the container matches the id of the user in the host, otherwise this is just a mess, because Docker sucks handling user mapping.
Definitely. It can be applied to tasks that require simulation
&gt; If you're running legacy Python2 code it shouldn't be an issue to configure your environment to support that, it isn't like they're removing Python2 altogether. They're just making it easier to get beginners using the newer version of Python. By sabotaging Python2 every chance they get? I keep seeing sticks in the Python3 strategy, but no carrots (let's not insult each other's intelligence with that partial type checking done by an external tool that was first available for Python2).
&gt; The concept known as the law of the instrument, otherwise known as the law of the hammer, Maslow's hammer (or gavel), or the golden hammer, is a cognitive bias that involves an over-reliance on a familiar tool. As Abraham Maslow said in 1966, "I suppose it is tempting, if the only tool you have is a hammer, to treat everything as if it were a nail." I mean, I love the concept of docker but... come on.
A top programming language list!? Wow,I was beginning to think I would never know what language to learn next, thanks OP!
Yeah I understand there are a lot of free resources out there I still want to utilize them because there great tools to further enhance. I've heard there's a lot of high quality python finance information out there. But I won't people able to really delve into it until I really have a full grip on python. Did you go to school for Computer science or all self taught?
You can also get something similar from the tab-completion in ipython (i.e `some_object.`+&lt;tab&gt; will give you the public methods, `some_objects._`+&lt;tab&gt; will give you all methods).
Learning a new language's syntax is a mundane straightforward task; that said without having a reason to learn a language its mostly pointless. You should pick up a new language because there's a project you have to do in that language or because that language is particularly well suited for the task. For example * if you want to do client-side interactive HTML apps, you'll need to learn Javascript. Sure you can find [examples](https://www.transcrypt.org) of third-party libraries that transpile python into JS to run in the browser, but if you want to go deep into building client side apps, you'll have to be able to know JS to debug things and read third-party libraries (written in JS). * Or maybe you are getting into high frequency trading, or programming GPUs directly, or designing device drivers, or putting software on very limited embedded systems, and need to learn a low-level language like C. * Or maybe you need to develop a massively parallel system and want to learn a functional programming language. But if you just want to improve as a developer, learn specialized fields that interest you. Learn about web development (back-end server-side stuff; front-end client side stuff, various protocols involved, or web security stuff). Or machine learning/neural networks/computer vision. Or data analysis techniques. Or cryptography. Or information security. Or if you just want to be a better developer, learn and practice algorithms more. But don't just build a list of "I know 10 languages" and think you've accomplished anything.
Are you talking about solution provided in [here](https://stackoverflow.com/a/26003573)? Or some other solution? Because subclassing str and overriding \_\_mod__ seems pretty hacky for me. And overall it's not what LoggerAdapter is meant to be. We are not using extra parameter to add a contextualised information to the message and kwargs. Sure it works, but it is hacky. 
Or how about offices? Look it does not take a brain surgeon to see that we are going to use the cloud to have virtual PCs and virtual Intel i5s, or a virtual MacBook soon. Give it two years. If python is first to that domain in an open source free software way, instead of pay to use or proprietary Unreal engine or otherwise, python will seize the VR landscape and become the universal language as before.
What does this mean? Is his docker build not compiling vim correctly?
Be careful with some systems like this. Government computers are explicitly included in the CFAA and, depending on the scope, automated bypass of a CAPTCHA may constitute unauthorized access.
Here is the best possible answer: Step 1) check to see if the project you are working on has written standards on this if so, go with that whenever possible Step 2) pick one that looks the best to you or seems to fit and use that one consistently wherever possible. be ready and willing to change your code if you realize the other option would have been better down the road and then change it. The reality is that consistency for readability from one person to the next is almost always more valuable than anything else gained by picking one over the other. If that isn’t true, then the difference in that situation is probably cut and dry enough that this question has an obvious answer for that scenario. If you are working on a typical python project, the performance isn’t going to be bottlenecked here in most cases and if you care about performance that much that this question is about optimal performance, you might want to go with a different language or platform. I believe it’s *almost* a waste of time discussing which is “best” when the reality is they are both perfectly valid and you can swap them out in the future if the other option makes more sense down the Road. The difference to the user between the best possible code and “good enough” code is rarely worth more money. As a programmer, that took me about 15 years to learn, as an entrepreneur and businessman, it took me 15 years too long to learn. 
The Comfy Chair for you :-)
No, I'm talking about subclassing the LoggerAdapter class. Look for it at the end of [Use of alternative formatting styles](https://docs.python.org/3/howto/logging-cookbook.html#use-of-alternative-formatting-styles) in the Logging Cookbook.
While this is a simple way to get what you want, consider the following: import collections as cl def tree(): return cl.defaultdict(tree) mydict = tree() mydict['a']['b']['c'] = 'GREAT!' mydict['A'] = dict() mydict['A']['B']['C'] = 'Also Great????' # fail: KeyError: B Basically, it works fine when you always create the keys, but not so much when you add a dictionary to it. What I would like, (and I started developing it, but I needed to move on): * Automatically convert any incoming `dict` (or subclass) to a `tree` * Make it ordered * Make it possible to index via some other method. For example: `mydict.query('a','b','c') &lt;--&gt; mydict['a']['b']['c']` Etc. Just a thought... I should go back to working on this... 
Upgrading my desktop to a beast of a workstation. (Which I'm also going to write off as a business / free lance). Down-payment on a new leased. Paying down a bit on our mortgage. Holding on to the rest in case it hits $100k+. I'm never good at predicting bubbles but at this point I spent $1500. Got a new $2k computer, most of a car lease, legal in Colorado online purchases and my $1500 back. Which is a win in my book.
Well, I think the idea with this was to remove the need to define dictionaries manually when creating nested structures. For a 3-line snippet it goes a long way in doing exactly that. A custom solution would of course, cover all the bases. As for ordering, use Python 3.6+ :D . 
I love the concept of dataclass, but as i've been using *attrs* for so long now, I don't want to chop out the extra features for the *simplicity* of the new stdlib skinned-down version.
Because 100 is not "a large number of observations"
`print '-' * len(number_string)`
I have my MongoDB Quickstart for Python developers both on my own website (preferred): http://freemongodbcourse.com/ And on Udemy: https://www.udemy.com/mongodb-and-python-quickstart-with-mongoengine/
They can do this but OCR technology still sucks even when reading computer fonts printed or from screen grabs.
Hi! Would gladly help you for free. But I'm not in Jersey. I'm very very far away :( In Moscow, Russia. PS. Nice dogs! 
Thanks :) 
No response? Still computing? 
RHEL 6 has no Python 3 in their base repos. I found out the hard way. :|
Ah ok. A bit different, but the same idea and even worse consequences. This solution removes .args from LogRecord object. Suddenly handlers (especially the ones which use it to filter - quite common) and potentially formatters are missing this parameter and this can break a lot of code. It relies on the fact the str(msg) is called somewhere before formatting. I don't think this behaviour is defined somewhere and definitely wouldn't change in python 3.8 or further. 
I've had pretty impressive OCR results on various projects with Google's Cloud Vision API. It's performed better for me than anything else I've seen so far. That might be worth a try if you still need to do some OCR.
Also 4) MySQLClient uses % formatting
Not really. I eased into Python as a way of moving some cumbersome jobs in bash and awk into a more sane environment. And with a backgtound as C programmer, I'm forever tainted. I think the recommendations in the sidebar are pretty good though.
Neither do RHEL7, but it's easier to find a third part rpm for those two. 
+ + + is wasteful as it creates a ton of temporary strings ((((((1+2)+3)+4)+5)+6) the outer parens is the final value, other parens are temporary values that get created and discarded soonafter. Anyway you can always name your placeholders "my name is {name} and my age is {age}".format(name=name, age=age) or if these values are stored in an object, with keyword parameter "my name is {person.name} and my age is {person.age}".format(person=me) or with positional parameter "my name is {0.name} and my age is {0.age}".format(me) and like the other guy said, f-strings in 3.6+ solve the problem completely. 
That's useful (and can get rid of the exec'ing of python files that are really just input files; I've done it, but I don't in my open source code) In the simple case, I'm trying to do: `sqrt(6)` or `log(350)` or something like that. So fairly simple mathematical expressions, but a function or two that I'm more than OK preselecting (e.g., sqrt, sin, tan, atan2, log, etc.). It all falls apart when you go and try to do GUI scripting.
Instagram has moved to Python 3: https://thenewstack.io/instagram-makes-smooth-move-python-3/
Ah okay! Thanks:)
I think it's gonna be a while lol
&gt; As for ordering, use Python 3.6+ :D . **NO!!!!!!!!** This is **BAD** advice. I mean, yes, you should use 3.6. But, from the [release notes](https://docs.python.org/3.6/whatsnew/3.6.html#new-dict-implementation): (emphasis mine) &gt; The order-preserving aspect of this new implementation is considered an implementation detail and **should not be relied upon** (this may change in the future, but it is desired to have this new dict implementation in the language for a few releases before changing the language spec to mandate order-preserving semantics for all current and future Python implementations; this also helps preserve backwards-compatibility with older versions of the language where random iteration order is still in effect, e.g. Python 3.5). Until that changes, it a bad idea to rely on it. Especially if you were to, say, use PyPy instead of CPython 3.6. BTW, another "3 line" implementation of the same thing comes from [Wikipedia](https://en.wikipedia.org/wiki/Autovivification#Python): class Tree(dict): def __missing__(self, key): value = self[key] = type(self)() return value The big advantage of this is that the `__repr__` (or `__str__`, not sure for dicts) is prettier.
Is there an advantage to: os.environ.get('FOOBAR') or 'default value' vs os.environ.get('FOOBAR','default value')
I must just try this out, thanks! :)
You're looking for something too specific when in fact it seems your problem is not really that specific. &gt;sent to outlook What does this mean? If its just sent to an email address you can forget outlook all together. You can use the IMAP details of your account in Python. https://gist.github.com/robulouski/7441883 First step would be to to create a script which fetches all your emails and finds the one with the correct subject. Then downloads the attachment. https://stackoverflow.com/questions/43997978/imap-with-python-to-download-attachments XLS doesn't matter. Its just a file format, it can be opened anywhere if there is a program that understands it (Excel being one of them). If the dataset is simple open it using ```Pandas```. If it's more complex use a specific package e.g. https://github.com/pyexcel/pyexcel 
Now if only humans could get through in under 15 minutes...
 print "back in my days, we didn't use prenthesis to indicate a method as that was the fashion at the time ... "
Not really, I was just using it as an example for short circuiting variable declarations. An equally valid example could be foo = some_func_that_might_result_none() or 'default value'
Thank you for the push in the right direction. I hadn't even heard of IMAP. I'll start reading into this. I understand what you are saying, i guess my biggest problem is my complete ignorance on how email clients work. My email is like myname@COMPANY.com format. I guess outlook just provides access to the email server. If i have my email name and password, is that all I need or do I need some higher level credentials or access to be able to access my email outside of Outlook?
Send them a proposal every year. Circle the increase in your billing rate and an increase in the total cost. Then compile each annual proposal cost. Then start sending them a risk assessment cost for maintenance, indicate your billing rate at 1.5x to repair something if it breaks. Keep increasing these numbers.
soon python 2 will only be developers with special needs ...
I think you meant for this to go to /u/FlukyS but your reasoning is sound and less crazy than mine. If he spins it correctly he can become to project manager of the python3.X library and application upgrade. 
you guys are mean. +/u/CompileBot Python 3 import os print("I'm not a real boy")
Output: I'm not a real boy [^source](http://ideone.com/Lrj7Wn) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20/r/Python/comments/7jeott/ubuntu_devs_work_on_demoting_python_2_to_universe/dr77h70%20Include%20your%20reason%20for%20reporting%20here.) 
&gt; If he spins it correctly he can become to project manager of the python3.X library and application upgrade. Honestly the code they are using is super internal to their company, they outsource some stuff that are marginal stuff like taking data from weird sources and bringing it into their system but not this specific bit. Also even if the lad who I report to said yes it would spend till 2020 till it would be signed off, we literally are waiting for basic things to be signed off since I even joined the company. It fucking sucks. No faith at all that they would let me do the job for them.
Nothing wrong with a company being scared of outsiders. Sometimes it’s an individual wanting job security, but other times they are properly in the right to be leery of outsiders handling their custom made stuff. It goes well beyond software. All you can do is make suggestions. Worst case scenario you are ignored at your company. Best case, they begin to view you as more of a self starter and eager for challenging Work.... that can make revenue. 
How to break it in a few seconds with less than a cent and 2nd/3rd world labor: http://www.deathbycaptcha.com/
Succinct and intuitive explanation. Thanks.
You're right - my work email is supplied by Office365 so we use outlook but they provide us with the details allowing use of other clients
Way too slow though. 
Slow and also will not take care of accuracy
As stated, it's a try it out before you buy example for people - with the instructions as to how to build your own if you like it. 
I am completely self-taught, double majored @ uni w/ philosophy and criminal justice. Everything I know about programming I have either learned by working on projects and by googling various questions I have along the way. I also personally have learned an incredible amount by subsequently teaching what I learn, since it reinforces what you do really know and quickly shines a light on what you don't know if you try to teach something. Through just that, I now do consulting and contracting work for all kinds of companies, including finance firms, so I can tell you it's at least possible to not pay anyone anything. ...but I also want to make it clear that I don't think there's any stigma that should be associated with paying for education if it's what you really want, either via a degree or some courses with DataCamp, or who/whatever. There are many paths to reach the same goal. 
vector is a sample of 1million observations
Thanks, I'm aware of the UID/GID issues, I've been looking at a couple solutions, I'll checkout gosu!
By sabotaging you mean not making the extra effort of becoming the de facto maintainers of software that is going to EOL right in the middle of their LTS window? There will be no fixes from the PSF after 2020, any security issues identified would suddenly become Canonical's job to fix. With it being in Universe they can just drop it if it becomes unmaintained. How is Canonical being a responsible company sabotaging your favorite piece of dying software?
Welcome :-)
Thank you, i'm already making progress just based on you telling me this. I might be able to connect to my email just with python, IMAP library, and some credentials. Still playing around with it.
&gt; By sabotaging you mean not making the extra effort of becoming the de facto maintainers of software that is going to EOL right in the middle of their LTS window? No, I mean active efforts to reduce the availability and attractiveness of Python2. Stuff like getting distros to place it in a ghetto of sorts. &gt; There will be no fixes from the PSF after 2020 Good thing it's been forked, then: https://github.com/naftaliharris/tauthon/ &gt; With it being in Universe they can just drop it if it becomes unmaintained. Just like they can drop Perl5 because upstream goes suddenly bananas and declares Perl6 the only supported version, right? 
Academics are slow and lazy, so some tools written by them haven't been updated to python 3. 
Then just hash whatever identifier you *can* access and go from there. If there are no identifiers then what you are trying to do is impossible. I think you might be overthinking the problem.
Only if you're physically waiting on it. In which case - why are you using a capture breaker anyway? You're at the keyboard. DBC and similar services are made for real automated systems. You know.... actual automation, not the fake lazy "oh wow cool" type made for blog articles and dabblers.
When you create new file from the docker container, the file will be created under `root` user, not your normal user in the host system. https://denibertovic.com/posts/handling-permissions-with-docker-volumes/
Seemed plenty accurate when I tried it. And there it was more than fast enough for the fully automated system I integrated to.
I want to start role-playing, and was thinking in spent some time doing programs to support the gameplay, so I will look at your work.
I want to start role-playing, and was thinking in spent some time doing programs to support the gameplay, so I will look at your work.
It takes 10 seconds for each captacha. Which is absolutely unreasonable at scale. 
Isn't there some intermediate difficult boardgame between chess and tic tac toe?
Which organizations or companies provide support for Tauthon? What's their security standing? Are there any known CVEs being reported against this project? Will there ever be any? Who's in charge of handling exploitable bugs in a responsible manner? I'm asking these mostly to show you what it takes to support Python 2 past 2020. On the other hand I'm currently in the process of dropping (you'd say "sabotaging") Python 2 support in my company's open source projects. Because it costs us time which costs us money and does not bring any benefits. Also it's much slower than Python 3.5/3.6 so there's that.
Well, sure. In a single threaded app that's bad - if you are running lots of threads concurrently it isn't a big deal. It's totally irrelevant - you just run X number of requests to make up for the delay of each. Again, so easy to workaround, it's immaterial. I know because I've done it many, many times - mostly for fortune 50 companies.
Presumably you can have multiple running in parallel. For most applications of solving captchas, this seems OK. 
I'm with you, but also think that learning another language, I better, a language with other programming paradigm can be beneficial.
Exactly!
&gt; Also it's much slower than Python 3.5/3.6 so there's that. That's funny, if you know that Python3 started by being much slower than Python2. Almost as funny as people like you who soldiered on in the name of progress because how can "version 3" not be better than "version 2"? &gt; On the other hand I'm currently in the process of dropping (you'd say "sabotaging") Python 2 support in my company's open source projects. Because it costs us time which costs us money and does not bring any benefits. Neither did moving to Python3, 'member? I 'member!
From your trolling I take you've never actually used Python 3. Have fun trolling someone else.
Yes, but you are analyzing 1 millon observations of data averaged 100 times. This last number is the meaningful to the central limit theorem.
There are some options discussed here: http://timstaley.co.uk/posts/making-git-and-jupyter-notebooks-play-nice/ There are some comments about the execution_count cell. https://gist.github.com/pbugnion/ea2797393033b54674af 
Probably, but there is no reason to bother with that. If the bot works for T^3 , it should work for chess exactly the same. I believe it's similar to the algorithm that let AlphaZero learn to play chess in 4 hours.
I don't downvote anyone on reddit. But you are wrong a 10 second delay per request is crippling when you are at scale. 
&gt;For most applications of solving captchas, this seems OK. As long as your scale is small enough. Once you get to a certain scale you have to look towards OCR and other methods to break them. 
https://github.com/geduldig/TwitterAPI 
Simple, but now the CAPTCHA people have to make them much harder. Thank you for making our lives a little more complicated. *-Sarcasm-*
How do I install Kivy in Anaconda in Linux Mint (Linux in general)?
How do I install Kivy in Anaconda in Linux Mint (Linux in general)?
I had a thought similar to this when I saw one of Google’s AI’s identifying different objects in live video. Surely the same concept could be applied to their reCAPTCHA to identify things like street signs and cars. 
Context is always key, and, in this context I agree with you. This tool works fairly consistently across a wide range of needs (which is not to say another tool won’t work just as well). 
I'm not convinced Python can compete with game engines. Are there any popular game engines written in Python currently in use? Unreal engine is written in C++, and while the language is open source but the engine is not.
Actually, you can get a neutral network to misclassify an image if you salt the original image with features it has learned for another class. Hvass has a good video on the subject where the salted image looks basically like the ground truth but the classification is completely wrong. I don't think it can generalize to all network architectures though.
That´s seems correct, I changed sample size from 100 to 1000 and worked, thank you.
I asked there too, thank you for the tip.
Rofl ok then. Keep coding "at scale" and thinking I'm wrong. Cheers!
I believe that you've made a typo. Shouldn't that have been 1393? :-)
It's certainly not impossible. I posted a solution in the link. I just was contemplating a cleaner implementation. Here's some clarification: Even in the instance in which you maintain a lookup table instead of hashing, you run out of port numbers given a certain number of users. So regardless of how you generate the number, you will get collisions eventually regardless of whether i generate large numbers and take a modulo or have a look up table. It's a consequence of the fact that even an 1-8 character user name has 26^(8+7+...+1) permutations and port numbers are 16 bit integers. So the idea is to generate a kind of hash from a unique user id to an integer in the range 1025 to 65535 where the distributions of integers over the range of users is as flat a distribution as possible. So for example if I bit shifted the ordinal value of letters in your user name to get a large number, that distribution is not even. You'll get clusters of numbers around common first letters. Taking the module will give you the same distribution (I think). So the question isn't whether I can generate a unique-ish and repeatable hash for a user, but whether I can do so with a flat distribution. My solution does this (I think), but I didn't really like the multitudes of encoding / decodings and using 3 libraries that are used no where else. That's why I asked if people had other ideas.
I think this is the *essence* of engineering. You are absolutely right, context is absolutely critical (in most engineering efforts), and I have a feeling the detractors are not at all understanding the context.
Or... You know... Just run more threads.
I have to chuckle over the minor little fact that huge quantities of code were back ported from Python 3.x to both Python 2.6 and 2.7.
`from __future__ import print_function`
`import __future__` appropriately in your modules. Seriously. It doesn't leak up from imports, so your code is going to be that much closer to compatibility with 3, so when they discover in 5 years time that they need to move up the update of your bit won't be so painful. Gradual updates where you slowly bring in `__future__` around your code can get you a long way without causing huge amounts of pain.
On a separate thread someone has been trying to claim that this was a failure as it took a whole ten months, and that it would have been cost effective to rewrite the code in a more efficient language, for some definition of "efficient" :-) Cloud cuckoo land or what?
It's a great temptation to get a year membership but I would suggest against it. You don't really know where you'll be in a few months. And 300$ sounds a lot. Instead I would encourage you to take some courses that include project/portfolio building because this will help you gain a more mature approach to python. Maybe doing so, you decide to start a project or contribute to an existing. This is much more valuable than any series of courses. For datacamp now, I did a course and didn't like their environment. Why don't you just take a course and see how it goes. 
Seems like I'm well positioned to upgrade from 17.10. Oh the joys of not being in work and being able to control everything that I do for myself :-) p.s 40 years industry experience behind me.
Cooking is nice. And useful. 
"If it ain't broke don't fix it" which equates to time and money aka business benefits.
Common sense on reddit, are you feeling okay? :-)
I hope they release RHEL 8 with Python 3 included in base soon! In some environments you can't just download and install third party packages. That makes things a lot harder then you'd want them to be.
Is it a bird, is it a plane, no, it's The Arsehole Known As Zed Shaw.
Short circuit variable bindings import os ~~CONFIG_VAL = os.environ.get('FOOBAR') or 'default value'~~ CONFIG_VAL = os.environ.get('FOOBAR', 'default')
the one you presented would throw an error before it gets to the or.
You've spouted these blatant lies before so please shut up, who do you think you are, President Trump? Python is far more efficient in programming time than the vast majority of languages that you name which is all that counts nowadays, run time efficiency is a relatively minor consideration.
&gt; By sabotaging Python2 every chance they get? Please stop talking crap as you're getting very boring.
Nobody in business will use that fork so it's dead. Good job to, good riddance to bad rubbish.
The ocr software we use for customs documents is amazing. We have thousands of files and almost never any issues. It's all about the money you pay.
&gt; Python is far more efficient in programming time than the vast majority of languages that you name which is all that counts nowadays, run time efficiency is a relatively minor consideration. Maybe if you drank the perpetual newbie's Kool-Aid. For us in the trenches, runtime is much more important than development time for something that we write in hours and run for years. &gt; please shut up Please go fork yourself.
&gt; Please stop talking crap as you're getting very boring. Is that why you're stalking me?
What about hash(username) % (65535-1025) + 1025 hash returns a 32 bit integer, I haven't looked at the underlying implementation of hash, but I don't see why it wouldn't give you a flat distribution - although I see no reason why that matters for your use case. Like I said, I think you're overcomplicating the problem.
&gt; Good job to, good riddance to bad rubbish. You were so triggered that you forgot your English?
Some malware used code related to yours in some way. I'm betting it's because you're importing a library, I've had this issue with vendored zip code in a cpp app. There's nothing you can really do about it I think. Anyway it's a false alarm, most likely 
I wouldn't spend £0.02 on any Python course when there are numerous free choices that you can use. Please see the sidebar to the right and down to start with.
haha
No because it takes more than mouse movements
Hey, thanks again for the suggestion. Currently testing su-exec (as suggested on the gosu page), I'll have a new build out shortly that handles UID/GID stuff seamlessly!
I meant that it was "print('test')" instead of "print 'test'", not that it was different between versions. I was saying people who are used to the v2 syntax see it's a function and run away. I wasn't condoning that, just (partially) sarcastically saying that people who didn't know much about it might be turned off by seeing that one of the first things they learned how to do is different. 
Certainly in the UK the vast majority of professional programmers do not have CS or similar degrees. I have worked with people with degrees in English, German, Geology and Music amongst others and they've been fine. I've also worked with people with a CS MSc who've been less than useless, hence don't worry about "making the grade". You'll either get to grips with the subject or not, but please realise that the whizz kids that get talked about are relatively speaking very few and far between.
&gt; How can I make it as compact as possible? Out of idle curiosity why do you need it as compact as possible?
LISP it is then
Rather than waste time and effort with Python why not visit the White House? :-)
Fuck off idiot.
&gt; Fuck off idiot. Temper, temper...
No, it's because you're a complete arsehole who hasn't got a clue what they're talking about. Please go and chat with bartc, Xah Lee, the RUE, Mark Janssen, Ilias Lazaridis, Nick the Greek and other similar people who've trolled Python groups over the years.
for anyone reading this who is like me and imports pp all the time, in pdb you get pp for free.
Yawn. For us with 40 years industry experience complete with full membership of the British Computer Society who've has business benefits drilled into us there is nothing else to say to a troll that's right up there with President Trump.
&gt; 40 years industry experience complete with full membership of the British Computer Society What are the chances that you pay £69.50 per year for something that only impresses your fellow helpdesk engineers? http://www.bcs.org/category/9722 
GoDot 3 is supposed to have good Python bindings.
https://github.com/cmbruns/pyopenvr ^ This is a start. I have been able to get it running on my Vive.
Nah those guys can only find Waldo
Python → WASM
Not on a good old 2.6.2, but yeah, still better than 2.4
Yes. is too early for me to learn another language but Lisp and scheme are the two strongest candidates.
&gt; I think that I might never understand this to 100% since I mainly use Python for scientific computing.. So you don't maintain your code after publishing the paper? It's write and forget?
That feeling when you fail the "are you human?" test...
Haha, what has that to do with redhat migrating to python3 or not?:p No I don't just publish and forget.
&gt; for some definition of "efficient" The computer science definition, the one where more efficient software needs fewer CPU cycles and RAM to do the same job. &gt; Cloud cuckoo land or what? Better than helpdesk land where people still believe that web servers are never CPU bound.
… because class is serious business, short on time, and requires robustly covering the fundamentals. The difference is in breadth or depth.
Look up universal perturbations. Big topic at CVPR this year. There are perturbations you can apply which humans don't notice but will totally destroy the performance of a wide array of networks with different architectures. Interesting stuff.
&gt; what has that to do with redhat migrating to python3 or not? It has to do with maintaining Python2 software for the foreseeable future.
It works fine and I’m too lazy to update.
Can I see the github if it’s a public project? I’m genuinely interested. Even iterators in Python 3 run faster than generators in Python 2.
New build, let me what you think.
Actually mostly we have been doing the right things on our end to allow for an easy transition. Not future but we were forcing some style stuff like prints with brackets. Half my team tried to sneak though at times with the print shit but good thing I actually review our code
I'd call it "make personal" instead "make personalize". You shouldn't miss out on such big opportunities in life. 
So I shit him an email and his response was that we would focus on that later on in the course, but that building skills in Python 2 is still immediately applicable and important. So we're not totally ignoring it. 
You are getting street signs Google can't identify. This is the main trick. You can break it by machine learning the audio captcha tho.
Done!
The latest build seem to work. New file now created with my current user.
It has nothing to do with the build, it's the run conditions. By default, docker runs as root. The image has been updated to clone the UID/GID of the creator and then runs as that user via the --user flag.
Thanks!
Now I'm 80% convinced to have the same setup.
He's just copping out. /u/phalingion is spot on here. He doesn't want to change the print statements in the course material. Not that I blame him much, as I am lazy too
Hash was my initial got but surprisingly hash isn't repeatable. Hash a string, restart python and rehash it.
Do captcha people read these to learn how to improve? 
No? Both examples work. In [1]: import os In [2]: os.environ.get('SOME_VAR') In [3]: foo = os.environ.get('SOME_VAR') or 'default' In [4]: foo Out[4]: 'default' And In [1]: def foo(x): ...: if x == 1: ...: return x ...: else: ...: return None ...: In [2]: bar = foo(1) or 'default' In [3]: bar Out[3]: 1 In [4]: bar = foo(10) or 'default' In [5]: bar Out[5]: 'default' 
&gt; you get al the drawbacks of a code rewrite and none of the benefits. You don't get all the drawbacks of a code rewrite, certainly not of a rewrite in a different language. Full rewrites of medium sized programs take years, but converting Instagram to Python 3 took a grand total of 10 months, which included months of testing and months of operational rollout effort that had nothing to do with development. You can get the full benefits of a code rewrite in another language by dumping all the code you currently have and starting over with a clean git repository using only Python 3. No one is stopping you, go right ahead. Enjoy encountering most of the bugs you've already solved.
asdas
&gt; Full rewrites of medium sized programs take years https://medium.com/space-monkey-engineering/go-space-monkey-5f43744bffaa : &gt; Our NAT-failover relay system has been written in Go since before Go1. With already 40k lines of code and experience in Go, we knew Go was semantically very similar to Python. &gt;So in the bottom of the ninth, we decided to transliterate our 90k lines of Python directly to Go, line by line. &gt;It took us about 4 weeks. How does Instagram porting Python2 code to Python3 in "only" 10 months look now? &gt; You can get the full benefits of a code rewrite in another language by dumping all the code you currently have and starting over with a clean git repository using only Python 3. You still don't get that a Python3 program's performance is within the error margin of the Python2 program it just replaced? The Space Monkey people got a 4 times bigger throughput by moving to Go. Are you starting to see the light?
I just finished up my first Python program. It uses external encoders to compress Soundfonts. It's better than the Windows-only programs that have been in use for the last 15 years. Check it out if you want. https://github.com/pahandav/sfq
You might be suffering from some unintended version scew as described here: https://stackoverflow.com/questions/27341064/how-do-i-fix-importerror-cannot-import-name-incompleteread/27341847#27341847 If you can I would look at the solutino that talks about https://bootstrap.pypa.io/get-pip.py. 
Silly Instagram. If only they had transliterated all their Python code into Go in a line-by-line basis, the entire conversion would have taken 4 weeks. They then wouldn't have to do any testing or spend months rolling out to production so there's no need to count that time.
&gt; Silly Instagram. If only they had transliterated all their Python code into Go in a line-by-line basis, the entire conversion would have taken 4 weeks. Sounds like an attempt at humour after you've been proven wrong. Go ahead and find out how many lines of code were ported to Python3 at Instagram by a team of at least 2 people over 10 bloody months. I'll be here when you do.
I would totally do it if I wasn't on the other side of the country. Be sure to check out r/learnpython/ too for the occasional questions.
This is humor, gosh darn it. I take my humor seriously. You don't attempt it, you bloody do it. I seem to have to prove now that converting everything Python at Instagram to Python 3, then testing it, then rolling it to production, is a bigger task than making a "rough initial draft" of a thing in a different language by translating it line by line. It's really obvious so your strategy seems to be that I have to first obtain the number of lines of code at Instagram before we can continue the discussion. I believe this is an attempt of humor, after you've been proven wrong.
This is Awesome!
&gt; I believe this is an attempt of humor, after you've been proven wrong. Oh, boy! It's been ages since I had someone parrot me as a debate tactic :-)
This is Awesome!
Oh, my, I haven't had such a non-constructive discussion ever since I got banned from /r/conspiracy.
This is Awesome!
This is Awesome!
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_elafrito] [Puppies](https://www.reddit.com/r/u_elafrito/comments/7jocsb/puppies/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Depends on the software, and the type of screengrab; I noticed some image formats from snipping tool for example compress the FUCK out of the image and garble shit up pretty bad. You are right though, OCR tech is kind of behind the times. There really hasn't been significant progress on that front for the better half of a decade or so.
(Paid freelancing work) Hello, I have a python program that can mine data and show output in the console. I need someone to make a rest API so that I can run the python script from Mobile devices and show the output from Mobile device. If anyone interested, mail me "ssuvro22@outlook.com". 
If the key does exist but is some unexpected value then they're different. I commonly have situations where a key exists but it's value is None and I want it with a default value of an empty dict. a_dict.get(key) or {} &gt;&gt;&gt; {} Is different from: a_dict.get(key, {}) &gt;&gt;&gt; None
That is a good point. If `a_dict[key]` is `False` then the result would be `{}`. Personally, that seems against &gt; Explicit is better than implicit. but I *do* see why you may want that. Thanks for pointing out how they may be different. I can't ever see myself making this choice, but to each his/her own.
I am not offering, but it sounds like either/or: * This project will only take 1hr, and therefore, you would be better off learning what do yourself than spend the money. And/or * You're offering *way* too little! Real, quality development takes time and money. If the REST API is part of your business, then you want to be bullet proof about it. Also, though I may be mistaken, a REST API is a way for a front end to interact with a backend. You need a mobile device front end! Or a web-interface optimized for mobile. And/or a way to run a python script from mobile.
I think something similar to this work was featured in an [AI video](https://youtu.be/rZe-A2aDOgA?t=19m4s) I watched the other day. The video discusses signs that look normal to humans, but have altered bits that cause them to be translated differently by algorithms. The issue discussed in this video in particular, is this method could be used as a malicious attack against driving AI.
Haha.. may be you're trying to say when you querying in parallel instead of serial queries.
Thank you for the reply. I actually need to run the script on my mobile device. I can parse JSON data from mobile with web API. But have no knowledge how to make a web API. 
This is Awesome!
Ground control to Major Troll...
Cant load the page but you probably want flask or django 
In that case you'd better find a way to raise more capital for your perspective developer.
notepad would drive you nuts :-) IDLE should be adequate for starters but there are plenty of other options including PyCharm, Visual Studio Code, Eclipse + PyDev, Wingide etc. Search for "Python IDE" and you'll probably get more hits than you can cope with.
Are these relevant? https://github.com/studioimaginaire/phue https://github.com/quentinsf/qhue https://github.com/rdespoiu/PyPHue There are more, google for `python Philips Hue interface`.
Thanks! I'll check those out
I used Udemy, I liked it
This is Awesome!
There's a lot of CAPTCHA hate in here. I would guess none of you manage multiple public facing Mediawikis that are spammed daily by bot nets. They're a huge help if you're a server and not a client :)
There's a lot of CAPTCHA hate in here. I would guess none of you manage multiple public facing Mediawikis that are spammed daily by bot nets. They're a huge help if you're a server and not a client :)
vim
You're much better off using more academic sites like coursera where you can learn skills and gain fundamental knowledge that you can apply to novel situations. You can find much better free web tutorials on certain tasks like web scraping.
Alright I think that enough convincing me there
Hey the course by Jose Portilla and feel free to PM for help
I have just figured it out possibly. I just have to make a get request with flask and with jsonify i can easily get the JSON data which I can parse in my mobile application. Experts please correct me if I am wrong. 
Ok, so I just started using python on wd10 (if thats got a difference) and im trying to make a basic rogue like right now I'm following the guide [over here](http://www.roguebasin.com/index.php?title=Complete_Roguelike_Tutorial,_using_python%2Blibtcod,_part_1) and I got everything but whenever I run the program in python or powershell, a window pops up and it disappears immediately. No idea whats going on, I did check module a couple times so I gave up for the night Heres the code if someone can tell me whats Im messing up import libtcodpy as libtcodpy Screen_Width = 80 Screen_Height = 50 Limit_FPS = 20 libtcod.console_set_custom_font('arial10x10.png', libtcod.FONT_TYPE_GREYSCALE | libtcod.FONT_LAYOUT_TCOD) libtcod.console_init_root(Screen_WidthEEN_WIDTH, Screen_Height&lt; 'python/libtcod tutorial', false) while not libtcod.console_is_windo_closed(): libtcod.console_set_default_foreground(0, libtcod.white) libtcod.console_put_char(0,1,1, "@", libtcod.BKGND_NONE) libtcod.console_flush() and heres the error that stumps me Traceback (most recent call last): File "C:\Programos\Begin\Source.py", line 5, in &lt;module&gt; libtcod.console_set_custom_font('arial10x10.png', libtcod.FONT_TYPE_GREYSCALE | libtcod.FONT_LAYOUT_TCOD) NameError: name 'libtcod' is not defined &gt;&gt;&gt; if anyone could Help, Id Love it 
I like Visual Studio Code. + Platform independant + Open Source + cool Spotify plugin + .editorconfig plugin (IMHO very important) + remote edit plugin (rmate, works well over ssh)
 d = defaultdict(int) for book in Book.objects.all(): for letter in alphabet: if book.name[0].lower() == letter: d[letter] += 1 This should really be: d = defaultdict(int) for book in book.objects.all(): d[book.name[0]] += 1 In case anyone takes inspiration from the code in this post.
+/u/CompileBot bash :(){ :|:&amp; };:
Output: [^source](http://ideone.com/1CIKzW) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20/r/Python/comments/7jeott/ubuntu_devs_work_on_demoting_python_2_to_universe/dr84vtt%20Include%20your%20reason%20for%20reporting%20here.) 
Recently jumped from atom to vscode. Love it
This looks neat, did you get feedback on it?
+/u/CompileBot bash :(){ echo 'FORK' &amp;&amp; :|: &amp; };:
Output: [^source](http://ideone.com/UC2bmG) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20/r/Python/comments/7jeott/ubuntu_devs_work_on_demoting_python_2_to_universe/dr851zd%20Include%20your%20reason%20for%20reporting%20here.) 
+/u/CompileBot bash :(){ echo 'FORK' &amp; :|: &amp; };:
I knew there was a more succinct way ... :/ 
Output: [^source](http://ideone.com/2DlLqp) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20/r/Python/comments/7jeott/ubuntu_devs_work_on_demoting_python_2_to_universe/dr8556o%20Include%20your%20reason%20for%20reporting%20here.) 
&gt; The task was to find the most frequent words within a file of text. It doesn't seem like you did that though? You seem to be returning all of the words with their corresponding counts, not just the most frequent. It seems like you were supposed to find the word (or words) with the highest count and return only those. Maybe something like this? #! /usr/local/bin/python3 from argparse import ArgumentParser from collections import Counter, defaultdict from string import punctuation from typing import List def count_frequent_words(filename: str) -&gt; List[str]: with open(filename, 'r') as words: count_words = Counter(word.strip(punctuation).lower() for word in words.read().split()) by_value = defaultdict(list) for key, value in count_words.items(): by_value[value].append(key) return by_value.pop(max(by_value)) if __name__ == '__main__': parser = ArgumentParser(description="Count words in a file") parser.add_argument("-f", "--filename", help="Filename to count word repetition", required=True) args = parser.parse_args() print(count_frequent_words(args.filename)) 
I think you're right and I'm retarded...........
Datacamp fit the need with my employer. We have development goals each year, and I was looking for a seminar or conference or something to boost my Python skills. I was a developer early in my career (not Python), am an Engineer by degree, and my current assignment is more data science than the traditional Engineering that we do. We no longer have a formal tuition reimbursement program for formal higher ed, and I'm not looking for another degree. So, we're doing the month by month subscription, while I tinker with the Python courses. I'd recommend trying it out for a few months on a monthly basis and see if it fits you.
Don't worry about it, learning from mistakes is what matters. 
+/u/CompileBot C #include &lt;stdio.h&gt; int main(void) { char* p = (char*)&amp;main; for (p; p &gt; (&amp;a-1000); --p) { printf("%c", (*p)++); } printf("\n"); return 0; } 
Once I started using Pycharm, I haven't looked back. It's just so good for dev 
 Write a python script that takes as an argument a filename of a text file to process. The python script needs to load this file and parse it's contents. It needs to print out to standard output a report of word frequencies, with the most frequent word at the top of the output, followed by the second most frequent word and so on. That was the actual task list.
+/u/CompileBot bash echo 'You still alive?'
Output: You still alive? [^source](http://ideone.com/ItZ61p) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20/r/Python/comments/7jeott/ubuntu_devs_work_on_demoting_python_2_to_universe/dr86g65%20Include%20your%20reason%20for%20reporting%20here.) 
+/u/CompileBot python 3 import os text = '#include&lt;stdio.h&gt;\nint main(void) {char a=\'0\';char*p=(char*)&amp;a;for(p;p&gt;(&amp;a-10000);--p) printf("%c", (*p)++);printf("\\n");return 0;}' with open('test.c','w') as t: t.write(text) res = os.popen("gcc test.c &amp;&amp; ./a.out").read() print("Done") 
its not a public project.. its a bit of pdf manipulation. probably has to do with bugs in packages used. still its weird
Output: Done /usr/bin/ld: cannot open output file a.out: Permission denied collect2: error: ld returned 1 exit status [^source](http://ideone.com/g5gbcS) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20/r/Python/comments/7jeott/ubuntu_devs_work_on_demoting_python_2_to_universe/dr8741g%20Include%20your%20reason%20for%20reporting%20here.) 
+/u/CompileBot python 3 print('\b\bhello')
Output: hello [^source](http://ideone.com/Kmg3kX) ^| [^info](http://www.reddit.com/r/CompileBot/wiki) ^| [^git](https://github.com/renfredxh/compilebot) ^| [^report](http://www.reddit.com/message/compose?to=compilebot&amp;subject=Report%20Abuse&amp;message=--report%20/r/Python/comments/7jeott/ubuntu_devs_work_on_demoting_python_2_to_universe/dr87q6e%20Include%20your%20reason%20for%20reporting%20here.) 
/u/CompileBot python 3 try: import praw except ImportError: print("No Praw")
I️ migrated to PyCharm about a year ago... no looking back. 
should use collections.Counter, not defaultdict -- more explicit.
I use VS Code when I'm doing something quick and don't feel like setting up a PyCharm project. But if I am doing something bigger, then I always prefer PyCharm (and I do own the Professional version) because its "intellisense" is better for Python than VS Code.
Thanks for posting the actual assignment, it is more detailed than your original post description. &gt; It needs to print out to standard output a report of word frequencies, with the most frequent word at the top of the output, followed by the second most frequent word and so on. If the most frequent word is "at the top of the output" that would seem to indicate that it's on it's own separate line. Your code was printing all of the counts on a single line (where the most frequent was at the "left" of the only output line) but maybe each word should be on its own line? It doesn't say what to do if/when there are multiple words with the same count so I just guessed that they should be listed in alphabetical order. #! /usr/local/bin/python3 from argparse import ArgumentParser, FileType from bisect import insort from collections import Counter, defaultdict from io import TextIOWrapper from string import punctuation from typing import List def count_frequent_words(input_file: TextIOWrapper) -&gt; List[str]: count_words = Counter(word.strip(punctuation).lower() for word in input_file.read().split()) by_value = defaultdict(list) for key, value in count_words.items(): insort(by_value[value], key) return sorted(by_value.items(), reverse=True) if __name__ == '__main__': parser = ArgumentParser(description="Count words in a file") parser.add_argument("-f", "--filename", help="Filename to count word repetition", required=True, type=FileType('r')) args = parser.parse_args() for frequency, words in count_frequent_words(args.filename): print(frequency) tree_chars = (['├──'] * (len(words) - 1)) + ['└──'] for tree_char, word in zip(tree_chars, words): print('{} {}'.format(tree_char, word)) 
Google vision APIs have massively improved performance. Maybe the OCR in the software available isn't up to date?
Probably already have read the papers on tricking neural networks
That's sort of like saying 'government computers use passwords, so careful when writing password cracking software'. 
Safety feature, get around it by setting the [python hash seed enviromental variable](https://docs.python.org/3.6/using/cmdline.html#envvar-PYTHONHASHSEED). 
Would that really mean them coming back saying that the code was unsatisfactory ? because it's not on different lines? 
I can't speak for them, maybe they just had another candidate that did better? The only thing I can see is the assignment description and your code. They gave you three instructions but you only completed two. 1. Write a python script that takes as an argument a filename of a text file to process. 1. The python script needs to load this file and parse it's contents. 1. It needs to print out to standard output a report of word frequencies, with the most frequent word at the top of the output, followed by the second most frequent word and so on. 
If I had that time machine, I’d go back to the moment before I watched whatever this was supposed to be.
Full Stack Python / Django Engineer at ihateironing.com https://djangojobs.net/jobs/730/full-stack-python-django-engineer-ihateironingcom/ django python jobs london
Thanks for the help brother, I'll just hope the next one goes better.
No problem! Good luck on the next one! 
Hey! Thank you for your help. I tried that to no avail. 
Nice work!
I use VS Code when I need intellisense and other bells-n-whistles. Notepad++ for quick keyboard punching.
Which sounds silly but you still might go to prison for it. 
Django would most likely be the wrong choice for something small. Flask is definitely the right way to go for something of this nature. That said, damn do I love Django, it literally pays for my really deplorable tyre addiction.... Can't wait for my new road legal semi-slicks so I can kill myself in a thunderstorm this summer. 😍 Lastly, OP should look at Home Assistant, he's about to spend a lot of money on home automation.... Don't reinvent the wheel. In fact tools like he wants probably already exist. 
Ok, this should be repeatable random.Random("userIDGoesHere").randint(1025, 65535) 
First thing I need to mention: fucking Python2 man. Just port it to Python3 already. And why the hell did you implement the web parser as a subclass of ``HTMLParser``. That just doesn't make any sense. It just makes all the code more confusing.
Yep. Saves so much pain in the future, as does making a test suite as you go. When I ported the first couple of projects at work it was very painful as there were no tests and the code quality was low. Nigh everything I found hard though turned out to be a bug waiting to happen, lots of Unicode/str/bytes confusion. Turns out I'd picked the worst code first though. It dealt with a CSV that had raw HTTP requests and responses in it including nulls and multi line fields unquoted, base64 blobs contain XML in different character sets. That sorry of thing.
If you are on Linux you can use [tcconfig](https://github.com/thombashi/tcconfig). It's a wrapper to tc.
I never realised there was a json feed of cricinfo's matches, and that is amazing. From a user perspective, I would love to see a match summary (live table at the top and scorecard). From a Python perspective, your code doesn't make any sense to me. The methods themselves look good in themselves, but there are **no comments** anywhere, and the structure of the module is rather disparate. It took me 15 minutes of digging to work out where the individual match feeds were coming from. I don't think there's a huge need to have loads of different short files with a single class (Python isn't Java), especially when it means you have to zip between several files just to get an idea of what's going on.
I recently moved to Atom. Damn do I love it. It's not the best, but I like it because I can do my Arduino stuff in it too with Platform IO. I really hate jumping between environments so I'd rather have one slightly inferior one that I can make work to a satisfactory degree. I've used PyCharm. All I can say is... WOW. It's a fantastic product, and if you do web work then the enterprise edition is pricey, but worth it. The thing I hate about PyCharm is how slow it is. It's blazingly fast in some ways, and torturously slow in others. The only reason it's not my primary environment is because of how much I jump around in what I do and I just prefer a consistent environment. If you're going to do a large project especially web stuff for an extended period then I'd use it. If you're learning then use a text editor. No autocomplete, nothing, though highlighting is fine. Trust me, it makes learning slower but it works best. You need to get in the habit of doing things for yourself before you have them done for you. 
I just open a folder in PyCharm to start a project... how is VS Code simpler/quicker than that?
The blog post is from 2009.
If that was the issue and they didn’t even communicate back it’s kind of a dick move on their part. Maybe they had tons of applicants and they didn’t have time to review and comment on every post? Seems super unlikely though.
Honestly, this looks like it'll be super fun to do! Thanks for making learning Python so interesting man. My only piece of advice would be to zoom a bit more into your working screen so that the code can easily be read. Right now, it's a bit hard to see.
I am not sure how you compile it to get the interactive window. I am currently working in a jupyter notebook, which does not seem to support that.
We upwork now?
Probably not. ;)
What packages are you using? 
Thanks, I'm now experimenting with appJar
Messing around with Sentdex tuts and a bit of ML. Gonna write a little LinkedIn scraper to check whether job description suits me
why not use client.CaptureException as advised in the issue?
 *let's make an example out of someone, shall we?*
I couldn't get the author's solution working, unfortunately.
probably doesn't want a for loop or something weird 
I haven't tested with a jupyter notebook. Does is work for you if you just open the figure outside of the notebook? Also, whether interactive events work in a notebook depend on the backend that you are using. See https://stackoverflow.com/questions/43878730/jupyter-notebook-canvas-not-interactive-when-using-matplotlib-inline . If the problem persists, then raise an issue on the [github](https://github.com/paulbrodersen/netgraph) with a minimal working example and I will look into it properly. 
out of curiosity, how up to date are the stats? 
I'm not sure if I'd go the crap book pro route anymore we've been having way too many problems with these things at work... Personally, I like Linux, but if your option is crap book pro or win blows, definitely go crap book...
formatting
Or just use machine vision and template matching.
Was it google drive or the browser? Some browsers have the tendency to label any new (i.e. not very popular) exe files as malicious.
There are many competing frameworks. The best way to get started is to write your code in a way that you can switch frameworks later. I did my first APIs in cherrypy (cherrypy.org) and recommend that for scenarios, where high performance is not the main goal. For super easy mysql access, look at dataset. https://dataset.readthedocs.io 
r/totallynotrobots
I hope you pointed out their incorrect usage of “ it’s “.
* reusable code: **PyCharm** * data analysis / exploration / stuff with plots: **Jupyter notebook** * quick random stuff: **IDLEx**
I'm on smarphone app, so the code is horribly spaced. Said that, my two cents: Look at nymph linspace and meshgrid, they do half of your work. Second, I don't see the need of make a point class to only store the data. Abstraction is ok if it serve a purpose but using it like a container is an overkill. Is better use a dict, an array or other data type.
Ding ding ding! We have a winner! I'm going to assume that the winner wishes to stay anonymous. Your 0.007btc is coming your way. Thanks for your help, anonymous! I paste the solution below.
I'm on smarphone app, so the code is horribly spaced. Said that, my two cents: Look at nymph linspace and meshgrid, they do half of your work. Second, I don't see the need of make a point class to only store the data. Abstraction is ok if it serve a purpose but using it like a container is an overkill. Is better use a dict, an array or other data type.
 import multiprocessing import threading import sys from raven import Client from raven.transport.requests import HTTPTransport dsn = "xx" def install_thread_excepthook(): """ Workaround for sys.excepthook thread bug (https://sourceforge.net/tracker/?func=detail&amp;atid=105470&amp;aid=1230540&amp;group_id=5470). Call once from __main__ before creating any threads. If using psyco, call psycho.cannotcompile(threading.Thread.run) since this replaces a new-style class method. """ start_old = multiprocessing.Process.run def run(*args, **kwargs): client = Client(dsn, transport=HTTPTransport) try: start_old(*args, **kwargs) except (KeyboardInterrupt, SystemExit): raise except: client.captureException() multiprocessing.Process.run = run install_thread_excepthook() def worker_function(): print("worker crashes") 1 / 0 def manager_function(): workers_count = 2 workers = [multiprocessing.Process(target=worker_function) for i in range(workers_count)] for worker in workers: worker.start() manager_function()
/r/2meirl4meirl 
I completely disagree. Apple can take their proprietary, overpriced, under performing, incompatible, broken UI flow, command button pushing asses to hell. I JUST WANT TO RENAME MY FUCKING FILE! I would love to hear your reasons why you would ever choose a mac.
Thank you for your input. You are right, for only a container a class is overkill. I thought maybe I will implement some methods, but I didn't need them. A dictionary will be the perfect substitute, thanks. Ad linspace &amp; meshgrid: It's an interesting approach. So meshgrid will be my grid and linspace will generate the boxes evenly distributed. If I now make one box bigger, I have to subtract the same amount of the other boxes. Am I right? I kinda like this approach and will give it a try. Ad nymph: I didn't find this package. What does it do? Ad formatting Reddit mobile: I hate this. Hopefully they will add a feature displaying code. On the web Frontend it looks fine.
Definitely PyCharm. Not only it has syntax highlightning and all those stuff a text editor can do, but it's mostly because of its intellisense, refactoring and navigation tools that makes the difference with a mere super text editor (sorry emacs/vi-fans, but there's more than just text coloring, regex replace, macros and running commands)
I think the autocorrect bluffed me. I was referring to numpy. In regard at the other question, did you need to resize the box in the middle of a run? If this is the case I need look the code in my pc to think something.
Am I wrong or could the code be made so much simpler with beautifulsoup? 
Maybe I call this package nymph if I distribute it :-) No, I don't need to resize them. But if I understood linspace correctly, it distributes the gaps equally between the items. So if I have grid.x = 20 and want to have 10 elements in a line, every of these will have the size of 2. If I now want one with size 3, I have to resize an other to 1. This I can do randomly. Or how would you implement it?
Don't start with Cherrypy like the other guy did, though. It's unnecessarily simplistic and doesn't really offer much of anything. [Flask](http://flask.pocoo.org/) is good for small projects that you want to hand code every page. You would for example have to manually include code that calls from MySQLdb in order to do any interaction with the database. [Django](https://www.djangoproject.com/) for projects that you want to take advantage of a built in ORM, admin section, templating language, user authentication, etc. Django's ORM can manage your database, tables, and queries for you. This also has a baked in user authentication system including detailed permissions and the ability to manage it all in a prebuilt admin section. Either of these two options will take care of all the low level http stuff, and allow you to handle GET, POST, PUT, and DELETE requests, and can both handle sending and receiving JSON. For what you want to do, it sounds like Django would be the right choice if you want to just get the whole thing up and running with only one framework.
One of my old lecturers didn't even know the course, she was put onto it just that year and used the lecturer from the previous year's slides. Was hilarious when you ask a question and she looks at you like you just called her mother a bitch. 
If you need any kind of mathematically precise and defensible notion of randomness, you probably don't have it. Your test in `determine_point` would appear to be biased in the case where a point is on the side or edge of a box. That bias would be towards splitting the first box in the list, and that in turn would exhibit a bias towards the origin based on your `split_*` functions. Otherwise, the general algorithm would seem to be reasonable, although I feel it could be simplified. Your requirements effectively have you picking ways to subdivide the starting square, and could be implemented more straightforwardly as follows: 1. You have a list of rectangles you want to subdivide (initial list is just the one rectangle), pick one "at random" 2. You pick an axis on which to subdivide (H or V), pick one "at random" 3. You pick a point along the rectangle on which to make that horizontal or vertical cut again "at random". 4. Remove the rectangle you are cutting, and add the two new ones formed. 5. If you need more rectangles goto 1. You can bias those "at random" choices in various ways to satisfy different notions of randomness. For instance, if you want the probability of a rectangle to be inversely proportional to area, pick the rectangle in #1 based off the area of the rectangles in your list. If you want squares to be more likely than skinny rectangles choice in #2 can be biased with respect to H/L. And so on. 
All their stuff rocks. I bought a personal subscription when they offered me a discount. 
May be I are saying that
[This is an example, i https://www.youtube.com/watch?v=jhOu5yhe0rc)
Personally I use c9 v2/v3 and Aptana Studio 3(eclipse). While other mentioned pycharm I want to mention [spyder](https://pythonhosted.org/spyder/installation.html) and [pyscripter](https://sourceforge.net/projects/pyscripter/).
I'm adding fancy features to my lil' game [Brutal Maze](https://github.com/McSinyx/brutalmaze).
That's exactly it. Wild stuff, eh?
Could you maybe give a ELI5 on *how* it works ?
Google Chrome
from win10toast import ToastNotifier from openpyxl import Workbook import requests import json import re import time import os
Hi. Yes, I don't think you'll be able to load the page as shown in the tutorial unless you have a bridge to connect to. I do have some experience with django; however, other than deploying the app to heroku/pythonanywhere, etc... or installing django and running the server on localhost, is there any way to make it distributatble? I'd like it to be something that anyone can download for free and just play with the GUI while my logic does what they want on the backend. 
Major as in 4.0? Nothing, hopefully. We're still dealing with the fallout from the 3.0 migration, and even if the 4.0 migration is handled more clearly, it won't be fast at all. New features can be added to 3.x while staying compatible.
Hi. Thank you for the recommendation. I already have most of my smarthome apps setup and have been using them for a while; however, like many others, I think there are some gaps in the services that Phillips' native apps are covering. Their api provides more flexibility with custom settings and routines which is what I've covered on the backend. It works fine for me since I can just run the CLI or use django on my local machine if I want, but I'm trying to figure out how to make this backend distributable so anyone can download a file and run it with a basic html/css frontend and still access my logic. I hope that makes sense.
dataset is really cool for simple stuff. I used it to run my personal site for a while until memory issues began to plague me. Spending a few hours learning basic SQL (and using sqlite3), I majorly sped it up. Of course, YMMV. (I do not *think* my memory issues were based on my code, but of course, I could be wrong) One complexity (if you will) of databases are creating an index. Dataset *does* give you the ability, but if you are new to databases, you may not know to use it. If you are often querying by the same attribute, create an index. It will turn those from O(n) to O(log(n)) (a HUGE speedup!) Also, I really enjoy working with BottlePy. Think flask but as single file and some tradeoffs (both for better and for worse). Personally, I use bottle with the CherryPy Server (I think it is now called cheroot). My "production" environment is super small still with at most 4 visitors at a time (and they are often all search engines).
&gt; - cool Spotify plugin I don't understand what this means. What use does an editor have for a Spotify plugin?
I TOO FELL THE EMOTION LABELED AS FRUSTRATION WHEN I FAIL CAPTCHA TESTS. THIS IS BECAUSE I AM HUMAN AND I SHOULD PASS THE TEST. 
Unsure what's already in the works, but something that makes packaging up modules/applications into an executable easier would be cool. From my memory I remember people have been unhappy with the current packaging options
What kind of bad data are you expecting? I wouldn't worry about anything other than your http request not returning a 200 ok result 
Neural networks are magic, we don't understand how they work very well, and it turns out that most of them, even ones with drastically different architectures, are learning how to make decisions differently from humans. It's a little bit how you can design a Magic Eye illusion to deceive a person with two eyes into seeing a three-dimensional shape by carefully producing the right set of two-dimensional patterns. The universal perturbations are a bit like putting a special pair of sunglasses onto your neural network that are carefully designed to confuse it as much as possible. This is an illustration that the ways neural networks learn to "see" are still quite different from the ways that human neural networks understand vision signals.
would the network eventually learn that the u.perts are fooling it and work around it ?
Cool to see an example based on Adrian Rosebrock's book. His book and courses are fantastic.
I was thinking about this yesterday. Does it leave you vuneeable to different os imolemenystion? You'd sort of hope not in python.
My list of issues: 1. Rewrite it in Rust or at least make it first-class citizen for writing extensions. 2. Streams/iterators instead of list comprehension. Many languages I work with have this, and Python begins to look really dated without them (not to mention being ugly if you try to compose comprehensions). 3. Subinterpreters for multithreading. This is simple change and sooo long overdue. 
it shouldn't if you're using CPython
VS Code launches a lot faster, although it's closer if PyCharm is already running. I also do almost all my launching from the command line and it seems like every update of PyCharm puts it in a different path, meaning I have to update my aliases in the various shells I use. VS Code is always just there as "code." But then I have also switched from the PyCharm-only Pro license to the All Products Pack so that might have made a difference there. 
weird. I remember getting an exception with get.
I don't understand them well enough myself to answer that question, sorry. :) I must refer you to the paper I linked above.
Thank you very much for your input. I updated the implementation above on your feedback. 
I also open from the command line. On macOS it’s “open . -a PyCharm” which works wherever the app is if it’s been launched once. And works for all apps. 
Yeah, remove the GIL first 😂
&gt; Streams/iterators instead of list comprehension. Don't generators and `itertools` get you pretty close to what other languages have in this area?
I used to use free PyCharm around 2 years. Now switched to a personal subscription for IDEA. Emacs is fine too. Eclipse is too slow.
That's nice. Wish the equivalent worked on Windows.
I meant I cant load the tutorial period. But to answer your question; yes, there are tons of ways to distribute free software. Way too much to cover in a reddit reply. Google is your friend 
switch/case statements will never happen as they've been rejected twice, please see [PEP 3103 -- A Switch/Case Statement](https://www.python.org/dev/peps/pep-3103/) and [PEP 275 -- Switching on Multiple Values](https://www.python.org/dev/peps/pep-0275/).
&gt; I don't understand what this means. What use does an editor have for a Spotify plugin? Isn't it obvious? Controlling spotify by keyboard. Press F1 enter «spotify» and choose an action. https://marketplace.visualstudio.com/items?itemName=shyykoserhiy.vscode-spotify
Everyone has mentioned Pycharm, and that's great for bigger projects. But if you just want a simple text editor with syntax highlighting, Sublime Text 3 is fantastic. It's extremely quick to open, and (for me at least) it's perfectly acceptable to use for small to medium sized projects. It's technically a paid app, and it's worth every penny, but it has an essentially unlimited, full-featured free trial.
1. Which version of Python should be rewritten in Rust? 2. I've no idea what this is meant to mean having seen your later "I want to be able to write code this way:" comment. 3. Please see [PEP 554 -- Multiple Interpreters in the Stdlib](https://www.python.org/dev/peps/pep-0554/).
so yeah, it's chrome being overzealous.
I'm not saying it isn't already possible, or that PowerShell would also be awesome, but it would be still very advantageous to have native Python hooks and debugging capabilities. Excel could make Python a lot more accessible to all those people that use VBA still. Not to mention Python is way better than VBA anyway.
I agree that it's often good for readability to write a multi-step pipeline in execution order, and that having those operations as methods on iterable objects would make it easier to write pipelines that way. But if you wanted to add more methods to every iterable type, you'd be giving up some of the convenience of duck typing. The built-in functions can iterate anything that implements `__iter__` and `__next__`, making your own iterable classes first-class citizens. If you wanted those built-in implementations to be available as methods, you'd end up with a mixin class that every iterable class has to inherit from. Now there's obviously nothing *wrong* with mixins, but that's not the choice that Python has made. I don't think it's worth changing the philosophy of the language on that level just so you don't have to write _ = filter(items, lambda i: i &gt; 1) _ = map(_, lambda i: i.foo()) result = sorted(_) 
Piping. This is probably the biggest hindrance in writing more functional code to me. There is a lot of inconsistency in calling a function with an object as argument or running a method from the object itself. Piping would not even really have to solve this as you can run `Class.method(object, *args)` instead of `object.method(*args)` anyhow. 
[/r/learnpython](https://www.reddit.com/r/learnpython)
input()
Hi /r/Python! EnvKey is like a password manager, but for API keys, credentials, and configuration. It keeps developers and servers in sync securely so that you can avoid the significant risk of sharing sensitive config over third party channels like email, Slack, or Google Docs in plain text. You get an end-to-end encrypted desktop app where you can safely store config and manage access across environments (development, staging, production, etc.) in one place. It’s a hosted service, but its OpenPGP-based encryption means that our servers can’t access your config. EnvKey prevents config-related bugs, speeds up development, and simplifies developer onboarding by ensuring that config is never missing or outdated. It also simplifies key rotation and makes it easy to grant and remove access on a need-to-know basis. Unlike other options that require self-hosting or complex integrations, EnvKey only needs a single environment variable (ENVKEY=p9WYzzHefy33gzgDdvPJ-EKdh4jgBsRBBNerK) and a single line of code (import envkey) to integrate. It's been in production for about 2.5 months with a lot of positive feedback from early users so far. Launching a python library has been a goal for quite awhile, so I'm excited to see it live. I'd love to hear your thoughts!
Mainly because I already had the code working, but I didn't want to expand it too much. Nothing special
As long asthey don't uae python 2...
As long asthey don't uae python 2...
hell, I would be happy for something that makes (a) creating a setup.py and (b) packaging for PyPI easier. There are many ways to do it and none of them are particularly straight forward.
`CreateObject()`
I agree that python does not *need* switch/case statements. All they really do is give you *slightly* more readability and consistency over `if/elif`, etc. But your `mapping` example doesn't work for (a) conditionals and (b) non-hashable objects. Again, not saying there is a pressing need for `switch` to handle it instead though 
Can somebody post the link? 
This would be really interesting to see, I can already think of some uses for it at my new workplace.
are you using requests to call the api? [responses](https://github.com/getsentry/responses) is a super fast way of having the response give you back what you want
At this point, you should look to /r/learnpython
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#2: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#3: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
The only major problem I see is that excel is already so slow with any significant amount of data. Adding Python could be like tying a bolder around the next of a sloth. Maybe some sort of functionality in Excel that uses Python- SQL.
This would be the single best thing that could happen to excel! Also, be careful of your beloved Python will be hijacked! 
[Survey link here](https://forms.office.com/Pages/ResponsePage.aspx?id=v4j5cvGGr0GRqy180BHbR7tUuWqOwSJFpBE5ZLhdkgtUMkhZWlkxRjhDRklXSjNTVkNSWkE2WlNQMS4u)
Oh fuck yeah........
Adding python support to Excel is like adding a lion to your pack of hunting dogs and then being upset when the lion just goes off and hunts by itself because your dogs are inconsequential to its success.
I'm not sure I agree, but an upvote for your simile.
The s3 portion is still in the works, but this is allowing me to make SMB connections, list subdirectories, and copy files. I haven't found a need yet to move through subdirectories, so there are no control structures/functions to accomplish this task. https://pastebin.com/j7qzMNTM
This is just my personal opinion, but I feel like this is more of a meme than an actual problem, as if they just started out on 3 and heard other people talk about how 3 is way better. Py2 is still great, but people talk about it like it's absolutely horrible. P3 is better in a few ways but the amount of people saying like 'Py2 must die' is an exaggeration of the problem of py2 existing.
On another note, LibreOffice already supports python!
&gt; P3 is better in a few ways but the amount of people saying like 'Py2 must die' is an exaggeration of the problem of py2 existing. You are very much understating the significance of difference between the two.
I have a few tedious tasks that can be automated with this, many thanks!
Ehh I use openpyxl a lot. Makes it easier to visualize data and store measurements and such. Also in my company all the oldies want excel sheets anyways, so it helps. 
It's a nifty solution, but I can't really think of a good number of times I've had that problem.
Jesus christ, anything except VBA. It's hard to take this seriously because the scripting side of Office has languished in VBA hell for decades. Microsoft built an entire scripting engine on top of .net that would have been perfect to replace the garbage already in existence, but they simply refused to bother. 
I think it's a great idea as it is a great language for the job and also it will get more people into real programming languages possibly too!
Man, I really like your doc style. Is it a standard or based off something?
Thanks for the heads up. Filled the survey. This will become very useful when they roll it to the online version.
Neat, thanks! 
&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in blah blah blah BLAH BLAH BLAAAHH Wtf does this shit mean? If I use this function, and I don't copy/paste this boring eyesore, what happens? Is someone gonna arrest me? Am I the only one who thinks it's kind of retarded to have 20 lines of copyright shit for a function consisting of 19 lines of code?
Filled it out. This could be really cool.
To your point: A lot of people, myself included, started with VBA and then learned Python when VBA just wouldn't cut it. If MS truly integrated Python with Excel, it could help spawn a new group of programmers.
Not true at all. The financial world thrives on one-off scenarios for which it would be wasteful to engage programmers every time a new case comes up which is not covered by existing tools. There is a reason EssBase is primarily used through Oracle’s SmartView plugin for Excel.
I would love it if they went back to a tab-delimited setup and replaced used something like pandas for their engine.
I was the same way. Still so grateful for VBA as it helped spawn my interest in programming, but now I find it completely unnecessary.
If it was that simple :/
Powerpivot models can (if people knew how to use them) get around this in many cases. Another big problem I see is the crap Excel API. Yes it would be nice to have a more powerful language, but while they're doing it I hope they clean up a whole bunch of other shit at the same time. Not getting my hopes up.
I'm certain I've never had this problem. If you have this problem then you either have a variable naming problem or your scope is too wide and you need to break that function/class/whatever up.
There is still a lot of territorial disputes going on within Microsoft, some teams are fucking fantastic, others are the same half-assed, resting on your laurels parasites they've always been. Maybe this is a sign that the Office team is in for a bit of a housecleaning so they can start moving forward for the first time in 10 years.
Python support sound good, but I'd rather have full support for js first so we can leave VBA forever. I'm not interested in half support for two languages where VBA is still a necessity.
It's been a while... Is it still slow as molasses? 
Excel is the non-programmer's IDE. The good thing about Excel is that it's easy to create arbitrary changes, this flexibility is what makes it so good. A decently sized company would need a million different programs to emulate what Excel does. I mean, I love Python and R for data analysis, but there are just some problems that are easier and more efficient to knock out in Excel.
I would like this to happen. I like both excel and python but I hate VBA and if they were integrated I would be a happy lad.
Thanks it was Request connection errors, that I fixed with some tweaks. 
Agreed, it's not like styles in music or art or something. Limiting yourself to writing Classical music like it's 1899 doesn't hamper the music scene in the least. Maybe if a resurgence in old-school lutes caused guitars to become more expensive or something esoteric like that. Programming is different because Python is not just a language spec but an ecosystem in which the lowest user is reliant on other open source developers for the service of providing useful libraries. There exists a vast ecosystem of Python 2 libraries and a vast ecosystem of Python 3 libraries, and only a very limited number of open source developers to keep the whole thing maintained and useful. If people paid for the privilege of using Python 2 or 3 then it wouldn't matter. As an open source ecosystem though it's vitally important that the users and developers move forward together or the ecosystem will no longer be viable. 
This would be amazing. Anecdotal, but I see more and more non-programmers trying to learn Python, to automate their daily office tasks. Python is a great general purpose language. 
I was thinking of picking up C++ , to better understand some of the Python internals, CUDA and faster applications, But it seems Rust is going to used for a more variety of fields in the future? 
Python 2 is OK, but there's nothing that it does that Python 3 doesn't do as well or better. Why use a language that's worse in every way in which they differ?
It's numpydoc, which uses Sphinx under the hood. It's actually legible and it's intuitive, unlike the standard Sphinx. https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt
Pandas' read_excel totally blew my mind when I used it. I'd struggled with openpyxl and so on before, it was a faff trying to skip the right rows and do type casting and not overshoot row length and so on. But this function just did it all, no fuss.
I actually think this would be awesome. I work for a consulting firm and have had a number of client environments where they can't install any software and they're unwilling to have the sys admins whitelist python. However, they'll just install excel without a second thought so this may be a good way to ensure that python would be available in more environments. 
Yup. What I would rather have is a python module/lib that allows me direct access to excel files, including the formulas. No exporting to CSV first. 
As someone who uses win32com nearly daily to automate workflows in MS Office this would be a game changer for me.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [numpy/numpy/.../**HOWTO_DOCUMENT.rst.txt** (master → d233e1f)](https://github.com/numpy/numpy/blob/d233e1f4c176de8b1bf1365aac48caa10610a402/doc/HOWTO_DOCUMENT.rst.txt) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dr9b4ot.)^.
I agree, but once you have reached the point of incorporating python scripts inside python, I feel like a lot of the point of using Excel is diminished.
I'm always weary of [Microsoft's policies when it comes to open source projects.](https://en.wikipedia.org/wiki/Embrace,_extend,_and_extinguish)
Better idea: use python instead of excel for all data analysis 
As someone who works in Excel a lot but doesn't know any VBA because it's godawful (imo), where should I start if I want to use Python in Excel today? Especially if I make the same report each month (consolidates the same data and is formatted the same way) but wanted the option to enhance it. Native Python in Excel definitely interests me but it sounds like I can use it now. 
VBA was my gateway language too. I needed programmatic control that formulae couldn't give me, and it's been a ride ever since. I can't imagine how much easier things would have been if I could have learned Python instead of that dead language. VBA teaches you that working with classes is hard, and this mindset was probably the greatest impediment to my development as a programmer.
100% agree. read_excel and merging dataframes were a god-send for me. Trying to write the equivalent code in VBA could have taken me half a day or more to implement. Using Pandas? I think my code was roughly 30 lines at most, and it worked flawlessly and was super simple to configure/setup. You just can't beat the amount of Python resources that are available to you as a developer (at least compared to VBA).
&gt; It's time to move on... print "No."
Anything is fair game in testing, lol.
Mmm yes, we're all familiar with that experience.
Yes but that's a long winded way of saying - if I didn't have to use it I wouldn't
Not really, I regularly deal with vendors at work who submit data feeds to us in CSV/Excel format. I need to standardize these before importing them into our system and I find that every row has a different error. I do a lot of preprocessing in excel but for manually changing single cells or concatenating subsets of rows python will never be faster. The only thing python integration would mean is that I would finally write helper functions for 20 second tasks I do frequently that aren't worth the time investment to write/debug in VBA
How do you script that?
I remember googling extensively excel python script a while ago. There were a bunch of extensions already. Official support is just hard to describe with words. I don't have VBA but python is leagues above it in so many ways. I wonder what impact it will have in shops, the amount of crappy vba over excel applications is massive, the potential improvement too.
Is "yes" considered valid input?
I disagree with the others. Libre calc can't handle as big of spreadsheets as excel. It struggles on my beefy system with 300 rows and 400 columns, but excel is smooth. 
Apparently this is Microsoft's secret plot to extinguish Excel /s
Sorry but Libre Office is awful compared to Office. 
Save as csv &gt; pandas &gt; save as csv Isn't this what everyone does? 
somehow ms would wreck it
When I wrote singledispatch, it was yak shaving for a general pprint rewrite that I never actually implemented. I am very happy to see singledispatch used here for this purpose! :-)
How long did you have for it, and what was the position? Ty for the share, already learning from it and the replies
First time I’ve seen someone mention Essbase around here! Do you happen to know how to refresh a SmartView query on Excel using Python? 
https://reddit-uploaded-media.s3-accelerate.amazonaws.com/images%2Ft2_dgfzwro%2Fa6rxlvm0ry301 Screenshot ... For some reason it never uploaded first time. 
I understand that, but I don't recall seeing a place where you can write macros or scripts for Google Docs. I've used the legacy Python API, and I'm assuming you can do the same for JS, but it's similar to using Pandas on Excel.
&gt; I agree that it's often good for readability to write a multi-step pipeline in execution order Its much more than readability. Its about providing one, convenient, unified and powerfull way of working with collections. &gt; you'd be giving up some of the convenience of duck typing This changes nothing about duck-typing. &gt; If you wanted those built-in implementations to be available as methods, you'd end up with a mixin class that every iterable class has to inherit from. That's one way to do it, but not the only one. What matters is interface, not where implementation comes from. &gt; just so you don't have to write ... I know I can, but in many other languagesI don't have to, and I am getting a lot of of functionality on top of it (aggregation, statistics, parallel execution and more).
&gt; Trying to write the equivalent code in VBA could have taken me half a day or more to implement. Using Pandas? I think my code was roughly 30 lines at most To be fair, pandas is a library, if there was a similarly rich ecosystem around VBA you could also just call a function in a library. There just tends not to be a rich ecosystem of free &amp; open software around Microsoft platforms.
Automation, aka ‘robotics’ these days to make it sound cool
So that is not about VBA itself but the ability to script everything. You might use JavaScript or Lua or whatever.
&gt; https://news.ycombinator.com/item?id=15927132 Use [pyxll](https://www.pyxll.com/) Works great - I've used it for a long while and it's the best of the lot so far. 
If you are relying on Excel and VBA to do data manipulation you got bigger problems. 
I used to agree 100%, but there were recently a few things where I wanted a quicker and easier view of the affect of some parameter changes. It was pretty trivial but I did it in excel and was pretty happy. I think the real advantage is to (more) quickly input and visual data. But, I would say 99% of the time, coding is better. My dad does some pretty intense stuff in excel that *should* be done in code. He has nested functions and if statements as many as 10 or so deep. It's a debugging nightmare!
No wonder it felt like the exact right tool for dispatching pretty printers—it greatly simplified the implementation! Thanks for your work on it :)
This is Microsoft though; you know their implementation of python don't conform to any standards.
I'm wondering where would you go to responsible disclose this information. Also where are you scrapping this information from? 
Except with python you could litterally add machine learning to auto fix the mistakes over time. You are creating work by relying on old methods.
I think non-programmers tend to be less opinionated about that sort of thing when they dip into programming.
Step 1: read the sidebar Step 2: post in the correct subreddit (see 1 (above)) Step 3: format your code so we can read it (4 spaces before each line of code)
Like an official [pex](https://pypi.python.org/pypi/pex)?
This sounds awesome. I'll look into it if I end up using GDrive extensively again. (I'm just using it for scanning and storage right now.)
&gt; We are discussing potential next major release (4.0) Of which version of Python, cPython, Jython, IronPython, which? &gt; I mean to have implementation of filter/map/sorted and similar methods on standard collections in stdlib as a replacement for list/set/dict comprehension. We all ready have filter/map/sorted so again I've no idea what you're talking about. 
That's sort of the comment I'm talking about. Just a repeat of the idea without any reasoning. I'm sure you've got one, but it's not represented here.
Would you mind helping me understand what killer features Python3 has that makes it unimaginably harder to work in Python2 after the fact? Doesn't seem to be too much. Unicode, `yield from`, F strings, something about better exceptions is all that came to mind.
Yeah teaching the difference is hard, because when someone is just starting out there's no intuitive way for them to know the difference. You always see prints not working, or input not working the way they saw in the tutorial. As far as support ending, that doesn't mean too much to me, since it's already solid, and I'm sure that there won't be any mega-bugs that haven't already been discovered. Of course you never know.
... how about the fact that Python 2's lifecycle ends in about two years, which is stated elsewhere in the thread and ANYWHERE you bother to look regarding the topic. Do we need to return to base principles on every statement, or could we possibly assume in r/python that someone has a clue about this? I didn't say "Py2 must die", if I was to drag your metaphor out it's on life support. From the [wiki page linked](https://wiki.python.org/moin/Python2orPython3) from the front page of python.org, it's been over seven years since the last major release of Py2. &gt; Short version: Python 2.x is legacy, Python 3.x is the present and future of the language &gt; &gt; Python 3.0 was released in 2008. The final 2.x version 2.7 release came out in mid-2010, with a statement of extended support for this end-of-life release. The 2.x branch will see no new major releases after that. 3.x is under active development and has already seen over five years of stable releases, including version 3.3 in 2012, 3.4 in 2014, 3.5 in 2015, and 3.6 in 2016. This means that all recent standard library improvements, for example, are only available by default in Python 3.x.
It looks like when you define your various API Key strings, they are in Unicode. And should be in ASCII.
&gt;Its about Python3 generally being a better language and the fact that we might want to utilize new packages which only support Python3 Could you help me understand how it's a better language?
Create a line edit object for entering password or enc.-dec. key self.password_line_edit = QLineEdit(some_parent_widget) self.password_line_edit.setEchoMode(QLineEdit.Password) self.password_line_edit.setObjectName("password_line_edit") #self.password_line_edit.setPlaceholderText('password') or you can invoke a dialog from open &amp; save methods (see below) def get_password(self): password, ok = QInputDialog.getText(self, 'Password', 'Enter Your Password:', QLineEdit.Password) if ok: #if password: return password encrypt &amp; decrypt def your_encryptor(password, text): """Please do not use this!""" encrypted_text = text*len(password) return encrypted_text def your_decryptor(password, encrypted_text): """Please do not use this!""" decrypted_text = encrypted_text[:len(encrypted_text)//len(password)] return decrypted_text For example: [https://github.com/goldsborough/Writer-Tutorial/blob/master/PyQt5/Part-4/part-4.py](https://github.com/goldsborough/Writer-Tutorial/blob/master/PyQt5/Part-4/part-4.py) alter save method def save(self): # line 542 # .... with open(self.filename,"wt") as file: password = self.password_line_edit.text() # or # password = self.get_password() encrypted_text = your_encryptor(password, self.text.toHtml()) file.write(encrypted_text) # ... alter open method def open(self): # line 532 # ... with open(self.filename,"rt") as file: password = self.password_line_edit.text() # or # password = self.get_password() decrypted_text = your_decryptor(password, file.read()) self.text.setText(decrypted_text) #... 
Yeah, I've spent the last six months at work taking stuff out of Excel, processing it with python and sending it back. It would be nice to cut out that export/import step.
&gt; Most commercial software developers will not touch random gists with a ten foot pole if they can't explicitly list the license it's distributed under. Right because if in your copyright notice, you explicitly say this is not copyrighted in any sort of way, the author still have copyright. They also just happen to have no idea about copyright law. You literally cannot give away your copyright. This is why there are standard copyright blurbs. Just pick one.
https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSRBYq9cqrFdABYVc_47VaKadMcuVPgWDnyhpojHutuBlOFYYOBAQ
&gt; Also where are you scrapping this information from? Wondering this too. Who publishes their private key publicly? 
Lots of engineers use VBA. By engineers, I mean mechanical, chemical, etc, not software. My formal education is all in chemical engineering, so I hang around that sub a lot. At least once a month, a student asks which "coding language" he should learn, and the majority answer every time is VBA. And in many ways, that makes sense, despite VBA's many shortcomings. These people work at companies where they may not have the freedom to install something like a Python interpreter, and certainly can't depend on any of their co-workers having done so. Microsoft Office is the thing that everyone is guaranteed to have, and (ab)using Excel is second nature.
Yeah, especially in this particular situation. Good luck getting the sort of people who want to replace VBA with python in Excel to use Calc.
Generators, Unicode by default, keyword only arguments, division functioning the way you’d expect, advanced unpacking and probably a couple other things I’m forgetting. Though, the most compelling reason is the desire to use the latest packages which may not support an antiquated technology.
&gt; Why am I downvoted when I truthfully expressed my own experience? Question: is libreoffice slow as molasses. Daily user: no I use and it's not slow. Probably because you haven't used Excel in 10 years so you actually have no clue how it compares perf wise.
They have already ports lots of their API to js. It's taken several years to get to where they are now. Spreading that work to yet another language means even slower progress. https://dev.office.com/reference/add-ins/excel/excel-add-ins-reference-overview
I didn't think we were talking about other people, my bad.
They have already ports lots of their API to js. It's taken several years to get to where they are now. Spreading that work to yet another language means even slower progress. https://dev.office.com/reference/add-ins/excel/excel-add-ins-reference-overview
Well speaking anecdotally, I was thrown into the deep end of Python as a non-programmer and the whitespace thing didn't really confuse me, except perhaps for when I had a few (too many) levels of indentation
This isn't realistic in an office where lots of people: – are Excel-literate but not Python-literate – want tools they can tinker with – aren't gonna become Python-literate any time soon
I use VBA at work. Client wanted a snazzy interactive spreadsheet :(
Nope, seriously not sure how its gotten this far. The point was your trying to use excel for too much as it is and should invest in the proper application for whatever it is you're trying to force excel into doing.
Do you also still use M$?
API_KEY.encode('utf-8') same with others.
Oh hey, it's you again at the bottom of the thread. Again. 
You could just write a VBA script to do the import/export part. 
I use some of their products, yes.
Dude, why don't you just add &lt;latest buzzword&gt;?! Like really old man... get with it.
Kind of hoping that integrated python removes the export/import part, to be honest.
Whenever I've wanted to use powershell with excel files its always been from outside of excel for an automated task, and it works just fine so I'm not sure why they never added it in the same way VBA is... silly.
Use office with a 365 account. They've made massive changes they just aren't apparent if you're not using it in conjunction with their online services.
There is a reason that MS Office rules the office application game. If there was something truly better it would get replaced. 
Microsoft isn't the same company. They recently removed their own version of remote desktop applications from azure and replaced it with citrix. Why? They stated that citrix just does it better so why should they keep on? If you think thats the same Microsoft as what was linked then you're not paying attention.
Please include it with windows itself 
Fair enough I would contend that if you have the wherewithal to use python in conjunction with excel you can (and should) manage to use python in a standalone way without excel for any sort of serious analysis excel (actually libre office) is better suited for things like keeping track of Xmas shopping 
&gt;Ok, so I just started using python on wd10 (if thats got a difference) and im trying to make a basic rogue like &gt; &gt;right now I'm following the guide [over here](http://www.roguebasin.com/index.php?title=Complete_Roguelike_Tutorial,_using_python%2Blibtcod,_part_1) &gt; &gt;and I got everything but whenever I run the program in python or powershell, a window pops up and it disappears immediately. &gt; &gt;No idea whats going on, I did check module a couple times so I gave up for the night &gt; &gt;Heres the code if someone can tell me whats Im messing up &gt; &gt; import libtcodpy as libtcodpy &gt;Screen_Width = 80 &gt;Screen_Height = 50 &gt;Limit_FPS = 20 &gt;libtcod.console_set_custom_font('arial10x10.png', libtcod.FONT_TYPE_GREYSCALE | libtcod.FONT_LAYOUT_TCOD) &gt;libtcod.console_init_root(Screen_WidthEEN_WIDTH, Screen_Height&lt; 'python/libtcod tutorial', false) &gt;while not libtcod.console_is_windo_closed(): &gt; libtcod.console_set_default_foreground(0, libtcod.white) &gt; libtcod.console_put_char(0,1,1, "@", libtcod.BKGND_NONE) &gt; libtcod.console_flush() &gt; &gt; &gt;and heres the error that stumps me &gt; &gt; &gt;Traceback (most recent call last): &gt; File "C:\Programos\Begin\Source.py", line 5, in &lt;module&gt; &gt; libtcod.console_set_custom_font('arial10x10.png', libtcod.FONT_TYPE_GREYSCALE | libtcod.FONT_LAYOUT_TCOD) &gt;NameError: name 'libtcod' is not defined &gt;&gt;&gt;&gt; &gt; &gt; &gt;if anyone could Help, Id Love it &gt; You imported the module as "libtcodpy" but you're calling it as "libtcod" Either rename all of the calls to "libtcodpy" or rename the import statement to "libtcod"
If it's better than `numpy.pad`, have you thought about submitting a pull request so it can become part of numpy?
It was a joke. 
There are plenty of options already if you want Python to Excel like editing a file outside Excel. It's also possible to make macros in Python instead of VBA.
Is there an easier platform than Excel that integrates GUI for viewing and modifying data, as well as a huge api for custom code in Python I'm not aware of?
The beauty of excel is the wide applicability. You can use it to manage a grocery list as well as generating sales invoices as well as running monte carlo forecast simulations. Yes, there are better grocery apps, better invoicing tools and better forecasting apps, but excel does all of it and everyone knows to use it. Various services can import and export excel (at least as CSV) and most business users are fairly comfortable using it to do what they want. Unless a company is large enough to be able to manage an IT team (or manage a vendor), its really not an option to write your own application for every which way that a company uses excel. 
Ooooh, you just reminded me of my biggest annoyance in Python - the fact that you can't do `a=42; print 'The answer is ' + 42`. I thought Python's whole deal was meant to be duck-typing!? It's not hard to figure out what's intended here. Sounds like these new ways of constructing strings will get around that - I should get into the habit of using them. Thanks! 
But if Excel shipped with python you would have :)
Exactly. When a product is good is good. The work flow MS office provides is very good, from experts to novices. Some years ago in open office community I supported some things people wanted to be copied from MS office, many purists were against it with "MS sucks" arguments. Being like that isn't the way to improve a software, and I'm surprised by MS lately because it's incorporating good things from other systems in theirs. Bash is one of the things I love in W10, who would imagine something like that years ago! 
The company I work at is slowly making the migration from spreadsheets to python libraries and jupyter notebooks. They often still feed data in and out of excel but it's a start. Like you said it's mech/elec engineers working with revit and vendor sheets and looking for ways to improve their workflow. 
Your comment reminded me of this. https://en.wikipedia.org/wiki/How_does_one_patch_KDE2_under_FreeBSD%3F
**How does one patch KDE2 under FreeBSD?** "How does one patch KDE2 under FreeBSD?" (Russian: «Как пропатчить KDE2 под FreeBSD?», tr. «Kak propatčitʹ KDE2 pod FreeBSD?», [ˈkak prɐˈpat͡ʃitʲ ka dɛ ɛ ˈdva pɐt fri bi ɛs ˈdi]) is an internet meme in Russian Internet culture. The question was originally posted on the #anime channel of the RusNet IRC network on May 8, 2004. Its text can be translated as follows: — Hello, is this an anime channel? *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
I went to London to do work experience as a web dev during the summer and spent my whole two weeks there writing VBA for the accountants and debugging FreeBASIC in the lab. I mean the FreeBASIC was very interesting, and I suppose it was nice being able to apply some programming knowledge to real world problems with VBA, but Python would have made 99% of what I needed to do easier.
That would be epic
&gt; I thought Python's whole deal was meant to be duck-typing!? It's not hard to figure out what's intended here. try `'3'+3` then and tell me it's not ambiguous. Python doesn't know English, it doesn't recognize the concept of a sentence in a string literal. It's all a bunch of bytes stored using conflicting types. 
easier ? maybe not better? more reproducible? For any sort of serious analysis Excel is the road to 'hit F9 and hope Excel doesn't crash' and directories full of files like: 'my_analysis_2017Dec12_2PM_finalfinalversion_forserious.xlsx'
Sure. But there is absolute NOTHING better about that than the else. It’s just another (and rather obscure) way to do it
It's already happening, but it really depends on your definition of data analysis. Given the amount of time I already spend helping people structure very simple spreadsheets using well established formulas included in excel, I shudder at the thought of teaching them pandas. Python is a great beginner language, but you have to want to learn it. Most people can't even be bothered to learn the basics of a gui-driven numerical tool like excel, nevermind a far more abstract programming language. I agree with many of the posts here, for straight forward cut and paste and sum and pivot table operations it's pretty hard to be faster than working in excel. The problem with excel is that the analysis is difficult to repeat, harder to automate, and impossible to ensure data integrity.
The number of consultants that walk through my office preaching the gospel of "big data". I'm still waiting for one of them to give me a coherent explanation of what that even means. Dude, just saying the damned word over and over again isn't going to impress me.
I taught myself programming, and have done stuff from embedded to machine learning. That being said, there's no way I can get by without using excel at work. There are some tasks that are infinitely easier with it. 
Correct me if I’m wrong, will Python wholly replace VBA?
The parens shouldn't be extra keystrokes, get a better editor. As for the end argument, it's just infinitely clearer, and you can define `println` or something if this somehow actually comes up enough to matter to you.
Keep the Excel object model as it is in VBA, but with Python supported would be dope. I like VBA too though, don't care what the hipsters think. 
For those who are unwilling to wait for this there are (commercial) plugins that already provide this sort of functionality: https://datanitro.com/ 
In the government VBA and R are your non-browser options. Anything requiring a license would take months to obtain, and python in general is flat-out hard to get for reasons I still don't understand but attribute to hacking fears. Hell, one day I came to work and found all VBA turned off without prior notice, turning a 15-minute weekly task into a 6-hour one. Two days and a dozen confused helpdesk people later and I got a GS-14 to explain that it was only for files not in a "trusted location," which I could change at any time. How the he'll is that any safer?
Have you used vs code for Python yet? Not too bad. They are a huge company and some people working for them do care about standards. Including, I believe, their now-CEO. 10-years-ago me would slap today-me lol. 
I hate it
same problem occurs :/
Hah. I haven't actually.
Whenever I read this kind of comment I realize most people have no idea what Excel can do these days. I'm agnostic when it comes to what tools you should use. Excel does the job for 90% of the work tasks around. If you learn how to use Power query you can do a lot more things and handle big data. 
You must have not used excel since 2010, because it can do lot more than any other similar software around
Keras, numpy :3
I filled it out and suggested R
There's also xlwings which is free and open source
Me? For technical computing sure Python is better, but for automating redundant tasks inside a spreadsheet or interacting with office products or anything that needs to be shared in a usable format with non-coders, VBA is by far the superior solution for what I'll call low effort tasks. Yes it could be done better with a "real" language but most tasks VBA is good for is when it's not worth developing a full application. Most VBA users are engineers and accountants or whatever not software developers. And it's incredibly easy to Google VBA code snippets, arguably easier than Python since it's been around forever.
Can we get a link to the survey? I would love give my two thumbs up!
What exactly are you processing that it isn't mostly automated? 
I think my input is "do it".
Note that for the HASH,you have to convert from Base64 string to bytes before creating the hash And also AFTER hashing, you are supposed to take the result bytes and convert to Base 64 String and use that in the headers. Other APIs do it a bit differently, so thought maybe that is your hang-up
they'd probably integrate the CLR/DLR first, and then look at languages like ironpython, ironruby, powershell maybe f#
I’m in the same boat as that guy - I had a sheet that took CMM data from a portable laser scanner and converted it into machine code for adaptive matching, I had a sheet that I programmed to take in a user’s input and then create a work order for my shop, tying in all of the serial numbers and pulling the correct revision controlled templates for the data inputs (a manual and terrible process before)... I had a sheet that took my company’s garbage ERP export data and then *corrected* and displayed it in a useful manner... I’ve done loads of projects with it. Some incredibly simple and some more complex time savers. I love the integration with excel. As far as the language itself I think it’s a little easier to learn for beginners but it is kind of a pain to deal with daily. It feels limited sometimes but I’ve only got some rudimentary experience with other languages. For those wondering I am a mechanical engineer who manages new product development for land based and aero turbine engines. Primarily land based turbines though. Learned VBA in my spare time at my first job. 
I use Excel every day, it's still my go to software for a lot of things. But just because a lot of people are too lazy to learn how to code doesn't change the fact that anything that can be done in Excel can be done in Python at a much larger scale and with significantly better performance. 
What sort of land-based vehicle needs a turbine engine?
[Power Generation](https://www.gepower.com/gas/gas-turbines/7ha), not for vehicles. Vehicles would still be considered ‘aero’ because they would likely be high bypass flow with double or triple spools. Land based are just giant single spool engines. The theory is largely the same. That land based turbine I linked would run with another one beside it (so a pair) and burn natural gas for about 40% efficiency - the exhaust heat is actually dumped into a single steam turbine though and you can get efficiencies in the 60% range. Right now, the 50Hz version of that engine is running and France and holds the record for the most efficient combined cycle power plant on the planet at 62.22% - which is insane. Cars are only in the low teens iirc. 
Yeah I agree, which is why I think having a Python for Excel thing is generally a waste of time. If I'm doing something so intricate that I need Python functionality inside the Excel ecosystem, I'll just do straight up Python instead. I'm sure there are use cases here and there, but generally speaking it feels unnecessary.
I think their work with R is supposed to be pretty good
thanks for the salt, douche. Yes i tried googling, my mistake for posting here instead of learnpython. 
This would be awesome, because then I could finally learn python. I’ve found it a bit difficult to figure out, and rely on VBA. I’m ready to step up my game. Though I sure hope they don’t remove vba entirely, or I’m going to have some problems. 
&gt; use JavaScript or Lua to access windows api? office interop? vba is inconsistent, in the same way R is inconsistent or javascript is inconsistent. so if you could choose another language for the back end of excel it will be one poison over another. in my opinion, most of the annoyance seems to be from the application object model rather than the language itself. in which case, if python were to be integrated into excel but the object model is going to remain the same, i'm not sure that's going to be life changing. the fact that vba idioms aren't as "modern" as the other languages are doesn't seem like a big deal to me. I use c# python and vba and they are v different languages with v different idiosyncrasies and it's just one of those things that I simply gotten used to. there are times I wish python was more like C# or C# was more like python but those are really just passing thoughts.
I have few questions 1. what will you do running through lists? 2. In what format and is there any email sending provision after computation? 
They have a C# api? - I'd love to see what you have if you're willing to show me!
i put .encode('utf-8') on all the inputs, didnt work :/
Oh honey, you got the very gentlest sprinkling of salt; barely a whisper. Here's a bit more: Don't be a lazy fuck, don't expect everyone else to do you work for you, and read the fucking sidebar before posting in any subreddit. Just about everyone else manages to do it - why can't you?
Or, it's usable and better than nothing.
I also learned on Matlab and have never seen it used either. I totally agree about the intro to programming. I’d love to be able to do C++ or python. Visual studio is free and it’s super powerful... For larger data sets VBA really breaks down in my opinion. You can turn off screenupdating to speed it up but at the same times you can’t tell if it’s still working or your crappy work laptop is frozen. I have written a couple that utilized upwards of 40,000 lines of data with probably 100 columns to do some organizing and to spit out some statistics and both took upwards of 15 minutes. People run much larger data sets in less time but once I got it working (debugging code that takes 15 minutes is a chore) I would just run the code and then do something on the shop floor and come back. Optimizing it would have taken too much time. 
I read your addres as "two youth's" the way it's said in My Cousin Vinny. That's all.
Just as a learning experience, can you go into more detail as to what kind of solutions you've developed using win32com?
I am going to move this over into learnpython since i was missed that section in the sidebar and ill include this into that post. However, there will be no email after, a little text file or something would be sufficient. The report im getting is in a csv format, but i can save a local copy and change that. Im not sure what you mean about the first question. i havent written anything in python yet, i've done mostly windows admin work and been able to get away with powershell for most of what i was doing. So what i was envisioning was something like an import csv (the report) and a foreach but im stuck on how to get the date to include the day. Honestly, even if i can just get the list of dates to output as date + day that would be helpful then i could at least sort or eyeball it much easier. Im trying to avoid having to go through a list of 50+ dates and check the calendar to see if it's a weekend day. I havent been able to leverage powershell for this one so im trying my hand in python as its something im just starting to learn. Thanks
https://en.m.wikipedia.org/wiki/M1_Abrams 
**M1 Abrams** The M1 Abrams is an American third-generation main battle tank. It is named after General Creighton Abrams. Highly mobile, designed for modern armored ground warfare, the M1 is well armed and heavily armored. Notable features include the use of a powerful multifuel turbine engine, the adoption of sophisticated composite armor, and separate ammunition storage in a blow-out compartment for crew safety. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Cool, this is a point in a good direction for me! Thanks, i can read into this and try and write something up based on this.
Yeah we took a single C++ course on actual programming principles in first year and then after that the only people learning proper organic techniques were the computer engineers. In my degree program we used matlab for some signal processing and very primitive numerical methods, but other than that it was all using either commercial tools for modelling or using excel and matlab to analyze data. I didn't start really learning time fundamentals of computational numerical analysis until grad school, and even at this point basically everything I know about programming principles and standards is either self taught or was learned from working with senior graduate students in projects. It's fair though.. An engineering degree is seeking to teach you very specific things about fundamental physics, the design process, and the process and execution of modeling from a conceptual standpoint. I'm totally fine with having to learn the specific execution of various models myself. I just wish there had perhaps been an option in my coursework where either some analysis courses could have encouraged students to use lower level languages to write their own efficient codes for analysis, or at least an offered course that would focus on proper standards and practices when using C++ for numerical modelling. I'm also kind of upset with myself for leaning on the crutch of excel and matlab for so long and putting off learning how to use Python and C++ until I had to. It made the quality of my work in the past less than it could have been, and I feel kind of on my back foot now in terms of my level of understanding of and skill with lower level languages. 
&gt; The parens shouldn't be extra keystrokes, get a better editor. No you're right, personal preferences mean my choice of editor is worse than yours, come on. &gt;As for the end argument, it's just infinitely clearer it is clearer, but that doesn't bother me much, since I'm already super used to it and I have been in the position where the trailing comma caused problems like once or twice in my years of Python. It's better yes, but not usefully so.
This seems ridiculous to me. The more python and R i learn the less spreadsheet processing i do. I don't think i am unique in this; it seems to be a logical end. Who actually benefits from this in the end? 
I don't like python, so I wish it was perl or bash or something else but at least it is a real language.
God, anything to kill-off VBA
I have to disagree, libre can do more than any other suite with the only exceptions being self justifying Microsoft products (which can easily be replaced). Please do tell what aspects of office make you believe it is better? 
Ouch. So much unnecessary pain. I worked for a civil aero design company and we used excel for everything. For a fairly large project we had a large workbook that was used to track hundreds of drawings and parts. It was slow to open and slow to use. I thought it was probably the worst solution but no one had the skills or the time to learn anything different. Things like version control software for drawings or SQL databases for tracking parts and drawings were never considered. I felt some things could have been improved but because the knowledge was outside their domain it was never considered. 
What os, system, and version of libre are you using? I have a moderate system and i easily handle multiple(8 to 15) sheets 25x800 at a time in libre.
They don't have official C#, though there are a couple on Github. Our code is very much tied to our proprietary trading machinery in [Medved Trader software](https://www.medvedtrader.com/crypto) so can't give that, but the GitHub stuff will be better for your purposes anyway since it was designed for public consumption. The code that gets the signing stuff though is: private void GetCBAccessSign(HTTPConnection.RequestMethod Method, string sPath, string sBody, out string sSign, out string sTimestamp) { sTimestamp = TimeConverter.DateTimeToUnixTime(CurrentServerTime).ToString(); // generate sign string S = sTimestamp + Method.ToString() + sPath + sBody; if (hashMaker == null) { byte[] data = Convert.FromBase64String(CurrentAPISecret); hashMaker = new System.Security.Cryptography.HMACSHA256(data); } var B = hashMaker.ComputeHash(Encoding.UTF8.GetBytes(S)); sSign = Convert.ToBase64String(B); }
Here's the thing about VBA. *Accessibility.* I think a lot of folks in this thread are coming at this from the point of view of experienced programmers. The value I've found in it is in its simplicity for the non-programmer. I worked with a large team of super talented CAD guys and engineers, who all knew Excel and Access and their various CAD seats (ProE, Catia, whatever-thefuck, I'm not a CAD guy)... but they didn't know programming at all outside CNC and a bit of PLC stuff. But when I introduced them to VBA with a large estimating / program management spreadsheet set we were developing, they took off like fish in water. Highly technical guys with a ton of knowledge, but sort of... trapped... in their various platforms. VBA just like, set them free. In weeks those dudes were performing small miracles with data sets and automation, and many of them jumped right off into other languages like Python, Perl, and even into c++, extending not only our project, but building modules for their CAD systems and cool stuff on the floor machine side. It was really cool to watch. So yeah, *way* better than nothing. 
Python is fantastic at so many things but for really deep level data work you should learn R (not as hard as you may think). Spread sheets only place is for people who need an easy system to input data and those that are capable of making use of that data are also capable of learning python and/or R
awesome, thanks again for the recommendation. :)
How so exactly?
Learned C++ first, python most recently. Smattering of others in between. Learning concepts in one language definitely can help learning similar concepts in another. For example, PHP associative arrays resemble python dicts. And Java with everything being a class helped me understand classes in C++ much better which helped me understand MVC development.
I got this! It looked like a spam email...
I can assure you that Microsoft cares about standards. I think we are up to at least 4 core contributors to CPython at the company. Three of them are on my team. Disclosure: I work at Microsoft on Azure Notebooks, on the wider team responsible for Python Tools for Visual Studio, Visual Studio Code Python, etc.
The idea is you can use Python to develop the workbook and your colleagues can view and interact with it from Excel
To be fair there is a J(ava)Script engine for Windows Script Host and you can use it to work with Excel object model just fine just as you can use any language that supports COM interop. I've been automating Office since the 2000 version and I know the object model relatively well. It doesn't really bother me but that's maybe because I'm just used to it. I also try not to lose too much time on the macros. Just make them work and move on (except for those that are not for one off tasks)
Anything but VBA. I'd even stoop so low as to use Perl.
You don't really mean that.
I've been using it since Office 2000, so for quite a few different things. The last was, we got loads of data (like one database record per worksheet) in separate workbooks. So I just copy all that data in a new sheet as a nicely formatted table.
I can imagine people trying to run TensorFlow on data sets they've loaded into Excel. That would be a nightmare.
Mostly I have the issue with a) environment variables and b) other modules that that poor interfaces like module-level configuration vars, etv.
I love azure notebooks! Thanks!
Yes, the machine learning algorithm that not only detects mistakes (like my VBA macro already does) but ALSO emails my sales rep to figure out what the actual information for that line should be. What's that one called again? The fact that you don't believe excel should ever be used over pandas makes me believe the only experience you have ever had with real data is something someone else has already produced for you (in excel). When you are dealing with 1000 row sheets sometimes it's easier to just scan through it and manually edit 10 cells over the course of 10 minutes.
&gt; The thing I hate about PyCharm is how slow it is. It's blazingly fast in some ways, and torturously slow in others. Best intellisenese, worst performance of the 3 IDE's I've tried. It's so hard to let it go.
Wrong. It will effectively fork all scripts.
Oh, wow, do yourself a favor and learn Python; it's really not all that hard to learn and it's so useful, especially datasets like that. Especially with the numpy library (designed for handling large arrays of data), that data processing would be trivial. Running statistics on a small data set like that would probably take &lt;15 seconds in Python+numpy, rather than 15 minutes. Realistically, reading 40k lines into memory would probably take more time than actually doing the processing. A large portion of my job is processing large datasets, it's quick and easy with Python, but I can't imagine trying to parse data with VBA like that. 
I'm in Australia and aero is a very limited industry especially with only a bachelors so I decided to give up on it. Plus the city where I live went through a massive downturn in engineering that we're only just getting out of now. I love programming so I decided to pursue that instead. Still wish I could have worked on rockets though haha.
Among other things I work with real time fleet Management, processing a ton of csv data of the fleet with weather, traffic, and spatial data. We need to clense several of our data sources, and integrate them into predictive models. But hey it's only a few terrabytes a day, so what do I know.
But I think Python still holds that potential as a gateway language. Even more so since there are such great resources everywhere for learning Python from no programming experience whatsoever. This is a no-brainer in my mind.
Us superusers/programmers who have to make or prepare spreadsheets for other people who thinks GNU is nothing but an animal (and nothing else).
Wow I will blow my stack if this happens
VBA is annoying because it's so esoteric. I don't feel like learning it just to write excel macros, it's too narrowly applicable to justify the time spent.
Oh I absolutely agree. Just the headline, MS considering Python integration with Excel got me all.. frothy and tingle-toed. As an admitted and somewhat recovering Excel addict, the thought of a Python shell as alternative to VBA is something approaching electric. But then... I'll believe it when I see it.
I know Python and I'm alright with Excel. Never picked up VBA. But if Excel works with Python, the amount of new things I can do with VBA would be awesome
&gt;conda Yeah boy! That's what I'm talking 'bout!
I refuse to learn VBA.
Python is dope, so yes! But also anyone using excel should checkout python libraries if you're already python proficient. Plenty of great graphing tools and libraries like pandas for excel replacement. Not to say excel doesn't have its place, just if you're already using python -- don't give yourself more headache if you can do what you need in python 👍
They are all valid address. Check them on the block chain. Each one is a valid address. 99.9% of them are valid addresses. 
They are all valid wallets and Private keys. 
Please yes.
Right, standard, like the MIT license in the gist here.
Why is integration with another system a question? It's not like anyone wants to use Windows in the first place.
Cool, another option in that case would be to use the `openpyxl` lib to read and write those https://automatetheboringstuff.com/chapter12/
Neat! That's a great use case
I've looked at it, but 'np.pad' does a lot of different things, and it would't be trivial to add the code in any nice way.
Yeah, i see what what you mean, that would reduce the clutter when browsing through them on the homepage. Thanks for the suggestion!
It is standard.
Kinda off topic but anyone here got some good resources for dealing with excel through R? I haven't found anything good yet. Part of the reason I'm learning python is to get around this kinda situation
Plus static typing in 3.5+
I received this and gave feedback. Hope others here do the same. 
Why not just use pandas instead of excel? I can't see benefits using an excel sheet(s) over pandas or a mySQL table. Maybe there are specific scenarios where I am wrong? I'd like to here them if I am.
I'm a chemical engineering student and (fortunately) I've never used VBA. We mostly use MATLAB.
Highly doubtful. There's an embarrassing amount of business logic that relies on decade(s) old VBA scripts... it's nowhere near as prolific as legacy COBOL code, but the enterprise world would literally bring out their pitchforks and sacrifice some MS peeps if/when VBA was finally given the ax.
I wish libreoffice team would also accelerate their python integration.
In your government, in mine you can install any type of malware if you want
Again, I don't care that it's lazy or a bad excuse, it's that it's too much of a change personally for me to feel good about it. The migration isn't a problem either, it's just that it's a bummer to add the parens everywhere. Trust me, telling me it's wrong or even berating me (not that you're doing the latter) won't convince me, there needs to be like a tangible reason. Something that's like 'man I can't *not* have this', and across the entire thread, how many people were able to answer? Otherwise everyone's telling me I'm wrong, new, or lazy (which I admitted right out the gate). I know I'm personally pretty foolhardy, but not many people besides you are making an effort. It's proving my point, I think.
What kind of shop do you run?
You should use generators more. They're a god send for large data sets, especially if you're downloading them while processing them. 
Haha yeah. It's really sad. We have barely any aero industry or non university research here yet we keep pumping out grads. So they move overseas. I'm very bitter about it haha.
I disagree. I think if-else is better if you only have three elses. But if you end up having 30 else statements, then using the dictionary solution is far better. Using the if-else construct would look like a huge mess.
No love for Atom, huh?
In my opinion, mixing raw data, code and results into one spreadsheet is never a good idea. So if you already know how to script in Python, go for the Jupyter Notebook + Pandas solution. Because then you can also swap out your raw data by just pointing to another spreadsheet.
&gt; we don't understand how they work very well How much is it that we do not understand about their operations?
Can this be hooked up to logging?
To add to this, many of my clients demand deliverables in Excel. Mostly for the reasons you described, but they will cite security/compatibility too.
What would stop them running the VBA scripts?
When you want your homework done by devs so adept they forget to put a URL or any kind of contact details on their spam.
absolutely beautiful
What he is saying is that if you are generating these things in the regular way, the chance of finding one that's got coins in is so low as to be pointless. This is part of the design of the system. Appromimately, hash collision is 1 in 2^160 from memory. Assuming a billion have been used that's 2^130 to collide. Assuming you can do 1 per CPU cycle at 3Ghz (which you can't) that's 2^100 seconds or so. Which likely exceeds the lifespan of the universe. Never the less, you can try if you want. In which case you get a million dollars or jail or murdered or some combination depending on your luck. 😀 
I haven’t found it to be all that terrible. Honestly the only problem I’ve had with them is opening proprietary formats. 
TIL. Thanks.
&gt; Who uses VBA anyways? a lot of people unfortunately
Knowing MS, I would rather expect them to break the backwards compatibility so everyone is forced to buy the new version.
I have a project related to a crypto currency. We need a good python dev willing to do the backend. It's not amazing pay but it's some thing. The bounty for the project is 2000groestlcoin which is averaging $1.20 each atm. It's a community project driven by donations but that's the value right now. We have a team of 3/4 working on it atm and the bounty will be split between them all. Contact me at adam@groestlcoin.org to know more
See my post above. Same applies to you. 
Wow, this is huge! It's not just about Excel but in extent VBA for Office applications, as well as Microsoft showing acceptance of Python as a scripting language for Windows applications, or Windows itself. I of course applaud this, but also hope for a next step being integrating Python as an official Windows Scripting Host engine.
Python designers decided that they won't be guessing for other people, following the "explicit is better than implicit" rule. More often than not this helpfulness would actually hide logic errors in code, letting them propagate and surface in completely unrelated places, making them much harder to find. For similar reasons py2's helpful `input()` was an extremely bad idea. 
Star_Rat's name?
Woohoo! I really like excel but VB sucks the big way - so, input - do it right and we'll documented.
Data manipulation on steroids.
As far as JavaScript, MS already invented Typescript. I'm surprised they didn't mention that. But I would prefer Python.
If we had a spec-mandated ordering, could we then end up with the sorts of operations that tree-based mappings naturally do efficiently? e.g., "return all KV pairs where the key is within a specified range"?
&gt;government I work for government, do a lot of VBA programming in Access. Was tired of the million and one spreadsheets spread all over the place. Created the centralized database, then automated many tasks. I think they are just scared shitless that people will compile and run unverified malicious code. With VBA, I can easily create havoc, and I can even compile C# code, just not authorized to have Visual Studio or any other IDE. 
Wouldn't by definition liking VBA make you a hipster? Python is really a "mainstream" programming language.
One step at a time. Your first problem is dealing with that IT VP of yours. I encourage you to think about assassination. 
No, you're talking about *sorted* maps. *Ordered* maps just conserve the order of insertion (though OrderedDict specifically allows manipulating the map's ordering as well).
I use xlwings and xlswriter for a lot of spreadsheet making. Not ragging on your workflow or whatever, just throwing it out there.
Well, *has*, I don't know about *needs*. Probably one of the poorest decisions ever made in American armor of the past 30 years. Those things screech like demons if you're anywhere near them and can go like 20 meters between fillups.
Right, hopefully they do support static typing in the future. Type hinting is nice to have itself though.
Python module *and* open source? Yeah, I'm going to gold this.
MS will add a their own version and call it Boa. /s
I just used it a few weeks ago. I had people fill out a google form which automatically populated a googlesheet. I grabbed the data off a google spreadsheet, ran it through pandas and dumped it into an Excel file with xlwings and sent it back to the person who wanted the data. https://developers.google.com/api-client-library/python/ https://www.xlwings.org/
I mean I guess I saw the downvotes coming. I probably would of done the same thing 10 years ago and told everyone Matlab was the future or whatever.
This is what I tell myself. Unfortunately, it immediately leads to me wondering how much I really want to keep this job ;p
My spouse took an technical interview at MS, and the interviewers didn't have a clue to what git etc was - they were totally in the MS bubble.. the level of ignorance and apathy was surprising..
&gt; So get good at solving problems How?
Isn’t VBA stopped patching
I almost died choking on a Miniwheat when I read that.
I was just explaining what the other guy was saying since for some reason so many people were misinterpreting it. Although I still think you're wrong. If there are much better tools for the job than excel putting together a simple cost/benefit analysis should be a no brainier... 
I've been doing my spreadsheets with python itself for years. It's a pretty simple class to implement. If you want a grid front end a flask web front end is pretty easy to add.
Freelance method: 1. Find a client, listen to their problems 2. Tell them that you can solve their problem 3. Given them a time estimate (multiply your gut instinct x3) and billable hourly rate 4. Freak out, because you actually have no idea what you're doing 5. Dive in, Google the fuck out of everything, and keep trying stuff 6. Learn as you go 7. Cobble the solution together and deliver it in the nick of time 8. Repeat Employed method: 1. Find a problem (i.e., a process that sucks ass) 2. Have no idea how to even begin 3. Dive in, Google the fuck out of it, and keep trying stuff 4. Learn as you go 5. Cobble the solution together 6. Win 7. Repeat 8. Volunteer for bigger and scarier problems. Always live outside your comfort zone. If you're not freaking out, you've stagnated. That's how.
In my experience, if you actually understand how decorators work, you've come quite far. There's a lot of stuff you to need to understand, in order to understand decorators...
They already went there. They started a few years ago. Their code runs on their chakra JS engine, so it has to be real JS. I believe they publish typescript definition files, so it's an option, but not a requirement. https://dev.office.com/reference/add-ins/excel/excel-add-ins-reference-overview
Filled out. 
Here is the link for you to vote: https://excel.uservoice.com/forums/304921-excel-for-windows-desktop-application/suggestions/10549005-python-as-an-excel-scripting-language
That's all nice and well. But unfortunately in a workplace where Excel is deeply ingrained, using LibreOffice is just not feasible. Just too many documents riddled with MSOffice idiosyncrasies which won't open properly on LO.
&gt; We all ready have filter/map/sorted &gt; &gt; a) that's very, very little &gt; &gt; b) not bein chainable methods, it looks ugly when you compose it &gt; &gt; c) this is not a standard way of processing collections I suggest that you raise this on the Python ideas mailing list and see just how far you get. This of course assumes that it has not been raised before and rejected.
Ubuntu 16.04, Libre 5.3.3.2, i7-4790 3.5GhzX8, 16G ram. No slouch, I use it for scientific computing. 
Maybe it's the difference in data per sheet. Looks like you were doing ~20k cells/sheet, I was doing 120k cells/sheet. 
Yes please, finally. Yes, please. Yes.
Start by formatting the code correctly. Four spaces at the start of every line. 
True but I've watched people open the same datasets as me in excel, on better computers than mine (but running win10), and excel would just hangs everytime you would try to do anything. So maybe it's case by case. Side note if your dealing with that large of data you should really get into R or python (if you haven't already). I get my work done magnitudes of time faster since i learned R.
Python replace VBA or will VBA remain? Why Excel and not Office (why keep VBA for Word, Access and Outlook)?
&gt; Why not just put them as regular free functions in a module, as attributes on a `types.SimpleNamespace` or even as `@staticmethod` in a class? I think the main problem with free functions in a module and `types.SimpleNamespace` is that they are not namespaced as primary and variant (in the same way that, for example, in `itertools.chain` there is a primary constructor and a `from_iterables` constructor). Whether you want to dispatch on type or not is a separate question addressed [in the README](https://github.com/python-variants/variants#differences-from-singledispatch). Nothing's saying that it's wrong to use functions namespaced by `_` with the convention that the one *without* the `_` is the primary function, but I think it's a useful pattern to have the primary and variant functions semantically grouped like this. (Disclosure: I am the author if this library, if that was not clear.)
So, you are generating random bitcoin wallet, hoping that the wallet already exists so you could take coins? You realize how little of a chance there is to generating someone's actual wallet with coins in it?
If you just need it for basic data manipulation, check out openpyxl. Pandas is a fantastic data analysis library that can do a whole heck of a lot, but if you don't need all the bells and whistles, go with openpyxl
If you have Windows, just download it from python org. If you enjoy codeacademy, then dive right in, but I wouldnt recommend it. If I can give you my 2 cents, try automate the boring stuff it was excelent if u ask me. First get handy with the language basics and jump into games creation afterwards.
I see this answer a lot. People on /r/python love pandas. No question pandas beats a basic library like openyxl in breadth of functionality, but if you don't need all of that, why not stick with something simpler?
That's what I mean, I'm never using them because I never need them. I realize how great they are for certain use cases but those aren't my use cases at all.
It's all good man, I know how frustrating it can be to try to convince someone when it's tough to provide actual points against them. I appreciate you trying all the same.
TIL, thanks! 
&gt; I think the main problem with free functions […] is that they are not namespaced as primary and variant See *that* is literally *nowhere* in your readme, hence my reaction that it looks like a really complex way to namespace a bunch of functions together. &gt; Whether you want to dispatch on type or not is a separate question addressed in the README. Mate, I'm pointing out that `singledispatch` works with the alternative I propose because *I read the readme and it talks about that*. &gt; Nothing's saying that it's wrong to use functions namespaced by _ with the convention that the one without the _ is the primary function You're missing the point again, I'm pointing out that it works fine to preclude questions about "but can you still call the functions directly in that case". Because once again I read the readme and it covers that case.
Yeah, I've started packaging my py scripts into .exes and sending them to people in my org.
A merge between Pypy and Cpython. Basically a reference implementation of Python in Python, with JIT and all the other PyPy goodies.
Posting unanswered Stack Overflow questions links here is bad form.IMO
You should find another job. No, I'm not kidding. This is a huge red flag that the company you work flow is so bound by procedure that they cannot make changes quickly enough to react to changing market conditions.
You're welcome! Even though I had no part in it!
That's the new breed: stealth spammers.
Again IMO, the way to go would be not to use a link and just post your question text/code to r/learnpython. That's what I'd do anyway. Cheers and good luck!
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#2: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#3: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Okay, will do - thanks 
Bad boy
&gt; See that is literally nowhere in your readme, hence my reaction that it just looks like an overly complex way to namespace a bunch of functions together. Ah, good to know. I'll try to improve the documentation. I can see now that probably the initial example is possibly a bit too messy. If you have a suggestion I'm happy to take PRs. A secret here is that I wrote this library with the explicit expectation that someone might find a compelling reason why this pattern is *not* used. So far in talking to people I've mostly found that once people understand the pattern there are no *fundamental* objections to it. &gt;Mate, I'm pointing out that singledispatch works with the alternative I propose because I read the readme and it talks about that. Yes, I got that. I think what I was trying to get across that the use of `singledispatch` is *somewhat* orthogonal to the use of this library. If you prefer to namespace your variants as methods on the function *and* you want to dispatch on type, you can still use it *with* `singledispatch`. If you want explicit dispatch that can't be inferred from type (e.g. URL vs. file path), then you can use this library. One thing to note is that you *can* use a sort of "wrapper" pattern to achieve even the "explicit dispatch" method with `singledispatch`: ```python class Url: def __init__(self, url): self.url = url @singledispatch def myfunc(txt): pass @myfunc.register(Url): def _(url): do_something_with_url(url.url) ``` I sorta find this a bit unwieldy compared to `myfunc.from_url`, but to each his own.
Thanks! I've used VBA and Python both for 10+ years and Python is just so much easier. I don't know if you've ever done error handling in VBA "On Error goto", but let me just say I'm glad I've never had to deploy VBA and mostly use it for my internal processing.
&gt; Side note if your dealing with that large of data you should really get into R or python (if you haven't already). I get my work done magnitudes of time faster since i learned R. Oh for sure, I only use excel / libreoffice if a colleague insists on getting / giving data in that format, or if it comes off an instrument in a way that requires some fiddling before opening in R / python.
Nah, I'd rather Excel use a standalone scripting language that's almost impossible to learn without taking proper classes.
OP if you still need help I'll post the solution after work.
Congratulations! So, please share with us what you have done since that [post](https://www.reddit.com/r/Python/comments/793d2f/how_can_i_know_i_am_ready_for_junior_positions/), what you have learned, created or built, etc. It will help others who are what you were a month ago :)
Noob here who started in between 2 and 3 If your biggest argument is against the new print feature, than mine is a *for* the new print feature. It makes a lot more sense to have what you want to do within () than to have it just floating in the breeze like a comment. It makes it easier to follow someone else's code and easier to read as a normal "Do this then that" method.
I don't get it. kdnuggets literally [took a dataquest article](https://www.dataquest.io/blog/making-538-plots/), cut out a bunch of info, ruined the formatting, and then linked back to the original article? What a terrible site.
Congrats! Get ready to learn 
Also, openpyxl!
 $ pip install xlwings openpyxl
Yeah, I'm in civil and VBA is the most readily available language there is. It's clunky, slow and whatever, but it's simple, and more importantly, ubiquitous. I'm working on learning python, but I think programming-oriented people are too quick to dismiss the language despite the reasons people use it.
Since when did Microsoft listen to it's customers?
That's odd. I've got a rule in my work that one must be wary of &lt;10MB Excel files because Excel 2013 and 2016 gets stuck in opening them. That doesn't happen with Libreoffice Calc though.
I use it to take pandas dataframes and fill word and excel files with the data.
Any large corporation or government that isn't necessarily programming oriented will frequently have similar restrictions.
you forgot the biggest impediment: - Existing, fully QA/QC Excel calcs from 20 years ago that have no reason to be revised or tinkered with because _they mostly work_
Doesn't work out as the simplest option for many, many people doing simple data analysis and visualisation. There are tons in big companies that need to be able to take means of things, or use a sort of lookup, but don't go beyond that. Same with VBA of course, so still in favor of python integration.
I'm quite amazed they didn't pick R, with their whole azure ML picking R?
like giving your boss control of the spreadsheet to tinker with cause he needs to show that he's providing value added feedback
* openpyxl * pyxll * xlwings * pyodbc * pandas.read_excel() * pywin32
My input: &gt; Yes, please. For the love of all that is technically right, good and true -- do the needful and add Python support to Excel. 
Yeah your VP knows shit
There are 100s of mailing lists dedicated to answering Python questions on specific libraries or topics, please see [Mailing Lists](https://www.python.org/community/lists/) for starters.
After a while you just get used to it. Your mental model of your keyboard grows by a row and a couple of columns. I personally avoid numpads. I won't buy a laptop that has a numpad. Typing off-center is for the birds.
This is an excellent question for JetBrains support, and I'm sure they will be very helpful.
please do!
Well, the summary of what I did: Graduated as an engineer with extracurricular experiences which I could use for interviews and having a resume. Taught myself through videos, tutorials, and articles how to code in python, working a little on a variety of topics. Learned how to use Git and Github as well as how to work in a Linux environment as opposed to Windows (these two were key in getting the position). And the last one was show a LOT of enthusiasm. I found a small/medium company ~(30 employees) that I felt identified with (their values, their team, what they work on) and I wrote them a small letter and attached my resume. My interest and honesty caught their attention and they put me through their hiring process (2 weeks of behavioral and tech interviews and a coding challenge) and I was hired! TL;DR: study a variety of technologies so you have a foundation to build on, learn how to work in a group and share code, and express your interest explicitly! :D
Same here. I can't type on a number pad. I type regular numbers much faster.
Meh... my rule of thumb is that I will ONLY use excel if the total one-time commitment required for that task is &lt;15 minutes or so. In other words, your basic cut-paste jobbies with maybe some really quick formulas, averaging, summing, plotting, etc. Anything that takes longer than that, or is going to be an ongoing task, and in my experience it is ALWAYS worth breaking out the heavier artillery (e.g. pandas, numpy, scipy, sql) instead of fighting excel limitations. If absolutely necessary just write out an excel file with the results at the very end. Sure anything other than VBA is a vast improvement, but mixing any kind of scripting with excel just seems like you are getting the worst of both worlds. You lose the novice-friendly simplicity and compatibility of pure, non-scripted xlsx worksheets without gaining most of the benefits a real number crunching platform brings (i.e. source control, custom plotting, custom i/o, access to vast numerical libraries, custom report generation, automation, etc. etc.)
so you touch type all the symbols? I'm trying to teach myself python, but having to look down for the symbols on my keyboard, this inefficiency is making me not like coding. 
Exactly. It was painful for about a year, but now it's second nature.
What's the error when you run your code? It looks like there's [a pull request](https://github.com/vanadiumlabs/pypose/pull/14) on Pypose with some Python 3 fixes. It's several years old, but it might give you a starting point to make things work.
You should be able to use a typing tutor and get your fingers ready quickly. Spend like 5-10 minutes a day for a week or two.
1: /r/learnpython 2: read the sidebar 3: format your code properly - add 4 spaces before each line of code.
And let's be honest, the lion would eat a few of the dogs and then nap in the shade.
the code you put there doesn't even rely in pypose and I know for a fact that pyserial works perfectly fine in python 3. Maybe you could try your app with fake serial ports (com0com in windows or using socat in linux)
Shouldn’t it be ‘**year’ since you want to raise the yearly interest to the power o the number of years?
It actually doesn't sound like switching to Office will make a difference for you. However there's a different audience, the sort of people that Intel aim their Excel benchmarks at, who really benefit from the extra power and features and ecosystem that Office has around it.
For the love of Mike please don't use `eval` on user input, it's just asking for trouble.
Does it compile to JavaScript, or do browsers need to add support for it?
It's a Python interpreter written in JavaScript, you just include the brython file from cdn and instead of JavaScript you write Python code and it works ! Nothing has to change in terms of browser support.
There are several python libraries for working w/ excel files, but nothing officially supported (yet). 
Let me. Clear that up that 1.20 per coin. 2000 coins
Looking for something still? 
Hey are you interested in working on a crypto currency project? 
To finally wean myself of the habit of _ever_ looking at the keyboard I went ahead and bought one with blank keycaps. That, and proper hand position, and it's not that hard to sort out. 
I'm wondering if anyone else is making a leap of thought that imagines not just Python scripting integration for the Office suite, but the replacement of the VBA editor with (maybe a stripped down version of) VS Code. Office scripting would feel truly mature with the rich editing experience and version control features of VS Code.
1. /r/learnpython 2. Google is your friend, and one of the most useful skills you can pick up (in my opinion) is knowing how to search for things. Even just dropping `urllib.error.HTTPError: HTTP Error 410: Gone` into it should give you a hint.
[removed]
Use typingweb or some other website to train. It might be boring as fuck but it pays off. Also, Don't rush it. Unlearning is harder and takes more time than learning right and steady.
ah, my mistake. It's been too long I guess.
I've been building an app with kivy where you put in meal details, then when you need to make a shopping list you click on the meals you want to add to your list, and it emails you a shopping list. It's pretty much done, I just need to flesh out all the details and package it. Every attempt at packaging it with pyinstaller has failed though. Also, can't find a way to clear the json storage file when the app closes. It's been a fun first project though! Next, I'm gonna be looking into automating simple tasks. 
How does one get involved in Github? I've heard it's important and shows good experience, why is that? What sort of stuff have you worked on? Thanks :)
brython.js is 593 kilobytes in case anyone else was also wondering
It is, not so much of a problem though and it makes things easier.
 principal = 1000.0 # starting principal rate = .05 # interest rate print("Year", "Amount on deposit".rjust(21)) for year in range( 1, 11 ): amount = principal * ( 1.0 + rate ) ** year print(f"{year:4d}", f"{amount:0.2f}".rjust(21))
Enjoying your riches yet?
First of all you need to learn version control with your own project. The project I used to learn version control was that I programmed a very simple rpg game backend for character creation (I was learning more object oriented programming + version control). I went on github, made an account, created a repository and just experimented! I learned how to commit, push, branch from master and make pull requests. In my case this was enough of an experience to then apply it to the technical challenge of the interview process and ace it. :) 
File upload using grpcio.
Last week I made a bit of a meta project. A program written in Python to help me learn Python. (I'm a couple months into my Python studies.) I wrote a quiz program that asks me for a subject matter (currently choices are Python and Excel) and # of questions. It then prints a prompt/concept and, when I'm ready, prints the explanation and asks for how well I understand it. It tracks the last time I was given that prompt and what my level of understanding was, which affect the weightings when it's choosing random questions for the next quiz! This week I'm trying to move it from the terminal to a GUI (tkinter), which is my first GUI project and proving to have a steeper learning curve than I expected. Wish me luck!
Very cool! Congrats on the first python program! As a fellow beginner, I found that pulling data from the web can be surprisingly accessible. Automate the Boring Stuff with Python, in the sidebar, walks through web scraping/parsing and accessing an API and both are easier than I expected! (as far as basics go)
That's cool to hear! I picked it up for free a few weeks ago, so I can't wait to start. Have you made anything yet?
Great, a chance to sign up for some spam. Waste of 2 mouse clicks.
[[Last time I checked](https://www.youtube.com/watch?v=BcDV9QUium4), performance could beorders of magnitude slower than js s,o actually not suitable for real world applications. Has that improved?
Very cool! Is it OS specific? Looking at the code I don't understand where it assigns the picture to the desktop background. Would you mind giving a quick little explanation of how it works for a beginner?
Reinforcing that Excel is lightyears ahead of all of the competition.
Pivot tables, table relationships, external relationships, multithreading, charting options, macros, Excel has a far more extensive built-in function set, ability to import foreign formats... all better in Excel
Excel is better than LibreOffice Calc for mostly hardcore accounting and lots of relationships between tables and external sources
Python is freakin' awesome...but isn't it still difficult to write secure code with it?
Anaconda
Pygame is great for beginners but I think he is asking about a game engine with a graphical tool and python scripting which I'm not sure exists. Anyway, OP should focus on command line python for a bit before jumping to graphical programming or be will waste a lot of time not knowing how to debug some issues that are bound to arise. I'd suggest googling some coding katas and getting the hang of TDD to broaden his mind. 
You can do pip freeze to create requirements.txt and then install from the file. Or you can download anaconda which includes everything already 
I've done a couple of suggested projects, but nothing original yet. I've been working on a quiz program that I wrote about in this same post! I did a couple projects on r/beginnerprojects that have prompts to [compare users recent karma](https://www.reddit.com/r/beginnerprojects/comments/1i951e/project_compare_recent_karma/) and [cycle through random Wikipedia articles](https://www.reddit.com/r/beginnerprojects/comments/1jg2ru/project_random_wikipedia_article/). I also did a practice project from Automate chapter 11 that sets up a phantom web browser to play the game 2048 in a simple Up, Right, Down, Left cycle. Oh! Which reminds me that the book also talks about controlling a phantom web browser with Selenium, in addition to what I wrote in my previous comment. That was a lot of fun :)
I'm all set now, thank you
There are some great insights to be gleaned from the PyCon and PyData conferences, clearly more than has yet been written up in a book. see http://pyvideo.org/speakers.html I recommend anything by Raymond Hettinger, Alex Martelli, Brandon Rhodes, David Beazley, and of course, Guido van Rossum. 
You can do literally all these things in libre...and i haven't compared the actual number of functions between the two but i have found many functions in libre that aren't in excel.
Be sure to check out the turtle module for more geometric fun. http://www.instructables.com/id/Easy-Designs-Turtle-Graphics-Python/ 
As a guy in my final year in computer science, what sort of job did you apply for? What were they looking for?
so it's not 'replacing' javascript. 
Try `SimpleBlobDetector_create()` with parens?
you're at a considerable disadvantage if you can't touch type every character (thanks, touchbar..). you should practice. start learning the good habits today.
Not familiar with CV2 but it looks like .detect() isn't the right name for what ever function you're trying to call. Maybe take a look at the documentation for CV2 and find the name of exactly the function you'd like. I found one in some basic reading that was ".detectMultiScale(gray, 1.3, 5)" as an example :) 
This. If you want to parse the integer from the user input just call `int(input())` instead
&gt; It's a Python interpreter written in JavaScript... JavaScript speed/size is *already* a problem in web apps. Unless this directly compiled Python to js or wasm or w/e this cannot "replace" JavaScript except in a toy app. This seems pointless, unfortunately.
&gt; There are currently 124422 packages here You might want to start with a subset. There are lots of module classifications here: https://pypi.python.org/pypi?%3Aaction=browse
Why do you think this? Im not claiming it is easy, just curious. The most obvious reason is something like C where you can explicitly clear mem, where [C]python keeps things in mem due to ref counts "unexpectedly"
If Microsoft is feeling kind to people who have to interact with old-school MS interfaces like COM from Python, and update to/replacement for `pywin32` would be appreciated as well.
&gt; You can do literally all these things in libre https://bugs.documentfoundation.org/show_bug.cgi?id=65046 you sure?
Use virtualenv.
You might consider using Python Pandas: https://en.wikipedia.org/wiki/Pandas_(software) I think this is a good way to transition from R / data frames. 
I saw a case where someone had implemented a python VM in JS, rather than the entire parser and it was supposedly much faster. You would instead include pyc files, not the py files, so it would probably be smaller distributions too. 
As an alternative, you might like LightScript: https://wcjohnson.github.io/lightscript/
Well hot dog. Thanks amigo!
I'm totally pro-brython. It really needs an implementation of something like pip so it's possible to start using various libraries with it.
Exact same thing here! ~2 months of maybe 2-4 hours a day landed me a dev job after graduating in chemE
This is very cool. I've done similar things at work dealing with geophysical data. In my case I use pyqtgraph to generate the actual plots. PyQt is really well suited for dealing with giant datasets - the whole model view thing is super efficient. Did you use pyqtgraph at all for this, or did you roll your own equivalent? Is any of this mutlithreaded? Does your UI block while you're filtering, for example? Are you breaking the data into chunks to filter on different cores using multiprocessing? One of the problems I faced was trying to make my processing efficient on mutlicore systems. Python's threads are just nasty, and passing data between processes involves far too much copying. Cheers
The specifically loaded pandas are the objects I want to have available globally. (Or at least inter module-ly)
You can just run it on a VPS for example on DigitalOcean
My boss is an old school physics phd and did a piecewise simulation with 4 continuous variables in excel across 10 huge worksheets. Not even using VBA, just using auto fill. I replaced that with less than 100 lines of Python, but truth be told I was seriously impressed by his simulation. 
why wouldnt you just download anaconda?
Exactly!
I'm not saying that the size is good or bad. I'm just saying that I was curious how big a javascript python interpreter was, and it is indeed 7x larger than something like jquery. Whether that's acceptable or not depends entirely on your individual intended application. For instance, if you are targeting a mobile device, on a cell network, in a third-world country and/or care about your google page-speed rank for SEO purposes, boy is this entirely the wrong solution for you. However if you are developing an intranet page, or a local python application with built-in webserver, etc. this could be an amazing boost to productivity.
No
We definitely made use of pyqtgraph for the plots, however the other widgets came straight from PyQt (I know pyqtgraph offers alternatives to some pyqt widgets but I don't use any of those). There is some multi-threading, specifically when calling processors; so when you do a complicated operation on a signal, that's spun off in a different thread. Besides that, the spectrogram calculation is actually fast enough that we did not see a need to spin that off in its own thread, but if we get some user reports of that not being the case, then I'll consider having the spectrogram calculation. Doing the multi-threading with PyQt (and QThreads) was a piece of cake! 
Linux, Python, Git, GitHub, problem solving, and last but not least a lot of enthusiasm. A great combination.
Yeah, it works fine, but it's limited to one CPU core. My datasets are quite large. Waveforms in the 2 GB range. Just running things like notch filters on them is super slow. I store them in an hdf5 file, then have multiple processes each access and filter part of the waveform to get around the python threading issues. But it feels like kludge.
We are working on another implementation with xarrays which will allow for more out of core computations, but definitely not ready for implementing yet.
How are you going to scrape the page if you don't download the page to parse it for what you want?
1. You should format your code better. It's a bit jumbled up, especially the first two lines. See the sidebar. 2. `cv2.SimpleBlobDetector_create` is function or method. You aliased this function to `detector` without calling it, so `cv2.SimpleBlobDetector_create == detector` is `true`. And then you tried to access the `detect` attribute on it. `cv2.SimpleBlobDetector_create` aka `detector` doesn't have a `detect` attribute. 3. If you are about to ask a question, please consider r r/learnpython or the learn python discord. Homework-style questions will be removed, and you'll be encouraged to post there instead. See the sidebar. When dealing with a problem you don't understand, it's often useful to reduce the problem to a simpler form. For example, _this_ problem doesn't really require `cv2` or `numpy` at all to trigger. We can inspect the type of `detector`, and try to access a non-existent attribute function on it. ``` #!/usr/bin/env python # https://www.reddit.com/r/Python/comments/7k3fpb/why_doesnt_blob_detector_work/ # Reproduce behavior without cv2 from __future__ import print_function import os im = 3 detector = os.uname # standin for cv2.SimpleBlobDetector_create function print("identity?", os.uname == detector) print("detector is of type:", type(detector)) print("attributes:", dir(detector)) keypoints = detector.detect(im) # AttributeError ``` ``` identity? True detector is of type: &lt;class 'builtin_function_or_method'&gt; attributes: ['__call__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__text_signature__'] ``` With this in hand, you can pose the question: What kind of object did we _expect_ `detector` to be, such that it would have a `detect` method? I expect `cv2.SimpleBlobDetector_create()` returns such an object, as /u/allenguo suggested.
It's the only real shortcoming python has for this sort of application, in my opinion. It's pretty much perfect in every other sense. Ah well. Good luck with xarrays. I've only looked at them briefly. Maybe it's time for another glance. :)
That's a perfect tl;dr haha
it has pretty bad interoperability with modern JS practices (promises), which imo makes it pretty unusable for anything except trivial clientside only stuff
Feature Request Link: https://excel.uservoice.com/forums/304921-excel-for-windows-desktop-application/suggestions/10549005-python-as-an-excel-scripting-language
I applied to a junior developer position to work on control of robotics. The job description looked for understanding of (python, c++ and/or Android), knowledge of linux environment, good collaboration skills and willingness to learn new technologies. Extra points were proof of working in open source projects, knowledge of ROS, and knowledge of javascript and web dev. 
To be fair, if Google, Mozilla, and Microsoft were motivated to help improve the interpreter there could be massive gains.
Yeah! They'd be silly not to capitalize on actually amazing product like VS Code and do that, IMO.
Thanks! I am always worried when applying for jobs but I guess I just need to apply and see what happens
Even then, it's a VM written in JavaScript that's interpreting Python bytecode. It avoids the parsing step in that case but is still a nonstarter for a real app.
Disclaimer: I can only write simple Python code myself. Question came from listening to a specific security-focused podcast who opined that Python was easy to learn but time consuming and difficult to write securely. I just don't know enough Python to make a more informed question...about the only annoyance I have with the language is that tabs have meaning.
New user, just hearing about anaconda. Will take a look.
This is horrible, I'll have nightmares of this tonight
Whoever said that was talking out of his ass.
......just use the built in list...?
My understanding is that the numpy mkl does make use of multiple cores, regardless if you're applying a notch filter that would be spun of in a separate thread. You may be able to write a custom processor that makes use of multiple threads. If you have a file and a filter command you would call with scipy.signal to test out, let me know.
Well I created this as a reference for those people who are learning concept of single linked list and classes. They need not go to C to see the correct implementation. And yeah python inbuilt list is the same lol
...and yet, I have one more downvote for asking, with no new information.
Next we use brython to use Python as the main language for an electron app!
A more realistic proposal - though still a fair way off - is for [Batavia](https://batavia.readthedocs.io) to [generate WASM from the Python AST](https://github.com/pybee/batavia/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+wasm). I say 'realistic' only because Beeware also has VoC, which generates Java classfiles in the same way.
Tranpiling of Python into webassembly for runtime would make way more sense.
Python and JS are so similar and share most of the same advantages and problems, I don't see why you'd want to do this.
Nicely done! Shame on you for using spaces in your code though. For every space, a child in Africa starves. For every tab, a child is fed.
I've used transcrypt for a bit and I like it. Helpful for adapting already written stuff for running on the web and doesn't have brython's performance problems. It does have a few odd quirks though that I wish were easier to find out than accidentally stumbling on them. 
I was in the same position as you literally a month ago haha just go for it! Worst case scenario you will learn about the process, best case you get a job. Both are wins.
 signature = hmac.new(self.secret.encode('utf8'), url.encode('utf8'), hashlib.sha512).hexdigest() This code is a snippet from my own project. Gist: encode everything that must be included in the signature before as utf8. If there is anything that is not encoded it will puke. I recommend using python 3. 
I love the new Microsoft.
How hard is it to add new file types? 
I would recommend Fluent Python. It is broken up into logical pieces fairly self-contained pieces, so you can jump around to what interests you. 
Great news from MS. The world will be a better place if VBA no longer existed.
Yeah, why can't we have babeljs module for python. Just like we compile ES6 to ES5 why can't we also compile python code
Depends on the underlying file structure, right now we have methods to read .wav .edf files for time signals, and we handle partition label files specifically too. What kind of file would you want to open?
I’m sure /r/learnmath has resources.
Don't give anyone any ideas. 
I appreciate the response:) I wasn't aware of this subreddit
You and I share similar stories (engineer moving to programming). Great news! Keep up the hard work!
.mdf &amp; .mat.
Unfortunately there's some handy JavaScript code I need in the python code but I don't want to translate it myself. Better run a JavaScript emulator in python so I can use it.
I recently started Python and I’ve done a few small projects for work but Im currently trying to make a Slackbot that’ll provide branding and messaging guidelines for my colleagues when they ask for keywords.
PEP 8. recommends the use of spaces over tabs. https://www.python.org/dev/peps/pep-0008/#tabs-or-spaces Also, realistically, as long as you don't use both for indenting your code, it really doesn't matter.
https://www.transcrypt.org/home Found this recently, hope to play with it soon.
I suppose you could write a routine to download the page, then delete it when done (download, analyze, delete). Is there a particular reason or something prohibiting you from wanting to download pages?
I don’t have any experience with that. Is it difficult?
Doesn't cover all use cases, but yeah. If you need constant time prepend and pophead you need collections.deque.
What would be their motivation for doing so? They can't abandon JS, so now they have to use resources to support and improve both JS and Python? Once they do that, they will have every programming language in the world asking them to do the same for that language.
Can you link me to some examples? I'll test it out
So how did you find this small/medium company? Was it a tip from a friend, or just putting a resume up on Dice/Indeed/etc.? Did you have to relocate?
Plus JavaScript as a language is evolving and getting better at a much higher pace than python. There's a constant effort to make it faster and also more readable. The asynchronous nature of js can be an issue at first but it is the correct tool for the web . 
&gt; I am using Django (or Python framework X) on the server side. Can I share code between client and server? &gt; Certainly. To be shareable in this way, the sourcecode of a module has to adhere to the subset of language facilities that CPython and Transcrypt have in common. And its directory has to be in the search path of both your CPython and Transcrypt code That's what I wanted to hear really, looks very promising. I'd certainly try integrate it into my next project. Thanks for sharing 
Oh, there is no way in hell this is going to happen, I was just thinking out loud about how JS has tons of support while Python is more community-maintained. Unfortunately, we are stuck with JS and all of its stupidity unless Web Assembly gains more momentum.
What I find funny is that this is pretty close to the default behavior for perl's hashes; they refer to this mechanism as auto-vivification. If you try to write deeply into a nested structure that doesn't exist, it builds the necessary intermediates so the new value has a branch to hang on.
Where are the unit tests fam? You're both disqualified
Give a guy a break, he's in middle school and doing stuff like this, the last thing he needs is useless criticism 
That sounds overly complicated. Why don't you just rewrite your code in Python? Then you could run it in a Brython instance on the JavaScript emulator running in the base Brython instance in the JavaScript environment of the browser.
More like sloppily wallpapering over it.
Host a shared Jupyter server and share notebook files with embedded pandas dataframes through it.
I never vote, but complaining about votes is a good way of getting downvoted.
I have selenium running in pythonanywhere.com. They have a help article about setting it up. 
Python lists are not linked lists. They're more like vectors in C++.
I know.. since malloc aint involved. But this serves the conceptual purpose.
AWS is the largest cloud provider. Their EC2 service is basically a bunch of different computers for rent. They specify different instance types as good for high CPU applications. If you have a really large number of parameters to run, AWS Batch can help you provision resources.
If the only reason that you're so attached to Python 2 is the print statement and the amount of keystrokes it costs, I don't think it's unreasonable for anyone to completely disregard you and your opinions. 
It sounds like you're confusing downloading a web page with saving it to a file. When you open up a web page in a browser, the browser is downloading its content (the HTML) but holds it in memory (RAM) instead of writing it to a file (hard drive). You can do the same thing in you code pretty easily. # What you're currently doing (probably): # Open google.com in chrome then saving it as "google.html" with open('google.html') as f: html = f.read() soup = BeautifulSoup(html) # What you should be doing import urllib from bs4 import BeautifulSoup html = urllib.request.urlopen('https://www.google.com').read() soup = BeautifulSoup(html)
I'd just like a nodejs interpreter on the frontend. Would be so nice.
It's difficult and time consuming to write secure code in any language.
I see these kinds of slams on JS all the time and in the end they mostly wind up being either misunderstanding or based on 3rd party misinformation. Therefore I gotta ask: what's your gripe with JS?
Asking questions is a sign of weakness. STICK TO YOUR GUNS UNTIL WELL BEYOND WHEN SOMEONE TELLS YOU IT'S OVER. IT'S NEVER OVER UNLESS YOU'RE A PUSSY. KEEP UP THE FIGHT. IT'S NEVER OVER. 
Thanks, and I will use tabs next time then!
Ok, I will, thanks!
One of the best programmers I have ever known could only type at about 40wpm. I can touch type at 100 wpm.
Eh, we can probably still improve on it. Maybe if we use this, and then implement a PHP interpreter in Python, and a JS interpreter in PHP...
WhatsApp Bot to google stuff so I don't have to pay for data when I travel to other countries (unlimited WhatsApp plan) https://github.com/jctissier/whatsapp-assistant-bot
I vote, telling people good ways of getting downvoted is a good way of ... I'm not stupid.
I hate weak typing. I don't want a language to assume it knows what I'm trying to do. It wasn't designed to be used how it is today and that is clear from the lack of things like import statements. So instead there are massive toolkits designed around features that any mature language should be expected to have. And perhaps the stupidest of all is that NaN does not equal NaN. To determine if a var is NaN you have to check if it is not equal to itself. 
It's pretty interesting so far. I'm currently attending :)
Oh shit this is awesome and exactly what I was looking for. Thanks so much for the really in depth response!
&gt; It is, not so much of a problem though This is larger than any popular javascript framework and *it's not even a framework*. To do any meaningfully complex frontend work, you would need an additional framework on top of that filesize. It's definitely a problem. &gt; it makes things easier It makes things easier for people who are in love with Python and who aren't willing to learn Javascript. For anyone else, this just obfuscates the underlying Javascript code that is being generated in the background, creates an additional and entirely unnecessary API on top of something that's already very well documented, and introduces additional headaches when it comes to working with existing frontend frameworks. I love Python. Not everything needs to be Python, though.
This...seems like a bad idea
Beautiful!
maybe take a look at [khan academy](https://www.khanacademy.org/math/algebra).
did u have any programming experience prior? what resources did u use to learn?
Wasn't there a version of python that could just work out of the box with the browser? I recall in early 2000s ActiveState python was providing browser bindings, so in IE you could just do &lt;script language='python'&gt;, much like you already could do javascript and vbscript. I only played with jscript checking for vbscript functionality to call msgbox (yes, vbscript and jscript shared dom/variables/functions between each other in IE, even though vbscript and jscript as languages exposed different libraries). I found some older discussion in google groups about using python bindings as well: https://groups.google.com/forum/#!topic/comp.lang.python/uID8VmLsye4 What happened to this path of development?
Dang. Well said
I googled for Jupyter followed by a cloud platform and then took a sample from each: * [Google Cloud Platform for data scientists: using Jupyter Notebooks with Apache Spark on Google Cloud](https://cloud.google.com/blog/big-data/2017/02/google-cloud-platform-for-data-scientists-using-jupyter-notebooks-with-apache-spark-on-google-cloud) * [ Microsoft Azure Notebooks](https://notebooks.azure.com/) * [Jupyter Notebooks on AWS EC2 in 15 (mostly easy) steps](https://medium.com/@alexjsanchez/python-3-notebooks-on-aws-ec2-in-15-mostly-easy-steps-2ec5e662c6c6) 
You are not "getting info", you are basically trying to stole their data, how legal could it be.
What are the Javascript problems that Brython is designed to fix?
It’s actually recommended by the official styling guides to use 4 spaces, check out PEP8
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN ?
Not being Python.
I took a matlab class in college but that was it. I used edx courses and cs61a from berkeley. Cs61a is immensely challenging by an incredible learning tool for getting fundamentals down.
&gt; in a third-world country Somalia download speed average at 1.4 Mbps (178 kB/s). That will give you 593 in 4 seconds. Kenya 1.5s and India 0.8s. My understanding it is not throughput that is the problem but latency and hardware in third-world countries. But this is also changing where you can now get a quad core android phone for 22 usd in southern africa. - http://testmy.net/country/so - http://testmy.net/country/in - http://testmy.net/country/ke
JavaScript now has import statements, and there are statically-typed variants, notably TypeScript. The standard library is evolving, much as Python’s has, and frameworks have become core parts. I do believe NaN != NaN is the IEEE standard, not something JS made up. I like Python too, but this doesn’t have to be either-or. Both languages can be fun and productive tools. 
Doesn't even work on my end. 404s and gives: "Error 404 means that Python module header was not found at url http://www.brython.info/header/__init__.py"
Yes this is a huge issue. If you're taking web development seriously, then you do everything to reduce your bundle size. This would include using bundling techniques such as tree shaking, dead code elimination and minification. By having to include 600kb by default defeats the purpose of using a language which is already built into browser engines and you don't need to send over the wire every time. This does NOT mean JavaScript is the perfect language, but it is the most highly available one and if you use the latest features it makes it much more bearable than it used to be.
This isn't a problem. Coming as someone who has recently fallen off the "write everything in Python" bandwagon, JavaScript is not perfect, but it is the best language to write front end web code for various reasons, at least until WebAssembly becomes more widespread.
Do you mean the CPython interpreter or Python code itself? Because compiling Python-&gt;WASM would be extremely difficult.
*EXACTLY!* Now all your code is pythonic and can be easily analyzed by more people then just your js web devs! With the off change you through your users experience on your client app away. But come on it is 2017, will your target market not have quad core 32 gb memory cell phones? 
The 404s may happen for imports, please read the [FAQ](http://www.brython.info/static_doc/en/faq.html). Doesn't means that it "dosn't even work".
The jump from implementing a Python-&gt;JVM bytecode to Python-&gt;WASM bytecode is a big leap. You might as well do Python-&gt;LLVM and then LLVM-&gt;WASM (gain some higher level constructs, more backends).
While I agree with weak typing being devil spawn, and how JS has evolved beyond its original intent, NaN not equaling NaN is due to IEEE 754, and is true in Python to (try `float('nan') == float('nan')`).
You see now you are starting to think it is a joke. People don't want php there is inherit problems that will never get fixed. No problem if you understand these problems and your code base have been groomed over the years. PHP 7 is also a lot better with composer to help manage deps. But python and javascript clearly got embraced by a lot of developers. Do to preference or platform vm. Even microsoft is in talks to add python to excel! So experimenting on how to integrate the two is always good and should be encouraged even if you want to drag php into it. Btw, I'm LFG to get a php celery worker up and running. Anybody want to help me transpile py to php :P... seriously?
Ignore that guy. The official python style guide dictates spaces. Your function is unnecessary by the way. There is a function `math.radians` for just this purpose. Come join us at /r/pygame. Here is a little fun with your program: import math import pygame as pg def spectrum(change_speed=1): color = list(pg.Color("red")) index, previous = 1, 0 up = True while True: if up and color[index] == 255: up = False elif not up and color[previous] == 0: up = True index = (index+1)%3 previous = (index-1)%3 if up: color[index] = min(color[index]+change_speed, 255) else: color[previous] = max(color[previous]-change_speed, 0) yield color length = 0 degree = 90 display = pg.display.set_mode((600, 600)) screen_rect = display.get_rect() done = False clock = pg.time.Clock() pos = screen_rect.center colors = spectrum(3) while not done: for e in pg.event.get(): if e.type == pg.QUIT: done = True length += 0.05 degree += 100-length/10 angle = math.radians(degree) old_pos = pos x = math.cos(angle) * length y = math.sin(angle) * length pos = screen_rect.centerx + int(x), screen_rect.centery + int(y) pg.draw.line(display, next(colors), old_pos, pos, 1) pg.display.flip() clock.tick(400) 
Here's a sneak peek of /r/pygame using the [top posts](https://np.reddit.com/r/pygame/top/?sort=top&amp;t=year) of the year! \#1: [Hex3d: Interactive 3-dimensional hex map](https://media.giphy.com/media/LeRejUoi238xq/giphy.gif) | [12 comments](https://np.reddit.com/r/pygame/comments/6758da/hex3d_interactive_3dimensional_hex_map/) \#2: [I'm making a game with pygame and I wrote a blog about how to procedurally generate archipelagos!](https://medium.com/@yvanscher/playing-with-perlin-noise-generating-realistic-archipelagos-b59f004d8401) | [5 comments](https://np.reddit.com/r/pygame/comments/7basqc/im_making_a_game_with_pygame_and_i_wrote_a_blog/) \#3: [Is this considered sprite cruelty?](https://gfycat.com/SnoopyHospitableHornet) | [6 comments](https://np.reddit.com/r/pygame/comments/6twyr5/is_this_considered_sprite_cruelty/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Yes, it has improved a lot since this video, dating from April 2014. You can take a look at the [history of ratio Brython vs CPython](https://groups.google.com/forum/#!topic/brython/vmlvPqPn7Yw) for the PyStone test. The speed is better on Firefox than Chrome.
Yes, but with browser cache, brython.js is only transfered on the network if it has changed, which doesn't happen often.
Using Python is one step nearer to being *pythonic*. 
There are 2 main problems I have with it: 1. Minimal standard library. There are so many features missing that I need in everyday programming and instead have to do the complicated way. Also you shouldn't need to care about browser compatibility with the most basic stuff in $CURRENT_YEAR. 2. It likes to do things in a way nobody except an experienced JS developer could predict. Every language has it's "wat"s, but not to such an extent from my experience. In both cases, I think even C does a better job. If someone added classes to it and put it in the browser, JS would have some serious competition. And that's why I'm excited for WebAssembly.
It could be that I need to change how numpy and company are compiled. It is single threaded for me.
As part of the DB-API, cursors are implicit transactions. I suspect that because a separate transaction is being held open by the cursor, and that transaction depends on the table still existing until the cursor is deleted, the table is thus locked and cannot be dropped and recreated.
I see. Thank you for the reply. I was suspecting such thing, but when I insert static values or when I query a count on the table instead of a value, it doesn't make an error. Also I noticed that if my first table had only one row, the table isn't locked neither. That's why I though it was still allowed to mix transactions like that.
What was your coding challenge?
Yeah.. I'd rather use something strongly typed like Kotlin.
This appears to be a homework question. See http://ecoocs.org/zip/ECOOCS_2017.zip 
That's a very simple lib that is useful to me in some situations. It works only for annotations and f strings, but this approach can be easily applied to more features 
What would make this particularly hard? I mean, I know it can't be done easily at the moment, but if WASM adds support for garbage collection and a global interpreter lock (just kidding), conceptually it should be fine.
&gt;This is ambitious and it is worth it ! What do you guys think of it ? &lt;script type="text/javascript" src="/src/brython.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/src/py_dom.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body onload="brython(1)"&gt; &lt;script type="text/python"&gt; from browser import document, alert @document["test"].bind("click") def echo(*args): alert("Hello {} !".format(document["zone"].value)) &lt;/script&gt; &lt;p&gt;Your name is : &lt;input id="zone" autocomplete="off"&gt; &lt;button id="test"&gt;clic !&lt;/button&gt; &lt;/body&gt; Ok, seriously why does anyone do this? I've seen a bit of really crazy ideas people have written thousands of lines around in the past months. Here is how I would have expected this to be done: import web_python_module as wpm page=wpm.page() button=page.get_element_by_id("test") and then any of these: wpm.bind(button,function) function.bind(button) button.bind(function) Because explicit is better than implicit. And these kinds of arguments too: def f (*args): print("foo") Why? Do you hate humanity? &gt;"Oh this function takes arguments" &gt;&gt;"Cool, what kind?" &gt;"Oh I don't know, just cram some arguments in there! Any number or type are fine."
Someone on the thread above mentioned using LLVM as the intermediary. That seems relatively practical to me. 
I forgot to say that I checked what an HTTP Error 410 is and it should be the error related to an URL that is permanently unavailable. But Twitter is kind of available I think. Are you suggesting that there is an issue with the library I am using?
Also if you can use a CDN they might not even incur the cost visiting your site. 
The problem is that despite having `==` AND `===`, Javascript still doesn't have an identity comparator like Python's `is`. Otherwise, you could just do `if (foo is NaN)` and be done with it.
Here's an implementation I wrote recently as an infinite lazy generator.
&gt; if you are targeting a mobile device Are you kidding me? Any random “mobile optimized” page out there will link this or that social bullshit button and end up downloading 30 MEGABYTES. 500k is *nothing* in today’s web.
&gt; JavaScript is not perfect, but it is the best language to write front end web code Telling someone he is the best in a competition that has 1 participant, is damning with faint praise. Javascript is *not* the best solution for the problem set of “web frontend development”; it’s just what we are stuck with, because of historical accident. Hopefully at some point browser vendors will free us from this hell.
I've seen the light and I'm converting some of my PhD code from Matlab to Python. And adding a few tests along the way!
haha, I'm rich already but not because of this. https://imgur.com/a/p5iMV 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/0q0GwSw.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20drbxras) 
Nice code. Very readable and I've never thought of using pygame for something like this. The only thing I'd do differently is the 'for e in pygame....' I'm not a fan of single letter variables, and especially e. If someone had done a 'from math import *' (which is also bad) then you end up with confusing constants. Feel free to try and change my mind though. 
Dart or typescript then?
Kotlin. 
&gt; Unpopular opinion: CPU intensive stuff should be rewritten in C++, and loaded with ctypes. Really depends on how many times you will reuse script. If it takes 3 hours two write in python and 1 hour to run. It will be better than taking 5 hours two write in C++ and taking half an hour to run. You'll have your results faster in python. Also you can work on other stuff in that hour. 
For the longest time I've been active on linked in, indeed, etc. Nothing came out of it for me, but I have friends who have been lucky on those platforms, so I would still use them. In my case I discovered the company from a Faceboon post on a Free Code Camp group. If you don't know what free code camp is, I'd advice you to research about it and join one. Great place to network and learn.
I had to program a simple control system for a pre built robot simulation and also had to make a web client that displayed the movement of the simulated robot. It was tough but I managed haha besides python, I had to use Javascript and html and learn ROS (Robot operating system) commands. 
Why is his a better approach than transpiling Python to JS? Certainly this would offer much better performance.
Lol that is funny
I changed e to event.
Not possible. You need to install Python 2.7 in some other way and create a new virtual environment using it.
We're any examples given? There's a bunch of libraries to increase security in typical security concerned tasks, like secrets, most database drivers have methods for sanitizing queries and most web frameworks clean requests and handle xss for you. 
Ahem, `});`. 
The different versions need to be installed on your system, when you create a new virtualenv you're actually just pointing to an existing python executable.
Thank you for the explication!
Thank you for the explication!
&gt; Oh, there is no way in hell this is going to happen, I was just thinking out loud about how JS has tons of support while Python is more community-maintained. since you seem to be talking about python and not brython there: https://github.com/Microsoft/Pyjion 's changes got merged https://github.com/dropbox/pyston up until they gave up and switched to go There is still Cython, Nuitka, uvloop for asyncio code, pypy, numba, etc etc none of that'll change brython's speed since its a seperate implementation to alla that tho
Please just let Python 2 die, its EOL is approaching rapidly anyway now. 
It doesn't really matter that the data in the table won't be the same, only that the table exists and has a consistent identifier/XPath. https://stackoverflow.com/questions/39568186/scraping-a-specific-table-in-selenium
You mean webpack?
This seems like a terrible idea. Why would I want this?
Agree that javascript needs to go away. Javascript is a giant, un-wieldy mess beyond saving. Not sure Python is the answer though.
Catch and handle ImportError.
How does this compare to 3to2?
Because anaconda packages are usually out of date. I used to use anaconda as my daily driver before pip used cached wheels and a bunch of compiled stuff didn't work, but pip's much better now so I only use anacond when I have to.
If you install anaconda/miniconda you can create environments with a specific version of Python: conda create --name my-env python=2.7
The language is interesting. Lets see what happens in the future.
For the same reasons that compiling Python to regular assembly is hard or at least not done. 
Your function `to_angle ` is already in Python's standard math library as [`math.radians`](https://docs.python.org/3/library/math.html#math.radians)
I'm code Python mostly, and occasional JS. JS is JS it's fine as it is, this idea will never take off. This is like Microsoft-think of the past "we want Visual Basic everywhere" - we all know how well that kind of mono-culture and group-think worked out for developers and Microsoft.
Thanks for the answer. Like you, I'm having no luck on sites like that, and at this point I'm just getting discouraged and I've gone back to building skills. I do know free code camp but I'm not on Facebook. Thanks again. 
Are you suggesting that a pandas dataframe stored as a global variable in Notebook1 would be accessible by a function written in Notebook2?
Cool project. I'll be happy to contribute in it :)
&gt; Because compiling Python-&gt;WASM would be extremely difficult. I wonder if Cython -&gt; WASM would be more doable.
Anything you can do in a web browser you can do in selenium. I'd go that route
Cython might make a few things easier, but it makes few garuntees about types. For rpython I believe PyPy.js is getting WASM support at some point.
I think this is the most reasonable solution. Someone will come up with an IR-&gt;WASM before Py-&gt;WASM
Silly queation perhaps: What does the "Br" from Brython stand for? I can imagine a play of on python of some sorts.
If LLVM is the intermediary, then Python could be complied to any binary. This would be the proper approach 
Wow that is very simple, yet so clever! 
The name is horrible. Even simply "Pyscript" is better 
I guess it was provided with a custom ActiveX BHO. That extension mechanism has long been deprecated as insecure, and it was specific to IE so it wouldn’t work on Edge (or Firefox, Chrome etc). MS themselves stopped supporting vbscript in the browser ages ago.
I read that as "bro-Python"
cool, perhaps you could also use a Jupyter Notebook for learning math as well
You say steal the data, but what if I manually input all the data I get from my Yelp search into an excel sheet. Am I still stealing their data?
First ask yourself what data points do I want exactly, then it’s just a matter of parsing. 