Which version were they introduced in should be part of any Python feature article.
I'm debugging a problem with my serialization library [Serpent](https://github.com/irmen/Serpent) where it doesn't correctly seem to process strings with \x00 bytes in them. What makes it interesting is that I maintain a Python, Java and C# version of this library :) I've also worked on my remote objects library [Pyro4](http://pythonhosted.org/Pyro4/) where I've been cleaning up code smells and module structure. But to keep the API intact, I couldn't do all improvements I had in mind so I stopped with that for now.
Great points. Will push a rev
Not OP but these Bokeh visualizations look great. I'm looking into them now but are they made entirely in Python or does it utilize javascript as well?
I'm one of the creators of Anaconda and I upvoted your post to compensate for this improper down-voting. :-)
Just a quick check, are you sure you are building and running/importing using the same version of python? **Edit:** The following worked for me on OSX using python 3.4: cd /tmp/cython_test vim helloworld.pyx vim setup.py Where helloworld.pyx is exactly what you have and setup.py is an exact copy of the code on cython's site: http://docs.cython.org/en/latest/src/tutorial/cython_tutorial.html#cython-hello-world I then ran: python3.4 setup.py build_ext --inplace Which succeeded with 8 warnings (using clang). I then ran: $ python3.4 -c "import helloworld" Hello World I'll try the package naming. My first guess is that your package name is not a valid package name. **Edit 2:** name="mypkg", The above package name worked fine. **Edit 3:** Lastly, how did `helloworld.pyx` become `hello.pyx` in the setup.py and `mymodule.so` after the build?
Looked great. Will use.
What is an amazon version? Like the company?
spark in general or pyspark in particular? why?
But the performance do have affect,the benchmark „ÄÅperformance etc,is a hot point of the discussions between languages.and that makes why php is a web language and python is not,no matter how perfect django \flask is ,still few company use python to develop thire web,but choose php.
I second Pynsist. It not only makes an .exe, but an actual windows installer that will place shortcuts in the start menu and provide an uninstall method under the windows add or remove programs section. It also packages Python with the installer so having it installed already isn't a requirement, which is really awesome for end-users that just want to click and go. .
@theredknight. Well, I already have a database of images in postgres sorted by a list of ids. Basically, a person with an id with different images. So I'm going to take a person's id and take the images that has that id then feed it to OpenFace. The result should be a returned confidence value of those images compared by the trained model. Btw, what do you mean using the tensor flow version?
Ok, I'm absolutely mental I came home from work, did what I think is the same thing and it seemed to work. I am going to upload a screen-cast of beginning to end so you can see what I'm doing shortly. 
Here it is. Strangely I just realised that somehow I fed it a python2 syntax pyx file and it seemed to be fine with it? What gives. I'm somewhat lost... URL to quick video beginning to end: https://youtu.be/XGxiYmLsxUY
It's on GitHub but its region locked. You have to be located in the Amazon Rainforest when you view it. Then you get the TOC.
Been going through Automate the Boring Stuff to relearn and excel after not coding for a couple years. Started the Django tutorial the other day, and I'm going to start working on a large-ish project hopefully tomorrow morning.
Working on a flask application to visualize email metadata in my Gmail account.
read the sidebar here go to /r/learnpython and ask ??? profit 
This is better suited to /r/learnpython. Try starting with the pandas docs they are pretty extensive. 
Don't use LPTHW until it's updated for Python3 read: * https://www.reddit.com/r/Python/comments/40s6dm/meta_can_we_take_learn_python_the_hard_way_off/
This link provides a pretty good discussion of the issue. http://stackoverflow.com/questions/16377215/how-to-pickle-a-namedtuple-instance-correctly
Yea, that's why I clicked in here. Still looks cool, though!
I'm also not sure on the python 2 syntax. However, the weird naming of the .so file is intentional, but you *should* be able to simply `import mymodule` even when it has that strange name. The default python import logic should properly import it. You'll see this kind of stuff a lot in software packages like Anaconda where a lot of the libraries are named that way and need to be usable cross-platform. My only other tip is you may want to start putting your cython in functions and calling it from python-land. Just for clarity. If it doesn't work when you get back to work, let me know. I'm not cython expert, but I've also broken my packages enough with it to debug a few things.
The most interesting part about this project was that micropython's handling of time is horrible for the esp8266 (a patch is about to be merged) so every 11 seconds I query https://timezonedb.com/ to reset the time. Once you have your url set up [it's easy to get the time](https://github.com/Benhgift/micro-color-clock/blob/master/timing.py#L64). The other interesting part was thinking up a way to nicely represent splitting the time into color shades. The way I'm doing it currently is scalable to more/less colors but [pretty ugly](https://github.com/Benhgift/micro-color-clock/blob/master/my_main.py#L13). (copy pasted from [other post](https://www.reddit.com/r/esp8266/comments/5u4u19/now_my_wall_changes_color_based_on_the_minutes/))
It's still a tuple, so it's lightweight, immutable, unpackable, and hashable
what do you have against George Harrison? edit: nevermind, he's in there, missed him at first
Author here: If you prefer, there is a [presentation of same article available too](http://www.slideshare.net/amitu/function-arguments-in-python).
very nice. recommend **not** using "l" to represent a list, that's even in pep8. left here bc im too lazy to open an issue. 
Excellent! I already refactored that module like that, but I think I will implement your id of putting the formatting into a variable and appending that to the beginning and ending of the servername. Thanks mate. Could you take a look at the refactored module and tell me what you think of what you see in there? 
Perhaps even Kindle version
Hi, Don't be sad. I have pushed the new update on [GitHub](https://github.com/srcecde/python-youtube-api) and added the feature for *listing videos based on ChannelId.* Hope this helps. New feature suggestion is welcomed. Thanks Chirag Rathod ([Srce Cde](https://twitter.com/srcecde))
I believe this is what's needed. In general, when you have a `function` or `method` that returns something, it needs to be _explicitly_ returned. database.py import pymongo class Database(object): URI = "mongodb://127.0.0.1:27017" CLIENT = pymongo.MongoClient(URI) DATABASE = CLIENT["mydatabase"] COLLECTION = DATABASE["ids"] @staticmethod def insert(data): Database.COLLECTION.insert(data) @staticmethod def find(query): return Database.COLLECTION.find(query) @staticmethod def find_one(query): return Database.COLLECTION.find_one(query) edit: filename 
In an ongoing tower defense game, now that pathfinding and creep movement are done, I finally get to make towers track targets and fire. Part of the workload this week will involve subclassing specialized creeps and towers.
i stopped reading at the second grave mistake: * before forking, check for existing work. just because pypi shows "2 only", there might be an open issue describing the progress, and/or a python3 branch. * manually replacing print statements is tiresome and error prone. 2to3 or other tools do this efficiently and safely. at that level of skill, it would be more prudent to write a "my experience doing X" article than a "how to do X".
Can you elaborate on the performance issues? Is this via Kivy?
Dude, I'm currently taking MITx 6.00.1x and this is exactly the kind of thing I've been looking for to help out as a reference while I'm learning Python. Thank you thank you thank you! Very reasonably priced for the hard copy as well. You rock!
Just finished a script. I am writing puppet modules and the script i made gets the commitstring of the repo i am working on and updates the puppetfile in the control repositoru with the string and commits and pushes it. Saves me a lot of typing and was a nice lesson in the subprocess module. Now working on a script that logs into all our linux boxes, runs some commands using sudo if it is detected needed, and sticks all found data in mongodb. Management wants to have reports so have to think of a way to make some kind of dashboard. 
or, y'know, use Pythons built in coversion? `2to3 -w infile.py outfile.py`
Apologies if this stuff is covered. I read the `README.md` but didn't delve into the code. I didn't see any mention of how sensitive data is handled in memory. With C programs that handle sensitive data like passwords will often use [mlock](https://manpages.debian.org/jessie/manpages-dev/mlock.2.en.html) to insure that memory with passwords is not swapped to disk, as well as wiping the memory as soon as possible. This sort of thing is tricky with Python, especially if you want to support alternative implementations (like PyPy or Jython), because the way that garbage collection works is often different. There are also potential issues with timing attacks. For example, if longer passwords take longer to obfuscate than shorter passwords, then an attacker can sometimes figure out how long a victim's password is by observation, which can make guessing much easier. I don't know if there are other modules which provide similar functionality, but security stuff is hard. Good luck! :)
Thx bro!
Hey there! You should give us more information than that. Features, bugs, how to use it. 
Python 2 also have esoteric things. You deliberately compared a very simple python 2 code to an overkill python 3 code. That's the poor argument. print &gt;&gt;sys.stderr "Hello %s" % name print(f"Hello {name}", file=sys.stderr) Tell me, which one is easier to teach. If you were a hobbyist (sorry, I was lazy and didn't searched your name) That argument would be understandable, as most hobbyists get scared easily by rapid changes. But you are already a well versed programmer, why provide a bad example and point out that it's not even valid. Give good examples and arguments. Optional things can't be used in main arguments because pf their nature. I can't say "python is a weak language because it has many unsafe modules like pickle and marshall" as my main argument, for example. Thus opposing python 3 with an optional module is poor. Ps: 
It's generally a good idea to raise an issue first and state in the issue that you would be willing to work on the problem. It's diplomatic and can save you a lot of wasted work if the maintainer doesn't have an interest in it.
For libs you want modernize probably. 
`-maxdepth 1`? Admittedly, `lsi` seems like it might be easier in this situation.
You're right on the import working regardless of the mammoth naming conventions (although initially it seemed that it imported the .pyx of the same name instead of the .so file). Also I did make a proper function this time so it's callable this time around instead of just having it ugly main loop type code. Soooo now my next conundrum. I thought I'd do some simple timing tests with that coin flip routine, one in pure python the other with the compiled Cython function. Well to say I was surprised!, the pure python won! I even used numpy.random.randint in the cython pyx file because I had read that random.randint was terrible speed wise. **This really makes zero sense** New screencast here: https://youtu.be/L3wkKqo5Aec
Is there an obstacle to generating black cards that I am not realizing exists?
What pygame I've never heard of that one! /s
Every time I think I might have a use case for them I just use dicts instead with string keys. And if you are adding methods to them, why not just write a class from the beginning?
What's numpy? 
Hi everyone. I'm looking to hire a Mid/Senior Django Developer part time, ideally available ~ 2 hours per day via Skype (Late UTC). You need to be familiar with APIs, oAuth, Javascript, PostgreSQL, and ideally have experience with django-tenant-schemas. If you are interested please send me a PM with a description of your past projects, github, linkedin, Stackoverflow &amp; your salary expectation. Thanks.
I have in the past, and did fine, but it is a full time job. I have found it's better for me personally both in that I make more money overall, and enjoy it more, if I just invest long term, collecting market returns and dividends, and then focus on business. 
Thanks for the list!
SO HIDDEN
Like how each list item is #1 -- it's like the little league awards where everyone gets the #1 trophy. 
Python2 Master Race
I wrote this article and posted to /r/flask. Obviously it degraded into a Flask/Django flamewar. Anyway, I tried to write fairly objective and practical comparison of the two frameworks (The "why flask might be better" was added by the editors). I couldn't find an article showing "Hello World" for both frameworks. Feedback on the article, or corrections are very welcome.
add a one sentence summary to each list item, otherwise this is just a list of unknown words. I still have to click 13 times to get any info.
Or you could save yourself the trouble and stick with Python2.
Post your `requirements.txt` and the error you're getting. pip does resolve dependencies correctly when used with `requirements.txt` files, so don't think it's bad.
So you suggest to reinvent the wheel and create a new project to solve your problem? That seems like a waste of resources. If it is not maintained you could fork it and then add Python3 support. Unmaintained software doesn't mean it is bad. Code does not have an expiry date. It worked for Python2 and didn't require updating anymore, open source is about scratching your own itches and the package maintainers don't need to use it with Python3. Great point about not having enough tests, with enough tests it should be easier to port it to Python3. 
Oh really, I didn't know that. I've only tinkered with Rubymotion, I'm more familiar with Xamarin.
Can confirm, was quite confused... "Is it a book written in an ipython notebook? Wha..?"
Also: Django is better with PostgreSQL (search and other stuff). I think it should be made clear in the beginners tutorials.
I'm wondering if the same kind of idea could be used with a a distribution centered on the original image's color, instead of discrete markov chains. (i'm not being very clear but i'm not very sure of what I'm proposing here, mi can expand on the idea if you whish but i'd need to formalize it a little bit). That could make some pretty trippy stuff.
I am curious to see how some of the Pipfile? Also, this file is analogous to environment.yml in conda right?
Are you seeing that on mobile? I used the RES numbered-list tool to make it and it looks fine and has numbers on the desktop version of the page.
so... HTML + CSS?
How is Numpy and Cython hidden gems but Pandas not on the list. But overall thanks for sharing, will take a closer look!
One thing that pissed me off in the very short time with flask was the huge lie that hello world was. Views can return a bunch of different types. Looks simple but hen you need to write a decorator and then FML &gt;_&lt;
Great questions! 1. It's not really possible to prevent memory from hitting swap in Python. The best security advice (for any language) is to not keep sensitive data in memory for long. OpenSSL doesn't even mlock. 2. OpenSSL 'attempts' to zero out memory but the Python layer won't receive that benefit. If one's threat model involves memory dumps, all software implementations are unsafe. Dedicated hardware is needed at that point. 3. Privy is protected against timing attacks because both bindings use constant time functions.
One of the most featured libraries I'm aware of for doing GIS work is [cesiumjs](https://cesiumjs.org/). However, there is no python library directly for using it, but you can write python to drive the visualizations by sending what they call CZML to it.
Yep. Mobile Reddit App-- can confirm
Also surprised that these libraries weren't mentioned, which are also well known (but not more well-known than, say, Numpy or Pygame) and I'd argue at least as usual: - requests ‚Äî greatly simplifies making HTTP requests - BeautifulSoup ‚Äî parsing and processing HTML - pytz ‚Äî basically required for managing timezones - six ‚Äî utility that makes it easier to write code compatible with Python 2/3 at the same time And some (possibly) less known libraries: - Unicode/Character Encoding Issues: - chardet ‚Äî detects character encoding for strings where you're not sure of the encoding - unidecode ‚Äî converts Unicode to ASCII text equivalent. *Very* comprehensive ‚Äî for example, it will transliterate characters from other languages and expands Chinese characters into their phoneme equivalents - AWS - boto ‚Äî indispensable tool for manipulating AWS resources - boto3 ‚Äî an updated library (it and boto have different functionality, so you often need both) - botocore ‚Äî another library similar to boto/boto3 - Testing tools - freezegun ‚Äî "freezes" time so you can test behavior for specific dates/times - requests-mock ‚Äî let's you mock out HTTP request responses when using the requests library. So you can test a function without relying on external servers - moto ‚Äî a (nearly) full mock of boto, allowing you to mock out boto API calls. It even returns objects you can manipulate with other boto API calls 
A bit of an off-topic: Pillow and Wand are shit. I wish we had decent ImageMagick bindings.
You need a tangible project. It doesn't matter how small it is. It can even be something someone else has already done. You need something that will give you a sense of accomplishment. Are you currently employed? Is there something you do that can be automated? It can be the silliest little thing. Here are a few idea... How about a script that will look through your inbox and nag you on screen about all the emails over 3 days old. Use the weatherunderground api. Create a script will give you the weather not just for where you live now, but also of other places of interest. Once you get that done, have a v2 which stores the data in a database. Then you can chart the past weather. I recently came across http://exercism.io . You are given a challenge in your language of choice. Complete the assignment and hand it in for review. 
I didn't even do that with [NVIDIA Deep Learning GPU Training System (DIGITS) ](https://developer.nvidia.com/digits). Someone already opened an issue [Please add python 3 support #511](https://github.com/NVIDIA/DIGITS/issues/511) and NVIDIA replied with "*We don't have plans to do this anytime soon, no. However, you're the first to ask for it - we might consider it if enough people ask or upvote this request.*" [Aside.... I don't understand how a company like NVIDIA doesn't even have Python 3 on its radar] So I forked it, updated it to Python 3. It took a few weekends of work. Launch. Read error. Fix Error. Repeat.
I was just about to write a reply back on the missing cdef on the loop variable :-) no need now. Also I noticed in your later code snippets in the function you specified (int x) rather than just x is that just a python PEP8 convention or was that something done to appease the cython compiler? In response to the rest though in order: 1. I was working with a larger range intially (1-100 million) and I figured the slight difference in wall time over timeit shouldn't be a huge difference once python got warmed up and going so to speak. That could explain why pure python seemed faster in my cheap wall clock based benchmark since it was up and going. Suffice to say they were very close, no orders of magnitude. 2. Being admittedly a newb I definitely need to get a handle on numpy in general, I barely know enough stdlib stuff but I didn't realize it was designed to make the entire array then iterate through that. I also might explore using random.random as some have said that's faster than random.randint. I was confused as to why both an import and cimport where needed.. import numpy cimport numpy and also mention of: *Lastly you'll need to make sure to add the following to setup.py when using cimport numpy: include_dirs=[numpy.get_include()], and also you had mentioned* Your def flipcoins_vec is absolutely mind boggling to me, seems to have a list comprehension that goes above my head entirely. However I can't argue with the results man, WOW!
Which production server do you need to run supervisor on that not already have python2 installed?
Only complete insanity is preventing anyone from using Python 3.6, do they not comprehend the greatness of f-strings?
Why not just use the '%ed' magic command? You can %ed &lt;filename&gt;, %ed &lt;function name&gt;, %ed [line range] to edit some prior command history, or %ed -x to not auto-run the code on exit. This gets you your editing environment without leaving ipython. You can save functions to a file if you want....or not! Another option would be to use tmux. Ipython in one pane, editor in another. Use tmux copy/paste if you need to.
I feel that sys and os are glaring omissions from this list
You can use inotify as your API on Linux, not sure about other platforms. 
That's a cop-outs of an answer. I spend a lot of time reading code written by other people, too.
What are you even talking about? What's a hobbyist and why are they so scared of changes? Idiot.
No idea ‚Äî The text processing I'm doing completely ignores whitespace.
GTK has [Gtk.Builder](https://lazka.github.io/pgi-docs/#Gtk-3.0/classes/Builder.html) to load a GUI from an XML description, and [Glade](https://glade.gnome.org/) to design a GUI and save it as XML.
I only knew scipy until today.
For extreme interactivity I hacked together this https://github.com/boxed/PythonAsYouType a few years back. Super trivial but is pretty neat for certain work loads. But generally a jypiter notebook is probably what you want. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I don't really like using Jupyter notebooks for this kind of work. It's cool to see code and output inline in these neatly formatted blocks in a browser window, but it's just not the same as working in an ultra-fast shell environment.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
That %ed command is really helpful. I really need to go over all the magic commands in more detail.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
The `int x` in the argument list was my attempt at making the cython happier...did it do anything, I don't know. Response to #2: Yeah it'll take many months to years to get a good grasp on numpy and the stdlib. The main thing with numpy is that it is strongest when you can vectorize your operations. If you can operate on the entire array one at a time then it'll be much better than a for loop in pure python. When numpy isn't fast enough that's where cython and others come in. There are some limitations when you get in to millions of data points as you'll end up hitting memory bandwidth issues. In these cases it might be good to jump in to cython/C-land where you can do a lot of operations on one data point then move on to the next. The thing that looks like a list comprehension is just cython magic taken from the blog post I pointed to. It is just a list of properties for the array to tell cython what it can optimize out. That is: data type, number of dimensions, no need to check for negative indexes, and C-contiguous versus a fortran-contiguous array.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Sometimes a cleanroom rebuild in Py3 may be the right choice, especially if the project was written in a really old Python (well, even older than 2.7). The idioms of Python have moved on so much, that the best way to express something may have changed a lot.
PyCharm does notebooks in their IDE and there's a native notebook viewer based on Qt. 
Fair enough
no, thank you!
edit: dubs, said error, guess it lied to me
Trying to cope up with the basics of python 3.
openpyxl is also pretty great at doing Microsoft Excel doc operations 
Gooey really is amazing. It creates a GUI for your program based on the arguments defined for it. You don't even have to write any code for it, it'll use the options you define for ArgumentParser, and select the best GUI component that fits it (like a checkbox for 'true/false' options and a dropdown for options). It's one of the best libraries I have used in Python. (As an aside, you may want to use conda with it because it makes installing Wx a breeze. It's a pain to install it on Mac otherwise.)
And if you've heard of pandas you will almost certainly hear about numpy via it. 
ansible, ansible-container need their own little python2 worlds
&gt; Please stop upvoting this. **NO, i like it**
It's a gem, but I think hidden is the wrong word. It's one of the most popular Python modules.
upgrading to python 3 is something i need to do too lol
That's why I mentioned I worked with urllib2 for a while. I'd never heard of Requests and was doing so much extra annoying work. Then one day I happened accross Requests and rewrote all my utilities to use it and it was SO much easier.
Those callback names... there's gotta be better names. Also, why are there so many? It looks like they are all exactly the same. Can't you just parameterize one? There is a ton of repetition. Try putting things in lists and making use of 'enumerate.' As a rule of thumb, if you're using consecutive numbers in the name of elements, they should be indices of an array instead.
I'm not to familiar with what an array is, could you give me an example relevant to my work? 
You can definitely get answers to higher level questions such as this one in there.
You should probably learn more python. Are you working through a book or a set of tutorials? Lists are one of the first things you come across. https://www.tutorialspoint.com/python/python_lists.htm
I just started learning python on SoloLearn.com a couple days ago. Had my first experience asking for code help on stack overflow. Made my first program in python. It's a simple addition calculator that's as smart (a little smarter actually) than Ricky from trailer park boys. I made string responses as close to Ricky isms as I could. I'm proud of the turnout. My end goal is to find work as a python programmer since I'm on the spectrum and since I got lupus/RA overlap I have been more prone to overstimulation and excess stress and I need to find work. I wish I could find a paid remote apprenticeship so I can learn and earn at the same time, parents struggling hard to support me and my son. Anyways, here's to a hopefull direction for my occupational future.
I started to learn Python at school, and all the code I did here was self-taught.
Then I am defeated. Still worth it though.
I can confirm that 'sh' rocks!
&gt; I wish we had decent ImageMagick bindings. We have both os.system() and subprocess.popen() You can do a great deal with those. What benefits are you looking for that they wouldn't hand you? 
This doesn't belong here. Post in /r/learnpython, and read the sidebar/FAQ for how to format code correctly if you expect others to read it. 
just learned how to format it and made the correction. can you give me some time to cpy and paste it over to the other blog?
I tried posting it on the learnpython reddit and its keeps running into an error screen that says something broke on there end (error code: 502ssl) can you please allow me more time to post it
You can't learn programming from watching videos. Buy a book, read it at least twice. Write code. Create a hobby project. Play around with it, then create another one. Keep doing that and expand in different directions. 
I use SQLAlchemy with Flask and have also used the Django ORM. Both seem to be very stable and well-supported by the community. Does anyone know if there is a special reason to call out peewee in this context (extremely well-known 'hidden gems')? I found [this pythoncentral article]( http://pythoncentral.io/sqlalchemy-vs-orms/) and peewee doesn't appear to have any notable distinguishing features. (In fact, looking at that list, PonyORM looks pretty cool because of the neat generator syntax.)
just posted on the /r/learnpython thank you
there is a utility called 2to3
Custom Linux installation.
Do you have a link to the patch? 
&gt; What do you mean by extend built-in classes? Something like this: str.extend(myfunction) 'foo'.myfunction() &gt; Can you do this in Python2? No, neither Python 2 or 3 does it. But if it was added to 3, I would make the move. It's my "fishhook" feature, as in, it would fishhook me. I've implemented a limited version of it as a 2.7-compatible preprocessing step \([here](https://github.com/fyngyrz/pyex)\) but it's obviously limited to invocation syntax. Lots more would be possible if the class could be properly extended. 
&gt; boto ‚Äî indispensable tool for manipulating AWS resources &gt; boto3 ‚Äî an updated library (it and boto have different functionality, so you often need both) &gt; botocore ‚Äî another library similar to boto/boto3 I'm fairly certain boto is the python 2 library, boto3 is the python 3 library (plus it's the one that's being actively maintained by AWS) and botocore is a utility library that boto3 uses (i.e. you shouldn't need to use it directly). 
I'm getting ready to start rewriting an internal notes database, converting away from PHP to Python/Flask. Fun times!
I just want to chip in with http://www.pyinstaller.org/ It takes your python program and makes it a native binary. Ive used it with 2.7 and 3.6, and works flawlessly. Even with things like Pygame, Pyglet, and Cocos2d for example. 
Gooey is Python 2 only.
Nice lib!
&gt; Why not just subclass the type? Because subclassing doesn't maintain the identity of the object - it persistently becomes an object of the subclass style, not str type. Even when you special case all the operators, you still variously end up with objects of your subclass, not strings, in the darker corners of string operations, and then other stuff doesn't understand them. I've been down this road, and aside from the fact that you have to work really hard to get things to mostly act normal, the fact that you can't get *everything* to act normal kept biting me. Whereas if the object actually _is_ of str type, well, then everything works properly.
Gooey is Python 2 only... https://github.com/chriskiehl/Gooey/issues/65 
Well you could use the tensorflow for poets program to sort out different people if you have at least 500 photos of each person's face, but that's likely going to be difficult for you to achieve. The tensor flow version of openface is located here: https://github.com/davidsandberg/facenet I'd personally build some experiment clusters in order to gauge your program's success. It's going to largely depend on how you are training your models it seems. Be sure to check out the links on facenet to their pre-trained models.
Since you seem to have experience did you set the built-in str to your sub class? http://stackoverflow.com/a/4025310
I'll take a stab at this, but it may not be the "best". You can use Markdown text formatting and then publish to GitHub. Syntax highlight, once on GitHub, can be achieved by writing markdown such as: ```XYZ where XYZ is a language such as Python, JSON, Bash, Javascript, etc. When GitHub sees this, it converts the content to code with colored syntax highlighting. Here is one that I did that includes several different languages: https://raw.githubusercontent.com/jftuga/universe/master/parse_centos7_server_install.md resulting in: https://github.com/jftuga/universe/blob/master/parse_centos7_server_install.md 
I am currently using 3.5 and am waiting for PyInstaller to support 3.6. Once this is done, I am making the switch.
I had difficulty finding reasons to use scrapy over requests and beautifulsoup.
[awesome-python.com](https://awesome-python.com/) provides a much larger list.
Not sure what you're asking me. The built-in str is c code, and you can't do anything with it. I have subclassed str, worked with shortcutting the methods, IOW, where you would have to say object.replace(x,y), I can just say object.r(x,y) and so on for all the operators and so forth. Then I added more methods; being careful to return objects of the type I wanted. That's basically the path I took. If you look at the link I provided above, you'll see the effect I was going for with "extend" -- not sure I answered your question, though?
Thank you
that SO link, creates a sub class but then assigns `__builtin__.str` to that sub class. 
Not on this list - [chaco](https://pypi.python.org/pypi/chaco/). Enables *interactive* 2D plotting (whereas Matplotlib tends to be non-interactive, if you ignore the pan/zoom controls). This makes it useful for data display *applications*, perhaps where you want to allow your user to interact with the display, and possibly have some level of control over the data that is displayed, via a GUI. Also, while it is possible to create data displays in matplotlib that update continuously in *realtime*, I found it easier to do in chaco, as it's designed around the assumption that data will change while it is being displayed. It can take a little bit more effort to get your head around, as it makes use of [traits](https://pypi.python.org/pypi/traits), which are an alternative to normal variables in Python. However, traits are pretty cool too - they provide rich functionality to types, such as type validation and change notification. 
You could always look at selenium
Ah yeah, that's what I meant, wasn't sure of the best terminology to use is all.
It might be worth checking out [Beeware](http://pybee.org/).
Got some real pro / cons? Never really used ImageMagick so curious why you say this. 
I'm really sorry but I'm really new to Tensorflow. Exactly, how do you implement Tensorflow and OpenFace together in Django? 
Thanks!
That sounds like an issue with the hosting environment. Likely a configuration or library issue. 
Have you tried something called a function? def myfunction(string): ... myfunction('foo') tadaa
Well, Tensorflow is python and OpenFace is python so just import them. I personally would create a file in my main image app folder named "face_recog.py" and from there I'd import tensorflow: &gt; import tensorflow as tf and openface via [the classify example](https://github.com/cmusatyalab/openface/blob/master/demos/classifier.py), this way: &gt; from classifier.py import * However, I haven't gone through the openface code very carefully, and there's a bit in that file about training so be careful you don't set off a training session each time you attempt to do a classifier. You'll want to retrain your AI every few days depending on how many new faces you're adding and how solid your labels are. There's also an example in there of how to do it from a web cam so you might look at that. From there, I'd just have whatever function return whatever I wanted and in my face_recog.py file write a save_image_data() function which saves a recognized image into my database via django. If you'd like I might have time to code an example for you tomorrow for Tensorflow.
I've taken courses in python, but I haven't done anything useful with it, so I'm basically a beginner. This week, I'm trying to take input data from a form on my website and move it to my company's database. The way it is right now, the contact form sends me an email, and I take the data from the email and manually input their form data into the database. It's inefficient and too slow for me. Things I know: - I know I can access a JSON file of the form input data. - I know it is possible to input data into our database in a JSON format. Things I think: - I think I can write a script to parse the json data and get it in the format our database wants. - I think I can also figure out how to upload the reformatted data to the database. I don't know where this python code goes. (Company web server? My computer and run it locally?) I don't know how to put a guard in place. (What if the form gets hit with spam? How do I keep that from the company database? Some sort of approval system where I approve or deny input data before it gets passed on? I don't know.) Sorry if I bore! I'm trying to think it out as I work. 
Dockerize your solution, deploy docker container to host. 
Symbolically linked to /r/programming
I've been using evernote for non code samples, and a git repo for code. With gitlab or GitHub you could also use GitHub pages or gitbook as well to host the notes too. I still use evernote because there's. It really a good way to see code related notes on mobile unless it's a rendered markdown file
I'd recommend [xlwings](https://www.xlwings.org/) over openpyxl for python excel spreadsheets if you need the dynamically interact with excel spreadsheets. The other solution only read or write to the sheet. 
If you want to go one step further on a small ORM there is [dataset] (https://dataset.readthedocs.io/en/latest/) which lets you treat you database like a json blob. Good for quick and dirty db work.
You probably won't find anything covering that particular stack, most of the django tutorials don't even touch on js. Tango with Django uses jquery and i think there's a shorter tutorial covering django with react but really that's about it, django isn't nearly as rich with full stack tutorials as node or rails
essentially, the API requires way too much code to complete simple tasks. you have to write multiple classes to handle even the most trivial of data-scraping tasks if you want to do it properly. There is little that scrapy offers you if you invest a few days into learning asynchronous programming and the basics of proper HTML parsing and just implement those into the scripts that you write. I've always been under the assumption that I'm just missing the scrapy point, though. 
[Jupyter Notebook](http://jupyter.org/) is for you! Set up once, use forever across many languages and platforms.
[Quiver](http://happenapps.com/#quiver) is pretty darn awesome. All kinds of different formatting including code and markdown. You can sync it with dropbox too.
I'm working on a python3 d&amp;d dice roller API. For now it works fine in its preliminary form, accepting and acurately rolling dice by inputing common formatted strings like 2d4, 1d20, 5d6+2, etc. Now it's time to build and expose its capabilities via a Restful API. Still got more work to do....
Dropbox owes a large share of its success to Python, a language that enabled us to iterate and develop quickly. However, as our infrastructure matures to support our ever growing user base, we started exploring ways to scale our systems in a more efficient manner. About a year ago, we decided to migrate our performance-critical backends from Python to Go to leverage better concurrency support and faster execution speed. This was a massive effort‚Äìaround 200,000 lines of Go code‚Äìundertaken by a small team of engineers. At this point, we have successfully moved major parts of our infrastructure to Go. ___________________________ that was a blog of July 1, 2014,and now,they give up pyston.still nobody cares about the performance of python?excellent.
&gt; The third major feature in Py3 I care about is real unicode support. &gt; I genuinely don't care about ongoing Py2 userbase/maintenance. I don't doubt that. Not everyone does though and that's the problem. Unicode is hard. People don't understand it and the tutorials are crap. Being forced to care about it, when you couldn't care less is a problem. Too often, people are forced to choke down unicode after your software fails spectacularly. That said, once you get it, Python 2.7 is just fine for unicode. I run a python 3 compatible open source project, that has had unicode support for 3 years. My company on the other hand hasn't switched and neither has my industry. The other week, our head of IT got cranky when he saw that I had print statements as a function! He doesn't even know the differences, let alone that you can write 2/3 compatible code. 2 weeks ago, we had a critical meeting about our Python 2-based tool has to also support Python 3 and that we know it's a disaster and don't know how to do it. I quickly kicked it from being a disaster to that's a day's worth of work. It's a non-issue. &gt; Indeed, I consider the death of Py2 to be a seriously overdue milestone for the language. It is, which is why http://www.python3statement.org/ is so important. Python 2 vs. 3 doesn't matter. The packages do.
Never heard of Pillow and Scrapy before, I heard of the rest.
This is more appropriate to post in r/learnpython That said, you're only assigning *value* once (on line 2). The output of line 3 will print "8" to the screen. And while you do reassign *price* (price = 5), you do not reassign *value*. So when you call print() a second time, *value* still contains the same 8 you assigned on line 2.
What does CPython moving to GitHub have to do with Stopping work on Pyston? I call it coincidence.
 smaller_pixmap = pixmap.scaled(32, 32, Qt.KeepAspectRatio, Qt.FastTransformation) [Qt5 Doc](https://doc.qt.io/archives/qt-5.5/qpixmap.html#scaled)
It doesn't work... `2to3` handles the uncomplicated parts of Python 2 to 3 and ignores the hard parts. It doesn't even get integer division right. It totally ignores the fact that people write `mydict.items()` instead of `mydict.iteritems()` because they're lazy and not because they mean `list(mydict.items())`. It does nothing with unicode. It adds parentheses around print statements, updates a few imports and that's about it.
Selenium.
Bet yet, just avoid ALL articles that are just arbitrary lists of things. And avoid websites that post articles as slideshows. I bet people are upvoting this to share the message and not support the article. And try to tell reddit how to react to something is futile. 
I've been meaning to learn emacs; do you have any recommendations on how best to learn?
Depending on what the package does, it may be quicker just to code the solution from scratch on your own.
No one claimed anything else. They are just talking about news. 
I started using Sublime for notes. I had a notes.py file stored in dropbox so I had cloud access to it. Problem was, it felt sloppy. The pages and subpages of OneNote helped with organization and the built in search feature helps with finding what I am looking for. So if I search for Foo, I will see all results and in a subscript it will say what page and subpage it is on. As you can imagine 'random &gt; snippets' vs 'important project &gt; perfect example' is nice. tldr; I need to retrain myself since I doubt OneNote will implement the functionality.
Thanks, I'll look into it. I have a fairly Google-centric life.
Sidebar. &gt; If you are about to ask a question, please consider r/learnpython
def value(price): return price + 4
pycharm has a built in console and nice features for writing more involved code. they have a free community edition besides running full modules you can also just highlight some code and push it directly into the console with a quick keyboard shortcut give it a shot and see it that does what you need
If you can construct your rows as lists, you can use `openpyxl` to append rows to a sheet: import openpyxl rows = [ ['a', 'b', 'c'], [1, 2, 3], [4, 5, 6], ] workbook = openpyxl.Workbook() worksheet = workbook.worksheets[0] worksheet.title = 'Some sheet title' for row in rows: worksheet.append(row) workbook.save('newfile.xlsx')
Do you know what the upper limit is on free storage of private projects for github users? Is it something the average user will never exceed like gmail storage limits? Thanks in advance, no worries if you don't know. And yes, I did search google :P
read a bunch of source code on github.
The example they give (libseccomp) has a setup.py (though no package on pypi), so it can actually be installed via pip (in a virtualenv even) if you download the source. 
* Join #python channels on various large Slack teams * Have the advice of professional "Pythonistas" available at a keystroke
+1 for unidecode. This has saved me so much trouble since upgrading to py3. 
It's includes a tutorial on startup. To get the basic movements. Then follow the orgmode guides. Them ignore every and all packages and people for a month. It can get overwhelming pretty quickly of your not careful.
yep.
At home with your feet propped up and your favourite warm drink to hand.
Surprised no-one has mentioned [jupyter notebooks](http://jupyter.org) yet.
you should use python 3. else everybody will just use deap 
^ This. Used Selenium to automaticly login and download some data from a side. Pretty easy and straightforward API where you can write the workflow as if doing it by hand.
Yo monty where you AT!!!
does nobody read the bloody sidebar?? /r/learnpython
does nobody read the bloody sidebar?? /r/learnpython
Stop spamming this reply. I dislike you. 
Wow, such bad advice. Python 2.7? System-wide package installation? sys.path manipulation? Just say no, kids.
Not quite sure what python I am learning but Im learning from a site called codecademy
Thanks for your response.seems I misread the news.
Its all in the docs.
Also, people who already use github are always telling beginner programmers to learn it &amp; use it. I also see alot of job-related advice that makes it appear as if to get a job, you must have a project on github. It is kinda like peer pressure!
Your variable `soup` still holds the response to the original call to `http://www.nakedcph.com/cart` on line 29. What you need to do is set `soup` to the response of the call to `http://www.nakedcph.com/checkout/confirm`. Between the while loop and your `payload = ...` line, do this again: `soup = bs(response.text, 'html.parser')` Also note you have misspelled `payload` as `payoad` at least once in your code, which will cause problems.
https://docs.python.org/2/library/csv.html#csv.writer
Well Python 2 and 3 are in essence the same language, just with slightly different ways of getting stuff done. Think of it as the English language - English is spoken in both America and England, but the 'Slang / Dialect' will be a little different in both places. You're most likely using Python 3 since you're learning on codeademy. You can find out for sure by opening IDLE which is the interpreter that will be installed with python. You'll see a prompt similar to the one below with the version number. Python 3.5.3 (v3.5.3:1880cb95a742, Jan 16 2017, 00:00:00) [MSC v.1900 64 bit (AMD64)] on win32 Type "copyright", "credits" or "license()" for more information. &gt;&gt;&gt; 
org-mode is particularly good for programming notes because you can embed code syntax highlighting for most languages, and execute code snippets and capture their outputs inside the document.
One way is to use selenium as mentioned by others. Other is to analyze the web service call made for login and reset and call it directly.
I recommend starting with [a starter kit](http://wikemacs.org/wiki/Starter_Kits).
Happily. We should have a bot that redirects people who cant read the sidebar to /r/learnpython
As a favor to the Python community, please no more one line if/return. It is extremely unnatural to read and disrupts the idea that indentation is a meaningful part of Python syntax. Having all return statements and a single level of indentation makes reading functions SO much better.
ImageMagick has hundreds of options. All the Python libraries have an ugly and incomplete API.
&gt; Here we have created a memoryview out of a `str()` or `bytes()` depending on python2 or python3. 03:10:53 patrick@linawesome ~$ python3 Python 3.4.3 (default, Nov 17 2016, 01:08:31) [GCC 4.8.4] on linux Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; mv = memoryview('hello') Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; TypeError: memoryview: str object does not have the buffer interface &gt;&gt;&gt; You might want to put a little more effort into verifying the assertions you make before sharing with the wider world. =\
Oh, that's what you mean by "Here we have created a memoryview out of a str() or bytes() depending on python2 or python3." What that sentence actually seems to me to suggest is that the above code DOES WORK in Python 2.X as well as Python 3.X, but behaves slightly differently in each. The word "here" in the phrase "here we have ..." suggests precisely this. It would be clearer if there were an explicit mention that the code needs to be modified, I think.
Might also be worth noting that behavior is substantially different in Python 3.X: mv = memoryview(b'hello') &gt;&gt;&gt; mv &lt;memory at 0x7fe341da6cc8&gt; &gt;&gt;&gt; mv[0] 104 
No worries. Glad to be helpful!
Ok I'll take a look at it.
codeacademy is a great place to start.
&gt; In some languages like go, there is a concept of "slice", where there is the same underlying data, but different "slice" objects refer to different regions inside the underlying data. "in some languages"... yes, like python, since 2000 (when 2.x was released, don't know about 1.x) and it's not specific to `memoryview`. why shoehorn go in there?
Yeah, Selenium is going to be way overkill here. It's going to be much easier to use the browser dev tools to find out the api call it makes and just call it directly. Depending on how complex it is, you might not even need a script, just a curl one-liner.
The Beeware suite has been in development for about 3 years but there's been a big dev push recently. Have a listen to [this episode of Talk Python To Me](https://talkpython.fm/episodes/show/79/beeware-python-tools) to learn more.
Oh? So you can, like for the case of OpenCV, change it's code even when you're "Dockerizing" it? 
Id start at /r/learnpython, and whatever django sub you can find. But honestly there isn't really any integration needed between django and js. You are right in thinking 'url points to view and returns', but mostly what you are returning is a html template. And within that template will be your js. Just work through the django tutorial and learn html, css, and Java from another source.
done
Error I'm getting is NoneType because I'm using bs4 to find a certain value but it can't because of my earlier reply.
Why is such an uncommonly-used feature (memory view) important? I know we touched on memory efficiency where it has obvious savings, but is it actually more performant? I looked into this a while ago for another project and discovered that in most cases, memory view is actually slower, but I never worked out firm rules as to which cases those were. It would be nice to know if we using it because it's faster, or because it makes Python look like Go, or to save us running out of memory?
I can do anything from the command line. Why bother having Python libraries then? 
First, that's not even remotely _close_ to true. Second, you haven't answered the question. Third, the benefit of a Python library is to give you access to something you don't otherwise have access to. Libraries that duplicate large scale functionality already readily available actually don't have a lot of great reasons to exist. If you just want to access the existing IM capabilities from within Python, you can write a wrapper for it, or, as it's open source, you can write the bindings yourself. At this point, you can refactor whatever you think is the most interesting or useful if you are so inclined. So if in fact whatever you want to do is already within IM's capabilities, why not write a class wrapper for it? Or, if you're really motivated, why not write actual bindings? Either way, my question stands: is there something you want to do with IM from within Python that you can't do via os.system or subprocess.popen? 
&gt; a language that enabled us to iterate and develop quickly And that is what Python is for. &gt; still nobody cares about the performance of python?excellent. Because the people that care about performance are using a compiled language.
I am really curious to understand the cases where it is slower. Also slower compared to what? Creating copies? In both cases, whether you are creating a copy or not, you are still creating a new object, and in Python even int takes 28 bytes (`sys.getsizeof(1)` on my mac/python3), memoryview is 192 bytes(fixed size), which is same as a bytes array 159, or list containing 16 ints. So if the copies you are making are within ~200 bytes/20 long list of int, then copying should win, only at higher sizes would using memoryview would make sense.
If you have used golang you will see that there are many techniques that exploit the "many slices of same underlying data, each passed to different function invocations to modify specific portions". If this is what you need you can use memoryview. Also see the other comment about @itsmoppy about performance (its not an unconditional win, like all optimisation you have to test before you know if its helping or hurting).
&gt; If you just want to access the existing IM capabilities from within Python, you can write a wrapper for it, or, as it's open source, you can write the bindings yourself. At this point, you can refactor whatever you think is the most interesting or useful if you are so inclined. Exactly. I'm complaining there are no good bindings. &gt;So if in fact whatever you want to do is already within IM's capabilities, why not write a class wrapper for it? Or, if you're really motivated, why not write actual bindings? I'm motivated, but not \*that* motivated. &gt;Either way, my question stands: is there something you want to do with IM from within Python that you can't do via os.system or subprocess.popen? No, but I want my Python code to be Python code, not lots of popen calls and C-style error checking and boilerplate.
 if x == True: retval = False return retval 
I found [this](https://www.imagemagick.org/script/api.php) and [this](https://wiki.python.org/moin/ImageMagick) and [this](http://docs.wand-py.org/en/0.4.4/) and [this](https://app.assembla.com/wiki/show/pythonmagickwand)... any of that look like what you want? Or have you tried them already?
What does this mean?
Just some pointer: your question has no votes because /r/python is not the right place for it. I suggest that you use /r/learnpython for your questions about Python.
I've never reached the limit. I hit the single file 100MB limit on a Photoshop project in the repo, but there's no way a normal project would ever reach that much. I doubt I've got 1GB total across all my repos.
Migrate plan for our app from django1.8 to django1.10. 
Holy shit can you do this? Im familiar with generators and list/dict comps but Ive never seen this. Also i dont think it can cover all cases, thats why I used to show both assigning to retval within an if block, as well as using that value in a single return from the function.
The .0001 was added due to a floating point rounding error 
yep, we're back to "do it yourself", since no one else has. Or hire it done. :) 
I assume this is a descendant of the fabled 6.001. I miss Scheme.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Thx for the feedback! I will edit the post with extra info.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Your last sentence tickled me. Thanks for that :)
Original article author here. Happy to answer any questions/comments/concerns regarding the article :)
For getting started with docker? Just head to the website and start with the tutorial then treat your docker container like a light weight VM. _some Linux experience required_
SICP Follow along: https://www.youtube.com/watch?v=2Op3QLzMgSY and here: https://github.com/sarabander/sicp 
Minor nitpick, you shouldn't be comparing against `True`, if you want something to be truthy just use `if x:`, and if you really want to compare against `True`, use `if x is True:`
I know, it was just a quick example to illustrate a point. Probably wise to not introduce bad practices while doing so :p
Have you looked at numpy? It does all of this already.
Fantastic reference material! Thank you
Seriously though, can anyone from MIT explain the numbering system used here?
One big PITA with memoryviews is that you can't compare them so sorting is out of the question :-(
Part 1: https://www.datacamp.com/courses/python-data-science-toolbox-part-1
Every major is assigned a number. 6 is the number for EE and CS, hence all CS classes are 6.*. Intro classes are typically x.0y or x.00y. 6.01 is an intro EE class that requires python. 6.001 used to be an intro class taught in scheme but is no longer offered. 6.0001 is a half class that introduces students to programming and python specifically and is a prerequisite to 6.01. Presumably they would've used 6.001 but the old class isn't that old and still has material around so it would have produced ambiguity. 
holy shit, the documentation... :D
That was actually one of my first approaches, but I really wanted to try and stay away from having an extra service to manage. I was really trying to go for the simplest possible solution, and since have a very few number of private Python modules that we use, vendoring was very simple, low effort and effective way to get this to work. I originally started my search with devpi, in fact, I actually wrote my own PyPI server (because I guess I have a little too much free time on my hands nights/weekends), https://github.com/brettlangdon/pypihub. This one is a little different in that it basically sets up a PyPI simple index and proxies to "releases" in a GitHub repo.
I knew a bunch of people that went to MIT. I think it has a decent system. Beats my school CSxxx, SOCxxx, MATxxx, ECExxx, etc. We just have alpha codes for ever department and a course number. Some departments have good codes. Others were a bit bizarre. MIT? 6 maps to computer science
yeah, I originally looked at running a dev pypi server, but after investigating, I really didn't want to have to manage the service, along with making sure everyone's pip configs are setup correctly. Do/should we have a different server for dev/qa/production/etc? Was a little more than I wanted to get involved with. We could probably do with less services to manage :)
Nice! I learned something new, thanks. I think you have a typo, though. &gt; Here we can see that since bytearray is indeed an immutable, our memoryview is also writable. I think you meant to say bytearray is **mutable**
In linux / mac, just use the [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code#Colors). In Windows, use the `colorama` module to allow the use of ANSI escape codes. If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. EDIT: I just noticed you said "Python Shell". If you mean IDLE, then the answer is no. You can only output color in the terminal (command line on windows). 
Most everything at MIT is off of numbers. Buildings have names but all are numbered. The room numbers are similar, e.g. 31-255 is building 31, floor 2, room 55. The building numbers are roughly based on their location so they give you a sense of where the building is too. 
[removed]
That's a shame, thanks anyway
I ended going back to school to get a computer science degree. I had a degree in biochemistry before. To be honest, it's difficult and takes a lot of time, though looking back on it, it was worth it for me. If you do go back to get another degree, just make sure you're committed to finish, I've had a few friends who went back and dropped out because they didn't make it into the program or they liked making money more. It's a tough track, but I think it's worth it if you really enjoy it. 
Just went to Codecademy and am starting to learn Python so that I can learn at least a little bit of what my employees are talking about. Half their job seems to involve translating stuff for the executive team. They shouldn't have to ELI5 everything.
I see will post over there sorry I should have read the sidebar.
This code [Python-Dataloggers/GPS_Serial.py](https://github.com/DavidLutton/Python-Dataloggers/blob/master/NMEA-GPS_Serial.py) gets a sentence_type from a parser for data from a GPS device. This is an concept/extract, classes can be referred to in the same manner def GPS_GSV(msg): print("function that takes a parameter of msg and records value") def GPS_RMC(msg): print("function that takes a parameter of msg and records value") dispatch = { 'GSV' : GPS_GSV, 'RMC' : GPS_RMC, } msg = parse("$RMC,........................") dispatch[msg.sentence_type](msg) msg = parse("$GSV,........................") dispatch[msg.sentence_type](msg) Effectively look for key in dictionary, run class or function in value in the dictionary with the parameters in the brackets ie: (msg) This is nearly equivalent to if you disregard parsing: def process(string) if string.startswith('$GPGSV'): msg = parse_out_wanted_parameter(string) GPS_GSV(msg) else: if string.startswith('$GPRMC'): msg = parse_out_wanted_parameter(string) GPS_RMC(msg) process("$GPRMC,........................") process("$GPGSV,........................") **your dispatch equivalent**: dispatch = { varN : classN.listener, varN1 : classN1.listener, varN2: classN2.listener, } while condition is True: # continue taking in messages dispatch[id](message) Edit code blocks
I was going through it pretty attentively when I first started learning python. But I felt like I was mostly just learning how to hack things and moved on to different resources halfway through
You know that game where you slide boxes around? It's like that except it's an astronaut in space flipping gravity around.
When I use the command python --version I do indeed get evidence that my interpreter is on the system (the output is "Python 3.6.0"). But when I just type pip --version I get the message: 'pip' is not recognized as an internal or external command,operable program or batch file. *However*, if I type python -m pip --version I get the message pip 9.0.1 from C:\Users\USERNAME\AppData\Local\Programs\Python\Python36\lib\site-packages (python 3.6) What causes the second call of pip to work when the first doesn't?
OK I've run through this website's cart checkout process because I'm having trouble understanding what you're trying to do. Here is the process on the website: 1. Browser loads /onestepcheckout which presents a details form to fill out. 2. User fills out details and clicks "I agree to the terms and conditions". 3. Site makes two XHR requests: 3a. POST to /checkout/details with all of the form parameters (email address, postal address, etc). The response is a HTTP 302 redirect so the browser makes a second GET request to /checkout/details with no parameters this time. The response is HTML describing the form. No JavaScript is returned or executed. 3b. POST to /checkout/handling with parameters mode, shipping and payment. Response is a HTTP 302 redirect so the browser makes a second GET request to /checkout/confirm with no parameters this time. The response is HTML describing the "terms and conditions" checkbox and the Confirm button just below it. No JavaScript is returned or executed. 4. User clicks Confirm button Are we on this same page here? Is this how you understand the page works? EDIT: Tried running your script and it goes into a failure loop on line 40 because `email` isn't defined. Is there another version of this script that actually works? I can't see `email` being defined anywhere.
&gt;Sometimes a cleanroom rebuild in Py3 may be the right choice, especially if the project was written in a really old Python ...well, either that or finding an implementation in another language (Lua, Ruby, Go, Ocaml, Common Lisp, etc.).
Thank you. I'll consider all of these.
and even more cool stuff: [Coconut](https://github.com/evhub/coconut/releases/tag/v1.2.1) and [others](https://github.com/vindarel/languages-that-compile-to-python) !
I've been able to pull some interfaces together really quick with this combo. Would highly recommend. Pygobject install on windows is a little time consuming but no big deal. 
Usually you should use `subprocess` for spawning processes. In this case there's a bit of a python wart (in py2 anyway): reading line-by-line from the stdout of a long-running process (`pdreceive`) is a bit ugly. The following should do the trick: import subprocess def pdreceive(port, tcp=True): args = ["pdreceive", str(port), "tcp" if tcp else "udp"] proc = subprocess.Popen(args, stdout=subprocess.PIPE) while True: line = proc.stdout.readline() if line == '': # `pdreceive` exited. break yield line for message in pdreceive(3000): print "got message: ", message More generally you should use a 3rd party python library rather than calling out to an executable, but in this case the [only](https://pypi.python.org/pypi/purity/0.2.4) [two](https://github.com/automata/topd) I can find are quite old and may not work.
answering my own question, here's an article I found on the subject: http://charlesleifer.com/blog/the-case-for-peewee-small-hackable-and-fun/ TL;DR: peewee is less abstract and more straightforward if you want to use your db in a fairly vanilla way
Agreed! Maybe we should adapt the "what are you working on this week?" thread's message. I'm okay with people self promoting, so long as there is some amount of effort put into a) thinking about an actual problem and b) they've thought a bit about the solution. Self-promotion is better than these click-bait "5 libraries you can't live without: numpy, pandas, requests, matplotlib and...gotta...click...through...adds...to...see...the...fifth"
my favorite: from toolz.curried import *
Work on a project you are interested in. Drilling problems isn't a very good strategy in my opinion.
"Actually has not as much in common with *magic* as before."
As suggested, you may want to just watch the calls and see if you can't just imitate them. I don't know selenium really, but I've used mechanize to find and fill forms. It's not a full browser, and it won't work for everything - but it might work here and it'll let you do the login and find links/forms on subsequent pages pretty quick and dirty. An example for you, given the above code, might look like this: import mechanize br = mechanize.Browser() br.open("http://192.168.254.254/html/status/overview.asp") br.select_form("login_form_name_here") br["txt_username"] = "user" br["txt_password"] = "pass1111" br.submit() This would open the page and find the form, find and fill in those two fields (think that is selecting fields based on the "name" attrib, but there are ways to go by id too). After it's logged you in, you need to find that link/additional form and follow it/submit it. Also, as pointed out - r/learnpython
The official user guide is really a good start indeed: http://www.tornadoweb.org/en/stable/guide.html
You mean like given a chunk of memory, you create multiple references in it using memoryview, store it in a list and you want to sort that list for some reason. Interesting. I do not understand why sorting would be an issue here. Python can not do magic, if they had comparison on memoryview, it would have gone serially through both memoryview till one is exhausted and done a character by character check. If it was done in C it would be faster, but complexity wise, both are of the order O(n) (comparison).
After years of using Python I still had trouble understanding that code. Wow. Just wow. 
Link would be helpful! https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-9
I'm using "Automate the boring stuff". Zed Shaw appears to be a condescending person and a quick search around this sub tells me he to learn python 3.0 instead.
Link to the Zappa code: https://github.com/stratospark/zappa-s3-signature Link to the React/Fine Uploader front end code: https://github.com/stratospark/react-fineuploader-s3-demo
&gt; no reason It is a bit too optimistic to say. My company had Python 26 in production, when I need something similar as in the question, I have two options: learn old version of subprocess or use os.system... 
[Here's and array of video links, instead of a linked list](https://www.youtube.com/playlist?list=PLE18841CABEA24090)
Thanks a lot for that. Very helpful.
Single expression python programs are fun! Here's a [brainfuck interpreter.](https://gist.github.com/anonymous/d26bd44782cd5a9b212d5cbaab0f747d)
What's with the numbers(6.001)? Are they just random or they actually mean anything? 
OpenCourseWare is essentially MIT's first exploration into MOOCs. EdX is an MIT spinoff company that took the MOOC idea and ran with it. Can't say why you'd pick one over the other; maybe you were enrolled in the course would like to have the lectures for your current course? Regardless, it's better to have them than to not.
Your perspective also right. It's depend on one's skill set and specific project requirements
At MIT, the first number is the course (major) and the numbers after the dot are the class. Because this is a very low level, introduction course, there are 0's after the decimal. That's true in most cases. This is the first programming class you'd take if you had never programmed before.
Thank you!. I ended up using Selenium and boy, XPATH is too awesome and is necessary because my routers control panel is unnecessarily complicated.! I'll keep mechanize in mind should in the future though.
Thank you! I ended up using Selenium, and boy, XPATH is too awesome and is necessary because my routers control panel is unnecessarily complicated! 
Cool. What about returning statistics? I.e. run a script that appends data to sheet then return out the new min, max and average?
 * [forex-python](https://github.com/MicroPyramid/forex-python) : currency exchange rates, Bitcoin price index and currency conversion. * [django-blog-it](https://github.com/MicroPyramid/django-blog-it) : django blog - complete customization and ready to use with one click installer * [django-ses-gateway](https://github.com/MicroPyramid/django-ses-gateway) : A django package which act as a gateway to send and receive email with amazon SES. 
I'm actually extremely thankful that Selenium was suggested, I ended up using it last night and accomplishing my goal. It's my first ever python script and because of it, I'm in love with Python and will definitely continue learning. I already see a lot of things that I was previously unable to automate be automatable using just Selenium. Can't wait to get my hands on Requests and BeautifulSoup. Although, your mention of browser dev tools intrigues me. Do you have a resource for that, perhaps?
I used Selenium to automate clicks and typing into form. Didn't know about downloading some data from a side. Do you have time to elaborate on what you meant by that? 
I changed one of the underscores accidently by smashing my keyboard with my forhead in order give myself brain damage to delete this post. what your question again?
Also here is the output of the request with the 'confirmed': 'on' request. https://gist.github.com/slavkobojanic/8fbfa85f746def4126935c5f01e7e522 I can only send this and not the next one because it can't execute due to not being able to find the agreement_id in the response.
I have updated the section to include numpy reference. You are quite right, memoryview is a special tool, and if you have really come across a situation you need precisely this tool, its good to know that there are other, and arguably more versatile exists that you should also consider. Thanks for the feedback mate.
Good article. When you introduce decorators you should mention the `wraps` decorator from `functools`, even if you don't go into depths about it.
No worries. It is actually very useful to teach implementation of views anyway. In a general sense, I mean. After all, it's really just two things: implementing a custom `__getitem__` to understand `slice()` as input, and returning some sort of view object when that happens which does index remapping in its `__getitem__`. The only really tricky part is the index remapping algo which can be as simple or as complex as you'd like. Numpy's is rather insane, as it can handle n-dimensional arrays, and you can specify them all at once, or use the Ellipsis object to skip dimensions. Probably not the best place to learn how to implement views, but a good example of an implementation.
I imagine you can: gspread lets you access both the [`raw_value` and `value`](http://gspread.readthedocs.io/en/latest/#gspread.Cell) of a cell, so you could set the `raw_value` to a formula (e.g. MAX(Column)), then immediately read the calculated `value`. Or so I hope.
Disgusting. *upvotes*
Made a script to download .mp3 songs directly to your mobile using Telegram app. Script extracts the youtube link of the song, downloads it using [youtubeinmp3](http://www.youtubeinmp3.com/)'s API and sends it to telegram app. [Telegram Song Downloader](https://github.com/yatharth96/TeleBotSongDownloader)
This is so important! Find projects that merge with your personal interests. For example I'm working on generating spirals for a metal working project. That means learning (really brushing up) some old algebra and geometry. Im doing this in Jupyter Notebook which is also forcing me to learn to code for that environment. Thus I'm learning to generate matplotlib calls and generate HTML. Believe me the challenge of accomplishing your non programming goals will drive learning Python even at the beginners level. Now I'm not exactly new to programming and im not a professional, but if there is one thing that has driven my expanding capabilities that is doing something software wise i was personally interested in. Beyond all of that the human brain needs constant refreshing. Some of that algebra and geometry i mentioned before was covered decades ago. It is part of reality that if you don't use it, the skill needs to be refreshed when you need it again. If you want to get really good at programming it needs to be something that you don't let rust! Rust is the right word because it is a build up on a structure over time that obscures what is underneath. 
Is this one any better than the other MIT based classes? Understandably they're all waaaay too math focused and generally extremely boring because of this fact as well as the weird way they seem to teach. This means I never recommend them to friends who want to learn Python, they're just dull and uninteresting.
Sure - [here](https://gist.github.com/vsajip/318e6ea2261c571d838d22a8c882727e). If you apply it and still find problems, let me know.
I'm so naive when it comes to programming, I was actually searching for the 'Hello World' string in the code. Well done, sir, well done.
Nothing. However, all the files are automatically deleted after 24 hours. Additional lambda functions could be triggered to filter and process files in the upload bucket and be transferred into a post-processed bucket.
OK so your problem is literally what I said at the very start. Where your code says: response = session.post('http://www.nakedcph.com/checkout/confirm', data=payload, allow_redirects=False) none = 1 change it to: response = session.post('http://www.nakedcph.com/checkout/confirm', data=payload, allow_redirects=False) soup = bs(response.text, 'html.parser') none = 1 See the extra line in the middle? You forgot to add that one in. I can run the script and see it fail, add that line in and then it's able to get the agreement_id out of the response, so that's definitely the problem.
Definitely - Python 3 compatibility is the next thing on my roadmap now that I have some initial functionality in place.
Successfully finished my thesis defense. I want to run a few more experiments, so this week, instead of rewriting my thesis by hand, I'll be using Python to crunch the data and update the LaTeX tables. The figures will be updated automatically anyway.
Some time ago I decided to use ViM for Python development and spent some time for tuning of it. It worked really awesome for me, so I put my configuration on GitHub to make it available for other people - https://github.com/ets-labs/python-vimrc Keep Calm Keep calm and use VIM!
Here's my code. I've made a few changes such as - Enabled debug logging for all HTTP requests so I can see exactly what's being sent and received - Changed all the configuration strings to hard-coded strings as I can't see anywhere the user info is loaded from the .json file produced by makeinfo.py so I assume it's broken - Formatted all of the code according to PEP8 standard Python formatting - Added in the line I've described above so that `soup` is initialised from the response of the POST to /checkout/confirm. https://gist.github.com/anonymous/e15307a1d18ccd1a02966d8613d418f6
No problem, we all started off somewhere. Just don't assume too much when you ask for help because as a beginner you are the least likely person to be able to diagnose what your problem might be. Best is to lay out what you're trying to do, a link to the github repo and a copy-paste (never in your own words) of your error message. In this case I've wasted a bit of time looking into what you're saying about redirects and two calls using the same URL because you sounded knowledgeable but the problem was just forgetting to re-initialise the `soup` variable, which I noted when I first looked at the code but you were dismissive. Anyway, hopefully my gist from the other comment solves your problem. I would strongly suggest looking into PyCharm Community Edition (free) which is an amazing Python IDE that does a lot of stuff for you.
Yamlb
Do people ever send you sexy code? 
Wow! This is working extremely well for me! Thank you so much! Let's say that I want to save the details of session_id to a variable named session_id which is found when successfully making the request with soup.find() &lt;input type="hidden" name="continueurl" value="http://www.nakedcph.com/checkout/done?order_id=137878&amp;session_id=h0lrj1gdak59bgit8tlcjpm3p2" /&gt; How would I go about this? Sorry for asking so many questions but you seem to know a lot more about this topic than anyone else i've spoken to thus far :) 
I am in the same boat, I bought A Student's Guide to Python for Physical Modeling and it has good instructions on installing Python with the packages you want. 
I wouldn't say naive. It's quite a good instinct to strongly expect something logical and simple. It suggests you'll probably be inclined to write something logical and simple. This is not a *good* way to write Hello World, and it's not naive that you didn't immediately think like someone who's trying to write unreadable, unmaintainable, verbose code.
I will be messaging you on [**2017-03-29 13:06:32 UTC**](http://www.wolframalpha.com/input/?i=2017-03-29 13:06:32 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/5ujjgl/writing_the_hello_world_program_in_the_most/ddv007i) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/5ujjgl/writing_the_hello_world_program_in_the_most/ddv007i]%0A%0ARemindMe! 1 month 12 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ddv01jp) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Mate this is exactly what I was after. I have so many questions I wish I could ask about this type of project, but I won't take up too much more of your time. Are there any resources that helped you out with this? Any tutorials or anything like that which helped you? 
SimulateMe! SayFuckYeah 
Hm, I think I can actually learn something from this tutorial. Not how to write beautiful code, but how python works.
Some people have way too much time on their hands.
I strongly disagree with this. For someone that is just starting out, having to mess with parallel installations of Python and other tools which ship with MacOS (albeit with older versions), and then using a virtualenv to sort out the mess is prohibitively complicated. Anaconda really is much better suited, especially on *nix systems where you can simply prepend **$PATH** with the location of your Anaconda installation.
This is great!
Still no calls to a database on the cloud through IBM Watson. Or opengl renderings.
does nobody read the bloody sidebar?? /r/learnpython 
I'm not really a fan of the type hinting approach python has taken. Most of the time I'm writing code in vim (with a few plugins). There are some times, particularly when dealing with largely code bases or with libraries written by other people, especially across the company, that having types would be extremely useful. It would boost my productivity, and allow me to write more succinct code. I suspect that if/as/when I'll add type hinting, it'll be purely for returned types from libraries. 
[pyhistory](https://pypi.python.org/pypi/pyhistory/2.0) - for distributed history of changes for dev teams [super_state_machine](https://pypi.python.org/pypi/super_state_machine/2.0) - to keep flow of state changes. It is possible even to integrate it with Django (although way is not in the docs... yet ;) ) ( [jsonmodels](https://pypi.python.org/pypi/jsonmodels) - not sub 10 - but maybe you'll like it ;) ) 
Hi, I have downloaded the graphical installer version however if I run it, it just says 'Initialising' and then shuts it down. Any ideas as to why this is happening?
Good point. This is a presentation I did at a Python meetup and while it's not on the slides I did mention it during the presentation.
Its just more fun to not think about variable naming okay. I can understand it today, the rest is a problem for tomorrow me or someone else. Preferably someone else. 
That's interesting, because both the local copy of the wordlist file, and the remote copy I'm storing on S3 are encoded as UTF-8. How did you determine that it was windows-encoded?
Even the metapath is less complicated than this. 
Let us know if you have any thoughts on how it could be improved.
[Jupyter Notebooks](http://jupyter.org/)
Why do I have the feeling if I run that code it will "Hello World" and then steal my personal data and launch all the nuclear bombs.
I know this isn't supposed to be a political sub, but I thought some amongst you might enjoy this anyway. The poll is full of leading questions, and I think it deserves a bit of fake news injected into it. If you don't think this is the right sub, let me know and I will post elsewhere.
Anonymous and throwaway, so I don't feel bad for critiquing. Your commenting and variable naming could be much better.
After a new company took over, my department was shuttered. So I am stacking inventory onto pallets this week. I was briefly interviewed for a corporate developer / data wrangler position within the new company, so I have that going for me. They were apparantly impressed with the utilities I had built; I'll find out more next week. 
I maintain a package called [consecution](https://github.com/robdmc/consecution). It is essentially a poor-man's stream-processor built in pure python. It lets you build processing graphs that consume python iterables
Hey thanks! Although I notice only about 1/2" of the second page shows up.
Yeah, [plumbum](https://www.reddit.com/r/Python/comments/5tlml4/ansimarkup_a_library_for_producing_colored/ddpdy5t/) does a great job.
Bokeh will be your friend.
I had someone inbox me "boobies" converted into binary once. I got a laugh out of that. 
You probably learn like me, because I've been fighting that as well. Try out HackerRank and see if practicing what you've learned works for you.
That error means that you didn't have the SQLite development package installed when you built Python. The `sqlite3` binary CLI program is totally irrelevant; Python does not use that, and its presence does not mean you have the correct package installed. The necessary package is [`libsqlite3-dev`](http://packages.ubuntu.com/xenial/libsqlite3-dev). You don't need `--enable-loadable-sqlite-extensions`. 
Haha, I suppose technically it meets the requirements...
I have installed that package some time ago, before post here. Now I rebuilding Python for the 3rd time. 
For some reason, I've never been keen on doing web work. I don't really know why, honestly. It interests me to have my code up there for the whole world to use, but I've never made a website. An IRC chatbot, yes, from cannibalizing existing code and slapping on my application, but nothing like you described. That's pretty cool. I don't like incomplete projects because I can't show them off. They're just pieces of code that do something halfway but have no functional purpose. One example is a Python based Gameboy emulator I started to write. It had the framework for processing CPU instructions and I implemented a fair amount of them, but I stopped when it became tedious and less about structure and more about actually making things work. I want to make fully fledged projects that do something to completion, and to be able to proudly put them on github. I'm an electrical engineer trying to transition into software engineering but my portfolio is pretty lacking. Right now, my goal is to look for new work and to get a substantial project under my belt that I can link to an employer after an interview and say, "Hey, look at this awesome thing I made". Right now I don't have anything like that, and I'm itching to find an awesome idea for a project I can start and finish in maybe a month or two. 
Someone wrote a [Brainfuck interpreter in Brainfuck](https://github.com/canoon/bfbf/blob/master/bf.bf) I saw a post not too long ago and someone had linked to a GitHub repository of a fucking C interpreter in brainfuck (or a basic subset of C, I cant remember) but I cant find that one. Either that or I'm losing my mind. 
My additions to this: * [docopt](http://docopt.org/) ‚Äî Write your command-line application's --help text, docopt will make a command line parser from it * [attrs](https://attrs.readthedocs.io/en/stable/) ‚Äî Saves you from writing a *lot* of class boilerplate.
Monitoring throughput on ubiquiti antennas, with the aim of eventually creating a replacement for aircontrol and sorting out some custom event logging and alerts based on the results of what I've got so far to our syslog server. 
&gt; but I stopped when it became tedious and less about structure and more about actually making things work. Feel free to correct me if you think I'm missing something, but I think you have to change change this mentality. It's not a stretch to say that literally every project I've ever worked on (coding and otherwise) has a breakdown where the first 1/5 of the project is really interesting-- you're building your framework, and creating something from nothing-- and the back 4/5's is super time consuming iterations of filling in all of the thousands of details in the project. There's such a huge difference between a piece of software that basically works for you as the author (which is how far you get in the first part of the project), and a piece of software that you can show off and others can appreciate as a final product. I think many people experience this wall. You just have to push through it and remind yourself that if you don't, all of the work that you've done so far isn't worth anything more than what you might have gotten out of it as a learning experience.
I wrote my one media center app. https://github.com/boxed/CMi :P
Isn't Python 3.6 available from your package manager?
Absolutely. Lack of discipline is the bane of my existence in more ways than just my programming habits. It leaks into every aspect of my life and it's incredibly good at making me unhappy. Not to be mistaken for motivation though. But without discipline, motivation doesn't really get you anywhere. But it does help get the ball rolling, which is why I made this thread to fish for ideas in an attempt to make me feel motivated about a particular project. I do have completed works, but I wouldn't consider them very big. 
yeah, I think the most effective way to do this would be just apply a background instead of extracting text. Looking for options to make this happen. I realized I am pretty restricted though due to not having admin rights to download/install some of these tools
this is how you ace an interview!
Ha! Nice topic! :) I've created a [**signit**](http://f0t0n.github.io/signit/) HMAC-SHA256 authentication library for production usage and then open sourced it. It makes it easy to create and validate HTTP requests' signatures in the similar way it's implemented in AWS API. So basically it's access/secret keys based auth. Though none knows about it. :) 
I'm making a simple script that fetches my investment portfolio's stock prices and updates my Excel spreadsheet daily. This will save me a lot of time in the long run. To do this, I'm learning openpyxl, ystockquote and datetime.
When you go to the Settings/Preferences -&gt; Project -&gt; Project Interpreter, is it using the Python that you expected? And does it list PyQt5 as an installed package?
I needed that too, and I hacked it by installing the chrome extension "URL in title". This adds the current tab URL to chrome's name, which I can parse out of the `wmctrl -l` (Linux) output. 
Since I don't know anything about your data structures, I will make some assumptions here. It seems that you don't really need date if you have one price per day. I'll give you 80% of the solution and let you figure out the edge cases. And since you are starting out, I'm going to avoid list comprehension or any syntactic sugar to make the logic easy to follow. date = [1,2,3,4,5,6,7,8,9] price = [17,12,11,9,8,11,12,16,12] signal = [] for p in price: if p &lt; 10: signal.append(1) elif p &gt; 15: signal.append(0) else: price_index = price.index(p) - 1 prior_price = price[price_index] if prior_price &lt; 10: signal.append(1) elif prior_price &gt; 15: signal.append(0) else: signal.append("Edge Case!") # You have to fix this! data = zip(date,price,signal) print data A couple pointers - Careful with the .index method as it will return the index of the first value that matches. So if you have duplicate values (for example, in your price data you have three instances of 12 so .index() will always return 1 (the index of the first 12)). The enumerate function could help you here. The other edge case is when the prior value is still between 10 and 15. Post what you try out here and I will see where I can help.
Appreciate the help. This is the type of method I'm using for now. Was hoping to do it with a df.apply() or something similar but maybe it's not possible.
That's not a bad idea. Maybe I can do it with multiple columns.
Python with sockets. Simple and easy.
This is going to feed the GOP persecution complex
Be careful not to go on a journey to find the "perfect" language. It never ends :)
That's basically [not safe at all](http://stackoverflow.com/questions/661084/security-of-pythons-eval-on-untrusted-strings)
While not creating, I fork some python program (reddit image downloader, doujin management, tumblr downloader) . The result isn't quite good, but it is decent enough. 
Have you tried Maya?
Why not server side Swift?
Every poll ever made has had leading questions. As for Trump being our new president get over it, he won fair and square. More importantly the last election was a huge loss for the democrats. I didn't vote for Trump because I liked the guy I voted for Trump because the Democrats have proven without a doubt that they don't belong in power anywhere. The after election behavior of the left just further highlights what incredible shit they are.
I just got an error on your code, the Java SDK was out of date. :P
I want to, but I am worried about support and integration with Firebase.
[removed]
&gt; what are some projects you're most proud of? I think pride comes when someone start using my app and appreciate it. Because it saves someone ~~life~~ time, helps to do everyday work. Mine are various scrappers. For example, my friend had to visit several sites each day and check some links. Now - it's fully automated: statistics, e-mail notifications and with web-version whole proccess can be managed via smartphone. &gt; How do you tend to think of new projects to pursue? Sometimes, I think "What can be optimized in my life? Do I have any routine tasks involving computer interaction?" And, if I stick to some idea, that's it - i start work.
Try to participate in some existing open-source project. Maybe working with people, interaction with community could change these weird feelings.
Almost as complicated as the code of the guy who thinks Python 3 may be a [global communist conspiration] (http://charlesleifer.com/blog/what-happened/) 
Paste it [here](https://repl.it/languages/python3)
Neat! I use NumExpr a lot in my projects; it's an important cornerstone of one of my (private) libraries. I do happen to use a lot of string arrays in my work, which I get from pandas.Categoricals (for example, the gender of a survey record being 'M' or 'F'). So far, I haven't experienced any issues with them, or switched over to unicode, so the library's a good fit for me. The `evaluate()` interface has always worked well for me. If I weren't already pre-parsing my expressions, I might ask for the ability to validate expressions in NumExpr prior to evaluation. But so far I've had no need. I like that you've added several new functions, although some of them are not self-explanatory, so it would be nice if there was a little more documentation for the new ones. Finally, is there any chance that you would consider adding support for Python's built-in ternary statement `a if condition else b` in addition to the `where()` function? Some of my expression rely heavily on conditionals and `where()` isn't always intuitive to my clients.
I work on a Python back end for a Chrome extension. It lets you send websites to your friends without copy-pasting the URL, then there's a chat box on the page. [http://tabdextension.com](http://tabdextension.com) I highly recommend making something you will actually use, the more frequently the better. Easy to stay motivated that way.
Here's how I'd make the decision: Is this a personal project, or a project you're being paid to make? If it's personal, then I'd take the time to learn Python while doing it, because it'll be a fun learning experience. I tend to couple side projects with new languages or tech stacks because largely my side project will never make me money, and in the long run it'll improve my resume more than any individual side project would. If it's something you're being paid to do, then I'd go with Java. Since you already know Java you'll be more likely to implement the project correctly on the first try, and it will take you less time.
Ubuntu 16 has Python 3.5.2 in its repository. But yes, /u/MarcoBuster : are you sure you will be needing Python 3.6 features? If not you would be much better off by simply installing the python3 package from Ubuntu rather than compiling everything yourself.
I run an open source projec that is 92k lines at last count. It allows me to not think about all the stupid 1970s legacy fortran requirement, beyond bad error checking, and proprietary nature of commercial FEA codes. I just write them, run a ton of automated checks and it tells me what's wrong. It's excessively picky, but it kinda needs to be. I also use it to visualize things that no other commercial GUI can visualize and everything is done in the native format, so I don't have to artificially map a quad onto a triangle or a curved line into a series of bars or some garbage like that. &gt; How do you tend to think of new projects to pursue? I don't. I just work on that one. I scratched an itch. It's now the best thing out there for doing what I want it to do. There are commercial codes that are less capable that what mine does. Granted there do other things, but still (and I use them when they are better).
In my (albeit little) experience the fact that vault works through ssh keys has made it work very organically our development processes because it is much easier to just pip install/freeze our relatively frequently updated private dependencies. And granted our team is quite small but compared to predownloading the dep before each build, the 1-time cost of an additional build tool has been very low for us. Though I'd certainly agree that I should probably be doing it this way for my CI/CD, because of the security concerns and it removes the build-time git/dockito/etc dependencies
way better, the first version was just random crap. this will be much harder to filter out I think.
You can wrap the arguments to print in parens with 2.x and it doesn't change anything. They also already said putting quotes around the input string made it work.
I wrote a programming language. FusionScript. Doesn't use Python tho. I also wrote a blog and a system monitor.
Add a `try` ... `except` block to catch the error. def Add_stuff_to_Csv(File): with open(filename ) as file: data = csv.reader(file, delimiter = ',' ) try: data_full.extend(data) except UnicodeDecodeError as e: print("Error reading {}: {}".format(file, e)) If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Jupyter sounds perfect for this. 
stop using the word "left" for them pls, thx also this is r/python not r/politics
This is an interesting read, definitely the ASCII value representation was hard to get at first glance before reading your explanation.
How reliable is the OCR? If you're given "43###17", will that only match "4398917", or could it be "4389811" instead?
do you have a link to your code?
Variable assignment in Python is like this: `variable_name = function_call('parameter 1', 'parameter 2', 3, etc='etc')` so in your instance it would look like this: agreement_id = soup.find('input', {'name': 'agreement_id'})['value']) payload = { 'agreement_id': agreement_id, ... } This must be someone else's code you're working on because it's hard to believe you got this far without knowing about variable assignment. I would really suggest taking a break from hacking away at your script to run through a few basic Python tutorials. It will pay off x10 in reducing how many times you need to ask for help. Feel free to message me with any other questions you have. I enjoy helping newbies but only ones that try to educate themselves and give it their best shot before asking. People who want a full solution provided for them or want me to do their homework without giving it a go first get ignored.
BAD! Install it in a virtual environment. Try to avoid poisoning the system python where possible.
Looking back on it now, the code sucks. But at the time it was quite a personal accomplishment. But old code always looks inferior. :)
Do you ever avoid not believing that the media weren't never misrepresenting what wasn't left out of blocked bans of anti-muslim legislation?
I'm going to try to update youtube-dl to support podomatic. First time contributing to open source, so wish me luck!
demod /u/BioGeek 
That looks promising! I'll take a look.
Google was written in Python. They still use a lot of Python. Even for large websites, you gotta do database queries, so the slow part is going to be hyper optimized. Yes you can do it.
Firstly, you've posted in the wrong subreddit. As the sidebar says, you should post in /r/learnpython. You will get a better response there. Secondly, you should format your code so it is readable - the sidebar again. If we have to reformat your code before testing it we may introduce more problems. Before you repost in /r/learnpython look at the errors you get when you run your code. The error message tells you something about what you are doing wrong in the "i*10" part. You should also post your error message (formatted) with your question. See you on /r/learnpython.
"o" from the second letter of bool: True.__class__.__name__[1] I had no idea this was possible. This kind of reminds me of a solution I saw on codewars that was humorously long.
Checkout Superset: https://github.com/airbnb/superset I have not used it but it looks "fancy" Or maybe JupyterHub will do? https://github.com/jupyterhub/jupyterhub
Generally unless you are doing heavy number crunching the speed difference between Python and say C++ or other compiled languages is minimal.
I meant Python, obviously. 
I'll have to check this out! What about 80 bit floats (long double)? It has to be converted to 64 bits back in python land, but the intermediate values could be higher precision.
Your code is confusing regarding the second part of the loop `IF(B2&lt;15,C1,0)`...um what? Is that an offset? What happens in the next cell? What even is C1? What cells is that even in? Why not just say signal[i] or label the columns A, B, and C. What happens in the first cell? What I think your table actually does is this...except you don't test the edge cases. i = np.where((bars &gt; 10) &amp; (bars &lt; 15)) signal = np.zeros(bars.shape) signal[i] = 1 
This script just puts python in your path and then opens cmd, right? So type python and use the python shell. Are you expecting the windows command prompt to recognize python commands? 
You just want to find hits where # is a wild card? Edit distance is not the right way. You could compile a regex just by replacing every # with \d. Then compile all your known keys into a big space delimited string.
It does give a reliability note of 0 to 255. You prefix a threshold and everything lower than it puts a # (unfortunately or foolishly). It does some mistakes yes with the current threshold but not much...
Pandas is a game changer, I'd be curious to see if more people are switching from R to Pandas.
I've been working on a static site generator recently and needed something similar. The way I do it is I embed a few lines of JavaScript at the bottom of the page that connect it to a Python web server, and I get the URL from that using `window.location.href` in the JavaScript and send it back to the WebSocket server.
I've built sites in both Python with Flask and with PHP. In benchmarks, PHP (especially 7) is faster but there is more to performance than time. The real question is whether your backend calls are the bottleneck. Assuming your backend algorithms are themselves well written and performant such that you really are seeing language differences, you can ask yourself if there's anything you can do on the frontend to mask the backend call time. Animations are one way to both add visual polish while eating time that would otherwise have left the user noticing that they are waiting, as an example.
Indent code with 4 space before each line of code, with a blank line before &amp; after the entire code block. Please edit your post See also /r/learnpython
I've been working on some Ansible modules to interact with pasword-store.org. 
I got an email saying you made the payment. 7 days later than promised. I am at NZ now, permanently. I can't access that money. Thanks but no thanks. Fucking asshole.
Alright. Thanks! If any case if I'd rather just install the required libraries manually, is there any way I can do that with guarantee that it will be successful?
That's not always true. This; try: myvalue = mydict[mykey] except KeyError: pass # swallow the error is faster than this; if mykey in mydict.keys(): myvalue = mydict[mykey] even though the latter is clearly the most correct from a functional standpoint.
Ahh makes sense. Hadn't considered that.
You are handling the error though. In both cases myval retaining its prior value is the expected behaviour. That's totally different than returning string that has the error message in it. Then the user has to know to do val = add2(var) if isinstance(val,int): Use val else: print val Otherwise they might try to use val as an int but it's a string and they get some weird error later in their code, and they have to hunt down the cause.
Excellent news!
Or even better use miniconda to generate a Python 3.6 environment.
Just read it ror free on thier site.or watch the youtube cource
Thank you too for a very good book! 
Crack open your book and do the homework. &gt; the result stored in a variable named product I mean you didn't even explain the homework problem, so I can't do it for you without more information. You have 4 numbers and you're supposed to multiply each by 10. I can overwrite everything, but that's seems odd. You can't stuff 4 numbers into 1 slot, without defining what happens. &gt; I'm pretty stuck here. On what?
Thanks for your response. Where would I put that ? 
I really appreciated the effort by dropbox and I hope community to take over the project.
[removed]
The answer is yes. However there's more technical overhead when it comes to Python web development. You need to know more about web services and apps to get something up and running compared to PHP. However that extra technical knowledge will force you to be a better, more switched on web developer than your average PHP guy. Good time to start reading up on WSGI https://www.fullstackpython.com/wsgi-servers.html For a more macro/high level look, you can checkout these Python web framework benchmarks http://klen.github.io/py-frameworks-bench/
I'm not familiar with vaex but the raison-de-etre of NumExpr is multi-threading so the problem there was likely not NumExpr, unless you have some unusual chipset? You cannot have more than one NumExpr module running at the same time per Python process. Is that what you mean? If you want to use it in a hybrid multi-processing/multi-threaded mode like OpenMPI then that's something that should work (if it doesn't it's a bug). I've looked a bit at making a second sister module where the Python parts are Cython. That's probably the most straight-forward way that might lead to a direct C-interface. EDIT: actually, let me walk that back a bit. Currently the C-API NumExpr object is not pickleable, so it won't work within the `multiprocessing` framework. It should work within `subprocess` but that hasn't been added to the testing module yet. I do plan to add the ability to pickle the object, see for example (line 910 at the bottom): https://github.com/pydata/numexpr/blob/numexpr-3.0/numexpr3/ne3compiler.py NumExpr 2 has a `threading.Lock()` semaphore to stop you from running multiple expressions at the same time (because the C backend has a shared global state). I'm not sure when that was added, but perhaps that was the source of your threading problems? NE3 doesn't have that `threading.Lock()` so I will add it shortly.
The non-ISO standard data types are a little tricky because they change platform-to-platform. As long as you keep your data in a NumPy array you won't lose any precision. It's just that some platforms have a 80 bit long double, some a 96 bit, some a 128 bit... NumExpr3 does not actually allow non-NumPy data types because it doesn't allow anything but a NumPy array as a container. It's certainly possible to add long double and long complex, but I need to get the continuous integration working in a robust way first. 
If `bars &lt; 10`, `signal = 0`. If `bars &gt;= 15`, `signal = 1`. If `10 &lt;= bars &lt; 15`, `signal` is the same as it was for the previous item (this is where `C1` comes from). Your code just sets `10 &lt;= bars &lt; 15` to 1 and the rest to 0. /u/Enderthe3rd, you want to look at [`pandas.DataFrame.shift`](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.shift.html?highlight=shift#pandas.DataFrame.shift). EDIT: Replace `bars` with `price` in the above.
Making "required" a package for easy argument validation. https://github.com/shezadkhan137/required
Early return is great, and often the only way to program with python immutably
&gt; What you are describing is essentially NumPy. I see that my question wasn't clear. I'm just wondering about the syntax. It looks like you are parsing strings which eventually get compiled. But strings of course don't have syntax-highlighting, and you have to reparse them. Using a thin wrapper (similar to the code above), you'd get the benefits of creating your expressions in clean-looking normal python, instead of strings. The python interpreter effectively parses things for you. Then those expressions would still get compiled down to C in the backend, just as now. As in, you replace something like: neObj = NumExp('x**2 + 1') ...with.... x=Fun('x') neObj = NumExp(x**2+1) ...which will work as is with the `Fun` class above and `NumExpr3`. Of course that converts the python expression to a string, which you re-parse and then compile to C. You can also cut out the "string" middle man, and use something like `Fun` to produce an AST, eliminating the reparse step. This approach is common in the functioning programming world, although I'm not sure there is a name for the technique. SymPy does a similar thing. Just something you might want to look into further.
Sorry, you are right. I figured out the problem. The problem was one figure in the book which indicates that a Windows command line would open containg also the line ****Programming in Python**** I guess it is an error, because I noticed other errors in this book. So I am not lucky with the choice of book:-)! Thank you very much for your reply. Dimitris
I've heard of SymPy before but never used it. It might be possible to have the expression pre-compiled in the .pyc file in the way you suggest. I'll have to think about it. As it is, the `ast` module and the function `compile()` are closely related. Sometimes `compile()` is just a wrapper for `ast`. I suspect I would run into trouble with with the limited CPython byte-code space, and that pickling wisdom similar to FFTW is a better long-term solution. A point against is that most people use NumExpr as a simple way to accelerate NumPy. You take your NumPy expression, you knock off all the `np.` dereferences, and you enclose it in quotations and you're done. So yes the production code doesn't have syntax highlighting, but the prototype did. I took a look at the SymPy documentation. It's very interesting how they approach "Structural Details of Code Generation with Sympy." But I can't find a benchmark anywhere.
https://github.com/s4z/plumd/ - it's similar to python-diamond and collects system + service metrics, sends them to graphite. I'm working on adding support for prometheus.
&gt; as it has async await and thus better concurrency support No it really isn't. It's basically Twisted reinvented into stdlib. But I still vote for Py3k though. Python 2.x is a dead pool. We need to move on somehow.
I prefer "FM" as a response here.
It will probably take a little while to write so 3.6 will be the most popular 3x version by then 
Thanks 
Go die. Clients who want their product on the very same day don't delay payment by a week. But that's proper clients. You are the scum that makes freelancing a pain. It is funny that you reply so soon now but couldn't be bothered to do so when the payment was pending. I don't have access to the money. That means I can't send it back you idiot. No wonder you people voted that moron into office. 
Ahh... bars15 = (15 &lt; bars[1:]) isignal = np..where((10 &lt;= bars) &amp; (15 &lt; bars)) signal = np.zeros(bars.size) signal[isignal] = 1 signal[~bars15] = signal[1;] I think thats right. That's a tricky one. It could probably be simplified more.
There're many typos in that piece of code. Given OP is using Pandas, a solution that exploits that is probably best.
Seems like the challenges in peer to peer are discovery and udp hole punching (or some other tactic). Does this library do either of those? Or do you have to have the address of an open port on the other peer's network?
I wrote it on my phone...its close enough. The OP also knows numpy. Its trivial to translate it. Also, both pandas and numpy use the same underlying data structures, so it does not matter if I code it in numpy or pandas.
I plan to write an Earley parser from scratch for [Lark](https://github.com/erezsh/Lark), and see if I can make improvements on the basic algorithm. Or at the very least, produce readable code and that's easy to extend.
Just to be clear, do you accept applications from non-U.S. citizens?
hi is there a full working sample/demo in the download ? I just want to get a quick idea of how it looks and if I can use it for my case - few users, simple GUI with listbox/dropdowns, check boxes.
&gt; Also `mykey in dict`, it's nonsensical to extract the keys before checking for presence. Except it's more readable. &gt; Alternatively, if you have lots of keys you can use a set intersection between the possible keys and the dict In Python 2 you have to convert `set(mydict.keys())` and whatever container you're using to store your keys in to set too, thanks to the fact that dictionaries were around before sets and `mydict.keys()` and `mydict.values()` did not return sets until Python 3. Yes I was using Python 2. Bite me.
Readability trumps single exit point.
&gt; Except it's more readable. No, it is not. It is significantly more expensive *and* less readable. &gt; In Python 2 you have to convert set(mydict.keys()) You still don't need to explicitly extract the keys. And no you don't, you already have a set of possible targets, `set.intersection` can be given an arbitrary iterable as parameter(s). &gt; whatever container you're using to store your keys in to set too That's the only set you need, and it's probably a static set literal. &gt; `mydict.values()` did not return sets until Python 3. `dict.values()` still does not return a set in Python 3, because that would make no sense. And technically `mydict.keys()` doesn't return a set either, it's a set-like view.
Before I asked you I installed that "next" app but couldn't get past the prompt where it says "can't find traktor collection..." or some crap, so no go there (also that traktor app - they seem to be for special purpose that I'm clueless about) Your mentioning of Flask - Now I'm confused...because I thought pywebview is a desktop implementation of micro web framework. I have a Flask app running. I'm looking at pywebview because I want a smallish GUI app for few users.
yes and it is not listing PyQt5 but i can run the script 
&gt; No, it is not. It is significantly more expensive and less readable. "Explicit is better than implicit" &gt; You still don't need to explicitly extract the keys. And no you don't, you already have a set of possible targets, `set.intersection` can be given an arbitrary iterable as parameter(s). False; &gt;&gt;&gt; set.intersection(mydict, mylist) Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; TypeError: descriptor 'intersection' requires a 'set' object but received a 'dict' &gt; That's the only set you need, and it's probably a static set literal. That's a pretty big assumption, in my case the keys weren't static. &gt; `dict.values()` still does not return a set in Python 3 You're right it doesn't make sense, I misspoke. &gt; And technically mydict.keys() still doesn't return a set, it's a set-like view. In Python if it quacks like a duck for all intents and purposes it is a duck. (not a witch) 
I am working on a discovery system (see bootstrap issue on github), but I'm not planning to do NAT busting anytime soon. In the end my library can currently route around such things as long as at least one node isn't behind a NAT. Eventually I'd like to improve that, but for now I don't know how, and have other more pressing issues.
v3!
A major reason to start with 3.6, besides it being the current stable release, is f-strings.
Python 2 support will be terminated in 2020, why work on something that will have its life support cut in less than 3 years? 
Yeah, you have to have Traktor (djing software) in order to use Next. Pywebview is a wrapper around your web application. To have a fully working UI in addition to pywebview, you got to have html based front end and a server middleware like Flask. 
There are too many of these bullshit services. Please, *please* acknowledge that you are at least aware that these tools do not guarantee good code. PEP 8 is a collection of *guide lines* that rely on human thought. They are not rules to be enforced by an automated tool. * [A Foolish Consistency is the Hobgoblin of Little Minds](https://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds) ‚Äì Literally the intro of PEP 8 * [Please rename this tool](https://github.com/PyCQA/pycodestyle/issues/466) ‚Äì Guido van Rossum on pycodestyle, a tool formerly named pep8 * [Beyond PEP 8](https://www.youtube.com/watch?v=wf-BqAjZb8M) ‚Äì Raymond Hattinger at PyCon 2015 PEP 8 is awesome and important, everyone should read it and adhere to it, everybody should hold it dear and commit it to muscle memory. But it should not be rigorously enforced and it should not be automated.
In my experience these tools often tend to be configured way too strictly for the sake of appearing "complete". I agree that checking for spaces around operators is fine, but they never stop there. Default configurations include many rules that are usually *good advice* but can just as often have very valid exceptions. Yet it leaves contributers only one click from automating those away. From the readme: &gt; Write `@pep8speaks pep8ify` in a review summary and it will create a Pull Request with changes suggested by `autopep8` against the branch of the author of the PR. `autopep8` fixes most of the errors reported by `pycodestyle`. Now you will say "well those are just suggestions" but those suggestions are either going to be accepted without proper inspection or will cause people to lose focus on more important issues (watch Raymond Hettinger's talk, it's really good). Maybe `pep8speaks` doesn't deserve my opposition. I haven't tried it myself so I don't know exactly how naggy it is. A single out-of-the-way message summarizing *potential* issues will probably be useful especially for new contributors to a project. However my experience with various code style checkers has been that they light up like a flaming christmas tree if you violate even the most esoteric guide line the author considers important. In my opinion Python as a language already forces you in the right direction. Spaces around operators and consistent indentation are really the only things left. I would never write JavaScript without a linter (including git hook) but Python lints itself quite well enough.
Did you submit it to the mailing list? 
I'm so excited for 5th edition. Advantage and disadvantage on type checks! Bounded accuracy of comparisons! New subclasses and multiclassing rules! And the return of open licensing. We're still talking about dungeons and dragons, right?
Floats have a limit to the amount of precision they can store. In the second example, subtracting 1 is too small to be recorded. This isn't python specific, this is a property of floats in all programming languages. Imagine if you were programming a cash register, and you needed to subtract $0.001. Since the register does not show anything smaller than cents, you can't. If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. 
There are a lot of things to say about that: 1. Your comment really only applies to the period in time after the book is released and before PyPy supports 3.6. That time period may not even exist. 2. I think anyone who is advanced enough with Python that they're worried about PyPy can handle translating f-strings to .format(). 3. Even if supporting PyPy at Python 3.5 is a concern, PyPy is not significant enough to make all formatting examples in the book uglier when all it takes is a statement to the effect of "if you want to support Python ‚â§3.5, use .format instead of f-strings" (which will likely be in the book regardless). Edit: s/&lt;/‚â§/
Sounds cool! However... probably best to upload it as a Github "gist" or even a full project... google drive doesn't allow you to see the code first - it could do anything. Not distrusting you, but I wouldn't download executable code from an opaque, unverifiable source like this. Github, gitlab and so on are free and super easy to use, too, so I'd advise you to give them a go. They will also help you with version control as your project develops, and make it far easier to handle contributions from other people. 
Floats are approximations.
Markdown is a good choice but if you find yourself needing a more expressive markup, consider AsciiDoc. The Asciidoctor toolchain is great (Github uses it to render .adoc files). Check out [the syntax here](http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/).
The Settings panel is quite outdated and overcomplicated, the only reason it isn't formally deprecated is that we haven't settled on a schedule and a plan for a replacement. That said, it's part of Kivy core for now and we try to address issues - if you'd like to open a [Github issue](https://github.com/kivy/kivy/issues) it would be quite welcome, or I'll do it if you'd rather not. It looks like this should be relatively easy to fix or at least significantly improve, it could be a particularly good target for the current potential gsoc applicants.
As I write this, you have 53 upvotes. I just can't bring myself to give you another. (the number of significant [binary] digits in a 64-bit double, including the implicit leading 1.)
That Paperless might be exactly what I'm looking for! Thanks!
There's a system parameter `sys.float_info.epsilon` that tells you exactly when this happens. `2/epsilon` is the biggest number for which your equation `x + 1 == x` is false.
Thank you for the nice answer. I'm new to Kivy and base idea of the setting system is quite nice. At least I was able to customize some parts ans just tried to find out how to get a bound numerical setting. It's a missing widget. 
PyQt is a good option.
If you are still looking for more historical rationale behind the single return, take a look at: [Where did the notion of ‚Äúone return only‚Äù come from?](https://softwareengineering.stackexchange.com/questions/118703/where-did-the-notion-of-one-return-only-come-from).
Here's some options in a nutshell: * Tkinter: best for super fast and easy development and if you don't want to require your windows users to install extra libraries * pyGTK / PyGObject: best for native looking linux programs. You can use Glade to graphically create GUIs. * PyQT/ PySide: best for highly custom very pretty interfaces and automatic event linking. Looks native on any OS. You can use QTDesigner to graphically create GUIs. * wxPython: Alternative to tkinter for fast and easy interfaces. Has a GTK-like Glade. * Kivy: best for multi-touch and small screens - tablets and phones You may also want to ask yourself if your project is better suited for a website / webapp interface. Modules like django and flask (and many others) make it easy to interact with your python program through your browser, either locally or remotely. If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. 
[remi](https://github.com/dddomodossola/remi) is pretty awesomely quick to learn i'm partial to flask + bootstrap myself even for local apps. there's a tonne of threads on this here and in /r/learnpython 
i don't get it
The code is doing a simple test for a string representing a float, by checking if it contains a `.`. The problem is, although this will work for a lot of people in a lot of places, it isn't actually at all universal, e.g. in some places a comma is used instead. Wikipedia has [an article](https://en.wikipedia.org/wiki/Decimal_mark) about this. These region-specific things are usually handled by the [locale system](https://en.wikipedia.org/wiki/Locale_(computer_software). In Python the simplest way to do this seems to be something like `import locale; output_float = locale.atof(input_string)`, which would try to read the string as a float according to the syntax given by the current locale. So, the image shows code with a bug that will make float input behave incorrectly for some people.
Your question is kind of hard to understand, can you post your code you have so far and detail where you are stuck? 
what is the best way for this with 6M records (of ICR and of dic values) ? Database queries ? How ?
 num = int(input("Enter a number: ")) for i in range(2, num): num2 = num % i if num2 == 0: print("This is a prime number.") break else: print("This is not a prime number.") This prints after every number weather its prime or not. I just want it to print once weather the number is prime or not.
Great synopsis. We use this library everyday to output results from our models for distribution. Very easy to use and works well. 
wxPython is the best. /r/learnpython.
Instead of printing 'this number is not a prime number' every time `i` isn't a factor of `num`, wait until the for loop ends, then print it only if 'this is a prime number' was never printed.
Python Essential *Reference* doesn't sound like it's aimed at beginners.
&gt; so these are 64bit floats. These are *at most* 64-bit floats. 32-bit floats can still represent ‚âà2^53 (exponent is 8 bits signed, so 2^53 exactly would be 0x9A00 0000), but would have a precision down to 1e9 or so, so you'd still see the same effect of `f+1 == f`. Of course, what's special about this case in 64-bit floats is that this is probably pretty close to the largest number in which units can't be represented. (I don't actually care to calculate it at the moment.)
I find the best slacks are the ones that are more general but have channels for specifics. For instance there is a MacAdmin slack but within it are channels for pretty much anything you want concerning macs and administration, such as #office, #munki, #sierra, #adobe, etc.
Cythons pretty great. * https://www.linkedin.com/pulse/can-python-code-beat-c-speed-alexander-pletzer * http://stackoverflow.com/questions/2697275/cython-speed-boost-vs-usability 
try /r/learnpython for more feedback
A bit more long winded than yours but how about something like this: def sieve(num): not_prime = ([]) primes = [] for n in range(2, num+1): if n not in not_prime: primes.append(n) for x in range(n*n, num+1, n): not_prime.append(x) return primes def is_prime(num): primes = sieve(num) if num in primes: print("This is a prime number.") else: print("This is not a prime number.") def main(): num = int(input("Enter a number: ")) is_prime(num) if __name__ == '__main__': main() 
Don‚Äôt apologize! This is a subtle and fascinating property of how floating point numbers work, and it‚Äôs good to have threads to refer people to. :)
Actually, it is more than that. There were changes to bytecode and how Python deals with async things. asyncio is somewhat what you are describing.
...and if you want to do symbolic manipulation of those ratios, irrational numbers, etc, use a computer algebra solver like sympy... 
Oh not debating Cython does a pretty good job. Especially over vanilla Python. It does struggle a little bit though when it comes to really high intensity codes. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Quick question for you, sometimes I would like to hire someone for very small projects, like simple programs to do simple things. Or maybe to look at some python code that I'd like to tweak. I'm a beginner in python, but a CTO of a security firm. We have the occasional need for expertise. Is this the right place for me to find that type of assistance?
Use PyCharm 
Im on Windows so I use Task Scheduler. On linux you can use cron
I asked this not too long ago, and Flask and Django were mentioned. But, as an beginner to programming in general, I've had trouble really grasping them. I get the principles and logic, but the many different .py documents are confusing and will only make complete sense if you come from a web development background (php, javascript mostly). So, if you know web stuff already, that is definitely the best path. But, I'd have to say the best udemy courses I've taken are this one from [Jose Portilla](https://www.udemy.com/complete-python-bootcamp/learn/v4/overview), and if you want to take it further, this one from [infinite skills](https://www.udemy.com/python-beyond-the-basics-object-oriented-programming/learn/v4/overview) is my favorite. As a beginner to python, the basics that you will learn from Jose's course should be enough. 
Well what is it
It does repeat. However, you don't change `walk` or `heading` instead the loop, so it always moves in one direction. Also, post questions in /r/learnpython next time.
PyGTK only gives you native looking GUIs on gnome. On Plasma (kde), PyQt is the native choice. Qt on gnome tends to work better than gtk on kde, so I would go with PyQt.
No, that's the way. Hard to tell without an actual error message. Have you followed the instructions?
Thanks! and sorry, I didn't know learnpython was there.
Yeah, the 1e16 thing is an upper bound - though in the OP (which seems to be removed), it was also mentioned that it didn't happen for 1e15 yet.
Check out coursera.org
Pytest because it's better in every way except not being in the standard library. 
Just stay with procedural for a while. You can write reuseable code without OOP and I'd suggest learning that first before diving into OOP. If you post some of your written programs/script to /r/learnpython, we can surely give you hints/advice how to improve your programming. 
what a great job! :) i might need something like this. cause i have to convert a 60000 row * 80 column excel file to sql!
haha feel free to use parts, might be a little too specific though. I can recommend openpyxl for reading excel files https://openpyxl.readthedocs.io/en/default/
Unlike the other guy, I'll address what you requested. If you don't like reading the books, then maybe other OOPS code and treat it like you're reading another language. When reading, if you don't understand, go online &amp; look it up. Udacity &amp; others code are great starting places
&gt; slack fatigue This is why I've been using Discord, even though it's for gaming and is missing some of the business features. One central account means its a lot easier to be in a bunch of different servers at once. 
If nothing else it's another avenue to possibly find people. There have been a number of short term things I've seen posted that some people pick up, you do have to be open to someone remotely doing it. The community is global
I prefer nose2 because the setup seem easier to me than pytest. It has similar advantages.
Models.py controls your data models and DB interaction. Views.py controls what information flows to which views/templates. URLs.py controls which view of presented when users visit certain URLs. These are typically the main three I edit for each individual app. Settings.py is y config file where you add apps, set your static folders, database info etc. Admin.py is where you add models to your admin interface. Forms.py for creating forms for user interaction (as opposed to admin). I think that's pretty much it. Your project will have a main app folder, and there are boilerplate examples for how to structure everything. 
Do you think this is the most efficient way to learn it though? I want to be able to actually understand what I'm doing while I'm doing it, not just seeing what the code looks like and what it seems to be doing. I feel like my gaps of understanding can be easily resolved rather by answering a few really stupid questions I have, like how exactly localhost works, what the point of using ports is and how you can "release" them so the tornado code I ran under e.g. 8888 doesn't just stay on that port forever like it does right now.
Download link is not working. Firefox 51 on Ubuntu. 
[removed]
OP specifically mentioned that he/she is studying for a PhD in climate science. That happens to be something I have a lot of personal experience with! What it means for her is that she is going to have to deal with installing and using toolkits which lean on compiled libraries like HDF5, NetCDF, proj.4, geos, and more. A never-ending source of difficulty in the Python world is dealing with libraries whch rely on these compiled dependencies - links just tend to break, there's incompatibility between versions, and it's just a pain to deal with. Homebrew solves some, but absolutely not all of these dependency issues. On the other hand, conda is absolutely fantastic at doing this, since it can take care of dependencies between different package versions *and* whatever compiled libraries they require. Best of all, those compiled libraries are sequestered from your normal environment. Homebrew works ok for all of this, but in my experience, conda has provided far fewer issues and friction points. Your point about wanting something that isn't in Anaconda is simply not true; again, the magic of Anaconda is the conda package manager. With that and the conda-forge channel, it's unlikely that OP will be unable to find a reliable version of a library that interoperates with her other packages. And if she's going to be doing more sophisticated development, then it's a moot point because she's likely going to be compiling those libraries by hand, anyways.
&gt; it‚Äôs called Bash for a reason Yeah, and it has nothing to do with hammers. Bash is for Bourne Again SHell, aka a replacement for the shell of the time -- which was written by Stephen Bourne and hence known as Bourne Shell (as opposed to the original shell by Ken Thmopson). Bash was developed for the GNU project, whose people were pretty big on acronyms, puns and jokes. /end of pedantry
I already looked into that, and the downside of this is its per-directory, not per-file. In other words, I can't selectively sync the files themselves, as in upload a file to Dropbox and then remove the sync for my local machine. Google Drive has the same limitation. If i have a webapp that uploads to S3 and stores various attributes of that file in a database, then that URL is accessible without the need for keeping the files on my computer. I agree with you, this would be the simplest solution, if it could work. 
There were several hundred folders within folders (and multiple file formats) - otherwise I probably wouldn't have been asked to do it! 
Not sure why it isn't working, but here is the direct link - https://hashedin.com/training/DesigningModulesInPython-v1.0.pdf Thanks for letting me know!
I would recommend the open MIT "Introduction to Programming Using Python" course, in tandem with the online Python documentation.
Neither of these seem to be a consideration where I work.
I tried to get into coding with edX MIT 6.00.1 and it was hard. You can take it and also I recommend you to take Udacity's intro to cs that is for free. 
Not sure what the point of this is. Docker is straight forward as it is. You don't need a Python wrapper/API for everything 
I definitely agree with everyone's comments about mit's courses or udemy personally I would not recommend code academy as it seems to almost hold your hand too much which causes you to not really learn it's good maybe as a refresher for someone who already knows how to code but the other options will be more in depth and you will learn more
Cool. Did not realize you could enter a namespace like that programatically--using a Python "with" statement is even cooler.
Be aware that long running requests (like a large file upload) can quickly exhaust all of your app server processes when there are multiple concurrent uploads. I like to offload large uploads to a separate application to avoid DoSing my app. I've used https://www.filestack.com/ in the past with good results.
Thanks to 5erif (for some reason he deleted his answer) I can now run a script in different version using cmd :#! /usr/bin/python 3.6-32 #! /usr/bin/python 3.6-64 I also found another way using notepad++ and the pluggin pynpp (in option, you only need to set the right python folder before running your script (with a shortcut if you want))
On my Windows setup pip is installed in "C:\Program Files\Python36\Scripts". Take your pick from pip.exe, pip3.exe, pip3.6.exe or pipwin.exe.
This is internal software with requirements driven by the company. 
Places like codacademy are a great place to see how code works at its simplest level. However as others have pointed out, it's the equivalent of window shopping. The other alternatives presented have much longer legs and will serve you better in the long run if you get serious... But if codacademy is what gets you in the door, go for it! It's what got my interest reignited after 20 years away from programming.
On the face of it it seems pretty useful to be able to orchestrate docker containers with Python directly rather than basically calling CLI commands from within Python, or worse, mixing shell scripts and Python scripts in a job.
Good read. I shared a lot of the same frustrations while working on a project last week, especially example one, I really don't like having to do that either. I recently had the chance to learn a bit about `golang` and I wanted to pipe up about their idiomatic approach to this because it really appealed to me. Basically, most function signatures return two fields (a 2 tuple) with an error field at index[1], if `err` is not nill, short-circuit right there and return. example: func loadPage(title string) (*Page, error) { filename := title + ".txt" body, err := ioutil.ReadFile(filename) if err != nil { return nil, err } return &amp;Page{Title: title, Body: body}, nil } I'd be interested to hear your thoughts on this approach. Again thanks for the good read. Cheers.
Really useful read, probably the best python design book I've read yet. Not great for beginners though, you should understand basic OO implementation and design before reading. Head's up - there are a few typo's in the code snippets which may cause some confusion. 
I am not very font of Django, could you explain why I would use that?
Oh wow, I totally read over that... Thank you!
thanks chief
any sdist without tests is abuse to os package maintainers, that need to test if the installed build works
Comments, suggestions and pull requests are welcome :D
Docker seems really neat but I haven't personally had a use for it. I've never had a project big enough that I couldn't run it all easily on 1 machine. To anyone that's used docker, what are/were you using it for? Does it have advantages for small/medium projects? **edit**: good discussion on it [here](https://www.reddit.com/r/docker/comments/3yo0e8/is_there_any_advantage_to_using_docker_for/) from a year ago, but I'd still like to here what you (/r/python) are doing with it
You asked. If you don't want a suggestion why would you ask? DRF is great.
I needed to profile some function calls in a production setting, so I wrote this module to record counts of function calls, as well as their execution times. I'm hoping that you might find it useful! I'm also looking for some feedback: for example, whether there are any useful features that I could add. Maybe I could add a warning if function calls start taking too much time? I am interested in your opinions.
I know. He makes good points.
an test in a sdist is either part of the package -&gt; wont collide not part of the installed set -&gt; wont collide a bdist wont ship tests unless they are part of the package -&gt; wont collide so what the heck are you talking about
I guess read more and learn how to make it click? If you are saying it doesn't click nothing I can say will change that. Read a book on it.
Beautiful soup was hard to learn for Mr also, but eventually it just clicked and now it's easy. Keep at it 
I really liked seeing the attribute access priority parts laid out explictly.
Just finished getting my company's main application from py26/27 only, all the way up to 3.4 compatible. Can't wait for when qa finishes in a week, and can merge into main branch. Will be so happy to drop python 2, been waiting years for this :) 
At work (small company) we use it to standardize deploys. Aside from that, I think it has tremendous value in research. Makes it really easy to replicate (or attempt to replicate) your results when you send not just your code but also the machine you ran it on.
Thanks for your input, I'll consider first explaining the motivating example and then describing the actual mechanisms.
Simple: reproducibility. I'm working on Project X on my laptop running Arch Linux. Everything's fine. I hand the code to my coworker who is running a Mac and they have a different version of a library which breaks shit. Or, I have PostgreSQL 9.6 and they have 9.2...Or 8.0 and psycopg doesn't work the same with the different versions. (I've had this precise issue across MongoDB versions and drivers which break forward/backward compatibility). Nevermind if I have another coworker working‚Äã off a Windows box. ...But if I containerize the app, use docker-compose to link pinned versions of other services, and ship the Dockerfile and Compose YAML with the code, everyone is using the exact same environment (Docker for Windows and Mac use VMs to run a tiny Linux distro and some voodoo to expose ports from that VM on localhost/loopback). While you can do this with Vagrant as well, the start time for a Vagrant Box is usually much slower than spinning up a container. Combine all of this with the ability to package your app in the same container it was developed in and then when you deploy to stage, UAT, or production then you KNOW everything will work the same (provided they're talking to a DB/ancillary services which are the same version you've pinned your dev containers to). Getting rid of "works on my machine" is worth its weight in gold.
http://pylonsproject.org/
I've used Flask and just started with Falcon. I like Falcon more now. It's great for small and simple applications, but probably a little to minimal for more complex stuff. It's really easy to learn and well documented.
It doesn't look a day older than 2,900
[removed]
no matter what the other's answer,the truth is,most of the web are build in java.and if you search the job for web develop,most are java\.NET\PHP. and if you search the benchmark of web frame,node.js\java\php webframe are much much faster than python. I can explain something like the bottleneck of a web is database,the development speed is much import than the performance,the time of Engineer is much expensive than the hardware(btw,the java spring development speed is not slow than django),etc. but,remember this:Python is the slowest one in all the web development language. so,there is no short answer.It depends on what web site you want to develop.
How long did it take you to accomplish this?
I'm still struggling with understanding views.py and forms.py...not for retrieving/displaying data, but for updating it. Are there any good tutorials you would recommend, beyond the django documentation? 
It's good for orchestrating bigger interactions. docker-compose and ng-maestro are both written in Python and are good solutions for managing docker environments (compose locally and maestro for deployments). As much as I love bash, there are some things I wouldn't want to do with it. 
Omg
Thanks!
Despite being in the same boat as you, I'll take a crack at it. I'd you need an API that's essentially your database as a service, DRF will handle that. You can, of course, handle individual actions more precisely but the core of it is set up some queryset and add, read, delete or update it. It's also batteries included, so if you don't want to think about things like picking a serialization lib, handling content negotiation, setting up a permission system, etc, then it's right up your alley too. Though, just like Django, quite a bit of it is very heavy handed. Take the class level configuration. It's actually pretty useful except for the fact it's all class based and the view class you use creates the instances of your configuration options, so if you need to pass arguments to them (say checking if a user has a specific permission) you need to either provide a 0 argument factory or implement a 0 argument `__call__` that returns self, both of which are counterintuitive. I choose the zero argument call as it then becomes impossible to omit. Why does it come with a session handler, sessions aren't RESTful at all. The action map for viewsets is weird. It maps HTTP methods to names like retrieve, partial_update, create, etc. You don't *have* to use the viewset class but it's still weird that it does this. The serializers that come with DRF are a far cry from what I'm used to with marshmallow. You have to create a new instance of the serializer every time you want to parse or dump something. And don't forget to call `is_valid` otherwise it's useless. Whereas with marshmallow there are load and dump methods. It's also cumbersome to extend. I struggled to extend content negotiation (I don't recall specifics, it was about a year ago). Edit: fix grammar/spelling 
Somebody().call(burnWard)
The move is way easier than a lot think, besides maybe some bytearray and unicode issues. The only thing that drives me nuts is seeing lots of python devs still using print as a statement... I really wish people would update their tutorials and stop showing that. Everyone I know that starts learning python today starts with prints as statements and I know they're getting it from online examples and tutorials.
Why should it see 100% adoption when last I heard Python 1.5 was still being used in production?
I recommend using pillow.
No. Even in Python 3, you should use a dictionary mapping to method calls or some other method. There is no switch. :)
What does this do that cProfile does not?
With pypy, python is significantly faster for websites than php. Just sayin' 
I'm a beginner. Can you tell me more about the print as a statement or why it's bad?
print as a statement (python2 compatible): print 'foo' as a function (python2 and python3 compatible): print('foo') It's not terrible, it's just a really easy way to write python code that can easily run in python 3. Lots of code is already perfectly compatible with 3.x if beginners avoid this. What bugs me is that people learning python *today* should be learning something that's going to be compatible now and in the future. Python3 is a little over 8 years old now, and the print as a function thing came about before it. Essentially it's been deprecated for a decade. Beginners shouldn't be learning deprecated decade old ways of doing things. It seems like every beginner I know that's had me look over their python code always uses print as a statement and have no idea about it. 
It's an entertaining anniversary, nothing more. 
Python 2 print "Test string" Python 3 print("Test string") Since Python 2.6 you can import from __future__ import print_function that basically works like Py3's print function. Just so everything's clear, in a Python 2 REPL : &gt;&gt;&gt; print("Test", "again") ('Test', 'again') &gt;&gt;&gt; from __future__ import print_function &gt;&gt;&gt; print("Test", "again") Test again You can see it gets interpreted differently. First time it's interpreted as a print statement applied on a tuple containing two strings, while the second time (after import) it actually calls a print function with two strings as arguments.
I don't think we'll ever see widespread adoption of Python 3 for even another 3000 days from now.
As a new year resolution, I'm switching all my scripts and programs to py3. All by hand, no 2to3 for me. At first it was a pain to get all the little details ("what the fuck it means that *sort* needs a key argument?? Just fucking sort it!") but it gets easier the more you do it. Also, it lets you both be amazed and cringe over your own code from 15+ years ago, and fix horrendous dormient bugs.
wxPython isn't released for Python 3.x. Not a great choice.
_BUT BUT MUH TURING COMPLETENESS_
cProfile is mostly for profiling test cases; it does not provide on-the-fly profiling while running your program in production. For example, suppose you're running a Python backend on a server, and you're noticing performance issues at times, but your codebase is so large that you're not sure where the performance issues are originating. This tool will help you find the functions calls that are taking too long. 
For around 80k loc, took about 3 days to get it running and pass UTs, and one more spent fixing bits found by QA that tests missed (always need more coverage. Sigh.). Mind you, already had some experienc, getting dependancy libs up to snuff, so wasn't going in blind. After fixing imports (using the "future" project plus some internal compat helpers), main bug bears were: fixing zip/map/filter/range calls to handle builtin changing to iterators, and bytes[idx] returning an int not a single-len byte string. That last one was hard to regex search for :( Unicode/bytes issues weren't actually that bad. Followed Django and used a set of want_(unicode|str|bytes) helper functions. 
So I'll have to manually define a CFUNCTYPES for every library export I would like to run? When I was running 32-bit Py and library it took everything perfectly and assumed 32-bit returns. Why doesn't 64-bit expect 64-bit returns? See [above](https://www.reddit.com/r/Python/comments/5v33e4/ctypes_incorrectly_guessing_type_sizes_of_64bit/ddyxh8z/) for my efforts, I specifically could not get functions to return 64-bit values (not even if I casted after the fact), I had to define a completely undocumented class member that I found looking through source code.
I think just commenting my opinion is probably enough of a statement... which I've only now noticed itself is pretty unpopular :P oh well.
I am doing a PhD in digital signal processing. We also need libraries like HDF5, fftw3, libsoundfile, CUDA, write our own C bindings etc. One or two of our colleagues are using Anaconda, but for the majority of us Anaconda never worked the way we wanted it, while homebrew and pip did. I never said it is the perfect solution for everyone, but it is the best for me. That's why I suggested it. I hope you can see that your suggestion can only be the same: It is not the perfect solution for everyone, but is the best for you. However that doesn't render my suggestion invalid.
In case of django I just read the official Tutorial and found that rather useful. I did know a little about web-programming beforehand though.
That does make more sense. I guess I was just caught up coming from the *assumed* "just works out of the box" mentality *** that I had with the 32-bit version, and not having to manually define my types. But at least I won't have any unexpected gotchas like this, thank you for your help
Could you please provide a link to that course? I googled, but I couldn't find anything, just a book on Amazon.
Wow, Not a lot of progress in 3000 days.
/r/learnpython
What's idiomatic in one language can be strongly discouraged in another. In Python it's better to raise exceptions, because they are cheap, they allow the caller to escalate the error handling to the upper level _without writing a single line of code_, and they allow to transfer knowledge about what happened. Considering go's approach, you will either encode ints into `err` and have a giant list of possible errors (like one for WinAPI) or encode some sort of explanation what happened. Don't you see what's happening? You're re-implementing exceptions! But of course, you never had a chance to implement tracebacks and your errors are useless.
&gt; Can you tell me more about the print as a statement or why it's bad? It's not *bad* but 1. it's harder to compose, `print` as a statement can't be called from a lambda (only allow expressions) and can't be passed in as a trivial callable 2. it has limited extensibility and quickly becomes hard to read/understand. A simple print of a bunch of items is fine, but in Python 2 if you want to redirect `print` to a file/stream the first parameter becomes `&gt;&gt;stream_var` (I think, I didn't check and I usually get it wrong) and if you want to suppress the final newline, you add a dangling comma, so printing to stderr without a final newline becomes print &gt;&gt;sys.stderr, "a thing", and if you want the output to be flushed immediately (in case the stream is buffered or line-buffered) you need a second separate statement sys.stderr.flush() With Python 3's print as a function, the objects to print are simple positional arguments and "options" can be provided with keyword arguments which means they are much more self-descriptive and you can have as many of them as necessary, thus `&gt;&gt;foo` becomes `file=foo` and a dangling comma becomes `end=''`, furthermore they could add customisable separator (between each item, a space by default) and a request to flush, so the previous two lines become: print("a thing", file=sys.stderr, end="", flush=True) No special syntax to remember and (I think) much more readable. So all in all, I think the function version is way superior. It's a habit to take coming from Python 2, but it seems better on every point I can think of. 
&gt; I really wish people would update their tutorials and stop showing that. Yea...the problem is that those were written a long time ago and that the that code is often written without actually being runnable. That makes it really easy to get out of date. I've switched most of my tutorials to Jupyter for that reason.
Python isn't be turning complete because it doesn't support objects
It's probably not proper usage, but I basically installed ROS (robot operating system) in one container and used it to run everything for my masters project. That way, I could use the same environment in multiple places, and handing over the project is easier too. From what I've seen, it's probably more "correct" to have ROS in one, python in the other, jupyter in a third etc. But I didn't have enough time to experiment and learn.
With the new docker-py API, has anyone found a nice way to display to the user how far into the build process she is? I haven't found a way without dealing with TTY escape codes for printing characters at arbitrary screen positions to display the progress of each layer..
https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-9
Looks like a wrapper around a sqlite3 database (which is odd, since the README claims "NoSQL"), with an API that feels incredibly un-pythonic. What am I missing here?
Shoot, I think you're right! I looked into cProfile in more detail just now. I didn't realize you could just use it on `main` and have it profile all included functions. Well, I learned something today. 
One test won't but if you ship multiple using a standard pytest layout they will collide 
Thanks for sharing!
I somewhat agree, but are you suggesting that I downvote rather than post a comment expressing something other than support of the post? It's not like my downvote would have much effect on the ranking anyways.
Use bootstrap for simple layout?
You have .isdecima when you're checking range (4,7) instead of .isdecimal 
I'm not sure whether you should comment, but I am sure that you should downvote. Like... voting is the first step. You can vote *and* comment or you can vote only, but to comment but not vote is kinda backwards (especially in terms of effort vs payoff). That said: the reddit voting system doesn't really work nearly as well as it should, so /shrug
I somewhat dislike the voting system and what it represents so I choose not to use it religiously. Downvoting encourages people not to comment unpopular opinions, what is up with that?
&gt; t's just a typo for OP, I saw his original post before editted and it didn't have this typo. sorry i am kinda new to reddit i was trying to make code format, thats typo. Tnx for input. 
I have added screenshot http://prntscr.com/eb2gq9 
Yeah that's a misuse of the voting system. Downvotes are supposed to be for _irrelevant_ content, not content you disagree with. If people used downvotes as intended, then the problem you mention wouldn't exist. But even I'm guilty of doing that.
Well I don't even think my comment is visible anymore since it crossed the -4 threshold. Normally I don't track my votes, but I happened to notice since we've been carrying on this thread. Downvoting seems passive aggressive at times.. I have a right to comment unpopular opinions and I will continue to post my mind - people can downvote me then.
Oh yeah sure. It's just not how reddit is intended to be used. Thanks for the (very random) chat, and have a lovely day.
Personally I would cut down on the lines in this manner. If you are just looking at validating a phone number, I would just use: try/except. This is a basic write up that I did. if len(phone) == 12 and phone[3] == "-" and phone[7] == "-": print ("Good") try: int(phone[0:3] and phone[4:7] and phone[8:12]) print("Good") except: print("Bad") You can obviously change this to work with Boolean and call/return functions. But personally, this is how I would approach it.
That's good approach but i have to use examples from the book. I want to have all exercises from the book saved as *.py But tnx man, i learned something new here 
A simple musicfinder script with the new async/asyncio. Uses the Spotify API to get any given artists' related artists and cross checks these to give you the best matches. https://github.com/drtheuns/musicfinder
I move TB daily with "split", "scp" &amp; "cron", I think you don't __NEED__ to code that much for this one.
does nobody read the bloody sidebar?? /r/learnpython 
does nobody read the bloody sidebar?? /r/learnpython 
Give this a try :) https://github.com/zalando/connexion
It's not a mentality, it was coincidence.
? What my question have to do with sidebar? Its not homework related, its my personal practice. 
Oh i see, tnx, sorry. Was frustrated about error didnt noticed that this is /python not /learn python 
 broj[i].isalnum():
Half-Life 3 confirmed?
awesome, thanks! I'm adding this to the presentation!
How can these be added? * tools for code health checking * test coverage checking
Using Celery doesn't make sense for what you're doing. Sounds like an http://xyproblem.info of some sort. If you're just crawling pages, then write some Python to save the pages to disk or DB?
[removed]
Hi Joey! Thanks for your question. You can use the Docker for this. Build Docker image on requirements stage and use custom entry point to run tests. Using Docker in CircleCI is quite simple, because it uses the environment variables for configuration too. Also building image on requirements stage allows you to use CircleCI cache. Useful links about Docker inside CircleCI: * https://circleci.com/integrations/docker/ * https://circleci.com/docs/docker/
I agree on Automate. I have the book that I actually purchased and his Udemy online course. 
Of course. Thanks for the reply.
Hi! * tools for code health checking: One of the most known tools is pylint, this tool can provide a lot of things, not only syntax check but also unused imports/variables/arguments, code duplication and many others. Add `pylint -f html OxFA &gt; $CIRCLE_ARTIFACTS/pylint.html` to your test-&gt;post section and you will have full report from pylint in "Artifacts" secion. If you don‚Äôt want to have failed build because of pylint checking, just add some command after pylint that will return 0 exit code, like: `pylint -f html OxFA &gt; $CIRCLE_ARTIFACTS/pylint.html; echo ‚Äúpylint done"` * test coverage checking You can use service https://codecov.io/ and it will be ver easy, you just need to add few list to your config file: test: post: - pip install codecov &amp;&amp; codecov --token &lt;token from codecov.io&gt; - mv coverage/* $CIRCLE_ARTIFACTS/ - rm -rf coverage/ - rm -rf coverage/
"The resulting classifier obtained a score of 0.55979 in the competition leaderboard." Does that mean it scored 55.9% accuracy? That does not sound very good. I saw somewhere that 74% of the scans in the training sample resulted in no (no cancer).
[This](https://github.com/karan/Projects)
I'm not actively using async/await, personally. However, I liked this blog post; it shows the basics in a very simple way. I'll certainly begin experimenting with it as soon as I upgrade to Python 3.6.
&gt; I am finding myself rewritting the same code for some bits of codes for different programs/scripts. So I thought I would delve into OO programing Totally wrong! OOP is not about code reusing, but about **polymorphism**, **incapsulation** and **inheritance**. Code reusing is just a result of using OOP. You're talking about modularization, so it can be implemented via structured programming, not only OOP. &gt; My issue is I don't like to read a plethora of text, could someone suggest something easy to read and understand? wikipedia, maybe
If you have to fill the form on browser you can try using selenium. To manually deny or approve text, either use django/flask for web gui or use gui framework such as pyqt/pyside. It it only text, maybe use simple python command input? 
It's an old meme, but it checks out. :P
When you say "you can run the script", do you mean you can run it with a PyCharm Run Configuration (the green play button)? Or do you mean, from a terminal command line?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
You can get the 3.6 and pyqt5 combo by installing latest anaconda. Even in anaconda, there are periodical events where the trickery to keep qt happy unwinds and suddenly it stops working. I don't want to know what it takes to get it working via pip...
Is there no way to tell celery, it's ok to accept plain/text? The problem is no matter what you do with beautifulsoup and trying to parse the HTML is there will be formatting issues that will cause serialization errors with trying to pass raw HTML to the results backend.
It's already widely adopted. Almost all maintained packages support it. Distros are shipping with it. Etc. There's a ton of legacy code. Some cases it doesn't make sense to port. Based on py3 pushback that still persists, some is people keeping heads in sand hoping future will stop arriving. Either adoption != porting every line of code.
Why does it matter if it matters?
The score is the logloss. The idea is to demonstrate an easy to do algorithm to make a first submission in less than an hour. When it was first published the algorithm will put you in the top 10% of the leaderboard
That seems like a great use case example since you had a project that involved a lot of things (ROS stuff) that you can't just pip install 
A much easier method with a pretty similar score is to predict 0.24 for every patient. Why pretend you're doing deep learning?
I think the point is more that Jenkins isn't very usable out of the box; when I tried it a couple months ago, a recommended setup step was to go through a list of several hundred plugins and enable everything I needed, which included stuff like basic Git support. Not that I use anything in the review, though - I'm a Bamboo guy. 
First the magpie developers and the spam came for the "data science" and then they came for the "deep learning". Like the pied piper, where will they lead the fools next?
Utter horse shit
It's out of place with the rest of the language, and a functional is much more malleable / useful than a statement when composing with other things.
The pyception is real
worry not, some people are lured by the negatives. Contrarian opinions and off-color jokes are more interesting/entartaining than the usual sea of circlejerk juice surrounding them.
Yes, same for me. I also enjoy using Flask-Restful. But I was looking at what other options I have. It's always good to expand your knowledge, I guess. =)
You're right, but you're literally going to have to do that with anything. The reason people like Jenkins is because they can keep its footprint small by only activating what they want. Bamboo, on the other hand, is huge because all of that stuff is built in. When I setup Jenkins I only need git support, so I don't have to use a plugin for svn or cvs. It works out of the box, but to get its real power you're going to need to configure it to what you need, just like you have to do with the other two. 
- Build a web application, such as an eCommerce sites, a paste bin, a blog, or whatever u want... using Django, flask - Build a web scraper using Scrapy, or easier, u can choose beautifulsoup4. - Practice skills from projecteuler.net, hackerrank.com, ...
I'm not aware of any `body` attribute of the Requests library, there is a `response.content` available however using that throws an error `is not JSON serializable` if you try to pass it to the results backend. I figured out a solution to the problem, decoding the response.content to utf-8 converted the response to a serializable format @task def request(url): response = requests.get(url) return response.content.decode('utf-8')
Sorry it was 'text' not 'body' Glad you figured it out!
I've been running Gitlab on a server at work and using the integrated CI and I really like it.
Check out [Codacy](https://www.codacy.com/). 
I'm pretty sure that most even slightly technical jobs involve 'working with data'. I think you would benefit from refining your gateway question to be something like 'Is your job primarily about working with data?' or, perhaps go even further with 'Is your job primarily concerned with programmatic data analysis?'. For instance, I do web development, and of course I have to work with data sometimes. However, the second page of questions didn't make much sense in that context, so I didn't complete the survey. Just a thought.
&gt; It all depends what people want from their products, I guess 100% correct. I can see people having to spend hours on a setting it up for a big project, but at that point you're not really establishing a CI paradigm, you're migrating to a different solution. 
Do you really look at curly brackets when reading code, or do you look at the indentation? I bet it's the latter, even if you don't realise it. Python makes indentation part of the syntax so there's no need for curly brackets. The syntax is designed to be human readable, not computer readable. I can see how it can feel unfamiliar, but "imprecise"? No, not really. Also, it's pretty funny to read about "power to configure even the smallest details" from someone who writes Java and JS, the two languages with heaviest, sufficiently-smart-est runtimes in the known universe. If you want low level control, try C or Rust.
I think you need to read the zen of python to understand what Guido was striving for. Yes, the syntax is different and yes whitespace means something in Python. No, that doesn't limit you at all in what you can do. In fact, it (and PEP8) promote great readability and clarity of code - despite the fact that it is different than what you already know. Don't carry over your preferences from one language and try to use them on a different one. That way lies madness. Take Python as Python and see how it works out for you. Or stick with Java if you prefer - that's acceptable as well.
The Python loop you mention for i in whatever: print(i) is actually more like this in Java for (String foo : whatever) { System.out.println(foo); } which look very similar to me.
Code in it for a week and you wont even think about it anymore.
I'm not always the contrarian, but if a sub I follow happens to post something I find pointless, of course I'm going to comment something about what I think! Thanks for the encouraging words. All the negativity is worth the chance for a positive exchange with someone for a change.
That exists in javascript too ... for (item in items){ console.log (item)}
Why avoid 2to3? I used it in an "advisory" role and never let it do automatic translation (its recommendations are often incorrect). It helps if you only work with one ["fixer"](https://docs.python.org/2/library/2to3.html#to3-fixers) at a time and treat it as a checklist.
You should post on the spyder forum. They're the experts and it will rank higher in google searches for other people 
it is not actually a spyder issue i think. same thing happens when i run python under command prompt and import pyo there.
I'd say the for loop in Python is perfectly fine. I can understand, if you don't know Python, and are used to C or Java, you might be confused, but... well that's because you haven't learnd Python. Once you do, the operation is perfectly defined and clear: it iterates over the items of any sequence (string, list, etc). That's it. There's nothing vague about it.
To expand on this: this isn't actually a special "syntax". `range` is just a builtin function which returns a lazy iterator of numbers. It can be called like `range(n)` to get numbers from 0 to `n - 1`, `range(a, b)` to get numbers from `a` to `b - 1`, or `range(a, b, c)` to get numbers from `a` to `b - 1` with a step of `c`. This lets you emulate the most common three-clause for loop patterns easily, but it's still a foreach loop on the inside.
There's Haskell, APL or even Rexx to fall back on...
&gt; Separate, dedicated server? Not really, I can run it off my laptop pretty easily, but in a production deployment environment you want it on its own server. I run it on Xen VMs. You can run it in docker as well. What I don't like with Jenkins is JAVA, because I don't like JAVA ;). Otherwise it is great free tool, easy to use.
I like Nim and I love Python, this was a pretty good writeup to get people interested and started. Honestly, the writing style was a huge turn off. I read the whole thing but started skimming towards the end. The author clearly knows their stuff, but they don't convey that very well in the non-technical points of their post. It's worth the read, you'll learn something.
&gt; buildbot This might detour some: Python 3 &gt; Python 3 support is work in progress, if your default interpreter is Python 3, then you must pass the --python=python2 option to virtualenv.
Yep, he trying to be witty too much. Its forced. But I learned some new stuff.
This is true and I don't know why I didn't even consider that since that's how we did it at my last gig. I also dislike Java as well, but that's because they made us learn it and use it for my masters. 
Clearly you forgot the "But I don't like parenthesis!!" point.
I had never considered that. 
Even more similar: for (item in items) console.log(item) (As soon as you add a second statement though, similarity falls apart. )
Phoenix is, and has been for at least two years.
&gt; move past this it's one of the reasons i did _not_ move past it.
You could [jenkins-job-builder](https://docs.openstack.org/infra/jenkins-job-builder/) to circumvent that.
&gt; why does it already assume it must end when "whatever" ends, Because it's working with things in whatever. Literally "in whatever". No more `whatever`, no more things. That is hands down the most common thing to do with lists - for each thing in a list, operate on the thing. Start at the start of whatever, end at the end. 
Have you found [Locust](http://locust.io/)? It's a Python-based load testing framework. I helped a couple guys set it up here at work last week and it's pretty slick.
I've never ever used 1.5 and I moved to 3.x years ago and never looked back.
I believe the 'future' project he's referring to is http://python-future.org/. Imagine 2to3 except it leaves in compatibility with Python 2 so you don't have to make a clean break, and someone actually cares about it working. That's python-future.
I was happy to see when Zed retracted that section of his post, even though he tried to pass it off as "lololol I troll u".
Learning more about Python will definitely help with feeling alienated, I mean, that's what learning means, understanding what the code does, and knowing how to express what you want it to do. Just keep in mind, you're learning a different programming language... don't expect it to be some sort of dialect of Java. Python is its own language. Some things might look similiar but work differently, some things might look different but work similarily.
I have both paths including scripts added to my path. However, due to our setup I have python installed at a user level and hence different paths. After you have activated your venv, what do you call to install packages? 
Gitlab-CI ... the Travis nemesis in GitLab, and free for private repos in Gitlab.com
MIT use Python for their famous Introduction to Computer Science and Programming. Of course, until recently they used Lisp, which would *not* be anyone's recommendation for a first language these days. But yes, Python is a popular first language. Whatever language you start with, it's important to explore the concepts rather than just memorise syntax. 
So like Sonarr but without the indexing and downloading and sorting? Edit to add: Don't get me wrong, awesome job making something useful and releasing it to the community. 
coeff = 0.9 start_height = 1 height = start_height while height &gt;= 10: totalheight += height height = start_height * coeff print(totalheight) the total height would = start height and the coeff, right? 
One of the best things I did for writing good PEP-8 code was to install PyCharm from JetBrains. The community edition is free. Line 19 - Use os.path.join instead of string methods to be OS independent. Instead of commenting each method. Drop this in a triple quote block, you provide documentation. You don't have to build up a list to return it. Line 54 Return as tuple. return array_index, list_names, array_description Line 61 - **BAD BAD BAD** Never shadow builtins with variable names such as list or tuple or dict. Notice how list is highlighted in Line 66? Github knows it is a keyword. With the uses of globals around, it really seems like this should be changed to use some classes. With tkinter, it is good to use tk.DISABLED instead of 'disabled'. Just a few more keystrokes, but shows that you are using a tk value. tk.W, tk.E, etc.
In my experience most CI systems support these. TravisCI runs pylint and flake8 and pydocstyle and other things on many open source projects (like home-assistant for example). At work I have Jenkins and phabricator run similar linters as well as coverage and unit tests. 
It works well for me and I have tried Python 3.4 and 3.5 in more than one Windows and version. You may need to reinstall. Look for advanced options and check the "Add Python to PATH" or "Set Python environment variables" checkbox.
coeff = float(input("Enter coefficient of restitution: ")) start_height = int(input("Enter initial height in meters: ")) height = start_height while height &gt;= 10: start_height += height height = start_height * coeff print(height) lost.....
I feel I should suggest https://landscape.io for code health checking cos I made it and it'd be remiss of me not to :-)
I think Flask is hard to go wrong with, honestly. For me, it fits my headspace better, stays out of my way, it's unopinionated (e.g. it doesn't assume I'm using a database, let alone what style of database). Are there times I find myself wishing it had "X feature" yes, but 99% of the time I find a package that's at least on par with what the Django project provides and even exceeding that. But I'm also bias, I've invested heavily into the community (I wouldn't claim to well known), I have extensions, I contribute. If you're looking for something well trusted, well used, pick Flask. But be aware of its weak points. It's not batteries included, it won't give you async, it's very resistant to change (often for the better, and adding first class support for click was a big deal). If you're looking for something new to learn, pick Falcon or hug or pyramid or twisted or aiohttp. Ultimately the "best" framework is the one your work best with. 
got it, thanks
yes,but nobody will only learn one language.so you can learn c\c#\java later.
I am currently making a blog using Django framework and also learning Python properly
I usually use the [cover plugin](http://nose.readthedocs.io/en/latest/plugins/cover.html) for nose and that does what I need.
I wish Bamboo was in this write-up. How do you guys think it compares, especially with Jenkins for a react + .net core visual studio and github shop? 
As long as they don't lose your stuff :P
Yes and no. You still need to create a job and tell it that it is using a Jenkins file. There are other things you can configure, but otherwise after that you don't need it 
Man Such quality Thank you so much for this answer!
Pandas prints tables with high legibility by default. Not sure if that's what youre going for but have a look. 
A version control hosting app like github would solve your problem.
&gt; With Python 3.6 adding type hinting, and mypy allowing you to use the hints for static type checks, I'm suddenly interested in Python as a potential language for future embedded projects. Python with type hints is not and never will be anywhere close to other statically typed languages. It might be useful feature, but fundamentally it is a dynamic language and that will not change (that's official statement). If you want to use, it s a great language, use it, but don't expect to much from mypy. &gt; What I'm wondering is if it's possible to configure a remote Linux system in a way that lets you do post-mortem debugging of Python app crashes. Depends on the place where the problem was. For python exception, you'll get far more information than you'd get from C. You'll have traceback with stack frames, local variables and whatever state you are interested in. There are tools to generate nice html from that (django and werkzeug provide that, you can see how they do it. If the problem is in C code, you'll get usual coredump.
You will be better served posting on r/learnpython. For more resources please check the sidebar.
Here you can download PyQt4.exe from this link https://sourceforge.net/projects/pyqt/files/PyQt4/PyQt-4.10/
I think you mean [git](https://git-scm.com/). [github](https://github.com) is online hosting for Git repos which would be accessible from OP's home. I agree OP, set up an internal [git](https://git-scm.com/) server.
i have to program made i just don't know how to put in my csv files into my program 
Thanks. I've used Git before with Git Hub repositories. Is it relatively easy to setup and internal Git server?
You're welcome.
[removed]
Where's the await? Also, needs a double list comprehension.
&gt;The code obviously shows that world is more similar in french and spanish, yet hello is more similar in english and spanish It's about introducing Python not about introducing foreign languages. The first two elements of both arrays aren't even put into relation programmatically. &gt;or the target retains the value of the last object it iterated, which is something id never thought of figuring out myself, they had started to seem to be local to the loop in my eyes That's what I meant by not obvious. 
Python is just "as professional" as those other languages you refer to. You can have a great career just with Python. 
Yes , all languages are great in their own respect. Python you will really enjoy and your only a noob for a little while. The sheer fact you are asking these kind of questions indicates you wont be a noob for long. Udemy has some great free courses on python for beginners.
It's not obvious to someone completely new to programming. Arrays are not something that a newcomer would intuitively understand given only their notation in Python and the for control loops probably would be a bit hard to grasp as well. Remember that Hello World is the typical program because it usually is incredibly simple to grok without knowing *any* programming at all. print("Hello world") Most people will easily understand, without being taught anything, what this will do. Some may believe it will send it to the printer, but that's not too far from the truth. Besides, that's where that function originally got its name from as that was the original output for computers.
Is there a standard way to integrate a prior with the output of a deep learning classifier as you train it?
It rocks. Disclaimer, I have zero affiliation with GitLab and I also refuse to judge them too harshly about their database screw up the other week - if they bungle that again, I might be a bit more critical but let's just face the music, we're human and sometimes people make big mistakes like that. Anyway, GitLabCI's not quite as powerful as TeamCity or Jenkins BUT it's right there with your source. It's such a no brainer to me that GitLab combined CI with their core git server. WHY THE HELL IS SOURCE CONTROL SEPARATE FROM CI??? Well, I know why because I'm old and I remember before CI was "a thing". It's really just evolution, source control tools have been around forever but it wasn't till CruiseControl and Hudson/Jenkins came along that CI became a first class and somewhat standardized citizen in the build/tools world. If GitLabCI becomes more powerful/flexible, there really would be no need to use another CI tool (cloud tools like TravisCI included). BTW, I love TeamCity and Jenkins, they both have strengths and weaknesses. I'm also a huge fan of Artifactory. . . which leads to the next logical progression, why isn't the package/container/module/gem server also included in the mix? Your source, CI/CD and package/container management could all be part of the same application stack. . . it makes so much sense. Team GitLab, go for it! Seriously, if anyone from GitLab reads this, you are more than welcome to ping me for real world feedback, I love y'all, but you have room to improve. Also, I 1000% love GitLab for using the term Merge Request and not Pull Request. :)
Reading [Python Is Not Java](http://dirtsimple.org/2004/12/python-is-not-java.html) and [Java is not Python, either...](http://dirtsimple.org/2004/12/java-is-not-python-either.html) might help.
This is by far the worst posed question I've ever seen. I know English isn't your first language, but seriously how is anyone suppose to help you man? You don't use the right sub-reddit, you're not even giving us a tangible question in your post and now you've supposedly written the program; yet you haven't even posted the code? How is anyone going to help you if you cannot even help yourself... 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Where does the scope of greeting and planet actually end?
I'm also reasonably happy with the GitLab CI, though I would very much like to have [better formatting for build results](https://gitlab.com/gitlab-org/gitlab-ce/issues/13227).
But why are you SHOUTING about it?
I want xUnit support so badly it hurts
You don't have to write any Java to use Jenkins, so what difference does it make?
That's not Python code! You write Python like it is R. My advice is to learning one language properly: learn how to use some libraries in it. Also, you should invest time when learning a new language to figure out the best way to do things in that language rather than copying your style from another. Here I printed what my linter comes up with: http://pastebin.com/TRFHJd3L Though more importantly is to use the right libraries. Unless you are fluent in both, it's better not to do a comparison. Don't mean to discourage, but you need to step up your game! 
How does this compare to py3's built in mock library? Does it have a different approach to mocking? 
I didn't realize nose is no longer developed! All these switches to py.test makes me feel justified in my arguments to a former colleague that we should use py.test instead of nose (which he was used to) for tests.
You have to install the JRE. And sit through an installer that brags about how "by installing Java you will be able to experience the power of Java". It will then nag you every week about updating to Java 1.8.n to fix the 38 security holes found just last week, which will treat to another full trip through the installer. Happy is the computer that never needs a JRE. Also, when something goes wrong, there's the AbstractFactoryFactoryNameTooLongException stack traces. 
[removed]
Or you cand just use sidereel tracker...
Good question, the implementation of both mock library and sinon are similar. Both are using wrapper to modify original function. For example: def empty_func(): pass class TestRandom(unittest.TestCase): @mock.patch('os.system') def test_system(self, empty_func): print(dir(os.system)) @sinon.test def test_system_by_sinon(self): sinon.stub(os, "system", empty_func) print(dir(os.system)) The member functions/variables of os.system will be wrapped. The purpose of Sinon.PY is not a brand new implementation, but an alternative test library API. Especially for programmer whose major language is javascript, or having experience in Sinon.JS.
I found this project lead by several top machine learning researchers https://people.eecs.berkeley.edu/~russell/ebtl/ maybe this gives you some hint
thanks man! everything works now.. See EDIT 2 above.
You're welcome.
Try /r/learnpython! The warning is because `table[column]` can be either a view or a copy, depending on the size and more arcane things. This is bad because if you change a copy, it's later garbage-collected and you basically never ran your loop. The slowness is because you create a new lower-cased column for every cell you compare, use that to create a new boolean column, and finally use it as an index. I suggest writing a function that considers and alters a single cell, and then you can just `table[['Col1', 'Col2', 'Col3']].apply(my_function)`.
You're welcome.
Use newly open sourced drone.io instead.
I can vouch for gitlab. Been using it myself and it works flawlessly. Just bind it to your local ip
I can vouch for gitlab. Been using it myself and it works flawlessly. Just bind it to your local ip
That will just be a list of None's
Holy shit, dude is struggling a little bit. A little more focus on the presentation would go a long way. &gt; I am you're average Joe programmer. &gt; maybe we can dodge a bullet by using more "cleaner" ways of &gt; This meant modifing the original code, thing that I dident want to do for to reasons &gt; I wanted the code to look as much as posible with the rest &gt; "fail fast, fail early, fail often!" as Mozilla like's to say &gt; should you replace all you're code base with it? 
You can serialise the response to HAL
I don't get it. Is it that the guy complaining about the "pseudocode" has never seen Python before?
I/company I work for use https://getsentry.com. It automatically sends the "core dump" to us, so no need for the user to do anything. We use it for server, frontend, desktop and mobile. If you're put off by the fact that this is a paid service, you can host it yourself (it's open source) if you want.
Arch does for example
Darn it I meant to say except arch and then forgot.
Your bot is... kinda weird. It gave a -0.8519 score to the post saying that raping children is bad. And also gave -0.8352 score to completely neutral comment about some Radiohead album.
I just updated my project [EasyBlogger](https://blog.rraghur.in/p/blog-page.html)/[Github](https://github.com/raghur/easyblogger) - it's a swiss army knife for managing your blog posts on Blogger. You can retrieve blog posts and convert them into markdown or write and update posts from the CLI (or your favourite editor) in your favourite lightweight markup(markdown, rst etc - anything supported by Pandoc) Latest update is that it now supports pandoc filters - so you can have diagrams in your markdown using [mermaid](http://github.com/knsv/mermaid). Here's an example of it - [post with a diagram](https://blog.rraghur.in/2017/02/easyblogger-now-supports-pandoc-filters.html) 
Maybe, but would it improve readability if we remove the information captured in the names?
That's right. Been a while since I used that.
[it is a meme](https://cdn.meme.am/cache/instances/folder212/500x/13363212.jpg)
This looks very nice! I feel like this code should be easy to modify and generate and store other stats about the tweets. (One example would be Named Entity Recognition.) If you'd fork/extend this and provide some examples of how to do so, then this would be very useful for Digital Humanities scholars. (Also see /r/DigitalHumanities/) The only thing that bothers me is the lack of documentation. Specifically, I'm missing the docstrings. It's much easier to build on your code if it's documented.
You can often just inspect the requests sent to the server in Chrome and then use the requests module to do the same things. If you are using requests then you may want to look at sessions.
I prefer pogdesign.co.uk/cat
Where's the comparison to Cython? That has been my go-to method for writing extensions.
I also noticed that you are using "self" as an argument to many functions. This is typically only used as methods of a Class. I think that you don't understand the difference between regular methods and methods within a Class. 
You used retarded and stupid to comment on a coding answer on stack overflow which is there to help someone find a solution. You are the retarded and the stupid for treating this code as a contest material. Get a life.
good article
that's not the problem. you read code more often than you write it. # example backreference_for_subsequence_ending_with = [] # better # list of backreferences for subsequence ending with `value` or whatever backreferences = [] reading the code is easier, when you can see variables fast. if you have to keep reading 41 character variable names, that slows you down. especially when they differ only little, eg "blabla_for_this" and "blabla_for_that". if you need to explain the purpose of a variable add a comment on initialization or function argument. EDIT: one letter variables are of course the other stupid extreme.
Wow maybe you should take a chill pill and rethink your life, you just called somebody retarded for criticizing variable names.
Nice! Coincidentally I was thinking of doing the same thing myself just earlier today. You've inspired me to do it! maybe something slightly different as a challenge.. 
They have global scope here. Here's a blog post that goes into it in a bit more depth: http://eli.thegreenplace.net/2015/the-scope-of-index-variables-in-pythons-for-loops/
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
When running ``./configure`` specify a prefix. I would recommend something along the line of ``/home/&lt;user&gt;/bin`` or ``/opt``. Edit: If you plan to install any packages for that interpreter look into virtualenv or venv.
[Hiring] Tech Lead eHealth at Therapieland (Dutch) https://www.djangojobs.net/jobs/674/tech-lead-ehealth-therapieland/ #amsterdam #hiring #python #django #jobs #eHealth #Netherlands
I'm doing pyweek! Except my partner and I are crushed under homework so we haven't really started yet
I'm working on a game entirely using the raspberry pi's sense hat led screen. It's and 8x8 led screen. For a game. Why am I doing this
Huh. Couldn't even use the search box on iOS safari. 
Because you love to suffer?
I use [pyenv](https://github.com/yyuu/pyenv) to manage Python versions on OSX and Linux and works great.
At least one letter variable names have their place (e.g. simple lambda expressions, highly abstract code). 41 character names are never okay.
TIL Mercurial was written in Python.
That would be ideal if everything are same. I have considered to implement Fake XHR and server many times. But for those features, there are far more thing to consider. Even in my experiences of using Sinon.JS, sometimes those features could not to be supported. Anyway, I may consider to add them in the future.
Ways to visualize networks with thousands of nodes that are all connected at different strengths.
Mypy/pylint can finally be made to work with python 3.6 completely, after installing from github directly and merging a pr by hand. So adding mypy into my work now.
Good article!...I would love if there was a similar way to do email merge with MS Outlook!
If you do a lot of parallel processing in python then I highly recommend you look into Dask. Not only does it provide easy parallel (and distributed) numpy arrays (and pandas-like dataframes), the dask "delayed" functionality makes construction of task/queue parallel systems straightforward. Check out the [docs on delayed](http://dask.pydata.org/en/latest/delayed-overview.html) for a simple example. It really is a very powerful ways to do parallelism.
There's just about nothing anyone can do to help when your problem is so generically stated "At the moment Stackless Python is running but the scripts we write are not working ..." There are thousands of reasons your scripts could be not working. You need to adequately describe the exact errors you are receiving. Finally its possible your problem may be more related to the PSP and less related to Python/Stackless Python. Thus it may be beneficial to cross post this to another subreddit that is more dedicated to homebrew software on consoles.
Working on prediction of performances of football players in upcoming matches, for a fantasy football project I'm working on. 
Thanks i'll give it a try. 
Article claims docx-mailmerge "is a mature package," so why is it sitting at v0.3. Can I get a 1.0 please? It is hard for a business to rely on something that the developers are literally telling us is half-baked and subject to change.
You say you're using the struct module. I highly recommend trying out numpy. You can speed up your code by 500x depending on your data size. Also, I didn't see your code but it's a lot better to save you common struct objects than recreating them. I'm talking getting a 2x speedup.
Thank you. Any tips on writing a good resume for google engineering practicum ?
Looks nice, what is the decorator for ? Clearing the mock ?
EVE's creator is clearly passionate about his project; it shows. However, I guess that the quite lower popularity of the project - especially when compared to Flask - doesn't help. I don't know what this might be caused by, as I'm not a EVE user. But I think that it all comes down to the same problem that affects other OSS projects. OSS is most of the time "free", and developed for "free". But "free" means that no money comes in, most of the time. Django was in the same boat as EVE recently. So I'm wondering if this is part of a more global problem in the OSS world. Should there be an alternate funding model for OSS? What do you think?
Well, it is an LTS release, and they've said it'll receive security updates and such for (at least) 3 years from release date. You can't really expect them to support Python 2 for longer than the maintainers of Py2 themselves plan to support it, can you?
I'm kind of surprised a lot of these modules still do. It's got to be an enormous pain in the ass to maintain feature parity between 2.7 and 3.x versions, right? And as time has gone on I've got to imagine that it's also held modules back to have to not take advantage of the latest 3.x features and/or resulted in a ton of extra legwork recreating those features on the 2.x version.
I've also reached the point where any new open source projects I start are going to be 3.5+ only
Thanks/. I'll check it out. Only about half of my uses of the parallel map I made is for NumPy type things (where, if NumPy is using the C calls, should be greatly improved with nested processes/thread parallelism)
Indeed one wouldn't. Then again, RedHat does - for a pretty penny
I'm glad because moving to Python 3 at work is a huge undertaking. It's taking a looong time and the faster we go the more bugs we'll ship to production (or bugs that will surface under py3) so going slow is pretty important for us. Plus of course we have actual business needs, we can't just drop everything for Python 3. 
I use the [deadsnakes PPA](https://launchpad.net/~fkrull/+archive/ubuntu/deadsnakes) to install different versions of Python on Ubuntu.
Honest question. Here's an up vote to counter Python 3 fanatics who are down voting you. 
Reminder: Python 3 will be 10 years old next year.
Any chance you can explain what you mean by "connected at different strengths"? 
Would speech tags be noun, verb, etc? I don't have these. I bet they can be automatically assigned though with a dictionary look up. Obviously context matters for some words, but as this is just a stupid bot, it doesn't matter if it is wrong now and then. Would you endorse and syntactic parsing python libraries? 
I intend to try out numpy, especially for the data types I cant emulate without slow pure python(like half floats). When I do get around to it though, I'm going to make it optional. If it cant load numpy then those FieldTypes wont be available for use. Also, the way my library works is using dictionaries formatted to contain certain entries that describe the data(I call these descriptors, or descs for short). When the parser/serializer functions encounter a node, they check its desc for details on how to parse/serialize it(string encoding, byte size, endianness, etc). These descriptors are immutable and are referenced by every structure described by it, so they are essentially attribute constants. This is definitely slow, but I believe it is more versatile than using just data types that conform to the struct modules format codes. There is a QuickStruct variant that is atm about 10x faster, but it only supports 8/16/32/64 bit ints, floats, and doubles. It's probably safe to use your suggestion to speed it up by concatenating all the format codes together, storing it in the desc, and packing them all at once rather than having to iterate over them. Actually, now that I think about it, this would break the ability to specify an endianness per FieldType, as all of them would be getting packed with one. I've actually encountered mixed endianness formats(Halo Custom Edition tags are big endian for most of their fields, but some are little, and when compiled into a map they're all little), which is part of why this is a feature, and why the library supports flipping endianness on large and small scales.
How? When I go to the "edit" page it gives me these options: 1. Use twine! 2. Use the setup.py "register" command. 3. Or upload your PKG-INFO file (generated by distutils) here: None of which seem to be directly editing. I'm probably missing a button or something, as I would LOVE to be able to directly the readme like I can on Bitbucket. Thanks for putting up with me lol.
But all these extra features get zero consideration by how vader evaluates sentiment, that was the point I was trying to make. You would have to modify the vader methodology in such a way that extracted features are properly accounted for. I thought that hash tags were included within tweet text when retrieved using tweepy? When you pick a topic to track, is it just looking for matches within tweet text?
Part of speech tags can be automatically generated using a tagger, but a dictionary lookup wouldn't be able to determine the context of a word, and a single word can be used with different POS depending on the sentence. The tagger I've used &amp; liked was TreeTagger, callable from Python.
Is your position seriously that the age of it doesn't matter because people didn't switch and that's why they shouldn't have switched sooner? Hello?
Switched to python 3.x a couple of months ago for all my new projects, I have found zero libraries with problems, only the mysql module I was using (I don't remember the name), but there is an alternative that works perfectly: *mysqlclient* Also there was a problem where if you use *pip freeze*, you would get one module (don't remember which one) that returned version 0.0.0, so your generated requirements.txt wouldn't work if you use *pip install -r requirements.txt*, but that was easily solvable and not an issue anymore. All in all, the "hardest" of the switch was to remember to use *print("hello")* instead of print *"hello"*
Or Debian stable (jessie).
&gt; Which also means they won't run on Windows XP Eh, if Microsoft isn't going to support it I don't see why we should...
Well crap. I know I've done this but now I can't find how to do it. 
They are right that Python 3 releases before 3.4 were not worth switching to. If they were irrelevant then their age is also irrelevant.
&gt; It's a software tool. It's very different. It's not different from wxPython. Do a diff. &gt;PyQt4, PyQt5, TKInter ew &gt;PySide Not familiar with it, will have to look it up.
I just found this as well: https://pystruct.github.io/ &gt; Sidenote, as an HPC guy I find Digital Humanities to be one of the most interesting areas of research I hear about. Keep up the good work! As an NLP guy, I'm really happy with the tools and infrastructure that HPC people provide! :)
&gt; this would break the ability to specify an endianness per FieldType, I do a lot with binary files of different types. Endianness is a hold over from different processors used by SGI &amp; PowerPC (big endian) vs. Intel/AMD (little endian). Endians are either defined by filetype (e.g., all files of type cogsg are big endian), a user flag, or just defaults to the processor (for Linux, Windows and Mac, this will always be little endian). It should really not be changing on a per field basis/for the same file. Typically the first 4/8 bytes will be a specific integer value (I see 4 a lot), so you just run through the different methods looking for that flag and you'll know your endian. For the most complicated format I work with, I check int (i) big/little, and long (q) big/little. When you have small data blocks, the struct module is faster. When, you have lots of data, numpy is faster. Because I have a lot of tiny blocks and a few very, very large blocks. I use the following predefined data members: from six import b self.fdtype = np.dtype(self._endian + 'f4') self.idtype = np.dtype(self._endian + 'i4') self.double_dtype = np.dtype(self._endian + 'd') self.long_dtype = np.dtype(self._endian + 'i8') from struct import Struct self.struct_i = Struct(b(self._endian + 'i')) self.struct_8s = Struct(b(self._endian + '8s')) self.struct_2i = Struct(b(self._endian + 'ii')) That will break on &lt; Python 2.7.7 due to the utterly broken `b(...)` function in `six`, but I'm OK with that. The `b(...)` function is a pass in Python 2 instead of doing the correct thing, which is `string.encode('latin1')`. Python 2.7.7 and Python 3.3 made it so `Struct` could accept unicode or bytes instead of just bytes. Just make sure to delete your Struct objects at the end or `deepcopy` won't work in Python 3.6.
Ah, RedHat. The sole reason I still use Py2
That's very interesting, thanks. Unfortunately our products are not connected to the Internet, they're on isolated LANs. But I'm gonna look into this because it seems relevant for Internet-facing apps.
Where do you change actionWake1?
Tell that to the CG software industry. Maya, Houdini, Nuke, etc... all use Python 2.7 and continue doing so for 2018 releases :(
You cant compile python 3.5 on jessie?
Non, the noise happen while Coding. I basically am editing a text file line by line. I put line in list and edit them.
&gt; It's got to be an enormous pain in the ass to maintain feature parity between 2.7 and 3.x versions, right? 2.7 and 3.3 and above is pretty easy, really, in the common case (i.e., maintaining both once you already have code running on both). Really 3.2 isn't much worse aside from the initial port (due to lack of `u''). The one thing that annoys me with maintaining both is wanting to use Python 3 only features.
I think it depends a lot on what you're doing; e.g., a lot of the async support is potentially a big deal for some things and a total non-deal for others. Similarly, some things are more easily backported than others (especially if you have a policy of running without any C extensions with "reasonable" performance).
OT but could save you LOTS of typing and pain: is there any reason why you're not doing if( upper(input) == upper("wake") ):... Or upper(playerAction[23]) if you ever want to do a cheap and dirty localization...
I find it kinda strange that there is a video of a guy talking about code, but there is no code. No white-board, no examples, no slides, no visuals. Just a guy talking. This should be an audio podcast, not a video. Also: The full tutorial is a payed service. This link is advertising, basically.
Aaaaand now it is official. Bashing python 3 is a meme in this sub.
Well, there we go. Done in one. (Came to suggest sed as well.)
This, and a way to build a .gitlab-ci.yml locally (without a gitlab server).
You can execute jobs locally using gitlab-runner. I'll post a link when I get home. 
I'm working on a Flask app that uses machine learning to predict which Github issues are duplicates. (Link to [my post in r/Flask](https://www.reddit.com/r/flask/comments/5vcnjm/show_flask_bug_deduplication_app_built_using_flask/)). All Python, with the web app done using Flask, and the server-side machine learning processing using Keras + Tensorflow. It's been really nice to use Python for everything- I've been impressed with how well it scales. I've got another project that processes Hadoop data (specifically, using the Apache Avro format). The [fastavro](https://github.com/tebeka/fastavro) library is amazingly fast- my coworkers have been shocked that Python is able to process data as fast as it can.
Check your e-mail. I fixed it and sent ya a copy. I even tested it on the pypi test site first to be sure ;) edit: Just to add, if you download [restview](https://pypi.python.org/pypi/restview), you can edit rst files and preview them on the fly. Although the checking on the [test site](https://testpypi.python.org/pypi) is really the only way to be sure.
Now it's weird for me that print is not a function in Py2. So, don't worry, you'll get used to it pretty soon! 
It would be easier to debug if I could see the code causing the issue
I think his position is that 3.0/3.1 (and maybe 3.2) were just getting the new 3x worldview back up to par with 2x's performance &amp; hammering out compatibility ... though OP said it in not so many words. From that perspective, the clock for "it's been out for X years" should really start counting from when it was reasonable to expect production systems to be able to migrate without paying a penalty... which was 2012-9 for python 3.3. That's only 4.5 years ago.
have a look at [Lektor](https://www.getlektor.com/)!
I have sort of a love-hate relationship with buildbot. I have a lot of love for it. I just also have a nearly equal amount of hate. That said, it's extremely flexible. At work I have over a dozen build machines working across 3 OS's doing builds for a range of different projects that live in a range of repositories. There's not a lot that it can't do if you are willing to bash your head against deferredMaybeFactoryItemControllerMetaproperties and the like. Some of the simpler/automagic solutions seem kind of silly when you need to do something moderately complex.
They'll get rewritten and probably improved in the process. Honestly dude, enough with the FUD. It's time to move on
[github link](https://github.com/sacherjj/TvHelper) I spent a hour or so on trying to get a clean format of an app for you. I was able to reuse a little of what I have used for other tkinter apps, but I haven't generalized yet. First off, this is Python 3. Frankly, there is little excuse to use Python 2.7 on anything that is brand new. Install Python 3.5 if you don't already have it and use Python 3 only. Otherwise, you are just in for pain. Also, PyCharm as I recommended will do 4 space alignment. Tabs are gone from helper.py. I made just a few changes to your helper.py. Mainly Python3 compatibility and requests instead of urllib2. Otherwise, I abandoned it as it was a mix of data and gui and hard to understand. I made three files. _ _ init _ _.py just tells python that this is a package. Because I'll need to import from data into main. main.py holds the GUI for the application. data.py holds the data models and data retrieval. With these separate, it would be possible to write a command line version, by only replacing the main.py gui. Then you know you have it separated well. Start with data.py APP_NAME = 'TVHelper' DATA_FOLDER = appdirs.user_data_dir(APP_NAME) if not os.path.exists(DATA_FOLDER): os.makedirs(DATA_FOLDER) As suggested in the thread, appdirs puts this is the right location on any platform. Really nice. class Pickleable(object): """ Class that can save and retrieve vial pickling. """ def save(self): return (self.__class__, self.__dict__) def load(self, attributes): obj = self.__new__(self) obj.__dict__.update(attributes) return self This is a class that allows itself to be pickled to save and reload. We will be using it for the Show class. Episode = namedtuple('Episode', ('number', 'season_episode', 'air_date', 'name', 'description', 'web_link')) class Show(Pickleable): def __init__(self, name, link): self.name = name self.link = link self.watched = -1 self.last_web = datetime.datetime.now() self.episodes = [] def retrieve(self): """ Query all the information for this show from the web. :return: None """ html = requests.get(self.link).text # soup = BeautifulSoup(html, "lxml") self.episodes = [] self.episodes.append(Episode(1, 'S1E01', '26 Oct 15', 'Pilot', 'This is what happens on this episode.', 'http://webaddress')) # TODO: Retrieve data from Web and Parse pass Episode is a namedtuple. This is like a lightweight class. It allows you to refer to it with .name notation. Also, when printing them out debugging, it is named nice. Notice how Show inherits from Pickleable, which will allow us to persist the entire class and reload it from ShowList below. I've added self.watched, to eventually implement the show number that is last watched. And self.last_web to store when the last query was made, so we don't stupidly query too often. retieve needs work to parse websites and get into episodes. As someone mentioned in the thread, epguides.com looks great for this and I structured Episode for this. I'm just creating a dummy row for now. I'm going to do the big ShowList class in parts class ShowList(object): """ Need to make this singleton """ def __init__(self): self.shows = {} self.load_shows() @property def file_path(self): return os.path.join(DATA_FOLDER, 'data_links') def show_file_path(self, show_name): # TODO: Better filter to make sure show name is filesystem safe return os.path.join(DATA_FOLDER, "data_" + show_name.replace(" ", "_")) Just initializing shows to an empty dictionary, then loading shows. Two helper functions for getting data file paths. You built these with code in multiple places which is bad. def get_show(self, show_name): return self.shows[show_name] I'm storing a dictionary (self.shows) with the show_name as the key and the Show object as the value. This returns a single Show object @property def show_list(self): return list(self.shows.keys()) This returns a list of all show names, by converting the keys of self.shows into a list. def load_shows(self): try: with open(self.file_path, 'rb') as f: show_list = pickle.load(f) for show_name in show_list: with open(self.show_file_path(show_name), 'rb') as f: self.shows[show_name] = pickle.load(f) except FileNotFoundError: pass All that is saved for the ShowList object is a list of show_names. This is all that is needed to load the individual show files. Since the def save_shows(self): with open(self.file_path, 'wb') as f: # Save out just list of show names pickle.dump(list(self.show_list), f) for show_name, show in self.shows.items(): with open(self.show_file_path(show_name), 'wb') as f: pickle.dump(show, f) Save dumps out the list of show names and each individual Shows object. def delete_show(self, show_name): # remove show from this object del self.shows[show_name] data_file = self.show_file_path(show_name) # remove data file if os.path.exists(data_file): os.remove(data_file) To delete a show (which isn't implemented in the GUI yet and I haven't tested) we remove it from our list and delete the data file. Looks like I forgot to add persisting the list to a file. Need to add that. def add_show(self, show_name, show_link): if show_name in self.shows: raise ValueError('show_name {} already exists.'.format(show_name)) new_show = Show(show_name, show_link) new_show.retrieve() self.shows[show_name] = new_show self.save_shows() I check for duplicate show and raise exception. If good, we create a Show object and try to retrieve(). This will raise and Exception if the URL is bad. Next I add it to the ShowList dictionary and save it out. def refresh_episodes(self): for show in self.shows.values(): show.retrieve() Walk through each Show object and retireve() Can you see how making data objects away from GUI allows you to structure the data and make intelligent methods for it? I'm going to follow this post with the GUI portion, as this is quite long.
I manage to do quite a bit without having to override most of the built-ins. Custom email formatters and such, but using properties I get most everything else.
45, you can find out more information about C here: [Wikipedia](https://en.wikipedia.org/wiki/C_\(programming_language\))
Honestly i did the same and god really frustrated getting pelican to work for that. So i just used bare Jinja2 templating and wrote my own code as needed.
Referring to the same github link above. This is discussing main.py from data import ShowList I ignored the other imports, but this is something you won't find on Google. (I don't think.) This is pointing at data.py and importing the ShowList object. We are only dealing with data through that object and how it is exposed. So we are not doing many bad things with the GUI. This is the idea of a Model and a View. Usually there is a Controller that has logic in this model, but I'm doing the control in the View. I didn't want to overwhelm you. class ChildWindow(object): """ Class for making a modal window. """ def __init__(self, parent, title): self.top = tk.Toplevel(parent) self.parent = parent self.top.title(title) self.main_frame = tk.Frame(self.top) self._setup_widgets(self.main_frame) self.main_frame.pack(fill=tk.BOTH) def _setup_widgets(self, parent): pass def make_modal(self, on_cancel=None): self.top.focus_set() self.top.transient(self.parent) self.top.grab_set() if on_cancel: self.top.protocol('WM_DELETE_WINDOW', on_cancel) self.top.wait_window(self.top) This is a class I made to create a modal window (one that is on top of the main window.) The make_modal calls self.top.wait_window(self.top) This is magic sauce that makes the main window wait until this is closed. If you try to click on the main window, it will kick you back up to the child window. By making this a separate class, we can reuse this if we wanted more than just one modal window, like the one below. Notice that _setup_widget is calls in the constructor, but has noting here. When I define it below, it will still be called by this object and allow us to then build the display, instead of cluttering up __init__. class ShowWindow(ChildWindow): """ Modal Window for Adding Shows """ # TODO: Add edit functionality def __init__(self, parent, position, on_save): self.parent = parent self.on_save = on_save super().__init__(parent, 'Add Show') posx, posy = position self.top.geometry('+%d+%d' % (posx, posy)) self.make_modal(self.on_cancel) ShowWindow inherits from ChildWindow. This gives it the modal functionality we defined. super().__init__ is a call to the ChildWindow constructor. Looks like I duplicated the self.parent = parent. I call make_modal with the reference to the on_cancel method in this object. Because we didn't use () after the self.on_cancel, it is passing the method as a variable, rather than calling it. I'm getting the x and y of the parent window via a tuple with position. This is used, because otherwise the modal window seems to pop up in the top left corner. def _setup_widgets(self, parent): tk.Label(parent, text='Show Name:').grid(row=0, column=0) self.show_name_var = tk.StringVar() self.show_name_entry = tk.Entry(parent, textvariable=self.show_name_var, width=40) self.show_name_entry.grid(row=0, column=1, sticky=tk.EW) tk.Label(parent, text='Show Link:').grid(row=1, column=0) self.show_link_var = tk.StringVar() self.show_link_entry = tk.Entry(parent, textvariable=self.show_link_var, width=40) self.show_link_entry.grid(row=1, column=1, sticky=tk.EW) self.add_button = tk.Button(parent, text='Save', command=self.on_add_button) self.add_button.grid(row=2, column=1, sticky=tk.E) Here we add all the tk elements to enter the show name and link, and a button. def on_add_button(self): show_name, show_link = self.show_name_var.get(), self.show_link_var.get() if not (show_name and show_link): messagebox.showerror('Missing Data', 'Please fill in all data.') return try: self.on_save(show_name, show_link) except Exception as e: messagebox.showerror('Error Adding Show', str(e)) return self.on_cancel() def on_cancel(self): self.top.destroy() We passed in an on_save callback when creating the window. This lives in the main window. Since it could have errors due to bad data, we trap this and show it to the user before closing the window to allow them to fix it. Calling on_cancel() will drop this dialog, just like if we clicked the X. class ColumnConfig(object): """ Helper class to format configuration for Treeview """ def __init__(self, column_name, heading_text, data_index, anchor=tk.CENTER, minwidth=None, width=None, stretch=False): """ :param column_name: Should be #0, #1, #2 :param heading_text: Text to display at top of table :param anchor: side to anchor data: tk.E, tk.W :param minwidth: minimum width :param width: width if possible :param stretch: stretch column? """ self.column_name = column_name self.heading_text = heading_text self.data_index = data_index self.anchor = anchor self.minwidth = minwidth self.width = width self.stretch = stretch @property def column_arguments(self): """ Use with ** for exploding to named arguments for column """ ca = {'column': self.column_name, 'anchor': self.anchor, 'stretch': self.stretch} if self.minwidth: ca['minwidth'] = self.minwidth if self.width: ca['width'] = self.width return ca @property def header_arguments(self): """ Use with ** for exploding to namded arguments for header """ return {'column': self.column_name, 'text': self.heading_text, 'anchor': self.anchor} This object is for making Treeview configuration easier. You defined the data that you want in the Treeview we are using like a table. You will see it in use below. I took this from a program I'm currently working on and modified it a little. class EpisodeGrid(tk.Frame): """ Treeview working as a table for displaying episode information. """ def __init__(self, parent, show=None, dbl_click_callback=None, *args, **kwargs): self.parent = parent super().__init__(parent, *args, **kwargs) self.column_configs = self.get_config() self.tv = Treeview(self, columns=[column.heading_text for column in self.column_configs], padding='2 2 2 2', selectmode='browse') self.tv.grid(sticky=tk.NSEW) self.row_ref = {} self.show = show for config in self.column_configs: self.tv.heading(**config.header_arguments) self.tv.column(**config.column_arguments) self.grid_rowconfigure(0, weight=1) self.grid_columnconfigure(0, weight=1) self.dbl_click_callback = dbl_click_callback if self.dbl_click_callback: self.tv.bind("&lt;Double-1&gt;", self.on_double_click) There isn't a real good gridview in Tkinter. This is my quick pass at one. A Treeview is like File Explorer in Windows, opening folders that contain children. We are only using it like upper level row as a grid. **variable expands a dictionary into name=value. This is useful for using in calls. This is some of the things the ColumnConfig class is cleaning up for me. def get_config(self): """ Configure how columns appear First column is primary key and a hack to make a tree like a table. """ return [ ColumnConfig('#0', '', 0, tk.E, 1, 1), ColumnConfig('#1', 'S-E', 1, tk.E, 70, 70), ColumnConfig('#2', 'Air Date', 2, tk.E, 120, 120), ColumnConfig('#3', 'Name', 3, tk.E, 160, 160), ColumnConfig('#4', 'Description', 4, tk.W, 400, 400) ] This is defining the data that will be in the grid. The first item is the primary_key, in this case the episode number. It is the thing that is generally the folder that opens in the Treeview. We are making it almost hidden with a width of 1. The other columns will display. def on_double_click(self, event): row_name = self.tv.identify_row(event.y) self.dbl_click_callback(self.row_ref[row_name]) We can do things on double click, like set as last watched, etc. Not really used now. def load_data(self, show): self.show = show self.refresh() def refresh(self): self.tv.delete(*self.tv.get_children()) self.load_table() def load_table(self): for episode in self.show.episodes: primary_key = episode[0] values = episode[1:-1] # Skipping the first primary key column, not using web_link row_name = self.tv.insert('', tk.END, values=values) self.row_ref[row_name] = primary_key We pass load_data a Show object. Refresh clears the table data, then calls load_table to get new data. load_table gets the episode and sae primary_key, and builds values. This is then inserted and the primary key is saved for use if we double_click a row.
/r/learnpython, although this doesn't seem much like a python problem. 
What is your test coverage like? Legit question. I found switching a codebase with a decent amount of tests is not that hard. A little tedious, but you can plow through pretty fast. Dealing with an untested codebase is going to a less in ValueError.
Right. For spy, stub and expectation of mock, the decorator will clean them automatically to make each test case works independently. Without using decorator, user need to use .restore() function to clean them manually.
Great article. I might be able to apply this at my job.
here are screenshots of whats going on http://imgur.com/a/dVUJu
1. import issue: it's just a warning, not an error. You imported numpy but aren't using it in your script 1. destroyAllWindows is a function, so you need to call it as `cv2.destroyAllWindows()` 1. Does "0E1A5954.CR2" exist? 
the way you have this written, activeWake1 is a variable, not a function, which means unless it is set to 'wake' before entering the loop, the loop has no way to break and will run forever, because activeWake1 does not have an opportunity to be updated within the loop. either rewrite activeWake1 to be a function, or remove the while loop and simply do a one-time if/then check. also, what kind of name is activeWake1? does that mean there is an 'activeWake' variable somewhere? If so, how does the number 1 added to the end help me understand the difference between the two variables? something bad is happening in this code, sir.
clickbait bullshit
from chap2 import *
Internally, we use GitLab. Works really well.
Why do you want to do Gaussian elimination? I'm pretty sure numph doesn't even have that, but you can google. Inv and solve are the common functions you should probably be using. Inverting a matrix is rarely needed, but sometimes it is. Also, use numpy. It's a basic package.
In our case that's not even remotely feasible. It would require basically stopping the business for years.
`pytz` exists and is extremely authoritative in the Python ecosystem (it's drawn from the Olson database). As for the API issue, I won't argue matters of taste, but I don't understand the draw of libs like arrow or Pendulum. Outside of parsing, date ranges and very niche things (like a datetime that is always relative to right now) I've never found something that the datetime module doesn't handle better. And on the issue of date ranges (because it peeves me), I've never found one that I actually like, including the one I wrote.
Working on an EdX.org class about Data Science with Python. Not for the cert or anything, but because it seems useful for the possible new job I am being considered for. Matplotlib and Numpy I believe. 
Do you not understand the difference between a single organization implementing code in a new language and literally thousands of different organizations inventing and replacing the bulk of the non-cabling hardware required to create the internet? Not to mention the obvious fact that those organizations (as a group) control the pacing of how quickly ipv6 becomes a necessity. You do not control how quickly the frameworks and runtimes that you rely on stop providing security patching.
Speaking of which, do you have any plans for what you're going to do with your grant? New computer? College tuition? Oh‚Ä¶ I have an idea‚Ä¶ No hint? It's a secret for now‚Ä¶ but my parents are taking me on a trip to celebrate! It'll be my first time flying, so I can't wait. ********************* Really down to earth man and very casual. Like the way writter write it.
I mean if you're gonna use a new web framework why would you fucking stubbornly stuck to an old Python version? Makes no sense. Especially with venv 
Have you tried [elinks](http://elinks.cz) ? If that is not sufficient, you can compile it with [ECMAscript support](http://elinks.or.cz/documentation/manual.html#ecmascript). 
Sounds like a calming experience
Thank you! I will try it out!
According to those screenshots it looks like the image didn't load. If the image is located on your desktop, and the working directory when you start your app in PyCharm is different then loading the image without giving it a full path to the desktop may fail silently, I have a vague recollection that is how cv2 works, but I could be wrong. It looks like you can tell the image didn't load because it looks like it's saying the image width and height are 0. You can find the width and height of a cv2 image (which is really a numpy array), by printing it's shape. print(img.shape)
Yep, I just tested it, exactly as I thought, loading a non-existing image just ends up with None and failing silently: &gt;&gt;&gt; import cv2 &gt;&gt;&gt; img = cv2.imread('blah.png') Looks like image loaded, but did it really? &gt;&gt;&gt; print(img.shape) Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; AttributeError: 'NoneType' object has no attribute 'shape' Ugh, it looks like img is actually None: &gt;&gt;&gt; print(type(img)) &lt;type 'NoneType'&gt;
The `pendulum` guy spent a few months trying to convince this subreddit that his library was the best one, so methinks he'll be here shortly...
No, I don't want to compile things, I want to use them from the official repositories, to benefit from the 'stable' part.
Good luck updating it manually for every point release from now on.
I actually like the Sinon syntax more than the mock syntax, although I don't care for the camelcasing. Any plans to change the naming to the pep8 mandated snake_case? 
Has anyone looked through the features? Any new features worth summarizing/highlighting here? I.e.
Thanks for your feedback! I can make methods alias in the future release. Since the coding style is [pylint](https://google.github.io/styleguide/pyguide.html), I have considered this idea before. Basically, I must keep the original API of Sinon.JS. But I can make alias methods alternatively, for instance, spy.callCount = spy.call_count.
That's pretty much what I do. #NoChoice
Porting to run on a super buggy runtime isn't doing maintenance though, which is what py3 was for a long time. And doing maintenance is exactly why we don't have time to drop everything and do py3. 
They're probably not allowed to.
Compiling things does not make them unstable. I used self compiled python versions for the last 10-15 years. You basically had to before you could make a virtualenv for projects. It has never caused problems with stability. But I do remember a certain anxiousness before i got used to it. So I understand where you are comming from. 
I always knew python was a good way to get the ladies
There is almost no difference in the p(w2|w1) and p (w2|w0,w1) . Buy a good way to adjust state transitions is to apply the forward-backward algorithm or viterbi .
Fair point. Reality is hard. Not possible to add coverage small bits at a time while doing maintenance and work towards goals of increasing tests, simplifying the application, separating out layers and eventually starting to port parts over to p3?
This is dope I created a twitter bot and have been running to sentimental analysis on it to only create messages of a desired tone. I think I might try and integrate this into my project. 
We're doing all that when possible. Separating out parts is the thing that is least feasible and probably the thing that would make py3 porting easier :(
The brute force way would be using a headless browser and selenium. 
Use a webdriver like PhantomJS with Selenium.
Thanks a lot for the quick reply ! I'll look into it tomorrow! 
you can run/manage python 3.6 
Obviously spam, but this other comment from user Livelongnstrong kinda intrigues me ... the weirdly incoherent text and post history; is that some bot trying get karma and a post history for spamming? 
&gt; pendulum, arrow, delorean.. This is a giant shitshow. Why do we need a bunch of different libs? We're not doing Node.js where idiot and his dog needs to put an alternative opinionated library on npm. 
This is a really good run down on markov models. Thanks for posting! 
oh I see. probably odd to post the error on a python forum then
Statik looks promising (@all: it transforms a set of data into sqlalchemy-queryable relations). You could open a feature request, the author was really reactive so far.
Yes, if you run it as a script. But it has side effects in the terminal and generates an unneeded list. &gt;&gt;&gt; [print(i) for i in range(4)] 0 1 2 3 [None, None, None, None] So it is not really equivalent code. And it is bad practice.
Seconded. Fantastic introduction, good writing, nice examples. Thanks!
Never worked with it before, but this is actually a good reason to get into this. Thanks for the idea :)
Try /r/learnpython. As for your issue, the problem is that you are retrieving the text of the entire div tag. And because there's no line breaks in the html code, your "inner_text.split" line does nothing. If you want to retrieve just the title, iterate over the h4-class tags, same goes for {SOME TEXT 2}. As for {SOME TEXT 1} AND {SOME TEXT 3} I don't see any better solution than just grabbing the entire html content of the div tag and using string manipulation functions to retrieve them. Note that the resulting code will be hackish and is prone to break at any variable in the html file.
Every december has a "plot depression".
That's a fair point. 
use div.contents
&gt;import * PEP8 is watching 
A practical introductory Jupyter Notebook, with various examples of Dataframe manipulation and plotting using Seaborn. Feedback are welcome.
I'm already getting irritated that some of what I write has to work on Python 3.5 (yesterday that caused some issues with pathlib and i had to sprinkle in a few `as_posix()`es). If I were stuck with Python 2.7's feature set, my code would look absolutely appalling.
Have you considered using Anaconda?
Building an NLP machine that gets news articles from major news sources, and extracts names and locations, and them plots the locations on a map, and adds all the data to a DB. Hopefully will use Django to build a frontend to the database and allow it to be searched.
For the most part, yes. There are a few rules we disable - the major one being the line length one.
Mostly. I don't always cut my tests to 79 characters per line. For some reason, testing just seems to need longer lines. 
I follow the 80 column rule for readability, since more than that doesn't fit half of my screen, which is the layout I use for my editor. But I disable the check so I don't need to juggle random line breaks if I exceed this limit by one character. 
I don't always follow the proper naming convention for variables (sometimes a capital letter or two in the middle is useful!), and I try to stick to 120 chars per line rather that 79, and then only where sensible. But the rest of it I follow.
I was surprised to see he hadn't been here already
Should probably be "Getting your feet wet [in Python]." Maybe written by a non-native speaker? English idioms are tough. This makes me think of [Training Day](https://www.youtube.com/watch?v=LzB03c6Dc10).
I dunno. My text editor checks pep8 automatically and since I don't like the warnings I over time followed the guidelines. 
Oh, I totally get that, and file IO is definitely one of the major pain points in the process. On the plus side, working through it really forced me to be much more explicit about when I was dealing with a byte stream versus a unicode string, exactly what encodings I was using at each point and so on. I'm not saying it isn't hard, but my experience is moving to Python3 brought me tangible benefits in terms of less ambiguous code.
&gt;Then we create a string of *uppercase* letters and integers. &gt;'SRvM54ZAs1' Why does it say only upper when the password shown has lowercase letters?
&gt; sometimes a capital letter or two in the middle is useful!) you monster
What's miniconda? Some lightweight version of anaconda?
IIRC only the command line tool from anaconda, so when you download it you don't have the packages [included in anaconda](https://docs.continuum.io/anaconda/pkg-docs) (scipy, ...)
Please excuse the noob question, but I still don't understand how I can update my miniconda installation without creating a virtual environment or reinstalling all my packages. I tried ```conda update conda``` or ```conda update python``` but these all update to the last version of 3.5 and not to 3.6
It's specifically raw audio playback. You'll need to handle decoding separately. 
What I think is kind of weird is that the output the secrets module is giving in this article is very similar to what I got when I wrote about this module last week - http://www.blog.pythonlibrary.org/2017/02/16/pythons-new-secrets-module/
I ran the code a few times just now and I'm not getting anything like either example now. Must be an odd coincidence. 
After not looking at anything properly in months due being swamped with work I am looking back into a project I'm working on with micropython on an ESP8266. Meanwhile as it was quiet at work today I built a little tkinter program along with py2exe that I can leave running on my work laptop that moves my mouse one pixel across every 30 seconds to avoid the screensaver kicking in. Not sure if my workplace keeps track of computer locking etc. but I know that when the screensaver kicks in my work IM gets set to away so at least it'll look like I'm there to everyone who checks.
Shh! You're not supposed to tell!
Working on FTP support in [PyFilesystem](https://github.com/PyFilesystem/pyfilesystem2)
We are on the hunt for an experienced Python developer to join the Toaster London team full-time to work on exciting web projects that push the boundaries of what's possible online. This role also involves working closely with clients and other team members, along with prototyping mobile first web experiences using Django / App Engine and HTML / Javascript. The ideal candidate will be hungry to learn about new technology and enjoy the opportunity to work across the full stack, while sharing their considerable backend experience and knowledge with the rest of our talented development team To find out more check us out [here!](https://toaster.co/careers/london/senior-python-developer) 
Why would you propose to your wife? It's rude to propose to someone who's already married. 
None of the functions in there are things that you can't easily write yourself, in any case. A fair bit of it already exists in other modules.
Sort of. I read it, and then follow the bits that I like. The column limit is a bit restrictive in some cases.
&gt; Remember that Hello World is the typical program because it usually is incredibly simple to grok without knowing any programming at all. That, and it's *extremely* portable. Not every architecture supports lists. But pretty much every system lets you write to display, and once you can do that, you know your code is actually running. That's important for things like hardware exploits.
I knew that there would be improvements around unpacking operators eventually, but I didn't know that these improvements had actually been implemented! Nice! Time to upgrade I guess... :)
Thanks. I really appreciate you going through the effort of formatting all that if you needed to. There are some good practices here that I think I will adopt. I was mostly interested in these two parts: &gt; suggestions for setting up library projects, CLI apps Is there anything you find worth sharing regarding these areas?
Your first example seems perfectly intuitive. You create a datetime, set its timezone, and then ask for the time an hour later. It returns a new datetime an hour later in the same timezone. If you want to know what the time is somewhere else, you should change the timezone and not the datetime itself.
With urandom on a modern CPU you're very likely to get random random data not pseudo random 
Side note: are you related to the brand of strawberries by the same name?
Thanks, this worked! I didn't try it previously because the ```install``` command tricked me into thinking that it would install a brand new python.
Nice, I didn't know RES could expando github links.
Am I missing something? The Python gnuplot lib (http://gnuplot-py.sourceforge.net/) hasn't been updated since 2008. It's no wonder it's lost a lot of ground
Sure. It's pretty general information anyway so I can probably get away with sharing it without getting in trouoble: ## Libraries ### File structure (with svn) project/ branches/ tags/ trunk/ docs/ tests/ __init__.py test_thing.py project/ __init__.py thing.py metadata.json about.rst setup.py ### docs folder Use `sphinx-quickstart` to generate a document skeleton. Use rst format for all docs. ### tests folder Should be a python package. Use whatever testing framework you want, so long as it can be run as `python setup.py test`. ### setup.py Should look something like from setuptools import setup, find_packages import json # I like this method because it's consistent and easy. # We have some projects with compiled components, # so you can't import this info from the package itself # until it's compiled, but you can't compile it unless # you can run setup.py. This works around the # chicken and egg problem. with open('project/metadata.json') as f: metadata = json.load(f) with open('project/about.rst') as f: long_description = f.read() setup( name='project', version=metadata['version'], author=metadata['author'], author_email=metadata['author_email'], description="A short description", long_description=long_description, packages=find_packages('.', exclude=['tests', 'docs']), package_data={'project': ['about.rst', 'metadata.json']}, install_requires=['six', 'other_dep'], test_suite='tests', ) We deploy internally so I don't include all the classifiers and keywords, it doesn't matter for us. Adding a dev_requirements.txt (or equivalent, we actually use conda so environment.yaml files are what we typically use) is nice for the next dev to set up their environment quickly. ### Source code #### `__init__.py` from __future__ import absolute_import import json from pkg_resources import ResourceManager from project.thing import Thing __doc__ = ResourceManager().resource_string('project', 'about.rst') __metadata = json.loads(ResourceManager().resource_string('project', 'metadata.json')) __version__ = __metadata['version'] __author__ = __metadata['author'] __author_email__ = __metadata['author_email'] __docs_url__ = __metadata['docs_url'] # etc __all__ = [ 'Thing', ] From this point it's hard to give general advice since different modules have very different requirements. In a lot of cases I like to put classes in their own files, but this gets cumbersome a lot of the time. Really, if the classes and functions are logically related then group them together. Make sub-packages as necessary. A `project.errors` module is probably a good idea. ## CLI Apps Follow everything above, then add a `__main__.py` file inside the `project` package. Add a `project.cli` sub-module or sub-package (as necessary based on complexity). Implement a `main` function in `project.cli`, then import it into `project.__main__`. The `main` function should take `argv=None` so that you can override `sys.argv` really easily for testing: def main(argv=None): parser = argparse.ArgumentParser() # ... args = parser.parse_args(argv) # ... This lets you do `python -m project` to get the command line interface. Argparse is suggested since it's built in, but click and docopt are also great libraries if you need the complexity or simplicity respectively. If you have subcommands (think `pip install` and `pip search`, the different subcommands should probably be implemented in separate sub-modules or sub-packages. The `setup.py` file should be modified so that the call to `setup` includes entry_points={'console_scripts': ['project=project.cli:main']} ## GUI Apps Follow everything above for CLI apps, but have `project.gui` instead of `project.cli`. Ideally, these should be able to coexist in applications that have both a CLI and GUI. I find that GUIs are pretty easy to write if the object structure is broken up into sub-modules for the different widget classes: project/ gui/ main_window.py &lt;- Uses FooPanel and BarPanel foo/ &lt;- Exports FooPanel foo_panel.py foo_widget.py bar/ &lt;- Exports BarPanel bar_panel.py bar_widget.py resources/ icon.ico Use `pkg_resources` to load resources. For configuration, include a default config file in `project.gui.resources`, then check if there's a file located at an application specific location and merge it on top of the default config. I like json and yaml for config files. I've used multiple ways to check for user config files, such as `os.path.expandvars('%APPDATA%/Project/config.json')` and `if os.path.exists(os.environ.get('PROJECT_CONF')): load_config(...)`. The former is more appropriate when the user doesn't need to edit the config themselves, the latter is great for long running applications where you might want more control over the configuration. They each have their place, and both can be used at the same time if necessary. You might even want DB driven config, that's up to your use case. ## Logging Use the python logging module. Use a `logging.json` file to configure it (if it makes the most sense). Use logging in libraries unconfigured so that fellow devs can turn on logging for specific libraries when they need it. Take advantage of different logging levels. Use `logger.exception` in `except` blocks to get tracebacks in your logs. Output your logs where they can be useful and are easy to get to. Use `TimedRotatingFileHandler` to prevent log files from filling up your users' hard drives. Name your threads and processes with unique, human readable names and output this info in the log format (check the python logging docs for how to do this). Suddenly, your logs will start making sense in multi-threaded and multi-processed contexts.
Burn the unbeliever
So what's the name of the book?
But I agree, it does seem kind of spammy. On the other hand, my blog does have a Creative Commons license, although I don't think this fellow is following it quite right as they didn't link to the original article.
I agree. However I am writing a little UI in Python to help me clean up hung containers or left over containers just for fun
But at the same time, if you don't know what you're doing, it's really easy to fuck up security.
Thanks! I'll do that.