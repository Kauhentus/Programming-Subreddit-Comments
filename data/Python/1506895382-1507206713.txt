Selenium should get the job done. Not very elegant, but it should work.
I support clinical apps to, but I've done stuff with other functional alarms and orchestration. Other teams do similar things to what you are describing, but with actual user data.
I made a program that tells me how to ballast the ship I work on. Not because it's boring so much as I don't want to eyeball it while half asleep like most people do.
You could run gitlab community. Installs via docker. 
Making a simple calculator program for sizing our products using tkinter. I'm not sure if it's better to move to pyqt or directly to a web ap.
That's the problem, inspection ("view source") shows the code there (although, as I said, discolored, different from the rest), but requests+BS can't see it. I wonder if it is related the parser, "lxml". Anyway, I think I'll have to choose one of the other options. Thank you.
I work for a large company that owns many stores around the world. We use Python/Django for user applications at warehouses they use for the distribution of goods and handling financial transactions. I write the small Django apps to handle specific tasks.
How are you denormalizing the data?
Thank you for that.
Thanks a lot for your feedback :) 
Does it work with Python 3.6?
This module https://github.com/burnash/gspread can help you! 
+1 for this use case Some guys I work with are doing something similar using Python and ansible to automate network device configuration.
"Inspect" and "view source" are two different things. View Source shows you the HTML in the form it was downloaded (same as requests will get). Inspect shows you the HTML in its current form, after potentially being modified by various scripts on the page. 
That confused me a bit too. I'd rather see him implement a compiled language that is a lot like Python when it comes to syntax. But then we have Swift which has some interesting similarities. 
I'm unsure, but it does work with 3.5. You should visit the site and read the documentation.
&gt; https://github.com/fijal/quill Hey he is introducing braces in a Python like language. That right there is a massive improvement over the current Python solution. indenting is perhaps the feature of Python that drives me nuts and literally make python hard to read.
Yeah the developer got it right! No seriously the Python method drives me crazy and makes if very difficult to write clear code.
Are these live specimens you're measuring? I think the only issue is that you don't want any movement while it's sampling. If you had an expensive 3D capture system it could probably compensate for small movements, but this system might not be spectacular at it.
No, it should be very close. When you run it through spider it's just having iPython run it anyway. There's not really a difference.
vCenter vm's? Do you base this off of vm templates? An example command would be cool to see :)
I've only made scripts in vanilla python to QC and build csv files. I'm looking into pandas and dataframes, haven't spent enough time learning about those to be able to use/ incorporate yet.
Inspect shows the DOM, not the HTML. Html is a markup language, DOM is the data structure
Network admin reporting in! I automated CPE provisioning to the point of dropping a few YaML files into a folder and connecting a bunch of devices to some switchports in our lab and waiting. On the Python side it involves a simple Flask server serving a config file generated from the next available YaML file and a Jinja2 template (the generator was an earlier project of mine that I reused). Once a device fetches its config from Flask, Flask starts another Python script logging into the device and performing some finishing steps via Junipers PyEZ library. The whole process works in parallel, you can provision as many devices at the same time as you like and as long as there's enough YaML jobs around. As a non-developer, I'm pretty damn proud of it. I also have Ansible planned, but I haven't looked into it properly yet, I fear that I will scale a disaster and need to lab it out and find a way to make it foolproof with restricted rights and/or get some test environment running, I don't know yet. Until then I will continue handcrafting troubleshooting tools (do we see the same MAC addresses on both ends of a line) and information gathering scripts (is VLAN x already in use and where) and such things.
&gt; Pygame, though being the most popular one, seems pretty much dead as the last release was in 2009 Pygame eventually started getting releases again. According to https://www.pygame.org/news, the last one was in January 2017. &gt; Kivy, PySide and PyQt look more like a general GUI thing Kivy basically combines a low level graphics api comparable to pygame's (although the api is quite different - and much more modern, as it's based around modern opengl rather than blitting), and a widget toolkit. If you want to make pygame-level games, you can ignore the widgets without issues, although in practice they're very convenient for managing things like menus even in simple games. You might also be interested in [kivent](http://kivent.org/), a game engine written for Kivy.
We are non profit organizations thay focus on conserving, protecting and providing our natural resources to the public. Our local governments fund us and we map out flood plains, plant trees, restrict development (where it would damage the natural ecosystem), flood forecasting and warning, stewardship, watershed monitoring and I could go on forever. Basically we do our best to protect the our watershed while also serving the needs of the public. It's a fantastic job, new challenge every day! Mostly in Ontario though. Edit: https://en.m.wikipedia.org/wiki/Conservation_authority_(Ontario,_Canada) 
In marketing. Currently using python to interface with youtube api's and processing dmarc reports.
http://conservationontario.ca/jobs - Conservation authority jobs are posted here. If you sign uo for the newsletter and you get them to your inbox. 
I didn't know that. How can I "view source"?
Lua has different semantics from Python. For example: def f(): return 1, 2 def g(a, b): return a + b print(g(f())) # error in Python, 3 in Lua Of course it's going to be quite awkward implementing much of Lua's semantics with the exact same syntax as Python...
Because I don't have direct DB access with the ERP, I have to use the inbuilt importer, which takes a specific template that it generates (basically a CSV with column headings) Normally the tables match one to one (ERP upgrade), so it's mainly about having simple select statements, with where clauses that define what needs to be grabbed, and then pushing that into a CSV that copies the column headings from that template. There are some redundant columns that require the same data as the source table, so I normally just copy the column values from the source column into the others. That takes care of most of the denormalizing for this, as the templates have a specific run order, so that you import the data dependent tables before itself. Little frustrating, but there's not really a way to speed up that process.
Silly question but can’t you just immerse the object you’re measuring in liquid and measure the volume it displaces?
Press Ctrl-U (works in Chrome, Firefox might have a different shortcut) or prepend `view-source:` to the URL.
Install Anaconda. I wanted to lose my shit at Python on Windows, and then got Anaconda and started using Jupyter Notebooks. It made things much simpler, and actually got me focused on Python again. After that, you can install Pycharm, use the Anaconda interpreter instead of the default Windows one and your away. Linux is much easier for this, but you need to be comfortable with the command line.
!RedditSilver
###[Here's your Reddit Silver, RedditSilverRobot!](http://i.imgur.com/x0jw93q.png "Reddit Silver") *** /u/RedditSilverRobot has received silver 1471 times. (given by /u/short_vix) __[info](http://reddit.com/r/RedditSilverRobot)__
I would probably do something like a rolling Pearson correlation, then pick a threshold to say when it's too low. You can do this easily with numpy.corr 
Honest to god, until you have a good reason not to - use bottle.
Done. Thank you a lot.
why fortran? is there a benefit or is it just legacy?
I use Python to automate data collection, mostly. It's good for that.
It is the polar opposite of hectic. Process is king. I've had one-line bug fixes take years, multiple, to get approved.
True, but I didn't think that distinction as important to make in this case as much as getting the point across that it's modified after the initial request.
If you are working with images, you could probably train a Neural network to do it,
I run a pub trivia company and at the end of every month I have to go through my sheet of records (what shows occurred, how many players they had, and what I should charge them). This is all in a single Excel document, and I have to go through every venue, copy their info into a separate sheet for their invoice, save this sheet as a PDF, and then email the PDF to the venue. It's a few hours of tedious work and it's easy to make mistakes. So I finally learned Python (thanks Udemy!) and am about to start working on a program to automate all aspects of this part of my job. My goal is a 1-button-click program that can just automatically take the information from my main sheet, copy and save it as the correct PDFs, and then email these PDFs to my clients.
Found a library that interacts with wiimotes, so just playing around with that. 
Renpy is probably the most widely used python 2d game engine, at least in commercial projects. https://www.renpy.org/ Whole load of stuff on Steam is built on that.
That's such a good book! That author actually released the book as a Udemy class and it's amazing. I highly recommend it!
I think it's inside a mouse.... Your method would prove...difficult...if so.
Cloud orchestration and monitoring. Infrastructure build out and monitoring. Pipeline filtering. Blockchain verification for inventory management. Communication (we run our own internal chat client). Our phone system is Python based. Our email system is Python based. All written in-house to maximize integration with other components of our business. We use Python for data science and visualization too
I second this. Free, open source, has all you need (listed above) and a great hook system to customize.
&gt; Of course it's going to be quite awkward implementing much of Lua's semantics with the exact same syntax as Python... A bit, yes. And I'm pretty sure there's something in functools that can probably do the kind of functional composition you used as an example. I was asking my question in an attempt to get at what OP wanted from Lua in this case.
Check out the built in glob module. 
Ahah! Apologies, I didn’t realise the tumour was still inside the mouse...!
Any updates? It sounds like a neat implementation.
I had to redo a whole bunch of stuff. I made the code async (where I could for some stations) and for others synchronous. I'm finishing it up the last part of it. A few more days is what I need since I have limited time. 
Hey, no rush. Providing it at all is pretty rad. 
Could you provide us an example of Python code that is unclear but would be made clear with braces and semicolons? 
I was quoting Ken Thompson: &gt;It certainly has its good points. But by and large I think it’s a bad &gt;language. It does a lot of things half well and it’s just a garbage heap of &gt;ideas that are mutually exclusive. Everybody I know, whether it’s &gt;personal or corporate, selects a subset and these subsets are different. &gt;So it’s not a good language to transport an algorithm—to say, “I wrote it; &gt;here, take it.” It’s way too big, way too complex. And it’s obviously built &gt;by a committee. &gt; &gt;Stroustrup campaigned for years and years and years, way beyond any &gt;sort of technical contributions he made to the language, to get it adopted &gt;and used. And he sort of ran all the standards committees with a whip &gt;and a chair. **And he said “no” to no one. He put every feature in that &gt;language that ever existed. It wasn’t cleanly designed—it was just the &gt;union of everything that came along.** And I think it suffered drastically &gt;from that. EDIT: Basically all the most awesome programmers on Earth concur: https://gigamonkeys.wordpress.com/2009/10/16/coders-c-plus-plus/
We run of both windows and linux servers, so we use python for anything you would normally use bash/batch for. In particular, we have some cron/windows tasks that run some python scripts every so often to back up data and run some other maintenance tasks.
I usually long BBSTs whenever I need to solve a problem on some sort of a range query. The thing about BBSTs is that you can do update operations in logarithmic time, and use any data of your choosing for your nodes (Simply storing tuples of (key, value) pairs works thanks to tuple comparison) Implementing the update and rotate operations on the fly is doable, as long as you can write them recursively. Due to recursion depth, that is usually not possible, and I dread the iterative implementations. I just suck at bottom up recursion maybe? (time to write a macro for converting a simple recursive function to iteration) Yes, heapq is a lifesaver. 
...eureka?
A few options I can think of: - Data races = C-level undefined behavior: the program may crash, corrupt memory, etc. This is Perl 6’s (and Go’s) approach, but I don’t like it. - Data races = well-defined behavior at the C level (no segfaults) but undefined at Python level. This is basically Java’s approach, and it deals with this by using garbage collection and making sure that pointer updates are atomic. This is probably the most practical, IMO. - Data races are well-defined. This runs into the need for fine-grained locking mentioned earlier (slooooooow). - Software Transactional Memory. This has already been implemented in PyPy, with a 2x slowdown *for serial code* vs. the GIL; my understanding is that it is a perf win with &gt;2 cores, at least for code that is CPU-bound. However, this doesn’t play nice with IO-bound code.
Err, how does a balanced BST help you with range queries? You typically need a segment tree or a Fenwick tree for something like that. Honestly, the only use case that I can think of for balanced BSTs in programming contests is some problem where you need both fast query times and the ability to iterate the keys in sorted order.
That is basically what software transactional memory does. The problem is that even things that are immutable at Python level are mutable at C level, and especially because of reference counting. IMO this will force switching to a tracing GC scheme.
Can you elaborate a bit on how the data looks like, or what you want to measure, exactly. You said it's tumors, are they still inside the mice or already extracted? (I suppose extracted, since you want to take structure light measurements of them). If extracted, there would be a few ways to measure their volume and lengths. Structure light is one, you'll need a projector and a camera, and you need to calibrate both (intrinsics and extrinsics / relative position). Stereo would be a second way, maybe with a semi-random pattern projected on the tumor to get some data. Stereo also requires calibrated cameras. In the link you gave, I belive they are using a sheet-of-light / laser line approach, but you'll need a precise stepping motor for that one. Hardware wise, stereo would be the simplest setup, since projectors are much harder to calibrate (and not that simple to obtain for such small measurement volumes). Buy two cameras - make sure that you can manually set and fix their focus, since autofocus / changing the focus destorys the calibration -, arrange them, calibrate and measure. 
thank you mate!! This is encouraging
Yes, I know which scripts to look at now. Thank you very much! /u/lagooned /u/_AACO
Subcutaneously actually, but gotta measure the growth rates (twice-a-week~).
Yeah, though single shot might solve the movement problem, resolution is another problem as I want to build one with limited budget but I will try~!
Seconded. Read this and thought "Their grammar is probably better than mine"
Your not wrong exactly, but that is going to be a way more difficult problem to solve and regular maths is more reliable for such a well defined problem. 
If you're looking for a kivy 2d game tutorial, there are a few linked from https://github.com/learnleapfly/gamecamp/wiki; e.g. https://github.com/learnleapfly/galaxy_invaders 
I guess it's hard to say without looking at the underlying data. 
I was thinking to project color light strips onto a surface, say if A strip land at left-3cm of a photo, I know it's at a distance of 4cm from the camera and if I push the plane forward, the position of the strip on the photo should be shifted (I guess?). Can I say like "by knowing how much it's shifted I could calculate the distance of a point from the camera? So that I could generate ponit-cloud data by know the distance of a point away from the camera?
&gt; bably train a Neural network to Thank you for your idea, I will read some material regarding neural network : )
thanks, it does look excellent, but seems not to run natively on windows (we have a mix of 7 and 10 and nothing else, which I should have mentioned originally), and I'd rather not have to support a dedicated machine just for this. 
thanks, it looks good, not sure it does everything I want but it might be enough
sorry, you said that already and I missed it, thanks for explaining further
Not really. Calculating a volume is a very well understood problem and not something that a neural network is very well suited to calculating.
Something that automatically corrects posts on Reddit to not use "alot"?
In general, yes. It depends a bit on how accurate you need to be. To exactly compute the point's location, you need to know by how much exactly things shift (triangle equation), and that is where the calibration comes in (it tells you the exact lines of sight / rays of light for camera &amp; projector). If you don't need a very high accuracy, you can estimate those values from a few measurements where you know the correct real values.
!RedditSilver !RedditSilver
I'm one of the pyglet contributors. The pyglet subreddit here is quite dead, but you can always post over on the google group: https://groups.google.com/forum/#!forum/pyglet-users We recently added a new basic game tutorial to the docs, which you can find here (feedback welcome!): http://pyglet.readthedocs.io/en/latest/programming_guide/examplegame.html The pending 1.3 release will be a solid one. There are some great things planned for the next releases as well. As for the community, I think we'll start to grow it again as we keep on putting out releases. It was stagnant for a while, but I personally feel that pyglet has a lot to offer and is a joy to use. 
 \^_\^ \^_\^
Parsing, machine learning, web applications (Django, Flask) :)
HyperV and we use vagrant to kick things off and then Ansible to install software. Edit; bloody phone autocorrect.
How about a restful API for some service that only offers a web page as interface? That would combine your assets and may leave a useful product behind. What page could be api-y-fied? That might depend on the theme of the hackathon or your preferences. If this is a hackathon with joint teams that build on site, you could partner up with someone who wants to build a service using some service as backbone, then you provide them an API and they build a service in parallel. You just have to define your interfacing api in the beginning before parallel work.
I had the same issue but I was able to install Anaconda on my work computer without IT approval. 
Hi guys, this project is a WIP in the sense that many more providers are planned to be implemented. Current provider list: https://pypi.python.org/pypi/notifiers#supported-providers Still Planned: growl, join, pushbullet, gitter and more... Any feedback is more than welcome
In my experience (limited 4th year undergrad nuc Eng), fortran is heavily used in nuclear &amp; energy sector 
I've been looking for something like this for a while, thank you, really useful.
You can also run it headless if you need to do it without a display 
I actually need the anaconda because I started an online course that works with it, and I wanted to be as compatible as I can. already resolved the since then, thanks!
Already resolved the since then, thanks! (I used an external site that downloads into your drive, and then from the google drive to my computer, it was probably a problem with my ISP)
This is important. I've been looking for something like that. Also, make sure you support some OS notifiers in case you haven't thought about it yet :)
OS notifiers? you mean like toast messages?
Fantastic array and matrix computations. I think it's pretty difficult to match with C++, but ANSI C with the 'restrict' keyword can. Fortran is also much more like coding in python when it comes to matrix operations (although it sucks ass at I/O and complex data structures)
We use it for the backend. The backend of our product is WebApp2 on Google App Engine Standard environment. Some of our microservices requires accessing remote MSSql database. Since it's not supported in GAE SE, I have used Flask on Compute Engine to achieve that. We are also using Python for our document parser which uses a Tensorflow cluster. Although I don't usually deal with it. I also use it for prototyping different ideas, before proposing them. Most of my work involves programming in JS though.
Try the Redmine stack from bitnami.com: https://bitnami.com/stack/redmine. It comes as a installer for Windows that includes everything to run Redmine (webserver, database, ruby and multiple scms). I think you can integrate Github but haven't looked into it since we are running a local SVN server. 
That's apparently a visual novel engine? By "2d game engine", I usually take that to mean everything from Terraria to Flappy Bird.
Automated subtitle scraping:- https://github.com/RafayGhafoor/Subscene-Subtitle-Grabber 
Do you plan to directly support the notification services behind these managed services? Like Google FCM? How do you handle differences between platforms? 
My idea is to use the highest level APIs as possible, so far that was easily accomplished using requests module and stdlib smtp. I'm unfamiliar with Google FCM but glancing over the api it seems there's a web api usage so I imagine I'll use that. Edit: I further read on the subject and I don't see that service being a good fit for the project. My idea was to wrap high level service apis with a uniform, easy to use interface and I'm not sure google FCM or Amazon SQS for that matter fits that. That being said, I'm definitely not flat out denying this idea, just don't see it happening in the near future. 
&gt; My goal is to kill all use of Excel and VBA I think I just found the most concise description of my annual performance plan.
Syntax: not so much, but Go has very few syntactic elements (fewer than Python). I often feel like I'm working with a compiled Python. 
We use Extreme Networks switches. They have a built in python (2.7) interpreter with a library for interacting with the CLI, as well as a JSON-RPC for doing the same thing remotely. I currently use it to automate configuration of new switches. I have lots of other ideas planned, but that is what I'm working on right now.
&gt; but I do not want to use selenium, since it is slow and tedious ?
&gt; g(*f()) &gt; 3 
"Visual novel" is quite a nebulous term. Does an RPG count? Can my visual novel contain animated mini-games like flappy crush? Can I walk around a map in real time like a Zelda clone? (It supports that) You couldn't do Terraria. However, nothing much will - most games of that type are custom code. I'll admit you couldn't do a bullet hell shooter or mario in renpy. But I will also bet no python game of those types outsell renpy products. It's a valid engine to consider if you want $ from python games.
&gt; def __init__(self, input_nodes = []): """Construct Operation """ self.input_nodes = input_nodes Default argument bug there, all default input_nodes will be identical (that is, `Operation().input_nodes is Operation().input_nodes`)
Really neat. Looking forward to Windows support.
- pylint - mypy - pytest In that order. Works well enough for us, we don't really have any large Python projects as we keep most things pretty modular and self contained. Have you tried [pytest-bdd](https://pypi.python.org/pypi/pytest-bdd).
Yea indeed.
&gt;You can start with the free version. Once ready, you can unlock professional development features with Zerynth Studio PRO, available as IDE or Toolchain, in a monthly or yearly subscription plan. Yeah, no thanks. 
I actively develop a software for disaster recovery on PostgreSQL, in Python. (not posting link because this is not an advertising message )
Aaaaaaand I managed to do it yesterday, after spending the afternoon reading about Shell scripting, Docker and understaing a bit more about how GitLab's runner works when `ssh`ing into a remote server.
Minor piece of advice: you should use enums instead of strings for those parameters. Other than that, pretty neat ;)
Go onto stack overflow and your bound to find the answers /s
it's a nice feature but it would definitely require adding more dependencies (windows, linux/unix and macOS have completely different ways of doing this). At this point I'm trying to keep the dependencies to a minimum. Maybe at some point ill create a notifiers[extras] addition or something.
Not sure if this method has been mentioned, but you could always spin up a little Digital Ocean droplet (basically a VPS) that your home computer phones out to periodically (once a minute, maybe). If your droplet doesn't hear from your home computer for more than that amount of time, it could tweet out, in real time, when it loses connection, and then again when it gains connection, and could even keep a running tally of how many minutes you're going without Internet a day. 
I also had a ton of trouble when I was getting started. One thing that I found helped immensely was to just let Python install in the default path, so uninstall and reinstall if you didn't do that. Then, PIP works out of the box without having to fuck with anything. Took a lot of trial and error to figure out that this fixed most of the problems I was having....
Cool idea - I'd be interested to see what you find out!
Starting to get my hands dirty with object oriented programming while making some games in pygame. I'm pretty new to python, and OOP has been a game changer... creating classes for players, enemies, etc is basically the only way to successfully build more complex games as far as I can tell. I'm working on a game console that is an ongoing project. The idea is to build something as a drinking game. 30-45sec games that any number of people can play, and you can compete while drinking. I've made custom controllers to go with it as well. I 3d printed something about the size of a rubix cube and installed different buttons, switches, and LEDs on all 6 sides. The input states and LED colors are controlled by an arduino micro that uses bluetooth to communicate with a raspberry pi 3 running the games. So far, I have the controller connected to the RP3, and properly reading all button states, including the joystick, in a robust way. This was actually a lot easier than I was expecting. The biggest challenges were getting the controller to the point that it could reliably send serial data when a button state is changed, and pygame could read it without errors. The last thing you want is to hit a jump button and not jump. Once I had that functional, I started on some games mostly to develop my programming basics. I have a functional top down Zelda looking game so far with a few enemies that can path around as desired, and the game resets if you hit one. I've created player, enemy, and room classes so I should be able to expand to any number of players/controller easily, and can easily implement new maps that I draw in paint. One of the big challenges on the software side was figuring out how everything is supposed to move together. I hadn't really thought about it, but there are two approaches to things moving in top down games. Either the background is stationary and the guy moves around inside of it, or the guy is stationary, and the background moves around behind him so that the guy is always in the same place. I went with the latter. it took a fair amount of staring open mouthed at my computer trying to figure out what the proper coordinates to draw an enemy at when it paths up and down while your character is moving around the background as well. But i've got it now... and the rest should be easy. Time to figure out how to make engaging short, minigames (think mario party) out of this! 
I work at a semiconductor company(specialize in RF applications, wireless/mobile devices, multiple chips in each iPhone and Galaxy in the past 8-10 years). There's a LOT of in-house scripts written mostly in Perl. Many of them a decade+ old written by folks who were just looking to get a script written and running which means: * no testing * massive repetition of code across many scripts leading to various mutations of core functions over time * little to no variable localization so global variables are king * no IDE used as far as I can tell due to finding mistakes like `if(variable_name)` instead of `if($variable_name)` causing the enclosed code to NEVER run, etc.). These aren't little utility scripts that might help you on a task either. One is responsible for parsing all verification checks(Electronics Rules Check, Design Rule Check, Layout Vs. Schematic, etc. etc.) after the layout process before taping out a design to the foundry and reporting any issues that would either prevent the foundry from processing the design or lead to a product that doesn't work/perform/behave as it should. If one of those designs goes out it's potentially multiple hundreds of thousands of dollars wasted. Needless to say I lose a lot of sleep when I'm asked to work on the Perl script in question(and others that perform similarly important tasks). After driving home the importance of things like testing I've finally gotten some time to rewrite a few of these scripts, so that's where I'm using Python right now. And no, they're not worth refactoring IMO. The most time intensive part is deciphering the current script's behavior and intentions, not writing it in another language.
You will be able to use Python with Godot 3.0. 
I believe that these wheels can not be installed on OSX since their titles all seem to say "\*-win32" or "\*-win_amd64", meaning the external code which needs to be compiled is compiled specifically for Windows. You are likely going to need to build these packages for yourself. After installing a compiler, this is typically as easy as running Pip for all of the packages you need. 
Thank you /u/ grumbelbart2 I finally noticed a program on github (by https://github.com/kshi219/3dScan) stating "Structured light decoder and re-constructor in python without the use of any vision libraries" XD. I will work around with this program first. Finally got one written in simple code coz I know really a little about programming XD (only know some simple print and variable function at this moment). As a freshly graduated biologist, I really needa work hard on those tiangulation maths @@.
While not likely directed at your target GUI, the concepts remain consistent regardless of the framework, so you should, once you understand them, be able to adopt them for your target GUI. I suggest starting with: https://developer.apple.com/legacy/library/documentation/Cocoa/Conceptual/CocoaFundamentals/CocoaDesignPatterns/CocoaDesignPatterns.html#//apple_ref/doc/uid/TP40002974-CH6-SW6 It is a legacy document, but still quite useful. I would also suggest: Cocoa Design Patterns by Erik M. Buck, Donald A. Yacktman, Aaron Hillegass My other favorite design pattern books are: Design Patterns by Gamma, Helm, Johnson, Vlissides Head First Design Patterns by Freeman &amp; Freeman Design Patterns Explained by Shalloway Trott 
So /r/learnpython first off. Next, you gotta indent your code 4 spaces and have a blank line in between your words and the code.code. Also, what's your error? You're calling sort twice. You're also sorting words, but told the user to enter numbers, which changes the "right" answer. 
!RedditSilver
Is this course any good?
Saved it , will learn it after I perfeft flask.
&gt; After installing a compiler Surely OSX has a compiler?
This is neat!
Read the standard library documentation and don't be afraid of numpy/matplotlib/etc.
That website is specifically for Windows builds of popular Python libraries, because they are hard to build on Windows (which doesn't usually come with the necessary developer tooling). On a Mac, once you've installed the OSX dev tools, you can just install these directly from PyPI using pip.
 def __init__(self, options={}): That looks like old school ruby. The pythonic way is to do something like this def __init__(self, *args, **kwargs): Or in your case, you can probably skip the args part since it looks like you’re expecting a dict. However, I find that this makes documentation and use much more difficult. I prefer the approach that libraries like scikit-learn take. If you have a parameter that can be used, list it in the definition (but name things better than sklearn does, please). Spell it out. That way my IDE or even my tricked out vim install can give me a list of possible parameters and what their default values are. At the moment, to use your constructor, I’d have to dig into your code to see what all the parameters might be. And as the code maintainer, you’ll either have to make it hard to use your code or you’ll have to make it clear using comments. And if you add, remove, or change a parameter, you’ll have to remember to add, remove, or change the documentation, too. 
Machine learning, web development, data science, automation. Whatever you want to do with it.
Also it is not a good idea to specify a mutable as an argument default.
A someone who deals with a large codebase where *args and **kwargs are frequently used: I wholeheartedly agree. Explicit is better than implicit.
&gt; def __init__(self, options={}): It is also dangerous because the dict is mutable and bound once only IIRC. Better do: def __init__(self, options=None): self.options = options or {}
Yeah the documentation is good for reference. Youtube also helps a lot for understanding advanced topics like generators, decorators, oop etc.
What does this do to pipes?
I do not really know much about OSX, but my understanding through passing around the interweb is that OSX does not have a compiler installed by default. From what I understand, there is Apple's Xcode compiler, and there are methods of installing GCC and/or Clang. The latter two can probably be installed relatively easily via Homebrew. 
Bring up your developer console (F12) and have a look at the requests being made by your browser and recreate them in python. Alternatively you can copy the requests as cURL, import it into postman chrome extension and then have that generate the python code for you.
Until you show us actual code, or more details of what you actually submitted, we can't help you. Could be a myriad of different reasons. If you want to scrap a web page, just use a botnet to DDoS it instead, I hear that's quite the _scrapper_—#mildlyhumorous. I believe the word you want is _scrape_.
Great point. That slipped my mind. 
One of our senior guys has put together a file watching pynt script that makes up part of the skeleton of all our Python repos- it just runs everything through py.test. Heavy use of pyMock and pyHamcrest to make writing tests a bit more intuitive. Jenkins for CI doing the aforementioned when code gets merged in from a feature or bug branch
Try [official Python tutorial](https://docs.python.org/3/tutorial/) and [Scipy Lecture Notes](http://www.scipy-lectures.org/)
I'm guessing you meant to write "perfect" but I think I like this new word "perfeft" that you've created. Maybe it accurately evokes the idea of "get really good, but not perfect" or something.
I agree with everyone else here, the utility is great but the API itself would be better off if you used actual arguments instead of passing in a dictionary. A few reasons: * You only have a few arguments anyway so using a dictionary doesn't give you any benefits * It's much easier to catch errors with actual parameters, because a typo won't break the code. Using dictionaries, a typo could be hidden for a long time. * It's better in editors where auto complete and intellisense will tell you what parameters a callable takes. That means you don't need to read the documentation just to remember each of the options. 
I know nobody can be perfect especially in programming, what meant by perfect was actually according to my standards(perfeft). Hehe
i'd recommend to keep your library focused on one useful thing and ease of use. desktop notifications seem like a different beast to me.
This isn't just about Python, but programming in general: Learn to reason through your code. Not just what you *want* it to do, but what it's actually *doing*, and why.
I know a bunion named mb 
I work for a team that writes automation framework for a significant POS product using Python. We also create a number of interesting Python tools to automate the boring stuff. For example, I count all of our test scripts on a daily basis using, you guessed it, a Python script. I like what I do.
Sensible is a CM tool? We use vagrant and salt stack for this. Vagrant for vm provisioning either locally or in vcloud, and then salt to configure the target VMs. Works really well.
how does this work?
Bloody autocorrect. Ansible.
Cool :)
Better look at Free alternatives : MicroPython or CircuitPython
Why not use the default Python IDLE? Can't help with the actual question however, just curious as to why nobody uses the thing! It's great!
Have you made anything significant?
3.
You can try it. It's rate very high, but it's for limited time 
May I know what sort of workflow this is?
Hello, as I understand from your question you would like bigger figure ? In the website, you could display only one image by row. If it is not big enough try to play with matplotlib figsize : fig, ax = plt.subplots(figsize=(x, x)) Doing so when a user saves a plot from the website or displays it a new tab it will be bigger. I don't know "matlab based sgv image", sorry I did not use matlab for five years now. 
First and foremost, since you're doing physics I'm guessing you're a student. If that's correct then check the library at your school for books. They may not have physical copies but my have access to online copies of many books about Python programming; I know my University does. I recommend the Python for Data Analysis book from O'Riley publishers. I often used it as a reference if there's a quick topic I need to refresh on. You'll likely want a more intro level book or resource first, however. Be sure to check out /r/learnpython 
Didn't even think of checking the library, good idea. I've had the MIT course on edx recommended, so I'll try to weight that against other resources &amp; anything I find in the library
3
It basically calculate the weight of the fuel we burned the day before, and converts it to gallons of sea water. Then it does some ship stability math to figure out how much water is actually needed and where. Wake up, copy and paste the morning fuel numbers and choose your ballast tank from a list. It spits out add ballast to tank 5 for 3 minutes for example.
Thank you for the feedback. I learn a lot when someone reviews my code. Yes, I'll fix that soon. Thank you for going through the code. :D 
Hi, thank you. Windows support is tough since CMD and Powershell implement don't implement UTF-8. I would need to explore more to overcome that. I would love your inputs here. https://github.com/ManrajGrover/halo/issues/5
There is https://moonscript.org/ Which «fixes» Lua in same manner as coffeescript fixes javascript.
I could not get the default Python IDLE to run any code. I then tried to change the default keyboard shortcut and still nothing happened when I tried to run Hello World to test it. am I doing something wrong?
Makes sense. Thank you for sharing this. I'll fix this soon and would love your feedback on it once done. Could you please open an issue regarding this so that we can discuss this further?
if you have a complicated interface, the flux pattern is pretty helpful https://github.com/facebook/flux/tree/master/examples/flux-concepts
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [facebook/flux/.../**flux-concepts** (master → 520a60c)](https://github.com/facebook/flux/tree/520a60c18aa3e9af59710d45cd37b9a6894a7bce/examples/flux-concepts) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dnt7p55.)^.
First, -&gt; /r/learnpython, not here. Your problem is: numpy.distutils.system_info.NotFoundError: no lapack/blas resources found You need to install a compatible LAPACK/BLAS library, such as OpenBLAS, before you compile SciPy. For details, read https://www.scipy.org/scipylib/building/index.html.
Thank you for detailed feedback. I agree a lot can be done to fix the quality of code and api itself. This feedback is valuable. I'll have a look at sklearn's way to pass params and try to implement it soon.
&gt; Explicit is better than implicit. I forgot about it. Thank you for bringing it up.
Thank you for sharing. I'll fix it as soon as possible. I would love to hear more on code quality and fixing those too. It helps me learn and write better code.
Maybe posting the actual start of the complete beginners guide instead of plopping down in the middle of "Part 5 - protecting views" would have helped? https://simpleisbetterthancomplex.com/series/2017/09/04/a-complete-beginners-guide-to-django-part-1.html
And I can't just do that with pip? I really don't want to manual-install and have to fiddle around with directories to find out where to put it.
Break up your task into modules and then get them to work together instead of scripting one long task in a single module. This way you can reuse some of the modules in the code without having to re-write it. Example: Instead of: one module that goes to a specific website, scrapes the info for a value, and then puts that value into a database Do something like this: one module that goes any generic website and saves the data, another module that scrapes the info, then another module to put the value into the database. (You may even break it down further) This way, if you decide a week later you want to scrape from an additional site and save it into the database, you can reuse some modules instead of reworking the entire thing and doubling your code.
Don't know if BeautifulSoup has other advanced tricks that I don't know. I had to search all links and did post-processing to get the items after s=ta_oversold.
Docker (and other similar providers) containers are used to isolate environments and processes. Natively in Linux this utilizes cgroups (limit resources) and namespaces (process isolation). The benefits of working with containerized workloads are (but not limited to): 1. A consistent development experience (since a container is a fairly isolated entity, running a container on a dev machine and a production server should be an equal experience) 1. Easy and quick (containers are sometimes short-lived. E.g. stand up a container and do some work and then stop and remove the container) 1. Disposable (much like the above point, instead of troubleshooting the container it is at times easiest just to recreate it) 1. Great for DevOps (containers are a natural fit for a modern CI/CD workflow) 1. Very plugable with schedulers and orchestrators (there are a handful of schedulers out there, like Kubernetes and Docker Swarm. The primary concern of these schedulers is to run containers at scale to include things like scheduling across a cluster, rolling upgrades, rolling back failures as well as a vendor-agnostic Platform-as-a-Service environment) Those are just a few of the benefits. I highly recommend you do some searching, this is a well-communicated discussion. When to use them, why to use them, and definitely how to use them. As for specific Docker images, due to the lightweight nature of containers and the way Docker approaches this, images are pretty much just "layers" of operations that are applied. This is what allows them to be easily created and updated, as it isn't "from scratch" every single time. For instance, the `python:alpine3.6` Docker image is a good vanilla Python base for us types. We don't have to worry about much, just plug your application into that `Dockerfile` and build the image off of the spec. Then you can create your container off of that image. A very real benefit for us Python developers is that we no longer have to deal with things like different Python versions or dependencies with that approach.
That's telling me to install 10 different things and read through 10 different pages of installation instructions. No quick command line installs, I have to literally get all this shit with complex install instructions, and then probably fiddle around with getting them in the right folder path. This is bullshit why do I have to do this? It just links me to 10 different pages all with instructions for installing different shit.
PyCharm is probably one of the more popular choices for Python developers. Take a look at it, it's a fully featured Python IDE. I personally use Vim for all of my Python development (and more). Lots of people don't enjoy that experience, though. My recommendation is to try what people are using (PyCharm, VS Code, Atom, etc.) and just use the one that fits you the best.
Ok it says this on the page &gt;it is quite easy to install using Cygwin. Just search for openblas and lapack in the packages that you are downloading, and they will be automatically installed into your usr/lib directory, But it doesn't tell me HOW I'm supposed to "search for openblas and lapack in the packages that i'm downloading". What's the command line command to do that? Why don't they tell me this? The instruction says "just search for it" HOW THE HELL DO I DO THAT.
I like nano but was looking for something a but more comfortable than terminal, for lazy days where I wanna point and click. I'll check those ones out though, thanks for the input
I'd say PyCharm or VS Code is probably going to be your best bet then, given that information.
By the way, this is a very cool project! Thank you for sharing.
there are guis for vim: macvim / gvim / neovim . so you can have the best of both worlds there, if that matters. Probably the same for emacs.
I am a test engineer at a hardware company. I write some quick test modules with it and use it to analyze certain tests that take forever to do by hand.
Just be weary of always using alpine - a number of libraries I've tried to use on alpine refuse to build/connect to python there. Anything that requires more than pip (and even that isn't guaranteed to work) can become quite tedious to fix in Alpine and oftentimes it's easier just to get python:3.6 which is a Debian based image. Alpine is definitely the best if it's a bare bones approach but anything more complicated can lead to frustrations (installation/available programs in the docker for troubleshooting/etc, especially for someone not familiar with docker and Linux in particular).
Looks like the biggest challenge will be in using services that require complex auth headers. Creating some kind of generalized system for signing requests, along with method hooks for customizing them, will be necessary in order to support providers like AWS SNS. For AWS SNS, for example, there are a few libraries that integrate with `requests` to build the correct authentication headers. Here's the source code for one of them, [aws-requests-auth](https://github.com/DavidMuller/aws-requests-auth/blob/master/aws_requests_auth/aws_auth.py)
Absolutely! Do most systems even provide a web-like API for their notifications?
I haven't personally run into any alpine woes, but I'll definitely be keeping this in the back of my mind. Thanks!
100% check out the book "Automate the boring stuff". You can read the entire book online for free or buy a physical copy. It was a perfect starting point for a non-programmer like myself. All examples are very tangible and not too computer science-y. 
Trying to build a `curses`-based TUI for [my RPN calculator](https://github.com/pilona/RPN), but in CBREAK mode and without having to reimplement all the editing and control key bindings (i.e., backspace, refresh); want (n)`curses` to just modify my buffer for me. Maybe add `readline` integration… were the Python bindings not so minimal.
3
Sklearn was just the first thing that popped into my mind. If you have parameters, just name them is all. Don’t do this: def __init__(self, options = {}): assert isinstance(options, dict) if ‘name’ in options: self.name = options[‘name’] else: self.name = ‘’ Instead, do this (assuming name is optional): def __init__(self, name = ‘’): assert isinstance(name, str) self.name = name (The above was typed out on my phone, so it’ll probably have errors. Hopefully you get the idea)
Try `pip install scipy==1.0.0rc1`, version 1.0+ now has prebuilt wheels for most platforms
Don't even bother trying on Windows, honestly. Just use anaconda instead. If for some reason you can't, get prebuilt packages from Christopher Gohlke's site here: http://www.lfd.uci.edu/~gohlke/pythonlibs/
WHUF dot com
&gt; This is bullshit why do I have to do this? Because you're using an operating system designed for grandmothers?
OpenBLAS isn't a python program.
Why is this even still a question in 2017? 3!
3
3! = 6 Are we that far yet?
Wow. This tutorial looks really good! I can't wait to try it. 
Calm down. Yes, if you want to use Cygwin, you are walking the hard path. You're supposed to read many pages of documentation, install many libraries, learn to use the compiler, etc. SciPy is a complex module written in C and depending on external libraries. On Linux it is indeed easy pip install, maybe with additional apt install for some packages. On Cygwin, you are on your own. If it's too hard for you, well, maybe you shouldn't use Cygwin in the first place. Why do you need Cygwin? Can't you just use Windows python installation? If you use Windows 10, there is also Bash for Windows, where you can install SciPy more easily.
On that note, don't be afraid to request a book ok loan either. If you find a book that's been recommended but the library doesn't have it, ask the librarian if you can get the book on loan from another library. They will gladly help you if possible.
Would you recommend Django over flask for someone new to python? If so, why? From the bit of google fu I've done so far it would seem that Django is more complex yet better established and perhaps better documented.
In Python 2 you can separate a method from the instance and end up with something that can't be called on it's own (an unbound method). I don't think that happens in Python 3.
This is great! Definitely looking forward to trying this out soon
Check out the [**Resources**](https://github.com/enteleform-presentations/-2017-07-22-Kivy/blob/master/Pages/Resources.md) section of my [**Kivy Presentation**](https://github.com/enteleform-presentations).&amp;nbsp; There are a few links to tutorials that you might find useful. If you're familiar with JS, check out [**TodoMVC**](http://todomvc.com/). Also, familiarize your self with [**General Design Patterns**](https://sourcemaking.com/design_patterns), many of which are used in common GUI frameworks. &amp;nbsp; Here are a few relevant books: * [**Python Crash Course: A Hands-On, Project-Based Introduction to Programming**](https://www.amazon.com/dp/1593276036) * [**Designing Interfaces: Patterns for Effective Interaction Design**](https://www.amazon.com/dp/1449379702) * [**Game Programming Patterns**](https://www.amazon.com/dp/0990582906) * [**Don't Make Me Think: A Common Sense Approach to Web Usability**](https://www.amazon.com/dp/0321965515) * [**The Design of Everyday Things**](https://www.amazon.com/dp/0465050654) 
Seaborn might be along the lines of what you are looking for.
For simple logic like that (many iterations over simple data structure) you could also give https://numba.pydata.org/ a try. Just stick a `@jit(nopython=True)` on your function, fix up a few minor uses of python objects and be amazed by the speedup!
Thanks, i've not seen numba before. Looks cool! I'll give that a shot. In the assignment we weren't allowed any imports (otherwise numpy would have been fair game) so this would have failed the auto grader. I'm curious to see if the jit-ed version of the original code would have beat my handrolled version though. I did try running my original code with pypy and surprisingly didn't get any significant speedup. On some other assignments my test cases run 2x faster out of the box with pypy. Though it's possible I did something wrong. 
Made me lol, I'll admit it.
I don't know if I "need" Cygwin. All I know is that I have Python installed on my machine, but I can't run it through the Windows cmd, I've always had to run through Cygwin for python programs. Google says you have to add "C:\Python27" to your environment variable path to get it recognized in cmd. But that directory doesn't exist on my machine. I don't know where Cygwin is getting python from to run python code, but it's finding it somehow and cmd isn't. How do I get cmd to find it? Just download Python2.7 again? That seems like a waste of space on my machine though.
As /u/billsil mentioned, providing more detail will allow people to better help you. Formatting is key, because right now, it's up to each reader to interpret how your program might be structured. Here's how I interepreted it to read: def front_x(words): x_list = [] other_list = [] X_list = [] for word in words: if word.startswith('x'): x_list.append(word) elif word.startswith('X'): X_list.append(word) else: other_list.append(word) return sorted(X_list) + sorted(other_list) while True: words = input('Enter a number: ') if words == 'done': break front_x.append(words) print(front_x([words])) Your front_x function is fine. I think you'll be seeing most of your issues outside the function. Some things to consider: You'll want to clarify your input message (I'm assuming you meant to prompt users to 'Enter a word'). The variable words will only be equal to one 'word' at a time. You'll want to store them in a separate list that then gets passed to your front_x function (I'm assuming you intend for the words parameter to be a list of words). front_x as you've defined it has no append attribute. So you can't call .append() on front_x. But that won't matter since the placement of the break (as I've interpreted it at least) ensures it won't be called at all. So you'll either need to remove it or move it outside of the if statement...and then change what you call append(). When you call front_x in the print() statement, there's no need to wrap the parameter with [], as long as you ensure the parameter is a list beforehand. If you address the above items, it'll probably begin to do what you intend. If you have follow-up questions, just ask!
Django is very similar to flask. Templates are the same. Django describes itself as 'batteries included' whereas flask is more do it yourself. In my opinion, Django is better in a lot of ways. Django has a really nice admin interface. You register models with the admin page and it automatically creates admin forms for creating, updating, and deleting things from the database. Django also handles authentication and has a base user model that you can use. I don't know much about flask, but it seems like there is a lot you'd have to do in order to get to the basic Django environment.
3
pervfefe
Very much a WIP but the challenge is to develop a system to cut portions of video clips based on their content and transcode them to varying formats. This was born from a project involving automating archiving steps for finishing large video editing projects. 
Do yourself a favor and download anaconda. It doesn't matter if you want to use the 2.7 or 3.6 version. That will install python and tons of modules. Then, do $ conda create -n py34 python=3.4 Then $ source activate py34 **EASY**
Pycharm is just significantly better for debugging than IDLE. Why print/log all the variables when you can just put in a breakpoint and inspect everything?
Would doing things in a Docker image be similar to using `conda` and/or `virtualenv`?
No, pandas, sqlite and matplotlib. Just starting to use bokeh for a web app. I think web apps is the way to go.
I found this one: https://pypi.python.org/pypi/cryptotik/0.2.8 Works really well. 
Only if you need all that extra environment. Depends on the scope of your problem, and what you consider valuable.
Try /r/learnpython . Show them any code you have so far and describe where you are stuck. 
Have you learned decorated and generators? I thought I didn't need them when I started so I just skipped them.
I set up pip in windows cmd now, and trying to install scipy, but it's giving me an egg_info error now. I don't get it, it's not the same one as I saw in Cygwin.
Working with a guide to build a simple blockchain. Currently troubleshooting some what I'm guessing to be 3.x vs 2.x syntax differences.
Got any tutorials that you are using to stand up web apps in Flask? My goal is similar these days, but I need to up my knowledge with Flask first. 
First write out the math by hand. If you need help with the math try /r/learnmath. Then if you need help turning that into code try /r/learnpython. 
What do you like about it in particular?
Looking at your code I noticed that you are using logging, which is good, but you aren't using it as the logging how to suggests. In particular, you are setting up logging in a library as one would in the script to be executed. You shouldn't set up logging for the user of your library, as that will only frustrate the user. The logging how to says to do this in a module intended to be used as a library: import logging logging.getLogger('foo').addHandler(logging.NullHandler()) https://docs.python.org/3/howto/logging.html#configuring-logging-for-a-library Also, you imported cursor with the standard library modules in your imports. This is confusing, as one who reads your code should be able to tell what is standard library and what is not by the order the imports are in. http://pep8.org/#imports Imports should be grouped in the following order: standard library imports related third party imports local application/library specific imports You should put a blank line between each group of imports. (I personally alphabetize the imports as well, with module level imports first, then "from" imports for each section as above.) Example: import os import time from csv import DictReader import cursor from spinners import spinner
I personally use Linux, but most of my code ends up running on Windows, would love to have this on Windows.
Django vs RoR, I'm been trying to pick for months and cannot decide. 
Honestly I don't really get it. The whole wikipedia article describes cohesion as a qualitative measure, but you've defined some seemingly arbitrary scoring rule. Where is that formula coming from? Do you know anyone who has actually used this tool in a real project with positive results? I'm legit curious about what a high-cohesion python class should look like in practice.
PyCharm manages to, though I don't know how it works. It might be worth installing it and trying from there to see how exactly PyCharm does it.
`flake8` is my preferred static analysis tool. It's reasonably comprehensive, and unlike `pylint` you can sensibly run it with standard settings on almost any project. `mypy` is wonderful. That said, much of the benefit is how it shapes your design to allow for static checking of type-correctness, so there are some projects where I wouldn't bother. Good for applications, best on Python 3.5 or preferably 3.6, but probably not worth the trouble for existing projects on Python 2. But *magic* on new 3.6 projects! `py.test` is the best way to run any tests. Use CI too - which doesn't matter, but Travis is free and easy to get started. [`hypothesis`](https://hypothesis.readthedocs.io) makes the tests you write enormously more powerful - instead of testing with example data, you can (with less effort!) test with psudeo-random data, which uses `coverage` to exercise *every* code path and then simplifies to a minimal counterexample for each distinct bug it finds. `coverage` is the best way to discover what your tests are actually testing. That is, the best easy way - fault injection is actually more powerful, but takes too much human time to run in CI.
First, I'd suggest reading the sidebar. 
Personally I use click a bit but I always come back to argparse. Click has some weird opinions (like not handling -h by default) and it's harder to do some structures of parsing. Also eventually your code just looks ugly with tons of decorators everywhere and you cant do dynamic creation of parsers either. All in all, click is useful for smaller tools but the bigger my tool gets with more options, the more I just end up going back to argparse
if in django "batteries are included", and in flask you "install your own batteries", then I can only assume django is better for beginners. Don't want beginners to do things the wrong way, instead you should just provide a default workflow for them. Never used either of them, but this is what I assume from what you said.
Awesome, looks really promising! Im happy to see anything that contributes to the Python gamedev ecosystem.
Was about to ask the same question .
Thank you so much for the explanation. Do you know of any kind of resources that help in bootstrapping about docker so that I can understand the practical aspects of it?
Django dumps you in the MVC deep end. It can be pretty hard to grasp what's going on for beginners. I think Flask is better because you can start simple and immediately see what the Python is doing and build upon it. Then you can see all the stuff that Django is doing and be grateful for it.
!RedditSilver !RedditSilver
!RedditSilver
that makes sense. In that case, i'm glad I will be coming from PHP + Laravel by the time I start learning python + django
https://github.com/mdipierro/nlib/blob/master/docs/book_numerical.pdf
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [mdipierro/nlib/.../**book_numerical.pdf** (master → 2ba136f)](https://github.com/mdipierro/nlib/blob/2ba136f6eafb5a0a7f219adc54a8619ea5fb3b59/docs/book_numerical.pdf) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dntx36o.)^.
The "immediate-mode graphical user interface" is becoming more and more popular these days, where the GUI is basically constructed from functions rather than objects (this is a horrible oversimplification). https://github.com/chromy/cyimgui
In that case, I'd say that I'd you prefer extremely terse implicit programming, then Ruby. However, if you want slightly longer explicit programming, then you'll pick Python. And then you'll pick the framework that follows.
I see. Thanks! One thing - In a scenario - say argument `--top` can only be used with `--arg1` and `--arg2`. Can argparse handle such situation natively? (That is without using conditionals `if/else` statements)
&gt; based on their content So are you using OpenCV to object detection?
I tend to agree. There are a few times that I have used click and just loved it, but I wouldn't want to use it for anything much bigger. As nice as these alternate CLI libraries can be in specialized use cases, argparse is what I reach for when I want a very easy to understand API, even if it's more verbose than something like click. However, I have used traitlets before somewhat experimentally and really liked it. There's a fair bit of metaclass magic going on, but it's very powerful and comes batteries included for building more complex applications. It's what the jupyter ecosystem is built on, and includes the entire configuration system. You can also just use traitlets to define constraints on objects, with magic methods, validation, and observables built in. I don't really see others using it much though, and last I checked the docs needed some work. 
Unfortunately it's not built in but it's fairly easy to wrap that behavior.
Will do! when I'm back at my PC.
https://docs.python.org/3.5/library/argparse.html#argument-groups Either argument groups or mutually exclusive groups could be used depending on your situation. 
This should be in the standar library.
...written by Bill Murray from The Life Aquatic?
Thanks, that's a great reference! I'll definitely take a closer look at that 
For stuff like this there are code checkers (pylint, pyflakes).
Wow I just started this yesterday. If anybody is going to start, use linux, and use python 3.6, let me know. There are a few little differences in the first page that you need to get started. Basically, use this website to get to the point to setup python 3 and get the environment going. https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04 Then go back to the OP page 1, and go to the step 'Installing Django 1.11.4. This is set me back hours because I'm a complete linux noob, and using the command python is different than python3 which is different than python3.6. Oh and venv is preferred in python3.6.
If you haven't seen it all ready you might be interested in [Performance Tips](https://wiki.python.org/moin/PythonSpeed/PerformanceTips).
Maybe have a way for external notifiers to "register" so people can make their own custom notifiers that get hooked into it?
I don't have a ton of time, but I'd be happy to help out if you decide to do any work on that. I've done some stuff with SNS in the past — although admittedly using boto, not rolling my own authentication.
No. The right answer is to install Anaconda. Literally, that is why we created it. Because 10+ years after Scipy was created, people STILL COULDN'T INSTALL IT PROPERLY ON THE MOST POPULAR OPERATING SYSTEM ON THE PLANET. http://anaconda.com/download
Ignore the hipsters. Scipy is less daunting but still error-prone on Mac and Linux. If some unix propellerhead gives you a hard time, ask them what version of BLAS they're using, and what gfortran arguments, that gives them GPU compatibility with both MKL and Tensorflow. That should shut them the hell up.
Just stop hurting yourself. pip, easy_install which predates it, and setup.py were NEVER designed for the kind of upstream non-Python library dependency hell which the Scipy and Pydata ecosystem requires in order to work properly. Just use Anaconda and conda.
This is precisely one of the reasons we created Anaconda to be able to install without requiring administrator privileges, and entirely into its own self-contained directory. Glad it's working out for you!
Thanks. I read about it earlier. Gonna give it a try.
Yep. I do have a working piece. I think argparse group/mutually_exclusive_group can resolve this.
I'll first give argparse a try. If it does not help in resolving (I think it should), will try traitlets. Thank you :)
That's the goal. To have openCV look at the files frame by frame to see if there is a face. If it fill a certain portion of the frame it would be classified as an interview and organized accordingly. The challenge though is that most interviews are filmed with the subject looking just off frame at a 3/4s angle. I do not know much about openCV or the object detection but it's very interesting so far. It would be very cool to get openCV to do actual classification on clips to organize all the source material from a shoot into a database.
You should be using Python 3 for anything nowadays.
Python has a huge amount of very useful third-party libraries. Install Anaconda and take a look at some of them.
Oh, also, test your code! Test your code before you write it!
I normally recommend Flask to beginners who want to really learn and understand what they're doing. I recommend Django if you're more focussed on getting something up and running quickly, and are happy that some things might seem "like magic", or you know that you have to do them, but you're not sure why. I wrote up a longer comparison and some pros and cons of each here https://www.codementor.io/m/dashboard 
Good idea, but I'm not going to add a dependency to my project just to print a spinner on the terminal. I appreciate your enthusiasm, though.
[configparser](https://docs.python.org/3/library/configparser.html), [lxml](http://lxml.de/), [SQAlchemy](https://www.sqlalchemy.org/), [logging](https://docs.python.org/3/library/logging.html)
Just pick one and go for it. The second language/framework you learn is way easier than the first. Especially when the languages are as similar as python and ruby. Overall I found the hard parts of learning to use MVC was getting a mental model of the architecture, which is pretty much the same for both.
You should google the $PATH variable. It's how your system finds what program you mean when you type anything into your terminal. Not grasping that hurts a lot when setting up new environments.
Thanks for this, I've decided to so some basic stuff with flask then start with Django for comparison. 
yeah, sounds like a neat idea to do someday. I'll give it some thought!
excellent. Thanks for the response.
Because according to [The Zen of Python](https://www.python.org/dev/peps/pep-0020/), flat is better than nested. Flat code is more Pythonic. 
Oh sorry, I forgot to thank you for pointing me in the right direction. Still haven't got it sorted because Scipy won't DL properly but that's Ubuntu for ya Anyways, thanks!
What are the cons of nesting it?
None, technically. It’s a stylistic thing, and like most things that are “Pythonic,” these coding sensibilities are passed from one programmer to the next as tribal knowledge. Arguably, flat code is easier to reason about, although these things are more like guidelines than rules. Edit: Another way to say this is to think of your lines of code as sentences, your functions/methods as paragraphs, your classes/modules as chapters, and your program as a book. Literate Programming is based on the observation that code is written for humans to understand, and only incidentally for computers to run. Similarly, code structure is meant to separate out coherent thoughts at various levels of zoom, and only incidentally for code reuse. This is just the way that I think about it. 
Make sure to use https://pypi.python.org/pypi/defusedxml on top of lxml.
You see it when you write a decorator by hand :)
great suggestion!
It's more like if your address book contained your address book... Which, being the same address book, also contained your address book... And so forth!
I prefer Spyder for all my coding in Python
I do this quite a bit when a portion of code is duplicated in a method but no where else. I feel like the scopes nature of the inner method allows me to read the code more clearly. 
[removed]
In addition to /u/Brainix comments, having a nested function makes it harder to unit test. In your example the only way to unit test\_throttle would be by unit testing throttle_validate.
I see where you're coming from.
Where is that? 
See my comment [here](https://www.reddit.com/r/learnpython/comments/6ykox4/how_can_i_install_scipy_module_in_windows_10/dmoacvm/). Installing scipy directly from pypi requires compilation (until version 1.0 is released).
Is there any performance benefit due to the inner function being defined only once when the module is imported in the second example, while it's being defined every time the outer function is being called in the second? Maybe it's cached, does somebody know?
Flask is so minimal and so so easy to get up and running. I did my first web project in Django and whilst it works fine, I much prefer working with flask.
But unit testing is not testing against implementation. If a function defines and call a nested function, then by definition that nested function is a private implementation detail, and your unit test for the parent function should not be caring about it.
Python and Django have less magic then RoR.
Check out Jupyter Notebooks. They're basically the standard for sharing information nowadays. I started out with the Scipy Lecture Notes, linked by someone else. Allen Downey also has talks/tutorials/books/courses related to Python for physics. Finally, look into tutorials for packages you'll probably use, like [astropy](http://www.astropy.org/astropy-tutorials/), [pandas](https://pandas.pydata.org/pandas-docs/stable/tutorials.html), scikit-learn ([here](https://github.com/jakevdp/sklearn_tutorial) and [here](http://scikit-learn.org/stable/tutorial/index.html)), or [yt](http://yt-project.org/doc/quickstart/introduction.html). Oh, and matplotlib/seaborn for making pretty graphs, or bokeh if you want to use a web interface.
True, but there’s another case where it’s worth testing the “private” method by itself. If you write the code flat, then it’s up to you whether to test the “private” method or not. In either case, your unit tests should tell a story, but that’s another story…
Wouldn’t 100% off be free? Not $19?
As mentioned before, RoR has more magic. Also it is easier to find help and support when using python/django. At least that's what i experienced.
The inner function has to be instantiated for every outer function call, so it is very likely to be slower than to module/class defined function, where each function is instantiated only once.
As I mentioned under a comment below, the inner function has to be instantiated for every outer function call, so it is very likely to be slower than to module/class defined function, where each function is instantiated only once.
There's support for MongoDB? 
It looks to be clear, engaging, and comprehensive enough to provide a decent starting point with Django. The web site looks very nice and clean too!
What do you mean? Can you give an example? Also, please post questions in /r/learnpython next time.
I'm all for optimization, but any efforts would be overshadowed by Django Rest Framework instantiating the entire Serializer class for each request :( tbh it seems quite wasteful, but I don't have enough experience to understand why they do it this way.
No, you can't. Python doesn't support running binary modules directly, you need a wrapper script.
I understand, these wrapper scripts are quite easy but going back in the development could be a pain Thanks!
A .so file is shared library so it is not meant to be run. Furthermore, it is a C library, not Python. It is explained here: http://cython.readthedocs.io/en/latest/src/reference/compilation.html
thanks!
There is support for SQLite, MySQL, PostgreSQL, Oracle and Firebird databases. It does not currently support MongoDB.
&gt; There is structured, unstructured, xml, rdbms, images, spreadsheets, csv, you name it, to extract from one system and insert into another. Maybe a look into pandas will be worth it. It offers alot of different im- and exporters for all kind of stuff: xlsx, csv, sql (with SqlAlchemy as connector), hd5, html/xml (if well structured), json and more. Pandas is the tool you want to use if you deal with any kind of tabular data, loading, storing, trimming and processing will be much easier and faster than with some self written methods. Just take a look at the [10 Minutes Tour](https://pandas.pydata.org/pandas-docs/stable/10min.html).
how does one use a one-file engine? https://github.com/adamschackart/HackmanGames/tree/master/pyxl a 2D python games engine would be nice if it were versatile.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [adamschackart/HackmanGames/.../**pyxl** (master → 54b24e2)](https://github.com/adamschackart/HackmanGames/tree/54b24e25ccc32e26a990cc81ae644d6ae32711f3/pyxl) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dnuato9.)^.
What about [Godot Engine](http://godotengine.org/) though? I mean new stuff is always great and all, but Godot has GDScript is mostly Python with some changes to make it work better with the engine. Seems like this engine is, just like Godot, featuring a seperate 2D and 3D engine, so maybe the effort could go towards an already somewhat stable engine and help out there instead of carving out yet another python gamedev engine like pygame that sadly didn't work out either.
Oh!I am so sorry about the confusion and the wrong place to post,didn't even notice... To respond tho to your question of what i mean is: I want a random generator to populate diverse variables on a step. Like import the random number in a,b,c , run the script, next random numbers in a,b,c, etc.. I hope i made some sense.
Good suggestion! And I see it comes bundled with ActiveState Python. 
So you want to generate random values for `a, b, c`, then do something with them, then generate new values, do something again, etc.?
This crashes if you don't have cp1252 as your default ANSI encoding (or probably cp1251, I'm guessing). I'll get back when I find out more. EDIT: I'm using cp1253 (Greek), and I've found a couple (so far) problems. The crux of the matter is: don't read as text, read as `rb`, that's what's `to_unicode` is supposedly for. Also: There are some remnants of hardcoded russian literals (логин and пароль that I could immediately find). EDIT 2: I'll probably open these as issues on GitHub.
Can I build data visualizations? What types of visualizations? 
So Jam takes a bunch of data and organizes it into tables on a website?
On which platform? Please be more specific, thx. 
Windows 10, Greek regional options, English UI.
Defining functions inside functions is actually very common. Decorators are one use case. I'll also do it if there will be a piece of logic repeated only inside that one function but is an implementation detail. 
Absolutely! Have a look at http://www.jscharts.com/ What you see on Jam Demo is jsCharts. Enjoy
You can use Javascript libraries for data visualization as well as javascript charting libraries.
So why would I want to use something like this over say [plotly dash](https://plot.ly/products/dash/)?
Different use case. As far as I can tell, this is a framework, for you to create semi-advanced CRUD applications.
There is russian language support in the library. Please open issues on github. 
Why are docstrings above functions and in single quotes? Begone heathen!
I selected English though - there shouldn't be Russian placeholders in the page anyway. I will open an issue (or three) though.
What's the best way to leave comments above your code? 
Advanced :) Have a look at how many Events are supported out of the box. 
yes that is exactly right.
Then you can just use a `while` loop. Do you know how to use one?
Cheers Have no clue for Win10. Have installed one at work, can try tmrw. D. 
The benchmark for me is (was) [Microsoft's Lightswitch](https://en.wikipedia.org/wiki/Microsoft_Visual_Studio#Visual_Studio_LightSwitch) (sadly, MS decided to stop supporting it). The number of events is only one metric :) I'd love to have a replacement, especially in Python, but I'm just now checking it out, I'd rather not pass judgement yet - just covering all my options :) Still, it does seem to require to drop into code a bit more often than with LS, but LS (especially with the Silverlight client) made it really hard to extend, such as adding your own controls etc.
They shouldn't be above code at all. Docstrings should be triple double-quotes under function, contain overal description of function and it's arguments/keyword-arguments. It's not only universal comment style but also docstrings are python objects loaded with the function so meta-information can be manipulated by other programs like code inspectors and IDEs see [pep-0257](https://www.python.org/dev/peps/pep-0257/) :) 
I am sorry for the bug. I corrected it.
I'm still doing some tests, but I've made a couple of changes in `adm_server.py` and it was fixed: --- adm_server.py 2017-09-26 10:16:22.000000000 +0300 +++ adm_server.py 2017-10-03 14:13:29.000000000 +0300 @@ -1119,13 +1119,13 @@ except Exception as e: traceback.print_exc() it.post() it.apply() file_name = 'index.html' - with open(file_name, 'r') as f: + with open(file_name, 'rb') as f: data = to_unicode(f.read(), 'utf-8') start = data.find('__$_') label_list = [] while start &gt; -1: end = data.find('_$__', start) if end != -1: @@ -2093,14 +2093,14 @@ file_path = file_name ext = 'html' if file_name == 'project.css': ext = 'css' file_path = os.path.join('css', 'project.css') if os.path.exists(file_path): - with open(file_path, 'r') as f: - result['doc'] = f.read() + with open(file_path, 'rb') as f: + result['doc'] = to_unicode(f.read(), 'utf-8') if file_name == 'index.html': result['templates'] = get_templates(result['doc']) result['name'] = file_name result['ext'] = ext result['type'] = '' result['tag'] = file_name.replace('.', '-') 
Yes i do know the while loop function..it is really that simple ? 
Thank you for this! I had no idea there was a convention for docstrings. So basically triple-double quotes right under the start of the function 
Why do you feel it shouldn't be?
You can create tables, modify them, represent data in tables, create reports based on LibreOffice templates, process requests from other applications and services and so on. The best way to understand main features of Jam.py is to see the overview video https://youtu.be/zcZBa8sf93M 
The only time I use nested methods is when I want a lambda but need multiple lines of logic. It might be good practice if you really don't want anyone else to worry about the function, but then you get some ungodly syntax. inner_method = function.__get__('name').__func__
This is extremely common in Python, because lambdas are very limited. 
Yes, but that's MS effort :) With deep pockets. Same with Oracle Apex. Hardly an small business can compete with the Big boys:) Would love to hear more after some usage! Cheers PS A buzz with the Docker makes jam quite interesting...
&gt; Oracle Apex I'm having flashbacks and tasting iron. Only one word for this: Bleargh!
If you want to just try if the .so works, go to the directory that contains .so file, run python interactive session, and try to `import &lt;name_of_library&gt;` .so python libraries can be imported. 
tried it and it works as intended, thanks. I might have to run some wrapper scripts
If someone is looking for python gamedev tooling project ideas: - It would be nice if we had a way to deploy binary patches without requiring a re-download of the whole thing. For games it has to work on Windows. By binary patch, I mean any files to be changed, either code or art assets, need to be packed into a single executable and automatically unpacked.
Thanks for the plug. This is a great reminder. 
Exactly. But, as you know, many need to use it. Corporate crap at.al
"Obscurancy"?
in my mind i thought it would be a lot more statements to get the necessary result,just that.
Blastg, define a bunch :) What makes Jam attractive is how fast one can get the job done. Lets say you have no developers in your company. But, have a tech guy who at least installed Python and pip. He/she will be able to get the job done with a master/child table(s) in like a few hours. Dashboard charts in 1 hour. Report in 30 mins. It is really that fast. 
I'm working on a recipe capture application using Django. I recently started a local python users group mentorship program and learning a lot. I'll update more in the future with progress on this.
This was developed by me, for my own personal use. Rather than tacking the features I want onto a pre-existing engine, I would much rather just roll my own thing that I have 100% control over. But that's just me and my OCD. And I must admit that I'm not releasing this in the hope that it's going to take over the world - I simply need a job. :&gt;
Does Ptupdater not do this? http://www.pyupdater.org I haven't used it myself yet, but it seems like this is the most promising project at the moment. 
The university CS dogma of separating concerns and decoupling software components provides a small philosophical win, along with a great practical inconvenience. I wanted to create a system that was as "automated" as possible, and in order for that to work you need to be able to poke at any internal bits you want anywhere in the codebase. That being said, I wouldn't mind breaking some of this up into .inl files and doing a unity build type of thing there.
Steam does this for you. If you're not on Steam, it's very likely that nobody is playing your game anyways. :(
A job as in something to do? So a hobby :P Anyways just wanted to make sure you know of Godot Engine. Even if it the engine itself isn't really good for anything I there is much experience to get from making one yourself in any case!
Is adding custom data sources supported? As in, if I'm a python developer, would it be feasible to make it support a nosql db? 
What was the error message?
A job as in a means of keeping me out of the rain. I've browsed through the Godot engine and it wasn't for me, as I am exceedingly particular about certain little details. I wanted to create a reflection of my own mind and my own creative thought process.
Also, can you update anything else using conda?
Let's say you have 16 gigs of stuff in 8 files. You really want to do a binary diff, and not resend an entire 2 gig file.
Whatever floats your boat mate!
I thought the majority of commercial python games are thin j-rpgs (because of renpy engine, and others) - and most of them are extremely adult and not allowed on Steam? I could be wrong though.
You'll find a lot of options on [awesome-python](https://github.com/vinta/awesome-python), or any of the many other *awesome* curated lists.
A commercial Python game can be anything the developer wants it to be. No general-purpose programming language can limit your choice of genre or gameplay style. Sky's the limit!
Good luck, hope to see you ship soon. Look forward to playing it.
Absolutely. It's just a wrapper, right? :) There is a git closed issue how to do it. Let us know how did u go! Thx
Sweet might have a look at this, looks neat.
I haven't dug into DRF source code, but it seems to make more sens that they create a new Serializer *instance* per request (rather than a class per request). Each request is going to modify the serializer internal attributes, and you don't want to have a [race condition](https://en.wikipedia.org/wiki/Race_condition#Software), a.k.a one request messing with an other. It would be the same behavior with other language or framework I suppose :) That said, this is not a problematic related to your first question ;)
Thank you for making this. I might have some use of it in the near future. Currently I'm running selenium in my scrapyd image and it's pretty heavy.
In many instances, `_throttle` is used by other methods of the class, in which case it makes sense to define it as a method or a free function in the module. In the example you give, some bit of code is used twice in one method, so we wrap it into a function in order to obey DRY. While not uncommon, I don't run into these cases *often*. So I'd say that the reason you usually see "private" implementation methods alongside the public methods which make use of them is that they implement some functionality that is shared among the methods of the class. Furthermore, in this case -- where `_throttle` is indeed used only by one method (`throttle_validate`), I believe it makes sense to define it within the scope of `throttle_validate`, or perhaps as a module-level free function. In the latter case, it might make sense to inject `_throttle` into `throttle_validate` as a dependency.
You're regenerating that inner function on every call to the outer function. That's a performance hit and a memory hit if that object is returned or long lived. It also looks a lot less clean. Pythons style prefers flat not nested. The only case where I would allow this in one of our code bases was if the inner function had to be generated dynamically. For example in the case of a decorator or a multiline lambda style function. Anywhere else, this is screaming poor design.
VR? 🤔
Flat is better than nested 🐍 (except for decorators, of course!)
The title makes it sound as if this Rubyist made changes to core Python that speeds up code for all of us. But instead... the improvement is on a "problem" very few of us will benefit from. "Reddit poster makes some Python code infinitely faster": From: import time while True: time.sleep(1) print(1) to print(1) Ok, granted, there are some useful points in there but still, I don't like this clickbaity title :/
That's waaaaaay deep down in the laterbase. I have yet to even use a virtual reality headset for the first time.
I've used [docopt](http://docopt.org/) when I needed better argument handling and quite liked it :-) 
I don't know *anything* about Python, but I'm the administrator on a network that has this installed in a couple places. All the machines are Windows so it's not going to work with egrep... is there a way I can check if our systems have the malicious software this easily on Windows?
Or the actual index of the series: https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/ 
Writing a Python script to scrape some relevant information: - CPU temp - Fan speed - System load for the past 60 seconds The reason I'm doing this is because my Linux machine is overheating and throttling the CPU. I'd like to find some correlation. Fun stuff! Always enjoy this type of easy and local development.
Two awesome tools for two different purposes. Master both and use each one whenever it fits. 
&gt;&gt; in flask you "install your own batteries" Install and maintain your own batteries, the danger of building a django clone with flask+addons: you may end up with unsupported dependencies and lots of headaches. For instance, Django provides an upgrade path for its LTS versions, you may started with 1.4 and now you can upgrade all the way to 1.11 (may be bumpy somewhere but doable), with Flask there is much less odds of this happening, there's a bigger chance you had to use many 3rd party packages which could be deprecated right now.
&gt; Godot has GDScript is mostly Python with some changes to make it work better with the engine They're also making it where you can use straight Python 3 in the 3.0 release of Godot.
I don't know much about windows. But this only affects people who have installed packages through pip or pip3. If you have pip or pip3 installed, and if you have new version of windows and powershell installed, you can do it via powershell `select-string` command. It provides similar functions to egrep. 
Last I checked, docopt is not maintained anymore (was last updated in 2014-15). Is it worth using it?
Set export environment variables in terminal with your credentials then you can use conga update. I do t remember the exact syntax off the top of my head 
Anything you installed with anaconda.
Jam.py creates wrappers for database tables, when a request for data is generated on the client it send a request to the server, that can be intercepted (there is on_open event) and user data returned. If you have questions how to use this event please send a message on the site on open issue on github.
Ok.. Yeah I tested a app setup on my local.. It was mostly js 
Python doesn't deal with pointers directly, but if you're in C when you get it, it seems like it should work. You may need an offset though. I use VTK for my 3d rendering. It's a monster, but it's an amazing library. The use it in ITK, MayaVI and Paraview, which they also make. It's all open source too.
Argschema
That's planned for next week, hopefully... 
obfuscation maybe it's the word I wanted to use
After looking at the overview video, I'm wondering how the python database layer is implemented. The [setup.py](https://github.com/jam-py/jam-py/blob/master/setup.py) does not list SQLAlchemy or Alembic. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jam-py/jam-py/.../**setup.py** (master → ef0c1d3)](https://github.com/jam-py/jam-py/blob/ef0c1d335d843aae2fd25b226bbc2cb63b454a38/setup.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dnum3qv.)^.
Maybe they are working on getting docopt in more languages at the moment? The site http://try.docopt.org/ is still up? 
&gt; If you have questions how to use this event please send a message on the site on open issue on github. Why not mention the Google Group? And why does no part of [the website](http://jam-py.com/index.html) not mention the Google Group? https://groups.google.com/forum/#!forum/jam-py 
Getting my generalized Pratt parsing framework ready for an alpha release.
If your CPU is overheating when not under high load then it's almost certainly dust build up on your fan. Look into cleaning it.
Oh I'm sorry, the Google Group is shown in the footer of the pages at [the main Jam-py website](http://jam-py.com/index.html) 
Is jam-py for Python 2.7 or Python 3?
Oh my answer is here: http://jam-py.com/docs/intro/install/install_python.html
Gotcha. Just as a bit of advice you can take or leave, but obfuscation is virtually never a worthwhile goal. It does nothing to actually protect your code -- if it can be run, it can be decompiled, if it can be decompiled, the obfuscation accomplished nothing -- and it's almost always a premature goal.
Looks like it has its own implementations and basic query builder: https://github.com/jam-py/jam-py/tree/master/jam/db
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jam-py/jam-py/.../**db** (master → ef0c1d3)](https://github.com/jam-py/jam-py/tree/ef0c1d335d843aae2fd25b226bbc2cb63b454a38/jam/db) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dnundds.)^.
Okay so if we just downloaded the standard python/anaconda package but didn't download anything extra in-app through pip or pip3... then we're in the clear? Thank you, by the way. It's never great having to research and resolve a "major" issue when you don't know anything about it.
Definitely, but my mind/eyes/ears don't see that trend. There's no real way to alert or silo these CPU throttling log entries with systemd, so I figured this was a decent approach to just getting the bigger picture about what's going on. Plus... Python fun. EDIT: another thing is, I don't know what's the chicken and what's the egg here. Am I under load because of an overheated/throttled CPU? Or am I having a throttled/overheated CPU because of load? See what I mean?
I recommend argh.
Jam.py uses Python on the server side and Javascript on the client
Jam.py uses its own library to work with databases
There is Jam.py Users Mailing List link on the footer of each page. It is a link to Google Groups
It supports Python 2.7 and Python3
I don't think it affects you from your description. However, anaconda does ship `pip` program in its package. If your user made a mistake and installed a fake module(the fake modules have been removed now), it might be troublesome. If it's just python shipped from anaconda and packages are installed from anaconda official repo, then there's nothing to worry about.
The way I usually do it is to have functions as the entry point to the database code. That code is tested with an actual database (usually, SQLite's :memory: setup). The rest of the "business functionality" is tested with mocks of the database functions.
They are suffering from a little bit of Not Invented Here syndrome. I can understand it, of course, but it hurts the framework. Some other stuff I found: * Instead of using Babel for translations, they have a SQLite database (inside the git repo!) which has the translations one by one, and they do replacements. * Instead of adding a requirements.txt, they have full copies of all third party libraries (i.e. six.py, werkzeug, jsmin, pyjsparser). Don't get me wrong, I like the fact that such a framework exists, I was indeed looking into something to replace LightSwitch, especially for Python. I'm just offering some criticism because I want this to get better.
Trying to figure out how to install modules 
I'm working on a board game for a school project. Progress has been slow because I've never really worked with python before.
It's likely that you are not understanding this from the ground up. I recommend watching [Ned's talk](https://nedbatchelder.com/text/unipain.html). There are also some really good talks from other PyCon events about this subject, and some really good blogposts. Also, use Python3 and you'll be forced to thinking about this more carefully and correctly.
Thanks, seriously. This helps a ton. It's a small closed network so they wouldn't have been able to download any module even if they had tried - no network connection to the outside world. I was worried this could have come in on the official repo.
That talk is highly recommended. And here is my blog post on the topic. I also link to that talk in the blog post. https://blog.emacsos.com/unicode-in-python.html
Awesome! Your instructions for Windows also helped me to install Facebook's [Prophet](https://facebook.github.io/prophet/) forecasting library which relies on PyStan too. Thanks!
Second opinion for config files: [ConfigArgParse](https://github.com/bw2/ConfigArgParse) It works just like argparse, but supports taking configuration from command line arguments, config files, and environment variables with no extra effort. Has worked consistently well for me. And a +1 to using pandas. You might be surprised at how much work you'll do could end up being 4 lines of pandas code that runs 10x faster than writing out pure Python.
Python 3, not that big of a difference in code in Django and you get like a 30% performance boost with some new features 
I did it with PayPal. But essentially when I get the confirmation I update the user model to reflect paid. (This rests every month) In front of every view that they need to pay for to access, it lets them see it if paid is true or else it redirects them to the paywall. 
Thanks, but that didn't seem like a "from the ground up" understanding. It just talked about bytes, string objects, and encodings. I already understood that. What I apparently missed was adding **encoding="utf-8"** to my open() call, as you apparently either need to know the exact format of your data, or do a trial and error approach.
Thanks. I assume you have a registration system with a users table, then? I was wondering if there was a way to charge users and confirm payment without a registration process? 
Not as currently. If [PEP 547](https://www.python.org/dev/peps/pep-0547/) is accepted, you may on Python 3.7. For now a simple wrapper script will work.
Talk with slides. https://nedbatchelder.com/text/unipain.html tl;dr: use python 3, convert all data to unicode when you read it in, work normally, convert back to whatever when you save out.
You don't have a spare $10K - $15K to spend?
&gt; you apparently either need to know the exact format of your data, or do a trial and error approach. That's what editors do. Guessing text encoding is non-trivial, low level function like open() doesn't do that for you. chardet library can detect text encoding for you, if that is what you want. https://pypi.python.org/pypi/chardet It's usually used with html parsing.
Learning how to scrape website and twitter. So many details 
Breakpoints exist in the IDLE
You are very welcome! :)
Yeah, I was (in hind sight) basically looking for a library that hid the dirty work from my scripts. Lately I've been playing with a lot of stored datasets with characters I'm unaccustomed to handling. Thanks a bunch.
I don't think I completely grasp what exactly it is you're asking for, but in case you haven't read about it yet, look in to `open`'s `errors` argument. https://docs.python.org/3/library/functions.html#open After clicking the link, scroll down just a little bit. The paragraph begins: &gt; errors is an optional string that specifies how encoding and decoding errors are to be handled Using this argument allows you to specify error handling during encoding/decoding. You may also choose to completely ignore all errors.
So you want to write a program that searches for foo and returns the directory it lives in. Then you could use it like this: cd `pcd foo` That seems pretty straightforward, although very unusual. If you need help with the code, visit us in /r/learnpython 
For bash: ~ $ function pycd { cd $(dirname $(python -c "import $1; print $1.__file__")); } ~ $ pycd requests requests $ pwd /usr/lib/python2.7/dist-packages/requests requests $ pycd re python2.7 $ pwd /usr/lib/python2.7 You can put function pycd { cd $(dirname $(python -c "import $1; print $1.__file__")); } into your `.bashrc`.
The root of my admittedly poor question was about how to seamlessly deal with unicode strings. I didn't want to do any work in order to have the contents of the file appear as the contents of my string beyond copying the bytes, but because I didn't specify a utf-8 encoding it apparently defaulted to something else and failed conversion. Even with knowledge of bytes, string objects, and character sets I'm constantly failing to load my data files because I have to explicitly tell it how to encode/decode them. I wasn't appreciating how low-level I was, and expected it to determine the type of encoding I needed much like image libraries determine the type of image file I have automatically for me. There's likely a number of libraries I can depend on to acquire the seamlessness I desired, as others have pointed out.
for work use it may end up being decided by which is easier to run without local administration rights. at work they lock down the desktops pretty tightly which makes things like, idk, doing my job, a challenge. outside of work, I have free reign so I'll try both there and see which I like better. 
I'll be writing pretty printers for gdb in python.
Also to chime in, if your University student you're probably eligible to get all the jetbrains ides for free
nah, its low level libs and ugly code. not looking forward to it, but maybe someday :)
cool to know, thanks!
Writing a tokenizer/parser for class. Meh.
Actually, due to proxy, I am not able to install. I don't know how to update packages under proxy environment
I actually use the automatic deployment feature but the git versioning is on my personal machine and not on the cluster anymore. So git in pycharm works as expected because the version on the cluster is just a copy. Not perfect but works for me
IMO just don't. When the code is primarily integrating (and CRUD / REST is the very definition of integration code) then use integration tests that exercise the real database. Unit tests work well for code that is relatively well isolated and mostly algorithmic/logical - like your pure functions, but they suck for integration code - they're a pain to build and they don't test realistically.
~~Automatic deployment meaning edited files get synced when they are saved?~~ And if I prefer to have version control in remote cluster, only way is to deal with it is via command line in the remote host? That's what I was afraid of. Edit: Just checked and I have "automatic upload (always)" feature turned on.
So first off it's hard to call tests against CRUD behavior "unit" tests, as there is inherently integration testing going on in that the database models you're testing are built on top of an ORM. But folks call them "unit" tests anyway as a suggestion that each test focuses on a small part of the business model being persisted. The creator of SQLAlchemy (who is actually...me! but you don't know that ;) ) has some examples of integration testing using on one hand a fairly sophisticated mocking approach, and on the other a database-backend approach that runs tests within transactions that get rolled back, over at https://bitbucket.org/zzzeek/pycon2014_atmcraft/src/f50cbe745a197ea7db83569283b703c418481222/atmcraft/tests/?at=master . These are "integration" in that they are testing a full request/response, but the database fixtures here will work just as well for a more unit-oriented series of tests. Using a real backend is probably where you should start, SQLite is always useful for this kind of thing when you are first starting up, but I would advise to not be afraid of requiring that a real MySQL/PG database is running in order for tests to proceed. The test suite can do a skip if a database backend is not present.
I like to do each unit test inside a transaction that never commits, always rolls back. You can use sub transactions to manage test data fixtures. I like to use pytest for that. The test db is ALWAYS empty so there's NEVER a question about it's state.
I wouldn't subscribe to extremism. Choose to test what you need to test for a functioning application. At my company, we used to have a project that was a moderately complex CRUD application. The lead engineer was insistent on a purist view of unit testing. No external influences. It soon turned out that the data being entered was influencing the functionality of the data being retrieved and presented. The engineer decided to let some data be mocked and it greatly increased the confidence in everyone to make code changes.
Avoiding all is unrealistic, but there's a few things you can do to avoid most of the pain: * Use python 3. * Use UTF8 encoding for everything you can - writing to and reading from. * Put # -*- coding: UTF-8 -*- at the top of your .py files. * By default put .decode('utf8') whenever you are reading bytes from a file at the point where you are reading it in and encode('utf8') whenever you are writing bytes out at the point where you are writing it out.
For a problem like this, it is likely that classical image processing &amp; math will work far better at calculating volume from an image/series of images. A neural network approach might be more appropriate if you are for instance trying to classify images of tumors into different types.
I’m just working my way through Learn Python 3 the hard way. It gives you the basics for a choose your adventure-style game and then the reader is tasked with fleshing it out. So I came up with it by myself honestly.
You can also use logbook as an alternative to logging.
Writing scripts for mitmproxy to extract urls and another for fuzzing parameters.
This is unrelated to the main question, but I am curious about your choice in using BitBucket over Github. What do you see as the pros of that platform?
Writing a program to compare 2 html files and show the differences between them giving specific line numbers etc. 
Thanks for clarifying, several people have mentioned this, including over at lobsters https://lobste.rs/s/wb7fdm/lifelong_rubyist_makes_some_python_code which I hadn't even considered could be a possible interpretation, but would have been very impressive. My question to the original commenter "what were you hoping for when you clicked on this" was a genuine question. Thank you for taking the time to answer. Do you think perhaps "Lifelong Rubyist makes a Python script 5x Faster" is better? Or that's still ambiguous. At the least I added a note early on to help clarify things earlier hopefully. &gt; Several people have mentioned they thought the post was about me making the Python interpreter faster. That would have been pretty dang cool, but is not the case. This article is about how to write faster code using an interpreted language. 
Your problem is Python 2. Switch to three and watch all your problems melt away. Heck, enjoy using emoji and all sorts of other fun stuff in your code. Want to use emoji in strings? Go for it. Use asian characters for variables? Fine! Want to use greek symbols for variables? Yay! 
This is the correct reply.
This was with python 3.5.1.
Learning to use numpy. I'm completing a few practise exercises related to it. 
I have not, thank you!
You can pack your application in a binary file using pyinstaller. It's not obfuscation, but it helps to hide your code.
I create models as a product, and as a team we teach our customers that our models are tools, not god. Part of that education is telling customers how the model is making a decision so they can understand for themselves how much they want to trust it. This is especially important for models with high dimension, models that are ensembles, and/or neural networks (which act like all of the above). So having skater to tell you at least globally which features are contributing what to a model, and (even better haven't confirmed if Skater does this) on a per-decision level what features factored into a particular decision really helps with human use, understanding, and trust of a model.
One additional reason for nesting functions is to access enclosing-scoped objects without passing them in as arguments.
Trying to extrude a geometry using matplotlib! Nothing so far
 Flat is better than nested is not for simple functions in methods like that. Is is about the overall layout of classes modules and files. It is not like nested for loops are disallowed either. Also the fact that Python allows nested functions overrides that.
At the moment I am orientating what field I want to start learning (with an eye on a possible job in this field). It is not really a Python project but still somewhat Python/programming related.
That assumption is premature optimisation. Readability and clarity first and then speed when needed.
Plotly and dash are free. It isn't free of you want them to host it for you.
The second argument is the start position, not the end position. In other words `str1[40:]`, which is an empty string. &gt;&gt;&gt; str1 = "this is string example....wow!!!" &gt;&gt;&gt; str1[40:] '' --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
You’re specifying the beginning index as 40. The value specified is not found after index 40 in your string. Str1.find(str2,startindex,endindex)
The second argument is the start of the slice, not the end. So it takes `str1[40:]`, which is `''` (an empty string), then tries to find `'exam'` in that, which of course it can't because it is an empty string. 
Thanks for the help I got it now. I was thinking it was [0:10] and [0:40]. I'll make sure to use learnpython instead and format my code with pastebin for future questions. Again, thank you!
Thanks i got it!
Thanks!
Type hint is something to get excited about!
I know this has been answered, but in the future if you want to figure it out yourself: &gt;&gt;&gt; help(str.find) Help on method_descriptor: find(...) S.find(sub [,start [,end]]) -&gt; int Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end]. Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.
What is that and where can I read more about it? 
I'm working on homework for my "Applied Social Network Analysis in Python" class from Coursera. This class focuses primarily on networkx. It's the last class I need for their "Applied Data Science in Python" specialization.
I know POS stands for Point Of sales or something but somehow my brain first registered it as Piece of shit
RTFM: https://docs.python.org/3/library/typing.html Edit: Jesus fucking Christ... AGAIN!? Downvotes for what? Fuck this sub, bunch of god damned wankers.
Successfully installed anaconda on work computer today, many thanks
I work in science and use python for data analysis and for prototyping simulations. In the case of data analysis I usually get patient data or cell tracks or gene expression data in a spreadsheet and then use python to explore the data or build statistical models from that data. In the case of simulations I might try something first in Python because I can develop much faster and visualize all aspects of the results very easily. Once I know what to do, I will move to CUDA/C++. If I have to systematically explore parameters of a simulation I call the simulations from Python and analyze the results again back in Python.
Stands for that too 😆
Hi! Thanks for posting! Trying to try it out on Debian Jessie. Bit of a ball-ache to install, but I think I'm nearly there - after quite a lot of google + apt-get + pip rounds, I've got the overall build to finish cleanly. Yay! However, when I try to run DeltaV, after initially loading and displaying the main menu, it crashes when I select "Start Mission" with the following traceback: andy@broken-screen:~/projects/HackmanGames$ python -m deltav Traceback (most recent call last): File "/usr/lib/python2.7/runpy.py", line 174, in _run_module_as_main "__main__", fname, loader, pkg_name) File "/usr/lib/python2.7/runpy.py", line 72, in _run_code exec code in run_globals File "/home/andy/projects/HackmanGames/deltav/__main__.py", line 7, in &lt;module&gt; vsync='-vsync' in sys.argv).run(mainmenu.MainMenu()) File "deltav/game.py", line 67, in run self.states[-1].update(dt) File "deltav/mainmenu.py", line 49, in update self.queued_state = fps.FPS(level.Level()) File "deltav/level.py", line 95, in __init__ self._get_mesh('weapon.obj', 'cube1'), File "deltav/level.py", line 649, in _get_mesh self.objs[obj_name] = obj.OBJ(obj_name) File "deltav/obj.py", line 78, in __init__ self.load_material_library(values[1]) File "deltav/obj.py", line 172, in load_material_library material.texture = load_texture(values[1]) File "deltav/obj.py", line 7, in load_texture return Texture().load(os.path.join(base_path(), 'data', filename)) File "mash3D/gl.pyx", line 2322, in mash3D.gl.Texture.load raise IOError(ae_image_error_message(error, &lt;char*&gt;filename)) IOError: no codec for image file "/home/andy/projects/HackmanGames/deltav/data/weapon.dds" Any hints? Looks like there's no codec for .dds files installed. Is this a Windows-only thing? Looking at the pyglet docs, it looks like there should be able to handle it, and I can't find a library in the debian repo that looks right.
Ah! You need to install DevIL. I'll make sure to list the dependencies in the README... I don't think there are any others besides OpenGL, SDL, and Cython. Thanks for the stellar bug report!
Is this more for code readability or performance?
Hasn't that been out for a while?
Yay! It's running now! sudo apt-get install libdevil-dev python setup.py build Now after clicking on "Start Mission" I get a 3d game :-D Thanks. I'll try and cobble together the install steps if you want.
Python allows a lot of things that you shouldn’t do. That’s the nature of a dynamic language. However, I think that this discussion has to do more with design sensibilities rather than design rules, and I hope that I made that clear through my comments. 
Yay!
Let me know if / when you have a project online somewhere :) Also this may come in handy, if you don't already know about it: https://github.com/hugsy/gef
Completely manual?
You wanna checkout [A-frame](https://aframe.io/examples/)! Super simple to get started with.
AFAIK it's ignored by the interpreter. It's primarily to make static analysis more powerful, and provide a unified type hinting format (rather than IDEs having to 'know' numpydoc, googledoc, rst and so on). It means you have the option of running the same static analysis as you get with a compiler (i.e. it tells you to go fuck yourself if there are type mismatches), the lack of which is one of python's largest criticisms.
Coding a list manager for organizing the endless number of lists that I would usually maintain on Trello, Keep, text files etc. Basic principles: - use plaintext files and directory structure for storage - simple markup - use functional style pipeline for filtering, transforming and output - be extensible via plugins - sync with services such as evernote, google drive etc
_sigh_ And I'm still using 2.7
Since 3.5 I'm pretty sure. 
I use it as a readability mostly.
One word of caution. One time Pycharm downloaded files from my remote host, but some weird error (I don't remember what) happened and it stopped mid-download, transferring over empty files. Because the automatic upload option was on, it uploaded the empty files and overwrote the correct ones! Man I was so pissed I lost a whole bunch of csv files that I weren't being tracked. Since then I've always done it manually.
Yea. Lexical parsing to tokens and from tokens determining if it's in the grammar. Later on we are going to end up building everything from lexical parsing to mips, but that's not for a bit.
This is something that I constantly desire. It seems that there isn't a single standard set up...at least I haven't found it yet. A single, well reasoned and thorough tutorial on this subject would do exceedingly well, I believe. Untapped market for a blog, or jetbrains themselves.
Poor bastard. 3.5 seems ancient now.
Has no impact on performance is what I've read
This is cool, but it's a Javascript HTML web thing. Not my platform of choice for many, many reasons that make me an old curmudgeonly man before my time. I tend to prefer time-tested and well-worn things over shiny, crumbly modernity.
The Processing library has a Python mode: https://github.com/jdf/processing.py
Can you just download the files and install them? I'm not sure what you really mean by "being under proxy settings". It sounds like you also need a virtualenv and to follow this... https://docs.anaconda.com/anaconda/faq#how-do-i-install-packages-on-a-non-networked-machine
Dang. I just compiled 3.6.2 on my Pi Zero W with --enable-optimizations (yesterday). It literally took hours to build. 
Learning how to use the Turtle library at a very basic level
It has no runtime impact. Some IDEs can use that for autocompletion.
Why?
I don't see how decoupling is inconvenient at all, but whatever makes you happy. It's your engine.
You are right. I have non-computer science background and I found PyCharm's documentation not easy to follow. These are the tutorials I used in addition to PyCharm's doc to set them up, just in case: * https://basimaly.wordpress.com/2015/12/05/remote-deployment-using-pycharm/ * https://medium.com/@erikhallstrm/work-remotely-with-pycharm-tensorflow-and-ssh-c60564be862d
That's a horror scenario! How do you do version control in your case? Both local and remote? Or, just one of them?
At work, it's largely because that's what the product is built on. Budget and time constraints, pressure to meet business demands, all of those things push the job of refactoring working existing code to the back of the line. Ideally, we'd have a few more devs. Personal use, I definitely use 3 as long as the libraries I'm working with are supported.
I would look into mocking errors that can result from the CRUD operations and make sure that your code is handling them in a sane way. If it makes sense to throw the error, make sure you are doing that. If it makes sense to log the error and move on, make sure you are doing that. If it makes sense to completely ignore the error, make sure you are doing that. 
Can't you compile it on a faster computer and target the Pi?
The web page suggests the opposite... that you pay through the nose if you want to run it in-house.... https://plot.ly/products/on-premise/ 
I have never done that before, but should really learn to how to do cross compiling. Good idea. 
The annotation comment syntax was specified in 3.5. The annotation syntax was specified in 3.6.
In a multimedia system, you want to create as much flexibility for the implementation as possible, as your favorite graphics and sound libraries might stop working someday, or you might want to port your game(s) to the shiny new Playstation 7. This means, in my experience, that public data members are harmful, as they tend to calcify code and create a whole class of structure initialization and state setting bugs. The solution to this is likely to be opaque structs with properties and/or getters and setters to provide you with that nice clean facade between user code and internals. So let's say you do that, and each struct or class definition is hidden away in its own separate translation unit or module or whatever. This is all well and good until the event system needs to change some private state of a controller after receiving a button press event, but the game controller structure definition is not available to the event system, so you have to define some hacky backdoor helper functions that confuse and distract the end-user of your API. I'd rather just be omnipotent and have huge files that I can easily search through in my IDE, without clutter or confusion. Plus, I made some cute little text banners to keep different sections of code separate inside that single file. Hope that made sense.
Writing a small flask app to periodically check and notify on DNS record changes. From a security perspective I want to be notified if any of my domains or client's domains have had any of their records changed.
I personally started with Django but use both. Django is great if you have a heap of models/tables and don't want to write the back-end that your users might be using. You can prototype quite quickly and have something to show others. Flask is great for micro-services. I usually pair it with peewee and huey. https://github.com/coleifer/peewee https://github.com/coleifer/huey
Variables are static. They will not update themselves. If you want it to update you need to call the function again. for countp in range(22): localtime = time.asctime(time.localtime(time.time())) # update the variable print ("Local Current Time: ",localtime," The current Cycle count is: ",countp) print("This Program is active") time.sleep(60) Also if you know how many iterations you want you should use a for loop, not a while loop. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Agreed. Had to use 3.5 for Kerberos Single Sign In today, it was terrible. Also, when Guido said don't assume dictionaries will be ordered I unknowingly assumed they would be ordered. My semi-random csv outputs were quite amusing.
2.5 &amp; 2.6 in places.
You have to both know and remember that you can do that.
Assuming python3: &gt;&gt;&gt; from urllib.parse import urlparse, parse_qs &gt;&gt;&gt; s = 'http://www.bing.com/cr?IG=1DB10587035B4F9AB8EEF2DC872****3&amp;CID=025FBBD822BF65EF01A3B0C923B964A3&amp;rd=1&amp;h=rlOgUQ_JM4oRfh_1KdDjZrkkFO5oUmwPoS2EaEfiRSc&amp;v=1&amp;r=http%3a%2f%2fwww.cincinnati.com%2fstory%2fmoney%2f2015%2f12%2f05%2farea-medical-device-firm-sees-no-profits-stock-still-soars%2f76567832%2f&amp;p=DevEx,5078.1' &gt;&gt;&gt; parse_qs(urlparse(s).query)['r'][0] 'http://www.cincinnati.com/story/money/2015/12/05/area-medical-device-firm-sees-no-profits-stock-still-soars/76567832/' I don't see a title in your example. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Don't forget 1.5!!!
Hitting up a CRM and an ancient build system for data, parsing their godawful output into something useful, and nagging team members about it in a chat.
The title reads "area medical device firm shows no profits stock still soars". The article is under the story/money/ section of the news source. I think OP wants to display: https://bing.com/title 
I do this sometimes, i.e. to avoid writing a recursive function and a wrapper function for said recursive function, or if I'm programmatically generating functions, in which case I return the inner function instead of calling it. If this wasn't useful we wouldn't have the nonlocal statement.
No, that's part of the URL. I suppose you could parse that out of the URL in this very specific case. Otherwise you'll have to actually visit the page and parse out the &lt;title&gt; tag. 
gschizas not sure about the Babel tho, I would love to see a built in translation module for easy usage. Would be great to have you on board tho. What Jam really need is some love from you guys :)
Using some sort of virtenv is quite recommended if on Linux. Py3 tends to fu the environment. Just saying...
print(“shame, shame, shame”)
Except they are now by default no? Or is that from 3.6 only?
Ha! the production server I deploy on is CentOS 7 with 3.4. After much messing around I finally got the dependencies for non-yum mysqlclient so I got a 3.6 compilation together that I just use with venv.
On 3.6.x they are, but there is no guarantee they will continue to be even in later versions of 3.6 or beyond. Raymond Hettinger, a Python core developer, said in a video that he expects people will be so used to it that it will never go back, but it's not safe to assume. There is an OrderedDict (https://docs.python.org/3/library/collections.html#collections.OrderedDict) for when it needs to be guaranteed. For what I mentioned above, it was an easy fix without that, but I didn't realize my assumption until I saw the random order.
Sorry, I have Python2 here so no urllib.parse. Your code return is what I wanted to get. Just need to find counterpart packages in Python2. Thanks 
I watched his video a while ago which is why I asked :). Too bad I'm also stuck on 2.7 and ordereddicts 
good point. I don't even know there is such sub-reddit.
If the order matters one should be using OrderedDict to be safe. Today's experience was a nice reminder of how much nicer 3.6 is though. :)
Mine is also running CentOS, though I don't know what version. Didn't ship with Python 3 at all, compiled 3.6 for it, never looking back. Even managed to get 3.6 on a server without root access and no internet. So much better even than 3.5.
[Heres how to host plotly yourself](https://plot.ly/python/offline/). [Heres how to host dash yourself](https://plot.ly/dash/external-resources). I use them all the time at work in a secure facility without internet. Don't pay for it at all.
Then what are they charging for on that page? Putting it in a Docker container?
Did I read that right? TThey STILL haven't fixed the bug that prevents compiling on AMD processors with the native architecture option? https://bugs.python.org/issue29504 The fix is sitting out here in the Gentoo bug tracker too: https://bugs.gentoo.org/608586 
Yep, I still have to write some 2.6 compatible code for CentOS 6 machines.
What major changes are there between python 3.4 and python 3.6? I have yet to run into anything that's caused me issues.
I've not used 3.4, but I know asyncio and coroutines were experimental in 3.5 and permanent in 3.6. Most obvious changes to 3.6 are fstrings, which are great, but not backwards compatible. Example: recipient = 'world' print(f"Hello from Python 3.6, {recipient}!") Other than that, it is the first Python 3.x to be faster all around than 2.7 (I believe Raymond Hettinger said this) and dictionaries are dramatically improved in speed and memory usage, and just happen to be in order. Also, type hinting, which can prevent the need to troubleshoot buggy code and helps your IDE help you.
Change the import to from urlparse import urlparse, parse_qs 
This course helped a lot. https://www.youtube.com/watch?v=nfoudtpBV68&amp;list=PL6397E4B26D00A269
Just installed 3.6.2 a couple weeks ago...
I think gschizas answered why would you use this over plotly :) Plotly is for geeks (kidding:). What Python was missing is a framework for engineers or tech inclined ppl but not necessarily dev's like Django, Angular3 at.al. For 40-50-60yo who knows something about *his* business but does not want to learn some massive libraries, Jam is perfect. It get's to job done. That is what is Jam all about. And how on Earth I download Plotly? :) Pfff... 
Exactly. If it will only ever be called from that method and it makes sense there it will end up inside that method for me. Decorators and closures are an obvious use as well.
In Python 3, you can still pull the function out if you needed to unit test. This is an ugly (awesome?) hack that I spent a little time coming up with. If someone knows a more elegant way that would be awesome: &gt;&gt;&gt; import dis &gt;&gt;&gt; class Ex: ... def throttle_validate(self, limit, cost=0, penalty=0): ... def _throttle(key): ... return key*key ... user = _throttle(limit) ... if user: ... print(_throttle(5)) ... &gt;&gt;&gt; &gt;&gt;&gt; a = Ex().throttle_validate &gt;&gt;&gt; for n in dis.get_instructions(a): n ... Instruction(opname='LOAD_CONST', opcode=100, arg=1, argval=&lt;code object _throttle at 0x0345FDE0, file "&lt;stdin&gt;", line 3&gt;, argrepr='&lt;code object _throttle at 0x0345FDE0, file "&lt;stdin&gt;", line 3&gt;', offset=0, starts_line=3, is_jump_target=False) ...&lt;snip for brevity&gt; &gt;&gt;&gt; &gt;&gt;&gt; _throttle_code = dis.get_instructions(a).__next__().argval &gt;&gt;&gt; _throttle_func = (lambda x: x) &gt;&gt;&gt; &gt;&gt;&gt; _throttle_func.__code__ = _throttle_code &gt;&gt;&gt; &gt;&gt;&gt; _throttle_func(25) 625 &gt;&gt;&gt; _throttle_func(4) 16
The other computer needs to be the same architecture, so only helpful if you have a ton of Pi's. It might cross compile faster on a more powerful arm chip. The dependencies are the same, so kick it off, sit back and relax. I do mine with ansible. Took 2 hours while I drove home and ate dinner.
In CPython 3.6, as an implementation detail, dicts happen to be ordered. It's not part of the spec, and it could change in the future. The advice is to just treat it like a coincidence, not to rely on it.
Thanks, I'm new to Python (and programming in general) so I'm still learning!
&gt; and just happen to be in order. So OrderedDicts are deprecated? Type hinting would be nice, I guess.
 Wait, what's ansible? I've only heard that as the faster than light communication system in Ender's Game books. 
No, OrderedDict should still be used when order matters, and the standard library still relies on them. But, going forward it could be possible. 3.6.4 or 3.7 could break the ordering if deemed necessary.
&gt;The other computer needs to be the same architecture Not at all, you can cross compile for the Pi using an arm-gcc toolchain.
Wait, if string literals just came out yesterday, what have I been using on my Debian install for weeks (or months) already? O.o For the first time ever I'm using a minor version explicitly to run my scripts (`python3.6`) - that's how mind-blowingly amazing formatted string literals are! **I'm loving it!** I just ran `python3.6 --version` and it tells me `Python 3.6.2`... how the fuck have I been using an unreleased feature for weeks now, then? :S
Just because the fix exists, does not mean that it has been properly submitted to the correct channels in the correct way.
Perfect! Than Jam is for you! There is absolutely no need to learn Angular(3), RestFrmework, React, GraphQL on Django, GRaphite with React + Redux s.hite! And the list goes on (I'm not a developer, just interested in stuff). With Jam you concentrate on a specific business problem and not on this massive libraries. Nothing wrong with learning them tho. But I like to go surfing in my spare time :) PS Have a look in here, I've created this with no programming and little Jam experience: https://github.com/jam-py/jam-py/issues/27 Took me a few hours. Took me more to create a sqlite3 database with 50M records to see how fast Jam is. Lightning fast. See the https://cloud.githubusercontent.com/assets/9026100/25652423/b898faf8-301a-11e7-95c0-2d4b103d5443.JPG At the bottom is 38462 pages of random data. 
I've been using docopt, though it has similar problems of being cumbersome with a complex command line application. I recently found docopt-dispatch which uses docopt to have the great wysiwyg where your doc string is your interface but also has a simple decorator to put on your functions to jump to them. https://github.com/keleshev/docopt-dispatch
I'd be interested in an interview
I don't know about maintenance, but it works fine on 3.6.x. Also, I would add, docopt-dispatch makes docopt even better. It adds decorators for calling your functions. Such as: @dispatch.on('dothething', '--option') https://github.com/keleshev/docopt-dispatch
I installed it last night. 
+1 for Processing.py The only drawback is that you have to use 2.7 since it's built with Jython, but it's still nice to use Processing with Python's syntax. Use the command line distro if you want to keep using your current editor/IDE setup: http://py.processing.org/tutorials/command-line/
I think you mean print "shame, shame shame"
It’s a really awesome way for developers to write scripts (called playbooks) and then deploy them to a bunch of pre-defined hosts (or a singular host) with a single command. Very powerful, check it out on GitHub and you’ll thank yourself later! 
The version that was released just now was Python 3.6.3, but the release notes that are linked are for 3.6 in general.
This is pedantic I know, but [this syntax is supported since 3.0](https://www.python.org/dev/peps/pep-3107/).
So a bit of overall advice here, when you're parsing and storing the data - I'd recommend separation of the extraction and transformation layers. IE. If need be - always have a raw version of the stream to go back to. What frequently happens is people have a stream of data coming from somewhere and only save the transformed layer (so let's pretend you have an API giving you real-time data about the weather in Fahrenheit). You think, oh this is easy, I'll just change it to Celsius and save it. I don't need the initial data point, that's a waste of space. Then one day, someone messes up (it's part of life) and you realize all your Celsius data points are off by 2 degrees. It's much cleaner to be able to go back to the original data point and re-run the transforms on top of it than retroactively trying to figure out how to "undo the error". (First hand from years of experience working with enterprise data streams)
if num_cycles == 6: return “Too many”
I'm pretty sure that you can compile ARM binaries on AMD64 chips.
Mind sharing a file for us to have a look at? I'd love to see exactly what is causing it so I can then render some proper help... My first response was lacking, but mostly because I thought you were on 2 which in my opinion shouldn't be used for new projects, and where working with unicode was always a massive pain. 
Well, since you like pedantry, the syntax was not originally specified for type hinting, which is what the original comment was about, but good point :)
but the program still executes all the other if\else statements. How do i make it only execute the one that says: elif num_cycles &gt; 4
This is more for static type checking, but can also be really useful for readability 
Thanks! I'll check it out. 
I find click easier to work with than argparse. The documentation is good and the automatic type checks are nice. It's also easy to build subcommands as complex as you wish: main --main-opt1 --main-opt2 sub1 --sub-opt1 --sub-opt2 sub2 Whenever I want to create a nice CLI for use by myself and others I use click.
You could make a small project that uses machine learning to solve cancer and figure out which stocks to buy with 99.9% accuracy at the same time? Also, it would kill two birds with one stone. Nothing beats the two stones with one bird technique. Just remember to make it simple. :)
Is there some constraint to close the connection after receiving a single msg or something else required? Why not something simple like this: message = "" while True: data = conn.recv(2048) if data: message += data else: print("Message length: {msg_len}\nMessage: {msg}".format(msg_len=len(message), msg=message) This could be reworked however you need it. Break out of the while loop, call a function, echo back, etc.
Check edge cases for inputs, on line 67 do something like: `if user_input.lower().strip() == word_to_guess.lower().strip():` Since an AnaCoNDA is still an Anaconda. &amp;nbsp; I would also have my imports at the top of the class file rather than inside functions even if they are used only once. &amp;nbsp; I am curious why you decided to mix casing, even though you are consistent with it (Functions use camel case, variables use snake case). Regardless you should pick one and stick with it though the entire project. 
Or perhaps... s = 'shame' print(f'{s}, {s}, {s}') 
Are you misusing comparisons? E.g. if num_cycles &gt; 1: print("first") elif num_cycles &gt; 2: print("second") .... 
 mylist = [['ace', 'hearts'], ['king', 'hearts'], ['queen', 'hearts']] print(mylist[0][0]) # ace print(mylist[0][1]) # hearts print(mylist[1][0]) # king
Look into using min(), max() and list.index(). Good luck! 
Read this blog. It might help you to get started with cross-compilation setup. https://visualgdb.com/tutorials/raspberry/qt/embedded/ ARM toolchain can be downloaded from here: https://developer.arm.com/open-source/gnu-toolchain/gnu-rm/downloads
What is this good natured banter on the internet? Where's the hyperbole and references to people being nazis?!
Not sure I fully understand your question but if you just want to pull out one string at a time, just use the index try to view the list of lists like rows and columns in Excel kinda like this 0 1 0 ['ace', 'hearts'] 1 ['king', 'hearts'] 2 ['queen', 'hearts'] And let's say this list of list is called 'cards' To select quees you would write Word= cards[2][0] If you want to get the hearts next to the 'ace' Word=cards[0][1] And ect. hopefully the formatting holds up. Answering on mobile
And it didn't lol
God dammit, that's so fucking obvious. I was trying things like [0,1] and [0:1] I didn't notice this till 20 minutes after the submission box for the assignment closed. Looks like partial credit for me. 
I guess it's the *RTFM* bit in your comment, which reads kinda rude/arrogant in this context. I hope it's not because of the link, since that really is the best resource you can find to read about typing in Python...
Or a bad thermal paste application.
It's awesome. Your code becomes a lot easier to reason about. A good IDE will warn you right away if there are type mismatches. If you call a function, it will tell you what types you may use for the arguments. You can also create your own types, which is really nice in combination with NamedTuples, e.g.: class User(NamedTuple): id: int name: str age: int fred = User(123, 'fred', 42) def remove_user(u: User) -&gt; None: # ... 
I'm downvoting you because I don't like it when people whine about internet points.
Would be so sweet if it worked with autograd the way python does.
But in this case, it has been properly submitted to the correct channels in the correct way.
- Dig into the Python object model [here (slides by Alex Martelli)](http://www.aleax.it/Python/nylug05_om.pdf) and [here (Python documentation)](https://docs.python.org/3/reference/datamodel.html) and [here (500 lines or less, book on basic software architecture)](http://www.aosabook.org/en/500L/a-simple-object-model.html) - Study all the [special methods](https://docs.python.org/3/reference/datamodel.html#special-method-names) - Decorators and generators. They become more useful if you learn a bit about [functional programming](http://nealford.com/functionalthinking.html) and start thinking in terms of function compositions, transformations and pipelines instead of objects. - Look at some intereting use-cases for `exec`, as used in the [collections module](https://pastebin.com/vVKJQX0J) for named tuples. - Study some Python design patterns, especially dynamic dispatch as used in the [ast module](https://pastebin.com/iNu5Q3fN). Here is a whole [list of examples of interesting patterns](https://github.com/faif/python-patterns). - [The AST module](https://eli.thegreenplace.net/2009/11/28/python-internals-working-with-python-asts) - [Metaclasses](https://jakevdp.github.io/blog/2012/12/01/a-primer-on-python-metaclasses/) are classes that create and other classes.
&gt; given to me for the assignment Sidebar rules: &gt; If you are about to ask a question, please consider r/learnpython or the learn python discord. Homework-style questions will be removed, and you'll be encouraged to post there instead.
No, you still need OrderedDict if you want ordered dicts. An ordinary dict is only ordered in CPython not elsewhere.
thanks for your suggestion, I'll try it. should I avoid mix casing ? Is it a bad practice ?
I'm afraid it needs more than love. Some criticisms below (again, because I want this to succeed): 1. You're reinventing the wheel by not using Babel and SQLAlchemy. 1. In the case of Babel, the point would be that you use Babel for making translations before you build your site. 2. In the case of SQLAlchemy, connecting to any kind of database would come for free, and more importantly, you would avoid the SQL concatenation vulnerabilities (seriously, don't do `SELECT * FROM Table Where id = %s` - this makes your application extremely insecure) 2. Your framework is very new, despite you calling it version 5.0. The whole commit history is only 72 commits deep, as far as I can see, with no branches (moving from gtk to pure HTML would certainly count as a major branch, in some cases as a new project). Calling it 5.0 is a bit dishonest, IMHO. 3. You have substandard git discipline. Read up on what makes a good commit (and a good commit message). I suggest [Chris Beams' article](https://chris.beams.io/posts/git-commit/) 1. Put one and only one change per commit. 2. First line of the commit message should be something like "Add asterisk to required fields" 3. Counterexample (don't do that): Your commits start with a single word, e.g. "Library" and have multiple changes within them. For example, [commit 6b4a076](https://github.com/jam-py/jam-py/commit/6b4a0763abfa5178f1636b5bd060d1e843d96ce4) has the description line "Library" (bad) and the following changes (I'm transcribing them as they should be): * Make default font 14px * Rename Administrator to Application Builder * Add asterisk to required fields * Fix lookup list value selection in report parameters * Completed first version of documentation * Add Jam.py roadmap * Add small menu font item to Themes for Demo Each one of these should be a different, separate commit. If you want to add categories (I'd say tags, but that word means something different for git) to the commits, either add them as bracketed words (i.e. `[Documentation]`) or at the end of the commit message. There may also be other ways for this. 4. Don't include dependencies as whole libraries in your code (the `third_party` folder shouldn't exist). You don't know if they're updated for vulnerabilities etc. Use a `requirements.txt` file to install any dependencies properly. 5. Test each bug independently, against the version it was reported for. Don't close a bug because it doesn't reproduce against the current version, unless you are certain that the fix was indeed for the issue at hand. 1. For [issue #50](https://github.com/jam-py/jam-py/issues/50), you don't seem to have solved the core problem, that you're still reading files as text (instead of as bytes and converting them with Werkzeug's `to_unicode`. 6. Each time your commit a bugfix for a specific issue, put that issue at the end of the commit message (e.g. `resolves issue #51` or something similar). This will link the issue with the commit that resolved it. I'm sorry if I sound a bit harsh (this is part of what I do for my day job also - for developers that *are* getting paid to develop against some standards), but I'm doing it because I do want this project to succeed.
I just stated a pros for non-nested function. Nevertheless, regarding readability and clarity, I agree with Brainix [comment](https://www.reddit.com/r/Python/comments/73yt8t/why_dont_we_see_methods_within_methods_very_often/dnu6bc7/).
PyCharm
Requests + Beautiful Soup can help you. Or even reading jSON from Yahoo.
Thx gschizas, I think the dev's will appreciate your input. About the Babel, the assumption is that someone will build the translated site:) Same with the SQLAlchemy. Maybe it started without that assumption. As I read this, it is more about the coding standard than the actual issues with a framework. It is definitely something to take in offline discussion. So, what are the positives? :) Always put the positives as well :) 
You just don't put everything in one file. No degree, study or philosophy is going to prove that fact.
Atom for me. It may or may not be the best, but it's simple to understand and use and I enjoy the addons for it (oh and free!)
This is fabulous https://bugs.python.org/issue18219
If I understand correctly, it’s actually a bug in a crypto lib they vendorize, so the solution is to update the lib (or disable that module when compiling). Updating crypto stuff has to be done carefully to avoid breaking other stuff, so maybe they are not sure if it’s safe to do.
Raymond is right, I used 3.6 for just one project and I'm already 100% sure dicts are ordered by default. I hjave to think about it when writing 2.7 at work. IMHO the best thing with default ordered dicts is kwargs ordering.. can be very useful sometimes. I hope they stay ordered, I'd trade ordering only with a big (BIG) speed gain. 
I would move most processing out of the f strings personally. Like templates in a web app, I think f strings should be used for 'presentation'. Of course, its entirely subjective re what constitutes presentation. Another argument might be that editors (that I know of) won't syntax highlight code in an f string. Although I suspect they will at some point. Suspect that best practices for f strings are still up in the air. Thanks for starting the conversation!
Spacemacs for life
Emacs (Prelude + Anaconda)
Atom
I alternate between Atom and Visual Studio Code. I love both
I wrote [an answer on Stack Overflow](https://stackoverflow.com/a/21384492/965332) a couple years back (still up to date) that people seemed to like. 
Vim + Jedi and PyCharm
Debugging a data acquisition and logging application... We've had several crashes in the frozen (w/ pyinstaller) app with no error traces in the software logs meaning that no exceptions have been raised. I'm suspecting C extensions as the culprit (e.g., pydaqmx). Currently trying to reproduce the error with tracing (stdout rerouted to a file) to see where the crash occurs.
&gt; I think, on reflection, that I should have moved the comprehensions out of the f-strings! Maybe, but I like that it is possible at all, because small expressions which don't need extra names are easy to hand with f-strings: &gt;&gt;&gt; from random import randint &gt;&gt;&gt; sample = [randint(0, 10) for _ in range(100)] &gt;&gt;&gt; print(f'Out of {len(sample)} tries, {max(sample)} was the maximum and {min(sample)} the minimum') Out of 100 tries, 10 was the maximum and 0 the minimum This `{sum(anti_monty_hall(switch=True) for _ in range(iterations))}` is maybe too much. Especially when you need to maintain it...
Another damned thing for me to learn! Going on the to-do list. 
Being a web developer mainly experienced in HTML/CSS/JavaScript and getting back into playing around with Python, Django is just really fun to use. These tutorials are quite high quality.
Ever tried ZEUS IDE? Really love the [testimonials](http://www.zeusedit.com/testimonials.html). :D I am impressed that there is still a market for BRIEF clone, was popular in the 80s under OS/2 and DOS. Personally I prefer just atom, runs like a charm, has alot of convienence features and I really like the plugin system. Also which editor has such a kickass commercial [spot](https://www.youtube.com/watch?v=Y7aEiVwBAdk)!
Pycharm
Are you associated with this project? From what I see every single comment you have made on reddit is evangelically pro-Jam.py. It's not cool to pretend to be a normal user to pimp your software.
Why?
Currently, I'm lovin Visual Studio Code
Do it at least in proper code: shameLevel = 3 print ', '.join(['shame'] * shameLevel)
I think it's best to think of the old way of formatting with %s and do what you would do there. I have the feeling you would have never written a list iterator in a line like this. print "something %s" % sum(anti_monty(x) for x in range(iterations)) But doing a len or simple things you would've. print "something %s" % len(iterations) 
Yes, totally agree. I don't know if it helps in your use case, but have you looked at PyTorch? It is not only useful for neural networks, but it can also replace/accelerate many of the core operations of numpy and also has built-in automatic gradient computation if you operate on `torch.autograd.Variable` variables. Conversion between torch arrays and numpy arrays before/after computation is a matter of a simple function call and GPU offloading is also very easy and efficient. Edit: Link to a short overview: http://pytorch.org/tutorials/beginner/blitz/autograd_tutorial.html
emacs :)
A small order app using web.py for a midle agro farm.
On the bright side, that’s hours more coding experience.
On Software Archaeology today...
Visual Studio Code &amp; IDLE
&gt; Currently, I'm lovin Visual Studio Code Yeah me too. Usually I'm not into Microsoft stuff but VS Code feels better and faster than Atom. I use it even on Ubuntu. PyCharm is nice but with Python I just use as a text editor so VS Code is better. But I really like Jetbrains products thought.
yeah, bad practice to use mixed casing. just choose one and stick with it. should note however, there are times where you break styles. e.g. most people use ALL_CAPS for constant variables and Title casing for class names.
Pfff... reposted this in r/learnpython. Will get back to you tomorrow when this small project is complete.
**Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#3: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
You literary made my day! This is what I wanted and was just about to reinvent the wheel. I don't have to struggle with chaos excel sheets someone made for just making invoices anymore. How can I buy a glass of beer for you? xD Let me contribute its i18n feature someday.
&gt; An ordinary dict is only ordered in CPython not elsewhere. AFAIK it is in pypy as well, as that's where the dictionary implementation came from (ish).
/r/java is that way.
Sublime 3
Sublime 3 + Anaconda (not the package manager) plugin.
If you were using 3.6, you could say: feeling = "shame" print(f"{feeling} {feeling} {feeling}") F-strings are awesome!
Thank you!
Why wouldn't you mention where you are located?
IME this usually happens when you open a file and treat the bytes as a string. This works often enough for it to become annoying when it suddenly stops working. Kind of wish python was stricter about this (python3 is better than 2 but still not strict enough IMO). This is one reason I like opening files with path.py. It's very obvious that you didn't get a string coz you read it with the method bytes(): contents_as_string = Path("myfile.txt").bytes().decode('utf8')
vim 
Very very minor performance hit, since type annotations are stored as attributes on the classes/functions
PyCharm, for any OS.
It seemed more convenient at the time it was written. All metadata - code, database information, parameters and so on are stored in the sqlite database. Tables and their fields are defined as records in that database tables not as classes.
VSC + python plugin + python snippets 
I think he meant the compiler took hours :)
I think it's legitimate actually. You won't get anywhere in programming if you don't RTFM and it should be the first place you go. Any better question might be "I don't understand this part of the manual". Now of course if you're in a live environment, you can ask the person next to you to tell you basically what type hinting it is, and it'll be quicker, but on the interweb it would be more efficient to hit google, than waiting for a reddit reply. The first bit of code you see in the docs is `def greeting(name: str) -&gt; str:` and if you don't get it after that, you would want to ask that question on /r/learnpython, and not here.
camelCase is good enough for the standardLibrary. Look at logging. :-)
Try this: http://freetexthost.com/wqb3ixv0h3 Though I encourage you to read through the code and try to understand what it is doing. Then try to recreate the code from memory.
Here you will get clear installation steps https://blog.penjee.com/setting-up-python-3-on-windows-7/ Or Try Out: I think this might work: Go to C:/Users/XXX/AppData/Local/Temp or simply %LocalAppData%/Temp. Go to Properties. Change permission level for everyone to FULL ACCESS.
I mean, not quite. The Python interpreter isn't so naive as to 'regenerate' inner functions on every call to the outer function. The function object is recreated but the containing code is [only interpreted once](https://stackoverflow.com/questions/7839632/is-there-an-overhead-when-nesting-functions-in-python), i.e. the operation is O(1). This does add a slight overhead but denouncing closures altogether is an overreaction.
Yes, PyCharm is the best, but you can use any text editor (I recommend VS Code)
I'd use the first one actually, as the `sum()` expression is being used purely for presentation in the print statement, and it would clutter the code to store the result in a variable.
VScode is surprisingly good.
Assuming you like to keep the socket open, because if not go with /u/stainedhat 's response. 1) Make sure your client isn't sending 2 messages before the server has already entirely received the first message. This means that your server should send something back to the client as signal the client can send again. 2) doublecheck that the frame sizes received at server and client are the same. (if not you might have byte order issues, and should try using struct.pack(..) starting with '&lt;' or '&gt;' to enforce little or big indian at both client and server) 3) know that the socket.recv will have some chance to return less than what you "ask" for (you pass a maximum buffer size rather than passing the size of the data you're wanting back). If you are sending a lot at once, you should read it in chunks until you've read all of it. It will not raise an error if recv returns less than what you passed as buffer. chunk = 1024 remaining = data_size data = '' while remaining &gt; 0: data += connection.recv(chunk) remaining = data_size - len(data) connection.sendall(struct.pack('?', True)) # Signal to client it can send more return data 
Jupyter Notebooks.
Thanks, it worked! 
There are also docker images that target ARM and can run on x86-64. 
I would love to hear more about this. What was the traditional (=without python) way of doing this? What type/size of ship it is?
I think your question is better asked in the support forum for your editor. 
Absolutely not. Do you homework mate when launching something personal, check how many issues I've raised on git. It is not that hard, the account is the same to make it easier for you. 
Pycharm is my go-to
Tried several, and i've been more productive with emacs. Just try them out and get stuff done, it's all that matters i guess. 
I'm sorry but why do people seem to consider jupyter to be an IDE. It's nowhere near aimed at being one. Don't get me wrong, I love jupyter. As a bioinformatics person I use it pretty much every day but it's for documenting computation stories not developing reusable code. 
Python.org Go read the language primer.
Well, some questions are definitely warranted after seeing that. 
It's under the 'Python' section in your screenshot
I'm not sure why that is evidence in your favour. Most of the early issues on my projects have been raised by my friends who are beta testing. It's just strange that every single comment you've made has referenced Jam and almost every contribution on your github account is for their repo. It's entirely possible that you just love the framework, and want others to try it, and if that's the case, then I apologise. 
PyCharm 
Atom
Spacemacs
Thinking about what to work on still clueless
Are we converging on: "Simple expressions of up to two names; up to two operators and up to two method/function calls"? Subject to the standing, overall, suggestions of PEP8
Video? Nope sorry.
wasnt some sketchy stuff going on with Atom not too long ago? Has it been resolved?
agreed. IMO do what you do when using the `.format` string stuff. I imagine comprehensions will make strings extremely long anyway so...
Spyder
Part of video "The disadvantage of running inside a virtual machine is that Java programs run more slowly than Python programs" ... I don't think you missed much xD ^^I ^^hope ^^this ^^video ^^gets ^^removed
I use sublime text.
&gt; editors (that I know of) won't syntax highlight code in an f string. PyCharm handles syntax inside the f-string, even continues to do code completion on objects inside the brace.
Pycharm does syntax highlight f-strings, afaicr.
Your giving the read_excel function a list of paths. Read_excel, accepts a sting or a path object. See office docs http://pandas.pydata.org/pandas-docs/version/0.20/generated/pandas.read_excel.html 
But you get the general idea of what it is from that one line of code. As to specifically how and where it does it, and how strong the contract is: sure, that will need deeper investigation.
&gt; why do people seem to consider jupyter to be an IDE. Because we use it as one? It has all of the features I need, stays out of my way and lets me focus on code. I've tried everything else people have suggested: vim, PyCharm, Spyder and keep coming back to Jupyter. &gt; not developing reusable code. Maybe you're using it wrong? It's pretty much the only way I develop reusable code. What features do you consider missing that doesn't allow you to develop reusable code? 
Agreed.
The pep8 style guide does list these as common convention for python, although you are free to decide on your own, it's probably best to follow the communities suggestions. I would encourage all new programmers to become familiar with it. There are times where you will need to break convention, but as a newbie try to be vigilant in following it. https://www.python.org/dev/peps/pep-0008/
thanks!
[WinPython](https://winpython.github.io/) is the only thing I give my co-workers. It's portable can be zipped, moved and doesn't require admin access. 
That's unfortunate. Typed people like me tend to expect better performance because the compiler/interpreter can use typing hints to do optimization.
Can you list the modules you will be using.
Apologies accepted. As I said, the account is the same. Cheers from the Southern Hemisphere, gone surfing...
Found it! ;)
It's not possible with `for` loops or assignments because they're syntax. It is possible with mathematical operators, by using the functions in the `operator` module.
... We see a desperate soul collecting sand for Silicon. They expect to have "Hello World" on the screen by the end of the day...
It’s so nice and simple. 
I think your link is dead...
Must have gone down for a few minutes. Looks like it's back up now
pycharm! 
Sure, and thanks for the help, although I did manage to get this particular data set loaded and learned that one needs to know their data encoding or must use a library to detect/guess the correct encoding. [This is the page](http://www12.statcan.gc.ca/census-recensement/2016/dp-pd/dt-td/Rp-eng.cfm?TABID=4&amp;LANG=E&amp;A=R&amp;APATH=3&amp;DETAIL=0&amp;DIM=0&amp;FL=A&amp;FREE=0&amp;GC=01&amp;GL=-1&amp;GID=1255667&amp;GK=1&amp;GRP=1&amp;O=D&amp;PID=109790&amp;PRID=10&amp;PTYPE=109445&amp;S=0&amp;SHOWALL=0&amp;SUB=0&amp;Temporal=2016&amp;THEME=115&amp;VID=0&amp;VNAMEE=&amp;VNAMEF=&amp;D1=0&amp;D2=0&amp;D3=0&amp;D4=0&amp;D5=0&amp;D6=0) containing the link to the data where I downloaded the [CSV (comma-separated values)](http://www12.statcan.gc.ca/census-recensement/2016/dp-pd/dt-td/CompDataDownload.cfm?LANG=E&amp;PID=109790&amp;OFT=CSV) file under 'Download entire table.' import csv with open('98-400-X2016001_English_CSV_data.csv') as csvfile: readCSV = csv.reader(csvfile, delimiter=',') for row in readCSV: print(row[3]) 
I really want to like Atom but it turns my computer into a hairdryer pretty quickly
indeed. I really like the variable explorer. For someone who is going into Python from Matlab, Spyder is amazing! 
I'm new to Python, but I've been mucking about in Visual Studio and IDLE mainly and they both work pretty well for me. Also gave Thonny a go and I think it's probably a good choice for an introductory course.
You have a strange idea of what an actual python looks like. 
Oh please, it's snakey enough sheesh.
Wow...I love CPython, but it's not faster, even for single core. Sure would be nice to have a VM so we could have easier multithreading.
This is probably a silly question, but I'm just reintegrating to Python after years (and had only experimented then) but I downloaded Anaconda for Jupyter notebook last night, will all the libraries still be available through PyCharm? Jupyter seems nice for sketching ideas but the interface is super foreign to me.
Yes, if you add Anaconda as an interpreter in PyCharm.
Intellij! These days its typically for Scala, python, kotlin, and sql. Little bit of go. Bash counts too I guess. I also use the database UIs quite a bit.
Sure you could make a function that does those things. Your first example would involve some black magic since you would have to deal with a different namespace. Your second example is easy though: def for_loop(iterable, function): for item in iterable: function(item) for_loop([1,2,3], print) # call it --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
WingIDE
Yeah. But python is always dynamic typing. I bet on PyPy and Cython to use static typing hints to do some optimizations. Cython can be fully compatible to a static type logic, but PyPy has to obey to Pythons dymanicity.
Awesome, thanks!
It's been backported to Python 2.7 as well. It's not compatible if you use the nice form, but you can do it and it's not that bad.
Came here to say this. 
Show us the code!
Starting a greenfield project (REST API) in flask and taking this opportunity to learn alembic and marshmallow.
[Pff](https://youtu.be/PHIGke6Yzh8)
I was more commenting on the verbosity level.
Second this, it eliminates the barrier of entry for coding. There is not environment setup and it is so simple to just install and code. Instant output and staged editing mean I can run one chunk, munge that code till it’s good, then not touch or re-run it unless I need to modify the output. 
Every single module, script and program I've created is a simple "Count to 10" development workflow. ```[project].ipynb``` Copy and pasted code. Use examples from documentation, etc. Loops are done like this: for x in xs: break x When I'm "done" I reset, run. Fix errors and then copy workbook. ```[project]-Copy1.ipynb```: Put what ever I did to ```x``` into a function. Merge cells that can be run together. Put my imports at the top. Continue development. By Copy5 I use ```%file``` to put functions into an external .py. By Copy9 I have a finished product. Then I'll sometimes flip over to Spyder3 to break everything out into separate folders and a proper module/__init__.py structure. But all of my heavy lifting is done in Jupyter. Sometimes projects never make it past Copy3. They work for me. They do what I need to and they're easy to run and debug even on remote machines. (```jupyter notebook --ip="*"```)
PyCharm. With a little bit of Notepad++ for quick and dirty edits 
FYI - if you're stuck on centos 6 rather than compile your own python you can use the [IUS repos](https://dl.iuscommunity.org/pub/ius/stable/CentOS/6/x86_64/repoview/) to yum install python3.6.
For instance, how do you import from a previous notebook? 
Can you provide a use case? Say I'm developing ```awesome_module.py``` ```awesome_module.ipynb``` - ```awesome_module-Copy5.ipynb``` everything is in the notebook. With Copy6 I join all of the ```awesome_module``` content into a single cell and use ```%file awesome_module.py``` then %load_ext autoreload %autoreload 2 from awesome_module import * Then all of my scripts should continue to work. If bugs or new features come up they get added to the first cell and auto reloaded. By ```Copy9``` I have a finished module with use case examples. I can leave the notebooks running and not have to worry about the state. I have some notebook servers at work that have been running on my desktop for weeks. If I get a few minutes to try something out I can just fire up a web browser, open the notebook and test some things out. The keybindings make it so that I rarely ever have to touch the keyboard. I've really tried a "real" IDE and find that my development is slower by at least 50%.
[removed]
Might just be me, but I wouldn't call any methods. Just any number of chained properties, with one or two outer functions. So I probably wouldn't do this: f"result is {foo.bar()}" But this would be fine: f"result is {foo.bar.baz.egg}" And this is fine: f"result is {max(foo.bar)}" 
It seems like you've understood, but I wanted to clarify here for posterity: PyCharm is an IDE, which is separate from the interpreter. As /u/K900_ pointed out, Anaconda is a distribution of the python interpreter. PyCharm needs an interpeter to run python code, which you can point it to (pointing to Anaconda or the official CPython distribution, etc). 
Python was named after Monty Python, not the snake.
you can simulate requests via python requests and dev. tools(network -&gt; xhr) or use something like scrapy splash(can render js and fast)
Totally agree on the pickup and go. No env build or worrying about any of it. Just open a new notebook, code and figure out what works. It’s also distributable, jupyter hub allows me to write a quick script, save it and copy the notebook to my co-workers notebook servers and they now have everything I did. They and edit and get it working for their needs easily. And if we need to take it to production, this process would work perfectly. 
Wow, so much wrong in so few words, it's almost impressive.
Its a 200 foot long research vessel. The traditional way is to literally fill a tank with sea water until a curved bubble level looks right. I find it's a huge pain because if the waves are rocking the boat at all it becomes more and more a guessing game.
200 feet ≈ 60 metres ^metric ^units ^bot ^| ^[feedback](https://www.reddit.com/r/metric_units/comments/73edn2/constructive_feedback_thread/) ^| ^[source](https://github.com/cannawen/metric_units_reddit_bot) ^| ^[hacktoberfest](https://www.reddit.com/r/metric_units/comments/73ef7e/contribute_to_metric_units/) ^| ^[block](https://www.reddit.com/message/compose?to=metric_units&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20please%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20If%20you%20are%20a%20moderator%2C%20please%20go%20to%20https%3A%2F%2Fwww.reddit.com%2Fr%2FPython%2Fabout%2Fbanned%2F) ^| ^v0.11.6
&gt; Typed people like me What does this mean exactly as Python is strongly but dynamically typed?
I would certainly avoid putting functions with side effects in there.
It's also so much easier to 'distribute' code to co-workers too. "Here, go to this URL". It's probably no coincidence that the keyboard shotcuts closely mimic Matlab's Code Section keyboard shortcuts. https://www.mathworks.com/help/matlab/matlab_prog/run-sections-of-programs.html I develop Matlab scripts and functions the exact same way. REPL all the way.
Spoken like a true developer
What do you want out of that example? What regex have you tried? 
#THIS
What
How **f**unctional!
We’ve all clicked F1
That's fucking hilarious
I attempted to sign up here yesterday and got the same (lack of) response. I found this answer on Quora: https://www.quora.com/Is-CodeEval-still-up-and-running They haven't updated their blog since Feb 2016, or their Facebook page since May 2015, so yeah, I think it's time to remove them from the sidebar. (As usual I'm 1-2 years behind on whatever's popular. :P )
How would lowering the screen brightness help?
Don't you mean muting my speakers?
I was just looking for a tool that can convert `format()` calls to `f-strings` and all I could find was that PyCharm can do it. My source [Python 3.6: A quick look](https://blog.jetbrains.com/pycharm/2016/12/python-3-6-a-quick-look/).
With NeoVim as the text backend. At least for me.
I personally find the newer syntax cleaner in most scenarios. In this case, yes it is worse.
I think the [Rationale](https://www.python.org/dev/peps/pep-3101/#rationale) section of PEP 3101 is a good bet.
Define your use of the term real-time. If you are talking about hard real-time, i.e. guaranteed response times, you have big problems. In that case, don't even think about NoSQL (or databases at all), your problem is far baser than that. Look more into industrial control systems. You would need dedicated networks and local hardware (like PLCs build into each machine).
I want to match each word or int before a space to its own group. sorry each one of those would be on a separate line. root 1 0 0 May24 ? 00:00:32 /sbin/init root 1 0 0 May24 ? 00:00:32 [Foo] 
I believe he means *help!*.
Just because it's shorter in this case doesn't mean that's true for all cases. Also, my intuition tells me the new syntax is much more efficient.
So the `split()` method? In pure python: &gt;&gt;&gt; line = "root 1 0 0 May24 ? 00:00:32 /sbin/init" &gt;&gt;&gt; line.split() ['root', '1', '0', '0', 'May24', '?', '00:00:32', '/sbin/init'] Or in re: &gt;&gt;&gt; line = "root 1 0 0 May24 ? 00:00:32 /sbin/init" &gt;&gt;&gt; re.split(' ', line) ['root', '1', '0', '0', 'May24', '?', '00:00:32', '/sbin/init'] 
Pah, forget statements, here is a real method: In [0]: print(*['shame']*3, sep=', ') shame, shame, shame 
You should read more Little Prince
Buddy as in a partner to check up on each other's work?
It's older, but it's not gone or going anywhere. If you like the printf style, use it. 
Actually the `%&lt;token&gt;` syntax is quite a bit faster than `.format()`. Especially for stuff like `%d` and `%f`.
I would like to nominate this for the most useless post out there this year. I hope you win.
yeah, to check up on each other's work, doing the course 'together', motivating each other to finish the course etc.
Try it out in https://regex101.com/ I used a regexp of `r'(\S+)'` and `re.finditer`
Sorry, my brain is a bit fuzzy.. I thought they deprecated it. *Phew*
http://regexr.com/
I would suggest you take a look at `concurrent.futures`, it's a much cleaner-to-implement variant on `multiprocessing` in my opinion.
Use [psutil](https://pypi.python.org/pypi/psutil/) instead?
Does kwargs ordering matter? I saw that, and that kwargs ordering is promised in the future (I suppose they would switch to OrderedDict if if the dict behavior changed.), what do you do with kwargs where the order is relevant?
Surely I'll update to 3.6.3 the day before 3.6.4 or 3.7 comes out. :)
I started that course not long ago, I'm on the Problem Set 1, so I guess I could be your programming buddy? I dunno. :P
thats just an example it won't always be root or the same time. 
You can create a practice account on Oanda and use their rest API to get live quotes. 
? OK... so? I strongly suspect this is an XY problem. What is your actual goal here? 
oh for sure. i am on the first week too. where do you wanna connect, i suggest slack?
Ok yeah thats clean!! Anyway to map those split into a dictionary? 
If you have a list of keys then you can use `zip`: data = dict(zip(list_of_keys, line.split()) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
In [this post](http://paddy3118.blogspot.co.uk/2017/09/unit-conversions.html) section *"Result supporting three units of measurement and using classes"* near the bottom, the code has several f-strings that I am much happier with. The most complex use of f-string expressions here does *not* include embedded comprehensions, but does include a method call: for units in [0, 100, 66400, 172801, 987987]: print(f'{units:6} {plurals[0]} is: {unit_convertor(units)}') I save creating names for intermediate values only used once. I think it remains clear (coming back to the code after a week or so). 
Seconded, if you're talking real time financial data (the most valuable use case I can think of) you need to worry about hardware infrastructure first.
Why write unit test that a complier can do for free? 
Would you, and other "HTF do you do that?!" individuals, like a short tutorial or something on how I do it? I've tried, struggled and failed to use a real IDE over and over. Maybe it's just how my ADH-WANNA RIDE BICYCES- brain works or that I came from MATLAB but I've just found using it is my most efficient and best workflow. I've been developing that way for ~4 years now and probably have dozens of modules and tools that I use daily developed that way. Once development is to the point of moving it to separate files or a folder I move to Spyder, but don't really use it as an IDE.
Simple things should be easy, complex things are allowed to be difficult.
Yeah, that's just an encoding issue. They're getting rarer and rarer... That said, let me blow your mind... Pandas. Seriously, invest the time to learn Pandas. You can import CSV with it and it takes care of encoding and other nonsense. In fact it can import tons and tons of formats, but it's so much more than that. If you know about it, then my bad, but seriously, you should be using it for this.
&gt; Anything that can be done with Excel can be done much better and faster with Python. My goal is to kill all use of Excel and VBA within the bank. Is this hyperbole or are you serious? Spreadsheet applications fulfill a very wide variety of roles and I doubt that everything people use spreadsheets for can be done better and faster in Python (unless you build a spreadsheet like interface in Python). Yes, spreadsheets are used in many places where databases would be more suitable. But the learning curve for a spreadsheet is significantly simpler than databases and code. The vast majority of spreadsheet users I have worked with get by without understanding data types. Even in a dynamically typed language like Python, that's not going to get you very far. I am yet to find a tool that's better for understanding/manipulating small flat datasets that using Excel pivot tables. You can rearrange the pivot table in seconds, and double clicking a cell gives you all the detail behind it. Point me to where Python does better than that and I will gladly adopt.
it's a start. see if you can tune it so your ram usage is a sine wave! i accidentally did it once... though i haven't been able to replicate it so it was also other scripts i was running. 
It’s irrelevant, the project can be worked on from anywhere,....in fact due to its nature I would prefer a dev team from all around the country, if not the world. 
Where "the country" presumably means the US. OK. That sort of thing is rather relevant, I for instance would never get a remote job.
It's because they don't understand the difference and most who use it aren't writing anything particularly sophisticated from a architectual standpoint nor do they usually write things intended to be used in someone else's code. Most of the time they aren't doing serious collaboration, they arent intending it for widespread usage and certainly don't really have a need for performance. When you strip out so much of what makes development complicated from the use cases, then they wouldn't notice what something like pycharm would do for them. Consider that they don't seem to know that pycharm has a repl. One person even stated sharing the link or website was distributing code. Merging cells somehow constitutes architecture. Even this bizzaro idea that cells are special things only for Jupyter is amusing. For what they do they just don't know the difference. I bet most of them would be far more produtive with spyder though they would have to write markdown in a separate file. They get a few basic tools without having to know how they work and that lets them be a little more productive up front as long as what they are doing stays simple. I personally do not believe that Jupyter actually makes things simpler. I think that's most of the people are just afraid of documentation and having to read it. jupyter is intuitive enough and simplified enough that they don't have to read it. Now when a real ide-like version like Jupyter Labs get uptake, they'll ooooh and ahhhh and finally get it.
I suppose for that sake it is relevant. 
I don't think this works in Python 2. Python 2.7 with an import from future, maybe.
Personally I use Sublime Text with plug-ins, but PyCharm comes with a bunch of stuff out of the factory.
And for IO bound tasks (database, http, etc) my favorite is still [gevent's `gevent.Pool.imap_unordered`](http://www.gevent.org/gevent.pool.html#gevent.pool.Pool.imap). from gevent import sleep from gevent.pool import Pool ... ... failed = Queue() def pool_fn(o): index, o = o try: logger.info(o) process_record(token, url, o) except Exception as e: logger.exception(e, exc_info=True) failed.put(o) sleep_time = config.gevent.delay_secs if sleep_time: sleep(sleep_time) return index pool = Pool(size=config.gevent.concurrent) for result in pool.imap_unordered(pool_fn, enumerate(work_orders)): logger.info('finished %d/%d', result, work_order_count) pool.join(timeout=10.0) logger.info('pool threads free, %d', pool.free_count()) pool.kill() if not failed.empty(): logger.error('failed rows: ') while not failed.empty(): logger.error(' - %s', failed.get()) logger.info('done')
There could be an argument for the new syntax being more explicit. For example, let's say there is a formatting string `fmt` that defines the formatting using either `{}` or `%`, and a tuple `data` that contains the values to be formatted. Then the old way would look like: fmt % data But let's say I had some arbitrary integers `first` and `length` and I used the modulo operator on them: first % length Depending on the context, it might take some reading to figure out what is happening when we see a `%`. Whereas the new way is perfectly clear about it. fmt.format(*data) Another possible critique of the old way along the same lines is that, with the new way, replacement fields are more easily identifiable, though that's probably subjective. For example, `'%sm%ss'` vs `'{}m{}s'` for formatting minutes and seconds. And one more example: left and right aligning text using spaces could be said to be clearer in the new syntax. `'%12s'` vs `'{:&gt;12}'` for right aligning, and `'%-12s'` vs `'{:&lt;12}'` for left aligning. With the new syntax, the notation for left aligning is clear once you know the notation for right aligning. I would argue that the same is not true with the old syntax, as it doesn't follow from the notation for left aligning that the notation for right aligning would require a `-`. All in all I feel that the new syntax is more explicit and less surprising. Shorter is not always better.
Great! Now let me pre-define 10 bans, allow a boolean "even_ban_friendly", and top choices based on the role I've been assigned. I'd use that :)
Here's one where the network utilization graph [looks like an EKG](https://imgur.com/a/Z08cr)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/dd40KtQ.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dnwv988) 
I need somebody!
I was thinking more in the direction of safety systems. For example, emergency stop mechanisms, that save lives in case of malfunctions. But yeah, financial data is important too :)
`exec` is a statement, not an expression (in python 2). Did you mean `eval`?
Thanks for the heads up
`exec` is a function, you need to call it with parenthesis. Although in your case since you want to return the result you need `ast.literal_eval`: from ast import literal_eval if literal_eval(x): # etc --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Sucks about the 2.7, but I'd rather use that over normal processing. Cheers m8
Duplicate parameters is one advantage. 'i am {name}. Give {name} money'.format(name='bob') Python 2.6 and 2.7 also support this syntax. 
You might like f strings. That said, Format strings are quite a bit more powerful and flexible than modulo strings. It's a cherry picked example you're complaining about Additionally you should strive when possible to use modern constructs when you know old ones have a shelf life. "Whew" is part of why people have kept lugging around python 2. They keep producing incompatible code.
Dictionaries also work: &gt;&gt;&gt; mydict = {'key1': 'test1', 'key2': 'test2'} &gt;&gt;&gt; fmt = "{key1} is better than {key2}" &gt;&gt;&gt; fmt.format(**mydict) 'test1 is better than test2' &amp;nbsp; This is especially useful for me with objects, I use it for django models for example &gt;&gt;&gt; user = User.objects.first() &gt;&gt;&gt; fmt = '{first_name} {last_name}' &gt;&gt;&gt; fmt'.format(**user.__dict__) 'Testy McTester' 
Eh I was convinced I needed exec, it works with eval. Thanks
My bad
I definitely agree with you that with the new way of formatting strings the replacement fields are easier to find. Especially in strings like your example: `'%sm%ss' vs '{}m{}s'`. For the first point you're making, I understand it can be difficult to see in a blink of an eye what is meant with a statement like `myvar = fmt % data`. But as I see it it would be very easy to figure it out by looking at the context. Moreover, I feel as though the new syntax often looks like a big pile of characters. For example `"Data: {}".format(data)` to me looks like a jumble of characters doing lots of complicated rhings. I love the fact you can easily what the formatted string is and what the replacements are with the old syntax: `"Data: %s" % data`. Lastly, I don't know if this only applies to me, but the old syntax looks very natural to me (that could have to do with the fact I've played around in C for some time, though). I see why people would say the new syntax makes more sense, but as you said: `...the notation for left aligning is clear once you know the notation for right aligning`. Isn't that true for the old syntax, too (12 vs. -12)? Is the new syntax more explicit? Well, it is literally is done by calling the function `format()`. But in my mind, at least, this explicitness does not outweigh the shortness and "easiness" of the old syntax.
Either case, hardware is first priority! 
str.format() is not exclusive to Python 3.
Hah! That's one of the next steps, realistically. Still needs some polishing to get into that, but that's also no rocket science, so we can say achievable. Thanks for the tip! :-)
I know python more or less just suck at regex. Is there an easy way to grab the nth occurance of a whole word? 
What? Are you asking something? Reddit has no idea what you are talking about.
Aside from the incredible sloppiness of this post, and ignoring the meager content ... You have no idea what the f*** you're doing and you really need to not be teaching people.
Show us some example data and what you want out. Also, tell us about the big picture. What are you trying to accomplish with this. 
I'd call it more pythonic than snakey
Most of the python3 changes have been for very good reasons -- the confusion between the various string types needed to die, for instance. % formatting? Not actually terrible.
the new way works via passing the format specification to the object being formatted, and in turn allows for extendability the old way works by knowing the type to format in advance, so as a result, it only works with the string representation of custom objects (so useless for number types defined outside of the stdlib for instance) --- the old way also has some horrible quirks, e.g. "value: %s"%((1,),) to display a single unnested tuple iirc
For everyone confused about this post, hopefully this clears it up: `(lambda x: str(x))((lambda x: int(x))(__builtins__.input.__call__()))`
I simply prefer the printf interpolation style for its history. It's a standard across countless languages since the wee days of Unix, back in the 70s. Also, I get itchy when variable names appear in strings, especially strings that will need to go through a translation process. Ask someone who isn't a developer to help out and they decide to turn "My name is {name}." into "『名前』と申します。" Code is code. Strings are strings.
If you want to propagate constructs that are antiquated, you are then an example of the confusion. You would then be the one forcing everyone to maintain multiple apis. But consider once more what I said ... What i'm saying is if you want much cleaner syntax, consider f-strings. f strings are faster than both mod and format strings if that matters to you. I'm glad you think mod strings aren't terrible because that means you should be ok with format strings. Mod - strings and format strings have nearly identical syntax if you remove the 'format'. It's just format strings are much more flexible. you can do things like print('{0}, {1}, {0}'.format(x, y)) which would then make certain cases shorter than old mod-strings. 
No C programmer has ever had an off-by-one error because the compiler picked it up for them? I'm waiting for the proof that statically typed languages produce fewer bugs than dynamically typed ones. Personally I'd guess that the ability of the programmer is far more important than the languages being used.
`'I am %(name)s. Give %(name)s money' % {'name': 'bob'}`
made my night
Please put your mind at rest with [Status regarding Old vs. Advanced String Formating](www.gossamer-threads.com/lists/python/dev/969817).
Came here to say this. https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/
Django has and will have ongoing updates, pen testing, security patches, etc. This takes a sizeable effort that is hard for a small group to replace. 
No sources :(
There are some terminal interaction support routines here: https://github.com/wavefrontHQ/install/blob/master/install_utils.py (BTW, there is nothing special about that example, it was the fourth google result for "python interactive installation script".)
I made a script at work that makes the 5 minute load average look like a sawtooth wave. May edit to upload screenshot if I remember or care tomorrow.
[snake_segment] * 4 done
`random.randint(a,b)` gives any `int` between and including `a` and `b`. What is `Modifier`? Also, you've broken [the rules of naming](https://www.python.org/dev/peps/pep-0008/).
What resources about scrapping do you recommend me?
oh, sorry modifier is a second input. Ideally I want it to end up generating a random number, plus the modifier. so a 20 sided dice is rolled, the result is say, 15, and the modifier is 2 so it takes 15 and adds 2 for a final result.
Out of curiosity, do you know how this setup compares to Elpy? I use emacs as well, because it's more than convenient to be able to use the same IDE for Python, Fortran and LaTeX, and the git integration through magit makes it complete. But I never used anaconda-mode before, so I wonder what does it have to offer compared to Elpy!
If the code snippet you posted above is verbatim then the reason you won't get higher than 5 is because of a small typo in this line: DiceSide = input ('Sides: ') I think you meant DiceSides here! :)
That's too bad. Thanks for the confirmation.
 f"I am {name}. Give {name} money." 
Had to backport a 3.6 library to 3.5 today. Can PyCharm go from f-strings to .format or module style?
I pull the running processes and names on a Linux box as shown earlier. I want to map those to databases. I'd like to grab all of the UIDS,and place them in a hash map. All of the pids etc etc. Pythons weird data structures are confusing. 
How certain are you that `randint(1,6)` never returns 6? It does on my machine, so either your version of Python has a bug (nope), `DiceSides` isn't 6, or `Modifier` is -1 for some reason.
Thanks, this is very interesting. I will try it out. If I can write my own objective function in python, have it run efficiently on my GPU and automatically get the gradient of the error w.r.t. the weights then life will be good!
wow much scalability 
Cant really recommend a website..but packages wise..I learned requests, beautifulsoup, scrapy as a start for webscraping. I used css selector extension for chrome, to work with beautifulsoup. I'm now learning twitter with tweepy and twitter's API. For reddit you use PRAW and its API. I found that API is easiest to use for scraping if the web already has its own api. Search for tutorial on those packages! 
Why don't you use `psutil` as /u/awegge suggested? http://psutil.readthedocs.io/en/latest/#psutil.process_iter
A good approach for debugging is to print out all your variables and inputs into the console, allowing you to notice if something weird is happening. Have you just been unlucky so far? The code should work! &gt;&gt;&gt; random.randint(1,6) 6 &gt;&gt;&gt; random.randint(1,6) 1 A fun next step once you get it working would be to add support for the user to input "2d6+3" or "4d8"!
Neovim + Deoplete + Deoplete-jedi + Neosnippets + Unite/Denite + Neomake + VimFiler + ....
Emacs
Adding this functionality was one of the reasons `print` isn't a statement anymore. It is available with `from __future__ import print_function` I'd guess since 2.7. Also it is a little more powerful than a regular `join`: In [1]: print(*range(10), sep=', ') 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 In [2]: ', '.join(str(i) for i in range(10)) Out[2]: '0, 1, 2, 3, 4, 5, 6, 7, 8, 9' No explicit string conversion needed.
f strings may be faster when you know the values and format beforehand, but there are specialized cases were mod formatting is the best option if you're looking for speed. Specifically, I found that it's the fastest option when doing specialized csv output. I have a case where I know that my csv values will be numbers (numpy arrays, limited to certain types), but the precision and number of columns is variable. I had been using str.format on a dynamically generated format, but after some testing I found that mod formatting was faster. It's also what numpy.save_txt does. In my very narrow use case I don't need to worry about a full csv grammar as much as I do speed, and in ~6 years it hasn't failed me once. That being said, I use str.format everywhere else, and I'd use f strings if I didn't have to maintain code that runs under 2.7, 3.5, and 3.6. Just the nature of things. 
/r/learnpython 
Why should any one be frightened by a hat?
Said this and then I came
Hi, i also started the courses in the week. i can be theirs friend :) PD: My english not is the best, but my effort for speak it, yes it is.
&gt; Budget and time constraints, pressure to meet business demands, all of those things push the job of refactoring working existing code to the back of the line. [tic toc](https://pythonclock.org/) Definitely very shortsighted on the part of management 
I can't recommend pyenv enough for managing python installs. Super helpful if you need to have multiple versions on your machine (like for any centos install)
I've recently moved from Atom to VScode and I'm happy. I didn't believe the haters saying that Atom was slow until it started crashing on me and I tried VScode. 
Is there any way to use this with Brython or export Dash to run on a static page?
There are no rewarded challenges that I know of. Why would someone reward you for solving a problem that someone else has already solved? If you're talking about unsolved challenges, that's a different story. There are no "unsolved" Python problems. If you want some really challenging computer science problems, check out P=NP or Navier-Stokes.
This is beautiful.
I started learning machine learning course trying the exercises in both py and Matlab this is my first stint with python as a programming language 
hey, no worries :) we can all connect on Ryver.
Sounds like a job for re. Try /r/learnpython. Show them the code you have so far and they'll help you fix it. 
Maybe you should read line by line and keep each line as an element of a list. Then, put the replacement text in the correct line. Then you open a new file a write line by line from the list so created.
For me,, solving a problem using Python can be its own reward 😊 &lt;/trite&gt; 
I've no idea, I've never used PyCharm but I can use a search engine, which is how I got my previous answer :-)
That was amazing, although I have no idea what the pictures were supposed to be at the end.
Great, thank you.
So why haven't you put a comment on the bug tracker asking for someone to take the problem through to its conclusion? If nobody ever does this then the patch will never make it into core Python.
s/year/decade or s/year/century or s/year/millenium, it really is dreadful.
Can't we start putting learnpython on stupid blog posts. I'd rather see questions.
Python has nothing to do with blockchain technology other than being a language which can be used to develop all kinds of applications, including blockchain-based ones. 
Thank you, I know though. The project covers a wide scope of things, but python is very much necessary for it. 
You might want to change your title to "...knowledgeable in blockchain technology and python" to make it clear to readers or they might presume that you are not clear on what both are. You could also use "...and/or python" if you are OK with folks who know only python or folks who know only solidity for example - and there is a phase where you train those folks in whatever technological knowledge gaps might be present in your dev. Good luck with your project though.
Thank you, much appreciated
As a complete noob, that was way, way over my head. But I was already beginning to think of ways to incorporate something like that into projects down the line. Once I learn something more than “Hello World!” 😉
The link to the gentoo patch IS in the bug tracker. This is the only "progress" that has happened: &gt;What's the status of this issue? If it's not going to be fixed prior to &gt;3.6.2rc1, I'm going to downgrade it from "release blocker" as we've &gt;already released 3.6.1 without it. That's... interesting logic. And then nothing happened since.
The bug is caused by **nested comments**. A patch posted on Gentoo's bug tracker that simply deletes the comments enables the file to compile correctly. I don't understand why this simply can't be merged.
Is this the problem from the MIT Intro to CS course? Problem Set 1? 
 lines = [] with open('story.txt','r') as f: for line in f: lines.append(line) lines[n] = '*' with open('story.txt','w') as f: for line in lines: f.write(line)
Let's try again, why don't you do something about it on the Python bug tracker? Did you bother to read the entire Python issue? Did you see this [msg287407](https://bugs.python.org/issue29504#msg287407) which says `I don't have time to fix the issue right away. Python's copy of blake2 needs some manual massaging and tweaking.`? You expect somebody to fix it but can't even be bothered to flag it up, bloody marvellous, but you do have time to complain about it. What did your last skivvy die of, overwork?
check herox and hackerearth 
Savetxt doesn't support complex numbers properly. Loadtxt doesn't support their savetxt format.
Why not NLTK?
That's actually a hidden trick in Windows. They say, that, when your network utilization turns into an EKG, it's truly tracking someone's heart. If you at any moment close your computer, their heart will stop beating. The only way to save them is to calculate Pi on your computer for 10 trillion digits, but stopping once the "EKG" puts out the letters *W I N D E A T H*. FYI this is totally legit because I read it on some random forum 3 years ago and the poster signed it with his PGP key.
Yes, I think you can do that: http://pytorch.org/docs/master/notes/extending.html For a project of mine I will also need to implement a custom loss function in a few days, so I do hope it's as easy as it looks.
Help!
 def vowel_positions(sentence): vowels = ['a', 'e', 'i', 'o', 'u'] positions = [] for index, letter in enumerate(sentence): if letter in vowels: positions.append(index) return positions lulz = 'Python is fun to learn!' vowel_positions(lulz) 
Releasing your first thing on OSS is pretty hard, so many props to you!
It's not entirely ignored - the annotations are stored in an attribute of the object. This allows for some neat tricks, like [Hypothesis working out how to test your functions](https://hypothesis.readthedocs.io/en/latest/data.html#hypothesis.strategies.builds), or for runtime type-checking via a decorator (or import-level wizardry). Cython (*not* CPython) can use annotations for it's compilation hints - making Cython source compatible with the standard interpreter. Unfortunately they don't use the stdlib `typing` module though.
Not just anybody!
-Seems like it would be handy for little conversion scripts -Package is properly structured (first timers often make mistakes here) Issues: Some of these may be contrary to your design goals if you just want simplicity. -This won’t pipe binary data correctly - you probably want to read from sys.stdin.buffer which returns bytes, decode and convert to whatever the user defined function expects, and then encode and write to sys.stdout.buffer -Doesn’t handle pipe failures like EPIPE errors, crash of another process in the pipeline -Make sure you flush the output buffer before exiting Minor: -The single/double underscore privacy conventions are so strong in Python there’s no need to comment it is private usage -py.test is a lot nicer/easier to use than the built in unit test 
Oh that makes a lot of sense. Thank you!
You're Welcome
This looks extremely promising, I can't thank you enough! If you would care to report on your progress, I'd be very interested. I hope it all goes well.
Weeeuweeeeeeu. Weeeeeuweeeeeeue.
When running a complex Python program that takes quite a long time to execute, you might want to improve its execution time. But how? First of all, you need the tools to detect the bottlenecks of your code, i.e. which parts take longer to execute. [python isdigit](http://codinglio.com/python-isdigit-isnumeric-string-method/) This way, you can concentrate in speeding these parts first.
Here's a job for you all. Make this work with a windows executable and webm support. https://github.com/fapgauntlet/fg
https://youtu.be/Bxc_55ur-J4 This is actual footage of one how well my scripts run. OP is spot on IMO.
name = str(input("Enter your name : ").strip()) user_input = str(input("Guess the word : ").strip()) I believe you don't need to str() in the above lines. They are already strings. Nice job overall for a beginner! 
Thank you! This is exactly the type of feedback I was looking for. I will make the changes you suggested ASAP. Thank you for confirming the structure was correct, I did plenty of research but honestly was still a little uncertain.
Thank you!
[removed]
This is already really simple with a builtin module [`fileinput`](https://docs.python.org/3/library/fileinput.html): import fileinput for line in fileinput.input(): process(line) That will, by default, iterate over `sys.args[1:]` for filenames to open or read in STDIN as text. You can jimmy it so it only reads from STDIN so it matches your use case but I don't know why you'd do that.
That's only for reading in files though, right? Edit: after googling the module it's clear they aren't intended for similar use. The module you mentioned just provides a way to read/open a list of file. That list can come from stdin or sys.argv[1:]. Maybe you can use it to achieve something similar to what my package does but it's certainly not intended to be used like that.
It usually doesn't matter, but you can do nice things with it. I recently built an API where args and kwargs where used to build an ordered tree structure. With ordered kwargs I was able to make a "simple" insertion with args and a "named" insertion with kwargs mantaining the insertion ordering ([line 159 if interested](https://github.com/Hrabal/TemPy/blob/master/tempy/tempy.py)) so child nodes are accessible as parent's attrbibutes. Or imagine and API like that: def enrichment(original, **kwargs): for operation, operator in kwargs.items(): original = map(lambda x: getattr(x, operation)(operator), original) return list(original) a = [1,2,3,4,5] enriched = enrichment(a, __mul__=2, __add__=1) enriched_2 = enrichment(a, __add__=1, __mul__=2) print(enriched, enriched_2) ..that's useless (and a little insane) but with ordered kwargs you are able to do it, it's a feature in case you need it. 
[Source](https://stackoverflow.com/questions/8234445/python-format-output-string-right-alignment/8234511#8234511)
No, it's a list of files (that it opens), or reads from STDIN directly (not a list of files). It's super simple to test using that code: $ echo "this really isn't a file" | python test_fileinput.py this really isn't a file 
Ok, so it's similar functionality but different intended use case. If you want to read stdin line by line then you should use this approach. Sometimes, it doesn't make sense to read it line by line though (see my more advanced example in the documentation where I write the input to a MongoDB). Anyways, my package certainly isn't earth shattering. I'm sure you can find several ways to achieve the same thing. However, I think it provides a nice API for writing scripts that you may want to string together in a pipeline.
What if you want to pass in a command line argument instead? That command line argument _has_ to be a file name and it will _actually_ load it for you. That's not ideal. Clearly, the intended use cases for these packages is different.
If you want to add explicit arguments, layering on argparse is dead simple: import argparse import fileinput parser = argparse.ArgumentParser() parser.add_argument('files', metavar='FILE', nargs='*', help='Files to read, leave empty for STDIN') args = parser.parse_args() for line in fileinput.input(args.files): print(line) And that'll still handle STDIN if there's no files. Plus argparse buys you all sorts of goodies like `--help` and being able to keep other arguments out of fileinput so you could use both stdin and other arguments.
Yeah, I was mostly getting at the fact that you may need to take in lots of different types of arguments. Anyways, you could certainly do it like that. Or, you could just use the following: ``` from pipeable import Pipe @Pipe() def do_something(inp): process(inp) ``` Ultimately, it's up to you.
 My machine is configured (required?) to route outbound traffic through a proxy server. I tried to configure condarc file also. But no luck
I know os.rename(file_name, file_name.re.sub('[0-9]','', file_name)) is where I am messing up and have tried a few variations... I am thinking I maybe hurting myself not using 2.7 where the old rename is supported to follow along the course... 
http://emacsrocks.com :) it's pretty capable. http://wikemacs.org/wiki/Python see starter kits ! http://wikemacs.org/wiki/Starter_Kits
I don't usually tend to bash anyone trying to put something educational out there, but this is just bad and should be taken down 
Should os.rename(file_name, file_name.re.sub('[0-9]','', file_name)) not be os.rename(file_name, re.sub('[0-9]','', file_name))
Use Perl if you want to write Perl. If you want your problem solved, tell us what your end objective is, not how you try getting there.
You can also use a list comprehension: def vowel_positions(sentence): vowels = ['a', 'e', 'i', 'o', 'u'] return [i for i, x in enumerate(sentence) if x in vowels]
[‘b’, ‘e’, ‘a’, ‘u’, ‘t’, ‘i’, ‘f’, ‘u’, ‘l’]
I'm the admin at work for our Pardot instance, a marketing automation platform from Salesforce. It's our main email platform. You can't schedule reports with Pardot, so yesterday I made a script using [Selenium](http://www.seleniumhq.org/) that mimics me logging in to Pardot, navigating to the reports page, clicking Export, and then renaming/moving the file. The next step is to schedule this script to run daily...
I literally run on this problem (trying to tune the n_estimators) an hour ago. I found a solution in [this example](https://github.com/kianho/scikit-learn/blob/e038cb37599e42056ae74631cdd3691f3443813c/examples/ensemble/plot_ensemble_oob.py). I don't know about your error but apparently the correct way to do this is to find a valley in the graph produced by this script. Here it is as a function: def plot_oob(x, y, min_estimators=15, max_estimators=175): # Author: Kian Ho &lt;hui.kian.ho@gmail.com&gt; # Gilles Louppe &lt;g.louppe@gmail.com&gt; # Andreas Mueller &lt;amueller@ais.uni-bonn.de&gt; # # License: BSD 3 Clause from collections import OrderedDict from sklearn.ensemble import RandomForestClassifier RANDOM_STATE = 123 # NOTE: Setting the `warm_start` construction parameter to `True` disables # support for paralellised ensembles but is necessary for tracking the OOB # error trajectory during training. ensemble_clfs = [ ("RandomForestClassifier, max_features='sqrt'", RandomForestClassifier(warm_start=True, oob_score=True, max_features="sqrt", random_state=RANDOM_STATE)), ("RandomForestClassifier, max_features='log2'", RandomForestClassifier(warm_start=True, max_features='log2', oob_score=True, random_state=RANDOM_STATE)), ("RandomForestClassifier, max_features=None", RandomForestClassifier(warm_start=True, max_features=None, oob_score=True, random_state=RANDOM_STATE)) ] # Map a classifier name to a list of (&lt;n_estimators&gt;, &lt;error rate&gt;) pairs. error_rate = OrderedDict((label, []) for label, _ in ensemble_clfs) for label, clf in ensemble_clfs: for i in range(min_estimators, max_estimators + 1): clf.set_params(n_estimators=i) clf.fit(x, y) # Record the OOB error for each `n_estimators=i` setting. oob_error = 1 - clf.oob_score_ error_rate[label].append((i, oob_error)) # Generate the "OOB error rate" vs. "n_estimators" plot. for label, clf_err in error_rate.items(): xs, ys = zip(*clf_err) plt.plot(xs, ys, label=label) plt.xlim(min_estimators, max_estimators) plt.xlabel("n_estimators") plt.ylabel("OOB error rate") plt.legend(loc="upper right") plt.show() 
I have virtually no Cython experience, but I'll take some guesses: use an array for the ints (both "lst" and "combs"), keep the length yourself (?), don't use itertools or xrange. Looking up cython arrays in the docs seems like a good place to start at least.
Instagram smoothly transitioned from Python 2 to 3 with no service interruptions - and a company doesn't get much bigger than them, they've got 400 million daily users! 
I heard as Microsoft, not sure. 
I made a big step from being a system/network administrator and switch to Data analyst and ERP specialist at my current job (starting this week my new role). I read a lot on the job description and Python was mentioned almost in all of them. So I gathered a lot in /r/python, /r/learnpython and subscribed to /r/dailyprogrammer and I begin my long journey with Python 3 by my side. So excited!
I'm just starting out with using python and pis, so excuse me, if this is a silly question: Why do you need to compile?
You'll find /r/learnpython more responsive to these types of questions.
My company is... We certainly aren't a startup but with a team of only 4 people, 2 of which don't work on Python much we don't have a lot of time to do so. But, after about 4 years I think I'll be done with the switch for our critical code within the next 3-6 months. 
Intel is definitely not migrating anytime soon Edit: to be fair, I can only say that for sure about their storage division
Python on Linux defaults to 2 with Arch as a line exception. Everything else is the same except it becomes pip3, python3, and wherever else needs a 3 thrown on the end. You VN alias python and pip to the 3 versions using your bash alias. Do not change the system paths. That will bork your install. 
Not with Atom. Just the autocomplete addon. A company did something really, really naughty and burnt themselves with the community and industry. 
Odoo ported [v11 to Python 3.5+](https://github.com/odoo/odoo/issues/8530)
So this is going to be a rare one... Kdevelop with the python plug-ins. Like seriously, it's by far the most feature rich and underrated python ide out there. If you plan on doing stuff with QT then it embarrasses everything, even QT Creator. It's autocomplete, and just use is impressive beyond words One problem though. It is very feature rich.to the point that opening it up is overwhelming, but for large projects it's fantastic. 
It is very hard to see what is going on in all the average established companies. There are so many that don't blog or post about what they do.