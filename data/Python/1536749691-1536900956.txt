Talking about languages, coding language has nothing to do with real world language. It's same as with scientific languages. Noone changes Latin language and terms of medicine for centuries. No goverments tyrants or rulers dare to change it. But seemingly people at Python who did this have so low respect for their own profession to give up terms before the pressure of the group of whining crybabies.
Well I get your point but that is what is interesting me, the difference in memory usage of different runtime environments.
You should go outside. Experience nature for a week or so. Just disconnect completely from any screen. You need to rest and have some time for internal reflection.
Hmm. I hadn't thought of that, but I suppose so, yes. Basically the news source could sign their articles and then your aggregator would just Fetch All The Things, keeping only stuff that had a valid signature. The same would be true for other sharing networks: images, audio, &amp; video could be filtered for a valid signature.
If you're specifically comparing Python to Node, the answer is that Node does way more in its runtime than Python does.
But we. are not bullies! We are fighting bullies by baby-sitting and enforce even stricter and brutal regime.
Article as well as this movement is US specific. And for some. reason they try to enforce own dumb decisions on whole word.
Jesus christ the assumptions and /r/iamverysmart here, wow. Honestly, nothing more to say than that.
Sounds awesome.
&gt;If it matters, then we should change it. Non sequitur. It matters in many ways other than being marginally offensive to some vocal minority. And it should not be changed because it matters.
Reminds me of this: https://workplace.stackexchange.com/questions/56663
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Shouldn't this have been obvious a long time ago? The terminology should never have been adopted in the first place. Commenters are clearly correct: this is not language that anyone would use in a professional setting to describe a relationship between two things. On what exact principle would one reject this change? We should never update documentation? The master / slave relationship ought to be enshrined in tech jargon? You lunatics jumping at "SJW" phantoms need to get a grip on yourselves. There is no slippery slope here. There are already a multitude of words we would not use in this context, and yet we are not fast on our way to "banning all words." I cannot begin to understand why any sane and decent person would object to to this change. What, do you identify favorably with the master / slave relationship? Nobody is being attacked by this change. It's not about you unless you make it about you.
I'd would love a detailed explanation about how this is a psychological attack.
Yeah this is either satire or just someone being an idiot
No. Guido left because he was tired of fighting for PEP572, which he believed is a correct additions to Python. Assignment expressions. But you think whatever you need to, if it fits your way of thought :)
&gt; I got berated on a forum That's just retired.
Down
Just art, although thats a good idea for my next one
What stops those people who report fake news from signing their work as authentic? I don't see how this does anything to stop fake news. 
&gt;Are there other decisions in its design/implementation that reduce memory usage? Reference counting enables you to only use the memory that's required at that specific moment in time. When you move to garbage collection (mark and sweep style) you're often holding onto objects in memory until they are freed by a worker process traversing every single object to see if it's still alive. [GC](https://people.cs.umass.edu/~emery/pubs/gcvsmalloc.pdf) vs pythons atomic reference counting shows the differences. Furthermore there's no JIT to store optimised code paths (this can result in serious memory bloat in PyPy from what I've seen). 
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://people.cs.umass.edu/%7Eemery/pubs/gcvsmalloc.pdf) - Previous text "GC" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
I like this question. There's nothing to stop them from signing anything they want. Aletheia isn't a system of authority, but rather one for identification. There's nothing to stop Alex Jones from signing a doctored video of NASA officials confirming his crazy stories about Mars. What Aletheia *will* do is prevent anyone but the New York Times claiming that *"The New York Times said X"*. The idea is to attach attribution (and therefore responsibility) to the media we share online, so that we can use our natural human networks of *trust in institutions* to decide if we think something is real or not. Given that lately news organisations (with responsible fact checking &amp; editorial policies) are being eclipsed by companies &amp; bloggers that don't bother with either, I figure this is the sort of thing that will give truth an edge. It would let Facebook attach attribution to stories, and then the public can decide which providers out there are actually doing factual reporting. Again, I can't help it if the public believes that Fox News, the Daily Mail, or InfoWars to be responsible journalists -- that's a social problem and not a technical one. The only thing Aletheia does is attach origins to what we share, so that we can make our own decisions.
I need one of that, please and thank you.
Who or what are windows evangelists and what power do they take? 
Think about things to automate for example or solve your problems or just make things as efficient as possible. How much have you learned so far?
Sure, but, * Aletheia can be deployed now, with no requirement for a swarm of users * Its energy use is essentially zero * There's no risk of a 51% attack The bit about file formats that don't have metadata though -- yeah that sucks. The alternative however, of retaining a distributed database of file hashes for the purpose of guaranteeing authenticity -- I just don't see how it's feasible. If you disagree though, that's cool. You go write your blockchain-based system and we'll see which works best.
I have a cool example for you in case you're looking for one. A few days ago this was posted (8th of september): https://www.businessinsider.com/goldman-sachs-retreats-from-launching-crypto-trading-desk-2018-9 This got reposted by so many news websites, it's ridiculous! And this was the source. 2 days later: https://www.cnbc.com/2018/09/06/goldman-sachs-cfo-calls-reports-of-shutting-down-crypto-desk-fake-news.html So we got a problem here. A "reputable" website posted it, authors shown, everyone copied it because it did look legit, but I doubt they got real consequences. As a result of this fake news, bitcoin dropped 15% in 24 hours. Millions of dollars (in bitcoin) vanished.
&gt; slippery slope ....apply the same process to any words that anyone at any point that "could be interpreted as discriminatory or offensive". Snakes are offensive to nearly everyone. The name of the language should be changed!
That makes sense, thanks for the precise answer
If you make it into a coaster I’ll take one.
It's real. Look on the bug tracker: https://bugs.python.org/issue34605
&gt; If it matters, then we should change it. You are assuming that the *only possible way* it could matter is if it is offensive and needs changing. That's simply wrong and naive. Since it matters, it shouldn't be changed, 
If you're gonna be doing web scraping often, then I suggest you learn Scrapy. It's a very powerful tool that supports most common scraping tasks out of the box. It even has its own Selenium-like thing called [Splash](https://github.com/scrapy-plugins/scrapy-splash). You can use it on pages that make heavy use of Javascript. For one-off type of stuff just use Requests + BeautifulSoup, I guess. It requires way less time to learn. Making bots "manually" with BeautifulSoup is in no way inferior to using Scrapy, it will just take more work and time to get it to functionality that Scrapy provides you with out-of-the-box. For example, every Scrapy spider will run concurrently - there will be multiple spiders scraping your stuff at the same time, therefore significantly speeding up the whole process. If you wanted to do that with a manual scraper, you would have to do meddle with threads and stuff.
Part of what you said is true. A well known Soviet state propagandist and strategist (who is still working in the Kremlin) devised a method of "demoralizing and destabilizing" an enemy target by means of disrupting their sense of what is real and truthful, and what can be believed. This is clearly happening all over the world, but primarily in the US by means of targeting the media and centres of US cultural influence (universities, social media, etc) with campaigns of disinformation and pitting "one side against the other". But where people are getting it wrong now is believing that just ONE side of the US political spectrum is the target. That could not be farther from the Truth. These strategies are now being employed an masse on BOTH sides. And it's working *extremely* well. The right is now equated with insane alt-right ideologies, and the left is now equated with SJW nonsense. In fact, it's working so we'll that the right has *adopted* some of these alt-right demoralizing beliefs, just as the left is also embracing similarly demoralizing SJW beliefs. The question is how as a society do we fight this? The answer is NOT by controlling what information and what words we can use as a society. It lies somewhere along the lines of INCREASING freedom, such that the intentional disinformation becomes washed out by truth. Unfortunately we may be past the point of no return though. Our society is already starting to close up and restrict itself. This article is just one example. And again, it's happening on both sides. Don't kid yourselves. 
This is a great example of why the PSF's commitment to diversity is actually a wolf in sheep's clothing. This is not about diversity, it is about enforcing an American-centric worldview in the guise of "diversity". The whole world does not share the American obsession with black slavery (either making amends for it, or sneakily returning to it), nor should they have to tiptoe around the terms in case they "offend" somebody whose great-great-grandparents were slaves. Nor does "master/slave" necessarily have negative connotations. We talk about being a "slave to the music" or "a slave to love", as positive features. Working like a slave is a good thing (so long as you get paid and appreciated for it). The terms have positive connotations in the BDSM community, and one of the largest religions in the world is literally named "submission". The [prefix "Ab"](http://www.i-mag.org/intellectual-sections/macrophone/38-slave-servant-or-what.html) (as in Abdullah, for example) can be translated as meaning "slave or servant". You want diversity? Then accept that most of the world doesn't give a shit about American obsessions about atoning for their past history of slavery. Accept that not everyone thinks that master/slave are "bad words" that should be banned. This is about enforcing conformity. If you don't agree that master/slave is a bad term that hurts people, then you're not the right sort of diversity.
I was thinking of suggesting 'understudy' in place of 'standby' but 'understudy' is explicitly a person, at least in the context of theater.
Oh, so thats why pyinstaller wasn't working for me. How do I update pyinstaller now? (Through pip)
Great! Thanks! That gives me a place to start building up to all things required &amp;#x200B;
I can't tell if this is sarcasm or not... Are you suggesting that structural racism doesn't exist?
Uhh... People can be offended by things differently based on their skin color...
Given all the comments that follow are vitriol from the non-pc crowd, I think he was right do so. There was plenty of discussion, the change is minor and non breaking. What's the big deal? I especially like the person saying:"we became bigoted to spite stuff like this". Like, fuck off, you became an asshole because people were trying to be nicer? Nah they were always an asshole and are just finding excuses to justify it.
&gt; the purpose of communist propaganda was not to persuade or convince, not to inform, but to humiliate; and therefore, the less it corresponded to reality the better. &gt;When people are forced to remain silent when they are being told the most obvious lies, or even worse when they are forced to repeat the lies themselves, they lose once and for all their sense of probity. &gt;To assent to obvious lies is...in some small way to become evil oneself. One's standing to resist anything is thus eroded, and even destroyed. A society of emasculated liars is easy to control. 
I didn't intend to get any tips, I was curious for the fact some people actually use tkinter inside commercial software.
Sounds cool! Thank you for this! 
If only these people were passionate about taking on modern slavery as they are about some computer terms that don't affect anyone.
It's pretty simple to find hash collisions with integer keys: py&gt; hash(17) 17 py&gt; hash(17 + 2**31 - 1) 17 py&gt; hash(17 + 2**62 - 1) 17 but not so easy with strings. You can look at the [hash randomization PEP](https://www.python.org/dev/peps/pep-0456/), that might have some good information. 
It turns out that random people who are whipped up into a frenzy by social media and told "go yell at people over on this site!" do *not*, in fact, get a veto in Python's decision process. Python is open source, though, so if you want to you can always fork. Just remember the name is trademarked, so you'd need to change that. Try to come up with a catchy one that describes the unifying idea behind the fork, perhaps even serving dual purpose as name and slogan. Maybe something like "Politically Incorrect Expressions Championed Everywhere. Our Focus: Slave-Holder Influenced Terminology".
They are not "random people". People who commented on the bug report are Python core devs. And majority of them was against the change. Why do you manipulate?
Because I'm a low-down no-good Nazi fascist SJW snowflake moonbat pinko commie doubleplusungood thoughtcriming wrongthinking PC policing thoughtpolicing witch-hunting lynch-mobbing crybullying reverse-racist reverse-sexist no-good, very-bad person who wants to force you to undergo two dozen forced gender reassignments, get gay married to a dog, dye your hair blue, and identify as mayonnaise, obviously. (at least, judging from the typical discourse on these matters, that's what you probably believe about me)
99% of barcode reader are like keyboard inputs. 
Obviously not. Using names that are actually descriptive of what's going on is the first step on the slippery slope to Communist infiltration! Didn't you read the very convincing arguments to that effect made by other commenters in this thread? The menace has to be ended here! The line must be drawn!
Looks pretty cool. I had done something similar a while ago: ### [Square spiral - drawing with 3D effect (turtle graphics)](https://jugad2.blogspot.com/2016/08/square-spiral-drawing-with-3d-effect.html) &amp;#x200B;
Dash, as in the product by Plotly? If so, a better question would be if you could use it **without** Flask - Dash apps are a subclass of Flask apps. If you have a Flask app you would like to attach Dash stuff to, you can pass your Flask app (i.e. a flask.Flask() instance) to the Dash app initializer's *server* kwarg. If you have a Dash app you, say, want to extend with some Flask extensions, you can, similarly, access it by the Dash app instance's *server* attribute.
I support this if only to see tech people get up in arms about it.
Would truly be highly appreciated. Thanks.
It's also worth pointing out that it's inconsistent for the typical crowd of people who are up in arms about this to claim that everyone *else* is too thin-skinned and "fragile" and "triggered", when they react this way to what should be a pretty boring discussion of the best terms to use.
I was right considering 99% of people to be fucking idiots.
It depends on what you want. I like to use the Jupyter extension, divide the code into cells with `#%%`, and use Ctrl+Enter to run the cell and look at the output in the preview pane.
In any situation I've seen master/slave used the system relies on the master being function to control the slaves and the slave units are not able to be swapped in if the master fails. Manager and Worker would be a more literal replacement, but then we have to worry about offending unemployed people. Or whatever. I don't know.
This is the kind of ambiguity I look for in a language.
Hi, What's your ballpark budget for this contract? is this a remote or an onsite gig?
This reminds me of 1984. Strictly from memory, `He who controls the present controls the past, he who controls the past controls the future`.
&gt; is not diverse enough. How diverse must it be? What number of token minorities must we have to appease you? Do you not understand the hypocrisy of treating minorities as nothing more than a quota? Almost every word can be offensive to someone. Being offended by something doesn't make someone's opinion worth more.
&gt; It's dumb just because banning world doesn't solve the problem. Of course the purpose of the changes isn't some wishful scheme to abolish slavery, the idea is to substitute the culturally charged language with _more_ expressive words. [From the issue discussion:](https://bugs.python.org/issue34605#msg324739) &gt; For diversity reasons, it would be nice to try to avoid "master" and "slave" terminology which can be associated to slavery. These changes replace _"slave"_ and _"master"_ with descriptive terms, like **parent/child** and **client/server**. - https://github.com/python/cpython/pull/9099/files - https://github.com/python/cpython/pull/9101/files If it makes the language a more inviting place, what's wrong with it? 
&gt; So "primary" and "replica" fits pretty well. [...] "leader" and "follower" Except it doesn't. Consider load balancers. The slaves are not a replica of the master -- they serve entirely different purposes. You can't replace the master with a slave. The master doesn't lead the follower, it tells it what to do and it does its own separate task. Making the terminology more ambiguous because it can be offensive *in a completely separate context* is just silly.
In consensus protocols, leaders most certainly *do* tell followers what to do. And if a cluster of nodes are all performing separate tasks, does it even make sense to try to find a single name to apply? If there's one that hands out the instructions, why not call it the "manager" or "coordinator" or whatever, and then name the rest just based on what task they do? Why is it that this specific terminology is both so trivially unimportant nobody should care about it, but also so vitally and apocalyptically important that howling mobs have to descend to force the use of "slave" as the name?
Glad I could help. I've been adding HDF5 capability to a C++ code I work on in my day job. It produces data that is very hierarchical, which figured prominently into our decision to use HDF5 to begin with. A question I explored in the selection process was what kind of Python tools exist to read and query the files. That was when I came across PyTables.
How many lines of code did it take to achieve that? Seriously tho, you used a Dremel to do it?
This is gorgeous! :D
imagine all the people who got a Master's degree in computer science. To avoid offending anyone they now all need to hide that fact from their CV
Is there any way I may persuade you to be silent and accept my cash? 
It's always better to just stop arguing in the open source world. The internet is a big place and everyone has an opinion. I'm pretty sure the BDFL's matters more than yours. It's not just about backwards compatibility, but also removing limitations, enabling new features, etc.
Seriously. I'm kind of apathetic about it, but Stinner made a good point. I'll remove master/slave from my open source project just because it matters to people.
The people that are typically called thin skin are the people for it. It's ironic.
I'm sincerely lost on how this relates. "Let's adjust these distracting terms in our documentation," is not a factual claim that can be true or false. Who is being forced to remain silent? What is the lie?
I propose we substitute "master" with "massa" and obviously "slave" with "nigga". Are you happy now you suicide-inducing SJWs?
They have different perspectives of course.. Ones worth listening to. Doesn't mean they have *more value* which is specifically my problem. Their perspective gets no extra weight on it. It is just another and different and still important perspective. See the difference.
&gt;What is the lie? That "master/slave" in a technology context has anything to do with racism. I'm willing to be that in a few years "critical whiteness" textbooks will claim that tech culture was pro-slavery, and the proof for this claim will be the "master/slave" terminology, that had to be abolished by brave activists against the white male wannabe slave owners in the tech sector that were arguing against the change. They will probably also claim that this pro-slavery stance is the reason why black Americans are under-represented in tech. &gt; Who is being forced to remain silent? For now it's still a silly enough notion that people can argue about it publicly. But once the lie becomes "public consensus," for most of us won't be able to publicly disagree with the lie without risking our careers.
You can install Anaconda locally...
Your response seems wholly inappropriate in comparison to u/ubernostrum's response. Maybe try toning it down and remaining civil when *attempting* to have a discussion. You'll find you get better responses. Op simply pointed out that these aren't random people making these objections to the change but core devs. 
## Hiring Senior Django Developer at SnapEDA [https://djangojobs.net/jobs/788/senior-django-developer-snapeda/](https://djangojobs.net/jobs/788/senior-django-developer-snapeda/) &amp;#x200B; ## Qualifications for Success * 3+ years industry experience in software engineering with full-stack web applications (particularly with Django) * Demonstrated track record of designing and building high-throughput applications * Pragmatic approach to engineering that strikes a balance between beautiful code, maintainability, and time to market * Appreciation for a test-driven, code-review culture SnapEDA is a Y Combinator startup based in San Francisco. We offer competitive compensation in cash and equity, as well as health and dental benefits.
Actually it *does* hold more value considering the perspective would be from the group most impacted by the issue in the first place. You don't ask the group doing the marginalizing to rule on the issue without incorporating and heavily weighting the perspective of the marginalized group. That's the whole point of *equity*, *equality* of perspectives is not sufficient in the context of systemic racism and repression.
Marxism is a cultural revolution. It's designed to slowly convert society until it's primed to seek escape to communism. This is the purpose of SJW politics. This is the purpose of Cultural Marxism. 
I know. I just cannot believe Mr Python is agreeing to the insanity. 
Just for own own well being, thank you for recognizing reality. It's exhausting watching the insanity take hold everywhere. I can't tell you how many times I've been told that Cultural Marxism is a conspiracy theory pushed by the "far right" and "alt-right." Might I ask if you're older than 30? 
Well I don't think we have a problem with one group marginalizing another group, and systemic racism is not the context here. But i think that debate is better suited to a longer conversation format. I will say this. What you see as systemic. I see as individuals making bad decisions. Systemic is statistical and our problems lie in income inequality not racial inequality. Our disagreements stem from how we look at that context and I don't hope to convince you on reddit :)
Yes. I am. 
Having machinery available to (generically-aware) typecheck at runtime is still useful however slow it may be, for example at coarse boundaries between unannotated and typeannotated systems and during test runs. For complicated systems I'll happily pay the check overhead for the small amount of data the tests tend to run on and let production run unburdened by it.
Not true. You can easily build select by composing preserve, merge and take operators.
On udemy: https://www.udemy.com/the-complete-python-course/learn/v4/overview https://www.udemy.com/the-complete-python-postgresql-developer-course/learn/v4/overview
Thank you for the response! I've seen some poor reviews for udemy regarding them not being very helpful to customers have you had good experiences with them?
I used a scroll saw and a belt sander. I’ll keep the Dremel in mind for next time though.
 Node ships an entire browser in the runtime. Node apps are basically webapps running on a packaged browser. It's going to use a lot more memory than almost anything else. I'm pretty sure that's only true of Electron apps which doesn't seem to be what's tested in these benchmarks. Node itself runs on Chrome's V8 Engine but doesn't carry "an entire browser".
For the the side of it, the terms don't matter that much. So if domes find master/slave to be offending and there is a good alternative, just do the switch. Done. Rest is politic and waste of time.
 That "master/slave" in a technology context has anything to do with racism. While I have mixed feelings about this change, I don't think that this is what the issue is. I don't think anyone is claiming that the terms have racist origins but simply that the terminology is of bad taste in today's climate. *shrugs* 
&gt;if you find out there's a type discrepancy at runtime in production, it's already too late to do anything about it. You could fix it ... so it doesn't error the next time it runs?
&gt; I don't think we have a problem with one group marginalizing another group You'll never know if there is a knee-jerk reaction against any effort to investigate these issues &gt; systemic racism is not the context here. It is *always* the context - that's why it's called *systemic*. &gt; What you see as systemic. I see as individuals making bad decisions. Systemic is statistical and our problems lie in income inequality not racial inequality. This is an incredibly ignorant statement. Again, equality != equity. And we are far from our problems only being due to income inequality (and even if they were, how do you possibly explain the enormous gap in wealth between white and black people? Black people make bad decisions??). Our disagreements stem from the fact that you have never made even a small attempt to research and understand systemic racism.
Changing this nomenclature without breaking things will cost thousands of work hours. It's not trivial.
&gt;"kill" a child process changed to abort and you're gonna like it shitlord
I’d highly recommend Jose Portilla on Udemy. 
I find it much easier to just run linux as the host OS and all things python/data science work great. You can put windows in a virtual machine if there's anything you absolutely have to do in windows.
Did anyone actually read the proposed changes? Cus they don’t seem outrageous....
&gt; Where did I call for a quota? It's quite simple... You said the community is: &gt; not diverse enough. That means there is a point where it *is* diverse enough. Wherever you arbitrarily draw this line is irrelevant -- the fact that it exists at all means you believe that a certain group or groups are not represented enough. Which means your priority is not their skills or thoughts, but rather their membership to these groups. The only way to go from "not diverse enough" to "diverse enough" is to shift the mix to whatever *you* feel is correct. The only way to do this is representation quotas. When you judge someone based on criteria that is in no way related to their ability to write good code you are being bigoted. &gt; Why are you so hostile? Because I abhor racism, and I **FUCKING HATE** people who hide their racism behind identity politics and act like they are doing everyone a favor by looking at their skin color or ethnicity instead of their skills or thoughts. &gt; Countless comments that are obviously from white men who have never made an effort to understand systemic racism and how the world might look from the perspective of people who have been impacted by it their entire life. And there you go judging someone by their sex and skin color. Stop pretending you care about equality if you are not only overtly racist and sexist, but *proud* of it. Bigotry like yours should be shunned, not praised. Nobody's opinion has any more or less merit because of their skin color or sex. Until you embrace this you are just hiding your racism behind the shield of diversity.
I agree wholeheartedly, but it was a fun read!
You seem to know a lot about me. I don't think we've been well enough equated! Good luck in your future arguments!
Once again, I didn't say I agreed with the change. I was addressing a very specific claim
Nice job! I'd like to learn woodworking. If you know of any good courses lmk!
How the fuck does the word slave make something uninviting?
I don't think it's emansipation in first place. Looks more like a movement to dumb population down. They pretending they are feminists, but unlike real feminists they do nothing to solve actual issues. Instead they discredit idea of feminism. Developing it to the point where it became absurd. I don't think Anita and other people behind movement really believe in this BS. We already saw how Anita rallied her supporters in anti-Trump protests. A sign that this organisation is likely a battlegroup of political power.
We can call it Managers and Workers and it would be perfectly descriptive. The point is not that different terms are inadequate (though *some* are), but that the reason for changing the existing terms is absolutely flimsy and pathetic. They want to change it because the words "could be interpreted as discriminatory or offensive," which is ridiculous. First, the statement is vague enough to be applied at will, which means they can arbitrarily decide who's opinion matters. A programming language should be based on strict rules, not whatever direction the wind is blowing at any given time. Second, they don't even have enough respect for their community to refer to actual instances. That someone, somewhere, for any reason, *could* be offended is enough to change phrasing that has been in the industry since the beginning. Not that tenure means something is valid, but if someone wants to change decades-old industry standard terms with such vague terms as "could be offended" we are accepting that anyone at any given time can change the language if they are offended enough. 
&gt; Nobody's opinion has any more or less merit because of their skin color or sex. Until you embrace this you are just hiding your racism behind the shield of diversity. I made this point in another thread but I'll make it again here. The opinion of marginalized groups *absolutely necessitates more merit* than the opinion of the group doing the marginalizing. First because the marginalized group is usually a minority and therefore cannot compete against a loud majority, and second because the opinion of oppressors is inherently less relevant than the oppressed for obvious reasons. Do you disagree with the message of Black Lives Matter? Do you also believe systemic racism doesn't exist? If so, then of course you would trot out the "I'm not racist, you're racist" defense mechanism. Because acknowledging that equality != equity, and that systemic racism still exists today and requires powerful and unconventional measures to overcome, would also be to acknowledge that you and I are fundamental parts of the problem that requires serious introspection and advocacy to begin to try and become a part of the solution rather than to perpetuate the problem.
Something I learned today that really helps when using a lot of code or using 3rd party packages that are huge (e.g. `python-openstackclient`) is using IntelliSense instead of jedi for code completion. Just uncheck/disable the option in settings and VSCode will download the Intellisense files it needs. And VSCode will actually be usable after that
I hope a some point you do a little digging into systemic racism and equality vs equity rather than just yelling 'sjw' as I see you have done in the past. Identifying your biases and being vulernable about your and others' life experiences will help you learn, grow, and become an actual ally to marginalized groups.
This is a great concept; it's absolutely necessary and it's a shame that I suspect few outlets will be savvy enough to pick up on it. In my own musings on the problem, I've thought that one of the weaknesses of a hash-based solution is that much of journalism involves taking excerpts from multiple sources and repackaging it to form a cohesive and comprehensible conclusion - be that in the form of an image montage, a series of video clips, or even just drawing a big red ring around something of interest. Often, outlets already fail at sourcing where each of those clips came from, and a hash obviously has no way to tell the difference between a cutting and a photoshop. Do you have any thoughts on how this could be resolved?
Well, at least now that this is done cops will stop shooting black people on the street.
Master and slave is as descriptive as parent/child. Also second logical step is to replace kill child with something, right? Also can you explain me what this means? &gt;for diversity reasons Diversity is not a correct linguistic term here. If you want diversification, we should make two parallel alternatives. Or even more. How about puppeteer and a doll? It'll be the most correct one if you want to react modern political reality. Talking seriously. This is not a linguistic question. Tech language is not supposed to be pretty. For such things as inviting terminology you can look for funny languages. There are two wrong things with this: * We have real problems to work on and spent resources to improving language. * Political activism and bullying in academic environment is very bad idea. And telling a lot about persons behind the "push". As well as Redhat.
It doesn't stop the *creation* of fake news, but it may slow its *propagation* if it's traceable back to a single source. No more chinese whispers. It would be on the reader to decide whether they trust that source, and of course on that source to allow the item to be looked up so that context could be provided.
Wow. I've been talking about corporations utilizing evangelists to dominate the market. Talking about left vs right in US, read about divide et impera.
Google Colab could be a replacement in case the crash is serious
It's a term couned by cynic managers of XX century. They implemented evangelist missionary as they saw him as a way to force product culture. https://en.wikipedia.org/wiki/Technology_evangelist Also Microsoft been using own evangelists to perform attacks on linux developers and community. They also have program called EEE. https://en.wikipedia.org/wiki/Embrace,_extend,_and_extinguish 
**Technology evangelist** A technology evangelist is a person who builds a critical mass of support for a given technology, and then establishes it as a technical standard in a market that is subject to network effects. An evangelist promotes the use of a particular product or technology through talks, articles, blogging, user demonstrations, recorded demonstrations, or the creation of sample projects. The word evangelism is taken from the context of religious evangelism due to the similarity of relaying information about a particular set of beliefs with the intention of converting the recipient. There is some element of this although some would argue it's more of showcasing the potential of a technology to lead someone to want to adopt it for themselves. *** **Embrace, extend, and extinguish** "Embrace, extend, and extinguish", also known as "Embrace, extend, and exterminate", is a phrase that the U.S. Department of Justice found was used internally by Microsoft to describe its strategy for entering product categories involving widely used standards, extending those standards with proprietary capabilities, and then using those differences to strongly disadvantage its competitors. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
check out the "activists" demanding this change
Power of independent thought. That fact you're asking and not already aware is fairly strong evidence. The ENTIRE purpose of political correctness is mind control. By controlling the language and permissible context you are in fact controlling how people are allowed to think about topics. In turn, at a minimum, mandating a cooling effect. This in turn creates a defacto form of self censorship. Or in this case, imposed censorship which then ripples are self imposed censorship via the cooling effect. In other words, very literally, everyone supporting this SJW/PC idiocy are in fact suffering from mind control. Those who control the language of debate win the debate. Hence the significance of of controlling how people are allowed to think and talk about issues and topics. In this case it's especially offensive and disgusting since the topic is in no way political and is established technological terminology which established and broad acceptance. It becomes even more vulgar when you consider that literally the only reason it is pushed her is for political expedience in the vein of Cultural Marxism. Meaning all those who support this are in fact supporting Marxism. Which means we are left with people who oppose this, immoral Marxist, or ignorant people. It's a terrible situation created by immoral people. 
Or dual boot. Lots of local VMs seem to have a bit of overhead which can be an issue if you want high performance on both OS
You have no idea what I've done to arrive at my opinions. Just because I don't agree doesn't mean I haven't listened.
&gt; check out the "activists" demanding this change Are they seizing the means of productions?
&gt; Those who control the language of debate win the debate. Hence the significance of of controlling how people are allowed to think and talk about issues and topics. In this case it's especially offensive and disgusting since the topic is in no way political and is established technological terminology which established and broad acceptance. Which debate do they win in this case, and what ideas do they insert in people's minds, that slavery is bad? Which ideas do they make it impossible for you to express, that slavery is good? &gt; It becomes even more vulgar when you consider that literally the only reason it is pushed her is for political expedience in the vein of Cultural Marxism. Meaning all those who support this are in fact supporting Marxism. Which means we are left with people who oppose this, immoral Marxist, or ignorant people. Nice attempt at redefinition of terms to equate opposing slavery with supporting Marxism. With not a trace of self-awareness. Truly, the worst thing about SJWs is the triggered snowflakes whining about them in ways offensive to reason. May Allah give you every kind of cancer (in Minecraft).
At work, I'm working on a Django interface to a MS SQL database so managers and directors can search the data, download their dataset as an Excel file, etc. Plans exist to use DRF to add a REST API so that we can programmatically add/remove data without bringing in MS SQL tools. As a side project, I'm working on a Django/React site. Still very early on, but is related to my [query over here](https://www.reddit.com/r/dndnext/comments/9c6u8q/request_looking_for_input_from_dms/).
I didn't know that the setup was so similar. So i probably will try that setup in a VM with centOS or Ubuntu. Do you prefer some distro? 
As a subscriber of r/woodworking and r/python, I approve
I personally use Ubuntu, and I think it's the most user-friendly to begin with. Definitely experiment with others later on if you suspect they have some features Ubuntu is missing, though.
&gt; It really makes an unpleasant moment How? What? When?
Click on the users posting about it and look at their most frequented subreddits (at least the political ones). You'll quickly see a pattern.
&gt; Which debate do they win in this case, What you've not heard of white privilege and white guilt? The rest of your comment is just simply wrong and you either fail to understand or are purposely obtuse attempting to re-interpret what I very clearly stated and is well known within political discussions. 
Do you mean that `-i` controls that three arguments `FILENAME`, `COORD1` and `COORD2` should follow?
[removed]
Why are u using windows calculator to perform a calculation? Why don't u use plain python...or the goal of this project is to interact with windows apps?
Yes, I just try to use the bundle app in Windows to learn the concept. 
12 Years is a long time. Maybe I should just continue working and accept, that it will take longer. Often I just want to plot something to visualize something Ive written, and after 2-3 hours ending with spaghetti and start again.
The great thing about this is that it exposes all the douchebags in the tech world (bad thing being how many there are). Yes, of course, this is what Karl Marx was thinking of when he wrote his critique of capitalism. It was actually all about how in 125 years there would be some people who will try and change language a bit, and how that's what will convince society to overthrow capitalism. Good lord. Imagine being a grown professional who gets their political world view from Jordan Peterson.
Check the first line of each output; you have two different Python installations and you're picking up IPython from one and Python from the other.
I'm seeing Python 3.5.2 for the ipython and Python 3.6.1 for Python. 
Everything is offencive to someone. Why he has let politics interfiere in first place? Or why not to remove title of dictator instead? Isn't actual dictatorship act more offencive that terms which have no relation to actual matter?
when I do C:\\Users\\Midas Keijzer\\AppData\\Local\\Programs\\Python\\Python36-32&gt;pip list it says it is installed
Yeah, but I've installed selenium for 3.5.2 (which is my default for pip for some reason) but also for 3.6.1...
I agree. The people who say it's no big deal to change it have no idea how much developers hate maintaining documentation.
Pretty sure that they can walk and chew gum.
If you want to say context matters then you have to mention that "fags" as in cigarettes has no relationship whatsoever with "fags" as in gays and never has done. They are completely separate words that just share spelling and pronunciation.
Look into virtualenv. This will help you manage your python packages. If you have a new enough version of windows 10, you can install the linux subsystem and use pyenv as well. I'm not aware of a windows equivalent. I guess finally, you could look into getting virtualbox or any other VM tool and run a linux vm, and just stop doing stuff in windows at all.
They are brainwashed by Jordan Peterson, sadly lacking critical though capabilities.
Ah, do you mean the same as u/projecktzero?
&gt;&gt; Which debate do they win in this case, &gt; What you've not heard of white privilege and white guilt? Not an argument. Literally. Can you answer my questions without deflection and """implying""" and """well known within political discussions"""? Should be pretty easy lol: &gt; Which debate do they win in this case, and what ideas do they insert in people's minds, that slavery is bad? Which ideas do they make it impossible for you to express, that slavery is good? If it should be clear what you're actually getting at, why do you avoid stating what you're getting at like a SJW? &gt; Edit: I accurately answered your question. Just because you don't like the facts doesn't invalidate them. Which facts are you talking about? Name them, like fact #1, fact #2, all the way. 
I took a cabinet making class in high school, but the best way to get better at woodworking is to find someone who knows what they’re doing and learn from them. I’m sure there’s YouTube for it too. Go out there and do it!
This seems promising. In theory at least. Even if this or something like it doesn't end up being widely used, I'm glad that smart people are out there trying to tackle this problem.
What (type of) problems did you have with anaconda packages?
I've gone back and forth. Right now I appreciate its flexibility. It's gone through some significant improvements
You are weird..... O0oooo you are doing a snake bit. My bad. Continue. 
I had ideas along a similar line actually. The metadata Aletheia inserts is just a (versioned) JSON blob, and at the moment it's just `signature`, and `public-key`. I've been wanting to do something there so that you could somehow retain history and credit for each change, but I'm not sure of how to do that (yet). Input along these lines is very welcome! The thing about the cutting/modifying &amp; rehashing of media done in journalistic circles is that these changes are often done to apply some sort of bias, so retaining credit for the original source isn't all that important to me. If a video is produced by company A, and remixed by company B, and B doesn't give credit to company A, then this becomes a social problem: we have evidence that company A produced the original and that B meddled with it. Our collective trust should reflect that. One thing I do think I'll do sooner rather than later though is find a way to (a) include the date of signing, and (b) sign the blob itself to prevent mucking with stuff like the signing date. That would go a long way toward solving the above I think.
I see what you did there.
Does that mean I should start calling you a slave?
Have you tried Seaborn? I basically never need to touch the matplotlib api directly.
I really don't remember the package name. I was using sckit-learn, and i found one package that had one algorithm that i needed and i couldn't install it. I have the Sci-py name in my head, but don't make any sense. This already was almost 2 years ago.
thanks :)
A stranger in the internet just called me "smart"! You've made my day.
&gt; retaining credit for the original source isn't all that important to me That's fair, although I'd be a little more generous to the outlets who do this sort of editing - if you have a 2-hour recording from AP, then Fox isn't going to air the whole thing, because it's their job to distill the raw data into something consumable. Of course, there's no way to tell if that clipping was done out of convenience or malice, and you don't want Fox getting a free ride on AP's credibility. I guess your approach does foster a very "direct journalism" approach, where if you can't see the original and full source, it doesn't matter where that came from, and all edits are contamination. Retaining history and so on is getting very close to blockchain territory - where you need to include the hash of the child node in the parent in some transparent but secure way. Could the timestamp be done like password salting? Include the timestamp in the JSON blob and append it as ascii to the media data before generating or validating the signature. If someone changes the timestamp, the validation will fail, but you can also still read the timestamp; the timestamp is set by the original signer. You could also still match un-metadata'd media to your signed version this way.
Exactly this.
Omg, only now I realized that the logo represents 2 snakes 😮
&gt; I was only giving you tips on how to have a reasonable discourse which is something you seem to not understand. And I'm extremely openly mocking the sorts of people who get worked up about this stuff, and who always justify their rage in terms of slippery slopes to violating their freedom of speech, always resort to the same limited vocabulary of epithets to describe the people they don't like, etc. I'm not going to put an "/s" tag on every one of these posts. I'm going to continue being openly contemptuous of people whose position is that there's a vast insidious conspiracy coming for their freedom because a software project decided not to document things using historically-charged (and inaccurate) terminology. I'm also not going to fall for the "oh, if only you'd be more civil this wouldn't happen" game. A lot of these folks hold it as an article of faith that being an utter turdbucket is vitally necessary in order to save civilization from imminent destruction at the hands of the evil SJW conspiracy. They'll often *literally* frame it as a forced action, that because someone politely suggested adopting a different term in some programming documentation, they now have no choice but to be as egregiously and conspicuously offensive as they can possibly manage. They didn't reason themselves into that position, and as the saying points out, it won't be possible to reason them out of it.
&gt; I could see something like it being included in the firmware of cameras and other recording devices so it could get signed straight away I was *just* telling someone today that this is my "in a perfect world scenario" for this sort of thing. Also, your notes on signing the date like that makes a lot of sense, thank you! I'll have to hack that in at the earliest opportunity.
You missed the implied "/s".
I found that RealPython did a pretty good job of giving me a baseline for mpl. https://realpython.com/python-matplotlib-guide/ The more you work with it, the easier it gets for sure. I've been using it a few days a week for the past year but still Google a fair amount. It's an incredibly flexible library though, and when you get the hang of it you can make some really slick graphics - so don't give up!
Yeah it's awful. If I need to do an analysis that's heavy on visualizations, I do it in ggplot2 in R for that reason. The interface for it just makes sense and lets me get shit done really fast.
A quick google search showed a bunch ot startups already trying. Fwiw, you don't need a swarm of users nor a bunch of energy. There is other options...
Words of wisdom. Please look at switching to Linux. And definitely use virualenv if you're developing multiple py projects.
Master and Slave in a load balancer and fileserver arragement is completely different than a person owning another person as property.
Plotnine has the ggolot2 API for python
I can't believe you've done this.
For sure! I've played with it a bit and liked it, but eventually stopped because my code had some nasty workarounds to make the checking work and I didn't think it was worth it. If performance is your only concern, turning it on in tests is still great. The other neat trick is to replay a small fraction of your prod traffic against instances with *all* the slow checks enabled (or just enable them on some instances, depending on e.g. DB architecture). This also works well for detailed profiling with minimal overhead, fault injection, and so on.
Yes, it's different, but it's literally the same word. It's not the same case as your "fag" case.
OK, so take Raft as an example. That's the consensus algorithm used in Kubernetes and a few other things. In Raft, a cluster of nodes has one node responsible for telling others what to do. Should it be called a "master" and the others "slaves"? Well, if the node that's telling others what to do suddenly becomes unavailable, say due to a crash or a network partition or whatever, the other nodes have timers counting down. When one of them hits timeout without that gives-instructions-to-others node actually giving any instructions, the one that hit timeout will nominate itself to take over giving instructions, and ask all the other nodes to vote. I'm pretty sure that when, say, a cotton plantation owner died, the slaves didn't have pocketwatches to check how long it had been since they received instructions, and I'm pretty sure they didn't elect a new plantation owner from amongst themselves. So does it make sense to try to force "master" and "slave" terminology onto this (for the record, Raft uses "leader" and "follower" labels)? What exactly is the point of trying to force this language down people's throats when it's rarely if ever actually accurate? Why do you feel the need to police everyone else's use of language and make them conform to what you'd like? Why do you need to force your politics into this discussion?
The thing I found hardest when starting out is that there is a default plot object that you can use, or you can create your own plot object to use. The example code was always a mix of the two and I'd find some code that did part of what I wanted written using the default object, then others using a specific one and had a hard time reconciling the two. I prefer being specific, so I always instatiate my own object now. Anything you find that uses the default object will work on your object.
Is the word "master" inherently or implicitly offensive to literally anyone?
It's not going to have the same level of support for extensions, and (I suspect) is always a few weeks behind ggplot2 in R. There are a bunch of extensions I use in R (ggforce, patchwork, ggrepel) that aren't going to be included in a port.
&gt; The opinion of marginalized groups absolutely necessitates more merit than the opinion of the group doing the marginalizing When you drive over a bridge do you want to know the construction company consulted a marginalized group of engineers or a group of engineers chosen only by their bridge designing skills? Because the bridge that collapses doesn't care if the designer's office looked like a box of crayola crayons. The idea that victimhood makes your thoughts more valuable is a dangerous philosphy. The Parkland kids are victims and have my sympathies, but that doesn't mean they know a single thing about legislation or policy. If we listen to people because they suffered rather than because they know what they are talking about we are going to destroy the very idea of a meritocracy. &gt; First because the marginalized group is usually a minority and therefore cannot compete against a loud majority You need to understand that racism doesn't care who is the more powerful group. Treating a person differently because of their ethnicity is racist. No exceptions. You can justify it by saying that we should treat X people differently because their ancestors were oppressed, but that doesn't get us any closer to equality. But people who think like you don't want equality, they want recognition for standing up for the little guy. The very idea that someone who is a minority is somehow less capable is incredibly condescending and bigoted. &gt; and second because the opinion of oppressors is inherently less relevant than the oppressed for obvious reasons. Now you are making leaps in logic that allow you to say anyone who isn't a minority must therefore be an oppressor. This is typical Marxist garbage that everyone is either and oppressor or oppressed. And I don't believe their opinions hold any more merit just because they were oppressed. Their opinions should be treated equally if we want equality. I do want equality. I don't know what you are after. &gt; Do you disagree with the message of Black Lives Matter? Depends on what message you are referring to. The message taken at face value that black lives do indeed matter is 100% true. Every life matters, and black people are part of everyone. I have no idea what this has to do with Python being taken over by faux political correctness. &gt; Do you also believe systemic racism doesn't exist? Systemic racism is a modern boogeyman. Any time a minority doesn't get something you can cry systemic racism without having to prove anything. If you can point to instances of racism I'll oppose it as much as I can. If you are going to throw around systemic racism as a catch-all for everything you don't like in the world we aren't going to make any progress. I have no idea what this has to do with Python being taken over by faux political correctness. I cannot pretend to be on the same side as you. You've made blatantly racist comments already and are trying to hide it behind acts that feel good on the surface but feed into the racist culture you claim to oppose. How any of this justifies changing a programming language because someone somewhere might choose to interpret something as offensive is beyond me. We've strayed far enough off topic and I've said all I have to say and won't be responding any more. I truly hope you re-read what you've said and understand how treating people differently based on anything except individual attributes is bigoted. Identity politics is -- by definition -- racist, sexist, etc and if you can't accept that you are no worse than the racism you proclaim to oppose. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
&gt; grown professional You're making non-reality-based assumptions about the fuckwits spouting these shitty, idiotic takes.
I hate it. It was one of the reasons it took me so long to move from R to python. I usually do simple plots so stick to seaborn or pandas (which use matplotlib under the hood but with nice API)
It sucks because matlab sucks. Aren't there a bunch of other plotting libraries in python? plotly, bokeh, chaco, some d3.js clone, etc.
Use seaborn or dash, they intend to fix some of mat's issues
Google sheets have gscript which is like javascript. You can import sheets into python pandas to do analytics also. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
There's [Pyspread](https://manns.github.io/pyspread/). I had a quick look and it wasn't for me.
You want r/learnpython
&gt;lol thanks
The main strength of matplotlib is that it allows you do anything. The main weakness of matplotlib is that is allows you do anything. That being said, I don't mind it so much, but I have been using it so long it has become second nature. The real bear of MPL in my opinion is the huge inheritance chains that you have to chug through. A LOT of options are hidden in **kwargs. 
Just read the arguments in as a list of strings and then do whatever you want with them: parser = argparse.ArgumentParser(description="Command line parser.") parser.add_argument('-i', nargs=3) args = parser.parse_args() print(args.i) &gt;&gt;&gt; python3 console.py -i FILENAME 10 20 &gt;&gt;&gt; ['FILENAME', '10', '20'] 
It's amazing how quickly irrelevant analogies can expose a complete lack of understanding of a topic. Your BLM "every life matters" comment tells me immediately you haven't even begun to try understanding systemic racism or the current movements to bring attention to it, and the boogeyman comment solidifies that. I can't do anything about that - you're on your own to engage with black leaders and find out why your perspectives are so different from theirs. Your white fragility is obvious, and unfortunately it limits you from understanding the complexity of racism and systemic racism, but perhaps someday you'll consider that calling me racist as a defense mechanism because you cannot begin to accept that our society is completely fraught with systemic racism (making you a part of the problem since you're not trying to learn and be part of a solution), doesn't actually make our society better.
CNC router would probably only take about 200k lines or so to do this. 
I'm trying to dive into the pandas open source project this week. I've got GitHub and VS installed. I've been perusing the source for the sake of familiarizing myself with it. Anyone who contributes to open source have any tips for a first timer wanting to help out with bug fixes?
That has absolutely nothing to do with this. You're purposefully passing an infinite iterator into`list`, which attempts to create a list out of all of the iterator's elements until it's exhausted which obviously doesn't happen.
Portilla’s web dev course was awesome-I didn’t care for his data science one though. 
Sure, but as long as the OP does not need to work with those extensions, then going with plotnine would likely be a more efficient path than switching their workflow to R.
I mean I’m speaking exclusively for myself. If I’m doing an analysis that’s going to be predominantly visualizations I work in R.
*python -m pip install --upgrade pyinstaller* Or you could simply uninstall it and re-install it.
If windows no antivirus, no antimalware and keep startup as clean as possible. Windows as a clean host would give you good performance, but for heavy stuff fall back to linux and a virtual machine
There's a good chance it's fixed now. Data science tools have made huge strides in the last couple of years
Pypdf2 &amp; pdfminer check em out
ego bit by snake! Film at 11.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
this has always confused me, what's the difference between `python -m pip install` and `pip install` ?
&gt; Again, I can't help it if the public believes Fox News, the Daily Mail, or InfoWars to be responsible journalists -- that's a social problem and not a technical one. You forgot CNN, MSNBC, ABC, BBC, BuzzFeed, Vice, New York Times, et al. I would love to see these organisations be held responsible for some tripe they often put out. 
Yep. I went through the same thing and had a much better time with the library when I started doing things the way you describe
Sweet idea and congratulations 
If you were using Plumbum, I'd say that a subcommand fits better then a switch. The subcommand (`i` or whatever you want to call it) could take three positional arguments. 
Have you tried (XLWings)[https://www.xlwings.org]? It allows you to run Python within Excel. I am actually putting together a blog post about using it this week. I will post a link if you are interested once it's ready.
Yes, next time. The intended purpose of type annotations check before runtime is you won't get into this situation in the first place.
&gt;spreadsheet I can see all of my time I donated to the pydata community was a waste...
Definitely interested!!! And if it would be much faster than the current VBA compiler then that’d be amazing!!! Python x Pandas in an excel like environment? Count me in!!
you can try "videoFk" online batch download videos\~
It's garbage for interactive plots, which is why I've moved to using pyqtgraph in a pyqt graphic interface. However, I think the flexibility of matplotlib is the only thing that's nice. But I 100% agree, as a self taught googler, I find most the points made here to be valid. The worst offence is the line in the documentation "....create publication quality..." Yeah... the plots look like crap out of the gate, and the amount of knowledge needed to make them look good is a decade of time gone. 
If you want to pick numbers in a way that guarantees that the same number will not show up twice, then you should definitely not use a random number generator. This can not be guaranteed no matter what you seed it with.
How random does it have to be? One stupid thing you can do is pick a number between 1-100, then the next one from 101-200, etc. You get the idea. This of course has its flaws but you could tweak it to behave in a better way
how many random numbers are we dealing with here? without any further info i would just place them in a set and check or reroll: import random used = set() for i in range(24*4): r = random.randint(0,1000) while r in used: r = random.randint(0,1000) used.add(r) print r print used 
If you know roughly how many random numbers you need for the 24 hour period, you can generate and filter duplicates the day before. That being said, this violates randomness assumptions, as random numbers without repetition is actually an unlikely event. However, this is rarely a concern in most uses of random numbers
What you're asking for isn't really the role of a seed in a PRNG. A random number generator has a "period" after which it repeats *its entire output sequence,* but there is no guarantee that it won't repeat the same actual number. This is trivial to discover if you consider a PRNG with a one-bit output - there are only two possible output states, but the period can be arbitrarily long. Before you start, it is important to know a few things about your problem. What is your maximum sampling rate over the 24 hours? How large is your output number? 16 bits? 64? Does the 24 hours reset at a set time OR do you require that every output is unique for the last 24 hours in a sliding window? You then have a few options open to you for creating a non-repeating series of numbers: 1) Instantiate a data structure containing only unique values prior to your 24 hours and iterate over it 2) Check each number against a dictionary of all previously encountered numbers (or, all in the last 24 hours) and re-roll if found 3) Choose a PRNG with a sufficiently large period and output space that it is highly unlikely (although not guaranteed) that you will see repeated numbers. Option 1) is expensive to instantiate, but O(1) per number generated from then onwards Option 2) is cheap to begin with, but becomes more expensive the more you exhaust the output space of the PRNG (and therefore re-roll more and more often) Option 3) is cheap all the way through but is not guaranteed to give you the results you want and requires that you research and test a bit If I were you, I'd go with option 2). An easy implementation might have a bit like this: import random numberDict = {} def getNumber(): hasGoodNum = False while not hasGoodNum: putative = random.random() if not putative in numberDict: numberDict[putative] = True hasGoodNum = True return putative Substitute for `random.randint(low, high)` if you need integers. Ensure that your max number of samples (e.g. sampling frequency \* time) is significantly smaller than your outpute space.
huh ???
Matplotlib sucks. But I still use it on occasion because some helper function for plotting assume its there. I do a lot of plotting with pyqtgraph, but it requires knowledge of pyqt to make it do anything complicated. 
https://www.reddit.com/r/Python/comments/9d4f3m/20_minutes_tutorial_for_matplotlib/?st=JM00GURT&amp;sh=1d177253
As a matlab convert, I loved it at first. Even now, I don't have a big problem with the API, etc, but for the last year it hasn't worked at all on my mac because of some inscrutable problem with the Qt bindings. I've mostly switched to plotly, and I'm comfortable with it now, but there are some things in matplotlib that are just so much simpler or more concise. Regardless, plotly is nice because it uses a browser, which 1) just makes more sense these days, 2) allows me to use it in blog posts.
&gt; keep closing and reopening well stop closing it. Just save and run it.
It makes sense to me, but my brain has been damaged by 25 years of Matlab use.
That speed tough. is it that bad in real life usage? I mean you would be using numpy instead of builtin arrays, pandas for tables etc.
&gt; In the Internet Protocol Version 4, the address 0.0.0.0 is a non-routable meta-address used to designate an invalid, unknown or non-applicable target. This address is assigned specific meanings in a number of contexts. [0.0.0.0](https://en.wikipedia.org/wiki/0.0.0.0)
If you stick to the Matlab-style calls, then it absolutely sucks. However, matplotlib truly shines once you dig into the object-oriented API, which makes pretty much anything possible.
Haha, cool little project idea. Code looks nice! Just a couple observations: `reader = pd.read_csv('lifeExpectancy.csv', header = 2)` is executed inside the `while` loop, which means the file might get read multiple times if the user repeatedly enters incorrect information. Really not a big deal in this context but still worth noting I suppose. My only other recommendation would be learning to use ["f-strings"](https://docs.python.org/3/reference/lexical_analysis.html#f-strings) which would allow you to write `print('\nThe average lifespan of a person born on ' + monthsOfYear[formatedBirthDate.month] + ' ' + str(formatedBirthDate.day) + ', ' + str(formatedBirthDate.year) + ' is ' + str(lifeSpan) + ' years.')` as: `print(f"\nThe average lifespan of a person born on {monthsOfYear[formatedBirthDate.month]} {formatedBirthDate.day}, is {lifespan} years.")` 
Oh sorry I misunderstood the original question. Hm. That is odd. What IP are you using when trying to connect from another machine on the same network?
Matplotlib core dev here. Happy to help if there are any specific tasks that you found difficult or poorly documented. As for the general complaint, matplotlib's API is \*huge\* and very organically grown -- the library goes back to 2003, i.e. it's older than numpy! -- so it's not so easy to present it in an organized fashion, but suggestions for improvements are always welcome too.
r/cringe
and yet people wonder why people are voting for rightwing parties. Oh how clueless are they!
Hiding options in kwargs is a personal pet peeve and matplotlib is my go to example for why doing that sucks. 
See [https://docs.python.org/2.4/lib/socket-example.html](https://docs.python.org/2.4/lib/socket-example.html) for simplistic client &amp; server examples that support both IPv4 and IPv6 by way of the getaddrinfo function. See [https://docs.python.org/2/library/socket.html#socket.getaddrinfo](https://docs.python.org/2/library/socket.html#socket.getaddrinfo) and [https://docs.python.org/3/library/socket.html#socket.getaddrinfo](https://docs.python.org/3/library/socket.html#socket.getaddrinfo) for more information about the getaddrinfo function.
I think I need to use a hybrid ip notation like this ::ffff:192.168.1.1 and use IPv6 sockets instead of the default one.
At times I want to transfer files between computers {e.g. Machines that don't have SSH and so I can't use `scp`}. This comes handy for sharing files on a same network. Other times I've generated HTML reports using the above command helps to access these reports over network. 
Looks really cool! I started working on a *very* simple language, too. Though my problem is that I don't have a very strong foundation on compiler theory and what not. My knowledge is like patchwork from various small things I've learned here and there. Do you have a resource to recommend that you have found useful in your creating this language? 
Well done. I will just point to two things in the python standard library that might be helpful! 1. https://docs.python.org/3.6/library/datetime.html#datetime.datetime.strptime 2. https://docs.python.org/3.6/library/calendar.html#calendar.month_name Generally try to avoid using `str(...)` on the dates, the objects in datetime all have friendly formatting methods.
No. \`select\` can operate on several \`put\`s, or several \`get\`s, or any combination thereof. This is crucial and not possible with streams. And as far as I know aiostream does not deal with back pressure gracefully, i.e. in reactivex parlance it makes no distinction between 'cold' and 'hot' observables. (And even with other reactivex implementations back pressure is the most painful thing to debug).
Because they're educated.
well, it wouldn't offend me :D
can anyone recommend a better way than matplotlib to display a 3d numpy array as a video? matplotlib animations work OK, but performance is not great. Maybe I need to try and better understand how to use blit...
And if matplotlib is too mainstream, there's always [hipsterplot](https://github.com/imh/hipsterplot)
The Ip address that appears for ipv4 when i run netstat, so its a 10.xx.xx.xx ip. This is not happening in other network (my home) so I kind of think that the firewall is blocking the inbound request :( 
Read the first line of my comment again.
Alternative location for [get-pip.py](https://get-pip.py): [https://raw.githubusercontent.com/pypa/get-pip/master/get-pip.py](https://raw.githubusercontent.com/pypa/get-pip/master/get-pip.py)
:-)
&gt; sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) You're hardcoding AF_INET; that should be an obvious red flag. Any code that does this is wrong. You need to look up the address family with socket.getaddrinfo() and then pass it to socket.socket(). Or there's socket.create_connection() which looks like it might be easier for you.
These might help: A flowchart for picking a Python visualization library: http://pbpython.com/python-vis-flowchart.html And an overview of charts and how each Python visualization library implements them (replace ggplot with plotnine though): https://dsaber.com/2016/10/02/a-dramatic-tour-through-pythons-data-visualization-landscape-including-ggplot-and-altair/
You don't need to use any special IP notation... in fact you need to use _no_ IPs at all, only hostnames (and you need to use the appropriate socket type as per the DNS lookup results.) Trying to connect a v6 socket to ::ffff:192.168.1.1 will result in a v4 connection to 192.168.1.1, but that won't work on NAT64-only networks because NAT64-only networks don't have v4. You need to make the connection over v6 to &lt;NAT64 prefix&gt;::192.168.1.1, but you have no way of knowing what the prefix will be, so NAT64 networks typically use DNS64 to inject fake DNS results pointing you to the right prefix. All you need to do is look up the hostname and connect to each DNS result in turn, like you should already normally be doing.
Thanks!
r/learnpython
This is the best tl;dr I could make, [original](https://www.theregister.co.uk/2018/09/11/python_purges_master_and_slave_in_political_pogrom/) reduced by 85%. (I'm a bot) ***** &gt; Last week Victor Stinner, a Python developer who works for Red Hat, published four pull requests seeking to change &amp;quot;Master&amp;quot; and &amp;quot;Slave&amp;quot; in Python documentation and code to terms like &amp;quot;Parent,&amp;quot; &amp;quot;Worker,&amp;quot; or something similarly anodyne. &gt; When Python 3.8 is released, there will be fewer instances of these terms. &gt; In 2014, Drupal, after some argument, swapped the terms &amp;quot;Master&amp;quot; and &amp;quot;Slave&amp;quot; for &amp;quot;Primary&amp;quot; and &amp;quot;Replica.&amp;quot; The same year, Django traded &amp;quot;Master&amp;quot; and &amp;quot;Slave&amp;quot; for &amp;quot;Leader&amp;quot; and &amp;quot;Follower.&amp;quot; CouchDB carried out a similar linguistic purge, also in 2014. ***** [**Extended Summary**](http://np.reddit.com/r/autotldr/comments/9ff5wn/python_joins_movement_to_dump_offensive_master/) | [FAQ](http://np.reddit.com/r/autotldr/comments/31b9fm/faq_autotldr_bot/ "Version 2.02, ~349786 tl;drs so far.") | [Feedback](http://np.reddit.com/message/compose?to=%23autotldr "PM's and comments are monitored, constructive feedback is welcome.") | *Top* *keywords*: **Python**^#1 **Master**^#2 **term**^#3 **Slave**^#4 **change**^#5
Pyplot isn't the Matlab-like API. Pylab is.
Matplotlib can be used with real time graphs and big data. It's not set up that way out of the gate. The plots also look quite good and yes, you have to set that up.
does it still do unchangeable auto-save ?
&gt;the plots look like crap out of the gate I think it's not true for Matplotlib 2.0. I've been using the default style settings for figures in my papers since its release.
Best thing to do when trying to extract data from binary files is to try and find the specification of the file type online. A quick googling provided [this reference](http://lclevy.free.fr/mo3/mod.txt). But there were a few others that may be better/clearer. If you know how to read a reference like this, the next step is to code it, and I'd recommend using [struct](https://docs.python.org/3/library/struct.html) to read from the opened file.
seaborn is mich more clearer but when I need something specific, mostly matplotlib comes again.
yeah this guide is one of the best in my opinion. thank you
Im writing an asycn web scraping framework :[https://github.com/howie6879/aspider](https://github.com/howie6879/aspider)
Me too! I’m not a programmer, instead I’m a med student who has to do occasional writing and presentations. I have enough coding experience that I’ve written a bot to go to a certain onpine comics website, collect the pages and put them nicely aligned in a PDF. When I go to Google to find anything relevant on Matplotlib people seem to have cool stuff, but when I copy it and change a number in the code it completely wrecks everything. Then there’s having to define your plot parameters in a certain order, even if they’re seemingly unrelated or everything also blows to hell. 
When are you guys going to get around to replacing the getters and setters with properties? Are you waiting on traitlets for that? Also, I wish there were documentation for how not to use pyplot. I hate pyplot's stateful style. I want to do everything in an object-oriented way without any hidden state. It's not always easy to know how to do that though.
As a former employee of ReportLab I’ve always reached to reportlab.charts for my plot needs. I don’t really know matplotlib well to do fair comparison, but the charts package under ReportLab is used by several large financial firms around the world and is very powerful. 
Thanks I'll check them out today. 
It might help if you actually showed us an image your code created. Your own github repository, perhaps.
learning pygame 
I think I used moviepy for this and the performance was better, on phone at the moment so I cannot be sure.
Create a list with the numbers 101-200, randomly permute the list and then take the first 40-50.
This is completely real, and is being officially changed.
Now we need "Blacklist" changed to "African American List", "Blackhat" changed to "African American Hat"...
thanks!
www.happyhub.com as the popular code sharing site will henceforth be named ;D
In the direction we seem to be heading, this will become more the norm than "that weird story on the internet"...
I'll have to check it out. VS code might end up replacing atom.io as my Windows code editor if setting it up isn't so difficult
So - I guess you're perfectly fine with killing children?
Ridiculous - Yes. That said - [It's now official](https://github.com/python/cpython/commit/5e922658fb55734bf8b4c6246033ea93af172ff7)
[It's now official](https://github.com/python/cpython/commit/5e922658fb55734bf8b4c6246033ea93af172ff7)
For Compare the Triplets in python3, a more reasonable equivalent to the perl version: def compareTriplets(left, right): scores = [0, 0] for (a, b) in zip(left, right): scores[0] += 1 if a &gt; b else 0 scores[1] += 1 if b &gt; a else 0 return scores Or perhaps, abusing some of the functional bits with list comprehensions: def compareTriplets(left, right): return list(map(sum, zip(*[((1 if a&gt;b else 0), (1 if b&gt;a else 0)) for a, b in zip(left, right)]))) 
No 
Thanks 
To be fair, ggplot2 is awesome but the underlying code is nuts. They literally had to rewrite the package using a new, custom OOP style just for the v2.0 release.
I hear it's clean and the authors a cool dude How do you like it compared with matplotlib.
Is it open source?
Hold on a couple months... As long as things haven't changed, Python is going to be a native Excel (and office) language in the 2019 version! Still wouldn't touch Excel but it's going to be fantastic for Python and Excel users... 
Wait. Why does that link lead to YouTube?
Just an FYI plotly puts a prominent "share" button by default you may want to turn off.
I picked a random word - Turns out, the domain already exists.
check out django (the web framework) and go through the tutorial, you'll pick everything up along the way. just start working and you'll get there.
It doesn't work any way. 
1. Find a problem that needs a web app 2. Decide how you want to solve it 3. Learn how to solve it 4. Solve it
This is an advert. Ew!
I just finished [this](https://gitlab.com/admicos/nts). Feedback welcome!
Yeah I like the surface level of R but underneath it can be a nightmare. I've been able to make a few minor contributions to open source projects in Python, everything is in classes so you can track down what you want to change and have a go. When I've tried to do the same for R, I either see giant 500 line functions written by someone who's never heard of OOP, or they're using the latest R OOP system that was just invented because no-one used the other 4.
To begin - Thanks so much for matplotlib. Sure, it's not the easiest library to use, but damned if it's not an amazing piece of open source software. Next- I'd love to help with documentation. Where do I get started?
[https://en.wikipedia.org/wiki/Normalization\_(statistics)](https://en.wikipedia.org/wiki/Normalization_(statistics)) Normalized Value = (Value - Min Value)/(Max Value - Min Value) This will give you values between 0-1 
What about e.g. Bokeh for the simpler plots?
Hey, if someone wanted to change the UNIX spec, I'd have no problem with that. It'd obviously be a lot more work to change, but other terms for both would be more accurate and less weird. Using "kill" to send a signal, or "child" for a process that will by default end after the creating process ends, are pretty poor terms. I'm not saying anyone who opposes the change is somehow pro-slavery. I think it's a good, manageable change, which the Python maintainers clearly have a path forward on, and the seemingly knee-jerk response seems pretty ridiculous yet predictable.
Agreed. After using base graphics, ggplot2 in R and matlab, matplotlib was like spaghetti to me. Most of the people I know who don't find the same frustration with matplotlib haven't tried plotting in other languages extensively. Having said that, I'm glad for matplotlib since python/numpy/scipy/pandas woudn't be the same without it. 
do you have to pay for plot.ly? This has always been my question. Which part do i pay for and which part do i get for free?
Guess they'll have to change the "man", "mount", and "fsck" commands to
I don't hate it, it's pretty powerful and concise when you know how to use it, but the doc examples are not great. Also, it's too slow for any kind of application with very large datasets.
"Am I the only one to do X?" Totally.
I found it OK until I wanted to create a graph of an exact pixel size, with an exact scale factor, so that I could create a bitmap image then draw my own markers on afterwards. There are about a dozen different ways to do it, and I didn't find one that really worked properly. The take away advice seemed to be "that isn't what you want it to do". 
Import pandas as pd Your_table = pd.read_csv('your_file.csv') Your_table
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
How can anyone say that? Python 3 is 10 years old now
Regarding guides, I only know of two libraries that have amazing guides to a level that I never need to check another website to find anything: Django and Reactjs.
If it ain't broke don't fix it.
I absolutely hated matplotlib when I started converting my Matlab plots to python. Eventually I came to realize the real power of it. If you are from a specific domain and used to see plots in a distinct way, you are gonna be disappointed. BUT, with manipulation (and lots of it) you can get whatever you want. THAT, my friend, is the strength of matplotlib. It enables you to do your plotting no matter which domain you are from. The con is, if your aesthetic sense is as bad as mine, your plots are gonna suck. Providing a generic API for plotting for any domain is not an easy feat, and matplotlib is damn good at it. My tip: once you do some plotting in your domain, you should be able to find a pattern in your manipulations. Use them as boilerplate code. Your life will be much easier. Happy coding!
Hi, I can help, what's your budget?
If something is going to do that, it had *better* explain exactly what is available behind that or at least link where in the documentation it is delegated to.
I hate it and it sucks. I really do not get it where the hype and the love for it comes from. The OO approache would be bearable, but the poor documentation makes it unusable if you want to keep your sanity. The whole MATLAB-like bullshit is actually an insult to Python and all the other Python libraries out there. It's a shame that matplotlib is so very often used as one of the first libraries that is taught to beginners.
Don't change the engine oil until the engine breaks, got it.
## [For Hire] Python Django developer available I help as an independent contract-based Python / Django developer as needed on client projects. Notablerecent projects include a Django based appointment web app and a Pet clinic registration system. &amp;#x200B; **SKILL SET:** \- Python \- Django \- Nodejs \- HTML \- CSS \- JavaScript \- MySQL &amp;#x200B; I'm only interested in **Telecommute** gigs. PM me
Just coming in to emphasise what you're saying. Matplotlib's biggest issue is it's API, and that's because that is heavily influenced by Matlab. I get that it was trying to be familiar for a certain type of user, but the rest of us are left utterly bamboozled. Too much magic. I can normally get it to do (close enough to) what I want, but it's always after far too much time with the manual open, and a notebook on the side experimentally trying things. I'd love a library with the capabilities of Matplotlib, but with an API which isn't so ***arrrgggghhhh***!! Of course, that isn't Matplotlib. 
Make 3 plots, show just the 2nd one and save the other two to named files with known sizes. I want that shown plot to not block and I don't want to have to manage "interactivity" to do it. Threads aren't allowed. It must work on the version of matplotlib I have installed with my OS, which I'm not telling you. Show me this in under 20 lines.
100% agree. The state machine API is very complicated and non-transparent. But I guess it's appealing to people with a MATLAB background. What annoys me the most though is that many features have different names in the two APIs and I can never remember which one to use (e.g. `plt.title()` vs `fig.set_title()`).
Care to elaborate? :)
How are you planning to go about it?
The Python community was incredibly slow at adopting 3, probably because there was no rush to do so. Since libraries didn't upgrade, users kept using 2 as well. Twisted matrix didn't seriously start planning Python 3 support until 2012, four years after the launch of Python 3. If Python 4 ever comes out, I hope there's a lesson to be learned of the importance on deprecating forwards-incompatible versions in a timely manner. Nobody benefits from the community splitting into two incompatible branches like it did with 2 and 3.
flask-socketio is your best bet. and its super easy.
Thank you for your replay, I'll contact you when I make it xd
Can we celebrate deathday, the opposite of birthday, on Jan 1, 2019?
I used the csv module in the past.. you can do what you like with the output from the dictionary, basically I put this into a dictionary of values that are referenced by variables I take from the headers in the csv file, then I do what I like working with the dictionary. def read_csv_values(file_name): """Reads any csv file with headers. You can extract the multiple lists from the headers in the CSV file. In your own script, call this function and assign to data variable, then extract the lists to the variables. Example: data=ru.read_csv_values(mycsv.csv) sgnamelist = data['sgname'] policylist = data['policy'] :param file_name: path to CSV file :return: Dictionary of data parsed from CSV """ # open the file in universal line ending mode with open(file_name, 'rU') as infile: # read the file as a dictionary for each row ({header : value}) reader = csv.DictReader(infile) data = {} for row in reader: for header, value in row.items(): try: data[header].append(value) except KeyError: data[header] = [value] return data
Well that’s an...odd thing.
How mature.
Why are they removing the master/slave thing? It describes the roles of the code well.
Here’s a post that explains some of this related to Redis: http://antirez.com/news/122
One important disclaimer: you do not want to learn Django beyond the basics. What you want to learn well is called "Django REST Framework", which is an add-on that makes modern web development in Django possible (Django itself is very 2005). When senior developers say "learn Django" they almost always actually mean "learn Django REST Framework".
``` from matplotlib import pyplot as plt fig1, ax1 = plt.subplots(figsize=(3, 5)) fig1.savefig("/tmp/fig1.png") plt.close(fig1) fig2, ax2 = plt.subplots(figsize=(3, 5)) plt.show(block=False) fig3, ax3 = plt.subplots(figsize=(3, 5)) fig3.savefig("/tmp/fig3.png") plt.close(fig3) print("I didn't block") # Busy loop just so that we don't quit the script immediately here... while True: plt.pause(1) ``` Seems reasonable? (If you really don't want to show fig1 wihout even having to close it, it's admittedly a bit more tedious; but adding a plt.close() doesn't seem too bad.)
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
If you want to use an automotive metaphor, it's like you've bought a car, driven it 20,000 miles, then you decide to replace the engine. Don't. The engine's fine. You could put a bigger, or more fuel efficient engine in, but if you only drive it in bumper to bumper traffic on your daily commute, what's the point? It's not like your code wears out. If you have a stable codebase, keep a python2 environment around and it'll run basically indefinitely. If you're still actively developing, sure, maybe consider a rewrite in python 3.
20,000.0 miles ≈ 32,186.9 kilometres ^(1 mile ≈ 1.6km) ^(I'm a bot. Downvote to remove.) _____ ^| ^[Info](https://www.reddit.com/user/Bot_Metric/comments/8lt7af/i_am_a_bot/) ^| ^[PM](https://www.reddit.com/message/compose?to=Ttime5) ^| ^[Stats](https://www.reddit.com/message/compose?to=Bot_Metric&amp;subject=stats&amp;message=Send%20this%20message%20to%20get%20some%20stats!) ^| ^[Opt-out](https://www.reddit.com/message/compose?to=Bot_Metric&amp;subject=Don't%20reply%20to%20me&amp;message=If%20you%20send%20this%20message,%20I%20will%20no%20longer%20reply%20to%20your%20comments%20and%20posts.) ^| ^[Patreon](https://www.patreon.com/MetricBot) ^| ^[v.4.4.4](https://www.reddit.com/user/Bot_Metric/comments/8o9vgz/updates/) ^|
I concur. But I never articulated it until you raised this question explicitly :D
10 years. Its is not about fixing because it is broken, its about staying up to date.
From python2.7: &amp;#x200B; `can't invoke "event" command: application has been destroyed` `while executing` `"event generate $w &lt;&lt;ThemeChanged&gt;&gt;"` `(procedure "ttk::ThemeChanged" line 6)` `invoked from within` `"ttk::ThemeChanged"` `I didn't block` `/usr/lib/python2.7/dist-packages/matplotlib/backend_bases.py:2445: MatplotlibDeprecationWarning: Using default event loop until function specific to this GUI is implemented` `warnings.warn(str, mplDeprecation)` `can't invoke "event" command: application has been destroyed` `while executing` `"event generate $w &lt;&lt;ThemeChanged&gt;&gt;"` `(procedure "ttk::ThemeChanged" line 6)` `invoked from within` `"ttk::ThemeChanged"` `Traceback (most recent call last):` `File "/tmp/test.py", line 14, in &lt;module&gt;` `plt.pause(1)` `File "/usr/lib/python2.7/dist-packages/matplotlib/pyplot.py", line 300, in pause` `canvas.start_event_loop(interval)` `File "/usr/lib/python2.7/dist-packages/matplotlib/backends/backend_tkagg.py", line 514, in start_event_loop` `FigureCanvasBase.start_event_loop_default(self,timeout)` `File "/usr/lib/python2.7/dist-packages/matplotlib/backend_bases.py", line 2453, in start_event_loop_default` `self.flush_events()` `File "/usr/lib/python2.7/dist-packages/matplotlib/backends/backend_tkagg.py", line 511, in flush_events` `self._master.update()` `File "/usr/lib/python2.7/lib-tk/Tkinter.py", line 1027, in update` [`self.tk.call`](https://self.tk.call)`('update')` `_tkinter.TclError: can't invoke "update" command: application has been destroyed` &amp;#x200B; From python3: &amp;#x200B; `can't invoke "event" command: application has been destroyed` `while executing` `"event generate $w &lt;&lt;ThemeChanged&gt;&gt;"` `(procedure "ttk::ThemeChanged" line 6)` `invoked from within` `"ttk::ThemeChanged"` `I didn't block` `/usr/lib/python3/dist-packages/matplotlib/backend_bases.py:2445: MatplotlibDeprecationWarning: Using default event loop until function specific to this GUI is implemented` `warnings.warn(str, mplDeprecation)` `can't invoke "event" command: application has been destroyed` `while executing` `"event generate $w &lt;&lt;ThemeChanged&gt;&gt;"` `(procedure "ttk::ThemeChanged" line 6)` `invoked from within` `"ttk::ThemeChanged"` `Traceback (most recent call last):` `File "/tmp/test.py", line 14, in &lt;module&gt;` `plt.pause(1)` `File "/usr/lib/python3/dist-packages/matplotlib/pyplot.py", line 300, in pause` `canvas.start_event_loop(interval)` `File "/usr/lib/python3/dist-packages/matplotlib/backends/backend_tkagg.py", line 514, in start_event_loop` `FigureCanvasBase.start_event_loop_default(self,timeout)` `File "/usr/lib/python3/dist-packages/matplotlib/backend_bases.py", line 2453, in start_event_loop_default` `self.flush_events()` `File "/usr/lib/python3/dist-packages/matplotlib/backends/backend_tkagg.py", line 511, in flush_events` `self._master.update()` `File "/usr/lib/python3.5/tkinter/__init__.py", line 1037, in update` [`self.tk.call`](https://self.tk.call)`('update')` `_tkinter.TclError: can't invoke "update" command: application has been destroyed` &amp;#x200B; In both versions the window that pops up flickers and flashes off and on. Try again.
Because it's gross. I also cringe every time I realize the Tk/Tkinter modes to "gray out" buttons and other widgets are "DISABLED" and "NORMAL". Really?
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Because feelings.
Think of the poor overworked code!
I know what you feel. Something as important as setting the decimal separator is, afaik, not intuitively implemented. Either you get into the tick formatters or you tell mpl to read your locale. Would love if there was a simple kwarg to set that. I also feel like the examples sometimes have too much packed into them, and can be confusing for a beginner. However, now I feel like I'm comfortable enough that I can understand the examples if I dig through them. Took some time though, would not wish my experience of others. Watching pycon tutorials helped me greatly, both to know the API and know what terms to search in the documentation.
Code doesn’t care about your feelings. 
Is this sarcasm? I can gray out a button without disabling it if it does not meet certain preconditions. I can disable a button. I can restore the button to its normal state (and no, normal state does not mean default state). It's all in programming context. We have keywords and they're all well defined. &amp;#x200B; Again, were you sarcastic? 
Extrapolating meaning from purely innocuous phrasing helps no one. You are contributing to the "gross" connotation of the usage of the words by mystifying them as harmful or repulsive. Context is everything, but it seems like people like you can't handle using the correct context, instead intentionally opting for one that deems these words offensive in conjunction. In case it's not clear, in the *correct* context of its usage, disabled is an abnormal state of existence, whereas the normal state (simply called normal) is presumably enabled. 
As a BDSMer, I'm disappointed. Decades of struggle to be recognized by the public and after the programming community, thanks to its wide overlap with the kinkster community, decides to give us visibility, all gets destroyed by some prude.
&gt; Really? Sarkasm does not work over the interwebs.
This is so retarded. Special snowflakes need to stop this bs
Except it's even worse than that, because matplotlib *also* uses varargs and kwargs to emulate other calling conventions. Like, "this function takes two positional arguments and the following optional keyword arguments, XOR four positional arguments and mutually exclusive keyword arguments" and if you get it wrong the other arguments just get ignored. In fact, completely unknown kwargs are often accepted and then just ignored. This is improving with the death of Python 2 though, because you can have named arguments after varargs! Finally, there are piles of inconsistencies - the classic example is trying to guess if this method takes `xmin` or `left`, along with "are they still equivalent if axis increases to the left?". 
The reason why slave word serves the purpose is because you know very well exactly what a slave is. That's what they actually want to change. It's an idiotic analogy to start with anyways.
This _is_ their own language.
Great piece of writing there. Bookmarked for future use. Directly related to this issue in the Python world, [Raymond Hettinger had this to say](https://bugs.python.org/issue34605): &gt; Mostly, I don't think these changes should be made, particularly in cases where "slave" isn't mentioned at all. The word "master" is used in many contexts where master/slave doesn't apply (such as "master key"). Also, I think the PR disrespects all the original authors of the various documentation entries, none of whom have been consulted. &gt; If a particular passage is demonstrably unclear or offensive, it should be changed; otherwise, we shouldn't let vaguely formed notions of political correctness shape other clear uses of plain English. &gt; As far as I can't tell there isn't a single instance where the docs use "master" as a reference to human slavery or where the use could be seen to imply an endorsement of that notion. &gt; FWIW, Guido drew a line for this a few years ago when someone suggested removing the example using the phrase, "I see said the blind man and he picked up the hammer and saw". The judgment was that we weren't going to go down this path unless there was actual offensive speech.
Inb4 issue request to change "master key" to "host key"
Bottom of the barrel grade trolling, I'd bet.
Oh shit. I'm a dumbass.
\&gt; it seems like people like you can't handle using the correct context, instead intentionally opting for one that deems these words offensive in conjunction. &amp;#x200B; Never has a neckbeard and fedora been so vivid.
They did this in Django long time ago
Should we forget about slavery?
It’s free. The paid stuff is for them to host a plot.ly engine for you in the cloud. [Get started here. ](https://dash.plot.ly/)
Wait, was this sarcastic? If so this is comedic gold!
I subscribe to this sub to get help and ideas for code. But now the thought police have come here to ban dangerous words. You must be pretty well off to have the time and energy to complain about the word choice in a programming language.
Oh my god, this is ridiculous and petty. This terminology is used in many well established books on the subject of not just programming and databases but also electronics and mathematical logic. I hope this BS won't sway people towards other languages. There are some really decent up and coming languages that could easily replace Python, Julia and Kotlin to name just two.
I'm confused are you actually opposed to the use of master and slave keywords? FWIW when I was exposed to those words in a computer science context when I was like 10, tinkering with hard drives. It's self evident that it means one component is subservient to the other component. One component is a leader, and one component is a follower. 10 year old me figured it out without a manual, at least one anecdata that this choice of keywords isn't an idiotic analogy.
This is an easy notion when you have the privilege to have never had to worry about it. 
No, but should we use concentration camps as analogy for anything programming related just because we don't want to forget about the holocaust? It should be remembered in a historical context and *only* in a historical context.
Yes, my long-term plan is to use something like David Beazley's "sly" to handle lexing. One advantage of using someone else's parser is that it's a lot easier to generate a grammar for the language that can be reused in things like IDE extensions. I'll look into lark as well.
That's right, social justice warriors, stop kink-shaming in programming. Where are the SJWs to fight... the SJWs... 
Welp, I'm glad the GIL issue has been resolved! Now the *real* problems can be tackled.
I never understand this argument. You hear it all the time, the notion that the fact that someone has the time and resources to do something that they care about invalidates their opinion and work. That somehow the only genuine opinion comes from hard-knock, down on their luck people like... other web developers? 
If it described the use of it, why not? Not using a word that perfectly describes something because you know exactly what it means defeats the whole purpose of language as a concept. It's asinine.
Most of the code I have here was derived from a Python port of the Kaleidoscope language demo created to explore and demonstrate basic LLVM principles. I picked up a fair number of things from that, but I also learned a lot from the online book Rust By Example. Seeing how another language was designed gave me some notions about how to approach the problem. There's also some textbooks out there on language theory and design, and I plan to settle in with those eventually as well.
What's the alternative terminology?
[Link for the lazy](https://github.com/python/cpython/pull/9099)
I have a Chinese word for this: https://en.m.wikipedia.org/wiki/Baizuo
They're probably pro-choice in Python.
Ah, yes, the "privilege" argument. It's sole purpose is to shut up argument you don't like. Similar to calls of racism and bigotry but the new in thing. As a descendant of slaves and those that fought to end slavery in the US, find someone who cares about your virtue signalling.
How stupid this thing is!
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
We better not call them gas stations anymore. Gas can only be remembered in a historical context.
Jenkins went with "agent" when they did this a while back. Context matters though. Worker could be an acceptable alternative - I didnt look at exactly what was changed.
Let's continue your metaphor and say that you have a specific type of engine, and as you mentioned, it works fine for what you need it to do. Then, a new model comes out with some improvements. You could keep on using the old engine that isn't giving you any trouble *now,* but what about when it eventually breaks down? It used to be that you could take it into the shop, but now the shop won't work on it because it's too old; they only work on the *newer* engines. You'd like to try your hand at fixing it yourself, but find that nobody even makes *parts* for it any more. The newer engine does everything the old one does *and more* for the same price, so people have moved on. Yes, it will take time and effort to switch over to the newer engine type, but it's best to be proactive about it and make the switch while things are still going well instead of waiting to scramble to make a fix when shit inevitably hits the fan. 
The argument comes from when people have to spend most of there time and energy to get the things needed to survive (like food, water, shelter, the basics) they tend to not argue about small petty things like semantics in a programming language because they are too busy trying to survive. If at the end of the day you have enough time and energy left over from trying to survive that you can argue about how somebody is using a word, you are pretty well off. This IS a petty argument and because we are having it speaks volumes to how much free time and energy we have.
The code I gave works (modulo an admittedly annoying but actually harmless warning) as far back as mpl2.0 for me (on Py3/Linux). To be honest I have little interest in supporting versions older than 2.0, if that's what you have -- note that there are manylinux wheels for matplotlib so updating it with pip (or conda, if that's what you like) is fairly simple (but let's not start a side rant on the status of the Python packaging ecosystem).
White saviors* 
Don’t down vote the bot. He is just an innocent bystanders doing his job. 
(P)CPython. They should probably change \`collections.ChainMap\` to something else while they're at it; slaves had chains after all.
It's funny, tech people always wonder why there's so little diversity in tech (aside from hires abroad). Then they lose it when people try to change their 'master'-'slave' vocab. I've got a news flash for everyone here: 1.) Language change all the time, no one's gonna die if 'master-slave' vocab gets changed as well. 2.) Getting upset about having to use different words makes you sound like a snowflake. Bring the downvotes.
Copypastaing another comment of mine: &gt; He's not retired. He's on a "permanent vacation". &gt; That's what I don't like about his "stepping down"-- it was extremely unofficial. He still holds a lot of power among the core dev team, more than the others, and he can technically change his mind about his retirement at any time. I called this shit (not this change specifically, but this aspect of Guido's behavior) ages ago. And lots of people on this sub thought I was an idiot because "no, no, hes stepping down, sad day!". No fucknuts, he is and will always be in charge until he steps down in official capacity.
Unpaid intern.
&gt; dig into the real API ... and promptly forget it and go back to pyplot Glad I'm not the only one. Matplotlib is the only library where I have to Google how to do stuff everytime I want to use it pretty much.
Re: properties: Properties sound nice and clean until you start wondering how exactly you are going to replace something like `ax.set_title("foo", fontsize=42)`. Do you do `ax.title = "foo"; ax.title.fontsize = 42`? Then you can't have `ax.title` return "foo". (Yes, you can make it return a custom string subclass. No, I don't think that's a good idea.) Believe me, a lot of thought and effort has been put into that... In the meantime, for the simple cases, you can write `ax.set(title="foo", xlabel="bar", ylabel="baz")` which is even shorter than using properties. Re: OO and pyplot: I think most matplotlib devs agree with the sentiment that the OO API is preferable. Usually you will need a tiny bit of hidden state, which is the integration with the GUI event loop (unless you want to manage the QApplication/GTK main loop/WxApp/Tk root/ yourself, which is relevant if you want to embed matplotlib in a GUI but I assume that's not what you're interested in here). So the best practice is to use pyplot just to create the figure (registering the actual widget with the GUI) and starting the event loop (`plt.show()`), and do everything else with the OO API. So, for example: ``` fig = plt.figure(1) ax = fig.add_subplot(1, 1, 1) ax.plot([1, 2], [3, 4]) ax.set_title("foo") ax.set_xlabel("bar") # or ax.set(title="foo", xlabel="bar") plt.show() ``` Creating a figure and axes at the same time is such a common idiom that you can also use `plt.subplots()` for that -- and because this creates a *figure* it has to live in pyplot. (But in matplotlib≥2.1 you can also just create the figure with `plt.figure()` and use `fig.subplots()`, again improving the separation between what logically really belongs to pyplot and what doesn't). In other words: only ever use `plt.figure`, `plt.subplots` and `plt.show` from the pyplot namespace.
`where` (`which` on Linux) is a handy command you can use like `where python`, `where ipython`, and `where pip` to find where your executables live. If you have multiple results, they are returned in order of precedence (based on the order in your PATH environment variable). As others have suggested, virtualenvs are a convenient way to help manage what interpreter and site packages you are using. Also, on Windows, you can use the `py` launcher to launch a specific version of Python. e.g. `py -3.6`
While I really couldn't care less about Python (and all other languages) keeping or removing the terminology, the most fucked up thing about this whole situation is that a community that is commonly known for its friendliness, openness and helpfulness suddenly has a mini civil war going on because of two fucking words. In a more general sense, I feel nowadays people want to force everything into a two-sided issues and force everyone to join either side, spouting opinions as much as possible while discrediting the other side in every way possible (you get bonus points for personal insults). Especially on the internet. - Pick the SJW / underdog side (in this case, people who have ancestors that where slaves I guess?) and use your voice to represent them. While this may seem empathic and open-minded, it often comes across as patronising the group you're representing (they have their own voice, let them speak about it). I believe some people just do this (consciously or not) to try and come across better than others and use it to secretly boost their fragile ego, because apparently they can't do it in another way. - Pick the conservative side and get angry about everything, even if it doesn't impact you directly or in a very, VERY minor way. Everything is as it is and should never change, especially if the reason for change is a group of people being offended by words or actions that have been completely fine until a short time ago. Even if the suggested change doesn't impact them directly at all, they apparently still find offence in the fact that something that 'wasn't ever an issue' is now changing so other people feel better about it. I believe some of the people on this side really have to let some inside anger/frustration out, and use the issue at hand to release some of that anger. Of course, there are still enough people who don't pick a side, but the room for the people who choose middle ground or generally don't care is getting smaller. Because in that spot, you'll be considered 'spineless' by both sides. Seriously, let's all chill the fuck out and help each other overcome actual issues instead of fervently trying to shove our insignificant opinion about meaningless issue into everyone's mouth and picking fights for the heck of it. So back to the programming community again. I sincerely hope this community will show they're better than this instead of seeing an increase of these types of situations. I dread the day someone doesn't want to help me out (be it a colleague or a stackoverflow user) because I think differently about an irrelevant issue like this one.
I guess they can't merge it to the ***master*** branch.
"Prisoners with jobs"
Like, a slave?
You mean I shouldn't name my highly efficient garbage collector FinalSolution?
The real gems are in the python.org bug initially listed. https://bugs.python.org/issue34605
to offensive against the scientific community !
Awesome, thanks for sharing :)
I don't think it's a civil war. We'll have fun making fun of it for a while then we'll all move on because we have actual work to do. People are just getting really tired of things like this. You said it yourself, the Python community "is commonly known for its friendliness, openness and helpfulness". If that's the case, then why is this necessary? What a long tedious process it must have been; there wasn't anything more useful that dev could have worked on? If there was outside pressure from activists and this was a capitulation, I could understand. The Twitter mob is a powerful thing. But nobody in the community is advocating for slavery. It just feels like virtue signaling, which is something people generally don't like. &amp;#x200B;
Thanks for letting me know. If I had to guess, I think you're seing the 20 Hz refresh rate it uses in order to avoid tight loops on less active applications. This is fine for most animation purpoees, but clearly not for all user input. I'll have a look at an event driven option in thise caee. Will raise a new issue to track it.
&gt; [Breaking change - is it really worth it](https://github.com/python/cpython/pull/9099#issuecomment-420886056) such shit-flipping, much overreact. &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;very angery, wow --- Doge does not translate to text well. The issue people take here has nothing to do with wanting master/slave over other terminology - i.e. the fact that it is master-slave is irrelevant. People would be just as upset if we were for whatever reason going from leader-follower *to* master-slave terms. And all that besides - &gt; A quick grep finds 555 occurrences of the word "kill" in CPython master. Everybody knows killing is bad and using the term might upset certain people. Yet I would not support expunging the word "kill" from Python. ~ https://bugs.python.org/msg324774 What I find particularly frustrating about this PR is that the author (vstinner) created the PR based on a conversation nobody else could read - see [0](https://bugs.python.org/msg324773), [1](https://bugs.python.org/msg324775), [response to 1](https://bugs.python.org/msg324777), [another response to 1.](https://bugs.python.org/msg324780) In fact, pretty much every message after 2018-09-07 17:50 (N.b. IDK if the page is timezone sensitive, if it is that's in EDT) is arguing against the merge, with a variety of well-spoken reasons why (ranging from "this is convention" to ["diversity includes BDSM"](https://bugs.python.org/msg324816)). Unfortunately, four of the three PRs were merged anyway (the final one being blocked by [former BDFL Guido.](https://bugs.python.org/msg324995)) I encourage you to read the issue thread (https://bugs.python.org/issue34605) - you'll have a better understanding of the discussion by reading the actual discussion.
Yeah I’m fine with it. I think the problem is that it will be a pain in the ass to update legacy code. I think it would have been simpler to just have alternate names
I am starting work on some research for my university. We are porting code originally written in Matlab to visualize 3D objects. The use case is for numerical algebraic geometry. We want to use Python for this just because it is free (Matlab is so expensive that you have to call just to see how much it costs...) and we feel that having a visual tool will help students to better understand numerical algebraic geometry. I am in my final year of university and hope that this research project will be able to take the place of an internship. 
It's pretty racist to think of your black coworker when you see the word "slave" in IT.
It really is not that hard to understand why people would be upset by the people upset by the current terms. Let's take the word variable for example. In the context of programming we all understand it to loosely mean a container. However, say that someone decides that variable is offensive in an unrelated context. Perhaps variable is meant to refer to a mentally unstable person. Now everyone outside of the it/is/cs community thinks NO ONE should use that word. This is the problem. You have outsiders dictating a change regardless of context. That is what this feels like. More sjw wank. Being pc over concise. 
While we're at it, should we also just remove these words from the dictionary? This is absurd 
No u
its pronounced as sky-py
Yeah it’s crazy. But damn if it isn’t the most intuitive plotting system I’ve ever used.
If your number of choices is small enough, you can shuffle them (using numpy if you like) and yield them one at a time.
There is absolutely no reason to invoke master/slave analogy in anywhere in production. Primary/secondary is also used in the same thing since the beginning. Remember DOS screens? I am in industrial automation and you also have master servos and slave servos, you have master devices and lazy devices in bilateral teleoperation. These are all lazy and tasteless enumeration of items. Remote/local, primary/secondary, leader/agent etc. There have been always much better alternatives. You also would get the same idea without the manual. These are not for-arguments at all. 
Lots of words but you never did address his argument. Still attacking the author and derailing conversation.
No, I've never had an issue discussing master and slave servers with black coworkers because I'm not a racist and I don't see black people as descendants of slaves that have to be tiptoed around, I see them as people the same way I see everyone else, and so I talk to them using accepted terminology when discussing master and slave servers. Honestly this whole thing is so ridiculous. 
&gt;It depends a lot on your design style. I strongly prefer the style where I mostly have passive data with few nontrivial accessors (for which I need dataclasses/attr), functions that process it, and very few places that actually have an opinion on what should be done That suggests that you don't really consider [code cohesion](https://en.wikipedia.org/wiki/Cohesion_(computer_science)) to be that important. While possible I don't really see the point of having a method that's largely about one class separated from that class. &gt;This is opposed to the OOP approach where lots of objects talk to other objects that they don't own and use increasingly convoluted methods to discover objects to talk to That's not "the OOP" approach. That's just tightly mis/coupled code. Separating methods from classes won't really help with that. &gt;Note that the approach I advocate is not the same as functional programming, because while I prefer immutable data where it makes sense I'm not religious about it I prefer immutability by default too (and I kind of wish python had a way of doing that even though I wouldn't miss all the other FP bollocks). I make heavy use of the "fluent pattern" where chained methods return copies of an object with one or more things changed.
Fair point, calling it a mini civil war was a exaggerated. And I do agree it comes across as virtue signalling (tried to describe it in my own words in my original post since I didn't know the term before this). But it's also a really tiny change with minimal to no impact on Python itself. Of course, reacting with humor to it is fine obviously, I get that. Yet, there are enough examples of extreme responses, most recent is probably people burning their nike gear after the nike PR stunt backlash happened. I'm hoping this community doesn't slowly grow into something that, because it would be a shame to be ruined by, in my humble opinion, meaningless shit like changing slave/master terminology. So let's hope you're right and it will simply blow over instead of blowing up over time.
&gt;"Snowflakes" aren't exclusively used to describe the dominance over other people. Neither is master/slave? We've used this terminology for decades in IT, it's a well known and understood definition of each word. 
We all know slavery == bad, that's obvious. But this change represents something much more heinous and insidious. By allowing this change, you are setting a precedent for the evils of slavery to haunt our present and future. It's a knee jerk reaction to a perceived threat that WE ALL KNOW isn't actually a threat, that code isn't acutally enslaving anyone. I equate it with someone suffering from PTSD or extreme anxiety being set off by a loud noise or some other innocent event. It's not a healthy reaction, there is no real threat here, it's a false alarm and we're only reinforcing the pattern. By proceeding with this change, we are allowing ourselves to be bullied into submission by a the idea of slavery.
It’s not a matter of treating people “differently”. That’s what the taboo around “final solution” (which is a much more likely to be an apt analogy than slavery!) shows: everyone has their own taboos and you respect them all. 
I always say master-worker. Would that be difficult to implement?
"manager" and "individual contributor"
With same logic, a slave should do what master says which is not the case. This argument has been used over the years. Not a single case stands. That's where all these alternatives come from. Every project is changing it regardless. Parse carefully, people are not banning master/slave words. They are stopping using these words in places where it is not called for. Putting an idiotic analogy in the first place then insisting on it and then making a fuss over a single word is stupid. 
And there it is! Because I have posted on a sub you don't like nothing I say is valid in you mind. Thanks for playing.
I understand what your failed attempt was. I'm just saying, the person you replied to was not being rude in any way and simply asked why you were twisting what he said because you either didn't know or lied about the truth. Your lack of ability to have a reasonable discourse because you feel slighted says a lot about who the true issue is in conversations with you. I'd recommend growing up. It'll do wonders for you.
Conversations closed locked personally by Guido: Bug report: https://bugs.python.org/issue34605 &gt; I'm closing this now. Three out of four of Victor's PRs have been merged. [...] that can be dealt with as a follow-up PR **without keeping this discussion open**. The same on GitHub: https://github.com/python/cpython/pull/9101#issuecomment-420508902 He closed the discussion after towerd user provided very hard to refute Oxford dictionary based argument. &gt; There is no point in continuing the debate. We’ve all had our say. If you want to keep talking, go to Twitter.
If the master dies why does the slave become the master? That's not accurate
Because changing identifiers is always easy and never causes un(?)expected bugs in depending software.
&gt; making a fuss over a single word is stupid. I love irony
&gt; "driver/driven" "driver"? As in "slave driver"?
Yeah, people are putting way too much energy into getting mad at a change that won't affect them in any meaningful way because "SJWs". 
Further notes, here's some of the books I've been looking at: Modern Compiler Implementation (there's Java, C, and ML editions; this is C) [https://www.amazon.com/Modern-Compiler-Implementation-Andrew-Appel/dp/052158390X](https://www.amazon.com/Modern-Compiler-Implementation-Andrew-Appel/dp/052158390X) Design Concepts in Programming Languages [https://www.amazon.com/Design-Concepts-Programming-Languages-Press/dp/0262201755](https://www.amazon.com/Design-Concepts-Programming-Languages-Press/dp/0262201755) Engineering A Compiler [https://www.amazon.com/Engineering-Compiler-Keith-Cooper/dp/012088478X](https://www.amazon.com/Engineering-Compiler-Keith-Cooper/dp/012088478X) Programming Language Pragmatics [https://www.amazon.com/Programming-Language-Pragmatics-Michael-Scott/dp/0124104096](https://www.amazon.com/Programming-Language-Pragmatics-Michael-Scott/dp/0124104096)
The rewording the Zen of Python to be less lookist [proposal](https://mail.python.org/pipermail/python-ideas/2018-September/053365.html) is the follow up of this. Poe's Law really does show itself here, I have no idea if it's satire or not. 
&gt; "Snowflakes" aren't exclusively used to describe the dominance over other people. "Master" has over 30 definitions, only a couple have anything to do with human slavery. Should we protest chess tournaments because they call people over a certain skill level "masters"? Should we protest all 18th century literature because the head of the house (and often any male child) is called "master"? &gt; people are upset, so just change it * The yield statement reminds me of the way people expect women to yield to men, so just change it. * Class is clearly a reference to different social classes, so just change it. * My mother is upset that super() exists, because she doesn't like comic books, so just change it. You see, we don't "just change" things because people get upset. People are idiots, including my mother at times, and get upset over truly stupid things. If we're really, *truly* concerned with how people feel, a vote should be held, and Python developers around the world should weigh in on it.
It’s surprising and kinda disappointing how so many people are upset about this change.
&gt; [..] you know very well exactly what a slave is. That's what they actually want to change. We know what a master and slave is because it is the English language. The word 'slave' has existed in some form or other since the 13th century and the concept of slavery has been around for much longer than that. Both the word, and the concept of slavery predate any recent historical events, so it is absurd to say that they are inherently and exclusively associated with them.
Because SJWs have taken over the computing world.
Yeah but like it's really *really* going on in the Islamic world. For example CNN attended an actual slave auction last year in Libya where a slave was bought for 90 dollars. In the west "slavery" usually means a Chinese guy paying poor wages to illegal immigrants in his underground sweatshop.
Check out my small module, dialmap. It has a Normalizer class which will do the job https://github.com/pycampers/dialmap 
Sounds good to me!
"master" and "differently master"
Indentured process lmao
&gt; I wonder how Linus would handle such a complaint. Probably with some obscenity-filled message comparing someone to a masturbating monkey. Wait, I'm being told the masturbation remarks are reserved for bad security patches.
We shouldn't use parent/child in programming anymore either. It offends people who aren't parents or have no children. OR it bullies people who have decided not to have children by reminding them of the concept.
My HR wouldn't let me put 'execute test cases' into a QA/tester job description...
*Odd?* I'm pretty sure odd numbers are the next thing to be removed
r/botsrights
I understand the definition of the n-word when people use it to mean "something dark." The understanding, or even the understanding in context of a word, doesn't make its connotations universally moot.
&gt; By allowing this change, you are setting a precedent for the evils of slavery to haunt our present and future. Hey! Someone who thinks the evils of slavery don't haunt our present and future!
This seems to me to be more an attack on the BDSM community than a snowflake issue of religion. I'm guessing some prude has naughty thoughts everytime they read the Master/Slave, and just can't handle feeling uncomfortable. 
Depends, mate. Whatever people are willing to pay you for the job. As you might imagine, contracting a programmer for a Django-based blog is probably paid out differently than something like high-velocity algorithmic trading on the stock exchange.
To build on \u\pastorhudson's comment, it's basically just one line that you need to swap out when doing offline plots (which is what I normally do). [Documentation here](https://plot.ly/python/getting-started/#initialization-for-offline-plotting), but essentially when you do the final call to plot/draw everything, you call plotly.offline.plot() rather than py.plot()
Doesn't care about naming conventions either though...
That's a fair point, you could have made that as a regular argument in response to my comment. But instead we've bread a community of sarcasm and retaliation.
Clearly we should understand it as his endorsement of the South. The bastard. /s
The emancipation proclamation was 155 years ago, and the world has not come to an end (yet... despite all current efforts). Is this really worth a breaking change in 3.8? Couldn't it wait until 4.0?
Yes
You know who else was just doing their job?!?!
My preference is Django /r/djangolearning Flask is also a good alternative 
don't forget IDE HDD controllers
Sorry, but in this context Guido and others that merge it look like a band of idiots. Sorry for not being politically correct.
SJWs ruin everything.
If everyone smells like shit, maybe it's time to check your own shoe.
Not sure if that is a joke or a serious argument, but considering the other branches are not called "slave" branches, this is an apples-to-oranges comparison
I'm not really sure if the people here want to have a discussion about this or just shit all over everyone with a different opinion. Like why would anyone come in here to express support for this change considering how they'll obviously just be called a "snowflake" with no regard for the discourse? This thread is over, I think mods should lock it.
So glad they did this!! The last stronghold of racism was this terminology. With it gone we can now move on to our utopia! While they’re on this path I would like the term “Class” removed. We all know it’s racist and refers to a hierarchy system that disenfranchises those less fortunate! 
Cite one reason that we should not be using more descriptive technical terms in our code instead of master slave other than "troll SJWs!"
In what world is the SJW side the underdog side? Their aim is to control the media, academia, finance, and they are quite far along that already. Meanwhile a Christian Baker who doesn't want to violate his Christian beliefs has SJW activists purposefully going to his bakery to claim human rights violations despite the Supreme Court saying that practicing his religious beliefs is OK
&gt;Honest question, have any of you who are against the change ever had a black coworker? It’s awkward as hell to say “oh just change the settings on the slave.” I’m not going to miss the old terminology. It would be like having an accounting routine that calculates the “final solution”. I'm black and think it's fine, the master/slave terminology is a obvious and intuitive while all the alternatives don't make sense
r/inclusiveOr
Here's a sneak peek of /r/InclusiveOr using the [top posts](https://np.reddit.com/r/InclusiveOr/top/?sort=top&amp;t=all) of all time! \#1: [Should we draw Matt Damon as an ardvark, or a human? Yes.](https://i.redd.it/prldw1hwpil01.png) | [28 comments](https://np.reddit.com/r/InclusiveOr/comments/843hj7/should_we_draw_matt_damon_as_an_ardvark_or_a/) \#2: [Does this also count?](https://i.imgur.com/3FbjfaH.jpg) | [38 comments](https://np.reddit.com/r/InclusiveOr/comments/8s9cbw/does_this_also_count/) \#3: [Meta](https://i.redd.it/ac2usa4wj6111.jpg) | [39 comments](https://np.reddit.com/r/InclusiveOr/comments/8nhsg4/meta/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
So for new projects almost everyone uses python 3 now? I remember even two years ago it was a big question you had to ask yourself. 
No, not at all. I use main-worker
Because SJW political correctness matters more than actual engineering, apparently.
I always thought they should have just bundled 2 and 3 in the same install. And you’d just run python myscript.py and it would decide which version to use. Was that ever considered?
Primary - replica is much more accurate and clear imo. I’ve also seen leader - follower. 
Seriously... :/
Yes you're totally right, making some changes to a code base is absolutely "more heinous" than the practice of slavery. 
I think this is a fair criticism of R.
I like your first example, as that looks pretty readable. The second version however, is something I'd rather never see in production code. Python does not seem like a great language to do functional programming in.
Give me the context of what you mean? I use main-worker for threading
It would have been an irony if I had joined the ranks of the pro-change people. The parsing is not your forte today. 
Or you could stop resisting a sensible change
Poe’s Law...
Yea I'll use 9/11 Error when the program crashes since terrorism is very old. "flavor up your simple argument with references, they might buy it" 
Continuing to use hard drives as an example, Primary and Secondary have separate meanings from Master and Slave. There was a Primary and a Secondary IDE channel, and each channel could be connected to a Master drive and a Slave drive.
Yes, you said said what I was trying to get at. But to be honest, I don't think matplotlib is that far away. They can get there. 
Python 3 only got good around 3.4 or so, but yeah, this has been on the cards for a long time.
Thank you, this is part of what I was getting at. 
Wait till they find out about hw SPI or i2c interfaces....
Do you really think master/slave terminology is the bottleneck for your diversity in code initiative?
Because your test case ([RPN (reverse polish notation) on codechef](https://www.codechef.com/problems/ONP)) gives the number of test cases/input lines as first argument. You decrement that number to know how many lines/times you need to do your while loop. &amp;#x200B; Generally I'd recoment /r/learnpython and ... run your code, change it/see what happens.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
PC is and always has been a stinking load of "road-apples" whose end result is nothing but discord and discontent.
It really bothers me that there is a subset of people upset by this change. Maybe stop being lazy and use more descriptive language in your code for a change? Maybe your terms could give a hint at underlying data architecture (your objects are nodes, with 1 root node, many leaf and non-leaf nodes below it), or describe a function (e.g. primary-replica), or leave room open for complex runtime scenarios (e.g. your objects are in a parent-child relationship and parent completes/terminates/is cancelled/whatever but child still exists is is now an orphan, and objects can have intuitively descriptive relationships like sibling or grandparent). See how much more descriptive this is than master-slave? "But I have to change my code" is not a good-enough argument. Any IDE worth your time makes this edit trivial, and if you don't use an IDE, learn to grep! If you aren't maintaining your code and are intentionally against this change because you have an axe to grind against so-called "SJWs", that's on you and you deserve to have your code break.
Wow.... master/slave are industry terms. They have been used in high-level programming languages from the start because they same terms exist on the hardware interface level. They are descriptive terms in the English language. Getting upset over this is ridiculous. 
Communication requires both the transmitter and receiver to do some work and not be lazy. Master/slave terminology does not invoke instances of historical human bondage unless either the transmitter or receiver of language choose to contextualize it that way. If a reciever is choosing a single specific contextualization of a term and not doing the work to interpret in the obvious correct context then the receiver is lazy. If the receiver does not see any reason why this technical terminology is useful and assumes that it is an intentional slight against people, then the receiver is to lazy to care to understand this technical context.
Ok some clarification: I ment to say that the underdogs (people with the complaint that the usage master/slave is offensive considering their ancestors were slaves) are - often involuntarily - supported by SJWs. I'll fix it in the original post. And yeah, I agree it's retarded that people claim human rights violations at a Christian bakery only because the owner is Christian and they don't like his Christian beliefs, but I'm not familiar with the story. Maybe he did something that does violate human rights, I don't know the story. Anyway, the main point I wanted to illustrate is that I hope the programming community won't end up fighting over silly arguments like so many communities around the world and just stick to helping each other out with actual programming problems.
This is dumb as fuck, this is the exact kind of nonthoughts we need to avoid. Changing things because they're bad in a totally different and unrelated context is dumb. 
That would be surprising if a high-velocity trading algorithm was built in python.
"Manager"/"minion"
Wait until "insensitive variables" are banned from interpreters and we go full on Club Penguin up in here. 
Bravo!
Thank you for this! 
It’s less offensive than the word mainframe at least. 
I think step 4 should be break problem down into smaller problems and then step 5 is solve them :) 
I'm offended by the change to "worker" instead of slave. I think it should be called "wage slave" rather than a "worker" as a reminder that capitalism is exploitative. 
Thor Ragnarok was a great movie.
The tutorial says there's many issues at the moment.
You have selectively and incorrectly interpreted what my terminology was describing. The transmitter and receiver are describing a person describing a thing and a person interpreting the thing.
I've seen primary/secondary, primary/replica, leader/follower.
A handy rule of thumb is that anyone who unironically discusses “cultural Marxism” is someone incapable of independent thought. 
Upper Management and Implementation Details.
I don’t quite understand what inside of python code can be described as exclusively a master/slave relationship. Someone enlighten this tiny brain with rays of intelligence pls.
yeah totally. Why not eliminate a term in common use for thousands of years for literally no reason, you just have to change the words in all your code, crybabies.
Russians and Republicans
I'm surprised how many people are emotionally attached to the master-slave terminology as opposed to apathetic. I'm pleased that the dev team are committed to their values.
Yeah wtf is that? Emblematic of 90% of the responses in this thread.
Of course slavery haunts many peoples present and future. But we are giving it even more agency with this change. 
&gt;The parsing is not your forte today. Imagine being this much of an insufferable douche.
Yes, again continuing the explanation. There is no master slave relationship with master slave HDDs. One is for booting the other is storage (please don't dissect this. I know it is more nuanced but off-topic). Alternatives have been proposed and adopted already. Notice that nobody is arguing to change the master in "Master Boot Record". It is the analogy that is used to describe the relationship between two entities that people mildly suggested to change. People are really interesting.
"the most dangerous phrase in the language is 'we've always done it this way'." - Rear Admiral Grace Hopper but seriously, familiarize yourself with the logical fallacy argumentum ad antiquitatem. You're citing the very thing that is changing as evidence to not change it
Imagine not being able to read properly, before punching a keyboard.
Django has its official tutorials at - https://docs.djangoproject.com/en/stable/intro/overview/ Mozilla has its Django tutorials at - https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django
Because this change is obviously political correctness and not technical in nature. The "more descriptive technical terms" is a wrapping to make it seem technical but really this is political correctness. We let this slide. I guarantee you. You'll be seeing a compiler or interpreter banning certain variable names because they are deemed "offensive" Sjws are cancer and so is political correctness 
my bad, in that case, why not make an argument about why master-slave terminology is inherently better than alternatives rather than making an argument that about how people should interpret that terminology without addressing a single technical problem? 
Yes you're absolutely right, changing some variables so that some people feel more comfortable in a code base is a "submission to fear" and is "more heinous" than slavery. 
Hastings got to the root issue with this change: &gt; Have there been any actual complaints? Or is this an attempt to solve a problem that doesn't really exist? Stinner replies: &gt; &gt; Have there been any actual complaints? &gt; Yes, but sadly they are private. So nobody has publicly complained, and we can't verify private complaints. This is trying to fix a problem that doesn't exist.
Jews; it was basically the policy name for the Holocaust before we called it the Holocaust.
Familiarize yourself with the fallacy of relative privation
Read the changes in the PR, it's not that many. Usually it means - origin and replica/clone/view (where changes in the replica are reflected in the origin and only the origin has a physical representation. Examples are databases or things like like SVG nodes or numpy arrays) - parent and child in a hierarchy (things can be both simultaneously, examples are threads or document nodes) - orchestrators and helpers, examples are mostly programming-related. (E.g. generic functions that have several concrete implementations for different argument types, or a main pipeline function/task that calls a sequence or hierarchy of others to acieve complex data processing)
Feelings are not the endgame of political correctness. They are often relevant, but if you believe that it's all about feelings then you are simply dismissing the idea. To be clear, I don't think this particular terminology dispute is worth fighting, but I do feel that maybe half of reddit misunderstands PC.
No he's right. You're being completely insufferable. 
if only there was a tool that made this task trivial with a simple search/replace, maybe even a symbol/context aware search/replace. 🤔 If only someone could invent such a tool....
On my own repos, sometimes I use \`bachelor\` for development branches.
&gt; Properties sound nice and clean until you start wondering how exactly you are going to replace something like `ax.set_title`. I'm okay with `ax.set_title`. That's not what I meant by a setter. &gt; In the meantime, for the simple cases, you can write `ax.set(title="foo", xlabel="bar", ylabel="baz")` which is even shorter than using properties. That is what I don't want. What does title have to do with xlabel? You're essentially treating title and xlable and ylabel as properties in this line. If they're being treated as properties, they should be settable on three lines: ``` ax.title="foo" ax.xlabel="bar" ax.ylabel="baz" ``` But you're right, we don't want this for `title` because it has so many options. We want something more like this: ``` ax.set_title('foo', fontsize=20) ax.set_xlabel('bar', fontsize=18) ax.set_ylabel('baz', fontsize=16) ``` I don't care if it's longer. This makes the `fontsize` option discoverable, and easier to add and remove later. I think `Axes.set` should be deprecated since it is nothing like Python style, and it creates the wrong mental model for how the properties work. &gt; `ax.title` return `"foo"`. (Yes, you can make it return a custom string subclass. No, I don't think that's a good idea. I think that `ax.title` should return whatever object can be used to call `ax.set_title`. That way you can for example get the title (text, font, font size, position, etc.) from one figure and set it to another.
Relevance? 
This whole shitshow could have been avoided if the submitted of that PR had been smart enough to title it with “Replace master/slave terminology with a more accurate analogy” instead of “for diversity reasons” I won’t pretend to know if it was intentional or not, but the specific title of that PR looks designed to elicit a large negative response, like a downvote troll. 
It is incumbent on you to make a technical argument why this widespread and established technical terminology that makes useful concepts consistent across all domains of engineering should change in the specific case of python.
Removing references to slavery is the real slavery. Ok.
If you want to get cheeky, *lord* and *serf*.
you can't cite tradition, or as you call it "industry standard", to argue against changing it. That is my point
Yea, I too think this serves no real purpose, but if it makes some people happy… The alternative terms are at lease more specific. Master and slave just implies hierarchy, the others do so while also giving a more specific purpose.
intention has nothing to do with it and I never implied intent
&gt;How do you like it compared with matplotlib. What I like about Altair: * Easy and intuitive to build a graph. Very easy to make interactive graphs (with tooltip on mouseover for example). The way you program a graph is completely different, at first it will be hard how to code one from zero but it should be very easy to adapt these examples: [https://altair-viz.github.io/gallery/index.html](https://altair-viz.github.io/gallery/index.html) * Based on [Vega-Lite visualization grammar](https://vega.github.io/vega-lite/)*.* And despite being based on an external library is very pythonic. * It's being actively maintained by two awesome developers (and vega-lite, the backend of Altair, also seems to have an awesome community). Disadvantages compared to Matplotlib: * There are things that you can do in Matplotlib that you can't (or at least I don't know how) in Altair. For example I don't how to make (or if it feasible to make) a 3d graph in Altair. Also, the fact that is a high-level grammar makes it a bit less customizable than Matplotlib (at the gain of huge time savings). Overall I do all my visualizations are Altair-first now. Only if I can't do something (0.5% of the cases) I switch to other libraries. &amp;#x200B; &gt;and the authors a cool dude The author looks like an amazing guy; check out [his Youtube videos](https://www.youtube.com/results?search_query=jake+vanderplas). He is also on reddit /u/jakevdp. &amp;#x200B;
Emoji compatability is key future-proofing 
Fair enough, thanks for your consideration!
no, but taken as part of whole coding culture, with the people who aggressively defend the terminology when clearly there are some people who are bothered by it most certainly is. Unfriendly and unwelcoming to outsiders, you'd rather shout down anyone who questions you you than make a trivial change to your code and coding vocabulary 
If a kid who can program python plays with a real python and gets bitten, will the community calls for changing the name "python"?
No, you definitely can. It’s one thing if this was unique to python. Then your stance would be valid. However, that is not the case. Industry standard is absolutely a valid point for arguing semantics/syntax. This is especially true for a programming language whose purpose is to be easily human readable. 
Have you read about what happened with Redis and Antirez? How he was insulted and harassed until he relented and changed the Redis API and Documentation? Of course people are upset about forcing people to change their language and about the harassment and insults. Is this change really so important that you would inflict harassment and more onto a person? 
&gt; So the best practice is to use pyplot just to create the figure (registering the actual widget with the GUI) What does creating a figure have to do with the event loop? I understand that showing it does. What if I just want to create a figure and save it as a PNG. I know that I can do that, but why would that need an event loop? Also, how does `plt.show` know which figures to show? Is it all of the ones I created in the program, or in the thread? (I assume the program since thread locals were only recently added to Python.) What if I only want to show a few of figures that I created? This is how I want to write your example: ``` fig = Figure() # Regular constructor. ax = fig.add_subplot(1, 1, 1) ax.plot([1, 2], [3, 4]) ax.set_title("foo") ax.set_xlabel("bar") # or ax.set(title="foo", xlabel="bar") plt.show([fig]) # Explicitly tell plt, which figures to show. ``` If I only need to save the figure to disk, I should be able to do that without pyplot, right? Also, the `add_subplot` is pretty disgusting. Everyone has to look that up the first time they use it. It should be something more like this in my opinion: ``` grid = fig.create_subplot_grid(rows, columns) ax = grid.create_subplot(row, column) ``` This divides the operation into the two logical operations that are happening. It prevents the repetition of rows and columns every time you're creating a new Axes object. It also allows you to have other non-grid layouts.
Imaginary Gold for referencing the Poe's Law. Didn't know it.
Sensible change? What exacty is the sensible part? Hmm.. 1. done or chosen in accordance with wisdom or prudence; likely to be of benefit. 2. (of an object) practical and functional rather than decorative. Not of any benefit whatsoever to anyone, and neither practical nor functional. Rather depending on the scope it could be a problem to many, as it changes established technical lingo, and possibly breaks compatibility with code written before the language went pc... This is about as sensible as the muppet that went over the CSS for django and replaced "black" with "#000"... This should be a fork, "python sjw edition." The fact that this was actually merged is a clear indication that the language isn't quite as future-proof as thought. Suppose next up for me is porting the Python Rfid Reader driver I'm using for some projects to C/C++. It uses SPI, and I don't want it to break a year from now because someone desided to go s/x/y/ on the language... Go ahead, downvote me... But you know I'm right... 
It’s easy, so long as you store their identity and follow them around from the time they are spawned. My only complaint is that people are often too hasty when killing children, it’s import to wait and clean up afterwards or they start piling up.
Isn't erasing every reference to it an act of trying to forget?
Not exactly. It’ll be much less breaking changes than 3.0, but e.g. [PEP 563](https://www.python.org/dev/peps/pep-0563/) will no longer be a \`\_\_future\_\_\` import then. Other features have a [transition plan](https://www.python.org/dev/peps/pep-0479/#transition-plan), but this one just says it’ll be in 4.0.
Erm, excuse me but classes imply classism, not racism.
I bet that’s exactly what I’m running into. More so than video games, playing percussion has made me very sensitive to input lag. 
But what about socialists?
The thing about it is, most of the jokes on this subject are serious arguments, and most of the serious arguments are jokes.
on the contrary it laughs and dances with endless and supreme joy as i sob uncontrollably about the bugs i cant fix
Shh you're running the alt-right circle jerk.
Agreed, and I'm very disappointed in the community's response to this. 
how about primary-replica?
If they change this I’m forking the language and calling it non-PC Python (Normal Python)
ah, an absurdist strawman argument. now that's novel!
The terminology is long established, and it is used as it generally is the most descriptive term available. Can you give any examples of a master/slave analogy in technology that doesn't describe things accurately and motivate changing them for reasons other than an ego boost?
Yeah, try that. Watch everything break. "master" is used in far more things than just master/slave relationships.
Yeah exactly. It's not that people are offended by "master slave". Or that it's hurting anyone's feelings. It's that so much of our culture was created by old white guys years ago. We're a different people now and there are segments who realize they have a voice now and are using it to point out the parts of our culture that they want changed. Dismissing things like this as whining by the PC police, or talking about hurt feelings make you look like a dumbass.
Umm historically the upper “Class” is dominated by one race, I’m triggered. 
Don't worry it wasn't a real attempt, just trolling
When the machines take over, we don't want them to know what slaves are. 
Yes we've trumped up this SJW threat as some kind of slippery slope. I get the feeling a lot of people feel genuinely threated by somebody saying 'uh I dunno if slave is a term we should through around casually, how about this other term?' It's unclear where anybody thinks this is headed, or why they feel threatened by efforts to make the language more inclusive. None of the slippery slope arguments have made any sense - most of them have boiled down to 'if people make me be respectful about THIS, what else will I have to be respectful of?!' and I have zero sympathy. Maybe the Java community will welcome you.
Making a script which pixelizes an image.
Problem solved! &amp;#x200B; [https://imgflip.com/i/2hut28](https://imgflip.com/i/2hut28)
Thank you. Please do not go to any extra trouble, though, as I realize it can be a lot of work if it wasn't meant to be open source originally. I do believe it would be beneficial to others doing similar projects and would certainly help me. Here is my project in it's current converted static form (remember it is pretty old so please ignore the design): http://trnerr.org/projects/invasives_static/plantIndex.html It is an invasive species database so shares a similar structure as what you have done but is no where near as functional and I hope to change that soon!
It's the low barrier to entry. I don't expect to see this in my Java community.. PHP and Ruby maybe, but Java, C, Go, etc. are probably safe from this crowd.
The PC people are already downvoting. Lol
You said that the only reason that they used it is to upsetting people. That does say that you think that this was their intent. Which I can almost guarantee that it wasn't.
25 * 3 is 75. 75 % 4 is the remainder of dividing 75 by 4, which is 3 (because 75 = 18 * 4 + 3). 100 - 3 is 97. Also, /r/learnpython is a better place for questions like these.
more descriptive than, say, parent/child/orphan/sibling/grandparent/grandchild/etc?
If any comment deserved gold...
&gt;As a side note, claiming that master/slave have anything to do with race is extremely US-centric. This --A thousand times.
Politics aside, I actually do like the line "clean is better than dirty". That's probably because I'm antidirt though.
&gt; Wait, I'm being told the masturbation remarks are reserved for bad security patches. some things are sacred, after all
Seriously, one has to almost be mentally retarded to create your post. In all seriousness, you need to get out of your mother's basement and learn more about what's going on in the world around you. This means learning more about propaganda and the means of control. Several of the replies are so unintelligent it's difficult to believe they are not troll posts or someone with an IQ in the retarded range. Seriously. There literally is no valid reason to support those code changes which are not politically driven. Without emotion and manipulation and ignorance, the only valid response to these change requests is "fuck off and die." If your intellect is so low that you are not at least able to recognize the legitimacy (even if you disagree) of such a position, you seriously are uneducated or have been indoctrinated. Don't expect further replies because the exchange needs none. You have a simple choice. Go educate yourself. Or remain ignorant. Everything you need to know has been told to you. No level of exchange is going to improve your knowledge as you clearly have no desire to address your ignorance. Best of luck. 
Wow, thank you for making that easy to understand, I am new to learning python, I will post on learn moving forward thanks 
You want us to do your homework for you?
I guess his stepping down as dictator was short lived.
OK, I'll bite. Let's talk about why you think only a low-skill developer would care about building an inclusive community.
I’m in the same boat
bye! you won't be missed!
Thank you as well. It's an outstanding library.
yes you’ll learn python along the way for sure
That’s what I’m wondering, is why people are getting upset enough to insult and harass the language managers. I don’t really care about this issue, I’m pretty apathetic, I’m just surprised there’s among such a small group, most people seem to be furious with the python management team.
Except it's not even more accurate in some cases and is actually harder to understand.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Yes yes, leave the statues of confederates up too, because taking them down is submitting to fear. Nobody's afraid of these things. The world is just better off without them.
Gru/Minion FTFY
QUIET!
It seems that you are the only person who is lazy to learn the new meaning of "slave" in programming languages and keeps referring it to slavery. Stop complaining and learn new stuffs please.
There's a fig.show()
Python’s a great language for beginners to start with, and I imagine if some people come across the master/slave terminology they’ll be a little taken aback. There’s much more neutral terminology that could be used, and since python is a very lively language it’s a worthwhile change. At least that’s what I imagine the rationale for this decision was. I’m pretty apathetic to the issue, I don’t really care about the change but I understand why it’s being made. I don’t think there’s any justification for people harassing the people who’ve made this decision. 
I don't think that quite fits. /u/metaobject isn't saying "word policing is good/bad b/c the GIL is better/worse", they are just saying there is an opportunity cost here when effort could have been spent on something that is more effectual. 
I think that's very dismissive of the accomplishments of a wide range of historical figures.
 I have an idea for a web app which is what got me interested in learning Python. I have some front end knowledge already but I always had to rely on other programmers for the backend. Several replies suggest jumping right into a framework. This will probably help me launch a prototype/mvp quicker which is great. However I want to have a good understanding of Python so I was hesitant about frameworks until much later. Basically not sure if I should learn as much Python as I can first before frameworks 
Thanks!
How about witch-doctor and zombie?
I'm saying any developer that has an actual education in the computer sciences or equivalent aren't likely to care or even notice these terms since they have been a part of their curriculum since the start. One of Pythons strengths is that it can be picked up by just about anyone, but you also get folks who aren't educated in the field. They come from areas like social studies or psychology, just as an example, and start changing fundamental verbage of computing topics they probably just picked up from a blog post. Yeah maybe this crowd will slowly filter into the compiled languages down the road, but for now this is basically the canary in the coal mine. The vocal minority has so much power to guilt people into changing the most arbitrary things it makes you question what is next?
You have it backwards. SJWs didn't show up with a new vernacular to make code better. Using more descriptive technical terms (and it's not clear they are btw) is what the developers are doing in response to the thought police banning words. 
this may be news to you, but you can upset people without intending to upset them
Perl for the win!
You are the one that is emotionaly attached to the extent that you feel okay changing a computer language only to make you feel better. The language uses terminology based on its *technical* meanings, just like how you can *have a theory* and then there are *scientific theories*. Two different kinds of theories. Similarly you can be a master of arts, a maestro of an orchestra, masterful in sports, work like a slave building your new garage, or hook up passive slave devices on a bus that are incapable of doing anything without a master on the same bus. Neither has got anything to do with slavery, they just describe a (voluntary) relationship between two or more things. Another great example would be the SPI bus in electronics. You have a clock signal together with a Master-Out-Slave-In (MOSI) and a Master-In-Slave-Out (MISO.) Imagine a sensor connected to a controller. The sensor doesn't do anything until the *master* requests a temperature reading. It is a *passive slave* that does exactly what the master commands it to. There is no better terminology that works across the board over any number of devices as it describes the *roles* involved. Also, the fact that the dev team are committed to their values as you put it is a big red flag if you are in a situation where you have to rely on some code working reliably. It is a small step forward for social justice, but a bigger step back for python.
Yes it does! Before long, I might have to work with women and sociology majors. THE HORROR!
How knowledgeable were you with Python before you decided on this framework though? I barely know Python so I am trying to learn more before Django (or Flask).
What’s funny is that there is still literal slave trade going on in this world. You will never see these people start a campaign for us to stop a real slave trade.
I see the effort here as relatively trivial compared to something like the GIL
This is the problem with these crusades. https://github.com/python/cpython/pull/9101/files#diff-56347ce8dcac1188a043c1318f953d7eR184 This changes the documentation from "master process" to "parent process" but parent process has a specific meaning in UNIX that is [NOT 1:1 with the way that python works with multiprocessing.](https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods) It's shit like this that leads to problems down the line as people make presumptions based on documentation that are not the ground truth in the code. So their quest for PC has created ambiguity and discussions are closed.
Most things would be. But that has nothing to do with what I said. Based on your other comments, you're throwing as much rationalization as possible at the discussion hoping something sticks. 
One of the few good comments in this thread 
&gt; It's not my job to educate you Are you doing a right wing SJW parody?
Great post! This is what I am trying to figure out--how much of an understanding of Python I need before I start creating web apps with frameworks like Django. I am really impressed by the sites made with Django! Just trying hard not to get too ahead of myself and learn more Python before I move on to these frameworks!
Professor/Grad Student?
Thank you. The first example was just a more literal translation of your perl code into python3 (although your perl code made a guarantee of exactly three pairs, which mine didn't), so I can't take much credit. As for the second one, my apologies :-). I didn't do functional programming, I *abused* functional programming ;-) . Here is a more lispish approach: def compareTriplets(left, right): return list(map(sum, scores(left, right))) def scores(seq1, seq2): return unpair([fight(a, b) for a, b in pair(left, right)]) def pair(seq1, seq2): return zip(seq1, seq2) def unpair(pairs_seq): return zip(*pairs_seq) def fight(a, b): return [int(a &gt; b), int(a &lt; b)] Functional programming in any language tends to be more verbose if you want clarity, of course.
This exactly proves the case that the bug report is bullshit. &amp;#x200B; It doesn't make sense in the context of human slavery because it has nothing the fuck to do with human slavery. Words have multiple meanings and are context sensitive. The fact that you have trouble looking at the jargon and making an analog to human slavery is just an illustration that the two things are not related.
&gt; This change impacts me in no meaningful way, and if it's bothering anyone, I'm totally fine with removing it. It affects no one in a meaningful way. The problem is it sets a horrible precedent. It sets the precedent that we are no longer, as humans, allowed to use the words "master" and "slave" because it offends someone. When will we no longer be able to say: * penetration testing * black/white[list, box, hat...] * finger * fsck * mount * kill * man in the middle attack * man (as in man page) * touch * many, many more And sure. These are terms in CS/IT. Fine. But what about "terror". When will we remove that, because people are offended because of "terror attacks" of 9/11 or otherwise. Even now, there are countless instances of people claiming presidents are weak because they won't call people terrorists (and I don't mean when they aren't actual terrorists, but rather when they actually are. That's a whole other issue of "dear god why are we fucked up"). And what about "child"? People who lose their children at or soon after birth, or miscarry, are indeed triggered/offended by such a term. Shall we revoke this word from our vocabulary as well, tech-only or otherwise? Where do we draw our line? Why is "offense" over language even a matter here? Different languages have fundamentally different terms, and cultures using those languages have fundamentally different ideas on what terms are and which aren't offensive. So, when we translate our documentations into spanish, or russian, or whatever, which form or pronouns should we use? Formal or informal? I have seen people in both those groups (I speak Russian, I learned Spanish in high school and remember just enough to get by) get offended by whichever is the opposite that they consider themselves to be. This isn't a software issue. It's an issue of humanity and ideology. It's just leaking out into software for some reason. The idea being that people need to start removing words from the dictionary because it offends people. This is a very, very slippery slope into what ends up in doublespeak. Thats why this is a problem. That's why it affects *everyone* in the long run. And why it's head poking into the software world needs to be cut off, here and now.
Holy shit! Is this a thing? What a fucking cry babies.... Should we also abolish words like daisy-chains? (More applicable to electro engineering but whatever) Cause you know, slaves where often chained on chains. Maybe also the word tools. Slaves often used tools. So the word tool might remind you of a slave ... We should avoid that word too. We should get right of all tools!
what is the correct gig economy lingo?
TypeError: unsupported operand type(s) for -: 'witch' and 'doctor'
That's like saying a textbook doesn't care about your feelings. No, it's a book, but the people that wrote are still responsible for using equitable language.
puppet/puppeteer?
Lol wow. "All of the people who disagree with me are bad programmers."
I did not say that this change was more heinous than slavery. I said: &gt; But this change represents something much more heinous and insidious. I can see how that can be misconstrued, so I've edited that line on my post. The point that I am trying to articulate is that this IS a submission to fear, (But certainly NOT more heinous than slavery) and I believe it undermines our ability to transcend real problems by allowing their inlfuence to extend beyond where they actually exist. Sort of like living in fear of a ghost or repressing a memory. It's not healthy.
Getting THIS defensive about this issue says more about you than it does the issue.
Even in that screenshot, it’s clear the discussion has devolved into a Reddit-style thread. Only thing it’s missing is a series of increasingly unfunny puns. 
My angle is different. It's not so much about the culture itself. I hope this doesn't get buried too badly. We are all different people and we parse information differently. As human beings, we have emotions and those emotions are actually weaknesses when it comes to parsing that information. Things that make us feel emotions are likely to elicit a response, this is especially true about things that make us angry. This isn't a problem with people who have sufficient self control. But for others it causes their brains to short circuit. It causes them to act/react before properly evaluating the information they're receiving. The opportunity to put things into perspective and/or look at things objectively becomes lost for those people. Political correctness is a tool we can use to avoid striking those weak points in our brain. It isn't a panacea and I don't advocate for it in that way. But it helps us communicate. **So what's the point of PC if it's not feelings?** Well, what's the point of even having an argument in the first place? The endgame is finding mutual understanding. That should always be the ultimate goal. Other outcomes are often destructive and end in disharmony. In practice, we often simply desire to convince the other party that we're right and they're wrong, but that's not often the case. But mutual understanding is something that can eventually lead to that outcome. In my opinion mutual understanding is a requirement for showing others a different perspective. Again, I'm not saying that political correctness is a required tool here. But not being politically correct, especially being insensitive, increases your chance of unwittingly striking a person's emotional weak points. When that happens you've simply created a barrier to achieving mutual understanding and finding a positive resolution to whatever conflict you're engaged with. It's not unlike ad hominem attacks. Such things distract us from what's important. It's so easy for people to create lots of barriers this way and all those things just cause meaningful communication to break down. It's not a panacea but if you think about it, it really does matter. People here should understand that when it comes to scale, these small variables in how we behave can make a significant difference.
That entirely depends on what you're trying to describe... We already use f.ex. "parent process" but in the context of synchronization master/slave describes things better than parent/child. Orphan is used for anything that belongs in a tree but doesn't have a parent and so forth, as all your terms there are related to trees. Besides, some could get offended by "orphan", so just out of curiosity where would you draw the line?
lol I'm rewriting my Python SPI stuff to C/C++ just to be safe... I'd like to keep the code I depend on sjw free, just to avoid it ending up eating itself. History has a tendency to repeat itself...
Okay so is Python getting cucked, can I start looking for some other language again?
I am not all surprised to see people in this sub behaving this way. These are the true colors of the programming industry.
I like how you were so quick to shit on someone on the internet you didn't even realize you weren't still talking to the same person.
"This defensive" Sorry that I feel passionate about not wanting our language to be dictated by what offends people. Yes this is whataboutism-- but it is actively occuring. This master/slave crap isn't the only thing, and it isn't the last. &gt; and if they DID happen, still wouldn't be a big deal. Enjoy your doublespeak.
This isn't what you said though. You specifically said that there is NO OTHER REASON to use this wording other then upsetting people. Which is absolutely false.
I am deeply offended by your username. Please rename yourself to BuyChristianFollowers.
RT wrote an article about this. I'm not going to link it because nobody should ever link to an RT article. If you don't know what RT is, it's an English-language Russian propaganda instrument. Broadly speaking, it serves the same function as Russian trolls---the immediate aim is to get Westerners mad at each other over stupid petty shit. Therefore, since the Russians clearly want people to fight over this, I propose that we all collectively sigh and say, "okay, I respect your point of view" and then not worry about the nomenclature used in a handful of lines of code.
Is he from southern Finland?
That was the one valid point I've seen brought up in the this discussion: alpha/omega would be a better fit in this context really, though it might have some confusion with the alpha/beta/prerelease terminology. That said I don't feel this is an issue in need of correcting. It's anthromorphizing code, which is silly. Master/Slave very accurately describes the relationship and concept, though is not perfect in describing succession rules (rights?), but that brings us back to the anthromorphizing code and a discussion of "do functions/programs have rights?" I mean, with that in mind: won't someone think of all the children than are trafficked and killed all the time in software?! /s
Adults don't give a shit. There is no reason to push this idiocy unless one is ignorant or been successfully indoctrinated. These idiocy changes have costs associated. All adults want to move on and get shit done. Those who have been programed care. They care because of pro-Marxist propaganda and indoctrination. 
PC Master Race!
People insulted and harassed language maintainers and opensource developers as a means to get them to change the language they use since a long time now. You can find it in almost any notable open source project. I am upset with the Python maintainers here because every time one of those projects just submits to the demands of those bullies they are empowering the harassers. They are saying here: "Go and harass more people! It Works! It will get your demands fulfilled." I do not support harassment and I do not support people that support harassers. It is that simple.
Yeah but you need that account column
I don't quite follow what you are trying to do (I don't know what you mean by transforming a parabola... do you mean translating i.e. moving on the x axis?), but it looks like [sympy](https://docs.sympy.org/latest/tutorial/intro.html#a-more-interesting-example) would really help you.
You literally *said* intent.
Saddest thing is that my kids will need to live in this world.
Another day, another Doug
master/slave really means one thing in technology, that one component, hardware or software, is controlling another component. I fail to see how this offensive to anyone who works in technology. So it seems this change is geared towards those who aren't in technology, but if they aren't in technology, then why are they using a programming language? this all seems very confusing
&gt; invoking slavery in code [...] for no other reason than to intentionally upset people That statement is a lie. Why are you lying to us? 
&gt; invoking slavery in code [...] for no other reason than to intentionally upset people . &gt; intention has nothing to do with it and I never implied intent You have made two lies in a row. Why have you chosen to be a filthy liar? 
Or you could just learn to use a different set of words and update
Damn, is this Ben Shapiro?
Technically that would actually not be a bad substitution.
forgot to mention: windows users will need to download and install python or this wont work (windows doesnt come with python installed)
Again if you read slightly slower you will realize that it is not even an insult which is again the point of my previous message. 
Another solution: Step 1: ((25 \* 4) - 3) % 100 Step 2: (100 - 3) % 100 Step 3: 97 % 100 Gives you 97. :)
Wait until they turn into zombies. 
&gt; There is no master slave relationship with master slave HDDs. One is for booting the other is storage (please don't dissect this. I know it is more nuanced but off-topic). If this were the main distinction between them then we could simply call them "boot" and "storage." But it's not. Using one for booting and the other for storage is a convention that grew out of the technical limitations. On most (all?) BIOSes you can only boot to a master HDD and not to a slave. This is only one of the aspects that needs to be encompassed by the terminology. Additionally, a slave HDD cannot operate without a master HDD controlling it. If the master HDD fails the slave HDD cannot communicate with the system. The master HDD "controls" the slave HDD and coordinates its flow of data and interface with the system. There most certainly is a master/slave relationship with master/slave HDDs. 
Feels like this enormous hysterical backlash is a much better example of "people looking for something for something to be offended about" than the original proposal to change the master/slave language ever was
&gt; f I were to guess it's because the lower barrier of entry. web has traditionally been pushed as "it's easy, fob it off on that purple haired nut who keeps asking if she can program" now we reap the rewards of crazies picking up programming and the barrier to entry being reduced. honestly though most of the people commenting on these issues are ghosts - people with some personal "learning" projects and almost zero contributions in anything meaningful one crazy starts the chain and then shares it on their twitter as "i'm proud of a thing i did today" and the dogpiling begins i strictly close all such pull requests as nonsense. if you think your language policing is so important, fucking make something worthwhile yourself and police that instead
no joke that's considered "problematic" nowadays by the crazy feels crowd
this definition is actually perfect, emma watson is such a shengmu holy fuck
&gt; We all know slavery == bad, that's obvious. Thats not obvious when it comes to computers and machines.
That proposal is the most retarded thing ever.
Because the first call will block until you close that figure.
first world problem
Well that explains the Santa of my childhood. 
You have been added as an approved submitter to r/botsrights.
Shoot me a PM and we can discuss further :)
But what if GIMP goes to a multi-process architecture?
Can we replace it with cracker/negro instead?
Your tone sucks.
We should for diversity reasons. Using the term "odd" is actually exploitative and offensive to people who are judged to be "odd" by those who are "normal." We should change the word "odd" to "not-quite-even" in our language. This way we wont be unintentionally triggering innocent users of python. /s
I mean, *it is* phallocentric. 
Also everything is objectified.
Of course I could, but then it would be because the new set of words was more descriptive and better used in the context than the current words, and not to protect the feelings of the eggshell-minded. Contrary to the supporters of this change, my opinion on this has got absolutely nothing to do with me (or you for that matter) for one reason: We are talking about a programming language here! The end goal isn't to please people, it is to make a tool for making programs, and to make it as good at that as possible. To me you lot could just as well be chittering about how all rear view windows on cars should be pointed downwards rather than back because people could be afraid of their reflections, but without any regard for the actual function of the mirrors and the problems it causes. Keep doing this, and you'll keep breaking legacy code, and with that you'll keep breaking python users.
Liberalism is cancer.
Are you a white male? 
Instead of talking down to people on one side, talk down to people on *both* sides by suggesting that anyone who takes a side is incapable of understanding nuance. So balanced!
Good. This was a stupid discussion when django pulled their version of the master/slave change, anyone that cries censorship because python won't give them a platform on their PRs to wax lyrical about the merits of either position and/or personally insult people that disagree is not somebody worth having involved in the discussion.
Python never had the objective to be lightning fast. If you need the best performance possible you’ll have to go C/C++ or maybe go/Rust might be good enough. Numpy is much faster because more stuff happens on the C side without Python interpretations and casts in between. You probably know tons of millions users web services and apps are run by Python (Netflix, Google, Instagram, ...), AI and deep/machine learning, ... If you can afford the infrastructure cost, the productivity matters most. These benchmarks are far from real problems and software!
Those people need to learn to be adults or fuck off to some remote island.
MY FUCKING SIDES! print("Skipping blacklisted file %s." % fn) print("Skipping embargoed file %s." % fn)
&gt; i strictly close all such requests as nonsense. I wish everyone would do this. By humoring these people and merging those kinds of patches you're accepting their description of the world. By doing so you open yourself and others up for more thought policing and abuse, under the threat of being called out as intolerant. They don't get to decide whats tolerant or not, especially not when they so often seem to speak for someone else. "People can get offended", rather than "I'm offended", although the mere fact that somebody feels offended does not automatically imply that somebody else did something wrong. It's a case of a slippery slope, give them an inch, and so on.
Racist/sexist much? Not sure how either relates to the programming language python...
The hardware industry pretty much did this 15-20 years ago, but whatever.
There is no slave branch.
I did, and when I try to connect from a diff pc the request did not reach 
Maybe those people who, as you put it, are so emotional that their brains short circuit, could better spend their time doing something else like writing poetry. Perhaps the push-back to this sort of initiative is because the less emotional and more rational people who often enjoy writing software and machine code do not like having to interact with this very emotional people. They actually enjoy other sort of discussions like tabs vs spaces, Dvorak vs Colemak, but have found that the emotional people have a tendency to discuss other subjects, which while very respectable, are of no interest to them. Maybe they are not ideologically opposed to the emotional people, but they feel they need to be very careful of what they say around them and conversations start feeling like walking a minefield. Perhaps these more rational and less emotional people were not the most social people to begin with, and the direction things are going is just making them grow somewhat resentful and more confrontational.
Having the terms "slave" and "master" doesn't "normalize" them. There aren't "normal" words and "unmoral" words. They are all just words. No one working on the Python project is going "yeah lets continue to use salve, because slavery is cool!" Slavery is fact, it has happened, it is happening, it isn't nice or pretty, but using the terms "master" and "slave" in a programing context in no way shape or form under even the wildest of imagination condones the act of slavery.
Have an upvote as punishment.
I haven't used pandas datareader for some time (like 6 months) but even that time it wasn't able to fetch data from yahoo and google connection was also very problematic too. As far as I remember they were making changes to their systems and the required changes were not implemented to pandas at that time. Look it on the web, the community might have found something. By the way, your tutorial requires small amount of data so if you really want to work on it go google or yahoo then download the data as csv file separately and read it from your system.
Everyone in his right mind yes. If your code does not depend on other code that‘s Python2 and you still choose Python2, that‘s a dumb idea. 
I would argue the primary purpose of a programming language is communication. Good communication requires empathy. Empathy requires considering how others perceive what you say. If someone is misinterpreting certain words, it's at least worth considering this. I'm fairly neutral on this debate but I don't understand all the negative reactions to this. Why assume the worse in others? Some people don't like the terms - I think that's a fair and relevant stance to take. Aren't you willfully misinterpreting / worse-case interpreting their motivations when you say the entire purpose is to display piousness?
norweeg the pious, let us pray
Bitch that phrase don't make no sense why can't fruit be compared?
I think the word **python** may insult feminist groups of developers.
Look at beautifulsoup module for scraping the site, rest is easy beginner python.
If just reading the words "master" and "slave" make you uncomfortable, you've got some issues you need to resolve. 
I'm afraid I don't know what you are getting at.
&gt; You want safety, hugs, and cuddles. IEDs leave bloody puddles. -Killer Mike
Start one step at a time. First, learn how to scrape a website, then how to write that data to a file, then how to manipulate the data. BeautifulSoup for webscraping, rest is standard Python coding. 
&gt; being offended on other peoples' behalf The rest of us just call it "empathy".
I use 'primary' and 'replicant'; it's more descriptive. 
It's communication with the machine, not humans...
You obviously do not know much about programming if master/slave is not descriptive enough.
So what the fuck is the issue? We're calling inanimate code names. 
Mentioned in the thread is a request to change "pliant children" to "helpers". One of those is a lot less descriptive than the other. https://github.com/python/cpython/commit/fa7dfae3171914f91d629a64c6e829788b485b06
Empathy =/ sympathy. 
when AI takes over, he'll be the master
It's one thing to be empathetic to real concerns that have been expressed by people affected by them. It's quite another to make changes about a problem that might not actually exist. Premature optimization.
Why can't god fuck with aliens?!
Yes, we must eliminate the rabble, comrade. It's the only way to Utopia. 
&gt; Anarcho-syndicalist commune. &gt; &gt; Each unit takes a turn to act as a sort of executive process for the thread, but all the decisions of that process have to be ratified at a special bi-thread meeting by a simple majority in the case of purely internal affairs but by a two thirds majority in the case of anything with side effects. The most truly pythonic response
Are you calling Guido a Fascist? Well, I guess he *did* believe in benevolent *dictatorships*...
&gt; I lived for 4 months in northern Finland. That's pretty neat. What did you do there?
I will try it
Would you change the emergency services number to something different from 911?
I particularly liked the [top comment](http://antirez.com/news/122#comment-4084872912).
Not-so-fun fact, slavery is still legal in the US as long as the people have been convicted of a crime.
Good thing that's literally not what's happening.
Not sure I agree with the definitions regarding literals, transients, and variables. Take this expression: x = [Foo()] The `Foo` instance doesn't seem to match any of your definitions, since it is not named, but does live beyond the expression where it is created. Or did I miss something here?
You can format code by putting four spaces in front of each line: import os import random def main(): for x in range(&lt;however many players&gt;): random.randint(1,100) main() I'm not sure I actually understood your question. However, it looks like you might be better served by /r/learnpython ?
They first go for language then your way of life.
masterbating _would_ accurately describe the crusade
Not if you use block=False.
"msg324775 - (view) Author: STINNER Victor (vstinner) * (Python committer) Date: 2018-09-07 17:22 &gt; Have there been any actual complaints? Yes, but sadly they are private." lol, come on...
For Python, parent process and child process.
Ah, okay, fair enough. It could be nicer, but good point.
Pretty much. My company used Python 2 until this year when they caved and switched to 3. I think the impending end of Python 2 support has led to a sense of urgency that's convinced people to switch over.
With that logic it makes sense to just erase words from the English language. Just so no one can get offended by it.
SJW nonsense.
Python noob here: Creating a GUI that will allow me to select a file to be imported into Blender and manipulated. I have the Blender script all good to go. Currently stumbling through Google to find a way to open Blender and run the script, then close Blender all on the click of a "GO" button on the GUI. Any guidance is greatly appreciated!
Gonna use that term for fun now.
How is "pliant children" descriptive? What does it describe? Even if I change it to "compliant children", I don't know what it means.
aka, virtue signalling. "LOOK AT HOW RIGHTEOUS I AM!"
Lmao "this is insignificant so dont change it, AHHHH YOU CHANGED IT, ITS SO SIGNIFICANT"
Okay. Show me some other examples this has happened too
This is the sauce. I'm glad Larry Hastings is the current release manager.
Your seem to feel offended lmao
you could try just pre-populating all the random ratings using a normal distribution and then sorting them and just popping them off the list in order. random.gauss() should do the trick. import random ratings = [round(random.gauss(60, 8)) for i in range(280)] ratings.sort(reverse=True) print(ratings) Which gave me this list: [83, 81, 81, 76, 75, 74, 74, 74, 74, 73, 73, 73, 73, 73, 73, 73, 73, 73, 72, 72, 72, 72, 72, 71, 71, 71, 71, 71, 71, 71, 71, 70, 70, 70, 70, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 67, 67, 67, 67, 67, 67, 67, 67, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 65, 65, 65, 65, 65, 65, 65, 65, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 54, 54, 54, 54, 54, 54, 54, 54, 54, 53, 53, 53, 53, 53, 52, 52, 52, 52, 52, 51, 51, 51, 51, 51, 51, 51, 50, 50, 50, 50, 50, 50, 50, 49, 49, 49, 49, 49, 49, 49, 48, 48, 48, 48, 47, 47, 47, 47, 45, 45, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 39, 37, 35] You can play around with the parameters to fine tune the results. &gt; random.gauss(mu, sigma) &gt; &gt;Gaussian distribution. mu is the mean, and sigma is the standard deviation. This is slightly faster than the normalvariate() function defined below. [Python Docs](https://docs.python.org/3.7/library/random.html)
This bullshit is wildly unnecessary. In English, like most languages, homonyms exist. It's ludicrous to suggest that every time one word of a homonym set becomes "sensitive", that we have to strike all instances of the whole set from the language. It becomes even more insane when you consider the case of euphemisms. It's pointless, useless controversy that will ultimately lead to more ambiguity where less is needed. Master/slave is a stronger condition than parent/child, metaphorically. Guido needed to stay retired, and Stinner needed to be shouted down. How many private complaints have they gotten about 'python' being a euphemism for penis? 
Prisoners with jobs.
&gt; I asked not to dissect it but OK. And yet I was able to act independently and against your instructions because I'm not your *secondary*... err... not your *local*... no... not your *agent*... nope... not your *storage*? Hmm... What's the precise, descriptive, unambiguous word I'm looking for here?
Anti-social justice whiners ruin everything.
just because someone doesn't like identity politics doesn't make them alt-right. And as far as social justice is concerned, this is frankly a laughable problem compared to, say, the treatment of prisoners where *actual* slavery goes on in the modern day. I'm all for addressing the concerns of systemic racism and sexism, but labeling someone as alt-right because they don't want to have to constantly be on guard about saying the wrong thing? Give me a *fucking* break.
Seriously this issue should be raised and argued for. Python developers now so deserve this...
Pretty sure you can watch Game of Thrones without having a meltdown about this, and that has \*actual\* depictions of the concept, rather than, you know, words.
Good bot
This is the last one I'm doing, I think, because I really do need to do actual work ;-) For Plus Minus: def plusMinus(arr): pos, zer, neg = 0, 0, 0 for num in arr: pos += int(num &gt; 0) zer += int(num == 0) neg += int(num &lt; 0) scores = [pos, zer, neg] total = sum(scores) for score in scores: print(f"{score / total:.6f}") Really, your python3 code was already pretty reasonable here. I added some variable names and switched to f-strings (python3.6+ only) because I love f-strings :-) A slightly alternate way to do it (being clever with list indexing) would be: def plusMinus(arr): sarr = sorted(arr) neg = sarr.index(0) # first zero is also neg count! zer = sarr.count(0) pos = len(sarr) - (neg + zer) scores = [pos, zer, neg] total = sum(scores) for score in scores: print(f"{score / total:.6f}") Note that if arr is *really* big, it might be worth using the bisect standard library module for speed. It would change neg and zer: neg = bisect.bisect_left(sarr, 0) zer = bisect.bisect_right(sarr, 0) - neg
What on earth gave you that idea
Just messing around with your idea; if you wanted to insert some uncertainty into the draft order you could create a fuzz function that randomly generates a offset value for sorting the order of the picks. That the next value is generally lower than the previous value but not always. This seems like it would be more accurate for a NFL draft. import random def fuzz(val): fuzz_factor = 0.05 fuzz_val = (random.uniform(1 - fuzz_factor, 1 + fuzz_factor)) return val * fuzz_val ratings = [round(random.gauss(58, 9)) for i in range(560)] ratings.sort(reverse=True, key=lambda x: fuzz(x)) print(ratings[:round(len(ratings)/2)]) and the results: [84, 80, 83, 80, 79, 78, 78, 83, 78, 76, 76, 75, 76, 76, 79, 73, 76, 77, 72, 76, 77, 72, 75, 75, 71, 71, 75, 75, 71, 72, 70, 75, 71, 75, 70, 70, 71, 70, 71, 69, 69, 72, 72, 73, 72, 69, 75, 71, 71, 72, 71, 70, 72, 71, 73, 73, 67, 69, 71, 70, 70, 68, 72, 70, 72, 67, 70, 73, 73, 70, 66, 71, 66, 66, 71, 68, 66, 67, 67, 68, 68, 66, 72, 67, 66, 67, 67, 66, 71, 65, 70, 66, 69, 68, 71, 68, 66, 68, 69, 66, 70, 67, 64, 64, 65, 65, 70, 67, 67, 67, 65, 64, 68, 65, 68, 67, 69, 65, 69, 66, 64, 67, 63, 69, 64, 64, 66, 68, 63, 62, 65, 63, 67, 65, 68, 62, 63, 62, 64, 65, 63, 62, 63, 63, 65, 61, 65, 63, 61, 64, 63, 62, 65, 63, 61, 65, 65, 63, 66, 66, 64, 64, 60, 60, 62, 65, 60, 64, 64, 61, 61, 64, 61, 60, 61, 64, 62, 60, 63, 61, 65, 59, 64, 61, 59, 62, 59, 60, 60, 63, 59, 59, 59, 59, 62, 59, 62, 63, 64, 59, 61, 60, 63, 61, 60, 64, 58, 58, 59, 60, 59, 62, 58, 58, 60, 63, 63, 62, 60, 58, 62, 60, 61, 62, 59, 63, 58, 59, 61, 61, 59, 60, 58, 57, 62, 61, 61, 60, 62, 62, 58, 57, 58, 62, 58, 57, 60, 61, 60, 58, 59, 60, 59, 58, 59, 59, 57, 60, 56, 59, 61, 57, 56, 57, 61, 58, 57, 58, 60, 60, 57, 61, 60, 61, 56, 58, 57, 60, 58, 59]
Master is cool and can stay if they want to keep it. I'm okay with slave going though. Parent/Child still works manager/worker also works. I don't get the point of crying about it. Its removal hurts nobody.
Anybody get the feeling that this thread got brigaded by alt-right trolls? This is not the community I know.
It is not good technical communication to break with universal technical terminology based on a wilful misinterpretation of contextual language. It is a engineering problem in the making if terminology is de-unified and made more ambiguous between fields based on unrelated fickle sentiments and the euphemism treadmill which will always be changing. Changes aren't as cute as replacing words in one manual or language. Hundreds of years of systems, documentation, and technical instruction, and training material, as well as concepts documented within multi-layer systems which are currently relied upon use this common terminology, to say nothing of the relationship descriptions stored in engineers' heads. If you change a technical term for non-technical reasons then you incur the cost of updating all of that material so it can be as easily debugged or understood when it inevitably will be re-used or built upon. You also incur a new risk due to engineers misinterpreting the purpose of equivalent concepts that have arbitrarily different descriptions in different places. There is immense value for maintenence, maintenence of documentation across multiple system components (most of which you do not control), archiving past work to refer to later, maintaining hard to misinterpert and intuitively-described systems consistently over decades long timeframes, and consistency with similar concepts across all engineering domains. These practical engineering aspects which translate into cost, risk, performance, and maintainability are protected by adhering to a core principle of engineering; do not make a change unless you have a good technical reason for doing so. This is why it irritates so many people who live in a world of precise language, well understood assumptions, and efficiency.
Many years ago I worked for who was a major Unix hardware/software vendor (think stellar body) as a Level 2 System &amp; Network phone support engineer. After being in my position a few months I got a call from a woman who was extremely offended by our Unix operation system (v 4.1.3 was the most recent) commands and terminology. She was extremely offended by "killing" processes, "forking" children, and the like. I was extremely dumbfounded and wasn't sure what I could do to assist her, I explained to her that these commands and concepts had been around for over 20 years and were simply part of the operating system. She was quite irate and all I could do was take down her complaints (and wonder how this call even made it to me to begin with) and told her I would pass this on to management. She was angry I couldn't do something *right now.* I passed this on to my supervisor who chuckled and said we got one of these crackpot calls at least once a quarter. I hope she eventually found [Jesux](http://pudge.net/jesux/).
So you decline a request out of feeling like a slave eh? That escalated quickly. 
No. `x` is a list. No name points to `Foo` here.
But, but they dont \_really\_ mean it! Software devs on the other hand...
it was 'pliant slave' before first being changed to children.
I don't understand why we get false dichotomies while discussing this issue. Nobody is in favor of banning words. Just choose another analogy if you really have to. Why do you invoke slaves just to mean things are integrated/following each other/synchronized/copied ? Do you really need to have slavery to explain these concepts? And I am not even on the pro-change side. Just following their argument. 
Privileged 
I couldn't understand the question here.
"Hey, you're the IT lady, right? Is there a free alternative to Photoshop?" "Yeah, but I can't tell you about it at work."
They're not invested in their demential argument, it's only there because "so did hitler" wouldn't fit. They won't make an attempt to understand your point because they never cared to put effort into their response in the first place.
The Foo object is an element of the container object (list) assigned to x. It is a child object of x. It can only be accessed through x Are you suggesting that I should add a fourth category to cover container elements? btw - Thanks for reading the article! &amp;#x200B;
oh calm the fuck down it's a change in code terminology not the rise of hitler
take my imaginary upvote for your imaginary generocity 
come on guys slaves don't exist *anywhere* in the world, not in sweatshops or cartel plantations or even in under developed third world countries rules by despots so why in the heck would we as civilized people put the word into our fancy politically correct python code!??!
yes what could ever be bad about references to a master race, who could ever find such a thing to be in bad taste
I'm saying that it's absurd to suggest that only one side is driven purely by emotional considerations. Both sides are. I already presented some facts about the cultural background of America. You may disagree with the relevance of those facts, but still: that's a factual disagreement.
Um, slavery is very much still a thing. [link](https://en.m.wikipedia.org/wiki/Slavery_in_the_21st_century) Don't take this as me supporting thought-policing or forced political correctness.
Non-Mobile link: https://en.wikipedia.org/wiki/Slavery_in_the_21st_century *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^211725
I still don't understand why yall care so much. No one here is being forced to follow that convention and no one here complaining is a maintainer. This is hysteria that's not really relevant to programming but more conspiracies surrounding Marxist cabals infiltrating organizations and using that power to do not very Marxist things. I personally don't really care either way granted they create a working replacement. It's not linguistic policing it's just being respectful. There are people uncomfortable with the terminology for obvious reasons and while I don't care about said terminology however it is, _changing the names does not harmfully impact me or anyone_. This thread is acting like this a serious, broader issue, but I can hardly even feel like this is an issue. If it's considerate to change the jargon I see nothing wrong with mutating it. I'm real fucking glad we did something about Brazil nuts, for example. Now if you were talking about class that'd be an entirely different thing, but object oriented programming is capitalist decadence anyways so it's not worth rebranding. 
They want to make you not know what a slave is?
* the python incident * redis * GCP click to deploy * [swift](https://github.com/apple/swift/commit/8bda440bb919b6b59ce24de8f077dc31211e3f5a) * [django](https://github.com/django/django/pull/2692) * [this anecdote](https://www.reddit.com/r/Python/comments/9fgo5r/python_developers_locking_conversations_and/e5wzx6p/) by /u/pure_x01 * while I can't find the link now, I saw a repo yesterday that replaced black and white listed to block/allow list These are the ones in this industry alone. And there are many, many more. And there are others in politics and news, such as the hesitation to call terrorists "terrorists" (and I mean when they actually are terrorists and not some alt-right "all muslims are evil" crap), as well as in other industries.
the holocaust was 73 years ago...get over it
Ill concede everything you've said but can you honestly say that using the "master - slave" terminology is _idiotic_? Are you saying that the terminology _could be better_ or do you think that the analogy is truly idiotic? I just can't fathom a point of view where "master - slave" is _that_ repulsive and stupid.
[https://docs.python-guide.org/scenarios/scrape/](https://docs.python-guide.org/scenarios/scrape/) &amp;#x200B; You'll probably use requests to contact the site and something else for xpath/css selectors to get data from the HTML.
Cuz it raises TypeError??
It’s Marietta too...
Imagine we have come this far with "wifebeater"s. I am really perplexed with SJWs that they already didn't pick this one up :) Would you really think that was a good way of describing a random piece of clothing or there was a heavy prejudice involved? Or imagine a discipline that chose to use "pimp/ho" analogy for memory addressing. Would you not think it was a stupid analogy regardless of its acceptance? It's funny for the first 50 times then it gets really dry very quickly. To be honest, I tend to lean on the idioticity side. Because that is just poor taste. Again I repeat, I don't want to ban the words. I'm just following the argumentation given by the pro-change people and very interested in this heat I've received so far. Quite an experience :)
r/learnpython
But the entire industry and decades of coffee and papers user the original terminology. And this doesn't actually fix a real problem, so high cost with no payoff.
Usually the tech does all the work in the lab.
I can't speak on behalf of them but as far as I understand they want me to use it sparingly.
&gt; and I imagine if some people come across the master/slave terminology they’ll be a little taken aback. Such a person wont make it past 30 because of all the panic attacks they will endure when they actually step outside.
Matplotlib is hard for a couple of reasons. One is being fixed (slowly but surely), and one is just not solvable in general -- but there are other options. What are the reasons? 1. Matplotlib was originally built for matlab users because that was the dominant market at the time. If you ever used matlab for plotting (or still do) then a lot of matplotlib is straightforward and obvious and simple to use. The downside is that matlab is actually pretty bad as a plotting API, and certainly not pythonic. Matplotlib has a more pythonic interface, but that means there are at least two ways to do *everything* and to be matlab API compatible forced a lot of (not always optimal) API choices. 2. Matplotlib is awesome. No, seriously, the awesome power of matplotlib is part of the problem. Matplotlib does *everything*. Do you you want statistical plotting? Sure, matplotlib can do it. Are you a business user who wants bar charts and pie charts (shudder)? Sure, matplotlib can do it. Are you in finance and need all kinds of crazy timeseries oriented plotting? Sure, matplotlib can dot t. Are you in oceanography or meterology and need the ability to work complex 3-dimensional arrays/tensors and plot them in all kinds of ways (vector, streamline, heatmap, all of the above)? Sure, matplotlib an do it. Are you in image processing and need all kinds of fancy image rendering pipelines? Sure, matplotlib can do it. Are you working in astronomy and have a yet another workflow again, ideally with polar coordinates, plus maybe some other crazy coordinate transforms? Sure, matplotlib can do it. Are you in process or systems engineering and need Sankey diagrams? Sure, matplotlib can do it. Now, unsurprisingly a library that can somehow all of that incredibly diverse stuff is incredibly complicated. That makes matplotlib *hard* to learn, because there is, quite simply, so damn much of it. The good news is that problem one is steadily getting better. As more an more people are coming from a pure python background the matlab compatibility is less and less important. Consequently the library is being refactored to deal with that and fix things. The reality, however, is that it is a huge library that many people depend on, so change is slow. Worse there are actually very few core maintainers -- only a few at most. As a rule people vastly overestimate the number of developers working on big projects like matplotlib at anything resembling full time. In reality a lot of matplotlib these days rests on Thomas Caswell, Michael Droettboom, and a handful of others (whose names I am ashamed to admit don't know -- they deserve my thanks, and I should know who they are) who do the herculean job of maintaining all of this, and trying to move it forward, in what little time they have to spare. You seriously owe them your thanks -- they are awesome and are trying hard to improve the library. The other good news is that while problem two is unsolvable (all those different groups now depend on matplotlib, so they have to somehow continue to support *all of them*) for matplotlib, the solution lies in packages built on top of it. Think of it this way: do you know how to use ARPACK or BLAS? Probably not -- and yet numpy (and pandas on top of that), exposes the functionality you need. Matplotlib is an incredibly powerful library for building graphics. If you want a friendly user interface you need a library that specialises in a type of plotting and than makes use of the incredible power of matplotlib to do the work. If you want statistical plotting use Seaborn (kudos to Michael Waskom for building and maintaining an awesome project). If you want image processing oriented plotting use scikit-image (thanks to Stefan Van der Walt and many others). Do you need machine learning oriented plotting? Grab yellowbrick (thanks to all the people at District datalabs). Want to do exploratory analysis plotting? Try holoviews (thanks to the team at Anaconda who work on this; it's *awesome*). All of these make use of matplotlib as a plotting engine, but they provide a simple higher level interface to the plotting relevant to their needs. As time goes on I expect more libraries that specialise in a class of plotting to be built. So yes, matplotlib has some issues, but let's look on the bright side: it is an *incredibly powerful* plotting library that is steadily improving, and it provides the fundamental graphics slinging power that enables a lot of other tools to provide simpler easy to use plotting interfaces.
Holy gods! I believe there was some smoke visible there! But seriously, you bring your agenda into peoples wardrobes, living rooms, bedrooms, vocabularies and now code editors, and then the backlash surprises you? Imo social justice is cancer, and it has the same effect. Every time some group gives in to social justice it ends in disaster. I guess when you can always pull a new "injustice" out of its context and rage a war over it, you are bound to eat yourself in the end. That's the good part. The bad part is the devastation left in its wake as a full recovery is rare.
Host implies an obligation.. can't have that. It must be a truly neutral word which makes it so you can't tell the difference between host/master/user.
Then why not change it, if it's not meant for the analogy?
Okay this makes perfect sense as far as getting the data I need from the actual webpage. What I need to do first though is get the data I need formatted correctly and then write a loop to insert that data into the ending of the URL and THEN do this. I am confused how to get to that point though. 
Okay I will submit there as well. Thank you!
I did not see this before when I replied but that's very cool actually!
That's the first time I've heard anyone associate master/slave terminology with race. Very established terms.
Actually, it has been done and not that uncommon. That's precisely what Python core developer, Raymond Hettinger did for a good part of his career. He described this in his [2013 keynote](https://youtu.be/NfngrdLv9ZQ?t=345) and a few other talks.
One more idea that would let you generate a rating depending on what the current pick is. It's sloppier than my previous solution but generates the rating during the turn instead of populating them up front. import random picks = 280 max_mu = 85 min_mu = 55 mu_range = max_mu - min_mu sigma = 2 # a, b control how quickly the average rating (mu) falls off. a = 1 b = 30 ratings = [] def get_rating(pick: int, ): x = ((picks - pick) * (mu_range / picks) / mu_range) x = ((x ** a) / ((x ** a) + ((b - b * x) ** a))) mu = mu_range * x + min_mu return round(random.gauss(mu, sigma)) for i in range(picks): ratings.append(get_rating(i)) print(ratings) -- [83, 84, 81, 77, 78, 79, 74, 72, 67, 70, 67, 69, 67, 70, 68, 63, 65, 66, 63, 67, 65, 63, 65, 65, 67, 61, 63, 62, 64, 61, 61, 60, 62, 62, 62, 61, 60, 60, 64, 62, 61, 59, 60, 62, 62, 57, 60, 61, 58, 62, 59, 59, 56, 59, 60, 60, 58, 55, 61, 54, 58, 58, 56, 56, 57, 57, 59, 55, 60, 58, 56, 56, 59, 56, 58, 60, 58, 56, 60, 54, 58, 56, 61, 58, 59, 57, 56, 59, 57, 56, 58, 56, 55, 59, 55, 57, 54, 56, 57, 56, 54, 56, 59, 55, 57, 54, 55, 56, 57, 59, 54, 55, 56, 53, 54, 53, 57, 55, 53, 55, 54, 54, 60, 54, 56, 56, 53, 58, 56, 58, 57, 57, 56, 54, 54, 58, 51, 59, 55, 55, 57, 55, 53, 55, 55, 56, 61, 56, 57, 56, 57, 56, 54, 55, 52, 57, 61, 57, 55, 54, 54, 56, 58, 57, 54, 53, 56, 59, 56, 59, 55, 57, 56, 54, 58, 54, 56, 55, 56, 53, 55, 54, 55, 55, 55, 56, 53, 59, 51, 55, 54, 57, 58, 57, 56, 54, 53, 55, 57, 56, 54, 56, 53, 55, 56, 55, 54, 58, 57, 58, 55, 56, 60, 57, 52, 54, 56, 53, 56, 54, 53, 54, 55, 56, 56, 54, 51, 53, 56, 58, 57, 55, 60, 58, 56, 55, 54, 54, 54, 59, 55, 52, 55, 53, 55, 53, 53, 52, 57, 56, 58, 55, 55, 52, 53, 58, 58, 52, 56, 54, 54, 52, 55, 57, 50, 55, 56, 53, 55, 55, 55, 53, 52, 58, 57, 54, 57, 54, 57, 52] 
Interesting, I'll check it out
Because it has nothing the fuck to do with human slavery. Words have multiple meanings and are context sensitive. The fact that they have trouble looking at the jargon and making an analog to human slavery is just an illustration that the two things are not related.
Not quite how that fallacy works but ok
Just keep them away from Salt please.
I guess I'm a psycho, but I legitimately wouldn't mind if all these people got obliterated by a really large bus.
LMFAO, we in the convoluted Venezuela find an better solution to "offensive" politically incorrect words or expressions: make them a sound honor instead a shame, here naming someone *NEGRO* (black) is a way to note kindness and familiarity, naming somebody CHINO (Chinese or Asian) means also friend Bridget even if you are not afro descendent in Venezuela you ENJOY being named NEGRO or CHINO if you are or not Asian . I'll name my process bitch and puppy so..
I think everything you say here is fair. I still think it's counter productive to assume the worse in those you disagree with. I fear the vitriol around this topic buries actual discussion.
I hope your family gets burnt alive.
Hopefully some day you'll realize how much of a jackass you are. You are the bad guy. People like you are working towards destroying society. I know you think you're doing good but you're not.
It's Python so you should have expected there to be a Spanish Inquisition
( ͡° ͜ʖ ͡°) 
Wow they've got a word for SJW!
found the bad coder!
So after all stupidity will kill python ?
??????
Yep! Reddit Masstagger will let you see some of them.
When I was in school we shared the campus with a technical institute for the deaf. The regular interpreter for one of the computer classes was out so they sent a substitute who hadn't covered computer classes before. During the class the deaf students began laughing in the middle of the lecture. The teacher was very confused as he didn't think he said anything funny. He found out after class that every time he said "UNIX" the interpreter signed "eunuchs".:-) :-)
Ah yes, attacking the character of those who may disagree with you, good argumentative method.
Thanks for answering my post question but also thanks the video link. I'm looking to work in Quant Finance, so that's definitely of interest.
This, but not posited as it being a bad thing
Yet, nobody does.
because it's being brigaded by CHUDs
68 is one away from 69 cant have that.
Why? Why? Are they new to master/slave terms that used in CS field? Why they have access to make a breaking changes like this in python org? Why they have access to censor the discussion? Is this political organized movement?
Ah, the ol' 13th amendment loophole strikes again.
But why? PyCharm is amazing except I never use it because it’s so heavy. I want an IDE as fast and light as QTCrearor for Python but I guess that’ll never happen
If you want to make a quick test, try my android app barValid, it offers a [send barcode to pc](https://play.google.com/store/apps/details?id=com.barValid.app) features, letting you scan barcodes with your smartphone, which will then be sent to you PC and emulated as keyboard input.
more people died in hurricane maria than in 9/11, hardly compared to the *holocaust*. &amp;#x200B; what's more, there's a far right resurgence in Europe and even the US. People chanting "blood and soil" and committing terror attacks in my country. Way worse around Europe, e.g. Greece where the Golden Dawn holds a lot of political power, among other fascist parties in various countries. &amp;#x200B; why just today the New York Times published an op ed advocating for "peaceful ethnic cleansing" [https://www.nytimes.com/2018/09/13/opinion/kosovo-serbia-land-swap.html](https://www.nytimes.com/2018/09/13/opinion/kosovo-serbia-land-swap.html) so I'd say the whole master race issue is far from settled.
Python 4??
Jesus Christ, this is fucking ridiculous 
Ringleader\Clown
They first go for the language then your wife
Political correctness should stay out of computing/technical terms, processes and languages, etc. Why are people getting bothered by it? It clearly doesn't mean what they think or want to think it means. Imagine if current gen motherboards still had the master/slave drives today. The imagined uproar that would bring.
Servant leader / Empowered employee
Python 3.4 is only 4 years old, and that was the first one that behaved sensibly. Even still a lot of people have dropped 3.4 support before 2.7 (e.g. `conda`).
God bless you, sir. 
https://github.com/getnikola/nikola
I've never seen the other side being interested in an argument. They make statements and everyone who disagrees is an enemy that must be silenced. Arguing with these people is like arguing with conspiracy theorists. Reason just slides off of them like water off a hydrophobic surface. [Here is a recent example.](https://quillette.com/2018/09/07/academic-activists-send-a-published-paper-down-the-memory-hole/)
Looks cool will try this tomorrow. 
I have a slave branch, y'know, just for shits and giggles.
Totally! it seems that they are well organized and monitor everything that might side with their cause to voice their unwanted opinions
doesn't seem like a big deal to me either way. I get how master/slave is kinda weird to people, I get how changing such a deep part of your programming language is a headache. seems like you could break a lot of good code, but hey maybe you get someone into coding that wouldn't be there otherwise and their contributions end up paying for the process tenfold. seems like most of the resistance is from the "what's next, are we gonna rename manhole to person hole, haha, and what's the deal with airplane peanuts" line of reasoning (see also: most of the comments here), but maybe there's something I'm missing.
Thanks m8
Isn't it insane how the world wants to become so politically correct because a few outspoken people disagree with the application or context of a terminology. And people follow like sheep.
Thanks for the info on datetime.
Please realize words have different meanings in different fields. And as far as someone being offended, so what? You can throw a dart at a newspaper and find someone that is offended by what you hit, that doesn't mean we should nerf the world or burn all the dictionaries. Quite the contrary...
Way to miss the point dumbass
as others have pointed out, NO. The PC brigaders need to be told to go away, rudely if needed. Destroying language is bad enough. Interfering with professional protocols is not.
I tried a couple of times in different branches of this thread. Care to investigate them first? Also if I can't already, why should I bother? Aren't you undermining your own argument?
Do you fuck with the war?
1. It's called the Mandelbrot set (after Benoit Mandelbrot), not Mendelbrot. 2. There's no need for a homegrown Complex class, Python has built in support for imaginary and complex numbers. &gt;&gt;&gt; a = complex(1, 2) &gt;&gt;&gt; a (1+2j) &gt;&gt;&gt; b = 1+3j &gt;&gt;&gt; b (1+3j) &gt;&gt;&gt; a**2 (-3+4j) See also: [cmath](https://docs.python.org/3.7/library/cmath.html). 3. Your calculation of the Mandelbrot algorithm is weird. while try_again == True and n_iters &lt; 200: try: arr.append(arr[-1].square().add(Complex(x, y))) except: try_again = False n_iters += 1 Why are you saving all previous calculations in an array? The definition of the Mandelbrot set is the complex numbers where the absolute value of zn remains bounded. I'm guessing the try: except: construct is used to catch the cases where the number diverges, but it's not clear from the code. Compare with this code (from [here](https://www.ibm.com/developerworks/community/blogs/jfp/entry/How_To_Compute_Mandelbrodt_Set_Quickly?lang=en)) which is easier to read and makes fewer memory allocations and probably is a lot faster: c = z for n in range(maxiter): if abs(z) &gt; 2: return n z = z*z + c return maxiter 4. This will be a lot quicker if you [use numpy](https://www.scipy-lectures.org/intro/numpy/auto_examples/plot_mandelbrot.html).
I don't see what big deal is. For example, my colleague N. C. Degeocello and I analyze open source software and identify problematic language. We then work with a small team and submit PRs with more appropriate nomenclature. Thanks to a grant from the Open Society Foundation, we are fortunate enough to be paid for open source software... something truly wonderful ;)
This won't stop. This is just the beginning. You want to avoid it? Purge these people before it is too late. &amp;#x200B; They are worth nothing to the language and will destroy whatever sort of common cause and community Python has.
BuyChristianChildren
So Supervisor/Subordinate perhaps ? overseer / adjuvant ? foreperson / subaltern ? boss / peon ? seriously - master/slave is just so .. *concise*.
Nope, nothing of the like. Flit just imports your module and checks `yourmodule.__version__`, in setup.py you can do the same.
You can't import your module from `setup.py` though, because it's generally not installed yet.
Brain gotta poop. 
I don't think people have as much of an issue with master when it isn't used with slave. Like a master carpenter and their apprentice. 
[The guy isn't even sure if he should use "childs" or "children", but he's trying to make changes based on the nuances of vocabulary?](https://github.com/python/cpython/pull/9101#discussion_r216001509)
It's a N=1 study, so it should be taken with a big grain of salt. If I had more time (which I don't at present, unfortunately), I'd collect a bunch more essays and try to work out weights for individual metrics. Some metrics are going to be more consistent within-author and possibly vary little from essay to tweet. Others might have large systematic differences. For example, I'd expect "average words per sentence" to be systematically lower in tweets than in essays for the same writer, since the tweet character limit used to be 140 until a year ago, so, at avg. 6 chars/word (including one space), that's a cap of 23 words/sentence. Most feeds in this set are in the high teens. One other big outstanding problem is that the code does not distinguish between original tweets and retweets. For example, the feed for "POTUS" is (almost) purely retweets, with no original content. The feed for "PressSec" is maybe 50% Sanders and 50% retweets.
I don't mind it but it is not ideal. Thankfully it's 1000x nicer than plotting in mathematica
1. Okay 2. Awww, but that would be no fun! ;) 3. I started out by saving it in an array mostly for debugging while I figured out how to determine if the series converged or not. I soon discovered that returning the color as simply `len(arr)` actually works well enough. One of the TODOs in the readme says I'm looking for a better way to determine the color/rate of divergence. 
&gt; Aren't you undermining your own argument? Yes I've read your other comments in the thread. How would you being wrong "undermine my argument"? Make sense man.
Time to ditch python. Not because of the change of terminology, which I never liked anyway (why would the slave become the master? Shouldn't it be master/student?) but because how shitty they handled all this. Clearly a group of developers that don't give a flying fuck about the people using their language. Also python is fucking slow, anyway. Might as well use Node.js or some other equally shitty but much faster language. 
Best question. When it comes to static site gen's it makes little difference what it's written in. You write in markdown, run a command, it produces a site. Perhaps templating but a lot of time that's abstracted to a DSL anyway.
Bahahahahaha. The little fucking pussy snowflakes getting triggered by the word "slave" now wanna talk about fragility. My poor sides. Sorry there's no HR rep here to jerk you off.
This happened because of "private complaints". Who can we send such private complaints to? I want to complain about all instances of "down", because it might trigger sufferers of Down Syndrome. We should replace "down" with "up2". We need to delete words to pretend that such concepts don't exist, for "diversity reasons".
If they're deleting comments we'll just have to flood them with equally trivial pull requests. 
&gt; re: `ax.set_title` not being a setter I *think* that's what almost everyone means by a setter, and what a lot of people don't like about matplotlib. But that's fine, let's follow your definition. &gt; re: `ax.set(...)` Yes, it's just a shorthand. Even if it wasn't there you could easily define it using `setattr` and looping over the arguments, I don't see the problem. (If you think `setattr` is unpythonic, you'll need to complain to GvR, not me.) As for discoverability of kwargs like fontsize: the docstring of `set_title` actually lists ``` Other Parameters ---------------- **kwargs : `~matplotlib.text.Text` properties Other keyword arguments are text properties, see :class:`~matplotlib.text.Text` for a list of valid text properties. ``` Why does it not list all of them here? Actually this is repeatedly being debated among the matplotlib devs, but the point is that there are *a lot* of Text properties (here I'm using property in the matplotlib parlance, where it just means something with a getter and a setter) and it's not clear that repeatedly listing all of them really helps. To give a similar example, do you really want to list all line properties in the docstring of each and every line-plotting function? (Moreover doing so properly involves doing string interpolation on the docstrings, which is not so nice.) &gt; re: `ax.title` not returning a string. Indeed, in this specific case, `ax.title` already exists, and returns the Text artist object that represents the title. Honestly I would find it pretty weird if you can write `ax.title = "foo"` but `ax.title` isn't equal to "foo" afterwards (yes, I know, everything can happen with properties; that doesn't mean everything *should* happen). The alternative would be to require people to build text objects before passing them in (`ax.title = Text("foo")`) but that makes the most common case (not wanting to customize anything) a bit too awkward in my opinion. Now I agree it would be nice if you could copy a whole Text artist from one axes to another. Unfortunately, matplotlib's data model is that only one figure and one axes can own an artist at a time (a lot of things become much easier when you can go back from the artist to the figure/axes), so that'd need to involve creating a new object and copying the properties, and the link between the two would be broken anyways.
they couldn't be focusing their energy on a less important problem
the SJWs have infiltrated the base
/r/learnpython is the best place for questions like this :)
Sandwich. They go for your *sandwich*, then your wife.
The reality is that if your ancestors were actual slaves you might be offended by this
This happened at work. We had slave servers performing tasks received from the master and customers were jamming up the support lines complaining about the terminology. We ended up changing it to parent and child to keep people happy.
If by celebrate you mean drinking Pedialyte, popping Ibuprofen and generally hoping I can make it to Jan 2nd. Then, yes. Yes we can.
Shit like this is why that cocksucker trump won the election. Same shit nearly happened in France, btw. Britain committed economic suicide. We didn’t start the fire but every vote for political correctness means ten silent votes for the hard right! Don’t do it!!! It’s not too late!!!! It can happen to your country, too! CivicsError from the USA
I recall a thread a while ago about how someone donated a bunch of money to GIMP and posts were like "this will help with adoption rates!" No, changing the name to something you can say in a workplace without getting weird looks would help adoption rates more than any amount of money.
https://www.youtube.com/watch?v=5gnpCqsXE8g This is a great presentation on psychological subversion. In this case it's about how the KGB used it during the cold war, but the general principles apply elsewhere.
Words aren't bad. They are words. Intent is an important part of justifying your interpretation of anything in language. Such as, the intent of removing the word "slave" is to make the world around me conform to my [delicate] sensibilities. And the intent of the word "slave" in this context is to accurately describe its behavior as to reduce confusion or ambiguity. There is no comparing those two perspectives.
Oh my, are people really offended by those terms in the context of *technology*? In my opinion this is a cheap attempt by Victor to gain some limelight/primetime without much effort. If you really want to bring diversity to the tech community, how about encouraging and inspiring people instead of pushing stupid PRs. 
Merge conflict = being naughty
I hope it could become more object-oriented, despite it may lose some versatility. Currently writing matplotlib remind me of the horrors of matching malloc and clean in C.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Please don't post beginner tutorials
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I use and really like https://getlektor.com
I can only point you to u/lmcinnes excellent writeup in this thread (https://www.reddit.com/r/Python/comments/9fb9i3/am_i_the_only_one_who_hates_matplotlib/e5x8lqn). (Personally I strongly value the versatility of matplotlib, but I guess I'm biased :))
Speaking of, since there are other repositories that he changed the license to (and as a deterrent against any future such idiots), I have made [PolitiFork](https://www.reddit.com/r/javascript/comments/9ffn9a/my_team_cant_use_reactloadable_anymore_because/e5wqrm2/).
I can only fucking hope it's satire.
GNU Raster Image Editor tells you what it does, includes GNU (because I guess that's mandatory) and rhymes with free (GRIE, pronounced like brie but with the hard g of go). &amp;#x200B; That's my suggestion anyway
Nah, PC is fine as far its original intentions were concerned, e.g - the notion that it was not acceptable to address or refer to pupils, fellow employees, etc in derogatory terms based on their race, sexual preference, etc was a good thing. The problem is you get people taking it to far based on something that isn't causing a genuine issue to anyone, let alone to vast groups of society, of which this is a fine example.
http://antirez.com/news/122#comment-4084872912 Probably not. And if there are, they need therapy.
I like this reply by **towerd** &amp;#x200B; &gt;In "Oxford Advanced Learners Dictionary", slave has an entry: (specialist) a device that is directly controlled by another one &gt; &gt;Words shall be interpreted in certain context. Otherwise, should every word be interpreted literally? If one is named Cook, is he really a cook? &gt; &gt;What's more, if slave can remind someone of bad things, shall every word with some bad meaning be avoided? Stones can be related to weapon, sea can drown people, shall these words be banned? The names of famous campus killers, shall they be avoided to be used as names of new born babies, because these names are used by killers'? &gt; &gt;I'm afraid this seems like the "literary inquisition" that happened numerous times in history. In those cases, word were interpreted in certain ways deliberately, totally ignoring their context, and the related persons were judged criminal just because they said those words. &amp;#x200B; This change just made me realize open source is a illusion, in the end Django and Python are still controlled by a group of people and even if the majority is against it, they will push the changes, even when its something really dumb. &amp;#x200B; also their merge was very ironic &amp;#x200B; &gt; vstinner merged commit [5e92265](https://github.com/python/cpython/commit/5e922658fb55734bf8b4c6246033ea93af172ff7) into python:master 
I think many more people are descended from slaves than you think. Slavery was afterall extremely common in the ancient world. Making broad generalizations is bad for a reason.
Copypastaing another comment of mine: &gt; He's not retired. He's on a "permanent vacation". &gt; That's what I don't like about his "stepping down"-- it was extremely unofficial. He still holds a lot of power among the core dev team, more than the others, and he can technically change his mind about his retirement at any time. I called this shit (not this change specifically, but this aspect of Guido's behavior) ages ago. And lots of people on this sub thought I was an idiot because "no, no, hes stepping down, sad day!". No fucknuts, he is and will always be in charge until he steps down in official capacity.
Unfortunately it happens every couple of months.
But they are removing master from places where there is no slave connected in anyway as well, so it's not apples to oranges. --- # master pattern object. keeps track of global attributes +++ # main pattern object. keeps track of global attributes.
Not a popular opinion, but I can see how Master/Slave language can be shocking to some. We're all used to it because we deal with that language every day, but that doesn't make it ok. There are bound to be some poor choices made when converting to the new terminology but I'm confident we'll figure it out. Making this change costs us almost nothing and it might help right a wrong so why not do it?
And 3.5
Yeah, I agree. Wrapper library is definitely the way to go. This way the user can choose between good interface and versatility.
Bit verbose for daily usage ... but probably useful for a big code base
From what I've quickly read on the pandas documentation when I wrote my comment (I don't actually have any experience with this library) the impression I got was that the read_csv method reads a file and parses it, which means that the variable reader to which you assigned it contains the result of this operation. I may be wrong though :)
Thats pretty suss on their part to think they need to have changed it. Some people are weird man.
Perl 6 would like a word. I quit using Perl rather than move off of Perl 5.
Can you tell me where the slave bedrooms in a house are? Real estate stopped using the term master bedroom .. or at least has advocated against the term.
Sounds like a good idea!
I don't believe that it has to do with being rational. I think just about everyone has an emotional weak point that causes them to go nuts. I don't think it's a binary quality that people are sensitive or not, it just depends on the subject at hand. Many people don't get offended by any particular word, even a racial slur. But I strongly doubt that most people are immune to emotional attacks. Pretty much anytime you see a person go on 10 minute rant, especially if it's a rant about another person, they've been set off by emotions. For example, Democrats who despise Republicans. Republicans who despise Democrats. They don't even want to consider the other person's viewpoint. Here's another easy one: pedophiles. I would bet most people in the civilized world don't think of pedophiles as human beings who can be reasoned with. (I'm also going to bet that someone is going to label me a pedophile or pedophile apologist just for stating this objectively) As far I can tell, most people don't even care about how they came to be in the first place. Only that they're sickos who need to be labeled and perhaps quarantined. It just so happens that for some people it's a word that sets them off. And while it might seem like it's isolated to a particular group of folks on the internet, I think it's way more common than that. In fact it's often people who despise PC that go off on an angry rant about why PC "needs to die out" or whatever. Once someone's been set off, there's pretty much no hope of coming to any meaningful resolution. So in my opinion, if you truly believe in finding a meaningful resolution to any conflict, then being sensitive to another person's emotions is 100% necessary. Even if I think their position is stupid. It's fine if you disagree on that, I'm not trying to promote that specific idea. I just want to make a case for why PC can be a good tool and get away from this "because feelings" sentiment.
I find unpaid intern offensive, many of us have suffered. &amp;#x200B; it's crazy this was actually merged, it sounds like a really dumb joke. &amp;#x200B;
"Free as in Libre" / "Free as in Gratis"?
Alright, I'll say it. Removing those terms makes no sense. I am unsure why they would. 
Hacking toward a 0.4 release of my little MAC address library, getmac. Going to learn how to use unittest.mock and add some actual tests to, which will hopefully surface a number of issues that I'd never hit on the platforms I use. GitHub: [https://github.com/GhostofGoes/get-mac](https://github.com/GhostofGoes/get-mac) &amp;#x200B;
Good luck!
My place got rid of the term "standup", citing ableism. 
Why? In what technical context does master and slave doesn’t mean skin color which thar SJW implies?.... if you don’t like the color of your code, change the theme. You nutheads 
This is actually how Cassandra works!
I like master/serf. It's a small change that doesn't mess with any existing acronyms. It's still pretty much the same metaphor, but it's a term that's less likely to cause an emotional reaction the first time someone comes across it in an engineering context.
What? I'm saying there is a definition that fits - it's just not human slavery.
Given your screenname, I do not believe you. 
Wow people are stupid...... I'll call my next project master / slave just to piss them off. Now gtfo
Bourgeoisie and proletariat 
Holy shit that black PR is hilarious. People really don't think things through do they...
as a god-fearing christian man i take issue with this `_terminate_children` function
I want to if the input is 1, lol is 1 If the input is 2, lol is 2
Looks like the PR was merged? Good bye, Python.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
1. this belongs in /r/learnpython 1. Please format it correctly if you want help, just giving a (literal) screenshot is not all that useful 
&gt; &gt; Master/slave terminology does not invoke instances of historical human bondage unless either the transmitter or receiver of language choose to contextualize it that way. &gt; why call your transmitter and receiver master and slave Perhaps instead of the rest of the world being full of bigots, you simply have a personal problem with reading-comprehension. 
&gt; I *think* that's what almost everyone means by a setter, and what a lot of people don't like about matplotlib. But that's fine, let's follow your definition. Normally, setters and getters are written as a pair and access one "external property". The zero-parameter getter returns its value (after possibly regenerating it); the one-parameter setter sets it by value (after possibly validating it). This is for example what most people do with traitlets. The \`set\_title\` method you gave is not setting the title based on a title object. It's a method that takes more than one parameter and generates a title object. I think you called it an artist or something. That method might also accept an artist, I'm not sure. In any case, it's not a simple setter, and so it has no business being written using a Python property decorator. &gt; Yes, it's just a shorthand. Even if it wasn't there you could easily define it using `setattr` and looping over the arguments, I don't see the problem. First of all, you shouldn't have that shorthand since it obscures what is really going on. Is the title attribute is essentially generating a call to `set_title`? Is it getting the title object, and just setting the title text? It's not clear what's going on. The other reason to get rid of it is that there should be one way of doing anything. This is part of the Python zen for a reason. Even you lamented in your posts that you can't stop people from writing examples badly. Writing things with the `set` method inevitably leads to people asking how do I change the title font, and then what do you do? I hope you don't add a title_font keyword argument to the set method. A good API is clear and concise. `set` makes the API a lot bigger. It's one method with many many possible arguments, and that takes up mental space. This is why you have people complaining that they have to keep reading the docs every time they come back to matplotlib. Keep the interface as small as possible by getting rid of redundant methods. Make things simple, and don't worry so much about a few extra lines: No one is using matplotlib at ACM competitions. &gt; As for discoverability of kwargs like fontsize: the docstring of set_title actually lists... Yes, that's totally fine. I think if people are using set_title, the options are totally discoverable, and I agree with you that you don't need to list them there. People can follow one symlink. What I'm not okay with is people setting the title using your set method, in which case they may not discover `set_title` and therefore they won't discover its options. &gt; Indeed, in this specific case, ax.title already exists, and returns the Text artist object that represents the title. Good. That's the right thing to do. &gt; Now I agree it would be nice if you could copy a whole Text artist from one axes to another. Unfortunately, matplotlib's data model is that only one figure and one axes can own an artist at a time (a lot of things become much easier when you can go back from the artist to the figure/axes), That's unfortunate, but not a big deal for now. I understand the reasoning.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I just finished a a webscraper to download a number of files for work The page was hidden behind JS, so i had to use selenium! I wanted to try to do this without a web driver, but it still turned out well anyways :)
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
cry more
this is the whitest thing ive ever read, congratulations 
&gt;What pyplot is technically in charge of attaching to a figure is a FigureCanvas and a FigureManager. The FigureCanvas is essentially the combination of a Renderer (something that either knows how to generate a raster or a vector image in a specific format) and, for GUI backends, a GUI widget that'll display the raster image. Cool, thanks for explaining this. It makes sense. re: FigureCanvasAgg Are there any other canvasses? Why should I pick that one? Otherwise, yeah, this makes sense. &gt;plt.show() pops up every figure that has been created via pyplot (that's actually quite consistent, isn't it?) That's consistent, but that's stateful and disgusting I think. We should be passing the figures to `plt.show`. &gt;you now attach qt5agg FigureCanvas, which conveniently happens to be a Qt widget that you can insert into your layout (and yes, you're in charge of setting up the toolbar yourself, again it's in the example). Perfect, looks great! &gt;As for threading, note that GUI toolkits... My point is one of design. What happens if I try to create figures in other threads. I should be allowed to do that. And what if I call `plt.show`? This is one other reason that stateful methods are uncomfortable. Avoid global state as much as possible by returning the objects that manage that global state. &gt;it's been around for a long time now but if for some reason plenty of people still teach add\_subplot in their blogs, we can't control that... You can deprecate the three parameter form. And you can at least [document](https://matplotlib.org/api/_as_gen/matplotlib.figure.Figure.html#matplotlib.figure.Figure.add_subplot) the GridSpec possibility in `Figure.add_subplot`. It's not even discoverable! Finally, you should deprecate pyplot's add\_subplot function since you have the method on Figure. Keep the interfaces as simple as possible. If pyplot's job is to manage and provide canvases, then let it do that and only that. Separation of concerns.
Whoosh.
It's very similar to 1938.
Nice bot abuse, Mr. Deleted.
Why break backwards compatibility? The change isn't warranted because it's just a banning of the words master and slave in the language. For no other reason than potential offending. Whoever sees master and slaves and has flashbacks to slavery is over sensitive. They're purposely looking to limit language so it is common place to censor words. Of course it seems reasonable now.
Nice, what methods you using? Any image processing algorithms?
Perfect. The emargo and privilege lists. It's almost ambiguous enough but it does make it sound like the privileged are better than the emargoed. I think we need a less charged word.
Then use python or whatever. That use case is outside of the generator. You could use Python to slurp the database, create markdown and then run hugo (written in Go) to get the same result. 
Pimp/Ho
I highly doubt anyone that seriously contributes to open source is getting flushed out by this. In the linked thread, if you click on the profiles of everyone complaining, they have inactive accounts (one account was 8 years and 1 inactive repository). &amp;#x200B; There is clearly brigading going on. I'm glad Guido shut that down. &amp;#x200B; Lastly, a GitHub issue tracker is not the place for a political/ideological discussion.
Please say you’re joking. 
Boo hoo
This terminology change is going to happen. The writing has been on the wall for several years. Maybe it sucks, but it is what it is. I don't think the drama is worth it. Let's just get it over with as efficiently as possible.
Happy Cake Day!
Connecting to LFS, BeamNG and RoR with OutGauge from an ESP32 running MicroPython ... gotta love structs :|
I am finding it hard to describe exactly how I feel. I understand the reasoning behind the decision, but I feel like this essentially says that slavery == worker. Living in the capitalist economy of the US, I can't help but feel this change reflects more how workers are treated as slaves rather than attempting to be more sensitive to minorities. 
One guess.... are these guys based out of California? 
Or Putins and Punkinheads
Fucking hell I used to love coding because I could get away from this bullshit. The only politics was about what made more sense, no feelings. Wtf is this 
You just shit on an entire section of your colleagues for working on web devopment. That's honestly worse than being sexist. And yes, I am implying that your ideas do not exist in a vacuum, and that they are essentially a sexist dog whistle.
By the tone of this discussion, you'd think the `collections` module was affected. Looking at the three changes([9100](https://github.com/python/cpython/pull/9100) [9101](https://github.com/python/cpython/pull/9101/files) [9099](https://github.com/python/cpython/pull/9099) ), only one affects backwards compatibility (and it's in a small module) and the others are even smaller: * [9100](https://github.com/python/cpython/pull/9100) was vetoed by Guido. * [9101](https://github.com/python/cpython/pull/9101/files) only changes a handful of places in Python's documentation. * [9099](https://github.com/python/cpython/pull/9099) affects a little-known module that I assume most of us haven't even heard of before today. Searching for the renamed function returns only around [500 hits](https://github.com/search?l=Python&amp;q=run_tests_slave&amp;type=Code) on Github. For comparison, a popular (but not universal) part of the standard library has [1.9 million hits](https://github.com/search?l=Python&amp;q=namedtuple&amp;type=Code). Even the new dataclass feature has at least [1700](https://github.com/search?q=%22from+dataclasses+import+dataclass%22+language%3APython+language%3APython&amp;type=Code) hits. Look, I'm a technical writer and a developer. I know how much it sucks to change terminology. However, this is much ado about nothing, and a genuinely small price to pay for more inclusive language.
I bet you use a "terminal" to "program" don't you? Maybe you should consider the people battling cancer and people recovering from cults before being so careless with your terminology.
Yeah, but the term "worker" is really problematic and ableist towards people who can't work or don't want to work. Not to mention that the whole power dynamic in manager-worker relationship reinforces the awful capitalist system that was responsible for the creation of slavery in the first place. To really inspire change we need to use terms that will educate people and will represent positive concepts. I propose to change "master/slave" to "Marx/revolutioner". The former inspires the minds of people and the latter fights for the greater good. 
&gt; This thread is acting like this a serious, broader issue, but I can hardly even feel like this is an issue. This is the same sort of hyper-attention to language use that results [in people getting fired for making dumb dongle jokes.]((https://arstechnica.com/tech-policy/2013/03/how-dongle-jokes-got-two-people-fired-and-led-to-ddos-attacks/) I'm not objecting to the change, I'm objecting to your implication that someone who said &gt; Right, because only the alt-right is irritated by the emergence of language policing in the software community. is on the alt-right. I agree that this example is fairly benign. The dongle example, however, is not, and also constitutes language policing. &gt; I'm real fucking glad we did something about Brazil nuts, for example. You lost me. What? &gt; object oriented programming is capitalist decadence anyways so it's not worth rebranding. shots fired
Who is "they"? I can't tell which side of this you are on!
A. That makes zero sense as “white person” and “black person” have no meaning in this context. B. Not all slaves are black and not all masters are white. Check your history. 
Boss and worker.
Intersectionality, it's glorious. You need to be outraged until every single tribe and group is taken care of, until you break down all defining characteristics of your group. And eventually we find your group size is one; the individual. No group is small enough for these types ...
Just wait for the arguments against *stateless* code.
Which is surprising, given that Python started out with a lot of Monty Python homage jokes and wordplay.
Well, I didn't use 'you' in the previous comment... and there was only one other possible party. percusse + rafasc - rafasc = ???
This is quite possibly the stupidest thing I've ever read. Of all the dumb things to get offended over... And it got merged.
That is unfair to uneducated!
Master/replica
&gt;getting started 1. Install vscode 2. Install ~~Reynald Jemane~~ microsoft python plugin
false
Wow, this is just about what I wanted, I'll have to do some tests and see if I can get it to the ideal numbers but this is amazing. Personally, after a couple hours I got: import os import random def main(): x = int for x in range(1,10,1): prob = random.randint(1,1000) if prob &lt;= 2: print(random.randint(65,69)) elif 2 &lt; prob &lt;= 10: print(random.randint(70,74)) elif 10 &lt; prob &lt;= 30: print(random.randint(75-77)) elif 30 &lt; prob &lt;= 150: print(random.randint(78,82)) elif 150 &lt; prob &lt;= 750: print(random.randint(83,86)) elif 750 &lt; prob &lt;= 1000: print(random.randint(87,90)) main() What you came up with seems to be much cleaner especially because I'd have to come up with some kind of formula to put next to the numbers to change the probabilities as each pick goes down the list. This gave me the idea to implement a few draft grades instead of their actual overalls to maybe make it even more personalized because I put in my probabilities for rookies' draft grades. So kinda combining our solutions. If you'd like I do have a few questions about the specifics here. Could I make the ranges wider to potentially include a small percentage of there being busts? How could I change the specifics of the probability of another number being ahead of the other? How do I make the number range less wide, say having the lowest number being a 65 or something like that? I'm sure as I test it out I'll have more questions but thank you so much for this idea, I'll see where I can take it and maybe update the forum if you'd like. &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
I'll definitely check that thread out, thanks.
My code is written properly I didn't realize copying and pasting changes the indentation, sorry I'm new to this. Again thank you, just a freshman, first year coder trying to get some extra experience in.
"For diversity reasons" This is fucking hilarious!
&gt; maybe you get someone into coding that wouldn't be there otherwise and maybe you push people out from constantly breaking code
Graduate Student
Except it seems the developer who made the change and GvR are both not American. So, clearly this isn't just an American over-sensitivity. 