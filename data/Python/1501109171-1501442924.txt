That doesn't help when it has a blocking modal dialogue telling you the status of a network connection and you aren't in charge of the network.
If you're new I'd suggest starting with just a text editor. You won't need all the features of an IDE and it's good to know what the IDE is doing behind the scenes.
Because I'm too new to this to know what that is... care to explain please? Edit: Googled it, feeling foolish now. At least I learned something
I meant it mostly in jest, but apparently it was quite offensive!
Glad I could help. ;)
Python 3. Visual Studio Code.
FWIW, I upvoted you.
The autocomplete-python was changed so that Kite was the default option.
If it is any consolation I'm honestly impressed with the level of over-engineering you threw down. Double bonus for re-inventing imports while actually using imports and simultaneously not really knowing what they are. 
I'm saying that the editor doesn't collect your metrics by default, and that is NOT what "its all about". 
One quick way to get data up on the web is with Jupyter, perhaps something like this: https://blog.dominodatalab.com/interactive-dashboards-in-jupyter/ or maybe this: https://stackoverflow.com/questions/30979962/matplotlib-plot-the-result-of-an-sql-query 
We are going to down vote you because you are wrong. 
All those `break` after `return` can be removed, they are simply [dead code][dc]. And all `continue` can also be removed from your current code, but it's perfectly fine to leave them as is and probably should. [dc]: https://en.wikipedia.org/wiki/Dead_code Although pastebin is fine for sharing short pieces of codes (personally, I don't use any pastebins for this purpose), I'd suggest you learning about [Git][] (or any VCS). [Git]: https://en.wikipedia.org/wiki/Git Speaking of sharing codes, with that intention from you, you may want to read about [open-source license][osl]. [osl]: https://en.wikipedia.org/wiki/Open-source_license
Vancouver, Lower Mainland, Fraser Valley - BC, Canada Looking for a back end Python / Django / Angular developer for full time. Located in Langley, BC. Work is 2 to 3 days in office and the rest of the week working remotely from home. The full info for the job can be found on indeed here... https://ca.indeed.com/viewjob?t=python+developer&amp;jk=9b2baba0f4213eed&amp;_ga=2.246221316.1668109613.1501113193-1185425399.1501113193 Please only apply if you live in the surrounding area or are relocating soon.
If you don't have much experience with programming in general, Python is probably a great place to start. It's fast and easy to pick up, and you'll quickly get into the fundamentals of programming logic and flow control. I haven't used codeacademy myself, but I would recommend either Automate the Boring Stuff or Python Crash Course as excellent resources for a beginner, and [CheckIO](https://checkio.org) as a fun place to challenge your skills. Unfortunately I'd hardly call myself an expert, as I'm still in the process of self-instruction too, but this is a pretty friendly sub if you have any questions about what you're learning. Don't forget to check out /r/learnpython as well!
Sublime
 # Get the text for each table data (td) element in the row # Some player names end with ' HOF', if they do, get the text excluding # those last 4 characters, # otherwise get all the text data from the table data season_list = [td.get_text() for td in row.find_all("td")] This is not picking up the value in the rank column because the rank column has a "ta" tag (not "td" like all the others). # Extracting the player links # Instead of a list we create a dictionary, this way we can easily # match the player name with their pfr url # For all "a" elements in the row, get the text # NOTE: Same " HOF" text issue as the player_list above links_dict = {(link.get_text()) : link["href"] for link in row.find_all("a", href=True)} # The data we want from the dictionary can be extracted using the # player's name, which returns us their pfr url, and "College Stats" # which returns us their college stats page # add the link associated to the player's pro-football-reference page, # or en empty string if there is no link season_list.append(links_dict.get(season_list[3], "")) Not sure what you are even trying to do here but all you are doing is appending "" to season_list after each loop which is why the last column of your final dataframe is blank. To fix the problem you can drop the "Rk" element from column_headers (because the rank column is irrelevant anyway). And comment out/delete the portion of code in the second block above. That should fix the problem.
Thanks very much, appreciate all the advice! I wasnt aware of that subreddit.... going to check it out now. I'll also take a look at them two resources, i'm eager to learn - do you think its a long winded processes to learn Python? Or would I pick it up pretty quickly in comparison to other languages. Sorry for the questions!
No worries! I'd definitely say Python is one of the easiest to just pick up and go, as it's fairly intuitive once you have a handle on the basics. The most important things is to just jump in and give things a shot, even if you aren't sure it'll work--it's the best way to learn. Best of luck with your degree!
Vim is awesome, but anything new should be written in 3. If you get a job that needs 2, it's an easy transition . I say this as a professional python 2 dev.
Trial and error then :) Thanks again!
Thanks. I wasn't able to get your suggestions to work. I tried to remove the Rk column from the column_headers list before I loaded the columns in, but I got an error message. Part of what I'm trying to do is just teach myself to scrape data correctly. I'm kind of at an intermediate level with all of this at the moment. I cleaned up the script a bit and took out some comments so it's a bit clearer. Basically, I'm trying to scrape data from this url: https://www.pro-football-reference.com/years/AFLNFL/passing.htm My columns come out as follows, where Rk is supposed to be a ranking (here just a basic index list), and then Year is supposed to have the years under it. As you can see, all columns are one to the left from where their headers are: Out[155]: Rk Year Tms Cmp Att Cmp% Yds TD TD% Int ... Y/A AY/A \ 0 2016 32 22.5 35.7 63.0 241.5 1.5 4.3 0.8 2.3 ... 7.0 11.4 1 2015 32 22.5 35.7 63.0 243.8 1.6 4.6 0.9 2.4 ... 7.1 11.5 2 2014 32 21.9 34.9 62.6 236.8 1.6 4.5 0.9 2.5 ... 7.0 11.5 3 2013 32 21.7 35.4 61.2 235.6 1.6 4.4 1.0 2.8 ... 6.8 11.6 4 2012 32 21.2 34.7 60.9 231.3 1.5 4.3 0.9 2.6 ... 6.7 11.6 Y/C Y/G Rate Sk Yds NY/A ANY/A Sk% 0 241.5 87.6 2.2 14.1 6.37 6.2 5.8 None 1 243.8 88.4 2.3 15.3 6.41 6.3 6.1 None 2 236.8 87.1 2.4 14.9 6.35 6.1 6.3 None 3 235.6 84.1 2.5 16.7 6.21 5.9 6.7 None 4 231.3 83.8 2.3 14.7 6.25 5.9 6.2 None [5 rows x 21 columns]
You got your pythons all fucked up, use a virtualenv. Install python Install pip Install venv Make venv Activate venv You can use 'which pip' to make sure you are using the venv's pip pip install &lt;package&gt;
It sounds like using python may be a bit over kill for generating a simple report like the one you described. [Here](http://www.wikihow.com/Embed-a-SQL-Query-in-Microsoft-Excel) is an easy way to embed a sql query into a table in Excel. You can then create some formulas off that table to organize/manipulate the data as needed.
Pls Leave
I don't know for certain, but the PyCharm DB tool is likely to be a plugin version of their standalone product DataGrip. Very nice tool.
Your reasoning seems pretty subjective and arbitrary.
Yes ,I am using this, It's great.
It basically is, but there are some small differences, mostly in how Datagrip manages projects separate from code. I use DataGrip for production databases, PyCharm for development databases. That makes it harder to accidentally screw something up, not noticing what you're connected to.
This. Mail Merge is almost certainly your best choice, even if it's not destined for mail. 
Finally got a good looking svg to work on a page, that is such a relief! Thank you. Was invoking the script with the wrong version of python3 &gt;&lt;
Looking at your output, you still have the 'Rk' header in the dataframe. Which means the column_headers list you are passing into pd.DataFrame still has 'Rk' in it. Try adding the last line shown below and see what you get. column_headers = [th.getText() for th in soup.findAll('tr', limit=2)[1].findAll('th')] column_headers.remove('Rk')
Oh, sorry, the dataframe I showed you was before I removed the 'Rk' element from the column_headers list. After trying to remove 'Rk', when I try to read in my dataframe, as follows: df_all_seasons = pd.DataFrame(data, columns=column_headers) I get: AssertionError: 20 columns passed, passed data had 21 columns
So I got it to work by removing 'Rk' and then inserting a new column. The only problem is that I was hoping to find out why I had this in the first place, and if I could fix it "the right way" as I loaded in the data rather than having to delete and add stuff like I did. Anyway, thanks for the help!
 # add the link associated to the player's pro-football-reference page, # or en empty string if there is no link season_list.append(links_dict.get(season_list[3], "")) Comment out or delete this line
OK, that worked, along with removing 'Rk' from the dataframe manually. I think I might see why it worked to delete that line, although not sure. Is there a way to create the column_headers list without loading in the 'Rk" variable in the first place? Either way, thanks a bunch.
Not 100%, but http://chardet.readthedocs.io/en/latest/usage.html comes pretty close. 
9%
A general rule of thumb when asking people for help with a problem is to details the exact steps you took to arrive at the problem. Any commands you ran on your computer can be included with special syntax (4 spaces in front of every line) like this: $pip install sc $python &gt;&gt;&gt;Import SC [Insert error message here]
You might have luck looking over the [Language Reference index](https://docs.python.org/3/reference/index.html). Specifically, [Simple statements](https://docs.python.org/3/reference/simple_stmts.html) and [Compound statements](https://docs.python.org/3/reference/compound_stmts.html) touch on many.
https://www.programiz.com/python-programming/keyword-list
Could someone maybe help me implement classes?
That's very helpful. Thanks a lot 
Thank you, at least I now know about libraries. I've written mine now and it's really handy. Could you possibly elaborate on the bit about "over-engineering" and the bit about the imports. Not sure I follow what you meant 
Thanks for the advice, I'll try a little trial and error with what you said until I understand the code 
You used the tool you need to solve the problem while over complicating the solution to your problem. 
I'm fluent in several languages and I can get by in a few more and I'd say Python is an excellent choice. You can produce code that does a lot very quickly and, if you try to stay on the "idiomatic path" and follow the style guides (PyCharm will help a lot with this), you'll produce code that's very legible and easy to maintain. A friend of mine picked it up from scratch by creating a simple text adventure game. It never got terribly sophisticated and, at some point, he dropped it in favor of some other project, but IMO a simple project with achievable goals is a great way to learn a language. Good luck! 
This is will likely be removed. Post in /r/learnpython. Also, use [pastebin](https://pastebin.com) or something like that for formatting. Code is difficult to read on reddit without proper formatting.
I don't think there is an official doc page in the Python documentation. You can get a list of them by: &gt;&gt;&gt;import keyword &gt;&gt;&gt;keyword.kwlist ... &gt;&gt;&gt;len(keyword.kwlist) 33 This is on Python 3.6. I would not trust Python 2.5 docs, as a lot has changed. If you are just learning, read https://docs.python.org/3/
Here is a hint that seems to be hidden. type: $ python3 &gt;&gt;&gt; help() help&gt; keywords help&gt; and # or whatever keyword you want 
Top 3 are: webfaction, webfaction, and webfaction
Still semi open source. The intellij platform is open source so those editors are mostly open source too. The plugins and ide modifications themselves aren't however.
Ah I get you, thanks again 
Depends - what do you do? I feel like the database tools alone are worth the price of pro, but I know there are other features that are pro-only.
Good luck!
You can also list out the builtin identifiers with: dir(__builtins__) Overriding these will not give you a SyntaxError, but you can get some strange errors. For example, if you define `str` using `str="ABC"`, and then try to convert an int to string using `print(str(100))`, you'll get a message that a string is not callable. What happened is that you overwrote the builtin `str` function with a string, so that subsequent uses of `str` reference the string, not the function.
Microsoft? Is that you?
&gt; issues Lol. &gt; We are building a private cloud version of our servers, Kite Enterprise, so companies can deploy Kite servers on their own AWS and Azure accounts. They even put advertisement in their "apology"
I'm implementing the serial communication protocol of a high precision peltier driver to control it with our lab surveillance. ([btw these things are great](https://www.meerstetter.ch/products/tec-controllers))
are you kidding? jetbrains is ridiculously cheap: pycharm: 89/year Unity: 395/year Visual Studio: 799/year QT IDE: 3540/year 
Cancelled my netflix subscription to pay for this. Id rather pay JB money and steal movies than vice versa. 
An easy way to create new lines would be to include the new line character within your print statement. So you can replace: print(" ") print(" &gt; ") print(" ") with: print("\n &gt; \n") to have pretty much the same output, if you want :)
Note that using PyPy and NumPy is already possible, the remaining small problems have nothing to do with the C API but rather with the assumption that a refcounting garbage collection scheme is being used. The proposed PEP would not help in this case.
now try to build a indexable searchable sortable string fuzz search db.
Well, they basically said never because it's too hard and/or not worth it to go 64-bit. Now imagine the difficulty of porting such a product to a whole different OS - not likely to ever happen. Besides they released [Visual Studio for Mac](https://developer.xamarin.com/releases/vs-mac/preview/vs-mac-preview1/) which is just a re-branded Xamarin Studio, so at best you can expect _that_ to be ported to Linux - maybe. From what I have read on it, though, the consensus is "_yuck!_". Some reading material for you: https://blogs.msdn.microsoft.com/ricom/2009/06/10/visual-studio-why-is-there-no-64-bit-version-yet/ https://blogs.msdn.microsoft.com/ricom/2015/12/29/revisiting-64-bit-ness-in-visual-studio-and-elsewhere/ https://blogs.msdn.microsoft.com/ricom/2016/01/04/64-bit-visual-studio-the-pro-64-argument/ https://visualstudio.uservoice.com/forums/121579-visual-studio-2015/suggestions/2255687-make-vs-scalable-by-switching-to-64-bit
Socialhome - https://socialhome.network Basically it's a Django based federated social network engine that focuses on building a social profile and grid like content visualisation. My most ambitious project so far, interesting to see where it goes 😁
&gt;The proposed PEP would not help in this case. Actually it might. The removal of the `ob_refcnt` and re-writing of `Py_(IN/DE)CREF` would mean that there is _much_ more flexibility in how reference count is treated. From the draft: &gt; If the new C API hides well all implementation details, it becomes possible to change fundamental features like how CPython tracks the lifetime of an object. &gt;* Remove ``Py_ssize_t ob_refcnt;`` from the PyObject structure * Replace the current XXX garbage collector with a new tracing garbage collector * Use new macros to define a variable storing an object and to set the value of an object * Reimplement Py_INCREF() and Py_DECREF() on top of that using a hash table: object =&gt; reference counter. 
Anyone recommends PyCharm edu edition for beginners?
Thanks for this, looks worth looking at! (I have some ways to go before implementing save/load but I wanted to do some research)
I've begun working as a Django/Python developer for a software company. I am currently working on a very large Django project - written in python2 - that is many years old. I am currently a bit overwhelmed and slowly working my way through the program. So far my slightly hackey solutions haven't broken anything though. 
Have been writing python for a living for almost 20 years. Use python 3 for the last 3 to 4 years and visual studio code.
It's not really targeted at beginners, it's targeted at classrooms where teachers can set up assignments. It's less good for experimentation and more free form learning. 
[Jinja2](http://jinja.pocoo.org/docs/2.9/) is probably the most popular template engine for python. Really easy to use. 
... how about vim + console + ipdb? i run my tests 10x faster than my boss and anyone else in my company that's on pycharm (EVERYONE is on pycharm), yet i'm the archaic one for using primitive technology. pycharm is slow (i'm on a macbook pro i7, 16gb, ssd), it is clunky; with docker -- it's a nightmare -- the damn python console has been broken for MONTHS!! instead of using a all-in-one tool that does 20 things.. kinda badly, use 20 tools that do one thing, extremely well -- the unix way! 
I launched [Starminder](https://starminder.xyz) ([repo](https://github.com/nkantar/Starminder)) a few days ago, and have been making some small changes on the road to a reasonable 1.0. Users, feedback, and contributions all welcome!
It uses a keyboard and mouse robot along with computer vision algorithms to drive arbitrary UI, not just injecting a JS controller into a web page. You can automate far more using sikuli. Both have their place, but Sikuli will give you the escape hatch to save your ass.
I see this is literally &lt;40 lines of code, but do us a favour and publish it as a library or contribute it to an existing and popular tty library! 
It's not for a text file. It's just labels in a GUI.
I heard about it but it's mostly for web templates. It might be overkill for my needs. Really, if it wasn't for the imbricated functions with parameters, I would have just used a string replace.
I was wondering if it was worth packaging it.. I might when I have some spare time ;)
[Pipenv](http://docs.pipenv.org/en/latest/) is a pretty great way of working with virtual environments.
I'm studying python 2 as I've taken from several sources that it's still prevalent in data science and analysis. Any comment? I'm still a noob.
I don't follow other implementations like Pypy or Ironpython but this was a good article that summed up both sides, made for a fun read.
Why are you still teaching Python 2.7 in 2017?
Check out colorama module, pretty much already implemented.
[Here you go](http://i.imgur.com/pEjLBN1.png), you can thank my insomnia ;) [Pypi link](https://pypi.org/project/kolors/)
You miss the point, they are many libraries out there to do that, but they pretty much all rely on concatenation or calling functions. Which gives code like this: from colorama import Fore, Back, Style print(Fore.RED + 'some red text') print(Back.GREEN + 'and with a green background') print(Style.DIM + 'and in dim text') print(Style.RESET_ALL) print('back to normal now') Doesn't look too bad in a simple example like this, but if you have to output more than one color in a line it quickly becomes a nightmare to read. Like this: print('[' + Fore.RED + Style.BOLD + 'FAIL' + Style.RESET_ALL + '] '+ Back.ORANGE + 'Something..' + Style.RESET_ALL) When it could look like this: print('[&lt;red bold&gt;FAIL&lt;/end&gt;] &lt;orange&gt;Something..&lt;/end&gt;') Bonus point: most developers eyes are already trained to read a very similar layout syntax. Implemented can always be improved :D
Pycharm commercial edition (along with tons of other commercial Jetbrains stuff) is free for students if you happen to be one. https://www.jetbrains.com/student/
Hi Fred, thanks for the advice! I'm looking to start a project just a bit short on ideas. I've just downloaded PyCharm as well so looking forward to seeing how that goes! 
Oh also is there any free alternative to pycharm, cant really afford it at the moment!
The compelling aspect of PyCharm for me is the definition/reference indexing - can vim or a single app help with that?
Very nice idea, but can they accomplish this without major breakage?
Pycharm is free for students! If you have an edu email already you can sign up with it. e: if you're in the EU then university emails should work too
:-)
It would be a mistake, python users will not accept another one. 
Python 3.6: `f{user_title} {user_name} is born in {user_birthdate[:4]}. Tomorrow is {day_of_week(add_day(today, 1))}.'`
f-strings work in Python 3.6: def shout(name): return name + '!' print(f"Hello {shout('Bob')}") &gt; Hello Bob!
Awesome, thanks for that, what other special characters are there like that? 
[step](https://github.com/dotpy/step) - Simple Template Engine for Python. Very usable and lightweight (&lt;130 lines). 
Preview: https://github.com/cprogrammer1994/herebedragons-python/raw/master/resources/preview.png
`{}` is an empty dictionary.
This question should be at r/learnpython Each time you run it you create a brand new empty dictionary called `my_stuffs`. If you want to remember it across runs you'll have to do something to save the contents to a file (or some other form of persistent storage), and then read it in again the next time.
Exactly my point :)
Well. We have to jump through hoops and we're currently maintaining our own basic Flask application for all of the information. So your mileage may vary. I'd like to pay them because it gives us a lot of value. But convincing our IT people for budget is a different story.
That's awesome. Too bad Python 2 is for me a requirement. And when I think about it, I forgot to mention it.
Like for jackbrux, this feature is awesome. But being stuck with Python 2, I can't use it.
You can use `str.format`, then f-strings are just fancy syntax for it.
That seems very nice too. Too bad it doesn't tell anything about calling a single function with parameters, except by writing actual python code. And python code means multiple lines. I need something easy, that even a non programmer can use. Step is already quite good, but I'd have to extend it. Templite+ is also an engine that eval python code but in a bit different way (needs to be extended for my needs too).
Really? I must try that (later today). Thanks a lot.
&gt; but it's mostly for web templates It's not true. &gt;&gt;&gt; import jinja2, datetime &gt;&gt;&gt; t = jinja2.Template("{{ USER_TITLE }} {{ USER_NAME }} is born in {{ USER_BIRTHDATE[:4] }}. Tomorrow is a {{ (TODAY + timedelta(days=1)).strftime('%A') }}") &gt;&gt;&gt; t.render(USER_TITLE='User_title', USER_NAME='user_name', USER_BIRTHDATE='1970/01/01', TODAY=datetime.datetime.now(), timedelta=datetime.timedelta) u'User_title user_name is born in 1970. Tomorrow is a Friday' Yes, jinja2 does not allow templates to call arbitrary functions; only those you explicitly provide. But that's a feature, not a bug.
Python source code compatibility is the special case, honestly. If you write Python source code, you get some pretty strong guarantees about compatibility within a major version of the language (which was what led to the 2-to-3 break in the first place, since a lot of old warts needed to move from "deprecated" to "actually removed and not supported anymore"). Python bytecode, and the Python C API/ABI, provide much less in the way of compatibility promises. Although Python 3 was also a big break at the C level, there's more churn within major versions, and it was only as of Python 3.2 that any kind of ABI guarantee was implemented. And even then, it's opt-in, requires you to declare the minimum version your extension will work on, and gives you only a limited subset of the full Python C API.
Wouldn't it be more useful if you stuck to a more HTML like syntax? &lt;color red&gt;Red text&lt;bold&gt;Red bold text &lt;bg blue&gt;Red bold tect on Blue background&lt;/bg&gt;red bold again&lt;/bold&gt;Just red again &lt;/color&gt;
&gt; It's not true. I did not mean to spread false rumors. I've only seen jinja2 in threads and articles about html templates. That's why. &gt; Yes, jinja2 does not allow templates to call arbitrary functions; only those you explicitly provide. But that's a feature, not a bug. And that's a feature I like. I don't want to write 'import... and def' in my template. Therefore the mapping Jinja2 does is pretty much what I want. Remains for me the question "how lightweight is jinja2?". My project is a kivy desktop (or maybe mobile too) application, which is why I'm careful about portability and performance on low end machines. But so far, I don't think that's really a problem. I'll still try the string.format solution first, as it is standard in Python.
Right now I have done it using kivy and then packaged it for android. I will definitely look into qt and qt5 to see if that would be easier.
Have you ever checked out [`click`](http://click.pocoo.org/6/)? They have a [`style`](http://click.pocoo.org/6/api/#click.style) utility that does [all sorts of things](http://click.pocoo.org/6/api/#click.style). While it may not make your package instantly obsolete, perhaps there are some features you could take away from it. 
&lt;colour&gt;foo &lt;/end&gt; is a pretty hideous api.... why not go proper "xml" and use the same open and close tags? Or attributes like &lt;c fg="blue"&gt;text &lt;/c&gt;? (Also trying to type xnl on mobile is hell!)
Maybe this will work? https://github.com/evanunderscore/f_strings Edit : there's also this https://docs.python.org/3/library/string.html#template-strings
It would be indeed. Also Im not sure how I would set text colour *and * background with the current syntax. 
This! 
I recommend this course https://app.pluralsight.com/player?course=unit-testing-python&amp;author=emily-bache&amp;name=unit-testing-python-m1&amp;clip=0 You can create free trial for 3 months
/u/hhh333 : Publish the git repo, so people can easily suggest improvements and create patches / pull requests!
sure, its quite basic though and needs a lot of work :P as i said, my first ever python experience. Also, theres no CSS on 2nd page yet, because for some reason external css file isn't working on pythonanywhere. http://ljerrard.pythonanywhere.com/ Don't be too harsh, its really basic currently :P 
Yeah so nasty imo. Perhaps at least with matching tags: &lt;red&gt;example&lt;/red&gt;
Its available on github. But I'd like to propose there has to be some level of readiness and completeness to your software before you claim a short name on the pip namespace. Right?
I also love to have colors in terminal, that's so helpful and cool. Your idea is interesting, but as other already suggested, you should use proper XML. I personnaly use colored function from termcolor library, a very simple code. def colored(text, color=None, on_color=None, attrs=None): """Colorize text. Available text colors: red, green, yellow, blue, magenta, cyan, white. Available text highlights: on_red, on_green, on_yellow, on_blue, on_magenta, on_cyan, on_white. Available attributes: bold, dark, underline, blink, reverse, concealed. Example: colored('Hello, World!', 'red', 'on_grey', ['blue', 'blink']) colored('Hello, World!', 'green') """ if os.getenv('ANSI_COLORS_DISABLED') is None: fmt_str = '\033[%dm%s' if color is not None: text = fmt_str % (COLORS[color], text) if on_color is not None: text = fmt_str % (HIGHLIGHTS[on_color], text) if attrs is not None: for attr in attrs: text = fmt_str % (ATTRIBUTES[attr], text) text += RESET return text Also, your implementation use regex, that's made it less performant (even if you probably don't care for this function...). In [10]: %timeit c("&lt;red&gt;Bonjour&lt;/end&gt;") 11.9 µs ± 78.3 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each) In [11]: %timeit colored('Bonjour', 'red') 5.69 µs ± 41.1 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each) 
how bow sudo du -k * | awk '$1 &gt; 500000' | sort -nr
FTFY &gt; du -h * | awk '$1 &gt; 500000' | sort -nr 
thanks for formatting, i never get it right :/
https://learnpythonthehardway.org/python3/ ?
**[HIRING]** Senior Python Developer *(London, United Kingdom)* Senior Python developer with experience in designing and deploying apps at scale while keeping security in mind. Main Keywords: Python, Flask, API Development, Microservices, OAuth2/SAML EU/UK applicants only. Relocation included for the right candidate. Full job spec: http://www.interoutejobs.com/vacancies/vacancy-senior-cloud-python-developer-432053-31.html
The system tools wouldn't work they were giving me errors because of the lack of space on the disc.
It's good to pay for programming books because otherwise you just download a million of them and never use them. Paying motivates you to actually read it. 
It's good to pay for programming books because otherwise you just download a million of them and never use them. Paying motivates you to actually read it. 
Nice! Is the lego code open source?
I'll probably get a lot of flak, but you can load up free version of Visual Studio(15 or 17) with Python tools. It works well for me because its one IDE for C,C++,and Python. I'm fairly inexperienced and write crap code, that I get to work eventually to do a lot of repetitive work for me at work. Its nice and has intelli-sense, which from what I can tell updates the dB on your auto-completes when you install new packages. Auto completes are how I learn to code. I would get jack sh*t done without them. People like pycharm because you can fire it up on any OS and its one IDE. I like 1 IDE for all my languages, but it limits me to one OS. but all my work products are linux based, so I am pretty familiar on how to make the subtle changes needed to port my code over. I have no need to do the SSH code review or whatever that people complain that VS doesn't have. Could go the Eclipse route, but I found it frustrating to use in college (like 15 years ago). 
I'll probably get a lot of flak, but you can load up free version of Visual Studio(15 or 17) with Python tools. It works well for me because its one IDE for C,C++,and Python. I'm fairly inexperienced and write crap code, that I get to work eventually to do a lot of repetitive work for me at work. Its nice and has intelli-sense, which from what I can tell updates the dB on your auto-completes when you install new packages. Auto completes are how I learn to code. I would get jack sh*t done without them. People like pycharm because you can fire it up on any OS and its one IDE. I like 1 IDE for all my languages, but it limits me to one OS. but all my work products are linux based, so I am pretty familiar on how to make the subtle changes needed to port my code over. I have no need to do the SSH code review or whatever that people complain that VS doesn't have. Could go the Eclipse route, but I found it frustrating to use in college (like 15 years ago). 
I'll probably get a lot of flak, but you can load up free version of Visual Studio(15 or 17) with Python tools. It works well for me because its one IDE for C,C++,and Python. I'm fairly inexperienced and write crap code, that I get to work eventually to do a lot of repetitive work for me at work. Its nice and has intelli-sense, which from what I can tell updates the dB on your auto-completes when you install new packages. Auto completes are how I learn to code. I would get jack sh*t done without them. People like pycharm because you can fire it up on any OS and its one IDE. I like 1 IDE for all my languages, but it limits me to one OS. but all my work products are linux based, so I am pretty familiar on how to make the subtle changes needed to port my code over. I have no need to do the SSH code review or whatever that people complain that VS doesn't have. Could go the Eclipse route, but I found it frustrating to use in college (like 15 years ago). 
I'll probably get a lot of flak, but you can load up free version of Visual Studio(15 or 17) with Python tools. It works well for me because its one IDE for C,C++,and Python. I'm fairly inexperienced and write crap code, that I get to work eventually to do a lot of repetitive work for me at work. Its nice and has intelli-sense, which from what I can tell updates the dB on your auto-completes when you install new packages. Auto completes are how I learn to code. I would get jack done without them. People like pycharm because you can fire it up on any OS and its one IDE. I like 1 IDE for all my languages, but it limits me to one OS. but all my work products are linux based, so I am pretty familiar on how to make the subtle changes needed to port my code over. I have no need to do the SSH code review or whatever that people complain that VS doesn't have. Could go the Eclipse route, but I found it frustrating to use in college (like 15 years ago). 
My first apps where BBS addons where tui was in almost all cases implemented w/ ansi codes - that in mind: convenience is good to have, no argument there. While I'm not trying to argue and only mention this to give an alternative way around the issue: I'd have all strings as string templates anyway. Something along the lines of print(fmt.format("Fail","Something..")) 
I'll probably get a lot of flak, but you can load up free version of Visual Studio(15 or 17) with Python tools. It works well for me because its one IDE for C,C++,and Python. I'm fairly inexperienced and write crap code, that I get to work eventually to do a lot of repetitive work for me at work. Its nice and has intelli-sense, which from what I can tell updates the dB on your auto-completes when you install new packages. Auto completes are how I learn to code. I would get jack done without them. People like pycharm because you can fire it up on any OS and its one IDE. I like 1 IDE for all my languages, but it limits me to one OS. but all my work products are linux based, so I am pretty familiar on how to make the subtle changes needed to port my code over. I have no need to do the SSH code review or whatever that people complain that VS doesn't have. Could go the Eclipse route, but I found it frustrating to use in college (like 15 years ago). 
I've made my own. To use it, just do print red ("text") 
 But... Why would you like to lock a resource like that?
Template strings say nothing about calling a python function. I don't think it can do that. About the f_strings, does that mean the solution of ksion won't work? If this implementation works, even though it has some limitations, it will be perfect.
It's possible, but I don't really see a reason to. Unlike Node, where you only need `node_modules` at build time, and your code is minified for deployment, in Python you need the virtualenv to run your code.
I'll probably get a lot of flak, but you can load up free version of Visual Studio(15 or 17) with Python tools. It works well for me because its one IDE for C,C++,and Python. I'm fairly inexperienced and write crap code, that I get to work eventually to do a lot of repetitive work for me at work. Its nice and has intelli-sense, which from what I can tell updates the dB on your auto-completes when you install new packages. Auto completes are how I learn to code. I would get jack done without them. People like pycharm because you can fire it up on any OS and its one IDE. I like 1 IDE for all my languages, but it limits me to one OS. but all my work products are linux based, so I am pretty familiar on how to make the subtle changes needed to port my code over. I have no need to do the SSH code review or whatever that people complain that VS doesn't have. Could go the Eclipse route, but I found it frustrating to use in college (like 15 years ago). 
I'll probably get a lot of flak, but you can load up free version of Visual Studio(15 or 17) with Python tools. It works well for me because its one IDE for C,C++,and Python. I'm fairly inexperienced and write crap code, that I get to work eventually to do a lot of repetitive work for me at work. Its nice and has intelli-sense, which from what I can tell updates the dB on your auto-completes when you install new packages. Auto completes are how I learn to code. I would get jack done without them. People like pycharm because you can fire it up on any OS and its one IDE. I like 1 IDE for all my languages, but it limits me to one OS. but all my work products are linux based, so I am pretty familiar on how to make the subtle changes needed to port my code over. I have no need to do the SSH code review or whatever that people complain that VS doesn't have. Could go the Eclipse route, but I found it frustrating to use in college (like 15 years ago). 
I'll probably get a lot of flak, but you can load up free version of Visual Studio(15 or 17) with Python tools. It works well for me because its one IDE for C,C++,and Python. I'm fairly inexperienced and write crap code, that I get to work eventually to do a lot of repetitive work for me at work. Its nice and has intelli-sense, which from what I can tell updates the dB on your auto-completes when you install new packages. Auto completes are how I learn to code. I would get jack done without them. People like pycharm because you can fire it up on any OS and its one IDE. I like 1 IDE for all my languages, but it limits me to one OS. but all my work products are linux based, so I am pretty familiar on how to make the subtle changes needed to port my code over. I have no need to do the SSH code review or whatever that people complain that VS doesn't have. Could go the Eclipse route, but I found it frustrating to use in college (like 15 years ago). 
Oh alright, neat trick then :)
Oh alright, neat trick then ;)
Learning Python 3 the hard way? Install Arch and VI, and start coding with only the official Python documentation. Guaranteed the hard way. JK
Why not use a `multiprocessing.Queue` instead of a pipe. Then whatever worker is blocked on the `.get()` will take the next item? 
That's why your wrap colorama into a logger and use debug, info, warning, and error.
&gt; Note: the keyword in the closing tag isn't really relevant, but I like to use "&lt;/end&gt;" everywhere for shortness and consistency. Edit: just to clarify, I'm quoting the website. I'm not affiliated with that post at all.
When you start your script, you're declaring a new, empty dictionary. There are plenty of methods to save your inputs, id personally do something like this: #json is the library for handling json files import json default_save='stuff.json' #You're opening your save at startup as read-write. stored_data = open(default_save, "rw") #this creates the dictionary object stored_dict = json.loads(stored_data.read()) #add you code here to append to the dictionary. #converts the dictionary back into a json file stored_json = json.dumps(stored_data) stored_data.write(stored_json) stored_data.close()
Awesome I have an edu email! Thanks a lot!!
&gt; how about vim + console + ipdb? Swap out vim for a good text editor and I might think about it! More seriously though, the productivity boost I get from using PyCharm is well worth the down sides, especially since at work I'm forced to use a Windows laptop, which has a bunch of bad options for terminals. (Never mind that right now the apps I have open are Chrome, PyCharm, and Windows Subsystem for Linux...)
It's another option so I don't know why you'd get flack for it. Use whatever tool you want!
There's also a built in string.Template, but it's not much better than format strings. 
You probably don't want a list of keywords, but instead a more complete tutorial or book. Over at /r/learnpython they probably have sidebar resources and such which will be exactly what you want.
`random.random` does exactly what you want.
downloaded the .zip file, extracted it and ran the setup.py on the command promt
I thought the more stuff I downloaded the more stuff could go wrong, so I've always been afraid of using stuff that I don't completely understand like that. Now that I see that's not the case, is it really worth it to uninstall everything and reinstall it? Excuse my ignorance, please.
I've done meta-programming with jinja2; in particular, I had a Jupyter Notebook that configured and drove a heavy-duty compiled application, then re-processed it's output and generated a Fortran module which embedded the output and modifications to some subroutines based on it, which I could then plug and play directly into the climate model I use (the project was building a parameterization using an offline process model).
Nice! I've been using something like this on Python 3.6: class C: red = '\x1b[31m' reset = '\x1b[m' print(f'{C.red}Hello{C.reset} world')
It can be, although you might get sick just looking at it 
You should take the time to understand what your computer is doing when you install python and when you call python. I know that's not what anyone wants to hear, but this is just going to be torture for you if you don't understand the fundamentals. I'm assuming you are on Windows based on context. I would start with a fresh install of python, and learn to use venv before moving forward.
Check this out https://www.tutorialspoint.com/python3/python_strings.htm
random.random. Alternatively, if you need a certain precision, you could use randrange and then do division. E.g., something like randRange(0,100)/float(100.0) would give you random numbers 0.000-0.999, wouldn't it?
Yes. 
It's still prevalent anywhere, really. Google is still mostly a Python 2 shop, for example. I have legacy projects that still use it. It's like the metric system; everyone agrees it's better and we need to change, but change is hard. Python 3 is still better and you certainly should start new projects with it unless you have a compelling reason not to. Some popular libraries (eg, Django) are also planning on or already have dropped support for Python 2. There are a handful of neglected or abandoned libraries that don't work in Python 3, but those are few and far between. Unless there's some critical data science library you need that is Python 2 only, I would strongly recommend using 3.
Clearly they haven't got everything ported to 3.6.x yet.
I don't see a reason not to use containers if that's what you want to do. Virtualenvs give you separation and control over your dependencies &amp; Python version. Containers will do exactly the same for you, though as I have not integrated them into my own workflow I can't speak to how well debugging in a container will work. For deployment I think they're actually better, as you create the container once and *know* it works, vs Virtualenvs that are not quite foolproof.
Writing a desktop app using PyQt5. I'm trying to get PyQt5 to play nice with Pyro4. Pyro4 is awesome, btw. 
This is interesting... It looks a lot like SCons, which I've been using heavily. I think it would be informative to see a side-by-side comparison with SCons in the documentation.
I prefer colorama's approach imho
Here's a decent thread on persistent, Connection Pooling options - if that's really what you want. https://stackoverflow.com/questions/98687/what-is-the-best-solution-for-database-connection-pooling-in-python
Many thanks for your reply, I was looking for the "one and obvious" recommend way to do this and unfortunately, as you said, there is none. I had to resort to a hack [from here](https://github.com/ionelmc/python-hunter/blob/master/setup.py) to get this working. It's a pity there is not a consistent and recommended way to do this and we have to resort to hacks. Just looked at vext and noticed you are using the same method :-)
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [ionelmc/python-hunter/.../**setup.py** (master → a6eb7a0)](https://github.com/ionelmc/python-hunter/blob/a6eb7a0faa4fd71acdfa4b3559516a16349ab1e1/setup.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dksspq6.)^.
Isn't there a free community edition as well?
Who decides when something is ready and complete enough?
if you do from random import random from decimal import Decimal Decimal(random()) it seems to return random number between 0 and 1 with 53 decimals of precision. Adjusting the precision doesn't affect it.
thanks beatle42! you've helped me google better. i found pickle as a solution. still trying to make it work but closer! 
This is probably cleaner than my suggestion. How does Decimal work? Does it round or truncate?
hey diagnosedADHD, thank you so much. still trying to make it work as i've not used json before. thanks again for the clear explanation! 
I cannot remember, you'll have to read the python docs. If I remember correctly, you can configure it even how it rounds numbers. It depends on what the OP is trying to do if decimal or some other is a good choice. https://docs.python.org/3/library/decimal.html
thanks Swedophone!
Perhaps `&lt;FG,BG&gt;text text&lt;/FG,BG&gt;`. That way opening and closing pairs can be unambiguously matched AND you can do goofy shit like `&lt;FG1,BG1&gt;This is&lt;FG2,BG2&gt;goofy shit&lt;/FG1,BG1&gt; for real &lt;/FG2,BG2&gt;`.
The [package](https://pypi.python.org/pypi/kolors) lists `https://github.com/h3/django-pdfutils` as the homepage. That doesn't look correct... edit: sent a [pull request](https://github.com/h3/python-kolors/pull/3) for the packaging issues
I was at a hackathon, and needed to control a drone so that we could fly it with hand gestures. We got our hand gesture controller working quickly, but the event didn't actually have a USB radio for the drone! We had a standard controller, which is designed to let other controllers pass through it (so amatuers can fly, but in an emergency a pro can take over). The cable for this is 3.5 mm wide. We used the audio jack. Functionally, our program wrote strings to audio output, and we debugged it with an osciliscope. I looked back at the code - I have no idea how it works now.
That's neat!
For a very complex part of a software I'm building I ended up using the template approach to keep the code clean. A little more work but the result is very clean :)
At least do &lt;/&gt;
Use f strings?
also, colorama works (mostly) on windows consoles that don't directly support ansi escape sequences
It is a tradeoff. You _can_ use containers for this purpose just fine. The drawbacks are that containers will tend to be larger in memory and on disk, and debugging them can be more of a hassle because you have to expose ports from the container to host and then connect in with a "remote" debugger, if you want to persist files you have to mount a volume from the host into the container and if you want to pass in environment variables you have to do that explicitly as well. On the other hand once you have those things sorted out your container can be easy to deploy because you only need to account for those ports, environment variables and volume mounts on whichever machine you're deploying to, the rest is self-contained.
[removed]
Yeah I know I could get away with better perfs without regex, no doubt, but it started as a little utility function in my project that I tried to keep short and sweet. I wasn't planning on releasing a package, but know I guess I can just tell people to make a pull request lol ;) That said I'm split on the idea of using proper XML, in an ideal world yeah. However, it would make my little function depend on a *huge* and complex library (that isn't used in most of my projects) and I would utilize like 0.1% of XML capacity because shell colours are well, very limited in features. That's why I opted for a simpler bastardised XML format that could give me just what I need. Thanks for the inputs :)
Sorry, wrong page on the Pypi desc: https://github.com/h3/python-kolors Edit: fixed
And I'd like to propose that everyone has a clean and decent website to publish to the world before they reserve a short and sweet domain name. And whatever happened to release early and often ?
Cost 30$ and knowledge should be free :(
Go to python.org and download the latest stable Python 3. You don't need to run the same version.
Why should knowledge be free? Can I take your laptop for free or will you insist on selling it to me?
It's not mostly for web templates. At work they do everything with Jinja except generate HTML.
In my experience teaching python, LPTHW is really not that good, and there are tons of other free Python 3 online resources for learning. https://www.reddit.com/r/learnpython/ https://www.reddit.com/r/learnpython/wiki/index
One thing that's great about the Python community is that they're a friendly, helpful and generally trustworthy bunch. Asking for a pirated copy of a current book here? Maybe better learn Java or PHP or something the hard way....
On linux I'd use "ncdu" to locate the largest folders and files...
You should look into using tri.declarative to turn your apis into nice declarative ones. 
Yeah I like the idea, with one little tweak to make it more concise and logical with shell colors: &lt;fg red&gt;Red text&lt;b&gt;Red bold text &lt;bg blue&gt;Red bold tect on Blue background&lt;/bg&gt;red bold again&lt;/b&gt;Just red again &lt;/fg&gt;
Yes. The "buy" link is just informing you that this is GPL 3.0 licensed, thus no need to buy See https://stackoverflow.com/questions/2280742/can-i-use-a-gnu-gplv3-program-for-commercial-purposes IANAL
further, for node, you can just create a node_modules volume that has everything you need in it, and mount it whenever you want to build something.
windows .. what is that? :D
Knowledge is free. Just read the Python documentation. 
If you convert your readme to reStructuredText, it'll look properly on the PyPI listing. You can just do `pandoc README.md -o README.rst &amp;&amp; sed -i 's/[.]md/.rst' setup.py`
No, because you end up using f strings for color coding and actual interpolation. I find this way cleander and more readable: print('[&lt;red bold&gt;FAIL&lt;/end&gt;] &lt;orange&gt;{}..&lt;/end&gt;'.format('Something')) Also, I'm not sure either how you could express "&lt;red bold&gt;" with f strings without duplicating tags...
The book is not free. It's understandable that you would expect it to be, since the one for Python 2 was free. However, I would suggest any number of free resources that aren't this one at /r/learnpython. 
What does "actual interpolation" even mean? Your example is broken too because the parameter is hardcoded so there is no need for formatting at all. I'm going to pretend here that your example made sense and looked like this: print('[&lt;red bold&gt;FAIL&lt;/end&gt;] &lt;orange&gt;{}&lt;/end&gt;'.format(foo)) And then of course it becomes obvious why you wrote the example incorrectly because f strings is much nicer: print(f'[{color.red}] {color.orange}{foo}{color.reset}')
Yeah I know click and it's a really great library (I also like docopts in the same vein). [Here I explained why I don't like function or concatenation techniques](https://www.reddit.com/r/Python/comments/6pu1fd/this_is_how_i_always_really_wanted_to_output/dksc1p2/). That said I could really see my project being a syntax wrapper for blink.style or another project like this. I will definitely ponder on that.
You can use ```str.format``` but it's not as nice: def shout(name): return name + '!' print('{} {}'.format('Hodor', shout('Hodor'))) print('{first} {last}'.format(first = 'Hodor', last = shout('Hodor'))) keywords = {'first': 'Hodor', 'last': shout('Hodor')} print('{first} {last}'.format(**keywords)) &gt; Hodor Hodor! &gt; Hodor Hodor! &gt; Hodor Hodor!
Whatever you say buddy
Almost, just a missing slash :) pandoc README.md -o README.rst &amp;&amp; sed -i 's/[.]md/.rst/' setup.py But thanks, that's really sweet (and done). **Fun fact**: At my previous job I used pandoc (with a lot of pre and post processing) to successfully convert 7GB of documentation written in malformed 1997 HTML embedded inside custom XML. ^I ^felt ^I ^was ^dying ^inside.
Give pyenv and pyenv-virtualenv a try. It automates it all! 
Code academy is still 2.7 iirc, I would grab something like the continuum analytics python distribution since it is a virtual installation you can wipe later. You can use either 2.7/3.6 with that as well and mess with it a much as you like a just deleted it without fear of messing up your system install of python (if that exists). Really i'd say learn 3.3+ instead of py2.7 but it won't matter that much once you get the basics down you can move over and trying to track new ideas + switching versions between CA/computer might be too much at once. Once you have the install you can use iPython or Jupyter notebook to do basic things or just use a text editor and run them on the command line. 
How is this even remotely "(Checks if terminal supports color before vomitting ANSI codes)"? sys.stdout.isatty() is also true, when the terminal is a monochrome VT-100.
And also somehow go back in time so this becomes the SGML/XML/HTML standard, too.
Damn you StackOverflow.
 import random as rd number = rd.choice([i/10 for i in range(10)])
Use curses instead: import curses curses.setupterm() if curses.tigetstr('setf') is not None: print (curses.tparm(curses.tigetstr('setf'), curses.COLOR_RED).decode('utf-8')) # Red foreground, if supported. From man 5 terminfo: · To change the current foreground or background color on a Tek‐ tronix-type terminal, use setaf (set ANSI foreground) and setab (set ANSI background) or setf (set foreground) and setb (set back‐ ground). These take one parameter, the color number. The SVr4 documentation describes only setaf/setab; the XPG4 draft says that "If the terminal supports ANSI escape sequences to set background and foreground, they should be coded as setaf and setab, respec‐ tively. EDIT: Added a snippet from the terminfo man page
A corporate environment that some of us exclusively. 
Yea... so sad with lost opportunities:(
&gt; **This software is currently in alpha phase and not ready for production use**. The API should not be considered stable. The website is not very polished. I just tried to get the product out as soon as possible, since I wanted to release it early. Expect many improvments in the near future, especially on the documentation. As much as I dislike gmake (tabs), it works. It's consistent and available on every platform.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Open command prompt/terminal and type Java -version. If it still outputs 1.7 then "Java" is still linked to 1.7. You could fix it in the os, or use the full path to 1.8
I would recommend [waf](https://github.com/waf-project/waf).
The name cook is already taken for a build system.
Will definitely do, thanks!
Wouldn't ncurses by a bit much? Looking online it seems like colorama is pretty much the exact module for this sort of thing.
With this solution, there is no support for function calls. You simply calculate in advance the result of the function "shout".
I guess it's not a problem for a large app. But this library has a dozen files. Sure it has support for caching, security, importing templates, i18n and all, but that's kind of big for what I use it for.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
1. Use absolute paths to explicitly specify the Java version you need. 2. Use jython
You just need to add a condition to your while loop. valid_input = False while not valid_input: response = input(prompt) if 0 &lt;= response &lt;= 30: valid_input = True else: print('Invalid input') return response Your loop accepts inputs until the if statement is true. 
I know, I was wondering if there's a library with a nice API for something like this...
Chemical engineer here. Check out pandas and matplotlib for example. You can write automated scripts to take a bunch of similar spreadsheets and automatically generate a folder full of graphs. Also, if you need to do anything numeric, like root-finding or solving large matrices, numpy and scipy have excellent resources. Just write a function, give the tolerance(s), bounds (if necessary), and it's done. 
From the description at github: &gt; .... Colorama makes this work on Windows, too, by wrapping stdout, stripping ANSI sequences it finds (which would appear as gobbledygook in the output), and converting them into the appropriate win32 calls to modify the state of the terminal. On other platforms, Colorama does nothing. So, unless there's more than one module with that name, it will not help. Cureses isn't needed either. It's just the easiest way of querying the terminfo database. 
Like a form library for console?
Why not go a bit further and just use basic substitutions that are omitted if the terminal doesn't support color? Supporting full XML for something this basic seems like you're going in the wrong direction complexity-wise. I mean I can't imagine someone is going to need nested style definitions (e.g "everything red text, this part in the middle cyan background") and even if they do this code doesn't do that. It seems more reasonable to just say "the coloring changes to this" and leave it set like that until the script clears it somehow. Simpler to implement and lets you put more effort into detecting color support.
Oh that looks nice! Unfortunately I don't have the authority to switch build systems at work, so I'm stuck with SCons for now.
Just something to make sure the user enters a correct value (in console). With different kinds of filters, converters, etc.
it outputs 1.8, and the java works fine when i run java specifically. only having an issue with python--&gt;java
Can yoi give an example? 
I think the problem is too simple to merit a library. It's 10 lines tops. def restrained_input(verifying_function, prompt=''): while True: response = input(prompt) if verifying_function(response): return response else: print('Invalid input') Than just call it like: restrained_input(verifying_function= lambda x: 0 &lt;= x &lt;= 30, prompt='Pick a number between 0 and 30: ') 
Alright, not necessarily incorrect, but it seems pretty obvious why the times vary, list(x) does more than [x]. Also, for cases where the difference doesn't matter, the performance difference doesn't make a difference.
how do i do #1? like i said, java 1.8 is what version appears and is what is installed when i run java -version in the command line. only getting problems when i try to run a java 1.8 class file with latest version of python, which appears to somehow being pointed to java 1.7, even though i don't think i have 1.7 installed on my machine
You're correct :) The post is for people who haven't thought about. An important detail is that it wouldn't really matter what dict() did, because it is slower just because of the lookup time.
And what if I have a 100 more of these, each wirh unique filter options? You use 1000 lines to create 100 almost identical functions with one or two different lines?
Do people really not like `make` that much?
 from plumbum.colors import red, blue, bold, bg print(f"Some {red | 'Red'} and {blue | 'blue'} text") print(bg.green | 'Some green background') print(f"Some {bg.cyan &amp; bold | 'interpolation'}")
Why make a wrapper around youtube-dl instead of contributing directly to the project?
Probably relates to the syntax. People may just prefer to learn one or two languages and then gravitate towards the stuff that looks like what they're already familiar with. For example [meson](http://mesonbuild.com/Tutorial.html) syntax is pretty trivial if you already know Python.
Check out the feature lists of commercially available camera monitoring programs, go from there. BlueStacks is a good place to start.
I guess I can understand. It's just weird to see so many people try to reinvent the wheel to create what is essentially fancy shell scripts. `make` is old but it's battle tested and has a lot of features that not a lot of people know about. It's always a good system to learn imo.
Considering only software: Send alerts if particular events are detected? Remote monitoring? Detect if the power has gone, and it's switched to battery back-up. Auto-balance light levels so the picture isn't dogshit whenever a car goes by? Where is my cat? Do you have audio? You probably want audio too. 
In practice how is that different?
What operating system?
win 7
and the environment variable PATH seems to be pointed to my java 1.8 jre/bin directory correctly...
This is a great use of containers. Do it.
because building extractors for websites like this is against their rules.
No, call the function 100 times with different parameters. If your program needs 100 unique conditions there's no way around writing them all out once. Every unique condition is a one liner now, if you can fit the criteria into a lambda.
Yet you've done it anyways. Bravo.
That's amazing!
This error means you don't have enough permission to install virtualenv to this folder, as it is located on the Program Files folder (Windows blocks the access from regular users), so, to fix it just run the Command Prompt as administrator and it should work.
Another point is compatibility across operating systems, especially with python packages that are linked against system libraries. With containers, you're golden since you take care of those dependencies in your Dockerfile. With just virtualenv, there's a lot of "well do you have libxml-dev installed? Oh you have to install that first, then try pip install again. Wait you're on windows?"
How is this different than SCons, or any of a dozen other build systems that use Python as the build specification/configuration language? 
Okay thanks so much! That worked, does that mean that in the future I am able to just run a normal command prompt to do the things that I need to do? (I am used to working in IDEs to code and using the command prompt to execute is new to me)
If you don't already know containers well... they are going to add a rather large additional load on your python learning process. Systems like docker are a non-trivial layer to throw on top of your development stack, even though it seems like they aren't at first. Virtualenv is a standard python tool, you ought to learn it if you want to learn python - its far simpler than any container system.
N00b here and was struggling with this myself, even though I was already running the command shell as Admin. I'm currently trying to get a Docker file working correctly so that I don't need to go down this virtualenv route again...
Yeah noticed that in the regex too. Still feels nasty
Literally, you are incorrect, there is no other way to say it. Python 2 WILL be deprecated. It might take a while longer, but it is inevitable within your lifetime, probably the next 5 years or so. At this point, you are living in the past. Further, if you find an absolute NEED for Python 2 after learning Python 3, it has already been mentioned that the transition is not complex with minor nuances like from __future__ import division, etc. There will not be some revival, Python 2 is dying with the exception of die-hard developers who will slowly find that the tools they use will eventually be outpaced by their counterparts in Python 3 which were developed by people who accepted the direction of their preferred language. Therefore, there is no point recommending to new Python programmers to work with, discover, and be disappointed by libraries which will eventually become unsupported. Without support, learning becomes incredibly hard for new programmers, and it legitimately makes sense to start ALL new projects in a language which has guaranteed future support: Python 3. For these reasons, it makes no sense to learn to work within the bounds of nuances which all future releases need not be concerned with to keep alive an old version, dividing the productivity of the Python development team when they could be focusing on improving the aspects of 3 which you are disappointed with. At this point, it's just a problem with revisiting old codebases, which they have provided a package for automating that could be improved if development time didn't need to be divided between effectively two different languages. Unless you make a more compelling case than "whatever you say", you will not persuade anyone to the contrary.
Have heard this for years. Let me know when they stop working on Python 4. 
Make feels really outdated and hacky to me. It's pretty much like C compared to Python. It's definitely powerful, there's a lot of info on it online, but everything I do feels like a hack and not very elegant.
Read the sidebar. Questions go in /r/learnpython. This subreddit is for news, articles, etc. 
Libraries are generally applicable, whereas your purpose is pretty bespoke. Make one function that takes in the prompt string and a callable or string criteria for passing. Make a table of prompts and answers (which might be lambdas), to represent your questionnaire. questionnaire = [ ('Arizona', 'Phoenix'), ('secret number', lambda x:.int(x) == 42), # ... ] Loop through the table calling your interrogation function for each entry.
I would suggest you install external TTS programs and execute them as system commands inside Python. There are a few good options for Linux which are probably available to other systems as well. Really, there is no need for you to constrain yourself to Python modules only.
I'd prefer just about any other systems over having to read or write a Makefile.
Neat stuff!
Looks a lot like meson.
https://doughellmann.com/blog/2012/11/12/the-performance-impact-of-using-dict-instead-of-in-cpython-2-7-2/
I bet it's the insane function call overhead.
Well I can't fit a try/except *and* multiple `if`s in a lambda. I have complex conditions, which is why I need a library of some sort to even build them (and all the conversions). It's just not feasible to change the params for every function call, since I'd need *a lot* of arguments. I need *more* than arguments **Edit:** Here's an example of one of my input functions: def player_input(prompt): while True: value = input(prompt) try: player_id = int(value) except ValueError: print('Invalid player id') continue if player_id not in players: print('Invalid player id') else: return players[player_id] Which I'd like to shorten to something similar to this: player_input = Input().convert(int).any(players).convert(players.__getitem__) target_player = player_input('Choose a target: ') And I have many of these, different spells and items need dozens of different kinds of inputs, often not related to each other at all. I need to be able to generate the inputs on the fly, so a simple function with a few arguments wont be enough. **Edit 2:** I'll just make my own package.
I need a generally applicable solution, I just gave a simple example in the original post (thus the "something like this", it's not my actual code). I will probably have to write my own package though
wrong.
But look at how popular Perl 6 is! /s.
I think you might get a better response over @ /r/learnpython
I believe your graphs have their axis labels flipped, currently showing 10^-6 executions. Number of executions seems it should be the independent variable though. Currently, if you ignore the axis units and were to trust the labels, the trends suggest the shorthands were slower.
History is littered with the corpses of replacements for make. 
Pfft.... Delphi.... $1400 the first year. Of course, if you actually want to use a client/server database, that's extra, bringing it up to $2100. Add another $500 or so to target mobile. Linux is considered an "enterprise" feature, and Delphi Enterprise (which also includes database and mobile) will set you back $3500 to start. There's now no support whatsoever for older versions of Delphi unless you upgrade to the "premium" support plan, which almost doubles the support cost. In addition, thanks to those hefty costs and everyone using Delphi being stuck in the '90s, most sell libraries/components for Delphi rather than open sourcing them. Except to pay $50-$200 or more for most third party libraries that you want on top of the cost of Delphi. 
For the life of me I cannot understand how waf is supposed to work. I've read the docs and examples but they don't make any sense to me. Am I missing some critical context for understanding it?
I am confused. Python3's input() is the exact same thing as raw_input() in python2. Where is the problem?
&gt; One of the things with Python 3, as you know, is that raw_input() was removed. How can I simulate the effects of it using just input()? Actually input() was removed from Python 3 and raw_input() was renamed input().
We use Makefiles all the time. It doesn't matter if we're doing a python sdist, a salt formula, or packaging a go app. For python, `make test` will simply be running `tox`, and various make commands wrap our `python setup.py sdist` or `python setup.py install`. We `make debian` packages with [dh-virtualenv](https://github.com/spotify/dh-virtualenv). For that last one, we have `make debian` that spins up a docker container that runs `make sys-deb`, which does the actual making of the .deb file. If you have all the other requirements, you can just run `make sys-deb` directly without invoking docker. The beauty of all this is that no matter how we actually do the work, the one Makefile creates a standard "api" that can be used by our integration server. Anyone downloading one of our projects can just look at Makefile to see the exact commands that are being ran. It is a bit annoying if your editor doesn't know to use tabs instead of spaces, though this is easily remediated with [editorconfig](http://editorconfig.org/). 
RTFM. The definition of raw_input() on 2.x and input() on 3.x are the same. 
If that concerns you, you are using the wrong language. Python is not the language of choice for speed critical applications.
It's been a long time since I looked, but the gold standard for TTS was always Festival with voices from Cepstral or AT&amp;T. Not sure about a Python module for it though.
Not to mention, even if you are doing something performance conscious, if *this* is your source of slowdown, you have some serious structural issues with your code.
To get an idea of the types of things you can do with python, I'd suggest checking out 'Automate the boring stuff with python'. It will allow you to actually get some things done in a similar vein (automating, etc) to vba.
Use: print("Text") to print 'Text' ending with a line break and print("Text", end="") to print it without line break at the end.
Try specifying the absolute path to the java 1.8 binary, e.g. `c:\java\1.8.0\bin\java.exe` or whatever.
You think'd an optimizer could fix this.
&gt; Any idea what's the status of this project? Sadly, The author Aaron Swartz committed suicide in January 2013.
&gt; does that mean that in the future I am able to just run a normal command prompt to do the things that I need to do? Probably not. Any time you install files to c:\program files you probably need admin rights to do so. BTW, you dont need virtualenv for python 3.6, because it comes with a new built-in replacement called [venv](https://docs.python.org/3/library/venv.html), which works basically the same (if you are following old tutorials).
I can't imagine a real world situation where the performance of instantiating a dictionary would register a blip in performance monitoring. The only way this could be a significant percentage is if the app does nothing else. Hashing values for keys alone would mask this. Iterating over maps, creating entries, doing lookups, doing anything with the maps would make this statically irrelevant.
/r/learnpython
Is scons python 3 compatible yet? That prompted my move to waf.
Docker
Not really. You can redefine any name at any time, so there's no way to look at an expression like `dict()` and assume it will generate an empty dict. The user could have redefined `dict` to refer to anything. Trying to work out if that is the case degrades to the halting problem. 
But I want it to print true at the end of the statement if heads and false if not?
 from random import random def flip(bias): """ Flip a coin once. `bias` is the likelihood of the result being heads, 0. &lt;= bias &lt;= 1. Returns True for heads or False for tails """ return random() &lt; bias def main(): bias = float(input("What bias do your coins have? ")) count = {False: 0, True: 0} for i in range(1, 4): toss = flip(bias) count[toss] += 1 print("Coin flip {} has a value of heads: {}".format(i, toss)) print("Final result: {} heads, {} tails".format(count[True], count[False])) if __name__ == "__main__": main() runs like What bias do your coins have? 0.3 Coin flip 1 has a value of heads: False Coin flip 2 has a value of heads: False Coin flip 3 has a value of heads: True Final result: 1 heads, 2 tails
Not in Python 3.6 with its versioned dictionaries. You can ask "is this the same `dict` I saw last time?" and if so you can reuse it.
I have experience in all of the above except for Django. Are you currently accepting overseas candidates?
Mako is fast and quite Pythonic. You're reading this post thanks to Mako in fact. I have no real experience with others so ymmv. 
The [scipy](https://scipy.org) and [pydata](https://pydata.org/downloads.html) projects are good starting points for using python in finance or science. For automating spreadsheets, the [pywin32](https://pypi.python.org/pypi/pywin32) project will prove useful. Good luck!
Five days ago, [same topic but with strings and with the same result](https://www.reddit.com/r/Python/comments/6ov21k/fyi_blank_string_is_faster_than_blank_stringstr/).
Thanks but I don't get what the last if statement is for?
Opening connections to your database server is more expensive than you think, as is opening lots of them - connection pooling exists for a reason.
Wow, even the charts on both posts are almost exactly the same. Total deja vu.
&gt;deja vu I'VE JUST BEEN IN THIS PLACE BEFORE!
But that has to be at runtime. There is no determining which version of the dict it is at "compile" time.
Yeah, but.. it could still be an interesting question. I certainly learned something.
Writing a program to parse a pom.xml file from a java app and compare the dependency versions from maven central repository to see if ours are out of date. 
You should use pylint [pylint](https://www.pylint.org/) Pylint is a source code, bug and quality checker for the Python programming language. It follows the style recommended by PEP 8, the Python style guide. It is similar to Pychecker and Pyflakes, but includes the following features: Checking the length of each line.
Wow, sorry to hear that...
@desertfish, definitely. Sorry, I'm new to posting these sort of questions and reminders to be more specific are helpful. I was trying to convert my uint8 types of 1's and 0's to ints and floats. That's correct. The output would still be the same as what the uint8 types appear as in my pd.DataFrame (1's and 0's). I just wanted the `pd.DataFrame.dtypes` to output a type that was int or float64 instead of unit8. Does that make more sense? In either case, when I tried a lambda function with the apply method to convert every row of a given column to a float or int, it did not work. `df['col_name'].apply(lambda x: float(x))` where x are the elements of the column didn't do the trick for me. I had to use `.astype()` to help me convert the uint8 types to floats. 
A lot of contention in this thread about this article, but I still learned something. Thanks for posting.
It doesn't make sense to have it sign up only. If you want to make a content site, there should be a lot of immediately accessible information. You need to hook users somehow before they'll decide to sign up.
Quote from [Python FAQ](https://docs.python.org/3/faq/design.html#why-does-python-use-methods-for-some-functionality-e-g-list-index-but-functions-for-other-e-g-len-list): &gt; The major reason is history. Functions were used for those operations that were generic for a group of types and which were intended to work even for objects that didn’t have methods at all (e.g. tuples). It is also convenient to have a function that can readily be applied to an amorphous collection of objects when you use the functional features of Python (map(), zip() et al). &gt;In fact, implementing len(), max(), min() as a built-in function is actually less code than implementing them as methods for each type. One can quibble about individual cases but it’s a part of Python, and it’s too late to make such fundamental changes now. The functions have to remain to avoid massive code breakage.
The description of the pywin32 package says it provides access to the windows API. That doesn't give enough information to help you. Looks like you are writing a keylogger. So which part of it were you unable to port to ubuntu?
python-xlib if you're using an X11-based system (almost always true). Fair warning, it's pretty low-level, and x11r6 was not designed with mortals in mind. Make sure your dragon-slaying gear is up to date. Four inch beard minimum. Also downvote for your crappy attitude.
That has nothing to do with anything. The point is that you have no idea what object the name `dict` refers to just by looking at the code. It could be creating a dict, or it could be doing something else entirely unrelated, like deleting a file or launching a nuclear missile. Obviously it would be silly to name those functions `dict`, but it's possible. 
That's interesting. I don't dislike it, but it just seemed out of place to me.
Off topic but [here's](https://www.youtube.com/watch?v=AbV8KxvNQsk) a documentary on Aaron if you didn't know who he was.
Very good example. Thanks. You may want to get the exception in line 16 to only catch websocket related errors...
There is a list.\_\_len__() method... and all classes that want to work with the len function should implement such a method.
My project being a desktop app, I load my classes once. The templates are executed many times and they can dynamically change. Therefore compiling their values in advance won't work the very moment one value changes.
That's not correct. Python uses dicts to store namespaces, so if it knows that function foo's namespace dict version 31 says `dict == __builtins__.dict` the first time through a loop, and the namespace dict is still on version 31 next time around, then it can use the same `dict` optimization on subsequent iterations.
Do we not like runtime optimizations now?
Thanks for the tip! That was a "I should look up the exception type once I finish this line" then immediately forgetting to go back. 
re: the last bit, yes, I'm pretty sure python stores string representations, and along with that, the lengths of those strings for int objects. Makes it much faster than actually doing the math.
HIGHER ON THE STREET
[removed]
…yet.
That's a feature of CPython. It is not a feature of the language.
This is a reasonable opmization for a JIT like PyPy. I doubt CPython will go to this trouble.
Thanks for the reply! I'm not truly beholden to anything except a book I was using for practice called "data science from scratch" 
Sure, but I presume PyPy et al would think that's a spiffy idea, and that crew isn't exactly incapable.
They might be able to determine that the dict is untouched by other means.
This is about single sane use for make - have it invoke other applications that do real work. Scripting a complex build system in make is a death wish.
Either that or it takes about 30 years to run a few dozen executions.
So yea, a form library
So when the "template executes" re-run the string formatting? Post a small working example of what you have.
Do you know something I don't? 
You are correct, it doesn't make sense to make log in attempt. But it's my first time working on any Django project and I was learning how Django Authentication works that's why I made that. (Even I felt that way that's why I added one button [Enter as guest] so that you need not to sign up)
Still there were people in the previous str() thread that claimed they could measure this in their uwsgi throughput.
I'll provide this evening an example (it's now early morning for me).
I'm extremely optimistic that JITs will allow Python to beat statically compiled languages.
My guess is because the language has a built in optimisation for the empty case.
There are 2 main things which slow down python code much more than what a cursory glance might convey... 1. Function calls - python function calls are expensive 2. Python bytecode instructions - each bytecode instruction is about 30x slower than a C instruction. Looking at "floor(log(n) + 1)" vs "length(string(n))", each has 2 function calls... but the first one has an extra +1. This "plus one" will cause a few more python bytecode instructions of the type 'load const 1' and 'add const'. Now, each python bytecode takes about 30x more time as compared to a similar C instruction... this is because python does a lot of stuff between the execution of 2 bytecodes. I talk about a little more in this answer on stackoverflow, which deals with similar issues... https://stackoverflow.com/questions/33784519/how-is-min-of-two-integers-just-as-fast-as-bit-hacking/33792518#33792518 
Micro optimisations: beware obsessing over one yet to be planted flower when tasked with creating a garden.
Python is a multi paradigm language. Object oriented and functional. So using a function instead of making it a method is perfectly valid. Just like print() is a function. 
How about somewhere else? CodeAcademy still teaches Python 2 and whilst it could technically still be okay, the rest of the world is moving(or has moved on) to Python 3. Try something named "Automate the Easy Stuff using Python" or the Python course on edX
Nothing happened to release early and often, thats obviously very useful. But I think your Gist was more than enough to gather feedback. Make it "better" before actually releasing something that people might start building upon trough a You've got an API out there now, who knows what third party software you break when you change it to incorporate the feedback from this thread. Can't really go back now, unless you want to go to version 2.0 or some other "this breaks you code" style number change. Building some code is one thing, thinking about the API is just as much part of the job. Also, yes I'd love for people to only publish stable API's and websites on which we can rely, that thats not happening shouldn't be an excuse to not do so yourselves imho.
I once used a SAX parser to crunch a Wikipedia dump. In that case I saw a very real speedup by using str.join() over adding strings one at a time. 
Have you tried https://github.com/tartley/colorama ?
Don't be so angry because someone squatted a cool namespace that was available. The only reason why I took the time to package it is that someone asked for it. And if the API change, it shouldn't break anything if developers freeze their dependencies as they should. API changes are part of software development lifecycle and this is why we freeze our dependencies and provide upgrade paths. Plus, I've already merged 3 pull requests.. so it should meet your highest standards eventually ;) P.S.: stay away from nodejs, they ecosystem will drive you mad in 2 weeks.
[Yes ;)](https://www.reddit.com/r/Python/comments/6pu1fd/this_is_how_i_always_really_wanted_to_output/dksc1p2/)
Also of note, I don't think that's the case for `len` but Python's protocols can also have fallbacks. A notoriously annoying one is `iter(a)`, it will invoke `type(a).__iter__()` if there's one, but if not it will look for `type(a).__getitem__` and invoke it with sequential indexes, which can be unexpected.
Wait until these guys discover I/O.
CodeAcademy indeed teaches Python 2 while DataCamp teaches Python 3. I'd say that DataCamp is perfect if you're a real newbie and you have no clue about programming; Let's face it, the beginner material for almost any programming language is the same, even if focused on data science - otherwise, you could also try out the book "Python Programming for the Absolute Beginner", which has also helped me. 
is it just as an exercise, or is there a reason the [maven versions plugin](http://www.mojohaus.org/versions-maven-plugin/examples/display-dependency-updates.html) isn't working for you?
I think you might be surprised, people do really weird shit in the real world!
https://en.wikipedia.org/wiki/Ad_hominem And yup, nodeJs is a mess, let try to avoid anything that smells like that.
**Ad hominem** Ad hominem (Latin for "to the man" or "to the person"), short for argumentum ad hominem, is now usually understood as a logical fallacy in which an argument is rebutted by attacking the character, motive, or other attribute of the person making the argument, or persons associated with the argument, rather than attacking the substance of the argument itself. However, its original meaning was an argument "calculated to appeal to the person addressed more than to impartial reason" Fallacious ad hominem reasoning is normally categorized as an informal fallacy, more precisely as a genetic fallacy, a subcategory of fallacies of irrelevance. However, in some cases, ad hominem attacks can be non-fallacious; i.e., if the attack on the character of the person is directly tackling the argument itself. For example, if the truth of the argument relies on the truthfulness of the person making the argument—rather than known facts—then pointing out that the person has previously lied is not a fallacious argument. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.24
Isn't this exactly what conda does?
That's the instance not the constructor
Who uses `dict()` instead of `{}`? Or `list()` instead of `[]`? What are people being taught these days? (To be fair, I've been using Python since 1.5, and have to sometimes remember to use `while True` instead of `while 1`.) 
It Sucks
[argparse](https://docs.python.org/3/library/argparse.html) may help, specifically, [this section](https://docs.python.org/3/library/argparse.html#action-classes) on the `Action()` class, and [this other section](https://docs.python.org/3/library/argparse.html#action) on the `action` keyword. One way of addressing your problem would involve extending `Action()` by overriding its ` __call__` method. [This example](https://stackoverflow.com/a/37471954) might provide a better understanding of how to do that. If you haven't dealt with argparse before, [here is a tutorial](https://docs.python.org/3/howto/argparse.html#id1) that covers the basics. Even if that's not exactly what you are looking for, something like argparse makes setting up command line programs easier on both you and the user. It has a built in `-h, --help` options, which, when used, will print out a nice list of all switches you've defined along with your help messages. Argparse associates input with switches, and those switches are essentially attribute names, which greatly helps out with flow control as well. This is more boilerplate related, but if you have to do a lot of this, it might make addressing the other areas easier. 
JK! 😅 it's really cool, do your best to get the Css on the second page it will be quite useful.
http://www.lfd.uci.edu/~gohlke/pythonlibs/
I'll piggyback - any free TTS solutions for Windows? (Can be Python modules or external)
Although it may not be good for all tasks (like pixel perfect or absolute positioning) , I found Weasyprint very easy to use and good enough for tasks like invoices and the like.
It doesn't rely upon concatenation. How you use it is entirely up to you. I use it with jinja2 which makes it look like this: {{ Fore.RED }}Failure occurred in {{ number }} seconds.{{ Style.RESET_ALL }} It's not quite as clear as HTML but when I'm writing CLI apps my templates are never complicated enough for it to matter.
To filter out matched rows you could just exclude them: df = pd.DataFrame(data={'col1': [1, 2, 3, 4, 5], 'col2': [2, 2, 4, 4, 6]}, index=range(5)) filtered = df[df['col1'] != df['col2']]
The code implies that you've never heard of it given that you reinvented that wheel.
I am about 50% through the Python 2 lesson at codeacademy. How much has changed? Should I just stop?
Most of the scientific/numeric Python people I know use [Anaconda](https://docs.continuum.io/) to manage all the relevant packages. Think of it as "pip but designed specifically for numpy/scipy users who use Windows".
It was legal in the SGML-formulated versions of HTML, up to and including HTML 4.01 (the last one before the HTML5 effort moved off SGML), because the SGML declarations of HTML included `SHORTTAG YES` in the `FEATURES`, and `SHORTTAG` enables exactly what you want. So a compliant HTML parser would in theory treat `&lt;/&gt;` as closing the nearest unclosed tag. However, that bit about "a compliant parser" is what sinks you, because we're talking about web browsers here. A variation on this is why XML's empty elements look like `&lt;element_name /&gt;` in the short form. This is equivalent to an SGML feature called `NET` (Null End Tag), with the delimiter redeclared from the default `/` to `/&gt;`, and only permitted on certain elements whose content is declared empty.
I have used a number of different IDE's over the past few years (pycharm included). For me, it really depended on what i was doing and Pycharm wasn't always suitable. Since i spend most of my time in a terminal i always find myself going back to an ipython/jupyter console then using vim inside of the terminal and atom outside then moving code around as required. If you prefer the editor and ipython terminal built in Spyder would be perfect. It has a built in qtconsole ipython terminal and great editor, plus it supports a number of themes which i found lacking out of the box in pycharm. My way works very well for me but may not fit the bill for you. I would recommend Spyder overall but make sure you try a few IDE's before settling with one. In the end you will always find yourself going back to the one you felt most comfortable with. 
&gt;I'm building out an Nx3 numpy array where each item is an MxM matrix. &gt; &gt;I'm adding an N+1th row to the Nx3 array using numpy vstack. &gt; &gt;Adding the new row is changing the values in the matricies in ***the Nth and previous rows***
While I can't provide you with a detailed comparison yet, let me just say that I think Cook should be quite a bit faster (even now being not really optimized), although I didn't do any benchmarks on that. You can however take a look at https://getcook.org/comparison/ where I am comparing Ninja to Cook. Ninja is one of the fastest build systems available (besides Tup, but that one has a completly different approach). Also, Cook is much more declarative and pythonic. As far as I know, SCons still searches for #includes by using a regex, which is often fine. But Cook delays implicit dependency search by using information provided by the compiler about includes. A little explanation is provided here: http://aosabook.org/en/posa/ninja.html#dependency-files (Cook basically uses the same mechanism) There is a lot more to say about SCons vs Cook, so I should try to make the comparison page a little bit more informative - thank you for your input.
lol thanks
list(x) doesn't just do more, it's not even functionally equivalent to [x]. :-)
optimizer?
I don't think I reinvented Make. If you want to make a comparison like that, then you I think you could say I reinvented CMake, Bazel or another high-level build system, where it is not so painful to implement a complex build. CMake and Bazel have their issues and the consensus seems to be that there are already a lot of build systems - but "they all suck". Cook is still far from "not sucking", but I think it does a lot of things right other systems are doing wrong.
But that would check as an exact match. I want to see if a text (string) value in col1 is 'contained' with in that of col2. For example, 'abc lmn' is 'contained' in 'xyzabc pqr', that's the reason I am using str.contains() function but some how there seems to be some problem in some of the cells, after running for some time it gives me an error saying ... "TypeError: unorderable types: str() &gt; float()"
Part of a compiler. You generate the byte code, then make a pass to speed things up where you can.
And you know what? When that gets released, I will continue to recommend that NEW Python programmers work with the latest release of the language as long as their library requirements are met. But fighting the direction of the developers is not how we create progress.
Sure, although concatenation speed vs join is known thing (iirc because of all the allocations for the intermediate results). Isn't that why formatting strings is recommended over concatenation? 
Looks nicer than reportlab, but can't write PDFs at all, only generates them. 
did OP stutter?
Looks like a good start. There are typos in some of the examples from the readme - Oknime.py instead of okanime.py. Also consider writing a setup.py and packaging it so it can be installed or at least adding a "#!/usr/bin/env python3" at the top of the file so it can be made executable.
/r/UnexpectedEurobeat *Of course* it's a thing (okay, with only 2 posts, but still...)
**Here's a sneak peek of /r/UnexpectedEurobeat using the [top posts](https://np.reddit.com/r/UnexpectedEurobeat/top/?sort=top&amp;t=all) of all time!** \#1: [Previa D](https://www.youtube.com/watch?v=EtFExqf55rU) | [0 comments](https://np.reddit.com/r/UnexpectedEurobeat/comments/4rhtki/previa_d/) \#2: [Trains are so slow!](http://webmshare.com/play/GX001) | [0 comments](https://np.reddit.com/r/UnexpectedEurobeat/comments/3kh36l/trains_are_so_slow/) \#3: [Horrible car crash](http://webmshare.com/play/OnDDa) | [0 comments](https://np.reddit.com/r/UnexpectedEurobeat/comments/3kh4m5/horrible_car_crash/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
That's probably a different issue. `str.join()` is an O(N) algorithm which takes time proportional to the number of substrings being joined. Concatenating strings with `+` is an O(N\*\*2) algorithm which, in the worst case, may take time proportional to the number of substrings **squared**. Edit: formatting.
Sure. When someone says "an optimizer can fix this" my brain assumes they meant a compile time solution for some reason. 
https://morepypy.blogspot.com/2011/02/pypy-faster-than-c-on-carefully-crafted.html https://morepypy.blogspot.com.au/2011/08/pypy-is-faster-than-c-again-string.html 
Ah. You can write your own function then: def is_not_match(series): return series[0] not in series[1] df = pd.DataFrame(data={'col1': ['og' for _ in range(5)], 'col2': ['dog', 'pig', 'frog', 'cow', 'hen']}, index=range(5)) df = df[df[['col1', 'col2']].apply(is_not_match, axis=1)] See [the 'apply' function](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.apply.html) Edit: changed 'in' to 'not in' to retain nonmatches
&gt; Python is not the language of choice for speed critical applications. Yes, but in this case, the reason it's faster is that it's the preferred use, and therefore optimizations exist in the Python runtime.
I dont think execution big O is the right metric. Memory allocation is the real killer with serial concatenation. 
Because python syntax in the past rely on functionality programming 
Because python syntax in the past rely on functionality programming 
I've just tried that before seeing your answer (by seeing [this](https://stackoverflow.com/questions/35380933/using-pandas-to-merge-two-datasets-based-on-a-function-rather-than-exact). But the script is not yielding any rsult even after 10 minutes. After about 10 minutes, my PC became irresponsive and logged out. I've to login again and saw that nothing happened. I am using Debian 9 stretch with virtualenv with latest version of pandas. The length of my dataframe is 10492841. My function to apply for each row is as below. def check_containment(row): if (row['A'].str.len() &gt; 1) and row['B'].str.len() &gt; 1): return row['A'] in row['B'] else: return False Should I do away with that length checking ?
This looks very cool! I'm excited to try it out.
&gt; "We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil" -- Donald Knuth.
There is a footnote at the bottom of my post linking to his :)
On the python-dev mailing list people claim that some of the big players (maybe Dropbox or someone along those lines) stopped using NamedTuples because of the instantiating time. Ofc they are longer, but if you have millions of lines of code, I guess it could be relevant for other types too.
Haha. {} is definitely most common these days (thankfully). I think it's much easier to read and therefore more pythonic. I have seen something like dict(a=0) instead of {'a': 0} quite a few times though. 
Guido doesn't.^1 They make the interpreter more complicated and hard to understand, increase memory consumption, often introduce weird bugs, cut down the number of contributors (compare the number of people who understand how CPython works, compared to the number of people who understand how PyPy works), and at the end of the day, you're never going to be fast enough for some people. ^1 A gross over-generalisation. He's probably okay with *some* runtime optimizations, if they aren't too "clever" or difficult.
Interesting. I use NamedTuples all the time. I wonder what the time is compared to what, just tuples or maps. I also prototype in Python and if it's time sensitive, rewrite it in java. My latest app was over ten times faster in java, quite shocking since it was mostly database stuff. Inserts were the killer using postgresql. Also database work in python is horrible compared to java, jdbc is much more consistent across databases and schema information is much better defined.
Historical reasons, in other words bad design decisions in the past. Python is full of them. See other built-in global functions, special rules for built-in and extension classes, overcomplicated multiple inheritance model, conflicting object properties and AttributeError exception handling, crippled lambdas, handling of multibyte strings etc. Shallow hasty decisions, attempted partially fix in Py3 and all the issues and additional work it caused to developers. Python is a pragmatic language to make job done fast, but no way some exemplary way how to project a programming language with consistent type model.
This is the right answer. Use Anaconda.
&gt; In fact, implementing len(), max(), min() as a built-in function is actually less code than implementing them as methods for each type. I'm sorry but this is a bullshit. There is no reason why they should not add a collection class which would define all those common methods at one place, mixed in by all related classes.
Can someone explain the advantage of this? It feels like you just have to write text files in another format then it converts them to html. Why not just write html so you aren't stuck with files formatted for this one generator? Swap CSS files if you want to change the appearance. The only thing I see on the demo site that adds value is that it does some minor syntax highlighting of code. Edit: thanks for the replies, I see the light! Didn't realize there was a Markdown standard.
I don't believe {} is in any way optimized, it's just when you do dict() it first has to check that you haven't done something stupid like dict = {"name":"address"}
Those plots are so hard to read!!! Whomever made them and thought they would be fine should be severely reprimanded!
First of all, this belongs in /r/learnpython second of all, I do not understand a an **N**x3 is made of **M**xM. Did you mean `NxM`? I am also assuming by the fact that you said `Nx3` that you are just buildig a 2D matrix. It should be really easy. Consider the following: A = np.array( [[1,2,3],[3,4,5]]) print('A') print(A) B = np.array([[6,7,8]]) # Notice B is a 2D row-vector print('B') print(B) C = np.vstack( (A,B)) print('C') print(C) A [[1 2 3] [3 4 5]] B [[6 7 8]] C [[1 2 3] [3 4 5] [6 7 8]] 
There is something to be said for the simplicity and readability of Markdown (or other light weight markup languages). I have all of my notes in Markdown and use my own code to serve them dynamically (with references and a bunch of other stuff). The nice thing is though, the source is just text that I can easily parse without HTML. I usually write my notes on my computer where I could really use just about anything i wanted, but there are times when I write them over SSH in vim. And there are lots of times when I look at the source and *not* the rendered HTML.
i'd just stop honestly. code academy helped me get my feet wet but nothing really stuck with me. i'd give sentdex a shot- he's got a crazy awesome youtube channel on python and pretty much anything you could ever want to do with it. been watching his videos for a month now (starting from total newbie level) and am completely comfortable writing scripts now 
I think you are confused. In Python 2, `raw_input` returns the user's input as a string. In Python 3, that function was renamed to `input`, and does exactly the same thing. &gt; `x = input("foo") x = (str(x)) print(x)` but that didn't work. What do you mean by "that didn't work"? We're not mind-readers. What were you expecting it to do and what did it actually do? Apart from the pointless call to `str(x)` (`x` is already a string, calling str() on it is a waste of time) it works fine for me. The only thing I can guess is that if you accidentally re-defined str by assigning a variable to it: str = "Hello World!" # much later... response = input("What's your name? ") response = str(response) # Pointless call to str now fails. you'll get an exception because "Hello World!" is not a callable function. 
What do you mean by "dragons in python"? Do you mean bugs, gotchas, landmines for the unwary? I suppose all languages have some, but Python is pretty good and doesn't have many. People used to write "Here be dragons" on old maps to indicate places that were unmapped and dangerous. That's not like Python at all. 
Since they talk about the c code base in that quote, where would you do that exactly?
The literal declaration is more intuitive in my eyes. I wouldn't say this is a matter of optimisation, just a matter of preference where one choice happens to be a bit faster. 
I think so, but it's missing some features of course. A beginner might not care though but hey if you can get the full version for free then why not?
Seems very likely. In [91]: dis('d = {}') 1 0 BUILD_MAP 0 2 STORE_NAME 0 (d) 4 LOAD_CONST 0 (None) 6 RETURN_VALUE In [92]: dis('d = dict()') 1 0 LOAD_NAME 0 (dict) 2 CALL_FUNCTION 0 4 STORE_NAME 1 (d) 6 LOAD_CONST 0 (None) 8 RETURN_VALUE
trying to figure out how to download camelot. I see the purchase link but i thought it was open source. difficult to find the source from the website. anyone have any success with that?
Actually, there's a ton of them. I haven't explored very much but I remember being satisfied with espeak, which is available on Windows as well. It's free though so it isn't state-of-the-art or anything. Also, it's been a while since I looked into it so I can't be sure it was espeak or some other package. Can I ask why you want one? Is it game-related? It's been a while since we last spoke, pal, happy to see you're still here :)
Where is this checking done?
Still teaching myself python by trying to set myself challenges and then complete them through lots of furious Googling. The idea of this is to log the songs, artists, albums and genres I'm listening to on my Squeezebox players. I then want to use that to show stats on what I listen to, and then create playlists of stuff I have in my collection but don't listen to. As I say, complete newb and horrific code (globals everywhere, amirite?) but willing to learn and grateful for any feedback.
another one? 
&gt; I dont think execution big O is the right metric. I think it is the right metric. At worst, it can kill performance, and it can be really hard to diagnose, especially since it may be platform-dependent. Here's a real-world case where repeated string concatenation was a real problem that took literally weeks to diagnose. In 2009, Chris Withers [asked for help debugging a problem](https://mail.python.org/pipermail/python-dev/2009-August/091125.html) where Python's `httplib` was hundreds of times slower than other tools, like wget and Internet Explorer. A few weeks later, Simon Cross realised the problem was [probably the quadratic behaviour of repeated string addition](https://mail.python.org/pipermail/python-dev/2009-September/091582.html). Antoine Pitrou suggested that the [difference in realloc performance on Linux and Windows might explain why performance degenerates so badly on Windows but not Linux](https://mail.python.org/pipermail/python-dev/2009-September/091583.html), and Guido made the [comment](https://mail.python.org/pipermail/python-dev/2009-September/091592.html): "Also agreed that this is an embarrassment." &gt; Memory allocation is the real killer with serial concatenation. Why would it be? None of the intermediate strings are bigger than the overall string, and unless you are keeping all the intermediate strings, the maximum memory use is bounded by twice the overall string. The string grows in size proportional to the number of substrings (assuming they're all roughly the same size) and each intermediate substring is no bigger than the total concatenated string. There's no unbound memory growth here. E.g. if you concat `a + b + c + d + e + f` the largest intermediate string you generate is `abcde`, then you have to find memory for that and `abcdef` just before being able to collect `abcde`. I suppose that there might be problems with memory fragmentation, or with cache locality, which may hurt performance. But those will likely be quite subtle, and nowhere near as big an effect as the quadratic behaviour. 
This is something I hate every time I have to backtrack to the beginning of the variable to add the `len(` in front. But I don't think there is a good fix. Even if they added a `.length` function for convenience, it would only work on the newest Python version.
Awesome. Thanks for the recommendation.
okay, thank you.
As it happens, I was just using the wrong syntax... and the wrong interpreter. I'm using my raspberry pi (running Raspbian Jessie), and it has both, but just calling 'python' starts the python2 interpreter.
It's kinda hard when you don't explain what the code does or why you're doing anything you're doing. And yes, the answer is usually numpy.
At my previous job, I used to keep all internal documentation in Markdown. We used git to manage revisions, and I had a process that would auto-generate PDFs, Word Docs, and HTML from said documentation for distribution.
Thanks for your comment I will update the OP with an explanation. *edit: The OP has been updated I don't have access to numpy since my code is tested in the foobar platform
Are you doing it for a purpose or just for fun? If you really don't, they're just handicapping you.
I am two minutes into the DataCamp Python lesson and already can't stand the guy in the video. 
Each method could simply be implemented as *len(self)* (*len* being now a helper function) so the argument that it'd be more code is bullshit. Now, if Python's runtime is too primitive as to be able to optimise away that function call then that's another story. But that's simply a limitation of the platform, not of the principle. I'm curious about Python. I'm mostly a C-family programmer (C, C++, C#, Java, Javascript, ...) with limited experience in Python (used professionally for only 4 months, which only allowed me to scratch its surface) but other than the difficult-to-adjust-to indentation mechanism and the seemingly primitive *self* thing (seriously) it looks an OK language. But I don't really understand why is so much popular than Ruby, which looks like a much cleaner language with very elegant object oriented and functional programming facilities. Does anybody know why Python is vastly more popular? 
Excellent first project. Keep up the good practice.
I agree, having numpy would make things so much easier. But according to the rules of the challenge, only the standard library is available.
Are you sure you don't have floats and they're being type cast, and then formatted to print 3.141592665 as 3.142?
Site generators offer the flexibility of a dynamic site without the overhead of server processing. You ask why not just write the HTML, but let's say I have a 100 posts and I want to completely change my site layout. Or even small things like adding a new section to the existing layout. Or something even infitismal like changing how links open. What do I do? I can update every page manually. But that's error prone and takes a lot of effort. I could swap the css but that only let's me play within the confines of the HTML I've already setup. I could patch it in using JavaScript but how long can I keep that up for? Or I use a site generator like this. Think of it like a static mvc. We're separating the data from the view.
I genuinely didn't think to look for a maven plugin haha. Thank you for enlightening me!
On my raspberry pi the entry point overhead is 5 seconds until my first function is called. it's nice and all, but come on.. $ time beet --version beets version 1.3.18 no plugins loaded real 0m12.727s user 0m12.240s sys 0m0.400s 
The first thing I noticed was you were trying to catch the imports. Don't do that as the built in system will catch them just fine. It looks like your skills are coming a long great. It's a little obfuscated, and I feel it could improve in terms of readability. Have you read a hitchhikers guide to python? They have a great section on code structure you might find useful.
You didn't explain what it does, how it does it, why you chose anything you did or test it. Start with some docstrings. Sorry, If I'm spending the time to review, you gotta get that stuff down to pass. 
At the moment I am in the middle of moving documentation from relatively ancient tikiwiki to Markdown with Mkdocs builder. I definitely wont miss wiki syntax...
If you want to retain the set of records that DO match then you don't need that expensive check. If you're looking to retain the set of records that DON'T match I'd break it into two steps - longer overall run time but each step is less expensive and run time for each step is less. So add this step: # only retain records with records length 2 or more df = df[(df['col1'].str.len() &gt; 1) &amp; (df['col2'].str.len() &gt; 1)] 
Sorry for taking so long to answer, renting a server would probably overkill and being dependent on your computer running sucks as well, have you tried to find alternatives? My first suggestion would be to check out the amazon aws. They have a free tier which should be enough for your needs, iff you can install ffmpeg. The setup and deployment might be a little challenging in the beginning, but it should be managable ;) Independent of the license issue I'd say go for it! There is a lot to learn here.
I dunno about this SSG specifically, but I can think of a couple of advantages in general. Pages for doing organization get generated automatically. So if you tag your writing "work, CSS, commentary, browser support" and publish it on the 23rd of September, you don't have to individually update the pages for the tags "work, CSS" etc, and you don't have to update the list of articles written in September. The other thing is that, should you decide to change your appearance, it's a lot easier. Arguably, CSS is supposed to do that for you, but there are cases where you're changing the content/functionality of a page sitewide. For example, say you don't want to simply use &lt;img&gt; tags any more. Instead, you want a nice &lt;div&gt; that contains a thumbnail, some padding, and the image title below it, all of which links to the full size image. With a static site generator, you just tell it to handle images differently, re-run the generator, and everything works once more. And it means less boilerplate. It's easier to just write a text document that has a Title/author/date/tags at the top than a full HTML doc with its own title, a link to the CSS document, a navigation bar, and a link to my "about" page before I even start writing. And just to be clear: most of these take markdown. A fairly universal format, not "one for this specific generator." It's human-readable, and used on sites like Github. Even Reddit uses its own modified markdown.
this is from a google recruiting challenge.
[Ah yeah, I think he looks like this.](https://youtu.be/k-INUzgV_SY)
Converted the first of 10+ Python 2 programs for my work into Python 3. :)
Why not? Maybe /u/berried_alive (I'm assuming it's his staticgen for the sake of my rant) didn't like what the others had to offer or their way of doing it. Maybe he wanted to learn/expand his python knowledge and Ivy is the result of those efforts. In any event, he was generous enough to share the fruits of his labors. You don't have to use it. I don't have to use it, either, but I may still look at his code to see how he accomplished the various tasks involved in generating a static website builder.
I saw "Ivy" in the headline and misread the rest as "an elitist static site generator."
&gt; You generate the byte code, then make a pass to speed things up where you can. A concept too complicated for core Python devs ;-) That's as far as they got: https://docs.python.org/2.7/tutorial/modules.html#compiled-python-files
I watch sentdex on a 60in. flatscreen. Chicks dig it.
This is not my code I am trying to refactor this code for someone but it's a bit overwhelming. I'm trying to break it up into a series of functions but the state is all over the place. I'm also trying to flatten it out it has some dangerous deep nesting. 400 lines of code and only 2 functions and no classes. If you want to help feel free to fork it [torrench](https://github.com/Ricky-Wilson/torrench)
Put the Scripts directory higher on your path.
Ah, okay sent a PM.
It would be nice if somebody did a roundup/comparison of them all, all the same.
Torrench - Command-Line Torrent Search Tool - Available For Windows and Linux. The tool is written in python3. It works by scraping the pirate bay. it uses bs4 to do the scrapping.
I am salivating here. Now if only it would generate oneNote pages...
Been using an open source project where configuration is managed through entry points. It's really a pain and a half to configure the app and to get it working correctly. I really don't like entry points for this purpose. It haven't yet seen them used in a way that isn't more confusing that just normal extension of an existing library.
Try printing your dvr_online variable. I think your issue is that os.system returns an exit code instead of any result from the command.
Writing a library to compare weather data sources for my job. Making good use of OOP-ness (or at least trying to) to lay the groundwork for a library that will be easily extendable in the future. After building out the guts last week this week i've finally gotten around to making use of it. The first case study went really well. As other devs created new data sources this week, i was able to quickly build little extension classes that sucked in new data feeds to our analysis!
That's highly encouraging
A comparison -- that's quite an undertaking! If the creators submit them(fork the site repo etc etc), [staticgen.com](https://www.staticgen.com/) has a nice collection of static site generators for various programming languages.
Very cool, If anyone is going to use this I strongly suggest you use some filtering for the input, as of right now you can inject damn near anything into the chat.
That's the confusing part, when I print the variable, this is what I get verbatim: Starting Nmap 5.51 ( http://nmap.org ) at 2017-07-28 11:46 UTC Nmap scan report for static-x- x (x) Host is up (0.0044s latency). PORT STATE SERVICE 5100/tcp open admd Nmap done: 1 IP address (1 host up) scanned in 0.16 seconds *IP's &amp; ISP removed with X's, but I assure you it's pulling them up 
Yeah, but *knowing* that there are 33 python static site generators doesn't help much when trying to figure out which one to select.
"didn't do the trick" is not nearly specific enough to know *why* it did not work for you :) Anyway I'm not overly familiar with pandas/numpy arrays. But when manipulating them, always look for a numpy specific function first because these tend to work in parallel or at least operate very fast over all elements of your array. Once you start applying regular python function calls on individual elements, you lose your performance 
?? not sure I understand what you mean. I just meant everyone was giving some advice / tips on what they're doing with virtualenv. Myself I'm just finding it easier to use Docker to manage this. But hopefully OP finds a solution that works for them.*cross_fingers*
Wait, people actually choose to make dictionaries with 'dict()'? But.....*why*? 
When I run os.system('nmap -p port ip'), that prints the "starting nmap..." string, but the value that the function actually returns is an exit code. From looking at [this stackoverflow post](https://stackoverflow.com/questions/3503879/assign-output-of-os-system-to-a-variable-and-prevent-it-from-being-displayed-on), your options are os.popen and subprocess.Popen. The simplest option is `dvr_online = os.popen('nmap -p port ip').read()`
That's a good point. I only focused on it not breaking the Python side. Didn't think about the client side. I'll update here soon to keep nefarious actors at Bay. 
blog spam? Python isn't even mentioned. 
OP asked about using Docker instead of venv. Your comment didn't exactly add much to the discussion.
Supply an absolute path to your java.exe so that you are absolutely certain it doesn't pick another one. Otherwise ask in /r/java instead? This has nothing to do with Python, as it is only used to invoke the java runtime...
Yes I love how simple and clean it is I wouldn't add too much as it might confuse someone who's trying to learn from it. (Unless of course your using this for something more). 
Maybe one of these [data validation libraries](https://awesome-python.com/#data-validation) can help.
Others have answered the benefits of static site generators in general. I want to address your one statement: &gt;Why not just write html so you aren't stuck with files formatted for this one generator? What if we all had to write HTML every time? What if Reddit did not use Markdown but required you to use HTML tags? Same for Wikipedia, or Wordpress? Very few people enjoy writing everything in HTML. It's not a markup language well suited for humans - it's much better to use an easier markup language and export to HTML. 
A page explaining what differentiates this from other popular generators would be nice. I don't wan to read the full docs to find out.
Fixed it with 2 quick lines! Thanks again for the notice. My goal was to keep it as simple as possible so people learn from it or use it as a base to build off. 
sentdex is the bees knees. im just a lurker coming out of the shadows to promote my boy
Exactly what I bookmarked it for :) thanks for sharing
That'd be a good blog post
Thanks Jay, I read a little more into it and I think that is the help I need. D'Oh! I'm deleting the thread, thank you greatly for your help. 
Can we all just get together and agree Electron is not the correct solution for a simple GUI? Please? 
That's so helpful, wish I knew about these before. Thank you!
Conda can replace pip and Virtualenv in this setup. If that works for you- awesome! Keep using it 😁 Personally, all my collaborators as well as all the projects I use and develop are on pip, and there's not really any benefit for us moving to Conda to justify adding Yet Another Tool to our kit. Pip's annoyances have sufficient workarounds.
That should be in your code. For a code review, you get some, but very little credit if I ask questions.
Becasus Len is implemented in the C code of python. That is why it is so fast to get the length of large data set in a built in type. Len() just reads it from the C structure.
Practicality beats purity
Let me know when the standard mysql library is available in Python 3. A great deal of the most frequently used packages are not available in Python 3. 
In fact most of us are forced too!
It has been discussed in many places. For example you can look at this. https://news.ycombinator.com/item?id=682101 
Here's a quick attempt at making something that works like that. I don't know if you'll find a library like this but it wouldn't be too hard to make your own. class InputValidationException(Exception): pass class Input: def __init__(self): self.steps = [] def apply(self, function, description=None): def wrapped(arg): try: return function(arg) except: raise InputValidationException('Failed to apply {}'.format(description or function.__name__)) self.steps.append(wrapped) return self def condition(self, predicate, description=None): def wrapped(arg): if predicate(arg): return arg raise InputValidationException('Failed condition {}'.format(description or predicate.__name__)) self.steps.append(wrapped) return self def any(self, collection, description=None): return self.condition(collection.__contains__, description) def __call__(self, prompt): while True: value = input(prompt) try: for step in self.steps: value = step(value) except InputValidationException as err: print("Invalid input: ", err) continue return value players = { 123: 'Abby', 14: 'Billy', 275: 'Carter' } player_input = Input().apply(int).any(players, 'valid player index').apply(players.__getitem__) target_player = player_input('Choose a target: ') print(target_player)
RemindMe! 11 days "check for pdfs"
I will be messaging you on [**2017-08-08 18:29:06 UTC**](http://www.wolframalpha.com/input/?i=2017-08-08 18:29:06 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/6ndf4s/what_are_good_tutorials_to_learn_numpy_pandas_and/dkuqi54) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/6ndf4s/what_are_good_tutorials_to_learn_numpy_pandas_and/dkuqi54]%0A%0ARemindMe! 11 days ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! dkuqj13) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
What do you suggest? 
Thank you!!
I think I'm going to wrap up the intro to R course on Datacamp and start learning the intro to Python course at Datacamp
That's true. Problem is having the time to install/use them all. Now if someone were to *pay* me to do it, I could certainly find the time...
Please. It fucks up my keyboard shortcuts. (I use Dvorak.)
He'll also need to `pip install tor` before.
What I like as a benefit, is if you want your class to respond to a length request, you implement the def __len__(self): return self._length_calculation() This makes it clear to Class writers that there's a standard way internally to make a standard call.
That's more what I was going for. I asked IT and he was unaware of any engineering machines that had Linux. I was hoping to get a bare Linux install with a bunch of Windows VMs so I could roll back.
It's very possibly game related, although having a TTS engine would be a massive help in my language learning endeavors, too :P
There is beauty in the simplicity of this
Almost every week there is another post on here reading something like, "Best GUI for Python" and some common mentions are: * [pyqt](https://www.riverbankcomputing.com/software/pyqt/intro) * [pygtk](http://www.pygtk.org/) (which should actually be [pygobject](https://pygobject.readthedocs.io/en/latest/) instead) * [wxpython Pheonix](https://wiki.wxpython.org/ProjectPhoenix) * [flask](http://flask.pocoo.org/) I have never used most of these, but from what I understand they will not take up 100MB of RAM idling. EDIT: Hyperlinks
I have a sudden need for many more snek based tutorials!
Good One
Knowing which ones do what might help, but there's no *right* answer for everyone. If you like Mako templates and Python 3, you probably want to use Nikola. If you like tweaking with metadata and yaml configuration, you might prefer Hyde. If you're a front-end designer by trade, you might prefer Cactus. If you plan to have a lot of pages, and are really concerned with build time, then you might prefer Acrylamid. Having a variety of solutions to choose from isn't the worst problem to have. 
Ah, I was working on something similar myself, but this one is much cleaner! Thanks mate, seems good
Very short and concise. Might I suggest adding a "&lt;user&gt; has left the room." (to other clients) when you catch the exception and remove the client. 
Can you post the actual error message from the build?
I was asking out of curiosity, as I am new to this subreddit But the way I see it there is a demand for UIs to look good today and the easy way is to use html, css and javascript. The viable option among those listed would be flask. The one thing Electron offers that is still missing is a way to run this UI in multiple platforms as if it was a regular app. I've seen some people using pyqt toguether with flask for that end and I think that it worked out fine but there were some licensing issues for distribution.
Because a C++ compiler (the LLVM JIT in this case) offers great benefits such as automatic template instantiation, auto-downcasting, multiple virtual inheritance offsets, etc. It also allows cross-language inheritance (I have a proof of concept) and use of Python classes from the C++ side (yes, people do that). If you are willing to forgo that, it can rely fully on cffi.
It could be interesting if you store these statistics and see if you can scrap website and get some suggested songs you might like! If you wanna continue with the project. Might be too involved but could be really cool
I have created a function to compute the mean curve of several curves! https://github.com/tupui/HDR-Boxplot
&gt; I know that's not what anyone wants to hear, but this is just going to be torture for you if you don't understand the fundamentals. I can see that now. Thank you for you advice.
To be sure: it is only the cppyy module for CPython that depends on the CPython API. If you are an author of a C++ library and want to provide Python bindings, then those (e.g. pre-compiled modules), do NOT depend on Python and can readily be used with any version, including PyPy. (Versions of cppyy exist for p2, p3, and PyPy.)
Which path do you mean? This is beets installed through apt and the script is in /usr/bin.
I'm working on a modular discord bot. Currently has a few many modules including Pathfinder weapon, armor, and firearms search; 4chan random thread finder; cleverbot support; and league of legends summoner search support. The bot uses a dict/list system for maintaining function hooks and can hot swap functionality. Modules can even be updated without restarting the bot itself.
thank you
The light correction is something we just began work on, thanks for the suggestions. There is actually cat detection included, it can detect cat faces and bodies.
Looks pretty much like Jekyll or Pelican to me, only more "minimal"
It's mature technology, but since it's a fork, this is only version 0.1: some stuff broke when removing external dependencies. When all tests pass again, I'll declare 1.0. Beyond that, another catch is the LLVM dependency. Takes a long time to compile/install and wheels are currently too big for upload to PyPI.
Derp. I meant BlueIris in that comment. BlueStacks is an Android emulator...
What's their niche?
You could restart a project like PyPyROOT on top of cppyy. It's just a matter of adding ROOT pythonizations. The last example mentioned in the paper ("basic analysis code") is exactly such a thing and runs close to C++ speeds end-to-end.
To me, Pelican is fairly minimal. Sure, it supports a lot of features, but I don't need to utilize most of them. Put another way: Given how easy and simple Pelican is to use, why would I use this?
It allows you to program to the C++ API from Python. You don't pass the source (although you could ...), just the headers. The negative of such automatic bindings is that the API still looks very "C++-like." But on the positive side, that means that all documentation written for the C++ API, translates quite nicely.
well yeah, I am wondering, too. It looks like a re-implementation of the general idea/concept behind existing static site generators. Maybe it does certain little things a bit differently than others, and it was thus worthwhile writing this package for the author. As a user, I don't see a benefit in using it over Pelican, let's say. I mean, it's not a bad thing that this package was written, and it's nice that it's made open source, but it's not something I would use/need right now :P
Aaaaaand it's in production
The original links seems to work again: http://conferences.computer.org/pyhpc/2016/papers/5220a027.pdf
I am working on such a tool https://github.com/ilevkivskyi/com2ann, but it is still in a pre-alpha stage.
`import file` at the top, then `file.someFunc()` or whatever. The extension does matter however as it has to be Python. 
&gt;&gt; I dont think execution big O is the right metric. &gt; I think it is the right metric. You are wrong then. Execution time is a minor detail in this game of ever-repeated memory (re)allocations. You seem to be confused about the difference, but storage complexity isn't the same as execution complexity.
You should visit /r/learnpython instead. 
Yes, almost there. It's actually simpler in CPython (b/c of ref-counting) to decide which overload to pick than in PyPy. Final hitch is with templates (can generate rvalue of builtin types, so some temporary space needs to be set aside to refer to).
I'm more of a Windows guy, where you install to `C:\PythonXX` and the things that you pip installed are in `C:\PythonXX\Scripts`. If you type `$PATH`, you'll see your path. The longer that is, the more stuff Linux will search through to find what you're after. Compare that to being in a folder and typing `python run.py`. That's not a startup cost, that's OS overhead. The benefit is that you can be anywhere. I'm not 100% sure on the linux philosophy, but putting everything is `/usr/bin` just makes the things you use frequently slower. The things that are going to take 30 seconds to start and things you're going to leave open for 8 hours are things that can be lower.
In as much that C is part of C++, yes. But it would be vastly overkill compared to cffi. Further, C as part of C++ has minor differences that may trip you up.
This question is better suited for /r/learnpython, but I might as well give you an answer. Python's module system is pleasantly simple to use. Say you have two files in a directory, main.py and my_module.py; if you wanted to use functions from my_module.py in main.py, all you need to do is: #main.py import my_module my_module.some_function("hello world") Of course, in order for this to work the files *must* be in the same directory. If you need to know how to import modules that are in another directory, comment and I'll explain. 
Check out the keyring module, it uses them in a fantastic way. 
Actually, I do need that, thank you.
That would be so nice. I probably don't have the skills to do it myself, but if it existed, it would improve our workflows so much. I can only hope this gets the attention it deserves.
If you are willing to load Cling into said C++ application, then sortof (it's rather clunky). However, that strongly depends on the application. E.g. I would not want to run a C++ interpreter on a web server ...
https://perl6.org/resources/ http://perl6intro.com/
And a good tool it is! I think /u/Deto wanted the opposite an ann2com if you will, as their code needs to be compatible with Python 2.7, and they would like to write Python 3 (or at least that is what I inferred from their comment).
&gt;Why would it be? Because memory allocation isn't free. `malloc`'ing some memory takes some time, a whole lot of it compared to just copying some data over. With a bit of no luck, string concatenation with `+` allocates memory for the first (a, b) couple, then for ((a, b), c), then (((a, b), c), d), and so on. That is a ton of allocations, and absolutely abysmal performance wise.
They don't actually have to be in the same directory, but the actual logic behind import statements is way, way, way too complicated for its own good, so that's a good summary. 
Counterpoint: anything made with paste
It further falls back to `__call__` which is a good trivia question and a terrible thing to use in practice. 
I looked it up. It only does that if you have two arguments to iter. Still a bad idea though. 
I only skimmed the readme and the source, but you seem to be making a dangerous fundamental assumption about the data: that you sufficiently capture the variance with just two components to the PCA. You could have much more varied data than those can capture. I have very little experience with `sklearn`, but you can, instead, specify a float such as 0.95 into PCA to say "capture 95% of the variance". That seems much safer!
This comment should be rated higher. I personally can't express the importance of this enough when you enter an enterprise environment.
I don't agree, the 2-args form is useful and well-separated from the other one (which is rarely invoked directly)
Here goes nothing. **Case #1: Libraries in a child directory** Let's say that you have a directory called "src" that contains two things, a directory called "libs" and a main.py file. Inside the "libs" directory, you have a file called my_lib.py which you would like to access from main.py Python doesn't automatically consider "libs" to be a place where library code could be found. You need to add a new file to "libs" and name it __init__.py You don't need to write anything inside the file, you just need it to exist. Now you can access your library from main.py as follows: from libs import my_lib my_lib.some_func("hai") **Case #2: Libraries in parent directory** You have a directory called "src" that contains two things, a directory called "main_script" and a file called mylib.py. Within "main_script" is a file called main.py You can access the library from the main script quite easily; from .. import mylib mylib.do_stuff() The .. just means "parent directory".
okay, thank you.
Thanks, I'm not claiming to be an expert of the CPython internals in any way, just speaking from experience. If you did find any errors from what I said, please do tell!
You will have to reshape your array first (array.reshape((30, 30, 1))) then use numpy.repeat with the proper axis argument.
You leave your passwords in public git repos, why should we trust anything you say? Blind leading the blind...
What interface did they have to the game?
Sure, but that's the an inherent flaw on entry points. 
I use Linux daily (not Raspberry Pi though) and I've never had issues with slow startups due to long paths. Long paths aren't nearly as big of a problem as Windows. Partly because your path is never too long anyway – most things are in `/usr/bin` – whereas on Windows your programs are scattered all over the file system. Moreover, from my experience, Linux file systems are much more snappy than Windows'. Shells can also [cache](https://unix.stackexchange.com/questions/86012/what-is-the-purpose-of-the-hash-command) where the program was last found, so repeated spawns of the same program cost basically nothing.
Flask for life.
I did look into this a while ago, very crudely scraping Last.Fm for similar artists with beautifulsoup. I think there is a Last.Fm API too so I should pick this back up. Good idea! Was also looking into using gracenote for music suggestions. My next step first is to build a webui that shows said statistics...
It does not load correctly on Chrome. Does anyone else have this problem? Whenever I try to visit the site. Doesn't show the Map, or even have clickable icons. My Browser, Plugins, and PC all up to date. Below is the screenshot. [https://prnt.sc/g1m8xd](https://prnt.sc/g1m8xd)
Thanks a lot!
Also len makes it easy to use it in functional style programming, easy to use with map and reduce...
I recently found out about chatbots and quickly became fascinated! I've been working on building one from scratch in Python using the Telegram API.
Ooohh this is something I always entertained as an idea, but never got around to actually trying, will subscribe and check it out.
Thanks, why are you sending this? I am waiting for the O'Reilly book coming out this year.
While it's not exactly clear what you mean when you say "correct", I do not think electron is bad for 100% of use cases. In fact, at its current state it's probably one of the fastest ways to make a cross platform GUI program, with the added bonus of all the eye-candy CSS has to offer. Sure, it's far from lightweight or polished right now and javascript is not a pleasant language to write in for many people, but between electron and cordova/react native, etc gaining popularity, HTML/CSS/Js might have a solid chance of becoming the lingua franca of UI... And you know what? After a very long time of trashing javascript and hybrid apps while tyring to create GUIs with pygtk and pyqt I would honestly be ok with it :)
I'd want markdown over HTML for anything involving note taking. You can type markdown fast enough and with few enough errors to take notes directly in markdown. I used a custom markdown like format (I didn't know about markdown yet) in college for that reason. 
"Philadelhia"
What is Jekyll?
Minimal in terms of design or code? 
So does the software go off when OP runs it?
&gt; Long paths aren't nearly as big of a problem as Windows. Partly because your path is never too long anyway Depends if you develop software or not. My paths get very long. &gt; whereas on Windows your programs are scattered all over the file system. That sounds like the opposite of what you just said...
Testing: http://www.imdb.com/title/tt1182345/?ref_=nv_sr_3
Hello, I'm a bot! The movie you linked is called **[Moon](https://www.imdb.com/title/tt1182345)**, here's some **[Trailers](https://www.youtube.com/results?search_query=Moon+Trailer )**
You want to look at `requests` to download things, and `Beautiful Soup` to parse html. Other than that, have fun.
Sorry this happens to you. It should work on Chrome as we have tested the website there. Microsoft Edge has a bug and we will fix that soon. It should work on chrome though, if you open up developer tools and open console does it show any errors? 
Yeah, it shows the following errors in the screenshot.: Screen shot: [https://prnt.sc/g1n4kd](https://prnt.sc/g1n4kd) Raw cut and paste: react-redux.min.js:1 Uncaught TypeError: Cannot read property 'Component' of undefined at s (react-redux.min.js:1) at react-redux.min.js:1 at react-redux.min.js:1 at react-redux.min.js:1 bundle.js:1 Uncaught TypeError: Cannot read property 'Component' of undefined at Object.defineProperty.value (bundle.js:1) at t (bundle.js:1) at Object.&lt;anonymous&gt; (bundle.js:1) at t (bundle.js:1) at Object.defineProperty.value (bundle.js:1) at t (bundle.js:1) at Object.defineProperty.value (bundle.js:1) at t (bundle.js:1) at Object.defineProperty.value (bundle.js:1) at t (bundle.js:1) learn-anything.xyz/:1 Uncaught ReferenceError: googleTrackingID is not defined at learn-anything.xyz/:1
If they're all a line or two, then that Makefile is a form of runnable documentation. Especially as sufficiently shiny make targets are indistinguishable from headings. You don't need `make` installed to derive value.
You just described my thought process with 90% of the libraries I look at. 
features
I'm just saying, if people are looking to hook up their Python scripts to a GUI, this is most likely not the best solution. I would really prefer Electron apps stick with their JavaScript and leave Python out of it, adding even more girth to your project considering that when packaged it now contains Electron and a Python interpreter. As for web technologies, don't get me wrong, their versatility is unmatched. But I don't think running a stripped-down instance of a web browser for a GUI is very necessary in most cases.
User friendliness is the next era of python tools, i reckon. 
Calling u/sentdex. He has tons of great videos and experience on this topic. Would be a great mod if he has time. 
thanks this is my next step, But will that make it installable in windows too? I've never tried this kind of stuff in windows
&gt; sudo python3 -m pip install requests bs4 lxml tabulate termcolor gives /usr/bin/python3: No module named pip "no module named pip"
REMINDME! July 29th, 8 am 
$ sudo apt-get install python3-pip Then run the pip command.
Look at the sidebar for this sub. There is a link to a free book called 'Automate the Boring stuff with python' that covers exactly this subject.
hmmm. interesting idea, calling a function on a whole dataframe. I'd be curious why you would need to do that. I guess what comes to mind for me is using Groupby to apply functions. I searched "Pandas GroupBy Multiple Columns" and found this and other links. https://github.com/pandas-dev/pandas/issues/13821 
I thought about doing something like this, but for finding crackpots in STEM communities. Cold fusion, aetherwaves, proglangs without generics, all that ...
Agreed, but markdown is very limited when you start inserting images... It's good for text documentation, but not so much for web pages or articles that contain images. 
Great tutorial. One small issue: Reduce the number of rows in dataframe example. Scrolling through it in mobile is a pain. 
Thanks for the feedback. Sure will take care of it.
You're adorable. You made an alt account just to sass me. Scamper back to whatever strip mall code academy shat you out, and stop wasting my time.
Noooope. :(
What's something that you would use entry points for besides cute ascii sneks? I'm imagining a grep-like program for searching through files, but different users have their own proprietary binary file formats (for some reason), so they would write their own decoding functions which they would install as entry points. That actually might be useful for people developing new AIS application-specific messages...
&gt; My paths get very long. On my system, I have 17 paths in PATH, half of them from my home directory, and half of that half is for package managers like Gem or Cargo. I would consider that a pretty average length (although a minimal Linux would reduce that down to maybe 4 or so). I have never noticed any performance decrease from it, and the startup time of programs remains fewer than a millisecond. On Windows a few years back, I was able to measure the time that each additional path adds to the launch of a program. It adds up very quickly when running shell scripts like `./configure` (“checking for stdint.h... &lt;wait 1 second&gt;yes”). I don't remember the exact number, but it was on the order of a few milliseconds per path. &gt; That sounds like the opposite of what you just said... I'm saying that even if both Linux and Windows have the exact same number of paths (unlikely due to the difference in how programs are organized), I find that Windows tends to have worse performance because the file system on Windows is less performant than Linux. Listing directories is slow on NTFS, and Windows just doesn't seem to be as aggressive at caching the lookups.
That's a nice guide! (although, "complete" is a strong word :P). For some additional topics, complimentary to your examples, there is "Things in Pandas I Wish I'd Known Earlier" (http://nbviewer.jupyter.org/github/rasbt/python_reference/blob/master/tutorials/things_in_pandas.ipynb)
This may not be the best title
As a python beginner, this was very helpful. I've actually been looking to find a good way to pull data from a googlesheet and manipulate it. Thanks! My only question is what is the [n] for at the start of each step? [Edit: I'm playing around with dataframe. Whatever I do to it in the interpreter doesn't seem to save. Is it because changes in the interpreter don't get saved on a file? For example, the function to add a column adds it, but doesn't seem to save the changes.]
are you using anaconda? they preinstall pyqt5 but installing the package would use the name pyqt not pyqt4 or pyqt5. you would still import it as PyQt4. If you really need to use use qt4 then you should make a separate environment and then do a conda install pyqt&lt;=5.0.0
I really like the one from Sarah Guido. She gave a tutorial session at pycon and the jupyter notebook is here https://github.com/sarguido/hands-on-analysis-python/blob/master/notebooks/pandas.ipynb The data files used in the notebook are here. https://github.com/sarguido/hands-on-analysis-python/tree/master/data Finally, the entire talk/tutorial is here. https://www.youtube.com/watch?v=L4Hbv4ugUWk
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [sarguido/hands-on-analysis-python/.../**data** (master → 96b51bb)](https://github.com/sarguido/hands-on-analysis-python/tree/96b51bbaac2877c4e6438449b63fc9f6f72d316a/data) * [sarguido/hands-on-analysis-python/.../**pandas.ipynb** (master → 96b51bb)](https://github.com/sarguido/hands-on-analysis-python/blob/96b51bbaac2877c4e6438449b63fc9f6f72d316a/notebooks/pandas.ipynb) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dkvjgj3.)^.
This tutorial is prepared using IPython Jupyter Notebook, By default its showing the line number ln[*]
&gt; how well debugging in a container will work I use pdb for debugging and it works exactly the same in a container. If you're using docker, just run the container in the foreground with `-it` and pdb will be able to attach to the terminal. I can't speak for IDE based debugging.
Ah, as I got this answer, I just installed IPython and noticed it was doing just that. Thanks!
Thanks for your comment! Good point although I print the variance to make sure it is enough. The advantage with two components is the ability to make a plot. Furthermore, from my experience, the data I usually encounter are quite smooth. For now I can test the variance and exit if not sufficient but I will definitely look at using more than two components!
This is not the right post for this sub. There are bunch of other subs like /r/testingground4bots and such. 
Thanks. That worked. However, I've divided into 2 steps. First, I've done the cleaning and generated a CSV file. Then on that CSV file, I've applied the 'matching' function and filtered the desired results. Anyhow, thanks a lot.
If you pass the name of a function to apply it should work too. For example economies['Language'].apply(english_string)
https://pypi.python.org/pypi/Camelot/ This one?
I highly recommend the Intro to Computer Science free course on Udacity. Despite the name, it's a ground up python course. They also have a couple more free followup python courses
Except the title is couched in terms of a speed comparison, (as is the article). Both you and I try to point out issues with this to help the original author and the community :-)
Very nice, thanks for this. 
&gt; python3 -m pip install requests bs4 lxml tabulate termcolor sudo apt-get install python3-pipReading package lists... Done Building dependency tree Reading state information... Done Some packages could not be installed. This may mean that you have requested an impossible situation or if you are using the unstable distribution that some required packages have not yet been created or been moved out of Incoming. The following information may help to resolve the situation: The following packages have unmet dependencies: python3-pip : Depends: python3-setuptools but it is not going to be installed Recommends: python3-dev (&gt;= 3.2) but it is not going to be installed E: Unable to correct problems, you have held broken packages. then I tried python3 -m pip install requests bs4 lxml tabulate termcolor /usr/bin/python3: No module named pip 
Many libs which install scripts use them for the script part, also support auto discovery for plugin patterns. 
It's not `ln`, it's `In` for *in*put cell number.
$ sudo apt-get -f install 
Why do you say that? 
Or directly install packages without pip. See documentation for alternate method (Using APT).
.ix is being depreciated, http://pandas-docs.github.io/pandas-docs-travis/whatsnew.html#deprecate-ix other than that, awesome job 
thanks. will try.
Also consider Pyramid!
In Jupyter's nbconvert tool, which converts notebook files to other formats, we use entry points to define exporters. So when you run `jupyter nbconvert --to foo mynotebook.ipynb` , the exporter for format 'foo' can be installed by a separate package.
&gt; Execution time is a minor detail in this game of ever-repeated memory (re)allocations. o_O Do you realise that the memory allocations are part of the execution time?
Um, what you've just described is the quadratic performance of string concatenation -- what you just stated wasn't important.
If you reduce anything to the lowest possible level, you end up with most explanations being something like "Because of quantum effects." Technically correct, but net really interesting. That's why I consider the actual execution properties of an algorithm, i.e. the traditional usage of big-O, different from the resource management, i.e. allocation, reclamation, garbage collection, etc. 
Thanks for not calling it pysma. This Community really butchers anything to fit py in.
Seems like React is not being loaded, could it be that you have an adblocker that is being too aggressive and blocking some of the requests?
Thank you!! Haven't heard back from them yet. Will see if I can figure this out and get it to work :)
pytest plugins register themselves that way.
Lol
[forex-python](https://github.com/MicroPyramid/forex-python): Foreign exchange rates, Bitcoin price index and currency conversion
I just listened to the cryptography episode with Paul Kehrer. It's refreshing to hear so many experts of different disciplines discuss Python so passionately. 
The `|` operator thing on boolean arrays... Oooo. 
I think they pair together nicely, not so much one or the other You'd have a local copy of the code checked out, with an associated virtualenv and a requirements.txt. this let's you run all your code locally, run tests, have linters properly detect your deps and such. Then when you plan to distribute it, you can set it all up in docker, but leave out the virtualenv. add mounts and port mappings (assuming this is something like a webserver) for *running* the server in the container with live code updates and such. If it requires a database or any other running processes, this is where docker starts to become worth it, because you can create a docker-compose file which helps you to automate and manage up that interaction
You are absolutely right, I turned off the adblocker and the site worked good as new. Thanks so much!
Plasmathon sounds coooler ;)
You should go ahead to [/r/webdev](http://www.reddit.com/r/webdev/) or even [/r/learnprogramming](http://www.reddit.com/r/learnprogramming) to get people working on the website. 
This seems like a sort of work that would benefit from a heavy background in physics. It would be great if you guys could be clearer about the sort of expertise you expect from contributors. I couldn't find a dedicated section for "things that need to be done", I read the issues section, but there is a single issue tagged as a good first contribution. I also read your vision statement, several other libraries are mentioned there, I get the impression you guys want the functionality from those libraries in PlasmaPy. Would this be a good place to start? Just pick one of those libraries and start coding? 
oh Thanks for letting me know, Will take care of this.
Look at pluggy or stevedore to manage all the crap work for you. There's also Flask Plugin Engine if you're using Flask. 
pytest's plugin system was actually broken out into a separate package called pluggy, it's pretty neat to play with. I even got it working with asyncio stuff, but returning coroutines and then having the caller await them. 
&gt; Scrolling through it ~~in mobile~~ is a pain. FTFY
Sorry I missed your remindme, but you did not specify a year, or timezone.
I don't know anything about physics, but I do enjoy contributing to some python projects. Let me know what I can do!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
you should have also `python2` alias working, so just stop using `python` entirely. `python` is a bit of a mess because it's supposed to default to `python2`, but some linux distros use it for `python3` regardless. Just be explicit (either python2 or python3) and there will be no surprises.
Why just CUDA and not OpenCL/AMD?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
&gt;And at that point we will have shown "how to make a racist AI without really trying". Of course that would be a terrible place to leave it, Yes... absolutely terrible...
pls surround your assignment = signs with spaces
Learning more python and convincing the boss to send me to djangocon.
Right, so put the Scripts directory higher on your path on Windows.
Thanks for the feedback. Will take care of it.
This is amazing, I love the idea that you're already doing 3D analysis of the B topology. I work with astroplasmas and would love to help if possible. 
RemindMe! July 30th, 2017 GMT
Try sending a real user agent, maybe the server is ignoring the request because of the user agent 
I'm sending a real user agent, I forgot to mention that.
If I'm working on a library, e.g. someone is going to call me, I stick with virtualenvs. If I need some system dep (libpng, for example) I start considering containers. If I'm working on an app, I usually try to iso provide a container because it's nice to give users a turnkey solution (especially if stuff like libpng is involved).
You have to click in the number and then the dino, I know its kind confusing, we have to fix it.
Plaspy
In the third paragraph under "Motivation" I would highly suggest revising it to say "software" instead of "codes". People don't talk about "releasing codes", it's just not the right terminology, and comes off sounding amateurish. Otherwise, very cool project! I'm hoping I can help out with testing and code review and learn some physics along the way.
thank you for responding to my snark with politeness
If you're just starting out, I'd recommend taking a look at [pybind11](http://github.com/pybind/pybind11) which is sort of like a lightweight modern C++ equivalent of Boost.Python.
Should be able to do it either way with a Kivy Canvas.
"Codes" is very much in use amongst scientists and researchers, and I believe this package is firmly aimed at them.
http://interactivepython.org/runestone/static/pythonds/index.html
There's already [a program named "Ivy"](http://ant.apache.org/ivy/) used for Java dependency management.
Code and codes instead of software and codebase was really weird to read, but if that's the case then I understand. 
You could do it like this: def max_val(iterable): m = float("-inf") for i in iterable: try: if i &gt; m: m = i except(TypeError): i = max_val(i) if i &gt; m: m = i return m Only caveat is that if you give it a list of nothing it will return -infinity. Unfortunatley you can't use None as a number which is less than everything. 
Why a GUI? I would think someone who is looking for this can use an ide or terminal. Have you used cx_freeze?
See if your favorite ide has a plugin for pyinstaller.
I agree, I've never really heard it used that way before. If that's the culture, then that's the culture. However, I don't like the fact that it puts the emphasis on the content of the program rather than the overall software it creates. It would be like calling a writing by the name "words" instead of "book".
Regardless, the goal of this project seems to be to bring together both scientist and more professionally trained software engineers. Most software engineers aren't going to take something seriously that refers to "the codes".
You can probably ask on their mailing list but I would guess they don't want to support two bindings
Because the lambda binds to the _name_ `cmd`, not the value of it. If you want to save the value as part of the lambda, try `lambda cmd=cmd: os.system(cmd)`.
There is only one `cmd` variable. It gets assigned to several times, because a for-loop is really just repeated assignment. But all the lambdas capture that same variable, as there is only the one to capture. It's equivalent to this: &gt;&gt;&gt; funcs = [] &gt;&gt;&gt; foo = 1 &gt;&gt;&gt; funcs.append(lambda: foo) &gt;&gt;&gt; foo = 2 &gt;&gt;&gt; funcs.append(lambda: foo) &gt;&gt;&gt; foo = 3 &gt;&gt;&gt; funcs.append(lambda: foo) &gt;&gt;&gt; for f in funcs: print(f()) 3 3 3 All the lambdas are capturing the same variable, and that variable has whatever value was last assigned to it. Using `functools.partial()` makes a copy of the variable, as part of calling the function and passing an argument. That's not specific to `functools.partial()`, it's the case with any function. &gt;&gt;&gt; funcs = [] &gt;&gt;&gt; foo = 1 &gt;&gt;&gt; funcs.append((lambda x: lambda: x)(foo)) &gt;&gt;&gt; foo = 2 &gt;&gt;&gt; funcs.append((lambda x: lambda: x)(foo)) &gt;&gt;&gt; foo = 3 &gt;&gt;&gt; funcs.append((lambda x: lambda: x)(foo)) &gt;&gt;&gt; for f in funcs: print(f()) 1 2 3 
Are you going to include fluid/plasma Dynamics to these? Is plasma still governed by NS equations?
ah that looks nicer imho, i'll try that instead. Thanks!
Thank you very much, this makes it a lot clearer!
Which is why I use Org Mode for my static site generator.
Can you post your code snippet to dumpz.org? Are you setting both http and https for the proxy like this: requests.get(url, proxy={'http': 'http://username:password@ip:port', 'https': 'https://username:password@ip:port'})
Actually your base case is if the input is a number. Try this: from numbers import Number # numeric abstract base class def maxin(inp): if isinstance(inp, Number): return inp return max([maxin(i) for i in inp], default=0) There's some edge cases with other types of iterable (like strings) but your program should probably raise exceptions in those cases anyways. EDIT: you need `default=0` to work with empty tuples / lists / etc.
 def max_val(t): int_list = [] for elm in t: if type(elm) is int: int_list.append(elm) else: int_list.append(max_val(elm)) return max(int_list) You are almost there, you just needed to apply the same algorithm (recurse thru your function) to each inner iterable. I hope that makes sense
Using pyspark DataFrames you have available the Parquet compression. I know you are using pandas, but maybe could be an option to use pyspark instead of it. https://spark.apache.org/docs/latest/sql-programming-guide.html#parquet-files
Can pandas be trusted to use the same DataFrame format across version updates? If so, you might take a second look at `pickle`. Pickle guarantees backwards compatibility across Python versions and only warns against pickling objects if they need to interoperate with a codebase that has changed in an incompatible way. But again, `pandas` would need to make a similar guarantee for this approach to work. 
what do you think a linked list offers, that a python list or set does not? edit: _in practice when writing python code for real things_ not for cs theory. 
Your proxy using standard HTTP or SOCKS? Also does it require authentication to use the proxy?
I'd actually recommend that you consider not making it a package. But rather an ecosystem of packages that work well together and conform to some standard. All with a website that has a nice index for people to use to browse packages. That way, if someone wants to accomplish something in a different way, they can just create an alternate package. An additional benefit us that you don't have to worry about the package growing out of cinteol. That is the model that Bioconductor (biology packages in R) follows and it's worked real well. Python has BioPython but it's just one package with different pieces that are maintained at various levels - very hard to figure out what's really being maintained. I'd personally like to build off parts of it, but I can't as I'd introduction breaking changes. Anyways just my 2 cents
Isn't there a 2 &gt; 3 converter?
I've unfortunately already made the experience that this is not working with pandas. I think it was from version 0.19 to 0.20 (I might remember incorrectly), that on unpickling a pickled pandas dataframe I got an error: module pandas.XXXX (don't remember which) not found. I'm assuming that this was due to some internal refactoring in pandas, i.e. the pandas codebase did change in an incompatible way? Not sure.
Thanks for the idea. I'll look into converting pandas to pyspark and storing it then in the parquet format. Update: I checked it. Interestingly, pyarrow does not like integer column names (which are OK with pandas).
Yes, but I'm also making refinements at the same time.
WOW! Now it seems obvious but yesterday I stared at it for hours! Thank you very much!
Are you sure that path being passed is in the correct format, and that it is a string?
 I figured it out there was a conflict between the Request verify method and verify attribute.
If you look at my other comments, you would see that I think Electron adds: * Unnecessary girth to the size of the project * A drastic increase to resource usage (though I am not sure by how much compared to the alternatives I listed in another comment). * More complicated since it is essentially using two scripting languages now (one of which I believe is of drastically lower quality than the other, *cough, cough NODE*) In conclusion, I do agree developement time and the number of cross platform hacks may decrease, but just because you can do something in programming does not mean you should. And I think this is one such thing. 
Nice, glad I could help :)
Not Google Maps Api but pass this function two lat/long points and it will give the heading: https://gist.github.com/jeromer/2005586
The best comment.
Ah okay.
Great initiative, what can we do to help as a non-plasma-physicist ?
The module returns ASCII encoded `bytes`. If you want a string, just call `.decode()` on the result.
I'm a scientist and have never heard anyone use 'codes' before. I think it sounds super weird. That being said, this isn't really important to discuss.
HDF5 is a good format for this - if Pandas can write to a file *object* instead of a filename you could use an io.BytesIO object to do the whole thing in memory. 
You can do this with Moviepy import moviepy.editor as mpe clip1 = mpe.VideoFileClip('some_video.mp4') clip2 = mpe.VideoFileClip('other_video.mp4').set_opacity(0.5).set_position(10, 10) full_clip = mpe.CompositeVideoClip([clip1, clip2]) full_clip.write_videofile("my_result.mp4") 
exactly what I needed thanks.
Thanks, I'll try it right now! Edit: Fantastic, it worked perfectly! (just had to change .set_position(10,10) to .set_position(**(**10,10**)**) I think I've avoided moviepy because it always seemed much slower than going straight to ffmpeg.
I called my library ngspyce, but it's only 1 letter from the application I'm interfacing (ngspice) so it feels a bit awkward.
HTTP, and yes, I am authenticating. 
!RemindMe 2 weeks "Start contributing to PlasmaPy"
I will be messaging you on [**2017-08-12 23:13:36 UTC**](http://www.wolframalpha.com/input/?i=2017-08-12 23:13:36 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/6qa11t/were_starting_an_open_source_scientific_python/dkwjp49) [**2 OTHERS CLICKED THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/6qa11t/were_starting_an_open_source_scientific_python/dkwjp49]%0A%0ARemindMe! 2 weeks ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! dkwjpgj) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
It is slower because it loads all the data to python and then back again to ffmpeg. But it is also much more agile.
I'm working through the lessons on Code Academy. Trying to figure out what I want to build as my first real project! 
So, I did something stupid, and managed to accidentally delete my comment. Anyway, here is the text I posted.... PyCon AU 2017 starts this Thursday. The main conference days are now sold out! However, you can now buy tickets just for a tutorial and/or the Specialist Tracks. But hurry, as ticket sales close on Monday 31 July. Tickets are still available to two of the tutorials: "Python 101" and "Build Tooling Workshop". Tutorial tickets cost $150.00 each. Tutorial tickets can be purchased on their own, or in conjunction with a Specialist Tracks ticket. If you wish to attend the Specialist Tracks, Friday-only tickets are also available. These also cost $150.00. In order to secure your spot, all bookings must be completed by Monday 31 July. For more information, check out: https://pycon-au.org/ 
If your working with one project and constantly recreating an exe it's faster to just make a batch or shell file that runs the creation. Faster than a gui where u browse and select files. Or make a python app that u can drag and drop the .py file on. 
Working on this right now actually, check out www.pillr.net. It converts python files from github into executables using nuitka. 
An idiom I've seen to avoid this problem is to use `lambda x=cmd: os.system(x)`. By setting `cmd` as the default value of `x`, this creates a copy of `cmd` at the time the lambda is defined. Probably the `functools.partial` approach is actually better from a readability point of view, but I thought I'd share.
I learned all those structures in school too. Most programming problems can be solved with dicts, sets, tuples and lists. That's why they get their own special braces like this () [] {}. Those are sort of meat and potatoes programing which is what python is meant to be good at. I've never needed to use a linked list. That's really for when you need a big chuck of non continuous memory and you want to be able to access elements with "next" pointers. Python dictionaries are also non contiguous and each element can certainly have a next pointer to any other element. The thing is tho, usually you can do fine by using your containers iteration techniques it has built in. Data structures classes, for me, were very much about how people used c++ in the 90s and less about how people use python today.
Look at the pyenv project...
Can confirm, particularly in physics. There is such a strong legacy of fortran verbiage in the physics programming community. You don't really think of things as software, so much as algos you can string together. "So how do you get this result?" "Well, run it through this code here, then this code." "Where I do get these codes?"
Try np.expanddims
What do you mean by "readable data", and what are you trying to do exactly? 
I'm impressed, are there any open source projects relying on cppyy? 
I was initially wondering what the use of this was, but over all it does seem like adds a bit. I think instead of submitting it here, you should put it on Github with some better docs explaining at a glance what it all does. Basically it wraps `requests` and `urllib.parse` nicely. I'd use it, I think. I think its spelled 'extension' and 'relative', and 'common' though. Since this is Python, I think it would be nicer if the method names were `like_this` instead of `likeThis`too.
Sounds like time to pull out Wireshark
HDF5 or SQLite depending on your data retrieval requirements.
[removed]
Ideally I'd like to do exactly this. As far as I understand, passing a BytesIO to pandas' to_hdf does not work. It expects a str for a filename. But BytesIO works with other formats though.
When would you use HDF5, when SQLite?
Conversely, those kinds of pedantic arguments about style are why scientists often don't take software engineers seriously either.
In cosmology, basically all of the gas is ionised (ie plasma), and we just treat it with the standard hydrodynamics equations. It only really makes a difference when you have a significant magnetic field. 
yield from ftw
[removed]
The pun space for package names is basically infinite. Pylasma was suggested over at r/physics, which I honestly like.
Welllll it's planned but in these early stages we're just discussing how to best get to that. But if you'd like to help, sure, come right over! Much appreciated!
Sure, that's a very good idea. I believe this is technically what astropy (the galactic hivemind we're drawing inspiration and experience from) does with their sub packages like units, which I can't recommend enough. So yeah, this is probably going to be the way we end up doing things. Thanks for the heads up!
Sick idea, thanks!
I suppose that's a dialect that may have been influenced by years of suffering under IDL and Fortran. It's a fair point which I missed, it dies sound weird - thanks! You'd be very welcome in the project! This is the approach I've been taking as well, there's plenty to be learned from practical work like this!
As long as standard HTTP authentication this should, start by testing a simple web site one that is very likely to work like Wikipedia and do a simple get request to prove the proxy works with requests from requests. requests.get(url, proxy={'http': 'http://username:password@ip:port', 'https': 'https://username:password@ip:port'})
What is a gmail Id? 
In some approximations, sure, fluid models via Navier Stokes are all that's necessary. Of course you need to couple your currents and magnetic fields to your fluid flows, which in the simplest approach gets you magnetohydrodynamics. Personally I tend to stay on the particle simulation side, but we have a pull request on an MHD solver open right now. If you'd like to contribute, come right over!
Look over how we do things, suggest improvements to best practices, testing processes, review code, discuss improvements, make sure our docs are readable, get hacking on some issues open, open some new ones... Plenty of stuff to do!
I do like the sound of that :)
Hey, I hope you don't mind me copying a response to another comment from this thread, I'm frantically trying to handle the incredible response this has gotten: Look over how we do things, suggest improvements to best practices, testing processes, review code, discuss improvements, make sure our docs are readable, get hacking on some issues open, open some new ones... Plenty of stuff to do!
What's the error? Is it just not sending messages? It is possible the system time is not set correctly. Compare the output of `datetime.now` and the system time. 
I'm not sure exactly what the issue is, but I think it can be simplified a lot. On mobile so sorry for formatting. Change the start to: import datetime today = datetime.date().weekday() tuesday = 1 while True: if (today == tuesday): https://docs.python.org/2/library/datetime.html#datetime.datetime.weekday
an endlessly running script will hog a whole cpu. is this really what you want?
The overhead I was mentioning is all spend in the Python interpreter, no OS involved (besides syscalls)
Hey everyone, thank you for the incredible response this has gotten! If you'd like to discuss this further, here's our chat room on Riot we've been using to discuss the project: https://riot.im/app/#/room/#plasmapy:matrix.org
Package name or GitHub Link ?
Yeah, we need to clean up the Contributors part a bit. I don't personally think you need too heavy background in physics, I'm basically an undergrad who's been dabbling in Python and particle simulations a bit - there's always things to improve with a package like this! The issues do need an overhaul, that's true. We've been trying to find stuff for "good first contributions", but haven't gotten to it yet. As for the vision statement, I hope you don't mind me linking you to a post I made over at /r/Physics (frantically trying to handle the response this got): https://www.reddit.com/r/Physics/comments/6qa27z/were_starting_an_open_source_scientific_python/dkx1ht4/
Sure, consider yourself reminded! :D
Looking forward to seeing you there!
I think you are over-complicating it, maybe something like this: import datetime //today = datetime.date.today() tuesday = 1 AM4 = 4 lastMessageDate = datetime.date().min() while True: if (datetime.today().weekday() == tuesday): if (datetime.today().hour() &gt;= AM4): if (lastMessageDate != datetime.date().today()): lastMessageDate = datetime.date().today() print("SENDING MESSAGES") 
How to do ant Crowd Simulation ?I'm doing Image analysis but im facing difficulties by doing so ,crores people are there . here is a sample in this link https://github.com/shubham-prem/Machine-Learning/commit/a129ad6960248f4cc0ddcf73c108509680cd3b54
https://stackoverflow.com/questions/14288177/interact-with-other-programs-using-python https://stackoverflow.com/questions/10322501/how-do-i-interact-with-windows-programs
Any automation like this is pretty cool. I understand what you mean by "email id". This sounds pretty cool and could have a lot of applications. I wonder how you would get th e raw data to be able to parse.
You might have enough resources for the task but I still think that running it continuously is not a great idea. Basically a part of your CPU is just executing a loop which does nothing for most part (busywaiting). Wouldn't it be a better idea to put the thread to sleep for some fixed amount of time and then check again? TL;DR use a sleep statement in the loop.
I can prefer the Python Course of SoloLearn they have an Python Playground, a realy helpful Community and the App is free and if you're looking for an mobile Python IDE use qPython3 
To ensure code security there are tools you can use. In order to detect errors within the code you have programs like checkamrrx and other that works great.
Thanks for the feedback
I meant email address.
It's still in testing phase. Will let you know once ready to be shared. This post is just to collect the feedback and response before I make it open source.
now do it in python2. (i know people should migrate, still curious how to do that without yield from)
Are you familiar with cron? Because this is almost certainly the worst of available solutions. That said, I can't see anything obviously wrong with that code. I'd check your assumptions. Log any exceptions. The problem may not be where you assume it to be.
If you're running it in the cloud for free, I wouldn't be surprised if it is being killed for burning too much cpu. /u/lakshayg 's suggestion re a sleep in the loop is a good one.
Is the process still running on client's machine?
I mean you confirmed that the process hasn't exited and the other functions are all still working and the code example you've provided is the only portion that isn't? 
&gt; Since they talk about the c code base in that quote, where would you do that exactly? This is a weak argument. First, programming language definition is orthogonal to implementation details. There are non-C implementations like Jython or IronPython, which don't rely on C specifics. Second, there is nothing to prevent use inheretiance between classes written in C code. All builtin classes "sublass" *object*, all written in C in CPython. 
Its a good idea. Perhaps you can elaborate what are search criterions ? P.S. You could create .vcf files for ease of export and import.
You can emulate `yield from foo()` with `for i in foo(): yield i`
&gt; I'm not going to keep arguing this point. You probably should. Because if you don't, we might fairly assume its an [XY Problem](http://xyproblem.info/) and give up trying to help you.
No, it's just QtWebKit that's deprecated. It's been replaced with QtWebEngine. If you're using it to wrap an HTML GUI, though, you should use QML instead.
ugh.. 
Look there are lots of tutorials among the web, I learned a lot from code academy. As a new to python I recommend you to go slowly as this language can sometimes get a bit complex. Errors can sometimes rise and it's important to detect and fix them. There are tools who helps doing that, such as checkamrx and others but it's recommended to do it also on your own. Good luck.
Nope, don't get it. Why does the first one work that way?
i've modified it to use `lambda cmd=cmd: os.system(cmd)` and it works like a charm. I found functools.partial weirder to use but that might be because i'm not a native english speaker and partial didn't really make sense to me in this context.
Recall your computer science and Big Oh notation. An array-backed list takes O(n) to insert or delete items, and must be pre-sized. In exchange, accessing items by index is O(1). If you must change size, especially to grow, O(n) to copy the old contents over to the newly allocated space. A doubly-linked list can change size at will, allows walking forward and backward. Inserting or deleting elements at a known spot is also O(1). However, you have to walk to access elements by index, so O(n). Python does a LOT behind the scenes to present a generic high-level list data structure without explaining what it's doing. Exercises like this OP expressed are intended to understand fundamentals of computer capability. 
thanks!
Python is high-level, where you're talking about low-level structures. Lists can be seen as either array or doubly-linked lists. (Internally they more likely array-based but will be copied internally when necessary.) To make a queue, just use .pop(0) and .append(). Too simple for a whole new class or type. To make a stack, just use .pop(-1) and .append(). See my other comment in the thread. As for trees and more complex structures, they depend a lot on your specific needs but similar recipes using dicts or lists of lists will apply. Make your own module with your own data type implemented. Then you can re-use it where you know that structure is perfect for your other uses. 
Okay, listen. They aren't saying that you shouldn't run the code 24/7. What they're saying is, when you run code that checks whether a certain condition is met 24/7 (like here, where you're checking the time), you NEVER want to constantly have the if statement in the while loop, because this will constantly check and use a ton of resources. So, you should add a "time.sleep(10)" statement after or before your if block. This will cause it to only check every 10 seconds instead of constantly.
Woah, woah. Another piece of code is in the same program? Post more of the code. It could be that code that's preventing this from ever reaching the print statement.
 [ 0 ] * 5 # this is a list ( [ 0 ] * 5 ) # this is a tuple containing a reference to the list above [ ( [ 0 ] * 5 ) ] # converts the (outer) tuple to a list [ ( [ 0 ] * 5 ) ] * 5 # repeats the inner list (reference to the first list) five times This is the same example in C: int inner[5] = { 0, 0, 0, 0, 0 }; int *outer[5] = { inner, inner, inner, inner, inner }; When you modify an element of outer[] you are modifying the single inner[] array. numpy is great for defining matrices: &gt;&gt;&gt; import numpy &gt;&gt;&gt; m = numpy.matrix([[0]*5]*5) &gt;&gt;&gt; m matrix([[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]) &gt;&gt;&gt; m[2,3]=17 &gt;&gt;&gt; m matrix([[ 0, 0, 0, 0, 0], [ 0, 0, 0, 0, 0], [ 0, 0, 0, 17, 0], [ 0, 0, 0, 0, 0], [ 0, 0, 0, 0, 0]]) 
Because Python lists are arrays not lists
I'ts pretty lousy form to remove a post with an active discussion.
Here, have an example import wave import struct from math import tanh source_file = "/usr/lib/python3.6/test/audiodata/pluck-pcm16.wav" dest_file = "spam.wav" n_channels = 2 samp_width = 2 max_pos = (1 &lt;&lt; 15) - 1 min_neg = -(max_pos + 1) short_le_format = "&lt;h" with wave.open(dest_file, "wb") as dest: with wave.open(source_file, "rb") as src: # this example only works with 2 chans / 16 bit assert src.getnchannels() == n_channels assert src.getsampwidth() == samp_width def from_pcm(x): return struct.unpack(short_le_format, x)[0] / max_pos def to_pcm(x): y = int(x * max_pos) # check domain if y &gt; max_pos: print('clipped') y = max_pos elif y &lt; min_neg: y = -min_neg print('clipped') return struct.pack(short_le_format, y) def effect(x, prev_y): # filter/distortion parameters a = 0.9 b = 17 c = 0.05 # high pass filter y = c * x - (1 - c) * prev_y[0] prev_y[0] = y # distortion return a * tanh(b * y) out_frame = [ 0 ] * 2 frame_count = src.getnframes() samp_rate = src.getframerate() dest.setnchannels(n_channels) dest.setsampwidth(samp_width) dest.setnframes(frame_count) dest.setframerate(samp_rate) # filter state l_prev = [ 0 ] r_prev = [ 0 ] while True: frame = src.readframes(1) if not frame: break fl = from_pcm(frame[0:samp_width]) fr = from_pcm(frame[samp_width:]) l = effect(fl, l_prev) r = effect(fr, r_prev) fl = to_pcm(l) fr = to_pcm(r) out_frame = fl + fr dest.writeframes(out_frame) This applies a filter and distortion to a given file. There's probably a cleaner/faster way to do this. I couldn't figure out how to use the wave object as an iterator... Wav frames are bytes objects. When you have two channels / 16 bit pcm, the frames are four bytes. The left channel is the first two bytes, and the rest is the right channel. The two bytes represent a little endian coded signed short (16 bit) number. Encoding/decoding to the [-1, 1] range useful for dsp is done in to_pcm() and from_pcm().
Wrote a program to prettify json in your clipboard. If the text in your clipboard is json parsable then it will be prettified and pasted back into your clipboard.
In physics it is fairly common to refer to "the code" that some institution uses. And a software engineer probably wouldn't recognise most research software as actual software or a codebase either, because very often it really is just a load of scripts in a folder together. When it comes down to it, the fact is we are amateurs. Many scientists aren't taught a lot of programming at all, never mind proper software engineering practices and terminology. So we're trying to apply those practices to software that scientists can use for research, so that they don't _need_ to be software engineers. All that said, I'll change it, thanks :)
Great, thanks. The tuple was the missing information for me there.
@konuralfy just learn how to use the pyautogui library It will handle most the basic automation the GUI's.
This SO post is not the best answer, maybe it's outdated? I'm going to side with /u/arnauldkayonga1 and just tell you to use [pyautogui](https://pyautogui.readthedocs.io/en/latest/).
Fml, in to_pcm() -min_neg should be min_neg: if y &lt; min_neg: y = min_neg My example is guaranteed to not overflow which is why I didn't catch this bug.
we're on reddit. do this instead: /u/konuralfy 
depends on the search criteria, but i think it's useful 
This can only emulate getting value from subiterator, but without sending value to subiterator.
alright, no big deal "/u/snaftyroot"
Thanks for the input I'm going to post the code on GitHub today. Any idea's for a name? 
It was a genuine suggestion; if that user has them enabled, then any mentions with the /u/ notation will send them notifications.
Learning Python 3 and how to use Git. 
This doesn't handle values returned from the inner generator.
Can I do async requests with it? 
&gt; ( [ 0 ] * 5 ) # this is a tuple containing a reference to the list above No it isn't. Those () do nothing, it's still just the list [0,0,0,0,0].
Your creativity is more likely to limit you than python. 
I personally use it to automate stuff a lot of the time. For example, recently I had to change a giant folder structure in a specific way that was very repetitive, so instead of doing it by hand I just wrote a simple python script to do it for me. People use it for all kinds of stuff though, you might see some good examples over at r/raspberry_pi, most people use python there to do whatever cool task they want their pi to do
You are right. Return value of yield from expression should be stored in a variable and returned. Then, it should work Edit: Example code In [42]: import functools ...: import time ...: ...: def call_log(func): ...: "A simple decorator for recording function call." ...: ...: @functools.wraps(func) ...: def wrapper(*args, **kwargs): ...: s_time = time.time() ...: ret = yield from func(*args, **kwargs) ...: e_time = time.time() ...: duration = e_time - s_time ...: print('call function %s with duration %f' % (func.__name__, duration)) ...: return ret ...: ...: return wrapper ...: In [43]: def gen(n): ...: yield from range(n) ...: return "END" ...: In [44]: a = call_log(gen) In [45]: x = a(3) In [46]: next(x) Out[46]: 0 In [47]: next(x) Out[47]: 1 In [48]: next(x) Out[48]: 2 In [49]: next(x) call function gen with duration 4.500847 --------------------------------------------------------------------------- StopIteration Traceback (most recent call last) &lt;ipython-input-49-5e4e57af3a97&gt; in &lt;module&gt;() ----&gt; 1 next(x) StopIteration: END
When I wrote a gmail parser the problem I had is that it took such a long time to parse. Like 400 emails took many minutes to parse, it was kind of ridiculous. Have you seen that issue at all?
Not yet but it's in the works
One great aspect of Python is the massive amount of libraries at your disposal. You can do anything from analyzing/geolocating internet traffic to drawing pictures. 
I agree, when you're learning something new you really want to apply that language to stuff that's actually interesting. I have to admit I've faced issues like that as well. My personal suggestion is to try and look out for opportunities in your life that Python could help solve. For example, I work full-time and there was once a situation where I had a bunch of data with me and I used Pandas (Python's data science library) to show some trends or patterns in that data. And trust me I'm no expert, I sorta started from scratch with that. Or if you're a student you could maybe create a Python app along with a GUI to log your finances. That sounds like a huge project but definitely worth delving into. Or you could try and do some of your assignments with Python too. 
Sounds like what you need is a project. This is a common experience with programming and sort of the logic behind learning to code "the hard way". Think of it like learning any other language, eventually you need to stop practicing verb conjugations and actually go talk to someone if you want to progress. For me, I learned to code in order to accomplish a specific goal for my doctorate. I suggest picking a project that you find interesting or useful. Doesn't matter if you've no idea how to make it work.
 &gt;&gt;&gt; {} is {} False
Maybe just those already present in Gmail? They're pretty powerful.
Things I've done with Python, or mostly Python: * Build an API for a blog (UI is in Angular) * Wrote a script to reach out to a foreign database, grab a list of all the actors in there, then scrape the web for pictures of those actors * Used 'faker' to create a bunch of fake demo users with realish-looking data on a demo instance of a software product I work on * Used the 'gender' library to take a list of about 1 million user records, take their name and make a best guess as to what gender they are (for sorting and categorizing medical records for users) * Wrote a library that translates JSON input into a SQL query as output * Wrote a script to add UUIDs to data to be synchronized from a customer's instance to ours and vice versa (both databases started with the same state, but both have been added to by customers, so a straight-sync would clobber records, so we use UUIDs as primary key to ensure that no records are lost) * Wrote a script to monitor a bunch of my websites for uptime, and send an email when one of those sites went down * Wrote a socket server that controls a Philips Hue bulb in a lamp on my desk, and turns the bulb red in the event that one of my websites goes down Etc., and so forth. There's a *lot* you can do with Python. I'm a software architect / web developer by trade, so most of my use relates to that in some way, but data science, convenience, and utility functions are all also within the realm of Python's capabilities. A lot of people use it to write websites. Reddit, Instagram, Youtube, Dropbox, SurveyMonkey, Quora and many other websites were all written in Python, likely with the help of a web framework like Django, Flask or Pyramid. You might check out [Learn Python the Hard Way](https://learnpythonthehardway.org/) which will teach you Python the usual way, but then also gives you practical projects to tie the various components you've learned together, like building a game, a website, and then making a game on a website to round everything out. 
You can comment in this [issue](https://github.com/universe-proton/universe-topology/issues/5)
thanks
You'd be better off asking this in [/r/learnpython](https://www.reddit.com/r/learnpython/) In regards to your question, there are some fundamental things you seem to not understand. For example, both your programs contain endless while loops and in the way they are currently structured, it's impossible to use them together. You can only make one file (program) be aware of another and that is by calling a import transmitter in your receiver.py file or vice-versa. You can imagine that internally this takes all of the code from your transmitter file and parses it in your receiver.py, essentially becoming both programs in one file.
I know about the endless loops, I use them as "live streaming" technique.
It sounds like the problem is that when you run it in visual studio, there is no standard input, so when you try to read an input, there is nothing there. My guess is you get an error message, something like: &gt;&gt;&gt; input() Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; EOFError I am not familiar with visual studio, but there may be some option to "run as a console application" or something similar, which will allow you to read from standard input.
Shame those bastards, love it.
So first off, good luck! Your idea is definitely doable but you need to learn a couple things first. Web Scraping (getting info from websites), how to setup that RPI, definitely brush up on if statements, and wouldn't be bad to look on the RPI forums on how to control those LEDs. Stack Overflow and the RPI forums will be your friend. Hope this helps. 
I love it
Thanks. Trying too ;) my idea is to use chrome + selenium to get the details on my router (cpu, ram, etc.. and save it to the csv) to make sure its not "acting up" so they cant say shit.
You're really just shaming the poor intern who runs the social media pages
I foresee a very high probability of 140 sequential if statements. A determined beginner is one of the most dangerous programmers. See: https://github.com/AceLewis/my_first_calculator.py/blob/master/my_first_calculator.py
This is true, when you call them they don't do anything. When you go to the store they don't do anything... I'm all out of ideas. -- i did this more than anything as a frustration release vehicle. I'm hoping that if enough people do this they would take note.
The real project is to write the program that writes this program. 
Yeah ik I'm aware of the joke, but it's based on a true story
You may want to take a look at pfsense to replace your current router. That way you could run Python natively on it. It's just a thought though.
&gt; pfsense to replace your current router I'm just a dude at home, this looks very expensive. Their routers (vodafone) are locked down to hell, can't install any custom software on it. Nor would i want to, since they lend them to me, would hate to be changed for anything -- theyre sneaky bastards. 
Thats not 100% true. Well the poor intern can't directly fix your issue. They have a lot of power to mobilize people that can. It looks bad on the company when people publicly tweet them about an issue and they don't respond or make an effort to fix the issue. 
Just a mention, you can run PFsense on a virtual machine or on a old computer, it doesn't have to cost much. Obviously people can spend a lot on it, though. I would harass them into making sure their router is bridged, though.
whats it do?
Sounds great thanks a lot 
It looks like it tweets them every time his internet speed drops to less than 40% of what he pays for.
When it come to python, make sure you learn a lot and code slowly as this language can sometimes produce errors within the code as a result of high complexity. Those kind of errors can sometimes be hard to find, although there are programs, such as checkamrx and others, that help detecting those.
awesome!
Runs `speedtest-cli` saves the results to a csv, reads the last line of the csv file and calculates a threshold, which is 40% of what i pay for (300Mbits) if the actual speed is less than that, it annoys vodafone. Then sleeps for 5 minutes, does it all over again.
Sounds good i' ll try this thanks 
I think PyCharm is the best you've got. I work with it and it works great. Just make sure you know that there are high complexity errors that the IDE won't help you find. There are external tools you can use, such as checkamrx in order to get some help. Good luck!
Exactly!
Just to add to this. It's free and open source, so the cost is any hardware you want to use it on or a VM. If you are having trouble getting them to put your router/modem combo into bridged mode tell them you just got a new expensive Cisco router and you would like to use it. They will normally give in as they know Cisco.
Learning about data science with datacamp / Udemy. I'm enjoying what I've done so far, even if it is quite basic 
Sadly, I guess you'll only get banned from their Twitter account. But hey, nice script!
If they're a normal ISP (not mobile/satellite), you don't even need their router. Buy your own modem and router (or modem + old PC with pfsense as router) and send it back and save the monthly fee. It'll be less money in the long run.
You just need to keep on programming and it will come to you, don't worry about it. Just remember to know how to use it the best way, as python can get a bit complex sometimes. High complexity leads you code to have errors that are hard to be detected sometimes. There are programs who helps detecting those, such as checkamrx and others. Good luck!
lol. that's a fair assessment.
Hmmm, I think you can open a terminal in VSCode by typing [CTRL + ' ]. Then you can run Python REPL, and your program from there.
From what I've seen you shouldn't use print then input. Just do myName = input("What is your name? ") print("Hi nice to meet you {}". format(myName)) or print("Hi nice to meet you " +myName)
Your on wifi?
You can use pip packages just fine with conda. Anaconda only supports MKL libraies, so I'm not sure quite what your issue is, unless you also installed numpy with pip. Shockingly that can break things, so try conda, then pip. There are some limitations with using cutting edge versions of libraries, but mehhh...I upgrade my stuff once every 6 months. 
yup isn't everyone? my mac doesn't have an ethernet port, neither does my iphone, my xbox does, but running a cable would fuck with the decor and the fengshui of the room. ;) 
places charge a monthly fee for a router?
What are you really trying to do? Make two functions on the same computer talk to each other? Make two computers talk to each other? Make 1000 computers talk to each other?
You should learn how wifi works before sending a tweet every time your performance from your laptop isnt expected... If you really want to know if they're under performing, take a computer and plug it straight into your modem and run your test. Wifi is going to be impacted by everything and a lot if out of your control. Neighbors on the same frequency, neighbors close to your frequency, wireless phones, a microwave, line of sight between devices. Wifi is also half-duplex, another hard physical limitation. Your connection will also be impacted anything else running on your network. You'll never get the advertised speed on wifi and your isp will never take you seriously because of that.
two programs communicating in the same computer
&gt;Need an account to view the twitter page what the fuck
What do you want them to do? What kind/how much data are they passing back and forth? Your program as is doesn't do anything useful, which makes it hard to help you. Are you just trying to do two independent things at once? What are these two things? Is there a reason you can't just use threading? Alternatively, what does doing them simultaneously really buy you? 
The transmitter file changes the L1, L2, L3... variables in order to make a text animation saying Transmission: ON. I want the L1, L2... to be changed in the receiver file too so the animation will be displayed.
You'll lose 40-60% of your speed using WiFi and not being wired in. I get 100 down wired and ~50 on WiFi.
funny how i would get advertised speed (within my threshold 40%, but mostly in the 250+ range) for the last 2 months until 5 days ago. i get all the variables, i just can't test them, this is the best i got -- which is why i'm pining the router directly to try and get a somewhat of a base reading, is it perfect? never claimed it to be. i'm just annoyed with my situation and this is a call for help!!
Look at ubiquity edge router lite 
Pretty much every ISP in the US charges a monthly rental fee for their modem/router/AP combos. And if you use your own router they like to not provide any support unless you can prove beyond a shadow of a doubt that it's their line and not your equipment.
Wireless is a crapshoot. There's probably some recent source of interference which is causing you issues. Every couple months everything in the 2.4ghz spectrum just completely craps out in my apartment for a few days. I turned off the 2.4ghz network on my router long ago to mitigate the issue, but still Bluetooth, etc just completely stops working. I have no clue what's causing it, but there's no way I'm going to complain to the manufacturers of the 3+ devices that break, because it's clearly not their fault. Minimize the chances of issues on your end before you whine to others. This is like trying to return a TV to the electronics store before checking if the remote battery is dead, or even trying to hit the power button on the box.
Yeah, that's what I figured. Python looks really fun however there arent a lot of Python jobs in my area. Some as data scientists tho
&gt;be on wi-fi &gt;complain about not getting full speed Hhahaha oh fuck! You can code scripts but you didn't know THAT?
twatter is trying to recruit you
It might be that five days ago some idiot living near you just bought a [baby monitor that interferes with wifi frequencies](https://www.babycenter.ca/thread/1652593/baby-monitor-interfere-with-wifi) and simply uses it at the same time every day.
blimey, I use my own but got the ISP provided one for a one off £6.99 'delivery charge', it's a bit shit but a fair backup if mine ever dies, I don't think any UK isp charges a monthly for the device? (This is adsl as we only have fibre to the cabinet in my area, maybe fibre to the premises is a different deal here, dunno.)
Same thing I'm getting. Nope.
Calm down girlfriend, there is more explanations above.
Virtualenv?
That is monstrous.... Edit: I just saw the generator. Feel better now.
Plausible. what do you suggest, how do i monitor the baby monitor?
Just have one program that does the entire thing. 
It's reasonable logic but your asking them to ignore what ever monitors they have and believe you based off some wifi test to a speedtest site. If you really need help, get an Ethernet adapter and an Ethernet wire for your mac, plug it straight into your modem, turn the wifi off and do your test from there when you notice it's slow. Return them if your short on money when your done investigating. 
So change the variables and write it out. 50 lines of file writing is instantaneous.
You have to log in to twitter to read stuff now?
Find the baby find the monitor 
To truly troubleshoot your issue and solve the problem vs just annoying a twitter page that has more than likely already blocked you I would get an ethernet adapter and see if you even have an issue. Wifi is not reliable. I pay for 300mbps down with Time Warner and I get like 80mbps on wifi. On ethernet I get 340mbps. 
Many things wrong here. I'm just gonna shoot some: - "swich" isn't a word, I guess you mean "switch"? - don't abbreviate function names. "trns" is nonsense, just call it "transmit" - use one variable for the "screen", not L1, L2 etc. Look up multi line strings. - L1 is just "-="*19 + "-" think about that for a bit - while (0 == 0) is the same as the ideomatic while True But I guess this is some kind of homework and that's why it's two programs?
No. Use beautifulsoup
The problem is wifi is extremely unstable, there are so many things that can interfere with it and slow down your connection. Running a speed test on wifi tells you nothing about the actual internet connection.
1) they don't care 2) you won't get 100% of the speed you pay for through WiFi anyway. It depends on your device and router. I pay for 150/15, but only get 50 down when I stand right in front of my router 
For the love of God, start with a [simpler example](https://pymotw.com/3/socket/tcp.html).
Please stop spamming this. 
Get a USB to Ethernet adapter and test directly plugged into the modem next time your having speed issues.
Try powerline
yep, they didn't gain one user last quarter, this must be a way to artificially inflate stats
I get the same download speed from my wifi and ethernet, give or take 5kb/s, I dont know how to explain this, it dosnt seem right to me as I use wifi pretty far from the modem/router (both are slow anyways) mind you my I test my speeds from downloading stuff from zypper or apt, so that may be the bottleneck, although I get similar speeds downloading stuff from firefox, sometimes I wish I was good with networking so I can figure this out, but networking seems complicated to me
Hah. Comcast not only charges for their own modems, sometimes they'll just decide to declare *your* modem as theirs and start charging you a monthly fee for *that* one too until you catch on and call them on it. 
Who monitors the monitors!? 
Most problems are because of interference or weird modem placement. People don't know how channels work and set them so there is interference, then everybody on the block is fucked.
this may be it, I can see two other networks near me, and both are really low strength, I live on a sparse street
You can't use console input when running default configuration in VSCode, unfortunately. It's because the input line you see in the debug window is actually for executing Python code when your program is paused. Available solutions are to a) use "integrated terminal" or "external terminal" configuration, b) don't use `input()`, or c) don't use vscode (though I must say that of all Python development environments I've tried, I currently like it the most). 
Could you link the video you watched please, I need more help with comparing how things work between Java and Python. Thank you
Oh, I was just making a general statement about wifi interference. At my old house we had people on be the block who used overlapping channels on 2.4 so no matter which channel you used there would be interference. Bit was fucked. You can get apps on your phone to show you which channels people are broadcasting on to check this. 
https://www.youtube.com/watch?v=xLovcfIugy8 Video was super helpful, first he shows you the code in Java then the same code in Python.
If your only source is apt and firefox then your most likely not maxing out your connection. If your advertised download is 100mb, wifi drops your 50bmb but your source cant upload faster 25 then you wont see any problems between the connections. Still a little more complicated then that but that would be my guess.
Do you prefer it to pycharm ?
&gt; i just can't test them You sure can, by testing with a wired connection. If you make it easy to dismiss your data, that's exactly what they will do. &gt; this is a call for help Do you want help or results? If your objective is to make a fuss on twitter, and maybe get some pity, then that's one thing. But if your objective is to improve the quality of *your* experience, then you should absolutely try to rule stuff like this out. That way, if there's things you *can* control (and your provider *can't*) to improve your experience, you figure that out. If there are things your provider can control, you actually provide them actionable data.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
It's because op linked to the "tweets &amp; replies" view to include tweets starting @somebody. Twitter makes you sign in to see those, though.. Feels to me more like recruiting than protecting noobs. 
/u/jakevdp generally advocates for miniconda not anaconda. I've installed opencv3 with conda on Windows with no issues, it is not in the defaults channel, so you will need to install it from a different channel. I can't remember the name of the channel opencv is on, you can search for it though.
Only in that Visual Studio Code is free. I haven't used PyCharm so I wouldn't be the best person to do a pro vs con. 
considering the piece of shit routers they tend to give out, I'd be fucking livid if they were charging me monthly rental on it.
Well, the next time you get very low speeds, try connecting to your router using a cable, and try again. If that brings the speed back to what you pay for, then it's the wifi. If not, it's probably not a baby monitor.
&gt; Please stop spamming this. You are such a troll. 
Aye, with the one I got from plusnet, If the house is quiet I can tell by the note of its whining noise when it's routing a lot of data, from the next room. Aside from not being able to do half the things I need to with it.
This is a major update since my post last year regarding this repository. Here are some of the features I've added since then: - Full support for Python 2/3 - More control over model parameters - Advanced simulation of an exchange - Bokeh charting of equity curve for a tested strategy - Unittesting - Example data - Code that is more robust, clean, and smart
Lol. Says the guy spouting conspiracy theories. 
That's pretty close to impossible bud. Source?
http://lmgtfy.com/?q=twitter+didn%27t+gain+any+users+this+quarter edit: not really liking the downvote brigade here. . . 
Which their video advertisers will love... paying to serve pre-rolls to an audience with no actual investment in the platform. 
I believe you are correct as much as it saddens me. I feel it hurts the platform. Many people only use it on mobile, and when asked to log in on PC, it's just going to be annoying and many people will just drop the site from their list (as I and many others have)
My iMac has an Ethernet port. My MacBook is usually on a dock with an Ethernet port. The only time I test the speed over WiFi is when I want to check my WiFi performance. If I'm testing my ISP, I use wired.
That's what I thought... you said they didn't gain new users. They did but they also lost the same amount of users.
What's with all the wildcards?
the net gain is 0. it's been all over the news for a couple days. I didn't say they didn't gain any NEW users, I said they didn't gain ONE user. Words matter.
Does this mean defining an empty set could be faster? Because there is no equivalent to defining an empty dict as {} or an empty str as '', I'd be tempted to say this is the case, but I'm only now learning the nuances of Python (and switching to 3), so I definitely don't know enough.
1. Yeah 2. He's getting less than 10Mbps on a connection that's supposed to be 300Mbps. 
Macs don't have Ethernet ports?!?
&gt; Lol. Says the guy spouting conspiracy theories. You obviously don't know what you're talking about, troll. 
You're right. I misinterpreted your point. We good
Fair question: i googled "wireless name osx" first link, grep-ed some more since the answer actually gave me more than one result and left it like that. -- if it aint broke...
Agreed. This is step 2, i was looking into this yesterday.
For starters this should be in /r/learnpython. They should have some resources in the sidebar to help you get started with Python in general. I know the free ebook "Automate the Boring Stuff" is a popular recommendation and will probably give you some insight into how to get this project off the ground. Secondly, 140 rgb LEDs off a raspberry pi is going to be a bit tricky, you can't drive them directly so you'll need to get LEDs with something like [this] (https://www.adafruit.com/product/1487) so you can control many LEDs off a single pin. You'll need a driver/library to control it, [this] (https://github.com/jgarff/rpi_ws281x) may work. Finally, you'll need a way to get the weather data. Maybe something like [PyOWM](https://github.com/csparpa/pyowm/blob/master/README.md) would suit your needs. 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [csparpa/pyowm/.../**README.md** (master → 1169d52)](https://github.com/csparpa/pyowm/blob/1169d52e36ccf6aaa3c5777670700d292cc0982c/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dkxoju9.)^.