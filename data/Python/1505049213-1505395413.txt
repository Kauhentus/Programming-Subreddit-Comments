Wouldn't this run into problems if you have two words that start the same way e.g. [bum, bummer] you'd only find bummer It does look like a really nice example to be fair. I've never heard of this tree structure before, but I had a go myself and it looks waaay uglier than yours!
I think bisect was mentioned once, but the solution using it is fairly short, and worth making a note of, even if it may not be the fastest, it may be fast enough, and short enough to avoid bugs... import bisect class Autocomplete(object): def __init__(self, word_list): self.words = sorted(word_list) def find(self, pattern): i = bisect.bisect_left(self.words, pattern) matches = [] for w in self.words[i:]: if not w.startswith(pattern): break else: matches.append(w) return matches if matches else None 
Twisted has incorporated the lessons of decades of use, has an impressive track record and a plethora of well debugged addon protocol modules.
Twisted is not only an event loop. There's a lot of stuff to help write network code, and to help structuring things. The ecosystem around asyncio is growing, but I think twisted is still bigger.
Yeah I tried that and I've looked at Al the examples but it wouldn't do anything when the song stopped 
[15 seconds spent on Google](https://stackoverflow.com/questions/2964140/what-is-a-software-framework) 
Doesn't that come with any new Python?
&gt; It has specific use cases where it excels but overall I think it is a less flexible first language to learn Sorry to be obtuse, but when you say "it" I assume you mean Ruby?
Guys here is a V2 with some small changes and a possible place to add the Autoplay what unfortunately doesn't work... https://pastebin.com/jYS8pP4p
Depends on if you ask /r/Ruby or /r/Python
u/efmccurdy 
Which one is more suitable for those things I described? In your opinion.
[removed]
Hardly worth it as it takes an age to download and install when, as [u/Rhomboid](https://www.reddit.com/user/Rhomboid) has all ready said, the Christoph Gohlke site provides binary wheels for you.
I've been using that site for years. The only problem I've ever had is if the package I'm looking for just has a link to it's own page, but no binary wheel. Thankfully that is very rare.
Do a PWA with Python tutorial
There are frameworks for client-side code, server-side code and most other types of code. It's not a perfect analogy, but you can imagine it like the frame inside a house or a car. Because lots of cars and houses have the same general shape, you use generic components and build your stuff on top of them. Frameworks make it possible to develop reliable software much more quickly. They're like collections of libraries that can provide all the basic pieces you need to build whatever software you're building. In the case of web server frameworks, these are things like: * HTTP request handling * Data serialization / deserialization * Templating for rendering web pages * etc. Different frameworks have different opinions and patterns for using them. The person who wrote this tutorial makes a comparison between Flask and Django. Django comes packaged with a lot of stuff like user authentication and tools for talking to databases. The Flask philosophy has all of these things packaged separately so that you can choose only the pieces you need for your application. Different frameworks have their own drawbacks and benefits and some emphasize different needs like speed or ease of use. Choosing a framework is based on the requirements of your application and personal preference.
I am biased, but would day python for the first 3, neither for the last one. For mobile dev it all depends on what you want to do.
Does this example help? http://programarcadegames.com/python_examples/show_file.php?file=background_music.py Also note the advice on choosing an event identifier in the `Doing Something When a Song Ends` section here: http://www.nerdparadise.com/programming/pygame/part3
I come from a liberal arts background and learning Python was quite doable. The big hurdles were finding projects that kept me interested for long enough to finish properly. It is a given that something will go wrong with some part or parts of what you set out to do. Having something you are interested in helps get through that suckage. Starting with a book like automate the boring stuff with python is a good start. Also if you are comfortable in a Windows environment there is a package called Anaconda that makes the basics easier in Windows.
the number of inputs and methods wasnt specified, if you want to get pedantic, technically the name of the methods wasnt specified, just that there needs to be a 'find function' which means to me at least, that the function needs to find the correct output
Many programmers seem oblivious to the fact that huge numbers of programs spend their lives waiting on networks, databases... If you have a speed issue you use the [profile](https://docs.python.org/3/library/profile.html) or [timeit](https://docs.python.org/3/library/timeit.html) modules to find out where the issues are. Then you use the [Python Speed Performance Tips](https://wiki.python.org/moin/PythonSpeed/PerformanceTips) page to see if that solves you problems. If not write an extension in C, Go or Rust.
I've been working on a WordPress-like blogging system and have already migrated two of my own blogs to it: https://www.genjipress.com https://www.ganriki.org Unfortunately the installation system is a wreck -- I basically had to hand-bootstrap it for my own use -- but my next major project with it is to fix that. I've also cloned a favorite video game of mine, using the Pyglet library.
i didnt do comp sci in college lol, i did engineering and i didnt take 24 hours because i thought i solved it lol
Kivy would be my first attempt if I were to write an android app in python.
This is definitely a true story. To me the moral is: don't just shovel internal APIs onto the internet blindly. Think about your architecture. 
Correct
Nice... consider a look at API STAR as it needs more documentation
Actually the article is not only about the internal APIs. It could be applied, for example, to Github API. I’ve tried to show that the networks are unreliable and the retry policy must be thought carefully.
Raspberry Pi just added it as their main Python IDE. 
Now they only have to do the second 93%
Yeah, exactly. I don't get it.
Perhaps try the free [Anaconda](https://docs.continuum.io/anaconda/install/windows) distribution? It gives you the same Python, plus the ability to install pre-compiled versions of many packages. According to [this page](https://docs.continuum.io/anaconda/packages/pkg-docs), it has a pre-compiled version of Boost -- this might make your day a lot easier.
As an experienced developer but extremely new to python, I bookmarked this and am looking forward to following your tutorials.
Why would you tho? And if, for some reason, you did, just shard by the second letter.
Adding a function that silently discards args and kwargs sounds like a bad match for recently added support for type checks.
I've tried your example but it doesn't work now it wound even draw the gui and the music doesn't play... Anyway V3 https://pastebin.com/dD8CzvKF 
Is this your first web development framework? I've used other frameworks in the past in other languages and tried to jump into Django. Way too much going on, ended up trying Flask out and I was able to start producing something useful much more quickly. I don't mean to imply Flask is better than Django, just that if you're just starting out I'd seriously recommend considering Flask. I wish I had started with Flask, but I think I'll end up trying django again once I have more experience with python in general.
Making a register for my school's teachers to use to gain their trust and to make them notice me. I need them new teachers to respect me!
R-Forge doesn't seem to have Mac binaries, so you'll probably need to install the pacakge from source somehow.
It can't be dated. Any course using Python 3 should suffice. The reason is that the changes to Python are mostly under the hood or on the fringes. These elements will only become relevant once you are beyond novice level. Google Python code academy, than automate the boring stuff (I hope you don't mind using tutorial formats). By the time you have finished these, you should have gathered a wealth of possible next subjects (its way easier to find material than to study it).
Sharding by every letter for which there is a choice is a compressed trie, which is the most optimal solution. For a 24-hour interview, I would do that. I would also submit the binary search solution since that is only a few lines, and nearly as efficient.
Think of this as a practice interview. It's important to figure out where you go wrong and how to do better. Interviewing is a skill. If you had realized that you hadn't solved it, maybe you would have found a way to do it? You learned binary searches?
Got bored and implemented this as a trie. Used a recursive `defaultdict` to make implementation simple. from collections import defaultdict def recursive_defaultdict(): return defaultdict(recursive_defaultdict) class AutoComplete: def __init__(self, word_list): self._trie = recursive_defaultdict() for word in word_list: t = self._trie for c in word: t = t[c] t[None] def find(self, prefix): t = self._trie for c in prefix: if c in t: t = t[c] else: return None ret = sorted(list(self._traverse(t, prefix))) return ret def _traverse(self, trie, prefix): for node in trie: if node is None: yield prefix else: yield from self._traverse(trie[node], prefix + node) **Pros:** * code is simple and concise * Faster and smaller footprint than a trie-node class **Drawbacks:** * While it keeps the code simple, it may be somewhat obscure for maintainers * `self._trie` is fragile and should not be accessed directly, care must be taken with lookups since a lookup may accidentally create a new node in the trie
The whole linter issue is stupid. You can disable specific warnings.
Howso?
`pdb.trace()`?
That's how we got matrix multiply and thank god we did because that argument was used. A lot of people strongly opposed it, but it is an incredibly useful feature to a good chunk of the Python community. Still, complaining about the linter (put a bug on the linter's page) of the number of characters or the required semicolon (what's wrong with 2 lines?) is short sighted. Can we bring back print as a builtin, so I don't have to type parentheses? It's too hard.
Because it will accept any parameters you give it, intentionally or not, and the type checker won't be able to warn you. Instead of having `noop(*args, **kwargs)` I'd take a better `lambda` syntax that would solve this and many more problems. Think JS arrow functions.
I think he means you have to compile the source of Python to install it on Linux. Which is mostly correct, but only if your distribution doesn't have a prebuilt package available to it. To the OP: Pretty much all distributions provide a Python version with the base OS install. Which version it is depends on the distro, but there is always a way to get different/newer versions through various repositories. For instance, RHEL/CentOS 7 come with 2.7.5, but you can also install Python 3.4 from the base repositories. If you want newer, you can use the IUS Community repository (I do) to get 3.5/3.6. Latest Fedora comes with 3.5? I believe and Ubuntu 16.04 will give you Python 3.5.3.
Looks very nice 👍 I didn't understand, the brighter color is the more tweets are posted from the airport? 
Sonovabitch that is clever...
Forgive me: I think I'm clearly missing something here :) Clearly it's a very generic type awash with `Any` but I don't understand the circumstances in which that would be a problem?
Whats wrong with pass? :-/
Im gonna try this. I was able to resolve my original error but I'm stuck at the next one and everything is just so complicated...thanks for the links!
Twisted interoperates with asyncio. With twisted.internet.asyncioreactor
well done! I learn a few things reading your code :D
can you share the last one?
Not really, since say for ```find('bum')```, then ```self._dfs```starts the search in ```self.root['b']['u']['m']```where ```node.mark``` is True, so it's yielded along with bummer later on. &gt;&gt;&gt; Autocomplete(['bum', 'bummer']).find('bum') ['bum', 'bummer'] Though now that I saw /u/EsperCharmMyself's version I'd probably use a regular dict with a special key to mark the end of the word rather than a subclassed dict with a special attribute, e.g. ```Trie.END_OF_WORD = object()```.
I doubt you could run pycharm on a pi. Especially a pi zero
If you don't have pip inside your virtualenv you need to upgrade to a more recent Python ;)
While most of the approaches below are good and would be very well suited for C/C++ or a similar language, in Python they are awfully slow in comparison to what Pythonic code can do. The key to writing fast Python code is to use the built-ins as much as possible, and avoid hammering out your own data structures or algorithms unless necessary. As a comparison to some other solutions provided, I skipped the trie, nestings etc and went for a flat dictionary with indices, and a companion dictionary with lengths. Using [this wordlist](https://github.com/dwyl/english-words/blob/master/words.txt) with 460K words and a prefix length of 3, you get look-up speeds on the microsecond scale, as opposed to milliseconds like most have here (on this large dict). from collections import defaultdict class AutoComplete: def __init__(self, wordlist, trie_size=3): # 3 length -&gt; 8000 entries in dict (ish) self._words = sorted(wordlist, key=lambda word: word.lower()) self._trie_size = trie_size self._indices = {} self._length = defaultdict(int) for idx, word in enumerate(self._words): for ll in range(0, min(len(word), self._trie_size + 1)): trie = word[:ll].lower() self._length[trie] += 1 if not trie in self._indices: self._indices[trie] = idx def _find_by_needle(self, needle): if needle not in self._indices: return [] first_idx = self._indices[needle] length = self._length[needle] return self._words[first_idx:first_idx+length] def _find_by_search(self, needle): if needle[:self._trie_size] not in self._indices: return [] idx_begin = self._indices[needle[:self._trie_size]] idx_end = idx_begin + self._length[needle[:self._trie_size]] wrds = filter(lambda word: word.lower().startswith(needle.lower()), self._words[idx_begin:idx_end]) return set(wrds) def find(self, needle): if len(needle) &lt;= self._trie_size: return self._find_by_needle(needle) return self._find_by_search(needle) # Instantiation: 0.906000 # Finding 10000 results: 0.563000 (56.30 us/lookup) # Total time: 1.469000
But why?
IDLE runs just fine on the Pi. It always has.
 &gt;&gt;&gt; import datetime &gt;&gt;&gt; release = datetime.date(2008, 12, 3) # Python 3 release date &gt;&gt;&gt; today = datetime.date.today() &gt;&gt;&gt; delta = today - release &gt;&gt;&gt; print(delta) 3203 days, 0:00:00 &gt;&gt;&gt; rate = 3023 / 93 &gt;&gt;&gt; print(rate) # days/% 32.505376344086024 &gt;&gt;&gt; eta = 7 * rate # days to completion &gt;&gt;&gt; print(eta) 227.53763440860217 &gt;&gt;&gt; print(eta/365 * 100) # % of a year remaining 62.339077920164975
IDLE is still installed. 
https://stackoverflow.com/questions/43602829/installing-blotter-and-quantstrat-on-github 
solved here:
JS for the front end, Python for the backend. Reddit uses Python. Instagram uses Python. YouTube uses Python.
test comment please ignore
 I really didn't know that. as I was using the extension it didn't show the usage of Python so.
Nothing, this is the function equivalent of that. Something like this is useful for stubbing out things meant to cause IO in tests. 
This is probably where the real advantage will come: healthy competition.
Is the map accurate? Otherwise, what's the point of this exercise?
I'd prefer web over desktop largely to let the backend sit on a remote server, although not strictly necessary.
We have many CS courses that use Python at edX: https://www.edx.org/course/subject/computer-science/python. [MIT's 6.001x](https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-11) is the most popular.
There's no way to tell from the front end what backend language is used to generate the page sent to the browser. Though in some cases (like if a webpage has a PHP extension or if it's a well known framework known to be written in a certain language you can tell that way). But yes as the other poster said, you're on a website that has a python backend right now. Here's the [code](https://github.com/reddit/reddit). 
I'm working on a Database-Editor for some SQL-DB's to make work a bit faster.
You can't really tell what people used to build any particular website on the backend; if the server doesn't want to tell you, all you can do is guess. Python is pretty popular on the backend though, especially if you filter out the low-budget CMS-driven websites that typically run on some sort of PHP framework. After PHP, the most popular backend languages are, off the top of my head, Python, Java, C#, JavaScript (via node.js), and Ruby. On the frontend, you *have* to run on JavaScript, because that's what's built into browsers, so there are two main options: use JavaScript directly, or use something that compiles to JavaScript. Python does not lend itself to this at all; there are a few experimental "Python in the browser" projects out there, but none of them is mature enough to use on a real project, and frankly, Python does not offer enough over JavaScript to make this worth the hassle. So, to answer your question: yes, developers do consider Python, quite a lot actually, but hardly ever for the frontend, which is why you can't find anything. Out there in the wild, Google uses Python for much of their web stuff (alongside Java and C++, and, more recently, Go); Reddit uses Python; lots of other AAA sites use Python. You can even look at (most of) the Reddit codebase [here](https://github.com/reddit/).
I've bookmarked this. I'm looking forward to the next content
``typing.NamedTuple`` supports default arguments (although probably only in 3.6.2), just write class Person(NamedTuple): name: str age: int = 0 Also it supports defining custom methods and docstrings 
Then you need to capture keystrokes with JavaScript and then send them to the backend with AJAX.
Any year now...
That'll work if you have a static default, but won't work if you want to automatically generate a UUID if one isn't provided, with regular namedtuples you can do: class SomeThing(namedtuple('Thing', ['foo', 'id'])): def __new__(cls, foo, id=None): if id is None: id = uuid4() return super().__new__(cls, foo, id) Can't do that with `typing.NamedTuple` which is a shame.
Thank you very much for answering, this was the answer I was looking for. If you can also answer this question also, How much these CMSs is taking over internet? I haven't started to learn them yet. Will the usage of python will be decreased?
Thank you, for your answer. I was interested in web dev and I am loving python so I needed to know.
This looks amazing! Bookmarked, Flask is great and hope it helps many people get on board! Thank you!
In Python you can't accurately in every case determine if something is a function or a variable via static analysis. Apart from that, your IDE or editor should be able to color your code however you want.
Learn one thing at a time. If you're just starting out, focus on Python itself. Once you are comfortable, you can investigate and learn a text editor or IDE. 
Firstly , right here there are some resources to increase your knowledge in OOP Python. http://docs.python-guide.org/en/latest/ There are: Books: Think Python, Dive into Python 3 This course: https://www.udemy.com/python-oops-beginners/learn/v4/overview There are the online book that show the project patterns in python and more concepts of OOP in depth in python.. Just don't I fount .. When to found I will post here
Obviously this isn't a game changer, but it would be nice to have. I've written the equivalent many times before, particularly `lambda: None`. Having a convenient built in sounds nice. 
The PHP CMS industry is pretty old, the model is pretty much still the same as during the early days of the first internet boom; the situation is pretty stable there, so I wouldn't really call it "taking over". PHP rules the CMS world, so anything that fits the CMS use case is likely to run on PHP, but this has been the case for two decades now. Python, by contrast, has become one of the go-to languages for most anything else, including custom web backends that people would do in PHP not too long ago; its usage isn't decreasing, if anything it keeps eating at the market share of its competitors, most notably PHP, Java, and (ironically) Ruby. OTOH, JavaScript is taking off quite a bit these days, Go is winning the hearts of many, and some formerly-obscure functional programming languages are making a bit of a decent case for themselves, so if Python is going to lose usage share, I would expect it to go in one of those directions. That's all speculative though; Python isn't going anywhere right now, by all means keep learning and build awesome stuff with it.
Still waiting for twisted.words.irc to be ported. ...they had a ready made patch submitted half a decade ago and still couldn't get it done.
Not thinking that the names of things is the mark of a very new programmer who hasn't worked on anything large. Names are extremely important as systems grow in size and complexity. Also the ability to follow simple instructions that they were checking for you failed. If you were interviewing for a jr programmer role, which it looks like you were, you aren't being asked to design anything 99% of the time. Just implement things given a spec, which requires following instructions. 
how man of those will be python3 compatible
it wasnt a programming role, there is programming involved, but I am in no sense a dev, also Ive been coding python for a couple years now for work, I just dont have a formal CS backgroup. but ok dude thanks for your constructive feedback
I'll edit that section, just put it on my to-do list, appreciate the feedback :)
will do a testing series as well :)
You are right, it is interpreted.. I did not finish the phrase correctly. Nice tip, I will read about CPython. Thanks. 
Omento, thank you .. it was what I meant, compiling the source to install. I have decided using windows for learning and later I can decide each one I will use.
Hey Diapolo10 thank you for your reply .. I downloaded Atom for Windows. That will be my learning platform. 
Bringthenipple, thanks ... I will use IDE later, I think one of the great benefits will be fast programming and debugging, I GUESS. Now I prefer learning the hard way :)
Bastibe thank you ... I totally agree with you .. one thing at time , but for now, using text editor.
Nice work
Try hexplot or density plots, you will have a bad time trying to plot such a large dataset in any library.
There are many possible issues, can't tell without source code. Be sure you're using generator comprehensions instead of lists. 
forget about 100M+ data, i just tried plotting webserver request log/time, around 80K rows, it takes almost same time and fails with seg fault. https://gist.github.com/anonymous/6ad7a11540889618319353c512ed098e
You're getting 'seg fault' in Python? What does the error say?
When I'm done with my personal site project I'll start working on it again since it's in a chintzy state. We'll see if I make it public.
This looks awesome. Thank you.
Segmentation fault 11. and i am trying on macbook pro
You sir, have earned yourself an award. Not being familiar with Python, this really was a nightmare. With Anaconda, I was able to setup everything and have the script running now in about an hour. Everything just works. You have made my day. THANK YOU, CASE CLOSED!
wxPython Phoenix has a simple plotting library that I *think* can handle stuff that size. Otherwise pyqtgraph is a good bet. 
Thanks! I'll check it out
Python should *never* segfault, unless you're doing something really weird. It straight-up says seg_fault?
It did give me that error few times yesterday and today. Now i am just waiting for it to plot but it's running forever 10+ minutes +matplotlib feels really slow.
&gt; It straight-up says seg_fault? Not really, it tries to plot for a while and after that it just prints "Segmentation fault 11"
Thanks! I'll check it out
There are two obvious points of failure. Either your source of data is slow to calculate, or matplotlib is slow to graph it. Try just `print`ing your data. If it prints quickly, the problem is in matplotlib. Ohterwise, it's your data source. 
Thanks!! I'll debug it that way.
That is good advice. If you are used to Windows keep it and concentrate on learning Python. 
Glad I could help!
Rails is extremely slow and horrible tech in general.
You can solve this on whiteboard. You don't even have to know tries. Here my implementation that use O(1) in computation. from collections import defaultdict class AutoComplete(object): def __init__(self, word_list): self._smart_dict = defaultdict(list) for word in word_list: len_word = len(word) for i in range(1, len_word): self._smart_dict[word[:i]].append(word) def find(self, pattern): lower_pattern = pattern.lower() if lower_pattern not in self._smart_dict: return None return self._smart_dict[lower_pattern] You must be able to justify the big O in memory vs computation. In 24 hours, you can also implement the version with tries and state to use my solution if the bottleneck is computation or tries if the bottleneck is memory.
It's a good hello world for web dev. Edit: yet it needs to be well done to include some basic stuff that a simple blog might not come with by default like a full crud and Ajax forms
Atom is a good choice, considering how versatile it is. The reason I don't use it alone is that if you install too many plugins the startup time grinds to a halt. :p Anyway, have fun learning! And don't be afraid to ask for help.
But many companies use choose Rails instead of Django or Flask. Why if it's horrible tech?
Here is a presentation on bokeh: https://www.slideshare.net/continuumio/visualizing-a-billion-points-w-bokeh-datashader
It isn't immediately clear what this program does. Does it go through your filesystem and find all files matching a certain regex (like `find` in linux)?
Stop talking and thinking about which language and just pick one and learn it. The language doesn't matter as much as you think it does.
Fun fact: the new nyaa is written in flask.
Is this a trick question? Anything written in py2 is compatible with py3 after *porting*.
It works with terminals that have 24-bit color capability (iTerm and a few others) that can display 16 million colors, rather than the 16 that standard terminals can. It has no external dependencies, other than what ships with Python. That's all I intend for it to do. Beyond that, it exists because I'm filling in some large gaps in my Python knowledge and some medium gaps in my terminals knowledge while unemployed. I've actually already started another version that does have external dependencies. Partly because I'm trying to break my NIH tendencies and partly because I actually did find a better way. That one won't go out for a while, though. I need to play around with it more.
appreciate that Diapolo10 ... 
Thank you Captain_see_sharp
addons usually imply different code bases
What the hell is Thonny, 17 years of Python and I've never heard of it?
Meh. Of course you have to get it to work first and foremost. But an extra few hours of performance tuning to shave 20% off client performance in GUI applications is almost always worth it.
Do you get an error message? (Run from the command line if you would'nt otherwise get to see stderr output). Don't you need to call `LabelAutoPlay.clicked`?
Why not use an API? http://www.omdbapi.com
I found this last night, and figured an api would be better.
It's a relatively new IDE that is lightweight and supposedly "good for beginners", so I guess they are targeting the new "everyone should learn to code" market. After trying it out for a few weeks, I don't see anything that makes it better for beginners than any other IDE, imho. 
What's the point of using immutable structures for this if you're setting its value?
All I meant is that TCP, UDP, SSL, DNS, SMTP, POP3, IMAP, IRC are all compatable with py3; how could they not be? 
Avoid writing C(++), Go, Ruby, Rust or whatever as they either do not have the libraries that you need, or are extremely unproductive in terms of programmer time and hence money.
Why? This looks a lot like Flask, except Flask is mature and has a ton of well supported add ons.
I love nutshell, but that's based on an old version.
That's true. 
Unfortunately I'm definitely going to learn C++. My dad's work is in it and it would be great to get a paid internship at a big government contractor like that.
Would have to write the app first
music downloading bot sounds lit if it weren't for Google getting mad
I don't understand why you posted this. Everybody knows online documentation exists. 99% of followers know what `__getattr__` does.
This PEP has been [rejected](https://github.com/python/peps/commit/4c8bf1956ea8fc2bd335ef684a5074f734d01bbd).
This is a PEP (Python enhancement proposal) which suggests that `__getattr__` work not only at the class level but also at the module level. It is essentially metaprogramming for modules. This would be new to Python. I posted it because it is valuable to hear from the Python community their thoughts on the language and changes that should be made to it.
Because somebody wanted to write a PEP...
`getattr` already works on modules. &gt;&gt;&gt; import numpy &gt;&gt;&gt; getattr(numpy, 'pi') 3.14159... 
Yes, but if the name doesn't exist then it will error out. This provides a way to add custom logic, like __getattr__ does for a class, so that you can customize module access.
module getattr cannot be overridden currently. This is a PEP that will allow it in a future python version.
Well, *would* allow it, if it is accepted.
The Udemy course looks really good as it gives a very good overview on what OOP is and how to structure them well. The banking simulation project in the end seems like a very good practice. Will definitely take the course. Thinking of diving into the hitchhikers guide following the course.
I think he's asking whether or not all the addon protocol modules will be ported to Python 3 as well.
*Divisibility means that when one number is divided by other, the product is not a whole number* ?
`getattr` also has an optional default argument. &gt;&gt;&gt; getattr(numpy, 'pasta', 7) 7 I see what you're saying, make `numpy.pasta` launch a custom failure script. I'm not sure if this is a good idea. Trying to access a non-extant object from a module raises an exception now, which is good. Returning a value will result in errors: people thinking module.x exists when it doesn't. Typos wouldn't be obvious. Itmay also be very slow. In general, allowing people to *access* something that doesn't exist should be discouraged. If you want to `try` and access something that may not exist, use a `try-except`, or use `getattr(numpy, 'pi', lambda: default_function)`
Thanks for the help! I used selenium and for some reason the page still displays like halfway accurate results even with a user agent. Still looking for a root cause.
Hmm well I'm a test engineer at a large hardware company that creates various types of memory for various devices. I can basically guarantee you own some of our products. My lab consists of a few engineers who setup tests of prototype products and parts for products and technicians who sit there and actually run the tests. I've used small python scripts to basically patch aspects of our testing that are inefficient. Where you used to have to type in a bunch of values and test conditions between each test, I can now setup a large csv file with all my test conditions and have python automatically iterate through them. So we can run a test that's 100x iterations and different settings each time without having to manually enter those settings in. I also have scripts that automatically analyze our data csv files. A big thing we care about is the bit density of a hard drive. We run tests to try to optimize the track width and data frequency written on a disk to get the maximized bits per square inch. I have written scripts that do deeper analysis of this data and create tons of plots with matplotlib and dumps them in a PDF. Overall for me Python is very useful for quickly writing programs to automate certain things we do which are inefficient. I try to aim for things that everyone in the lab has to do, and I believe I've saved my company thousands of man hours with these scripts over a couple years. I now want to develop pretty detailed Python based tests for HDDs but I need to build a framework to do so. Some people at my work are very against this because there is already a matlab framework for building test modules. But it sucks and my company is cheap with Matlab licenses so it's pretty limiting. Plus python can just do way more.
I disagree entirely. You only have to compare the size of the traditional "hello world" program to see that Python is far easier to write than C(++), Rust or Go for example. Even worse try writing same program in CORAL66/250 where there were no I/O libraries defined at all!!!! That's why my first job using CORAL66 under VAX/VMS ended up with code looking something like this:- CODE BEGIN using VAX/VMS assembler define your FABs - that's File Access Blocks define your RABs - that's Record Access Blocks manipulate the flaming things. END You soon gave up walking over to the shelves where the two volumes of the System Errors manual, or whatever is was called, were held, as almost inevitably the error was "There's a problem in your code, fix it". Kids today have never had it so good :-) 
&gt; The language doesn't matter as much as you think it does. I've heard this. Actually, years ago, my software engineer roommate told me it was more about the thinking, less about the language. That said, at age 43, I need to make sure my choices are a bit more thoughtful since it's already unlikely anyone will want to hire a dude nearing 50. Thanks for your candor!
Have you read the PEP? Before continuing, I suggest you read it over. This wouldn't allow `numpy.pasta` unless the custom `__getattr__` function supports it. Your concern about typos would only happen if the `__getattr__` returned something for access to the typo, which would be misuse of the PEP, not an issue with it. And to paraphrase a Python core dev "Assumptions about speed changes without benchmarks should be discarded off hand". It may be slower, but it may not be. This change may be faster than the alternative https://www.python.org/dev/peps/pep-0549/. And this isn't meant for accessing attributes that don't exist. If you read the PEP, you would see this would be useful for emitting warnings for deprecated functions or attributes. Finally, I know about the default argument to getattr, but that is at the access level. This would be at the module level which affords it several niceties.
I like Google. I know that's sacrilege, but as a layperson their shit works... much like Apple did in the 2000s.
&gt; Got a nasty gram from google on that one. Care to share it?
I think the core Django Docs should consider addressing this up front and be a bit better explaining this. This misconception kept me away from Django for the longest time.
Here is something based on stats pulled from google searches: https://www.extremetech.com/computing/252987-python-tops-list-2017s-popular-programming-languages 
How much effort did you put into the port?
At PyCon this last year Jake VanderPlas gave a talk on the python data visualization landscape, and he mentioned a couple different methods/tools for visualizing *large* datasets (like the one you have). [See his talk here](https://www.youtube.com/watch?v=FytuB8nFHPQ). In general, /u/Caos2 is absolutely correct, you should attempt to aggregate the data if possible ahead of time, or perform some other manipulation to make it easier to deal with. Those tools can help, but at the end of the day it can be hard to learn much from that many datapoints plotted side-by-side.
Again, how much effort did you put into the port?
Noooooooo!
Thanks for the video!
You're being pedantic. He's not going to pick coral66 as his first programming language. As for the fact that python is far easier to write, this is true, but doesn't mean its a bad thing to start with c or c++. 
&gt; Thonny http://thonny.org/
If you want to learn python, learn python. If you want to learn programming, pick up a book. Start with Data Structures, then move onto the math, then Analysis of Algorithms, the systems programming. For Data Struct, I suggest C. For the Math, python. For Analysis of Algorithms, Java, then for systems, you can go between c, python, perl, awk, sed, ruby, whatever. I have a MS in Math, "programming" wasnt hard to pick up. When you get to the point of knowing the basics though, the best way to move on is getting these industry standards and design patterns down. And finally, we can hop around the subject all we want, but the reality is, you should really build something WITH someone. Thatll broaden your horizon.
I have been thinking about doing the same for myself. I can never find a preexisting service that gives me exactly what I want. Are you using APIs that your bank provides? I was never sure (and never looked into) whether banks had APIs that would be publicly accessible
I want the built in identity function `identity = lambda x: x `
&gt; Rationale &gt; It is sometimes convenient to customize or otherwise have control over access to module attributes. A typical example is managing deprecation warnings. Typical workarounds are assigning `__class__` of a module object to a custom subclass of types.ModuleType or substituting sys.modules item with a custom wrapper instance. It would be convenient to simplify this procedure by recognizing `__getattr__` defined directly in a module that would act like a normal `__getattr__` method, except that it will be defined on module instances. (See the article for example code.) This seems like a useful thing, with few disadvantages if any. Edit: fix dunder names
https://stackoverflow.com/questions/25977/how-can-i-measure-the-similarity-between-two-images
beginners dont know how to use the command line or set enviorment variables or install python. thonny handles all that
Can you load live data from SQL onto qgis?
Seriously, just read the PEP before criticizing it based on guesses. The author of this PEP has written many other PEPs, and is a CPython contributor. It's a fair bet that if he writes a PEP, there's a pretty good reason for it that's worth at least considering.
Small typo from the readme &gt;The biggest prime number is a really big number There is no biggest prime number. This can easily be proved by contradiction.
I have a natural talent of learning the hard way. It was more off the fact that I was making 50 google searches per second. Which they thought was monkey business. They weren't wrong.
He goes on to say this: &gt;1.1 Divisibility of Numbers Divisibility means that a given number is divisible by another number in a way that there is no remnant. For example: 2 is divisible by 2 because the product is 1 which is a whole number 4 is disivible by 2 because the product is 2 which is a whole number 5 is not divisible by 2 because the product is 2.5 and not a whole number 10 is divisible by 5 because the product is 2 which is a whole number Because the definition of prime number is related with divisibility, we will now go through some examples where we just divide numbers with other numbers, and see what we can learn in the process... So I guess maybe it's a typo?
If someone needs Python Tutorials in German language i can recomend "Morpheus Tutorials" on Youtube. You can find it here: https://www.youtube.com/user/TheMorpheus407
Nope. Most Banks don't offer APIs to prevent possible leaks or security holes. I've been using plaid.com api. There's a couple others but are more expensive, or don't have support for the credit union I use. There's also one that seems to be good if you're in the UK. For basic or personal use you can manage to use plaid for free. But it does cost once you start having users.
s/product/quotient might help English is already messed up with enough overloading already, may as well try not to overload math vocabulary. 
I'll check it out soon to evaluate the all ages part. I'm learning Python now in part to teach my soon to be 6 year old problem solving skills with Python. I'll likely still start with turtle, but it is always good to look at more resources. My own first programming experience was Logo on an Apple II of some variety (e maybe?). I remember we all worked hard using things like 1/4 and 360*4 to get a less pixelated circle.
When I say "set" I really mean "make a copy with these changes". None of these operations mutate the original object.
I had never heard of Plaid. Thanks for the heads up on that service!
This was years ago but it was a cease and desist popup in chrome saying that what I was doing is against the TOS and that I should consider purchasing a query quota. I thought it was funny, my girlfriend thought I was crazy (probably still does).
This is a largely uninformed opinion which I've formed mainly by looking at the screenshots on their website, but if I had to guess, I'd imagine the popularity comes from... 1. Their UI and feature set seems to strike a middle-ground between the simplicity of IDLE/regular text editors and the complexity of industrial-strength IDEs like Pycharm. (If your UI/feature set is too simple, you're missing some useful tools like debuggers. Conversely, if you go for something like Pycharm, you run the risk of initially overwhelming your students -- there's a lot going on and various quirks that can catch a beginner off-guard if they want to do the install + setup themselves. (For example, why is Pycharm crippled for the first 30 sec to a minute on first install? If you're new to coding, the reason will be non-obvious)) 2. Python 3.6 comes pre-bundled with the IDE. The less your students need to install and configure, the less troubleshooting and headache there'll be in general. 3. The IDE comes bundled with a serviceable debugger. PyCharm has this as well, of course, but IDLE doesn't, the last I remember. 4. The debugger, in particular, seems to be structured to pay particular attention to the distinction between values and references. IDK if I personally really like the specific approach they took (addresses, really?) but the whole "indirection" thing is something students can really struggle with, so having the IDE explicitly spell it out is a nice teaching aid. 5. Installing 3rd party packages is simplified -- you don't need to teach pip (which would require teaching the command line) first. (Of course, the "installation" related pros are less relevant if your students only ever work in a lab that you've set up for them or are given laptops to take home or whatever.) Basically, my gut instinct is that Thonny is basically a bundle of incremental improvements over the current status quo, and those incremental changes add up and result in an overall quality-of-life improvement.
Hm, I hadn't thought of the "install it on your own" argument, since I just install everything in the school image and the kids that actually install things on their home computers tend to be the ones that already have some experience. That's a really good point.
And somewhere there's someone more productive using ```vim``` looking down on you for your choice of IDE. &gt; I don't see anything that makes it better for beginners than any other IDE Sometimes less is more. It's a straight forward minimal IDE. Don't like it? Don't use it. 
Yeah if toure in the US it's pretty solid.i think it does a lot out of the US too. Just look at what's available.
I'm actually going to be pushing a pull request soon on the plaid-python repo to make it work with async. 
Do you know 'awesome-python'? It finds all listed items on REAMD of awesome-&lt;something&gt; repository such as 'https://github.com/vinta/awesome-python'. and there also be other repositories, awesome-ruby, awesome-javascript and so on.
&gt; I get the TypeError: 'int' object is not callable. At some point in your program you're doing something like `name()` where the variable `name` contains a number. &gt; Also I'm looking to round to the third decimal and am unsure of how to do so. &gt;&gt;&gt; help(round) Help on built-in function round in module builtins: round(...) round(number[, ndigits]) -&gt; number Round a number to a given precision in decimal digits (default 0 digits). This returns an int when called with one argument, otherwise the same type as the number. ndigits may be negative.
You don't get to set an arbitrary threshold someone needs to cross for their criticism to be valid, and valid OP's is.
I like the motivation, and I think Python needs something to do this. But is this a full solution to accomplish their deprecation example? It would be nice if you could decorate functions and classes using some kind of `@depracated` as well. Maybe add a `__setattr__` to the proposal as well so that `@deprecated` could set a flag on the function or class, and then when `__setattr__` sees the flag, it could populate the list of deprecated items, etc. The only problem is that on an object `__setattr__` delegates to `super` to do the actual setting, but there is no super on the module.
Like most people on this subreddit, I tend to prefer Python (and I prefer Django over Rails). But if you are used to Perl for text processing, you may be more comfortable with Ruby.
This sounds great and I look forward to watching it. You should consider posting this to r/flask as well. 
That actually looks pretty cool, especially for a beginner IDE.
What the **** are you saying ? 
Note, there is dendropy but I think that is exclusive for taxonomy stuff . I may be wrong but I didn't see any options to take in a distance or linkage matrix . 
Which is better than normal mutable structures how?
Just a simple clone to GitHub repo, nothing special.
Calm down.. If you're going to spam an obnixious response in this thread, pick one that's less of a fallacy. Telling people they cannot comment on something unless they are an expert/have done it themselves is stupid. For instance, I'm not a security expert by any means, but I can still tell Equifax fucked up.
Is the more tweets mentioned this airport. Also if you want more details about colors, check out [matplotlib colormaps](https://matplotlib.org/users/colormaps.html), in the graph, it's Pastel1 for nodes and Pastel2 for edges.
That's great feedback and I'd echo the same. I'm a web dev switching from PHP and I don't want to get into the drama. Just give me the meat and potatoes. :) Will you get into the more complex stuff like Blueprints, database schema, database ORMs, etc? Btw thanks for this. Look forward to going through it more and providing feedback. Cheers. 
Not much and not intentionally, but on the graph, the clusters are formed from airports in same geographical regions. And there's no point, it's just for fun.
Mutable data structures are useful if performance is critical (both in terms of memory and CPU usage). The disadvantage is that once you mutate it, the original data structure is gone. The changes are visible to all its referrers, which can sometimes be useful and intentional, and other times it might unintended. This can be particularly hazardous when a mutable data structure is shared across threads. Immutable data structures are the opposite: they are not quite as efficient because every operation creates what's effectively a copy of it. However, thanks to sharing, these are usually not full copies of their original, so immutable data structures can be more efficient than making a deep clone of a mutable object and then mutating it. The benefit of using immutable data structures is that it makes the code less prone to unintended mutations (thereby reducing coupling), and has further uses in situations where you intentionally need to keep a copy around (for tracking history in e.g. Undo/Redo, replays, backtracking algorithms, etc). Anyway, the point of the library is that *if* you have need for immutable data structures, it can significantly reduce the amount of boilerplate needed to modify them.
"Notebooks"? A notebook is a bound booklet of blank paper or a flat, portable personal computer. "Notebook" does not mean lesson, tutorial, or training course.
The final graph presented consists of real airline routes. And if the data represents a traveller or travellers based in Russia, it's realistic; a quick click around reveals that the author does in fact appear to be Russian. It does look a little odd/interesting to me, though, because I'm used to looking at airline route networks from the perspective of the US and western Europe, so places that I'm used to thinking of as high-traffic hubs -- like Seoul, Amsterdam, etc. -- are more outlying leaves of this graph, while the big hubs are Moscow and St. Petersburg.
Visual programming doesn't tend to catch on with developers, it's been tried (and failed) so many times in history, never really takes off I'm afraid.
What if we can do this visual on the fly node or GUI that works in a way that Perlin shows in his demo, draw nodes and make parameters to work with AR objects and also IOT objects? Code and compile node as needed.
Please update with how accessible you think this is. Skimming the material, it sounds like it'd be kind of boring and hard for a young kid.
It's all pretend in Python, though. You can change anything you want. Adding an extra complicated layer of syntax on top isn't going to make it easier to use "immutable" structures.
That's not the goal of this library. It's for reducing boilerplate when working with data in an immutable manner, not to enforce immutability on data structures. Besides, virtually everything is "pretend" in Python anyway.
Normalize the size/dimensions, then try locality sensitive hashing? LSH can be used for dupe/spam detection.
I'm not sure if I understand what you mean sorry. I think my point is more that generally developers don't want to work visually, but prefer to enter in code by writing text. That doesn't mean all developers are like this, but in general at least.
This is awesome! Thank you. Do you have a timeline for the next video in the series?
It's not about `getattr`, it's about `__getattr__`. Ie the magic method that allows you to hook into the attribute lookup mechanism. This doesn't currently work at the module level. Ie. you can't dynamically create new module attributes just by importing or accessing them. You *can* actually accomplish what this PEP is advocating currently, but it's rather hacky (you need to create a class with a `__getattr__` into which you store the module's namespace, then replace your module's instance in `sys.modules` with an instance of this class. The downside is that this can interact badly with anything doing some weird import hooking or module introspection that assumes anything in sys.modules is actually a module.
Because of hype, because it's easy to learn for non programmers (exactly the kind of people you want making architectural decisions for your business, amirite?), and because its culture is a bunch of mollycoddled manchildren who are encouraged to have strong opinions based on nothing yet impose them forcefully.
That's not a bad method. phash uses a discrete cosign transform which may or may not help (after doing the other two steps of scaling &amp; convert to black and white)
Ken Perlin and Bret Victor ideas to be able to interactively program. But you are right that most programmers would just type as code.
I used to get an error message that pygame video stuff was not initialized and its a label not a button so no. 
Jupyter notebooks ya wanker
I ported twisted.words.irc to Python 3 in October 2016 and the patch was merged: https://github.com/twisted/twisted/pull/561
This is a nice project, I might even make a PR or two. Thought about adding candle and chart displays? 
Thanks! I'll check it out
Thanks! I'll look into it
Please provide the examples , that would be great help!
You can convert the PDF into a string using pdfminer https://pypi.python.org/pypi/pdfminer/ which converts the PDF into a string (see Google for example) and then use regex to get the info you want. You can do the same with pyocr for the scanned documents, however this may not be as accurate depending on the quality of the scan. 
Those are what you consider *specific*?!? &gt; 1. Best resources to learn python? I've been using YouTube a lot (the new boston) Start with [r/learnpython](https://www.reddit.com/r/learnpython/wiki/index). &gt; 2. Why python over node (I'm a web developer) Because it's a general programming language, i.e. it's not weighted heavily if not exclusively towards development for the web, and doesn't ultimately rely on the browser (though it can). &gt; 3. Do I need a degree? No, but it helps. Mine's a BFA in Film, but the critical thinking and research skills it gave me helped me with learning Python. It helps more to have a degree that's a wee bit more focused on areas you might want to program in. &gt; 4. What does it take to be a python 'god' Time. And practice. And mad typing skills. And a mechanical keyboard. But preferably one without the clicky keys, if you're working around others and don't want to test the limits of your omnipotency and immortality. &gt; 5. Need fun projects to learn my way around These ultimately come down to personal interests. Fun has a very different meaning and scope for different people. There are people who find Dwarf Fortress "fun" ... I am not among them. &gt; 6. What is pythons future Futures. And await. And probably even more ways to format a string.
To me? Do you know awesome repositories? it is just for finding the libraries on README of those repositories. There are many awesome series .. https://github.com/vinta/awesome-python https://github.com/avelino/awesome-go https://github.com/markets/awesome-ruby ... p.s. sorry for my poor english. I'm not a native speaker
Getting it into git is easy. Unfortunately, the steps afterwards are requiring some efforts. It's just too time consuming for something I'm not sure it's worth it. Out of curiosity, did you really think that I didn't know how to move something to git? Edit: or did you suggest to clone and keep their content in sync? That's something I really don't want to do :D
This should be asked in [r/learnpython](https://www.reddit.com/r/learnpython) .
I come from a non-programming background and find IDE's similar to Thonny more intuitive than IDLE and PyCharm. IDLE is too simple in that it is a blank screen, you might as well use "Notepad". With PyCharm, beginners don't know what is going on and will need teacher direction to get oriented (tbh I don't even know it because there are too many panels). For IDE's like Thonny you install and go. In terms of the GUI - you have one section where you type your code, one section where you view your assigned variables, and one section to run your code. Additionally, you have a straightforward debugger that goes line by line. I learned coding on MATLAB and switched to Python/Spyder for data analysis and simple scripting so that is my angle. 
I've done this at work, after spending hours messing about with it I found an external company who do this for pence per page, and return me a properly formatted xml document to use :-)
They have engineered it or they just do it by hand with 3 third world labor?
That's fair enough. It's worth noting that JavaScript frameworks serve a totally different purpose to Django and flask. They are for providing interactivity on the front end. You'll use both python frameworks and JS frameworks at the same time if your application requires it. 
So basically `def noop(): pass ` ?
In my opinion, the most important features of Thonny are: * its ability to explain the program structure (down to smallest subexpression) while stepping through code; * its ability to explain function calls (I've seen too many students struggling, because they think function call is just a jump in the code). This video outlines how I teach Python's syntax and semantics to first year CS students using Thonny: https://www.youtube.com/watch?v=nwIgxrXP-X4 Disclaimer: I am Thonny's main developer and these two features were the reason why I started writing it. Other users seem to have different reasons why they like Thonny.
But why? Why would you ever need this? Sounds very evil to me, unless for syntactic reasons which is why "pass" is a thing.
This is much more reasonable than this PEP. Most functional languages have id function. I don't think Python needs one because it's just `lambda x:x` but I think this is much more reasonable than a `pass`.
&gt; And probably even more ways to format a string. +1 from me just for that :-)
For pds, you might be able to use some PDF to String library, and then regex. For scanned documents I think you would need to use OCR, pytesseract?
Key sorting https://wiki.python.org/moin/HowTo/Sorting#Key_Functions
According to overseas electronics manufacturers: both /s Oops. I misread OP. Excel tables converted to PDF, I'd try what the top comment says and use pdfminer 
Thank you for your quick reply! I found this also in the python reference manual, but i don't understand how to implement it to my code, E.g i wrote this: text = ['We have developed speed, but we have shut ourselves in.','Machinery that gives abundance has left us in want.','Our knowledge has made us cynical.','Our cleverness, hard and unkind.','We think too much and feel too little.','More than machinery we need humanity.','More than cleverness we need kindness and gentleness.'] text.sort(key=len,reverse=True) print (text) 
&gt; text = ['We have developed speed, but we have shut ourselves in.','Machinery that gives abundance has left us in want.','Our knowledge has made us cynical.','Our cleverness, hard and unkind.','We think too much and feel too little.','More than machinery we need humanity.','More than cleverness we need kindness and gentleness.'] text.sort(key=len,reverse=True) That'a good first step, but the key is being applied to the whole string, so you are sorting them by number of characters. You need to create a function which returns the number of words in a sentence. Hint, .split() 
where should i put split() ? in here text.sort(key=len,reverse=True)? i try to put text.split() after the text= 
I got this output from the following code: text = ['We have developed speed, but we have shut ourselves in.','Machinery that gives abundance has left us in want.','Our knowledge has made us cynical.','Our cleverness, hard and unkind.','We think too much and feel too little.','More than machinery we need humanity.','More than cleverness we need kindness and gentleness.'] text.split(",") text.sort(key=len,reverse=True) print (text) output: line 2, in &lt;module&gt; text.split(",") AttributeError: 'list' object has no attribute 'split'
Split is a method from the str object, not list. Key is a parameter that accept a function that receives one input ( Each element, which fortunately are strings ) and returns a key to use for sorting purposes You need to create a new function, that you can give to Key.
 my_sorting_function(element): ... do something return key text.sort(key=my_sorting_function)
Im confused, i understand that I need to make a function but how do i make it to sort the sentences by length, (sorry im new to python) 
You need to return a key, that is the one that sort is gonna use to compare the elements. Let's think for a moment what LEN does. len('hi') = 2 len('dog') = 3 len('how are you') = 11 len('thisisalongword') = 15 So it becomes clear, which element comes later. In our case we don't care about how long is the word, we want to COUNT the words, we want a function that returns: my_sorting_function('hi') = 1 my_sorting_function('dog') = 1 my_sorting_function('how are you') = 3 my_sorting_function('thisisalongword') = 1 
Okay, i see, but how to implement it into the code, i wrote this but it doesnt work, text.split(",") my_sorting_function(len (text)): text.sort(key=len,reverse=True) print (text)
/r/learnpython per the sidebar --&gt;
First of all, you are not defining the new function, nor using it in as key in the sort function. Then we need to understand the difference between procedures and functions. Split is a function, it returns a value. Sort is a procedure, it modifies the element. Stick to this.. my_sorting_function(element): # This needs to be filled # I put len in here so you can see it working key = len(element) return key text.sort(key=my_sorting_function)
Modules should also work with objects that implements the descriptor protocol (@property stuff, although it can be done through the desired `__getattr__`, making modules look more like classes is interesting IMO)
Ah okay, added it, but what is then the element? is it count?
There are also exceptions for when you might want getattr to return None or something else rather than throwing an exception. It really just depends on what you want to do. Also, for the record, modules are classes and the dunder getattr can already be overwritten but this pep makes it easier.
In the case of sort, what is being passed as parameter to my_sorting_function is the elements inside the list, in our case a string.
OKay, i see, but what should be the element (is it text? , or something like count?)
Yes, element is the text, a.k.a string
when i try to execute it now, it gives error, text.split(",") my_sorting_function(text): # This needs to be filled # I put len in here so you can see it working key = len(text) return key text.sort(key=my_sorting_function,reverse=True) print (text) output is: line 3 my_sorting_function(text): ^ SyntaxError: invalid syntax [Finished in 0.0s with exit code 1]
It's not true that "Using global requires a global variable with the same name to exist" : def make_global(): global z z = 10 make_global() print(z) 
https://www.learnpython.org/en/Functions
Looks very good, but predicting the height within +/- 20 cms of the true value isn't something a girlfriend would accept as an excuse. 
`my_var["follows"][0]["user"]["_id"]` should work. Also, this is a quesion for /r/learnpython.
Sorry, my bad: I always forget about that subreddit. That did it, thanks a lot.
Maybe pdfplumber can be of help. https://github.com/jsvine/pdfplumber
Great to know!
Nice to know. Another user was suggesting go back to the feature `download`, but implementing to get the magnet link of the anime from this platform. You can read the thread [here](https://github.com/ryukinix/mal/issues/3)
I feel like this already exists in many different form factors. Better off not reinventing this wheel...
google cloud vision? it may take more time to figure out but will be more accurate than ur typical image hash comparison algorithm.
Yes, for example [fuckit](https://github.com/ajalt/fuckitpy/blob/bdfa3ae321f046242be55adf6b924f242137eebb/fuckit.py#L62) does the whole "define a new module class, mess with it, replace this module with it" juggle.
*bleep, bloop, I am a bot.* You linked to a GitHub repository, here are some of my favourite commits: - [the test suite actually found a bug holy crap](https://api.github.com/repos/ajalt/fuckitpy/git/commits/c4b289c027286160174ca6433f52430ac0350895) ***** [Source](https://github.com/mike-eason/angry-commits-reddit-bot)
You'd think but you're wrong. Big market out there for data entry still.
I know my company and myself included have used a few different tools both hardware and software to easily turn any document into a searchable/editable document. It's been good enough for me. I know there's services for law firms and things of that nature already too. Can't think of anything else involving something similar, unless you know something I don't. I wouldn't waste my time. Data entry already doesn't pay enough... 
I am trying to learn Python. I am automating some tests in my spare time (personal time) for work. Had a good breakthrough today with validating elements and printing "is present" or "not present" to the console. I am using selenium also. Complete novice but I am making progress. Would like to ask someone for advice if something I want to do is possible but don't know if this is the place. Just trying to up-skill in my spare time :)
Yeah I've done both PDF construction and deconstruction and trust me, deconstruction is still a "fuck off" thing. I hope there's a solution in the future and there could be one now, but it requires everyone on board, which they won't do.
 method = { 'foo': self.do_foo, 'bar': self.do_bar, }.get(choice, noop) return method(*args, **kwargs) I come across this fair frequently when I'm writing clis with subcommands, or when I'd like a static mapping to methods without dynamic lookup (and the choices aren't always valid Python names). it's certainly come up in other situations too. Again, this won't change Python very much, it just makes for a nice ergonomic improvement. 
Nice hash tags. Too bad Reddit isn't Twitter.
Thanks! I would love to add candle and chart displays! I couldn't find a way to display them directly through the terminal so I was thinking of having a local brokeh server to be able to graph real-time data along with historical. But there could be a better method :) 
I'm sure people would help out here as well but try asking over on /r/learnpython.
discussion here https://forum.omz-software.com/topic/4335/pythonista-is-now-featured-on-python-org 
Just to clone. I didn't assume you didn't know how to do it.
Well done, I'll also try to make something like this in a month or two! :) How much time you spend making this?
I guess you want to make it also with an educational pupose, but why not work with them improving their code instead of creating a new tool that does the same? It's also a good opportunity to learn how to work in groups and understand other's code.
Hello, those howto questions are probably best asked over to /r/learnpython.
You looked at ETE2? 
Interesting article - is the code left as an exercise for the reader?
Generally, once you start doing it at a scale large enough for it to be a bottleneck (or a real cost), you start using EDI instead of free-form, inconsistent invoices. Your trading partners submit transactional documents (invoices, sales orders, etc) in XML (usually - other, archaic formats are still common) and they're processed automatically. You'll always get smaller partners who don't have the capabilities but it's common to make EDI a requirement at a certain sales volume. Virtually every mainstream ERP system supports EDI out of the box, using established standards - the cost is in having your team or implantation contractors configuring it and in changing your internal processes to assume document submission directly into your system. I guess what I'm saying is that there's a better solution in most scenarios, and that's standardisation and EDI.
Yeah the course is still being offered in coursera, so that if someone is interested, can take the challenge :)
I’ve tried this method but when it converts 2 documents in the same format sometimes one document is slightly different. Like sometimes it reads the entire row of the invoice items but then other times it goes by columns so it’s hard to have python figure out which is which and put it into a csv or other type of file. 
Would you be able to post/pm me the company if you are allowed to? Thanks!
 `Linting error E731`
Have you tried to use [Dataset](https://dataset.readthedocs.io/en/latest/)?
This seems interesting. I’ll check it out and see if it works, thanks!
sure thanks 
Never heard of it. But I'll check it out. I can let the company know about this.
Great Job! Probably you already know and it s not a problem but just in case, you have some API_KEYS published in your code.
Yeah i have my etherscan api key there, it is the best service to get info about the Ethereum blockchain. The key can't really do much more than make get requests so it shouldn't be an issue. But thanks for the heads up :) 
Using multiprocessing with fork also breaks third party native libraries that use their own internal singleton thread pool such as numpy with Apple Accelerate or anything built with gcc's implementation of OpenMP for instance (e.g. XGBoost, OpenCV, spaCy...).
Is there a mailing list discussion about this PEP?
Yet no entry for Android. Or does [QPython](https://play.google.com/store/apps/details?id=org.qpython.qpy) not qualify for this site because of implementation-details?
Python objects would not be shared but that would allow to build high-level API for specific objects such as large numpy arrays that could share memory by passing around a memory address + dtype, shape and strides info. Basically you pass the metadata as bytes in the FIFO channel to rebuild a numpy array pointing to the same memory buffer. That will require some non-trivial memory ownership management to avoid freeing the array buffer from the main process while still in use in the subprocess but that could probably be handled at the level of a Python library (e.g. dask, concurrent.futures or joblib). This way we could do high-performance Python code on numpy-based datastructures (e.g. pandas.DataFrame) with parallelism at the Python level without suffering from the GIL as when using Python threads or from the communication and memory usage overhead when using multiprocessing.Pool or concurrent.futures.ProcessPoolExecutor.
Also if such a PEP gets accepted that would be a huge motivation to have more immutable data types in the python standard library or at least it could be explored how to reuse read-only constructs across subinterpreters running in the same Python process: e.g. read-only MappingProxyType.
may i ask what is your current job? are you working in accounting or as a programmer?
As stated in the readme, I created this since I wanted something that could be queried (and potentially with some advanced logic) at an O(1) complexity. Furthermore, I wanted the ability to search within a list for queries. This is what came out. Is it perfect? Far from it! But it works really well for me and made my other project (to be open-sourced soon) able to handle 30,000+ items without O(n^2) scaling. Some features: * Turn a list of dictionaries into a searchable structure * Handle list items inside the dictionary * 100% test coverage on both python2 and python3 Note that it does have some limitations. Mostly that the item must be hashable (except for a list itself in which case, just the items *inside* must be hashable). Also, this has a larger memory footprint.
I understand your point and completely agree with it, but thing is that I spent last year working in a team and on others people code.. so now after resignation I want to start coding a bit more on my own :)
I used to be quite up to date with web trends in the Python ecosystem a few years ago but my interests led me elsewhere for a time. What's the current status these days? Is Django still winning the mindshare? Has Flask dethroned it? Or has everyone moved to async-based frameworks?
My understanding is that it is def noop(*a,**k): pass
As neat as this, after looking through the source there's some things I thought you might want to check out: - There's a variety of different coding styles. In some places, you're using camelCase, in others you're using PascalCase, and in others you're using snake_case. The Python conventions are to use PascalCase for class names and snake_case for everything else. - In general, you might want to run a style checker on your code and fix the issues. For instance, the Python style guide (PEP8) says that there should be a space after commas and no space after opening parens. - I would argue that list_dict_DB is a bit long and confusing case-wise (why not list_dict_db)? IMO something like querystore, since it's an in-memory data store oriented around fast querying, would be both more descriptive and shorter. - For running benchmarks, your best bet is to use the [perf](https://perf.readthedocs.io/) module. - In your `setup.py`, you write `long_description=open('readme.md').read(),`. However, when you upload your module to PyPI, `readme.md` isn't there, so it'll crash. In addition, if you write your README in rST instead of markdown, PyPI/Wheelhouse will render it nicely. So, you'd probably want to switch to rST and create a new file `MANIFEST.in` containing the text `README.rst`. `MANIFEST.in` lets you specify other files to include with your package when it's uploaded to PyPI. - Also I noticed this in `setup.py`: `from __future__ import division, print_function, unicode_literals, absolute_import`. However, you're using pretty much none of these features in `setup.py`, so it might be worth it to just remove this (well, you might want to keep `unicode_literals`). - Random question, but...why are there a bunch of random newlines at the bottom of `list_dict_DB.py`?
It’s a family run company that’s been getting bigger so manually entering the information has been becoming a problem for us and we want to automate it instead of outsourcing the work. Worst case I can hire some people do do data entry for us but I’d rather have an automated program I can run to do it. 
They do an automated system based on templates with any that error being manually looked at and verified if they have created the templates
sure, PM me and I'll dig the info out for you and put you in touch.
Thank you for replying. I really appreciate it. The video was very helpful.
Thank you. That's a great perspective.
Have you checked the sidebar? ----&gt; There's a plethora of books, resources, how-tos, etc.
I'll DM you
Thanks - that will end up costing $, not sure how much because it isn't clear what pricing bucket 'image matching' would fall into here https://cloud.google.com/vision/pricing
Take a look at [invoice2data](https://github.com/m3nu/invoice2data)
Thanks for the feedback. My overall thought is that I only have so much bandwidth (given that I did this on the side and my primary job is not to develop in python, though I do use it often). If I were writing this code for money, I would probably have put more effort into some nitty-gritty. * I know I need to work on consistent case and general formatting. It is one of those things that is hard as I move from code to code and style to style. Especially since this was something I threw together for myself and then decided to expand it * I really prefer to write in markdown. I guess this is one of those "take a [trivial] stand" type situations. If you want to see the readme, look on github. But I am new to uploading this to PyPI so I didn't realize that wouldn't get included. I figured `setup` was evaluated as upload and would read from my files. * As an aside, I almost didn't publish this because, while PyPI and `pip` are (mostly) great as a user, they feel needlessly complex as a submitter. I also considered just doing a github `pip` install. I do not claim to have the answers, but this was such a pain! * I agree that a new name may be better, though I am not a fan of `querystore`. I will put some thought into it. * `__future__` stuff I usually just put at the top of everything I write now to make sure I do not miss anything. Unfortunately, I still have to primarily use python2 so it is easy to miss stuff. And then when I go to move it to python3, this will reduce the gotchas * The white space is because I prefer to write at the top of my screen. Nothing more than that... I am curious if I missed an existing solution to this. I know with my other stuff, I essentially reinvented the wheel on a few things since I didn't (at the time) know it existed (such as logging, etc). I guess the question for me is whether it is worth the time to redo so much of the code.
This is not a trivial task. Large companies exist trying to solve this problem. However, don't let me discourage you from trying. You can probably "easily" write code that would take care of 50% of the invoices. It's very important that you have some kind of validation/auditing system in place to catch the inevitable errors when an invoice changes a font, or flows a value farther down the page than you previously expected. 
The other thing I debated is whether to follow python2 and have `items()` and `iteritems()` or always use an iterator. I may change to the latter.
Ah, good point, thank you. 
Actually I need to update the post as its mean squared error which is 20 so error will be between 4 and 5 cms
Given the proliferation of single paged apps with only json apis to connect to, I'd say the next big thing is Falcon, possibly coupled with in-browser python (or not).
Why would you want to do that? Is not the whole idea of WebSocket trying to get rid of HTTP ? Serious question 
In browser python?
i am creating a websocket to a service which is expecting a Authorization header alon with it ,so that is why i need to add a custom header.
Did you see this post about a [detailed Flask tutorial](https://www.reddit.com/r/Python/comments/6z5jkx/detailed_flask_web_development_series/) the other day?
There are many technical solutions, but have you tried asking any of these companies if they can submit CSV files in addition to the PDF? Chances are good that at least some of them may already do this for other customers and could easily do this for you as well.
Indeed!
I'm learning and using Python to automate tedious data for a small business so I may be able to help a little. I usually get data from excel but I'm sure it's possible to do some pdf even though im sure that is tougher. I found focusing on small tasks helps a ton. I would approach this by separating the types of invoices you get. For instance, starting with the easiest one to complete or the type you get most often. You can have the program detect which company the invoice in from or just select it manually. Getting them all done at once would be really tough and some may not even be possible, but every bit helps save time and reach that goal. I don't know specifically how you would read pdf files, but I do think focusing on one type would help the most. Any time you can save with tedious work will give you more time to program the rest. I've been able to automate a whole bunch of small business data entry with Python. The most useful source I've had has been https://automatetheboringstuff.com/
Can't stand it when "link to part 1" isn't prominent and at the top of a "part N" tutorial. 
This could be improved a bit more by using `bisect_left` a second time, like so: from bisect import bisect_left # Python standard library # Note: assert emits no code when __debug__ is False class Autocomplete: def __init__(self, word_list): """ Create a prefix lookup into word_list """ assert all(word.islower() for word in word_list), "word_list must be lowercase" self.word_list = sorted(word_list) def find(self, pattern): """ Return a list of words from word_list which start with pattern If no words match, returns None """ # we will accept an empty string for pattern (returns all of word_list) assert not pattern or pattern.islower(), "pattern must be lowercase" from_ = bisect_left(self.word_list, pattern) to_ = bisect_left(self.word_list, self.incr(pattern), from_) return self.word_list[from_: to_] or None @staticmethod def incr(pattern): """ Return pattern incremented by one letter ie incr("aaa") -&gt; "aab" """ # Note that the character after "z" is "{", which is # not a word per se but is still valid for our search purposes if pattern: return pattern[:-1] + chr(ord(pattern[-1]) + 1) else: # pattern is "" return "{"
Wow I'll have to read up on that. Is it supposed to be a competitor to JavaScript or am I misunderstanding?
Well, hopefully one day. There are actually a few efforts at in-browser Python. Brython is interesting because it's a full, proper Python implementation that should be pretty similar to the *real* one we'll have in WebAssembly. But in terms of performance/memory-use, I probably won't use it for anything real-world until WebAssembly comes along and we can run Python in the browser as a first-class language.
https://www.reddit.com/r/learnpython/comments/6zef21/a_complete_beginners_guide_to_django_part_1/ you owe me 10 redditsilver!
Haha thanks. It's not hard to find, usually, but remains a nitpick in tutorial pages for me. 
See a leak: mutable defaults.
i agree.
What do you mean. Can you elaborate?
Thank you I did not see the post. I will take a look! 
I started 2 weeks ago but it could have been done within a few days if I spent most of the day. I know OOP but have never implemented a class in python so that was new although not too much of a learning curve. Learning the basics of curses took me about 3 hours mostly just using python3 curses documentation and SO, would love to see what you come up with :)
Non-EU citizen here, and I understand if you don't have time to answer this, but I am curious: exactly how difficult is it to get work authorization without an existing job offer/sponsorship?
Sorry to dig up this fortnight old comment: If I'm a US citizen, how probable is it for me to obtain a position at your London office? Are they usually reserved for high-value/experienced candidates?
Curious, how much of a response did you see from this? (Not sure if comments like that are faux-pas, but what the heck). Just so happens that's my ideal job description and I'm interested in relocating to San Diego.
Fixed. Thanks!
Yeah, another important use case not mentioned in the PEP is when you have a module-level variable in version 1 of your API, but then later realize in version 2 that you need some dynamic behavior behind that variable. This is what `property` does for classes, and it would be nice to have some analogue for modules.
A great title for a complete guide to Django would be "Django Unchained."
GOD I can't wait for that. Any guess at a timeframe? 2 years maybe?
Cool. Thanks for the reply :) NIH = no import habit?
Yea, I use ete3 and it's awesome but it doesn't do dendrogram cutting and clustering (that I know of). It takes in precomputed trees so I usually convert my SciPy trees to newick then import them into ete3
Yeah, that would make it pretty tough. Maybe you could just have it recognize the words that come before the values you need to copy? That way it doesn't matter if everything lines up exactly correctly. You have it pull the 2x values that come after 'price of item' for example or something like that, regardless of whether they're in the same column.
https://docs.quantifiedcode.com/python-anti-patterns/correctness/mutable_default_value_as_argument.html
Just learning Python in prep for a Masters Degree in Data Analytics. I have been using a lot of Lynda.com and backtracking to the statistics courses. I either lost a lot of math in my 20 years since college, or I never learned it. Now, I am getting lots of math books from library and some specifics from Amazon. Hopefully, I can lock down my Stats so I can understand the "Analysis" part of data analytics. 
I feel you on that, I've already read the docs, watched several youtube tutorials, purchased the two scoops of django book, and am doing an extensive course on packt publishing for django. It is a lot to take in. But the ORM seems invaluable to me. I've always wanted to have a database access API like djangos. I tried writing some web apps in Golang last year and it was really difficult without ORM. I was constantly doing prepared SQL statements and serializing/unserializing the data into structs/json etc ..
Seems a solid change that is just a mistake that it wasn't the case from the beginning. But this part makes me sad: &gt; If an annotation was already a string, this string is preserved verbatim. In other cases, the string form is obtained from the AST during the compilation step, which means that the string form preserved might not preserve the exact formatting of the source. Can't we just fix the AST to be able to roundtrip already? :(
This helps a lot for my project. Is it freely distributive?
https://mail.python.org/pipermail/python-ideas/2017-September/047008.html
Python runs on a Pi. So yes, that will run Python.
man, I am sure there is some reason somewhere for that, but it seems silly. Oh well. I fixed it. I also used `pandco` to make an RST readme file
&gt; the number of inputs and methods wasnt specified Okay: &gt; This class must have **a constructor** that receives **a list** called word_list that contains all the known words in lowercase. The class must have **a find function** that receives **a string** called pattern and returns a list with all the possible words that start with the given pattern. Emphasis added. Make ONE constructor that receives ONE list called `word_list`. Make ONE find function that receives ONE string called `pattern`. You have a constructor that receives two inputs and a find function that receives no inputs. &gt; if you want to get pedantic, technically the name of the methods wasnt specified Correct, the name of the *method* wasn't specified, but: &gt; Write a class called Autocomplete And yet: class WordComplete &gt; just that there needs to be a 'find function' which means to me at least, that the function needs **to find** the correct output Find *and do what* with the correct output? &gt; The class must have a find function that receives a string called pattern and **returns a list** with all the possible words that start with the given pattern. If no word is found, then **return null**. It reads to me that the function is supposed to *return* a value. And yet: print(b) if b else print('None')
YES, this drives me crazy! It's been particularly annoying when defining a constructor that can take an instance of the same class being defined. I'll also take this opportunity to mention that I continue to stubbornly use the lean and IMO intuitive [obiwan](https://github.com/williame/obiwan) syntax rather than the cumbersome mypy format.
Great initiative, but not really a backport. It's not full featured, and requires an encoding hack to use vs an import. For example, can't do simple string manipulation; valid in Python3.6, will not work with this: thing = 'world' print(f'hello {thing.replace("d", "d!")}') SyntaxError: expected ':' after format specifier 
I have no idea. I mean, you [can run](http://webassembly.org/demo/Tanks/) WebAssembly code right now in a modern browser (not sure about Safari??). I'm not sure anyone has tried to get all of Python working in WebAssembly, but hopefully someone does!
Wait wasm is already here? Why are we doing anything else? We should get python in wasm asap!
Well, I'm not sure how complete/final it is. Also, Safari and IE are probably still sucking... But, yeah, it would be nice. The main drawback for me would be that all the reactivity frameworks out there, like Vue.js et al, are all very JavaScript-centric. Plus with ECMAScript 6/7, you get some legitimate language features like proper classes and import statements.
Do you have any recommendations for what is the best way to SSH to windows 10 to from Mac?
Yeah there's a few (fixable) bugs because it leans heavily on `string.Formatter`. String manipulation itself works, just as long as you don't use `!` or `:` character (which throws off `string.Formatter`). It _should_ work for nearly every other case as long as those two characters aren't involved :) At this point, it's mostly intended to be a silly tech demo and probably not something you should actually consider using -- but nonetheless the encoding hack is pretty crafty if I do say so myself! A true `from __future__ import ...` backport is impossible, adding a `__future__` import needs to be done in the interpreter itself (I assisted a tiny bit with a project a friend of mine did as a POC to add [`from __future__ import explicit_encoding`](https://github.com/bukzor/cpython/commits/explicit_encoding) to python2) Full disclosure, I'm the author :)
run ssh server on windows, run ssh client on mac
For my personal projects I'd be 100% happy with just supporting chrome if it means I get to do full stack python. With how popular python is I bet a lot of people would agree. 
If performance isn't that important, you could just use Brython or one of its many similar projects.
Here's a guide on that https://winscp.net/eng/docs/guide_windows_openssh_server
Thanks. I appreciate this. I'm looking forward to learning an entirely different way of thinking. I've been approaching problems the same way for a long time... I'm getting too predictable! 
Pedantic? I was amused. Thanks for the thoughts. I'm from that long-lost world of early home computers. I remember upgrading my C64 to a 1200 baud modem. Holy fast! Better than fiber into the house.
Totally agree, it's a really cool project. And didn't realize at first it was the "!" that happen to throw it off not the fact it couldn't do it at all, good catch. With more playing also saw that list comprehension and indexing works fine (just random stuff that I happen to use in fstrings a lot). 
I will, either here or github, but I'm down with nasty bronchitis now, so may be awhile.
Hi, I think the error is being caused by this sentence: net_connect = ConnectHandler(**device) the problem is the '***device', in the error message it says: after a *** a mapping is expected (same as a dicctionary I think...) but it found a tuple. So the solution here, if what you wanted was for example: net_connect = ConnectHandler('device_type','cisco_ios') for the first key:value of ACCESS_1, you could just delete one * like this: net_connect = ConnectHandler(*device) I think that should work if it's getting a tuple... In that case if device is = a,b then it would be the same as calling ConnectHandler(a,b)
Tried seaborn cluster analysis?
Make your argument a mapping and not a tuple. Should help with it being a tuple and not a mapping. Or Don't use operator for mappings on a tuple. 
The post got deleted, so here's just the link: https://simpleisbetterthancomplex.com/series/2017/09/04/a-complete-beginners-guide-to-django-part-1.html
Huh, this is potentially dangerous, don't you think?
yes. But that wasn't my point. My point is that from reading the PEP, what I wrote it closer to what they are proposing.
Yeah I mean they do have an implementation part in the PEP, so. I'm not a huge fan of adding small pieces of code to standard libraries whose equivalents are literally 2 lines of code. That's just personal taste, that was the point of my original comment, I didn't imply this is a good implementation of the PEP.
I don't believe Windows 10 has an easy way to run a SSH server.
Take your login information out of your code example. Also you cannot use `**` on a tuple as you have there, `**` is for dictionary unpacking into a function.
True, I use [transcrypt](http://www.transcrypt.org/) But native python would have amazing performance, like you said 
Last I looked at them pythonista was way, way more polished. That was a year ago though
Keep at it. That course is very challenging...if you reach a point where you can't go any further, try doing Automate the Boring Stuff instead, then return to it.
I suspect few people may have use for this as they #1: Use a package with pre-configured binaries (eg Anaconda) #2: Only use part of the stack, or #3: Have a detailed requirements.txt, where listing each package in the stack isn't that big of a deal. I submitted it regardless as I personally will use it; perhaps someone else will too.
It seems like your implying Flask doesn't have an ORM (maybe I'm misreading). I'd just like to point out that it does, Flask-SQLAlchemy.
[seaborn clustermap](http://seaborn.pydata.org/generated/seaborn.clustermap.html#seaborn.clustermap) basically does what you are asking. You have access to the dendrogram and can process it as yo wish as well. You can also annotate the rows and columns as you wish. I often perform some sort of clustering (such as K-means) and order+annotate the rows with the results.
Funny enough, getting to Django's ORM is when I gave up last time. I found SQLAlchemy to be much easier and much more portable between frameworks. If it works for you, AWESOME, I'm sure it's great, so please don't think I'm trying to imply you're somehow "wrong" for choosing it. 
What UI toolkit do you use? If any.
Refactoring my first Pygame project to get a clean bill of health from PyLint. This also my first major refactoring project. I'm learning quit a bit.
I really like Yury Selivanov's proposal here: https://mail.python.org/pipermail/python-ideas/2017-September/047047.html Backward compatible, but with all the benefits.
WSL or OpenSSH through https://github.com/PowerShell/Win32-OpenSSH
Your benchmark for pandas is totally off. You're measuring indexing with boolean indexing, which of course has O(N) performance: DF[DF.iri == 30] You need to set an Index and use an index based query: DF = DF.set_index('iri') DF.loc[30] # build the internal hash-table, which happens lazily DF.loc[30] # time this one You should see constant time performance.
Do you really want AST to differ based on semantically meaningless changes in whitespace, e.g., between { 'x': 1 } and {'x': 1} ?
Well anyone could use it to spam get requests until the key is invalidated due to spam.
Working on a forecasting system for work. Thing is based on ancient batch and perl scripts, windows executables compiled over a decade ago, and next to no documentation. Oh yeah, and it's not under any kind of version control. I'm doing my best to document everything, containerize it with docker, and reduce dependencies by rolling what I can into python scripts. Sometimes working at an engineering firm has its downsides.
Kinda related: JSX-like template in Python https://github.com/dropbox/pyxl 
True, can you think of a way to hide it in the code but still use it? I don't really want to have the user need to enter this key in the config file or as an environment variable. 
Thanks. I am pretty novice with Pandas. I will play with it a bit more later. But I still think this tool may be useful, especially since it is lighter weight and no dependencies. 
At least bash mode gives a usuable agent and client as SSH CA support on Windows is terrible
I'm more of a backend guy. I don't even know what this means. I can copy the bootstrap css, render a bootarappy page, and change some stuff on the page with jquery from python (transcrypt). That's all I got. Although I will add that the full chrome debugger works with transcrypt thanks to it supporting sourcemaps
indeed! It seems they use the same "hack". I've sent them [a PR](https://github.com/dropbox/pyxl/pull/10) to hopefully improve their install experience.
This is a super tutorial! Great style. Good pacing. I wish there were more of these and fewer video based tutorials. 
like sns.clustermap? it's good for the heat map and dendro but i don't think you can cut the dendrogram 
You have to do exactly what you just said. The barrier to using your tool is not the key, it's being noticed, useful, and stable. Make it obvious how to get a key and use it, and it'll be alright. The only work-around is ensuring your key is somehow allowed to make as many requests as it would like, which probably means paying the host of the service? 
What data structure does this use for the O(1) search?
Why would I use your project rather than [jekyll](https://jekyllrb.com/)?
Hi, i used it not so long ago with Python3. Working quiet alright :) The alg is not free for use for commercial applications, for research &amp; study you can go along as long as you like
Yes. Absolutely. There are many libs out there who reimplement parsing of Python code because this data is missing. Look at baron and parso for example. I just saw a third lib in this Reddit but forgot the name. Mypy and 2to3 probably do it too. 
Don't know if any "small" frameworks like that but curious what's your aversion to a while loop? I've typically done that in conjunction with threads for blocking io with sensors/micro-controllers. What are you trying to interact with? Also what do you think a small framework do in an ideal case? curious of this in case I see something similar or if I try build one Happy hacking! 
Hello ! I am glad you find it useful. Yes everything is free and open source. Feel free to contribute on github ;-)
There was a pycon talk on this a while ago. One of the big hotel websites uses it to find duplicate photos of the rooms. TL:DR is that they use a combination of pHash (or dHash, I don't remember), random cropping, and submitter reputation. http://pyvideo.org/europython-2016/ingesting-35-million-hotel-images-with-python-in-the-cloud.html 
How many images do you get? If you are going to pay, and there aren't many, you can get some cheap human to do it e.g. via [Amazon's mechanical turk](https://www.mturk.com/mturk/welcome). 
because i wasnt making a static site generator
When you put it that way, it sounds like a less powerful multithreading. You still have to worry about mutability and shared memory, but computational parts now *have to* be written in external code, not Python. I suppose leaving Python *is* one way to escape the GIL...
Maybe I need to use python3 rather than 2.7. Thx.
That's actually really cool.
I understand the argument for storing annotations as strings. But I don't understand why this change is bundled together with the backwards incompatible ones. Having to use fully qualified class names for annotating a nested class diverges from how scoping usually works in python. And I don't understand the motivation for this change.
fantastic ..it's great help...it gives overall idea of how it is done but how b is getting the access of names b = 0 First2 = driver.find_element_by_name("MemberFirstName") First2.send_keys(first_names[b]) this is i am unable to understand since b is not the loop also?
But this also means that the example you give to introduce *nonlocal* is not totally convincing, because *global* actually solves the problem (at the price of creating a global variable) : def calc(x): global z z = 10 def twice(): global z z *= 20 twice() twice() twice() return z + 10 print(calc(10)) 
Here's a more fully feature backport, not sure if worth it: https://github.com/asottile/future-fstrings/pull/2
use any tools you want to manage your blog, i just made an alter option :)
Great post. Any more in the series ?
*Note: I'll keep updating this answer as I find better and better results* 1. You could follow this and use it with Python's CFFI support: https://raspberrypi.stackexchange.com/q/57352
Isolated sub interpreters would precisely make it possible to do efficient multithreading (no GIL contention) . However only immutable objects (messages) could be passed **efficiently and safely** from one interpreter thread to another. I think this is the only sane way to do multicore computing anyway. PEP 554 will provide incentives for immutable datastructures (either in the python standard lib or in third-party modules): readonly numpy arrays / dataframes, frozen dicts / lists of strings and ints. This could be very useful for many kinds of data science workloads that sequentially CPU bound, IO bound and memory bound. **Edit**: I have added "efficiently and safely" (efficiently meaning without memory copy).
Thanks! I think it's useful to have. Some people object to Anaconda, or they have already invested time setting up a Python installation and don't want to replace it.
Currently `multiprocessing.Pool` or `concurrent.futures.ProcessPoolExecutor` impose a very large communication and memory overhead. Some of it can be reduced by using memory mapped numpy arrays but when sending large string dicts from the main Python program to worker processes is very expensive, especially when cloudpickle which is required if want to also send interactively defined python functions (e.g. when using a jupyter notebook or an IPython shell, or just a Python script that is not an importable module). Note that support for efficient pickling of interactively user defined functions and lambda expressions directly implemented in the default C-based pickle.Pickler class of Python 3 would still be beneficial when working with a cluster (e.g. when using a jupyter notebook to speak to a PySpark or dask distributed cluster)
Thanks. I’m still wrapping my head around this, and somehow didn’t fully digest the significance of FIFOs to the PEP during my first readthrough. Also, I really need to spend more time worth the existing multiprocessing module, as I have not used it much. As much as I love immutability, sanity just requires that objects are sent over FIFO by value, not by reference (e.g. serialization-deserialization) so that no two interpreters can have shared mutable state. Immutability just allows us to save linear work in the size of the data exchanged.
Fully qualified names are required to make it possible to eval the string later. The temporary locals() scope in effect during the class body execution will be gone by then. I guess you could use the class dictproxy or a copy of it as locals during the eval, but using qualified names and only the module globals is simpler. 
Thanks so much for posting these. I am new to Python/Flask and will use this to learn from. Will post how I found it after completion. 
 import sqlite db = sqlite.connect(':memory:') 
Would somthing like this work for the cut? import seaborn as sns import numpy as np import matplotlib as mpl import matplotlib.pyplot as plt mpl.rcParams['pdf.fonttype'] = 42 from scipy.spatial import distance from scipy.cluster import hierarchy from sklearn import datasets method = 'weighted' # 'single', 'complete', 'weighted', and 'average' cuttoff = 0.3 # cuttoff for clusters 0 = individual samples, 1 = all samples # grouped - shown as red line cmap = sns.cubehelix_palette(as_cmap=True, start=-1.5, rot=0.5, light=0.95, dark=0.5) iris = datasets.load_iris() iris = iris.data[:, :4] d = hierarchy.distance.pdist(iris) L = hierarchy.linkage(d, method=method, metric='euclidean') ind = hierarchy.fcluster(L, cuttoff*d.max(), 'distance') col_L = hierarchy.linkage( distance.pdist(iris.T), method=method) g = sns.clustermap(iris, row_linkage=L, col_linkage=col_L, method=method, standard_scale=1, linewidths=.0, figsize=(10, 10), cmap=cmap) ax = g.ax_row_dendrogram ax.plot([cuttoff*d.max(), cuttoff*d.max()], [0, len(d)], 'r', lw = 0.5) np.savetxt(r'C:\python\row_cluster.csv',ind, delimiter=",") plt.show()
Looks nice :3 Good job and thanks for sharing. The only thing i want to point out is that there is something wrong with your SSL certificate on your website. You might wanna check that out. (https://delogx.deluxghost.me/ shows an invalid one, https://deluxghost.me/ shows an ok one) 
i know, i haven't added ssl to that domain, it is redirected to the main site now, thx bro
Forgot: please, do not use underscore in python package name - due to bugs in packaging tools, packaging will never pass correctly :(. E.g. package list_dict_DB will be translated in requirements to list-dict-DB and not found...
Other languages: You're missing a semi somewhere towards the end of the file, I'm not even going to look at anything else. Python: Let's run these imports first and see where that takes us with this fucked up syntax that makes absolutely no sense to me now.
I agree that serialization-deserialization is the only safe way to send arbitrary mutable objects. This is what is used currently by `multiprocessing.Pool` and `concurrent.futures.ProcessPoolExecutor` to send objects from one interpreter to another across different processes. But if several Python interpreters can live inside the same operating system process, it would make it possible to "send" un-mutable datastructures without making any memory copy (low memory overhead) and without paying the CPU price of full serialization-deserialization (low communication overhead). Communication and memory overheads can be very expensive for many data science workloads when using `multiprocessing.Pool` and `concurrent.futures.ProcessPoolExecutor`. Here is an example, assume you want to call a function on a data dict with 1 million string keys of non-trivial varying sizes and integer values (e.g. a feature mapping for categorical variables for preprocessing in a typical machine learning workload). Just serializing / deserializing costs 1s of CPU time with the optimized C pickler of the Python 3 standard library: &gt;&gt;&gt; fake_data = {str(i) * (i % 100): i for i in range(int(1e6))} &gt;&gt;&gt; import pickle &gt;&gt;&gt; %timeit _ = pickle.loads(pickle.dumps(fake_data)) 1.16 s ± 45 ms per loop (mean ± std. dev. of 7 runs, 1 loop each) If you want to do the same from a jupyter notebook with an interactively defined function or a lambda expression, you currently have to use a custom pickler such cloudpickle instead. It's written in Python and the communication overhead for ser-deser of a single python dict with 1 million entry is now 10s: &gt;&gt;&gt; import cloudpickle &gt;&gt;&gt; %timeit _ = cloudpickle.loads(cloudpickle.dumps(fake_data)) 10.1 s ± 18.5 ms per loop (mean ± std. dev. of 7 runs, 1 loop each) And this is just the communication overhead, the memory overhead of copying large data structures is also often a very limiting factor that many junior data scientists do not now how to tackle properly. It would be great if Python if would offer low level primitives such as the interpreters module of PEP 554 such that library developers could provide their data scientists users with high level pure Python API with optimized datastructures for efficient multicore computing.
You may need to recompile opencv and ensure you use the nonfree flag.
Maybe something [here](https://github.com/seveas/python-networkmanager/tree/master/examples) would help - look in `ssids.py` and `add_connection.py`. (Assuming you're happy to use NetworkManager)
This was just what I needed. Neural Networks from Scratch.
Errr, we can't really help you complete an assessment, especially as it has to be done under supervision in a classroom according to information at the link provided. Also, the information linked doesn't actually detail the problem to be solved - it only details the criteria for assessment of the solutions provided by students. However, the information at the link is still extremely useful and you should note down some relevant information such as: * The breakdown of marks (out of 80) for different sections of the assessment. It should be noted that after creating the solution (30/80) the next biggest section is testing (21/80) - that is over a quarter of the mark! Make sure that you provide information on your testing methodology and results in your report as detailed by the marking criteria. * Make a note of all the top level descriptions for marking the different sections - you should be allowed to take this into the assessment with you. Aim to create your solution and write your report to meet the criteria described. * Note that "creating your solution" (30/80) is split into two subsections: "completeness of solution" (15/80) and "programming techniques used" (15/80). Make a note of the programming techniques they want to see used - subroutines (aka breaking down the code into separate reusable functions) and exception handling (which is exceptionally powerful in Python) will be very important. Pro tip: note the differences between the levels in the criteria - between level 4 and 5, at a quick glance, the primary thing that pushes you from level 4 to 5 is the correct use of subroutines (so make sure to do that!) * "Consistent style throughout" - get used to writing pep8 compliant code. You can write some practice code and then run the pep8 command (see pypi to get it) to see where you are deviating from the recommendations. It does just say consistent style so you don't have to stick to pep8 but it is easier to get into good habits. * Testing is broken into two subsections as well - make a note of how they want them presented as per the description. From my reading I think you should provide some evidence of tests that initially failed and how you used that information to then refine your solution to be functional and pass the tests. * Comments! Don't overdo them - you don't need to describe what every single line does. Overuse of comments can make code harder to follow than no comments - stick to descriptive comments for lines/sections where it's not really clear (to a third party aka the assessor) why you have done something. Good luck! You should be fine as long as you meet the criteria as described. You are really lucky to be able to do Computer Science with Python in school nowadays so make the most of it. When I was in school my formal IT (not even CompSci) education ended pre-GCSE! It is not overly important but I would be interested to know how you felt it went after the assessment and what mark you got when you get your results - just to see if my advice was helpful. 
Look into [openpyxl](https://openpyxl.readthedocs.io/en/default/), it does what you want.
Thank you so much for this, I will definitely use your advice. I will come back to you if I remember!
[xlwings](https://www.xlwings.org/) will allow you to interact with an open excel session, too
you can do it pretty easily with [pandas](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_excel.html). first, create a data frame with all of the users data. data_frame = pandas.DataFrame({'title': title_list, 'author': author_list, 'date': date_list, 'finished': finished_list}) then just type: data_frame.to_excel(&lt;file_name&gt;)
Nice work mate.
May I suggest you simply do a search ("google") for the terms "python excel spreadsheet"? You will find not only references to modules people have already mentioned but also links to tutorials on how to do so. One of the most useful skill a programmer can develop is learning how to search and find information. Another very useful skill is reading the sidebar of subreddits carefully enough to realize that /r/Python is **not** intended to ask such questions but is a place to share news about Python.
Thank you
Which is the service that is good for the UK?
Thanks for introducing me to the Instagram "/media" JSON feed. I was running into to issues crawling the standard page, due to AJAX content loading. Good work, but certain parts of your code could be simpler. See below: file_name = file_url.replace("https://scontent-arn2-1.cdninstagram.com/","") file_name = file_name.replace("https://instagram.fsvg1-1.fna.fbcdn.net/","") file_name = file_name.replace("/","") Could be: file_name = file_url.split("/")[-1] It's also worth noting that there's a boolean property at the bottom of the feed, named "more_available", telling you if more content is available. If it is set to true, you can get the next batch of items by passing in the last post ID in as a query string parameter, like so: https://www.instagram.com/greenday/media/?max_id=1586785894554300212_391198290
Thank So much for the info!!!
My apologies
You can also "write" directly to command line and receive answers using python. If this is an option you can use all nice debian tools. 
If openpyxl looks interesting, have a look at this presentation from Djangocon US 2017. [https://www.youtube.com/watch?v=ewYminvBly8](https://www.youtube.com/watch?v=ewYminvBly8)
HDBSCAN or another library called DeBaCl can render dendograms iirc. They are time consuming to create for large datasets tho.
Pygame; higher level; easier to use. eg, Pygame it powers Ren'Py which is used for hundreds of visual novels on Steam. It's on top of SDL1 though (because, pygame). https://www.renpy.org/ Ren'Py author has a SDL2-based version of PyGame that works on more platforms, better performance; etc. Also https://github.com/renpy/pygame_sdl2 Come to think of it; you might just take a look at Ren'Py directly; there's a lot of really cool things in there; effects; sprite management, scene management, etc that you'd normally need to track yourself. Have worked a bunch with that; it's super cool. Also super-optimized in places with a bunch of cython work. Far more tuts and learning resources, etc around Pygame. Pyglet I haven't really used; but it's lower level, opengl-based, offloads a lot more to the GPU. it's better for eg if you have thousands or tens of thousands of particles on the screen at once. I'm also somewhat fascinated by nimgame2, though it's for Nim (resembles Python a bit; eg far more than say Lua does), but Vladar4 has put some impressive work into it: https://vladar4.github.io/nimgame2/ 
Sorry I can't be of more help, but I've implemented scanning in a package called called `access_points` https://github.com/kootenpv/access_points (to be used in https://github.com/kootenpv/whereami). I always considered connecting and disconnecting should be added to `access_points`. Its main focus currently is being OS independent and to collect access point info, though. I'd certainly welcome PRs ;)!
Happy to help!
You don't need to apologize. 
Oh. That explains why I couldn't get my other package to work
Yep. A perfectly good option of that is what you want. But I wanted something easier. As noted in the readme, dataset gives you a lot of the same features I made on top of sql 
Dictionaries and sets. Just to elaborate, the basic concept of the main structure is that it parses the input and creates a dictionary (actually, a default dict) for each value. For example, if you add L = [ {'k1':1,'k2':2}, {'k1':100,'k2':200}] The internal lookup table will look like: D = {'k1': {1:0,100:1},'k2':{2:0,200:1}} so to O(1) find which entry has value `k2=200`, it is: L[D['k2'][200]] 
Just a FYI. Coinbase has a decent API that might be of use to you.
Paramiko, which is a python module, works pretty well. You can also use bash on Windows 10, which even changes os.name to linux/linux2 or whatever. I'm not sure if there is a way to tell it's really Windows 10.
Have you checked the console for any errors in the script? Also, your HTML syntax is wrong, the &lt;tr&gt; tags should be inside the loop :)
The Tor client runs a SOCKS proxy on your local machine. You can connect to it using any HTTP client that supports SOCKS proxies.
I have moved the question to StackOverflow, please resolve the problem.
unfortunately, not thread-safe...
Honestly I'm not sure. Start with plaid, search through what Banks they support and see if the ones there are supported. Do the same with the other services. There were a couple I think that were cheaper but didn't have some of the smaller US Banks. Which is why I chose plaid. They seemed to have the most.
If OP is just going to use Jupyter Notebooks ```--ip='*'``` works rather well. It's how I interact with most of my headless machines.
Pandas is a great tool. I've used it in smaller ETL processes. Just makes manipulating data so easy. Import and export is trivial. In other words, Pandas is not just for data science. 
Very similar in goals and concepts to littletable
Thanks for sharing that. I never heard of `littletable` but will have to take a deeper look. One thing, whether it matters or not, is that `littletable` requires you to use their objects but mine can work on a regular dict. Also, I can handle multiple items. Still, it is always good to see other options. As I stated in the readme, I have very, very little experience with databases (something I want to work on, but is not part of my day job). I think that comes through in how I approached this vs littletable. 
http://www.sqlite.org/sharedcache.html A :memory: database can have multiple connections in shared cache mode. They can be safely accessed by multiple threads. Without shared-cache mode each memory database connection starts with a separate, empty database. 
I agree that this is the way to go. I have used pandas to create and place (in specific locations) many, many Excel files, to write to them and read from them. Pandas also allows you to create and use multiple pages in Excel (represented by the tabs at the bottom of the page). I don't agree with the sentiment expressed elsewhere in this thread that if you have a question you should just "Google it." I regard that answer as somewhat rude. If you Google "python excel spreadsheet" and look at the results will it become clear that a lot of experienced users who do this every day do it with pandas? Try it! You might eventually figure that out after spending hours using methods that you will ultimately abandon.
&gt; Obviously it's not the most secure as it does require you to write your pw in plain text in your local machine. Imo you shouldn't ever even publish a password manager that stores data unencrypted, as someone will find it and use it.
Your question is really not clear. Do you just want to print the line that starts with 'NATed packets'? In that case: for line in open('myfile.txt').readlines(): if line.startswith('NATed'): # do you just want to output that part of the file? print(line) # or, if you need the values separately: nated, denated, errors=line.split(',') # or even one step further nated, denated, errors = [int(x.split(':')[1].strip()) for x in line.split(',')]
I'm surprised you can't filter out specific modules from showing up in cProfile. Another super useful tool that I've used a lot is [gprof2dot](https://github.com/jrfonseca/gprof2dot) which can parse the regular old cProfile output files and produce epic call graphs with timings in each one. I've found many a bottleneck using this that was not obvious with only cProfile. 
Sorry, what I want to be able to is ultimately add the nated packets and denated packets values as a 3rd and 4th column of the first list. So I need to extract those and store as variables. 
thanks for putting this together. I am scratching the surface with Flask and it is exciting to see all the possible applications.
Just having fun with PRAW. I want to choose a subreddit and collect every submission and post, after which I build a little database with every poster in that sub, so I can see how many posts/submissions they have made. Eventually this info should be parsed and converted to RES tag format. 
`littletable` will accept user objects too, as long as you can access the items as attributes. The `littletable.DataObject` class is just there to simplify normalization of dicts to immutable namespace objects (for `object.attribute` access to data fields), like a `namedtuple` would be. What do you mean by "can handle multiple items"?
Hmmm, yeah. For more advanced stuff (Vue.js is my favorite), it's somewhat problematic -- though not impossible -- to use another language. But really, having ECMAScript 6 transpile back to regular JavaScript gets you a lot of sanity otherwise missing from that language.
This was super interesting from a tools and python perspective, and I also thought this video was hilarious. Great find OP!
In math, we often write `xy` to mean "x times y". Computers however require you to be explicit. You have to write `x*y`. Or in your case: d1 = math.sqrt((x2-x1)**2 * (y2-y1)**2) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Take your spam elsewhere.
Okay, thanks man, I'm like a new born child recently changed my major so coding is new to me, extremely overwhelming. I'll head over there! 
I've been getting into opencv what is flask used for?
BTW, the formula you are using is called [Heron's formula](http://www.mathopenref.com/heronsformula.html) and you are implementing it wrong. When your prof said `(something)**0.5` remember that's the same as `math.sqrt(something)`. 
I'll have to bookmark this in case I find something that I'm not quite sure is a hot dog.
Flask is putting a web frontend on the thing, that's all. You could skip flask and have a command-line only version as well.
The answer is, as you might expect, "it depends." Ask yourself some questions: - How much time are you putting into learning? That's the biggest factor. - Are you working on reading and doing exercises or are you working on projects that challenge and build your skill? - What are you focusing on: general python, data science, graphics processing? You might increase your chances of getting a job if you focus on a niche topic. It will also depend on what level the job is looking for: entry level or guru or somewhere in between. You may be hirable for one job and not hirable for another. Your background in technology will make it easier to come up to speed than someone who has never coded before but each person is different. 
I just finished creating [this image](https://i.redd.it/xa9l1m6jchlz.png) using PIL, a kind of thing I had never done before with Python.
One of the books in the sidebar of this subreddit has a whole chapter on this https://automatetheboringstuff.com/chapter12/ &gt;Chapter 12 – Working with Excel Spreadsheets 
At work: Writing a Nagios/Check_MK custom check to graph stats from Apache web logs, because I can't find one that does what we want. Three components, two in Python, one in PHP :-( Agent plugin - runs on the web server VM. Gathers stats by tailing the log file, and analysing/quantifying how many requests use which methods (get, put, head etc.) same for response codes, also number of requests, average number of requests per second, average response length etc. Writes out a text-based report of what it finds. Server plugin: receives the agent output when the check is run, and parses it for ingestion by Nagios and subsequent graph creation. PNP4Nagios template (the PHP bit) to combine the methods and response codes into RRD graph creation commands so PNP4Nagios can render nice graphs. Just glad it's not Perl. At home: hacking on a micro-cms written in flask for our Makerspace web site. Just added a page macro facility and used it to write quite a nice calendar module (if I do say so myself). 30% python, 30% html, 30% css.
is it easy to program? I have little care for making a UI because using pygame or whatever else i can use has be mapping out the whole screen. And really i don't want to deal with it. I like the UI building methods of Allen-Bradley's panel view. I know it's different. But when you creating a UI for a workstation that is controlled by the PLC it's quick and reliable. All you need to do in the program is populate your screen and address all the buttons and stuff with addresses so they know where the values are coming and going.
Cool stuff, how did you identify the parts?
Thank you. I didn't add anaconda to my PATH env variable, but I did use the conda-forge install. If I remember correctly, the Anaconda install recommended to NOT add it to the PATH variable, so that's why I didn't go that route. I'm not so familiar with Python yet, so I didn't want to mess something up. Anyway, thanks for the help!
First, figure out the math that would use "h" and "i" to determine the indent amount. Then use the same trick to print that many spaces. print " "*indent_amount + char*w --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Unfortunately that was not done in any cool way, I just extracted that information by hand, creating a file with data like this: 09:16 politics 09:45 factory 10:08 factory news 10:23 politics news 10:29 politics 11:10 cops politics 11:22 cops 12:29 school The image was then created automatically from the data.
Well right now I'm working on a lab report for undergrad physics (analysing bending of a cantilever beam) - and I've got a chunk of numpy code that's behaving oddly. Basically I'm doing data analysis on a small set of data, but I'm getting uncertainties of ~2000% in my fitted parameters (polyfit), which is concerning, to say the least. I'm trying to track down if it's a mistake on my part, or just erroneous data. :(
&gt; What do you mean by "can handle multiple items"? With my tool, you can put in a dictionary like: {'attribute1':[1,2,3]} and query for items where `attribute1==2`.
FWIW, I suspect (though have not tested) that my tool is thread safe.
Looks great. The one I'm using at the moment is written in 2.x and I keep wishing it was in 3.x when I find myself having to do things the old fashioned way. But it won't run on 3.x as is. If this had been released earlier, I'd have used this! The code is nice and pep8 conformant. Docstrings are detailed and well written. The only change I'd make is a bit more vertical white space in the actual code - breaking discrete control blocks up, but that's a minor niggle. Big up to you!
Hehe, don't worry, it's still a cool thing to do. 
Love the style of your tutorials, super high quality, very nice.
Sure! The second part is up already: Unit of Work and Repository Patten; I'm working on the code sample for part 3, which is a brief diversion to talk about CQRS; and then part 4 is half-written and covers how to use a message bus.
From the title I thought this is about use of Python in the medical field. Not saying this isn't useful but with that expectation in mind I'm now slightly disappointed.
This is the full guide index. https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/ 
SQLite is not thread-safe. And I recomend to test you package not only for thread-safeness, but also for asyncio compatibility (ideally support lock-free mode for event loop).
there is a difference between scraping and browsing. Scraping means making a copy of some content. If your argument is true, then I can not browse using lynx.
Oh that's neat. With `littletable`, anything more complicated than one or more attribute value matches would require passing in a predicate function, for your example it would be something like `table.where(lambda rec: 2 in rec.attribute1)`
Jumping straight from the Dockerfile to a compose file does a great disservice to people unfamiliar with Docker, which seems to the audience you're targeting. You also don't do a great job of breaking down the compose file either. 
if I wouldn't be so poor, I'd gild you for this comment. 
I appreciate the sentiment just as much. :D
 Working on my first real project: A utility that will allow me to add users into our AD. The original motivation was to make something that I could run from my workstation without having to RDS into our AD server, as well as something that will let us make a new user account with the attributes we usually have to go back in and add later, already filled out (The standard snap-in only takes first name, middle initial, and last name). Eventually I would like to add batch user creation and a search function with attribute filters to then tie into account modification or deletion, as well as search result exporting that can be automated to double as a reporting tool. I think I might restart this with Flask or Django, because GUI programming is annoying. Especially for someone of my skill level, it took some doing to get the GUI laid out like I wanted it. I can make my "GUI" really quickly with Bootstrap so it may be less frustrating. [Critiques of my code are very welcome](https://github.com/palten08/pythonadtool)
I loved the first edition, this can only be better!
Video tutorials are a plague. No index, no scanning for the stuff you need, tons of tangential stuff you don't care about... and often the cringe inducing "Hey guys..." opener. 
thanks for your suggestions @danskynet 
Why not YAML? What you're saying makes sense though, I wrote lots of mud stuff in C and just had plaintext files for players and classes and inventory 
im also pretty new, been working with python for a few months and this seems awesome. you can do it either way i guess. question about the project, would this be a text generator? it combines different "character parameters" and builds a character object from those selections?
*Nodnods* I'm a beginner and I'm planning a simple 2D game without any super-kewl graphical effects, so I'm thinking either PyGame or poke a ES6 game engine. And thanks for the tips towards Ren'Py and Nimgame!
Ultimately I will build a character object which can be stored and reloaded in the future or exported to a character sheet. I was thinking this could also be a good way to explore GUIs for character creation. Not sure about windowing packages in python yet (tkinter?) but it would be nice to display it visually. Right now I'm thinking first steps. How to store frameworks, load &amp; use them, and output a character object. I'm thinking the JSON (?) file stores archetype rules like "warrior has str between 1 &amp; 10" , the character object is created using the rules and stored (method?) for future use.
The most human editable one is probably `configparser`: https://docs.python.org/3.6/library/configparser.html E.g. `config.ini` would be: [Furious] name = Rawr strength = 14 [Curious] name = Don't hurt me strength = 8 `json` and `yaml` are both human editable but can be somewhat unforgiving of typos. Edit: a nice thing about `json` is it will infer the data type. I forgot but `configparser` doesn't do that. 
No, if my argument is true then you cannot legally browse -- or scrape, the difference is only whether or not the data received is stored in memory vs a known location on disk, and let me assure you that from the POV of law enforcement the distinction is irrelevant -- sites that contain content that is, by itself, illegal to transmit or receive, even in Lynx. Google around for **illegal primes**. Now, consider that action from the point of view of someone who lives in a regime where even accessing Google is a crime against the public order. There is no inalienable right to look at, *but not download*, porn. As Ted Cruz well knows.
Mostly because I don't know what I'm doing :). Is YAML better for that sort of thing? I'm not familiar with it.
Just easier for me to hand edit, a lot simpler formatting 
Whats YAML?
So the problem with coding character classes as just parameters in a text file, is that a Character class in a role playing game is not just different stats. Some of the things may be just changes in stats. As an example Let's take Pathfinder Wizards vs Sorcerers. Hit Dice, Skills, and many other aspects of character generation are the same. However spells work completely differently for the two classes. For a sorcerer you need to track spells known Sorcerers have Bloodline Powers and Wizards do not. You will probably want to use some Code to differentiate each class. (You could use a class, pun intended) Actually if I was building this I would create mixins or some similar design pattern (Composites, Decorators(The design pattern not the Python Concept) so that you Could have a SorcererClass and a WizardClass that are built from a SpontaneousCaster and a PreparedCaster but both have the ArcaneCaster. Anyway I just wanted you to know it is more nuanced than just some data in a text file. You should store as much as possible in a text file though. YAML or JSON would work well What would be really cool is if you made the rules for SpontaneousCaster, PreparedCaster etc... configurable in the text file so you can have the best of both worlds. something like {'Wizard':{'rules':['PreparedCaster', 'ArcaneCaster']}, 'Sorcerer':{'rules':['SpontaneousCaster', 'ArcaneCaster']} } Anyway, Hopefully you get the idea. Best of luck
this is ususally what game engines do. Minecraft (java) does this as well. The engine itself can generate the proper entities with that configuration. So what you're doing is creating primitive objects that can take a configuration. Json is a builtin to python so thats fine; but really any data exchange format would be fine. Yaml, or even binary best practice would be to make a classmethod on each CC that can create an instance from a config file. json would be super easy to just load in as a dict and setting up the correct attributes.
Tiny code, amazing!
Same. Working on a bot that posts german copypasta when called with "!kopiernudelbot &lt;name of the copypasta&gt;" Don't think I'll actually deploy it outside of my own test subreddit. Don't have a way to host it atm and iirc the mods of /r/de don't like bots there that much. :D
This is usually done with zip: for line, next_line in zip(itemlist, itemlist[1:]): if "10.1.1.1" in line: print(next_line) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Holy shit, that's exactly what I needed. I need to go read up more on zip, but would you mind giving me a quick walk-through of what's happening there on line 1? 
I'm working on a reddit bot and django site to present and aggregate the data. I also wanted the users to be able to annotate the discovered posts. I was planning on hosting it for free on Heroku. I'm not sure how I want to get around the 10k row limit on the free postgres datastore option. I'm debating between: a) running the bot and storing the raw data locally and pushing aggregated content to heroku b) running on the heroku sever and aggregating data on a schedule so that only t-10 days is detailed c) killing the pretty site and making the raw data available somewhere at some frequency. **any suggestions?**
Something people used to use before JSON.
YAML Ain't Markup Language. TL;DR - Another piece of shit serialization specification.
And one more question. If instead of a print I do: for line, next_line in zip(itemlist, itemlist[1:]): if "10.1.1.1" in line: blah = next_line print blah If I try to reference *blah* globally it says not found. How do I make it usable outside the scope of that loop? 
And just saw your note about /r/learnpython...will post there in the future. 
There is no separate scope for a loop. You probably have this whole thing in a function, so it's in the function's scope. You get it out with a return statement. def func(): for line, next_line in zip(itemlist, itemlist[1:]): if "10.1.1.1" in line: blah = next_line return blah print func() # or .. global_blah = func() Note that every time it's found it will overwrite the previous "blah", so this will only return the last item found. 
`itemlist[1:]` makes a shallow copy of itemlist with the first element removed. `zip` is then used to return the transposition. It's equivalent to this: short_itemlist = itemlist[1:] for i in range(len(short_itemlist)): line = itemlist[i] next_line = short_itemlist[i] `zip()` is a powerful tool for working with parallel lists; you'll get very used to it. 
If you put in a few (meaningful) hours every day you can be pretty knowledge in a specific field (django, flask, numpy, scipy, whatever) within a year. If you want to be a generalist it will take a lot longer and be harder to get employed. 
I don't actually have it in a function, but I keep getting errors about 'natpackets' and 'denatpackets' not defined when i try to put them into a dictionary. Maybe I have some indention issues. I'll post in /r/learnpython and see if anyone can spot the problem. Code here just in case you have insight: for line in config: if 'nat rule' and 'source-pool' in line: source = line.split()[6].split('_') # turn this into source ip source_ip = source[2] + '.' + source[3] + '.' + source[4] + '.' + source[5] + '/' + source[6] # get NAT pool pool = line.split()[10].split('_') #turn pool into pool IP pool_ip = pool[3] + '.' + pool[4] + '.' + pool[5] + '.' + pool[6] + '/' + pool[7] # find nat packet numbers in natstats.txt for line, next_line in zip(natstats, natstats[1:]): if source_ip.split('/')[0] in line: natstat = next_line natpackets = natstat.split()[2] denatpackets = natstat.split()[5] # create dictionary with source ip as key and pool IP as initial value nats[source_ip] = [pool_ip, natpackets, denatpackets]
hey what's up
I wouldn't get my hopes up, looks pretty dead. Last activity was over a year ago. Interestingly enough though the Python 3 fork is by none other than the BDFL himself.
You need to show us the complete code. Example input files and what you want out would help too. I suspect that the problem is that "natstats" is an empty list, therefore the loop never runs. Also, your line 2 needs to be if ('nat rule' in line) and ('source-pool' in line): 
From the image at the top, I thought it was about high precision timing in sporting events. Now we're both disappointed.
I'm really excited to see this come out. The first edition was great, but because so much had changed with Django, I encountered several roadblocks using the latest version instead of the version in the book. I've been waiting all summer for this to come out. :)
Is this supposed to be a list? &gt;This setup fixes pains with: * Clutter. * Working on multiple development machines. * Risking multiple local projects interfering with each other. * Stuff breaking because of your development machine changes. * Having outdated dev setup docs or missing important points.
Better quality link without load times. https://www.youtube.com/watch?v=Q6W-mZY4Wuo
I've started converting the W3C's official CSS file validator to Python. It was initially written in Java in 1999-mid 2000s. Honestly, some of the code in here is fairly poorly written. I'm hoping not only hoping to translate it, but also to optimize it. If all goes well, I will try making it into a pip package (which would be my first) Edit: [here](https://github.com/CalgaryMichael/css-validator) is my repository for it, if anyone was interested in looking at the code
Video linked by /u/Sir_not_sir: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [Ethical Hacking with Python and Kali linux](https://youtube.com/watch?v=Q6W-mZY4Wuo)|TrueTech Media Tv|2017-05-28|10:50:50|739+ (98%)|23,987 &gt; Ethical Hacking with Python and Kali linux --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/Sir_not_sir ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=dmx898c\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v2.0.0
thanks for sharing this!
You might want to look at the source code for PcGen. http://pcgen.org/ You need to be quite sure on the core system beforehand; a chargen for a game like pathfinder is NOT trivial, and you will find it very difficult to build a generic one that can handle all games, and validate the characters.
I need something like this. Can this be run on a VPS with user login or is it designed more for intranet? I'll read it better later, on mobile now.
How many tweets did you parse to build the Marco chain? Great project!
This is such a great book to pick up after learning the basics of Python if you're interested in web development. I finished the first few chapters and it's paced nicely for people who have just passed the introduction stage to Python.
Thanks! It depended on a few factors. There was a minimum of 150, but could be upward of 1,000.
Also unmaintained, lol
Thank you for comments!
Working on a wxpython app to run the billing scripts for my company. Originally the process was a series of individual scripts that needed run, with no auditing capabilities. I'm trying to make a full scale application to use. 
I'm not too familiar with JSON. But I'd love to follow up, do you have an example of another template you have in mind? 
Can you provide some code snippets? What libraries are you using? Matplotlib? Something else? 
Great news. This is next on my list. Is the free version updated as well?
I use PyQt, but I usually code the GUI by hand. If you are using Anaconda, it comes with the QtDesigner pre-installed, which is a drag and drop GUI editor. It will generate `.ui` files that you can then convert to `.py` files to import into your app. On mobile right now, but you can just google and find plenty if examples and walkthroughs for it.
Not that interested in Django anymore, but this book was a great introduction to web programming in python. I moved on to Flask and Pyramid, testing in pytest, sqlachemy etc, but getting started this was the book that did it.
I'm not sure what the outcome of this project will be, but I'm doing some web scraping / parsing / NLP on elections in Europe to see what insight I can get into what factors play a role from country to country. I've got socioeconomic factors per administrative division from the countries I'm looking at, and election results per division; the NLP analysis will help (I hope) figure out how "real world" factors like employment, age, etc. measure against media reporting. My problem now is that some of the papers don't have results themselves, but encapsulate them in Google custom search engine results. So, the scraping part is herky-jerky for the moment.
Will check this out on Safari at work tomorrow, and thereafter, until I can give a fair review. But you got it! Congratulations (not on my impending review, but publication of your hard and constant work)!
**N**ot **I**nvented **H**ere 
If you are committed to a couple hours a day including weekends, I would just register for some classes. Python is a common intro class to CS, and you could have a degree in two years. If you're not interested in a degree and choose to go it alone, you'll need to throw yourself into increasingly complex projects that center around the topics of programming that you find interesting/marketable. 
I assume you downloaded python 3. Whereas the script was written in python 2.
Do you have any plans to/have you already released the source code?
In order to answer this question, we need to know what you find isn't quick and/or easy about creating and packing each widget manually.
I don't know of any libs, but for scanning you could use tcpdump to build a list of ssids from received beacons or hook the wireless driver directly. To connect, simply write to the supplicant file and blow it out to disconnect. Services would probably need to be flopped as well. 
uh I don't know how to do that, can you tell me more specific ?
QtDesigner
Html
Pyqt designer. Little bit of a learning curve getting everything set up, but once you get it working you can move pretty fast. 
Given your use case I would agree with those suggesting JSON for several reasons: * It comes with base Python already. * It serializes to a Python dictionary, so all the methods you use for dictionaries can be use with the serialized data structure. You could use classes defined in other Python files. This would be the "fancy" way and might provide a greater level of abstraction, if you were looking for that.
Congratulations, Harry! 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
deleted ^^^^^^^^^^^^^^^^0.3684 [^^^What ^^^is ^^^this?](https://pastebin.com/FcrFs94k/17544)
Geany
Looks like a depth-first search algo. The graph is stored in a stack structure and then you start traversing that graph (while loop) visiting the child states first instead of sibling states while checking if that state is the goal and tracking what states it has visited (explorered set).
Would love to hear more about the code - if you aren't open sourcing, libraries you relied on or specific issues you ran into. 
but why does it return what it does... it returns something like [south,west,north] etc. but how is it exactly updating that list of directions?
This is actually a great choice. Make a web app 
Yes, this was it... But the script still doesn't work, guess it's out of date. But probably that was it, I'll contact original script author for further help. Regards!
Without the rest of the code, I can only guess. The graph is the "problem" parameter passed into the function which I suspect is an object. problem.getStartState() is the root of graph and every call to problem.getSuccessors(temp[0]) gets the child states. You'll then call getSuccessors() until you reach the edge of the graph tracking where you've been if this edge is not the goal, you backtrack (push stack at the end and you start at the top of the loop again) to an unexplored state and call getSuccessors() on that state until you reach it's edge. You repeat until you find the goal.
I'm honestly not sure yet.
Till he (hopefully) replies. script error now shows there's no Bs4 module. That is I figured out beatifulsoup (for extracting html/xml websites/images). http://www.pythonforbeginners.com/beautifulsoup/beautifulsoup-4-python If it's no hassle to you, can you explain to me how to install/integrate/use this module, as I believe script relies on it. (I'm on windows 10 if it helps anyhow) and installed 2.7.2 python.
but how does it return a list? it says return currentAction which seems to be a element in a list.
I'm not sure yet if I'll put the full code out there, but I'd happily answer other questions about it. For libraries, the only non-standard ones are Tweepy and Markovify. Tweepy is a Twitter API wrapper and Markovify allows you to build and use Markov models really easily. The rest of the code really just deals with getting tweets, processing them to be fed into the Markov chain generator, and then behavioral algorithms.
No sorry you'll have to look it up
The IDE shouldn't be the problem, right? Are you just asking for a gui library? If you need something basic you can just use tkinter, it comes with python 3 when you install it.
I write code to handle appointment times in medical clinics. Also had to sit in medical clinics waiting for my own appointments. "surgical time tracking" means "we'll get to you when we feel like it". Not that I'm bitter or anything.
&gt; MFSTRATEGIES IS A ONE OF A KIND POLITICAL CONSULTING FIRM THAT USES TECHNOLOGY IN NEW AND CREATIVE WAYS TO DELIVER BETTER SOLUTIONS FOR OUR CLIENTS. Ex-banker here. We should get coffee in hell.
I know kivy is a UI framework, not sure about drag and droppable UIs though.
WxFormBuilder with wxPython Phoenix using XRC.
I'm just starting out on python and I'm making my way through the Udacity nanodegree for full stack web developer. I'm learning a lot. And I'm excited about coding again. I can't tell you how thrilled I am to be learning a new language.
I recently had to build a little application to correct thousands of photos metadata (date, location, etc) before uploading them to googlephotos. I was going to try out one of these GUI libraries but just decided to make it a small web app (flask run locally) and its working absolutely fantastically.
Looks useful.
Oh golly, yes. Thanks! How could I have missed that.
Because no one said it... Translating Qt `.ui` files with PyQt4: import os, PyQt4.uic my_path = os.path.dirname(__file__) PyQt4.uic.compileUiDir( my_path ) with PySide (1.2.4): import os, glob, subprocess uiList = glob.glob('*.ui') for uiFile in uiList: uiFront = os.path.splitext(ui)[0] subprocess.Popen('pyside-uic {} -o {}.py'.format( ui, uiFront) Assumes you have `pyside-uic` compiled and in your path.
That's a good point, and one which I was worrying about at first. In the end, I decided to stick to a high-level "these are the issues and benefits, here is how a complete setup looks, those are details I like about it". Confusion is not good, but can be fixed if there's interest. The [basics](https://vsupalov.com/6-docker-basics/) needed to understand why there's a Dockerfile and a docker-compose.yml file, or the detailed structure of each, are a big topic which I think is better taken care of in separation - once there is enough motivation to deal with it. I will reconsider the way the compose file is discussed. More detail here can help a lot to spark interest. Thanks!
* Right click start button * Click run * Enter "cmd" and click ok * Enter "pip install bs4" 
Wow, that seems like a small sample for such good looking outputs! Did you remove urls from the input text? I wouldn't want a bot to start spewing out other peoples links!
Windows? The "black one" is the *terminal emulator*, which on Windows when opened by double-clicking a Python file is CMD.exe, and it does indeed close immediately after termination. To make your life easier, manually open a copy of CMD.exe, `cd` to the directory where you're working on your script, then run it using the [Python Script Launcher](https://docs.python.org/3/using/windows.html#launcher).
First off, this should be in [r/learnpython](https://www.reddit.com/r/learnpython) . Second, at no point in the code you provided is there a `return currentAction` call. We can't possibly answer or help to answer your question with the limited amount of information available to us. The function above alway returns a list.
I am going to third on this one. I would create an interface through Flask, and combine it with a library like [Pywebview](https://github.com/r0x0r/pywebview) to package the app to launch in a dedicated formatted program window (so it is a bit nicer than just launching the app and accessing it through your web browser). [Remi](https://github.com/dddomodossola/remi) is another similar library that uses the same idea, except you would build the app directly with the library and bypass packaging with Flask. I have not used this library, but both I have listed look fairly well made, documented, and vetted. 
In addition to `collections.namedtuple` (immutable) and custom classes (verbose, error-prone), there are also `typing.NamedTuple` (concise), `types.SimleNamespace` (mutable), or `attrs` (feature-rich) 3rd-party package (also mentioned in the pep). PEP 557 @dataclass decorator that enables a concise syntax for "mutable namedtuples with defaults" is nice to have in the standard library.
I wonder about battery consumption on a macbook, since docker for mac does use an xhyve VM to run the linux kernel.
"Don't set out to "learn Python". Choose a problem you're interested in and learn to solve it with Python." - this is the Holly mantra. I was not doing PHP till I hit a problem (15y ago). Started working on the real app, sourceforge one, got it up, thousands of downloads, and landed a job. Have a look at http://jam-py.com project to familiarize with databases and what Py3 can do with almost no coding. Than build some small app and git it. Put it in your CV with references. Land a job :) 
Another option to those said is kivy
Firstly I suggest you see Mike Bostock's (author of D3.js) two animations: [Wilson I](https://bl.ocks.org/mbostock/11357811) and [Wilson III](https://bl.ocks.org/mbostock/11363008). These two animations are written with D3.js. Now you have them both in one GIF animation written with pure python (use only builtin modules) ! For the story of this image see my [previous reddit post](https://www.reddit.com/r/Python/comments/5dxhp9/wow_guy_i_made_an_awesome_gif_animation_of/) or the [github repo](https://github.com/neozhaoliang/pywonderland).
I use vim + glade for Gtk3 development, works well enough. 
I think OP wants a drag-and-drop RAD experience in their GUI design and development.
/r/learnpython per the sidebar --&gt;
I was gonna say Firefox.
Also you don't necessarily need to convert `.ui` into `.py`. You can just load the `.ui` files directly in your code via `QtUiTools.QUiLoader`
I've seen people bring that up, yes. Especially if many volumes are involved. Running Docker machine + virtualbox supposedly is better on mac if you're looking to reduce battery drain. I haven't noticed a significant difference myself in practice though when using Docker for mac though. Maybe because I don't run Docker by default, usually have an outlet at hand, and bring unused stacks down when working my tiny macbook.
Same here. But any IDE + Glade should work. Links: https://python-gtk-3-tutorial.readthedocs.io/en/latest/index.html https://wiki.gnome.org/action/show/Apps/Glade/Tutorials
Downside is that using this approach you loose autocompletion. Cool for fast prototyping though.
What is the best way to share singing like this with a team sho it is ratty for them to use. Don't you first need to run a local server and then run the flask app and then navigate to the localhost url? Not a huge deal, just wondering if there is a more friendly option. I guess my question is how do you make it as seamless as double clicking to open a program.
This is brilliant! I especially love how utterly simple it is to write a gif as a binary stream. Excellent use of the std lib! I can imagine that I'd approach it like a hundred different ways using a bunch of external libs before hitting on that.
Jesus, £40 on Amazon for a paper copy.
I did a quick look in to this because I'm just learning Python and correct me if I'm wrong but if you use something like tkinter you have to specify size, shape and location of each UI object? I think OP like me just wanted be to able to design the UI by drag and drop elements then just assign each element some code. For example button A will do X.
Yes! It also took me a long time to find the approach of encoding the GIF by hand! Encoding is much easier than decoding!
As I mentioned somewhere: - "Don't set out to "learn Python". Choose a problem you're interested in and learn to solve it with Python." - Can you dockerise node? - PhD? Always good to have :) - Depends on the Universe the God lives in. - Have a look at http://jam-py.com project to familiarize yourself with databases and what Py3 can do with almost no coding. Than build some big ass app and git it. Become a God of that Universe. Ie, I 'pumped' 10M random records in sqlite3, made a graph of it and found it's not random! Fun! Used sqliteman from source to 'pump' data in. Double fun! - Again in Py universe bright future. Who would say 15y ago PHP would be object oriented? Was the initial idea the Hypertext Preprocessor? :) Good luck. 
I can imagine. I've saved the post and will be looking through the rest of the repo. Can't think of too many times when I'll need to do just this, but it's a great solution to writing out an entirely programmatic animation, and I'm very glad for all the extra detail you put in your docs. Definite +1, everyone should read.
Sounds like you basically want [Graphite](http://graphite.readthedocs.io/en/latest/).
The benefit I learned from hacking this program is that I got better understanding of how GIF images works, and how python2 and 3 differ with each other in `chr, bytes, str, bytearray`. These are the hidden traps one might fall into when implementing programs that handle byte-level data.
Sorry to bother, but do you know how to install it on linux(Ubuntu). Am trying to install it but am confused. so far, I tried: sudo apt-get install qtcreator pyqt5-dev-tools But I don't see QtDesigner anywhere. is QtDesigner a standalone application or it is a part of qtcreator?
Sorry guys for the confusion :p What word do you think I should use in my title instead of "Surgical"? 
Start here https://learnpythonthehardway.org/
Hi Thanks for the initiative. Python is a good for a career in programming language. There are many institutes which provide python training but you have to choose a good one with best faculty. You can Visit Here to do that: [Python Training](https://www.urbanpro.com/chennai/python-training-classes) 
Yes, I mentioned it in the article. To be honest, I didn't try to go deeper with gprof2dot, but it looks like it produces very outputs in comparison to cProfile :)
BoaConstructor was awesome but Riaan who wrote it has stopped supporting it. It did RAD GUI IDE really well. sigh... So now I have moved to XOJO, not python but great for fast development where you need a GUI.
try this: apt-cache search qt | grep designer
If you know nothing about algorithms or the 'basics' behind programming. MIT intro level programming is available on YouTube. Watched a few of them while i was in college, helpful to watch them to to know what to look up/at
open browser and hit ur web app host
These days my go-to tool is either pyflame (if on a Linux system) or python-flamegraph. They have *significantly* less overhead than the "standard" Python profilers, and the view flamegraphs provide makes it much easier to see the big picture and to avoid getting too focused on details. I also found that coalescing time based on stack traces gives a much better idea of what's happening.
If you're good at maths but are a complete beginner otherwise with respect to computer science, I'd suggest going on some university's website (Stanford/MIT or perhaps a less-demanding university depending on your background) and looking up the modules that they teach in the first year. In the case of MIT, as it's already been mentioned, they'll have lecture videos to accompany those. Depending on your dedication you can probably find these modules already taught on coursera/edx complete with coursework and discussion forums and just start learning there. If you simply want to mess around with programming languages, codeacademy, aforementioned learnpythonthehardway is also good, there are beginner programming MOOCs for most popular languages. Also, consider r/learnprogramming
Having recently written some UTF-8/16/BOM detection routines - was in a similar place learning about Py 2/3 variations with strong/byte array/etc.
the PEP 557 is great, but I dislike declaration. In my heard, I think meta class is better.
Thanks for sharing!
I'd argue Vagrant is still a better fit for development. You can easily deploy to lxc (or docker if you must) -- no need for a VM (although, actually having a VM also has it's advantages, for example if you also target Mac OS X or other non-linux platforms), and unless you only deploy to docker containers, having a 'proper' provisioner like Ansible makes it much more likely to be able to re-use your project-setup-configuration later on (which can amount to quite a bit of work themselves nowadays). You can use Ansible to create Docker images now, but I haven't seen many people do that (yet, anyway). I really dislike the Dockerfile format. Not only do you lock yourself into Docker (or is this a 'cross-container-platform' format now? -- haven't been paying attention really), but it's also not very powerful, everything remotely non-trivial is a huge pain to setup, and ends up in wonky bash scripts and the like. But that's probably just me. And then there is the 'no-init' system thing, which is counter-productive if you end up deploying to a platform that is not Docker in the end. I much prefer lxc, getting a 'proper' OS environment, and the 'lightness' of a container. Again, probably just me. Either way, I agree that even using Docker is better than not 'containing' your development environment.
output: - libqt5designer5 - Qt 5 designer module - libqt5designercomponents5 - Qt 5 Designer components module - libqt5scintilla2-designer - Qt5 Designer plugin for QScintilla 2 - libqt5scintilla2-designer-dbg - Qt5 Designer plugin for QScintilla 2 (debug) - libqxt-designer0 - LibQxt extensions to Qt Designer - openrpt - graphical SQL report writer, designer and rendering engine If I do: sudo apt-get install libqt5designer5 It says: libqt5designer5 is already the newest version (5.5.1-3build1). 
[Automate the Boring Stuff with Python](https://automatetheboringstuff.com/) is a good book (available freely online) for beginners to both Python and programming in general.
That means it is installed try this one: apt list --installed you can use grep here too, then try to run the program, if the command is not found, you can try whereis &lt;program&gt; or install Qscintilla 2 and the plugin listed above: pip3 install QScintilla
I like this solution. It's a good opportunity to learn a module that you'll end up using elsewhere anyway.
It's successfully installed. But how do I run it?( I hope I ain't asking for too much)
If you're going to be generating character sheets, I'd recommend looking into PyQt. In your shoes, I'd have your backend create an SVG file with all the elements populated where they should be. Then use Qt to go from SVG to PDF. Something like this: http://www.qtforum.org/article/518628/outputting-svg-as-pdf-with-qt-qsvgrenderer-qpainter-qprinter.html
You can use it to create caches and things -- values that persist inside the scope of the function, between function calls. It's actually very useful. It's just a bit counter-intuitive.
Never mind. I found the solution. I was trying to run it by typing "qtdesigner" instead of just typing "designer". But when I tried to type "designer" in the terminal, I had an error: designer: could not exec '/usr/lib/x86_64-linux-gnu/qt4/bin/designer': No such file or directory After googling, I found the following solution: sudo ln -s /usr/lib/x86_64-linux-gnu/qtchooser/qt5.conf /usr/lib/x86_64-linux-gnu/qtchooser/default.conf It fixed the problem. Now when I type "designer", it works. Thank you very much for your help. 
I'm glad you were able to resolve the issue yourself, that way you probably learned more then if someone just tells you what to do.
You probably want to use the [datetime module](https://docs.python.org/3/library/datetime.html) For starters just enter the date and length as cmdline parameters(argparse would be useful) and print the results, but as you want to learn as much as possible, you can then extend that by building a gui for it. I recommend pyqt5 for that.
It's worth pointing out that, while there are plenty of GUI apps written in Python, GUI apps aren't a particularly large part of the python ecosystem. You'll generally find better tooling for GUIs with languages like C#, Java, and C++.
I just tried pyflame + flamegraph, it's amazing! Thanks a lot for the sharing! I'll add a section about it in the article.
I love this! Can you tell me more details about making the gif? I'm really interested in animating algorithm process.
1. Host it online and give them the link or 2. Use [one of the python web servers](https://wiki.python.org/moin/WebServers) to run a local instance and the [webbrowser module](https://docs.python.org/3/library/webbrowser.html) to point their browser to it. If you don't know that they have python installed you can bundle it with the program, for example using something like [pynsist](https://pypi.python.org/pypi/pynsist).
No 30 percent off the code is python, silly. :-)
Glade lets you make guis for python with a drag and drop editor
Bookmarking, very cool! Look foreword to having the time to look at your code.
I recommend starting with Python. Find a good tutorial. Python is good because you can immediately start seeing results, which is encouraging, and also helps you correct mistakes early. Few easy examples: print('Hello world!') This prints out *Hello world!*. x = 1 y = 2 print(x+y) This prints out 3. def square(x): return x*x This defines a function called `square`. Now if you write `square(4)` it will give you 16.
I stripped URLs from the tweets, which lead to its own problems. Sometimes he'd tweet "READ THIS:" and nothing more. His purpose in life is to share content, so maybe it wouldn't be a bad thing to carefully put them back in. My main fear was that he would treat and use them like words, which would give really strange results. I'd also love to find ways to improve the output even more!
Ultimately the onus is on the employer to prove to the UK Govt that they cannot find a skilled candidate in the EU to perform the role. 
I've used the GUI framework tools for wxPython (xrced) and PyQt (QtDesigner). Both tools give you a barebones GUI IDE to layout the GUI elements, define events and callback methods, and then generate boilerplate code for your Python to interface with the GUI. I find it a lot easier to get something working quickly than coding by hand. Also it's a great way to learn the frameworks because settings and options for each GUI object are exposed in the GUI interface for you to see and play with. 
Hi, May be you should see the [doc](https://github.com/neozhaoliang/pywonderland/wiki/Wilson's-Uniform-Spanning-Tree-Algorithm-Animation) first? and then if you have questions let me know. 
I think this Django document is a good place to start. I seems to cover a lot of what I've heard from Python programmers. Of course, this document is specific to the Django framework, not Python in general. [Edit] https://docs.djangoproject.com/en/1.11/misc/design-philosophies/
Agreed.. I prefer having the Python files, makes everything much easier.
Does this work with python 3?
I found the best solution is to download the installer from QT website and then add the path of the install folder to your system.
&gt; Does this work with python 3? Not yet. This is on the TODO list however.
What is wrong with p7zip (7za)? https://pypi.python.org/pypi/libarchive 
I'm trying to write a Python script that handles a failover strategy for my home automation server. I have multiple raspberrys and the goal is it to let them all communicate via json-rpc to monitor each other. If the one running my home automation server should fail, another one should take over. It is my first Python work and I hope that I will be able to finish it.
Still working through MITx: 6.00.1x Introduction to Computer Science and Programming Using Python on edX. Question 3 on problem set 1 was definitely tough -- I couldn't solve it on my own. Now I'm trying to understand the solution.
Glad to know this event exist so close to home.
It's a bit of a cop-out answer, but: &gt;&gt;&gt; import this The Zen of Python, by Tim Peters Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Special cases aren't special enough to break the rules. Although practicality beats purity. Errors should never pass silently. Unless explicitly silenced. In the face of ambiguity, refuse the temptation to guess. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. Now is better than never. Although never is often better than *right* now. If the implementation is hard to explain, it's a bad idea. If the implementation is easy to explain, it may be a good idea. Namespaces are one honking great idea -- let's do more of those!
First of all, this *really* needs to be in /r/learnpython But, consider the following example: import matplotlib.pylab as plt fig,ax = plt.subplots(1,1) ax.plot([],[],'-s',label='a') ax.plot([],[],'--*',label='b') ax.plot([],[],'-.o',label='c') ax.legend(loc='center',numpoints=1) ax.set_frame_on(False) ax.set_xticks([]) ax.set_yticks([]) fig.tight_layout() 
Haven't used this, but heard it works well for proxying your localhost to the internet https://ngrok.com
Do you have a ;tldw for that video? When people say _core values_ it's often corporate mumbo jumbo. 
"Precise"?
What do you mean it's broken? That's pretty vague. Also why does it need to be python if it's in the terminal? 
I have omitted SimpleNamespace from the reference due to it being pretty much just a wrapper around a dictionary. I feel it's more pythonic to just use a dictionary instead. SimpleNamespace have the same advantages and issues as using dictionary for data, except they won't work with any of the many functions in Python and third-party libraries that expect dictionaries. It pretty much just lets you use a dictionary with a dot-notation instead of the usual syntax and in this way I see no real advantage to it while being very confusing for people who are expecting proper object-like behavior (like the "type safety" of having an exception raised when trying to write to an non-existing attribute). I also feel typing is not exactly pythonic but that's definitely a personal opinion :D I'll add a quick reference to it in the project! https://github.com/tukkek/notablepython/blob/master/README.md#structured-data *attrs* seems pretty cool and concise. I'll add it to the final list of references though, since it's a third-party library https://github.com/tukkek/notablepython/blob/master/README.md#honorable-mentions
IDE != GUI library If you're asking for a drag&amp;drop GUI layout designer, there are plenty but all of them end up more trouble than they're worth. I've most likely tried them all. In the end, it's way easier to code it and maintain it by hand. Really. This is further simplified by using a nice GUI framework. I recommend Enaml (http://nucleic.github.io/enaml/docs/) which uses PyQt internally. Enaml is a declarative python-like language for laying out the UI. It's similar to the kivy language but the UI looks better and has a wider feature set (you can drop down to PyQt where necessary). Sadly the docs are rather out-of-date.
I purchased mine on Blackwells website for £33.99! [Blackwells](http://bookshop.blackwell.co.uk/bookshop/product/Test-Driven-Development-With-Python-by-Harry-J-W-Percival/9781491958704)
Open, save, new, quit (with are you sure), perhaps multiple items open at the same time with tabs. 
Just start with the basics: File: - new - open - save - close Edit: - cut - copy - paste - search Then you can add more features. If your intention is to write a programming editor you could also add: - run - stop
&gt; Broken By some image suitability Python is a the easiest way to do things 
Oh yea, I saw a PyData video about HDBSCAN and have been meaning to check it out . Thanks! 
Thanks man! :) 
Very Nice! Thanks for sharing. I love the try Django series!
Ordered my copy and I don't think I've ever been this excited to receive a book! I came across the first edition the other day and was disappointed that it did not directly cover Unit Testing and like most books published, some practices are out of date. As a fresh learner of Python, I wanted to learn with a TDD principle from the start. This should be the resource I need.
Just let me know when and where.
Is multiple tabs possible with Tkinter? or should I use some other GUI lib?
Neither of those things make sense. Broken by an image? Are you saying the output is bad, the compression/decompression is broken or is it erroring? Again it's super vague. Do you have an error? And if it's being used from the terminal it doesn't matter what language it's written in. Nobody has to know what ls, cd, mkdir etc are written in. It only matters if you're consuming the library inside your own code base.
Broken by some kernel signing things 
Check out [RRDtool](https://oss.oetiker.ch/rrdtool/index.en.html).
Thanks. I am unfamiliar with the time and date module but I have seen automate the boring stuff has a chapter on it. thanks 
Yes, using the `Notebook` widget. I teach how to write a text editor in chapter 6 of my book, found here: https://github.com/Dvlv/Tkinter-By-Example Feel free to use and copy any of it. There aren't tabs in it though. Tabs are covered in Chapters 3 and 7.
What's the sell of this? Why should I pay 99$ for this? Describing it as "High-performance and extensible web toolkit sitting on top of on Django and others." sounds like snake oil to me. 
Yeah, I'd assume so. Personally I don't use Tkinter as it's harder to develop for without a GUI designer, especially on bigger projects. It's a very good lib though. 
Wow, that's a hefty obligation. Thanks for the tip.
I thought it would be for constructing accurate timesheets, for work.
The detailed breakdown of how everything works is excellent. You include a lot of details that I think most people wouldn't. Well done!
that app actually sounds handy. Thought about publishing it somehow/where? windows/ubuntu app store? &gt; Use MurPy11211 to change or remove personal details from your pics before uploading them to Google Photos or Facebook or Instagram! Keep your shit private!
There's a lot of these sites around now. They vary in the type of challenge they pose, from competitive programming challenges (which are essentially useless in interview settings) to sites like CodeFights (incidentally my favourite platform), which claims to get example interview questions direct from some of the big tech employers. They can be useful to sharpen core skills, but I think some people spend too much time playing on them, and not enough actually applying for jobs.
There are a few mathematically oriented repos I know on github. I hope I could make this one the best and most inclusive :P
Wxformbuilder is great! But too bad it generates wx haha. I wouldn't have gotten by without it.
Very nice repo. Too bad you deleted the history though -- I always find it interesting to see how long people have been working on their stuff, both in terms of time and in terms of number of commits.
Don't worry about it, nobody's mad. Just a funny little observation. Edit: If you want to avoid confusion maybe throw a word like "debugging" in there.
I haven't used it much, but if you need something simple and quick, have a look at gooey: https://github.com/chriskiehl/Gooey
Can you give some reasons why you feel that way?
I posted the repo in last December, and there were about 200 commits when I deleted the history . That's because as the commits increase the history files also increase, and it took me too long time to clone the whole project to my office computer ... A public used computer that hardly can hold the folders untouched.
I'm one of the engineers and interviewers at Triplebyte. Any questions I can help with? FYI, in case there's any confusion, we're not an interview prep site. We offer a service to software engineers to get multiple job offers fast. It's mostly a very hands-on service: we provide personal, direct support in identifying promising companies for you, we use our connections with those companies to vouch for you so you can skip past resume and recruiter screens, and we help you negotiate with multiple companies at once. The online technical interview is just the tip of the iceberg to identify your strengths. See also: [another redditor describes their Triplebyte experience](https://np.reddit.com/r/nyancoins/comments/6wlcv7/meta_misadventures_of_coinaday_offer_accepted/) P.S. my background is as a full-stack Django developer, though Triplebyte is a Rails shop
If you want feedback, you might do well to take all feedback in stride. Instead of deriding or making excuses for criticism, perhaps accept it as wisdom from those more experienced. &gt;it wasnt a programming role, there is programming involved Then it's a programming role. If you don't want to admit it, then fine. But asking for feedback and throwing it back in the face of commenters is wholly childish. Nevermind.
That was my initial impression too, isn't Django *already* a toolkit? What does this framework offer on top of Django? 
I think OP is (understandably, but betraying naivete) confusing the semantics of &gt; **a** find function as saying: a function that finds something, but with a name not specified While it's technically a correct interpretation based on conventions of language, it is naive for OP to not attempt to match their code *as close as possible* to the written instructions. As the peanut gallery has expressed with their downvotes, the interviewee who does so will likely be favored.
&gt; ~2000% in my fitted parameters Is this not indicative of non-convergence?
You can keep the history on GitHub and just clone the most recent commit, make your new commits and push those back to GitHub. git clone --depth 1 git@github.com:neozhaoliang/pywonderland.git The above command clones only the most recent commit. This is called a "shallow" repo. GitHub allows pushing from shallow repos. This way the history is preserved but you don't need to download all of it. So everybody wins :) --- By the way I see that some forks exist on GitHub which have the more complete history. I suggest you do a full clone of one of those, add your new changes on top and then force push the whole thing so that you restore the history up till now and then in the future you use shallow clones. --- Furthermore, the reason your repo is growing so big is that you are putting images in the repo itself. I suggest you look into https://git-lfs.github.com/ or alternatively that you make an orphan branch of the repo that you use for images so that they are kept separate from the master branch at least.
Two small scripts I wrote: * [vimDDR](https://github.com/BlitzKraft/vimDDR) - A DDR like game for vim with a few modes. * [PocketMortysRecipes](https://github.com/BlitzKraft/PocketMortysRecipes) - Command line pocket mortys recipe calculator/visualizer. Not updated for a long time. Both of the above are written by me. Feel free to fork them and use them. A slightly bigger code base - [xkcd-dl](https://github.com/tasdikrahman/xkcd-dl). I am a contributor for this one.
Try /r/learnpython. Be sure to include the code you are using ([formated for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)) and the complete error you are getting. Also, include which version of python and what OS you are using. 
k
Mostly tongue in cheek jest given the sheer breadth of serialization formats. It is a running gag at work whenever a client wants &lt;insert new tech/framework/buzzword&gt; to Solve All The Problems to refer to it as 'another piece of shit &lt;thing&gt;' Mostly because it is usually true. Sure New Thing solves some problems, but inevitably it also introduces others. Then the cycle repeats. As usual the denizens of the subreddit only appreciate wry humor when directed at OP, any insults towards a tech stack get met with downvotes. Life goes on. As for my issues with YAML itself, I'm not going to belabor them as they are well documented elsewhere. Some minor, some major, most are of debatable merit. YMMV, IANAL, opinions expressed are mine and not those of my employer, blah blah blah. https://yipee.io/2017/04/5-most-annoying-yaml-issues-infographic/ https://docs.saltstack.com/en/latest/topics/troubleshooting/yaml_idiosyncrasies.html https://arp242.net/weblog/yaml_probably_not_so_great_after_all.html
JSON with tabs instead of curly braces.
Neat thread. Thanks, I'll give that a try. 
Don't copy paste code. Use one repository. Or in other words: just do normal programming instead of what you are describing :P
Very cool. It's maybe worth emphasizing just how relatively simple Wilson's algorithm is, if we "strip out" the accompanying graphical representation: if we represent a graph as an adjacency list implemented as a dictionary mapping each vertex to a list/tuple of its neighbors, then the following implements Wilson's algorithm to generate a random spanning tree (as a dictionary mapping each vertex to its parent, with a random root): import random def random_spanning_tree(graph): """Return uniform random spanning tree of undirected graph. """ root = random.choice(list(graph)) parent = {root: None} tree = set([root]) for vertex in graph: # Take random walk from a vertex to the tree. v = vertex while v not in tree: neighbor = random.choice(graph[v]) parent[v] = neighbor v = neighbor # Erase any loops in the random walk. v = vertex while v not in tree: tree.add(v) v = parent[v] return parent 
Get a job?
Yeah this is pretty much what I want. Something similar to the Windows Forms (I think their called) in Visual Studio.
Always ALWAYS include the full stack trace. It points to the exact place in your code where the problem is. 
&gt;selling a "framework toolkit" that is built on top of multiple open source frameworks, with no information as to its capabilities, and it only works on 2.7. HAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHAHA!
Do you have a tl;dr of that video? I don't think many are going to spend half an hour watching that, just to answer your question. Giving a resume of the Node values will make it less unlikely.
Tkinter has a Canvas widget that is basically a drawing surface. It has methods to draw lines and arcs. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I think you forgot to add a link.
Yeah your right I should have clarified, 'what algorithms could I have used to make this better' the person I responded to did very little more than talk about how bad my methods were &gt; Not thinking that the names of things is the mark of a very new programmer who hasn't worked on anything large. Not useful one bit, somewhat insulting actually &gt; Names are extremely important as systems grow in size and complexity. I never said they werent, but the name of the function in the class is never specifically defined, it just ask for a find function, also this was a solo coding challenge not something I was planning on contributing to a bigger project &gt; Also the ability to follow simple instructions that they were checking for you failed. If you were interviewing for a jr programmer role, which it looks like you were, you aren't being asked to design anything 99% of the time. Just implement things given a spec, which requires following instructions. The reason I said it's not a programming role is because it is more of the data science side of things(less engineering more analytics), also this comment again adds very little additional info. Could I have changed my class name to what was asked for in the assignment, yes, should I have made a return instead of a print statement, also yes, but those aren't really the damming issues IMO, really what I needed was to understand the nature of algorithms like tries, which is something I am now spending more time on. Those smaller details, while they are an issue are very simple fixes, where as not knowing basic search algorithms is a much larger problem. The comment above does nothing more than talk about how 'junior' they think I am based on like ten lines of code. Not super helpful imo 
Yeah I definitely should have looked around more, i plan on spending a lot more time with common algorithms
I might be wrong but what we are both looking for I don't think it exists. At least not to the same level of product as Visual Studio.
Thanks, man. Really appreciate it. :)
Glade used to work well for GTK-based guis.
You need to do something like this: my_var = 5 def some_function(): global my_var my_var += 5 print(my_var) # It should output 10 some_function()
Thank you so much. :)
Also it's worth noting that global variables should be avoided as much as possible. Often the better way is to pass a value and return its mutation then mutating a global variable. 
Every once in a while I will checkout another editor or IDE and I always come back to Sublime Text. 
I'm know about the Tkinter Canvas widget, but is it possible to zoom in on the drawing or place lables on it and most important if it can highlight the selected polygon. Anyway, ty for the reply. I'll post on the learnpython thread. Good day to you, sir!
I've been working on a script to help automate a process. But I'm stuck here (Novice Python user) Essentially I have 3 locations for a set of ids I'm getting from an API. I want the if statement at the bottom to check if the actual==null and then try another location. The script runs and completes, but for the 2 alternate locations I just get blank info. Any thoughts? def get_metrics(id): url = "redacted" querystring = {"obj_device": id, "location": "10269", "rdate": "Yesterday"} headers = { 'authorization': "Basic redacted", 'content-type': "application/xml", 'cache-control': "no-cache" } response = requests.request("POST", url, headers=headers, params=querystring, verify=False) report = response.text report = xmltodict.parse(report) name = report["Report"]["@SLA_Name"] goal = report["Report"]["Objective"][0]["Goal"] actual = report["Report"]["Objective"][0]["Actual"] return name, goal, actual def sql_insert(id, name, actual, goal, datet): if actual is None: actual = 'NULL' statement = redacted print(statement) cursor.execute(statement) cnxn.commit() pass server = redacted database = redacted username = redacted password = redacted cnxn = pyodbc.connect('DRIVER={ODBC Driver 13 for SQL Server};SERVER='+server+';DATABASE='+database+';UID='+username+';PWD='+ password) cursor = cnxn.cursor() ids = { redacted: "214853" #location 10529 redacted: "162567", redacted: "96043", redacted: "96049", redacted: "96053", redacted: "214465", # location 10529 redacted: "214467", # location 10529 redacted: "214469", # location 10529 redacted: "214485", # location 10529 redacted: "100295", redacted: "228525", redacted: "209047", redacted: "101623", redacted: "96039", redacted: "251441", redacted: "96059", redacted: "100255", redacted: "333261", # location 10921 } for uri in ids: id = ids[uri] name, goal, actual = get_metrics(id) date = datetime.date.today() print(id, name, actual, goal, date) sql_insert(id, name, actual, goal, date) if actual=='NULL': querystring = {"obj_device": id, "location": "10921", "rdate": "Yesterday"} elif actual=='NULL': querystring = {"obj_device": id, "location": "10529", "rdate": "Yesterday"} 
Every time I think I've figured out how to use git someone comes along and talks about some awesome feature that I've never heard about. Holy shit.
LOL I went to star your repo and found it already starred. Keep up the great work!!
I started programming with Sublime Text, because it was so widely recommended and "free". But it's never really wowed me, and I quickly moved on to Eclipse, and now PyCharm. What I want to ask is: could you share some reasons why you like it? And maybe a bit about the add-ons you use or your workflow with it? I'd like to use it, because it is small, lightweight and very extensible, but I can't seem to get over the hump.
I'm a fan of codefights
well I need to save separate repositories for each state as the code generates a data corpus unique to each state and each state needs to be available as its own repo. So it all forks from the boilerplate and gets edited from there.
Ya and D3 got the new name "Browser Killer" isn't it?
I wrote simple [notepad](https://github.com/krysros/tknp) based on Fredrik Lundh's [DarkRoom Remake](http://effbot.org/zone/vroom.htm). It may come in handy.
Why would you keep the output data in a repo? And the same repo as the code? And if you want to keep it in a repo, why not just a folder per state?
This title really needs some work. Edit: Here. Are you pondering "I know some python. I want to be a data scientist. Where do I begin?" Read this. (2min read)
Oh wow! No confusion, I figured that each platform fulfills a different purpose. And that's an incredibly great idea. I hope that my post didn't place any negative connotations on your work, I'm just insanely skeptical of many types of marketing campaigns. I don't have any questions at the moment regarding triple byte, but if I do in the future, is it Ok if I PM you? In fact your post is enough for me to create an account and noodle around.
Absolutely read the docs, the implementation is basically poetry. I mean packing structs isn't the easiest thing to read at the best of times, but this is great.
I can't speak for him, but my own preference to more simple editors is simple - I enjoy more barebones type IDEs. (I use pythons built in script editor and mostly notepad++) Pros of IDEs like Eclipse/codeblocks/visualstudios/etcetc - Makes things easier (at a cost). Cons - slow, clunky - contains things you don't need (aka distractions) - poor documentations/hard to pinpoint documentations - GUI options (I'm against these for a simple reason, they add abstraction to something that needs not be, it complicates future users from getting into the field*) *GUI options: It makes it harder to teach new people, because they now have to keep track of THREE FUCKING THINGS. The IDE, the code, and the GUI differences between their workstation, and their teachers/mentor/study guides workstation. My biggest issue is, when I write shit, unless it's something large, I don't want to deal with the fucking IDE issues that are going to prop up. Nothing but bad experiences with popular IDEs, save codeblocks, and I had bad experiences there as well, it was just easier to troubleshoot. When it's me and the file, there's no issue. Most times I can write once and run, but add in an IDE, it will take me easily 4-10 times as long, depending on the IDE, and the whole time I'll be saying "This stupid fucking piece of shit mother fucking IDE piece of shit...." Text is just easier, because with text, it's just you and your code, no bullshit that will fuck it up. 
I think it is a lovely idea for a first program, it's simple and it helps you solve a real world "problem". You usually see "enter your birth date" "enter your name" -&gt; "Hi Derp you are now 29 years old" your program is similar but is actually useful for you as well !
You're lacking a little on the details. But I assume you need something like this. https://github.com/lepture/flask-oauthlib/blob/master/example/google.py
Realized I could give a little more help, this album has all the stuff about what it is/does/why https://imgur.com/a/gGOmH
Excellent Work. Cool graphic for visualizing the new R&amp;M episode :)
First, this should be posted in [r/learnpython](https://www.reddit.com/r/learnpython), not here. Second, you need to explain yourself more clearly. As you've written your function definition, all three arguments MUST be provided. Since you mention checkboxes, it sounds like any of the three will get a **bool** passed to it. If that's true, then the simplest way is an **if** statement, and there's no obvious reason to even consider exception handling.
Sorry about that i didnt realize /r/learnpython was a thing. I will report this there. Thank you for the advice. Yes, i can assume that 1 checkbox may be check therefore 1 of the 3 will be passed in. I can also assume all three could be checked and therefore be passed in. What im looking for if the correct if statement or try statement to make this work. Basically each one will or will not perform a action based of if they are passed in. 
Let's assume the actions are independent of each other: def do(a, b, c): if a: print("a!") if b: print("b!") if c: print("c!") Now, let's assume they're in some way entangled ...: def do(a, b, c): if a and b and c: print("abc!") elif a and b: print("ab!") elif a and c: print("ac!") ... And so on.
I'm more likely to see emails than PMs -- mike at companydomain.
Hi! No not necessarily. Our London office is more SRE/Security focused type engineering roles, so that we have coverage in different timezones. I'm not entirely sure what the process is to get a work visa for London, but I know we've had people transfer over there because they wanted to work in London for a year or so. Take a look: https://www.yelp.com/careers/job-openings?keywords=&amp;team=engineering&amp;location=London%2C+UK If you're interested in any, send me a direct message and we can discuss!
&gt; My biggest issue is, when I write shit, unless it's something large That might be where we differ, I tend to write applications, multi-file, multi-directory software where the IDE comes in handy. (also code completion, because I'm still a relatively new programmer, seeing the available class methods is invaluable to me). And I've never been in a situation like: &gt;but add in an IDE, it will take me easily 4-10 times as long, depending on the IDE, and the whole time I'll be saying "This stupid fucking piece of shit mother fucking IDE piece of shit...." So I can't imagine what you're trying to do where you run into this. *shrug*
Use keyword arguments just like def do_action(**kwargs): if kwargs.get('NDC'): perform_action Do the same for remaining arguments.
Thanks for getting back to me! That's a pretty exciting proposition, and I really like the sound of the SE - Metrics role. *But*, I think I'm not quite qualified yet for any of those roles. Still working on my C++ and distributed systems competencies. RemindMe! 9 months "Please let me be fluent in C++ by now"
I will be messaging you on [**2018-06-13 19:51:32 UTC**](http://www.wolframalpha.com/input/?i=2018-06-13 19:51:32 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/6302cj/rpython_official_job_board/dmyoaoh) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/6302cj/rpython_official_job_board/dmyoaoh]%0A%0ARemindMe! 9 months ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! dmyobkq) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
You can get some pretty awesome code completion with sublime text with the anaconda (no relation to the anaconda python distro) plugin, that is arguably faster than what pycharm provides (at least in my ancient pc)
Thanks, just caught that
This is such a basic point that I was reading some Python material recently and was surprised to find a global variable because I forgot the language had them (and I've been using Python a _long_ time)
\_\_slots__ is great, but it confuses some people sometime when they use a library with it because you can't just add an attribute whenever you want.
&gt;So I can't imagine what you're trying to do where you run into this. shrug Too many buttons and things i can do, I start clicking things, and [before long...](https://www.youtube.com/watch?v=8d4RtvMQp10) I'm more productive with a blank page and a keyboard. It focuses me, takes me out of play mode.
Also look at the timedelta part of the datetime module. The python docs are pretty good to get started, and once you have specific issues it's easier to google for solutions
&gt;In the end, it's way easier to code it and maintain it by hand. Really. As a former Delphi developer, I have to strongly disagree. That's like building a car engine completely in your imagination. 
That folder is not intended for you, it's for scripts that are installed as components of modules that you install. For example, pip is a module, but it also has a wrapper script by the same name, `pip`, which will be installed in that directory. If you put something there and it is properly in your PATH, then it should be executable; if not, then you did something wrong. You'd need to tell us the exact details if you want to know why. But don't use that directory for your own stuff, it's for Python modules. 
I signed up for Hackerrank. Then looked at the problems and realized I had no desire to get pretend internet points for something I do at work.
Alright I won't put stuff there. So how could I do what I'm looking to Do? Just a regular script folder that I can access from anywhere?
Can't use SQLite?; sorry, not familiar with Heroku free tier.
Or put it all in an SQL database?
I found profoundly disrespectful the style of that page and the name.
Good. To me, the fact that people can arbitrarily add attributes to any data structure is a major design flaw. It's annoying that in Django, you can't ever know the exact shape of the `request` object without also knowing what every single middleware is doing.
&gt; What's the sell of this? Why should I pay 99$ for this? Describing it as "High-performance and extensible web toolkit sitting on top of on Django and others." sounds like snake oil to me. I guess its only fair that people seeking to use Django-hotsauce for commercial purpose are paying a small amount of money for it. I developed this software with my blood and tears and I'm terribly proud of the results so far. This is a unique opportunity for people who likes Django-hotsauce to show their support to this open source project while having the possibility to use Django-hotsauce in their commercial (WSGI) applications. 
I always found a tic-tac-toe first in console then in some sort of GUI was a great learning experiment Gives you: Input Output Text formatting Data structures Logic cases Extending it to a GUI can give you a taste of OOP if you think of it in the right way.
Add you custom script folder to your path variable. On mobile, but a quick Google should give you the answer
I put ~/bin or /usr/local/bin in my `PATH` for scripts used by myself alone. When it comes time to make the installation/upgrade repeatable for other users use the `entry_points` stanza in setup.py. https://chriswarrick.com/blog/2014/09/15/python-apps-the-right-way-entry_points-and-scripts/ 
http://python-packaging.readthedocs.io/en/latest/command-line-scripts.html This explains it very well, you can create a command line alias to a python script (pip uses this)
Speed of launching is probably the feature of SublimeText that I appreciate the most, but wouldn't list as a criteria when choosing an editor. ST3.0 is going to open even faster? That little thing probably keeps me on SublimeText over a full IDE until my project gets just way too large and complicated. Every time I open PyCharm those extra seconds immediately start to (irrationally) infuriate me.
Could you elaborate or provide an example? I’ve never heard of that. But it sounds amazing
&gt; . I developed this software with my blood and tears and I'm terribly proud of the results so far. Not to be a jerk, but we all do that. I'm not poopooing asking money for it, if I thought I did make some cash off my oss I would. I'm saying I don't know anything about this software other than it uses Django. 
I hadn't heard about __slots__ before, but after reading this I feel it should be the default way classes handle attributes... I will certainly apply this to my projects from now on! 
For a beginner looking for an advanced text editor: should I use Notepad++ or Sublime?
Use vim with a few plugins. The learning curve is steeper but well worth it down the road. People will think you are a magician.
I used to be anti-IDE, until pycharm. It's so damn good.
You have seen the light
Is this in some sort of way related to blogging?
Definitely not Notepad++. Pick Sublime, if you will only pick between the two. PyCharm will make you most productive though.
$80... yeah, no thanks. I'll stick with PyCharm, Atom and vim.
This looks to be poorly documented. Looks like spam.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
No it's a high level overview of Python's logger module that I saw and thought looked useful.
Thanks! I'll. There are a lot of fun things I want to implement, the only problem is more advanced topic will take more time to finish it
You could probably write a metaclass that applies slots by default.
Try Visual Studio Code. You won't be disappointed.
[For Hire] (Remote) Full Stack Web Developer I'm only a high school student, but I'm just looking for something to keep me occupied. I'm not looking for anything paying, though that would be nice. I could do more than just web development, though that is what I am most comfortable with. Please keep in mind that I have homework that will be my priority. I have experience with the following things: - Flask - Rethink DB + JSON - HTML + little bit of JS - Linux - Git - Nginx (as a web server and as a proxy)
wow, great! Learned a new lesson. I'll do it.
You can read the [doc](https://github.com/neozhaoliang/pywonderland/wiki/Wilson's-Uniform-Spanning-Tree-Algorithm-Animation) first, and if you want to know more on this, post your questions here!
So many suggestions! I'm currently working through Automate The Boring Stuff. 
I think I'll move to PyCharm after I finish the Automate The Boring Stuff tutorials. 
That's it. The loops are erased "implicitly" here, that is, each time a loop is created, it's immediately erased by the assignment `parent[v]=neighbor` because this assignment overwrite previous walks. To make an animation that display this explicitly one has to take more direct ways
Never heard of it. Will check it out. 
They strongly discourage it &gt; SQLite runs in memory, and backs up its data store in files on disk. While this strategy works well for development, Heroku’s Cedar stack has an ephemeral filesystem. You can write to it, and you can read from it, but the contents will be cleared periodically. **If you were to use SQLite on Heroku, you would lose your entire database at least once every 24 hours.**
I think for some, if not most libraries, it is useful to not have \_\_slots__ because then it allows people to add attributes dynamically to objects, which can be very useful. But for almost all networking libraries I find \_\_slots__ almost necessary. I use it for memory savings instead of disallowing dynamic attributes onto objects. 
&gt; Use Multiple Selections to rename variables quickly Why don't more IDEs have this? Matlab's M-file editor has done this for a while and it's one feature I miss most often.
Oh god no. I'd consider myself amateur at best and its probably super hacky and janky. I might make the repo public one day but it really wasnt designed for other people to use it. I'm scanning all of my familys old photos (10,000 or so) and using this program to give them a rough capture date, location and other interesting tags before uploading them to googly photos.
It's not output data. It's adjustments to the boilerplate that are unique to the state. 
Forecasting the stock market with time series techniques and expecting to make money is a bad idea
Finally. I've been waiting 6 years since I started using ST2z
the package might be installed, but if the package doesn't contain any modules, then you can't import them, is the `setup.py` setup correctly? does the module name differ from the package name?
&gt; 👭👫👬 Django Girls community grew to 1069 volunteers who have organised 377 free workshops with 102 more being currently planned. That's more than 3000 hours of happy coding! &gt; 👩‍💻 21% of participants in our survey started working in tech after attending Django Girls workshop. 👉 &gt; 💯 In the last 2 years we improved our tools to support the growth of the organisation, maintended our free online resources (our tutorial is now in 14 languages!), started Django Girls Store as a fundraising effort, shipped 146 organizer kits and more. 👉 &gt; 📈🎉 In July 2017, on our 3rd birthday, we also celebrated our 10,000th workshop attendee 👉 &gt; 🎓 We learned that 79% of Django Girls alumnis are still learning programming after the workshop. 👉 &gt; 📚 693,524 people used our free online tutorial in the last year Congratulations to everyone involved!
All right guys, I finally worked it out. I add two files, one named sift.exe and the other named vl.dll, and then compile sift, this time it worked. But still, that is not the sift in OpenCV. http://blog.csdn.net/zhuxiaoyang2000/article/details/53930610
Can I blog as well?
prefer VSC or Vim
But what does it *do* that Django doesn't? That's the question here. I've tried looking for a feature set or an explanation as to why you'd use it on top of the Django framework but I haven't found anything (although maybe I'm looking in the wrong place) 
glad someone shares my sentiment. I'm not crazy...yet...
Me, but textmate. All the time, I’m actively looking for something better whilst feeling like a Mac app
Alternatively for maze generation `python3 -c "while 1: print(chr(int(9585.5 + __import__('random').random())), end='')"`
all the pycharm shills on this post
That's amazing! Can you give more explanations?
Sure I guess? It's not my blog.
Meh. VS Code stole my heart
Lol this fucking subreddit downvoting the noob because she wants to use pycharm and not sublime.
Why not just a find-replace? 
I refuse to use anything but VSC now. ST was great, but he just can't match the resources that MS lots into VSC.
Atom? Do yourself a favor and try VSC.
I like to code with a text editor and a command prompt for small things. But for big projects where the code is not just python but yaml json markup then I use pycharm. Because I can code and still use the command prompt from within the ide without worrying about the weird errors. Plus an ide points out errors sometimes that I would never have seen.
Visual studio code Atom.io Are my go to editors I always found sublime hard to remember how to do things like package installs and it's a bit less pretty as well. I like it more than notepad++ though 
Why do you need to keep track of units for all the (possibly expensive) computations? Is it a matter of scaling? I have developed trajectory optimization algorithms where we kept track of unit scaling separately. The math was done on plain numpy arrays. The equations were generated using Sympy and converted into functions capable of operating on numpy arrays.
Well then. Stop calling it boilerplate and using that word to justify copy paste coding. One repo. One code base. 
I like visual code a lot, but I was creating a website and wanted a live preview like dream weaver and visual code wasn't as nice as Brackets and I actually enjoy that one quite a bit and now I'm trying to figure out which I like best
You VIM people make me cringe! /s
Units should be kept track of outside of executable numerical code, such as in comments. Performing unit checks while doing actually calculation is a waste of cycles and energy.
It doesn't really matter. You can do a fine job using microsoft word (well, you **can** but please don't). All that matters is the code, and keeping those functions short
Visual Studio Code is certainly neither slow nor clunky. Git integration is absolutely brilliant. The only thing Sublime has above it now is super handy shortcuts. Sublime is faster but not by enough to bother me.
Sublime now has the package installer as part of the menu.
&gt; I use it for memory savings instead of disallowing dynamic attributes onto objects `__slots__` is designed to save memory, not to prevent dynamically adding attributes onto objects.
Because it'll match substrings. If you check 'whole word' it won't find the variable if it's against any operator like =+, etc. When the IDE knows the variable it makes refactoring scratch code faster.
I was trying to write a C# app to backup emails. Came across this while looking into a way for it to be done on Python (my coworkers prefer it, and the .NET libs are poorly documented).
That's what I did (still do, actually) until discovering those packages. It's very effective, especially with good documentation and PyCharm looking over your shoulder, but you still had to stay vigilant.
ironpython in visual studio can do that. But its ironpython, not cpython
That's what I did (still do, actually) until discovering those packages. It's very effective, especially with good documentation and PyCharm looking over your shoulder, but you still need to stay vigilant. It's convenient to use your normal units instead of needing to convert everything to the same base. For example, you might have the radius of something in cm, pressure in atmospheres, windspeed in knots etc. Sure, you can convert them to m, kg/m/s^2 (aka N/m^2 or Pa), and m/s, respectively, but defining them with units makes it seamless. Obviously, if I'm doing something that would take a long time, I would get as close to the metal as possible, defining types and maybe throwing in Cython or numba etc. But most of these are one-offs with no tight loops that finish in minutes at worst, so I consider the tradeoff acceptable.
As someone writing Haskell for a living, I find this rather cringeworthy.
Let me think .... may be I can remove the dependency on `struct.pack`, but for short integers you need to use the `little-endian` format, `struct.pack` is the most easy way I could imagine.
Surely there's an extension to provide what you want?
PyCharm user here too. It makes project workflow (for big programs) so much easier to handle. I stick to IDLE for small code snippets though.
Try out [`arrow`](https://pypi.python.org/pypi/arrow) for a nicer interface to dates. 
No, it's fine, and the right tool for the job, it's just that **struct.pack** itself is somewhat anti-Pythonic, until you grok that it's really just a fancy string formatting call.
Start off with a few nice modules: - [arrow](https://pypi.python.org/pypi/arrow) for handling dates - [Prompt](http://python-prompt-toolkit.readthedocs.io/en/stable/) for input (or similar lib) From there its just the normal skeleton and getting started with the math. from __future__ import unicode_literals, print_function, absolute_import # if using py2 import arrow from prompt_utility import prompt # This will be true when you do `python script.py` if __name__ == '__main__': run() def run(): how_long=prompt("How many days? ") # you can add validation too now = arrow.now() the_future = arrow.replace(days=int(how_long)) print("in %s days, it will be %s" % (how_long, the_future, ) After this its just writing the actual program :D
I would say, use SI units for computation, Pint for display.
Per the author: `If you show this forecast to any serious trader/investor, they’d quickly shrug it off as a terrible forecast.` Mainly because of the wide difference between confidence bands and also not predicting dips and peaks much IMO. He'll be looking into making it more useful. I'm looking forward to seeing what he writes next.
Hah! Love it. It's just printing the Unicode character at code point 9585 (╱) or 9586 (╲) over and over; where two happen to fall the same you get a tunnel, otherwise an intersection. Of course this wouldn't lead to any given maze having an actual solution, or even a single one.
Now if we could just actually enforce types on the slots...
Very interesting in a lot of ways. Didn't know about pre-commit. Now I suppose I'm addicted to both: your nice decorators and this new pre-commit to my own projects. Nice work, dude.
Atom was resource heavy for me and I have an older station at work :/ anyone else can relate?
I had high hopes for atom but it's slow and it locks files 
The [original article](https://whatisjasongoldstein.com/writing/im-too-stupid-for-asyncio/) and [submission to this sub](https://www.reddit.com/r/Python/comments/6xxy2q/im_too_stupid_for_asyncio_xpost_from_hackernews/)
Any idea how many clsss attributes are required for the normal dictionary based class to have faster access time?
tutorial
[removed]
[removed]
[removed]
What does mean "useful"? It is little a bit ambiguous. Algorithms? String processing? Automation? or examples for Python builtin functions?
tutorial
Yep! The original code that I cloned is actually famous BASIC code for the Commodore64 `10 PRINT CHR$ (205.5 + RND (1)); : GOTO 10` The commodore64 used an ascii extended encoding called PETSCII and those Unicode characters happen to map to PETSCII's 205 and 206.
check out codegolf on stack overflow -[link](https://codegolf.stackexchange.com/search?q=python). searching for gists on github sounds like a weird way of going about it if you don't actually know the language well enough to understand what's going on edit: forgot about python cookbook - you should buy that if you want well written code that is explained and solves real world problems 
"(program) is slowing Visual Studios down." also fuck signing in to code - you realize it's solely to sell your info, right? That's why they push Microsoft account so hard, with things like "You can't fully enjoy x feature until you sign in to your Msoft account."
Exactly
* Easy multi-line editing * Simple, fast yet powerful search &amp; replace * Run python scripts inside the editor with cmd-b I use PyCharm at work, and ST2 at home and for fast editing. All I really need to reach max productivity is ST + goto definition. 
Great to know! Thanks for positive feedback. I'm working for while to write better documentation and sphinx generation on readthedocs.org. And since December was added support for Python2 too, but I didn't realize a new version and neither update the README.md -- I just forgot :v, so I'm doing that now. Pre-commit can be very useful to catch non-intentional bugs to commits just by running testes before commit or things like linting and leading spaces. Actually all this is implemented as git hooks and you can do that by own, but the way you setup using pre-commit is much more sane (git hooks in general need to be created using bash-script hacking). 
Why is that?
You mean machine learning stuff? Pretty much all of it is implemented in C, or maybe Fortran. Python is just used as a glue language because it's easy to bind to C libraries and because it has a nice ecosystem for math/data analysis already with NumPy and friends.
Will try it out. 
Ahh, the C64. Font of all knowledge.
I'd suggest looking at the [Reddit Comments Dataset](https://bigquery.cloud.google.com/table/fh-bigquery:reddit_comments.2017_08?pli=1&amp;tab=schema), with a simple SQL command you can get the comments from any sub and then filter it by user. It's not real time, but it's released every month and parsing already collected data is much faster than PRAW scraping. That way you can build up your data then stream it as it becomes available.
That is an awesome suggestion, will look into it!
[removed]
manlike
Python is used for AI because it's pretty easy to understand, and has been popular in data for a long time. A lot of the best data science libraries over the years have been targeted towards Python users
Yes, but this _is_ the side effect, because using `__slots__` means not using the dictionary approach that allows the dynamic allocation of attributes by default. There are workarounds of course.
There was one called live preview iirc, but it wasn't as nice still. Brackets highlights was tag you're working and literally changes while you work, you still have to refresh browser with the V code. That was only one I messed with though I need to install others and see if they have that highlight feature
[removed]
Did you check [python standard library](https://github.com/python/cpython/tree/master/Lib)? It has [tests](https://github.com/python/cpython/tree/master/Lib/test) and lots of examples in [document](https://docs.python.org/3/library/index.html).
It's tricky to define "large-scale" without running the risk of wading in too deep, or being unable to finish it. Here are just a couple of ideas: 1. RPN calculator 1. Planetary N body simulator (this might be a little too big) 1. An FFT tool for simple analysis of audio 
Same for me. Package management is so much easier. It's just a much more polished product. 
I think asyncio-style coroutines are often the way to go when writing maintainable concurrent code. That said, I think the comment in the article being responded to about "I have no idea why this is a context manager" is somewhat valid. A lot of asyncio libraries tend to require a lot of asyncio idioms when it is not so obvious why this should be the case. The problem there, though, is not so much that the libraries do this, but that they often don't clearly document *why* they do this (aiohttp comes to mind as a library with otherwise great documentation). OP's article does a good job of explaining the why, but I wish more libraries built on asyncio would do so as well.
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
[removed]
Reported for spam. Sorry, but this is not OK in any way.
This. ^^
He's talking about Visual Studio Code, not Visual Studio.
And he's doing it to other conversations, too.
You could try using more parameters than just the period frequency and duration. I think body temperature rises 1 or 2 days before ovulation.