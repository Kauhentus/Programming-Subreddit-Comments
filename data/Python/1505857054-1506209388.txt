Great work man. Wish I had found those a few months ago while I was getting my head around them.
This time it is int() not str(), so slightly less idiotic of a question. But still int('9.4') throwing an exception is hardly an obscure case of anything...
Ah. Oops. Sorry, OP. 
Someone with a grandiose sense of self and their own opinions, incapable of assuming the point of view of other people and incapable of feeling empathy describes a sociopath and that user pretty well.
I've started experimenting with OpenAI and reinforcement learning. I've been working on a box2d environment where the task is to land a SpaceX rocket. [This](https://gfycat.com/ClutteredGratefulConey) is the status from last week. I've since made it a [bit more detailed](https://i.imgur.com/d5t9Bsm.png?1) and added some thrusters to the sides. Now somehow the reinforcement learning part has stopped working and doesn't converge anymore. This stuff is complicated and I've no idea how to fix it. Just changing different values at the moment to see what works...
That's why there's down votes. The user is claiming python is hard to read as a *fact*. He refuses it's a matter of opinion. 
I have some games I want to automate, mainly mobile games I play on an emulator. I'm pretty new to python, can you go a little more in depth or do you only use keyboard / mouse modules for this?
Talk to the binary tree, make friends with it. There's nothing wrong with having a binary tree as a friend.
me_irl: https://i.redd.it/df7au0vxyumz.png
easy to implement using quantopian. building it yourself using i.e the ziplone package is alittle harder. but frankly that hard part isnt coding, its developing a strategy
/r/algotrading/ 
My Software Engineering class has me working with Python, Flask, and Bootstrap. It's amazing, I'm in love, I'm naming my kids Python and Flask.
Sometimes I think no one on reddit has been in a relationship and imagine that couples have some sort of amoeba fusion when they get together :D 
/r/cpp gets "I'm falling behind and don't understand." 2 weeks into the semester. It's amazing.
**Here's a sneak peek of /r/cpp using the [top posts](https://np.reddit.com/r/cpp/top/?sort=top&amp;t=year) of the year!** \#1: [C++17 is formally approved](https://herbsutter.com/2017/09/06/c17-is-formally-approved/) | [95 comments](https://np.reddit.com/r/cpp/comments/6yjerb/c17_is_formally_approved/) \#2: [g++7 is C++17 complete!](https://gcc.gnu.org/projects/cxx-status.html#cxx1z) | [31 comments](https://np.reddit.com/r/cpp/comments/5nee0r/g7_is_c17_complete/) \#3: [C++11/14/17: A cheat sheet of modern C++ language and library features](https://github.com/AnthonyCalandra/modern-cpp-features) | [12 comments](https://np.reddit.com/r/cpp/comments/5cg6yi/c111417_a_cheat_sheet_of_modern_c_language_and/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
I just aim for the easy stuff to automate on desktop. Things I can macro. https://github.com/jtara1/MiscScripts/blob/master/tol_macros.py#L8 I think keyboard has a record macro function. So a series of keyboard and mouse inputs you send should be recorded and able to be played back. Beyond macros or scripting, you could try researching uses of OCR, image in image searching (static / const textures). I haven't found a single module that has sold me on these features. [sikulix2](https://github.com/RaiMan/SikuliX2) has too many pre-reqs and other fussy things. `pytesseract` is pretty good OCR but sometimes low accuracy. openai did something to make OCR better for games, but idk if that's usable.
I make tiny notifications with `request`, `parsel` and `notify-send`/`email` for various events and happenings: cryptocurrency changes, dota2 matches coming up of teams I follow, new questions on stackoverflow, changing wallpaper from wallhaven.cc to something fresher. Really any infomartion that I would need to pull from the web more than once in a day goes to a python script with cron and notify-send :) Also pushbullet and similar services are great if you want some crossplatform notifications.
What helped me to understand decorators was to revisit the concept of mathematical composition and them related it back to Python. It's more nuanced than that but it was how I got started
That's…beautiful. Is the `inspect` necessary for it to work, or is that part of that specific decorator? Does it only work if all of your arguments are keyword arguments?
I got back into python (I say back into, but I'd classify myself as VERY beginner level) in order to mess around with the Discord API and create bots to help out around a Discord server I admin. Well, I'm already neck-deep haha. I'm reading tons, learning tons, and just now getting set up with linters for my editor. I'm looking forward to having better management tools for my many syntax errors and small oversights!
Cool! Could you provide details on the compost pile monitoring? I would really like to get mine going in a technical way :). I am interested in using the temperatures to manage the pile. 
Push it and then make it better, don't worry about making it work or look good. I see so many posts on reddit that end in "sure I'll push it up for the world to see in just a minute, let me just polish this one thing...", and I see that you haven't pushed it in the 21 hours since you posted that which means you likely never will, and that would be sad
That's not really an obscure case ... Any conversion function will need valid input. `int('banana')` makes no sense and therefore raises an error, and the same is true for `int('9.4')`. There are some common pitfalls, and lots of people have made lists of them. Try googling 'python gotchas'. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I wrote a script that logs into my hydro (electrical) account and scrape the last days worth of time of use billing. It then generates some nice charts and emails them to me and my wife. We have dropped our usage by about 30% by simply being aware of our habits (and me nagging a lot!) and what we were doing the previous day.
Yeah, it makes no sense to me. Concepts like recursion (or, God forbid, monads and applicative functors) seem far more difficult to understand than decorators. Decorators are just functions that wrap functions.
/r/ofcoursethatsathing
Not sure if this is what you want, but you can just loop over the paths of the files and read from them… In [1]: !for i in {1,2,3}; do echo "this is file $s" &gt;| "file$s.txt"; done In [2]: def load(*paths): ...: for path in paths: ...: with open(path, mode='r') as f: ...: yield f.read() ...: In [3]: data1, data2, data3 = load('file1.txt', 'file2.txt', 'file3.txt') In [4]: data1 Out[4]: 'this is file 1\n' If you can give more details about what you’re trying to do you might get a better answer.
With no idea what kind of file, or what you will do with the file contents, there is'nt a whole lot to say; follow the advise here once for each file: https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
It's just antisocial behavior. Sociopaths usually have some level of an aim in their disorganized behavior that we wouldn't really understand. I'm not saying that one would play into their behavior easily, but all I am saying is that I don't think someone with that type of extreme mental illness would be bothered on Reddit commenting. He's a narcissist at best. I wouldn't adorn a moron like that with the moniker of a sociopath. It's a compliment to shitheads like him. He doesn't even know the game yet.
If you think that the definition of a sociopath requires that they have some sinister objective or manifesto, I implore you to research the definition yourself. 
A sociopath is far more determined in most cases, and it requires a whole host of things to coincide in order to make that kind of determination about someone. Most people who appear sociopathic are just narcissists. Sociopaths often don't fear death, or anything. They often only have weak bonds to a few people or no one. They are often loners for that reason. I don't think you'll find that trait in many people and this guy seems to especially fear a blow to his ego. They are frequently extremely disorganized as well--too disorganized to do software development I'd say. Over half of those clinically diagnosed are in jail I believe--same with psychopathy. It's a criminal's disease. I doubt you'd find a sociopath with a career just trolling on Reddit. Their behavior is insanely deviant. This is banal at best. Or maybe I'm wrong and sociopaths are just your garden variety troll nowadays.
Can't believe this got downvoted, even once. Dude spent time to explain something he already understands, in the attempt at benefitting his fellow man. Fuck's wrong with you people.
Pretty cool, has practical uses like how to build app to find cheap airfares, create custom newsfeed, predict content viralness, etc - only free for 24 hours and need Packt account to download (free). Cheers
After reading the functional programming with Python PDF that was free a couple days ago on this subreddit it all clicked for me. 
So I want to write the files to a dataframe to preprocess them and upload them to sql. filedata = [] for filename in filenames: data = ftp.retrlines('NLST ' + filename,filedata.append) print(filedata) When I pull this back it's just a giant list of ALL the data with no rhyme or reason for breaking it down into a column dataframe
see above. Basically it's recursively looping through files in an ftp directory and I want to write them to a pandas dataframe somehow. I cannot write the files locally anywhere they have to remain in memory. I want to use a dataframe as I want to map them to a sql table after
Can't you just have a constant while True: loop going and if statements about the time then have it write if the time is one you want.
Really appreciate your videos!! Found them when I started learning, the class series helped me alot!
The first half of the chapter on Metaprogramming in "Python Cookbook" (3rd edition) by David Beazley and Brian K. Jones is about decorators, and starts with the simplest use cases before getting into more complex issues. https://www.safaribooksonline.com/library/view/python-cookbook-3rd/9781449357337/ch09.html
From what you've said, it doesn't make sense that the existing dataframes are not modified. What you're doing should work as you expected, which makes me think you are leaving out some detail. If you post a minimal example that demonstrates the problem then I would probably be able to tell what's going on.
Can you give an example of loading a single file into a `pandas.DataFrame`? If you can do that, you can surely append the other files’ data to the first data frame? In [1]: import pandas as pd In [2]: df = pd.DataFrame([[1,2,3],[4,5,6]]) In [3]: df.append([[7,8,9]]) Out[3]: 0 1 2 0 1 2 3 1 4 5 6 0 7 8 9 
give me your paypal acct info. Ill build one for you. You got a balance in there?
"Why PEP8 isn't really something you should emphasize" (paraphrasing) by Hettinger: https://www.youtube.com/watch?v=wf-BqAjZb8M 
Also every 2 min is way to often. It'll make him look stalkerish and force him to reveal his master plan.
Django is goddamned Skyrim 
&gt;a callable taking another callable as its only arg They can take other args. Here is one that only takes the function: def decorator(func): @wraps(func) def wrapper(*args, **kwargs): result = func(*args, **kwargs) return result return wrapper @decorator def func(): ... Here is one that takes other args/kwargs: def decorator_args(decorator_arguments): def inner_decorator(func): @wraps(func) def wrapper(*args, **kwargs): result = func(*args, **kwargs) return result return wrapper return inner_decorator @decorator_args(things, here) def func(): ...
This shot is getting too meta, I can't keep up.
I've used Inno Setup to build installers from conda environments. It works fine IMHO, the biggest problem being the shebang's for entry points aren't relative and so need to be modified post-install. There's also a variety of freezer modules, such as 'cx_Freeze' and 'PyInstaller` for different platforms. In general Windows is the only platform where this is a significant issue. On other platforms, you can built a virtual Python environment from scripting and install your application there. The main drawback of providing a full Python install is that's it results in 100+ MB of deadweight. This puts Python on the same level as Electron apps in being bloated. There's a lot of disquiet in the Pythonverse over the state of distutils. The people on the distutils mailing list know this, but there's a bit of a leadership vacuum on the issue. I think it would be great if more people took an interest in the subject. I already maintain other packages and would put myself in financial distress if I took on more. 
I think this topic is easier to learn if you're programming Haskell. Decorators wrap a function and return a function. This allows you to capture the function input arguments before they're applied, or capture the function output after it has been called. Heck, you can do anything with the function, so long as you return a function. I've done some wacky things with decorators like write a library that allows you to create functional-esque looking code only using decorators, and then I've done things that bind the function reference to a dictionary to create a lookup table of the functions that were decorated. They're useful, but it depends on how creative you can be with them (or if it helps readability / reduces bloat somehow).
I realized my lack of understanding is about something deeper with how python works. Here's an example using simple lists: a=[1,2] b=[3,4] l=[a,b] l[0]=l[0]*2 print(l[0]) print(a) This yields: [1,2,1,2] [1,2] What I would like would be a list-like structure that I can iterate through the items of, but which would modify the original items. From this example, even though l[0] was initialized with the same value as 'a', they are separate pointers. 
&gt; Additionally it is executed at parse time and not execution time which makes sense, but will definitely catch some people unawares. It's not executed at parse time, they are run at execution time of the enclosing function, or at import time for decorated functions defined at the module level.
X-Post referenced from [/r/programming](http://np.reddit.com/r/programming) by /u/_Philadelphian_ [Introducing GeoPySpark, a Python Binding of GeoTrellis](http://np.reddit.com/r/programming/comments/7178ov/introducing_geopyspark_a_python_binding_of/) ***** ^^I ^^am ^^a ^^bot. ^^I ^^delete ^^my ^^negative ^^comments. ^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher) ^^| ^^[FAQ](https://github.com/papernotes/Reddit-OriginalPostSearcher#faq)
 l[0]=l[0]*2 So this actually replaces `l[0]` with a new object equal to twice the old value. `l[0]` no longer contains `a`. With dataframes, if you modify them "in place": l[0].setindex('some_column') (or whatever, I forget what methods dataframes have), then `l[0]` will still be the same object. However if you make a new dataframe in some way: l[0] = pandas.concatenate([l[0], l[0]]) (again, don't know if that's a valid method), then `l[0]` will be a new object. Objects have identity, and when it matters you need to pay attention to whether an operation creates a new object or modifies an existing one. The name of an object or its position in a list is not its identity. Multiple names can be attached to the same object, and when they are, changing one of the names to point to a different object will not affect the other names that pointed to the previous object. You can inspect an objects identity with `id(obj)`. It will in CPython give you the memory address the actual object is stored at. You might need to do some background reading to get a good feel for it, and to do what you're doing you'll probably need to either ensure you're creating the objects in-place, or make your loop be over indices or something instead so that you have only one canonical copy of each dataframe and definitely know you're modifying the one place it's stored (whether that's creating a new object or not) and not accidentally modifying just some copy.
Not if it has args. If it has args it is at parse time (I'm like 99% sure of this but I'm not sitting in front of an interpreter).
Decorators: Define a function. Define a second function inside that function. Return the second function from the first function. The end. Edit: that's why they call it the old switcheroo 
Thanks for the encouragement. I'm a big proponent of the [Bazaar](http://www.unterstein.net/su/docs/CathBaz.pdf) style of development and the [plausible promise](http://www.catb.org/esr/writings/homesteading/cathedral-bazaar/ar01s10.html). That is: &gt;Your program doesn't have to work particularly well. It can be crude, buggy, incomplete, and poorly documented. What it must not fail to do is (a) run, and (b) convince potential co-developers that it can be evolved into something really neat in the foreseeable future. Trust me, I've actually been working hard on the code since I posted this and I have plans to make my first push by the weekend. I really do appreciate the feedback. 
Sociopaths make excellent doctors and business men, you're very wrong in believing sociopathy implies disorganization. Unless you want to cite a study about how many of those diagnosed with sociopathy have served jail time from a reputable source, that point is moot I'm afraid. Statistically I think your right, he's more likely a narcissist 
I have used and enjoyed Visual Studio Code and Atom. Each of them has reasonable Python and linter plugins.
Coreyschafer has the best python tuts on yt hands down
https://en.wikipedia.org/wiki/Machine_learning
**Machine learning** Machine learning is the subfield of computer science that, according to Arthur Samuel, gives "computers the ability to learn without being explicitly programmed." Samuel, an American pioneer in the field of computer gaming and artificial intelligence, coined the term "machine learning" in 1959 while at IBM. Evolved from the study of pattern recognition and computational learning theory in artificial intelligence, machine learning explores the study and construction of algorithms that can learn from and make predictions on data – such algorithms overcome following strictly static program instructions by making data-driven predictions or decisions, through building a model from sample inputs. Machine learning is employed in a range of computing tasks where designing and programming explicit algorithms with good performance is difficult or infeasible; example applications include email filtering, detection of network intruders or malicious insiders working towards a data breach, optical character recognition (OCR), learning to rank, and computer vision. Machine learning is closely related to (and often overlaps with) computational statistics, which also focuses on prediction-making through the use of computers. It has strong ties to mathematical optimization, which delivers methods, theory and application domains to the field. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.27
Obviously they're just a function which takes arbitrary arguments which wraps a function which takes a function as an argument which takes arbitrary arguments and returns arbitrary values, which returns a modified version of the function, which then has some syntactic sugar so as to wrap other functions more easily. Doy.
I have decided to go with atom...can u please name some of the plugins or packages I can get? 
Decorators are just syntactic sugar. Duh! You go to the grocery store and look in the baking isle.
&gt;Objects have identity, and when it matters you need to pay attention to whether an operation creates a new object or modifies an existing one. I understand that. So how do I implement a loop through a collection of lists (or dataframes), modifying those lists in-place instead of creating and modifying copies?
I mean thats kind of how python decorators work though.
Love your encouragement for OP! Great suggestions also. Also, bare in mind that you don't have to make some fully polished application right off the bat. Before you jump in to making GUIs and web pages, I think it's a really good idea to play around with and study the python data model (aka python object model, aka classes and functions and dictionaries), as they are really essential in developing proficiency with the language, and necessary for doing things in an object oriented way. So for example, if you decide to make a card game, first try to make a Card class. Then, make a Deck class that contains a set of Card objects, and provides methods for manipulating them. For example. Deck().draw('random') can draw a random card from the deck. Or Deck().draw('top') can draw from the top of the deck. Deck().shuffle() can randomly reorder the cards Then, once you have classes that nail down the mechanics of handling a card and a deck, you can make a Game class, which imposes rules over how you interact with the Deck and Card instances. A lot of simple games have been mentioned here, as well as simple data processing (like the image processing idea mentioned by Justinian482). However, any organized system could be represented as a program. I think you'll find that the joy of programming is largely in the process of solving a problem. Manipulating strings and spreadsheets and documents.... it all sounds quite boring really. But the abstraction of those tasks is the interesting part! 
Decorators are wrappers. The code in the decorator runs after the thing that it wraps. The parameters are wonky though. Something about a decorated function taking parameters from the decoration, not the original function call.
Not really though. It's just not a transparent concept. You gotta implement them yourself first, then use the syntax sugar. If you don't go through the steps you'll never understand.
It's where a script can go through the web/sites and collect any type of information that you want. 
It isn't really closures that are confusing with python, but the combination of by reference with certain immutable base types. Its always a bit of a question of this particular usage will close in the way I expect or not. 
I use decorators on occasion, but I don't really know how they work. As someone who programs in only Python, I find them one of the least 'Python-esque' parts of the language - up there with lambda (which I do understand).
Is it something like a web crawler?...and will that information be used to update my own website or what?..thanks :)
Nope. In Python, pretty much nothing happens at parse time. &gt;&gt;&gt; def some_decorator(arg): ... def w(f): ... return f ... return w ... &gt;&gt;&gt; def a(): ... @some_decorator(print('hello')) ... def some_function(): ... pass ... &gt;&gt;&gt; # contents of a() have been parsed and compiled, but no "hello" is printed yet &gt;&gt;&gt; a() hello
Done. Updated README with results. 
This splits the output into lines and builds up a list of dicts, one for each line. import subprocess import json output = subprocess.getoutput("ls -sC1 | grep -v total") flis = [] for line in output.split('\n'): fields = line.split() if len(fields): flis.append({"name":" ".join(fields[1:]), "size": int(fields[0])}) print(json.dumps(flis)) 
Here are some examples: I created a web scraper to start with a keyword (used google with a proxy - to not get banned) and the script/crawler would go through the search results and follow all links/urls and then grab email addresses. After about a day I had millions of email addresses. Another example...I created one to grab pictures from a particular site(s) and upload them to my site. A scraper can be used for whatever purpose you want. A web crawler usually doesn't scrape content, it just indexes urls or something like that. I hope this helps. 
A moot point is an arguable point but is otherwise not generally germane to the conversation--in this case ironically you're correct it is a moot point: http://www.antoniocasella.eu/archipsy/Black_aspd_2010.pdf I was off--it's about 35% of the prison population suffers from some form of ASPD. Only 3-5% of the general population has ASPD so it's safe to say it lands you in prison quite reliably. If I recall correctly psychopathy is the organized cousin of sociopathy--sociopathy is forged out of a bad life. Psychopathy is an intraspecies predation that's been going on forever. They are as different as they are alike.
Ok that's even weirder. The situation I encountered was the wrapped function at the top level (not within some other function). So the moment you `def` the wrapped function, the outermost part of the wrapper is called (with it's args). I call that parse time but clearly there is something between parse and execution... Honestly that just seems worse to me. Why the fuck should I care what happens between parsing and executing? But now I do. Ughhh.
True, and it’s always worth being as clear as possible when assignment or references are involved.
It seems to be a library to modify function signatures using decorators. modsign or signmod come to mind. Decorates does not capture the purpose at all... it only captures the method via which your library accomplishes its main task of "modifying the signature"
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
You would have to call methods on the objects that you know modify them in-place rather than make copies. This is up to the specific methods, and you'll have to read from their documentation to find out whether they create a new object or modify the existing one in-place. Some operations you might want to perform might be impossible to do without creating a new object. There are often two versions of methods, one which returns a copy and one which modifies in-place. For example for Python lists, `list.sort()` sorts in-place, whereas `new_list = sorted(list)` returns a new list and leaves the old one unchanged. For example: a = {'a': 1} b = {'b': 2} dicts = [a, b] for d in dicts: d['c'] = 3 print(a) prints {'a': 1, 'c': 3} Because adding an item to a dictionary modifies it in-place. If you have lists you're modifying, then appending to a list or modifying its elements, or calling .extend() on it are all in-place operations. Most operations on lists are in-place. But for example: some_list = some_list + [1, 2, 3] Creates a new list, and so any other names that some_list had prior to this will still point to the old one.
Either devise some heuristics yourself (ie, manually combine the sets you identified) or cluster the labels using a string metric (eg, edit or Levenshtein distance.)
R/restofthefuckingowl
If you ever need someone to work on a side project with, let me know. I never really "learned" python, just picked it up in school, internships, etc so it'd be nice to get more acquainted with the ins and outs of it.
I think that you need to more Python. - more testing frameworks. I think thar you are asking to some like py.test (https://docs.pytest.org/en/latest/) - BDD. You are searching something like Python Letucce. - You can have pytest with BDD. Something like http://pypi.python.org/pypi/pytest-bdd - Think more in Python! not in Groovy/Java "way of work". Not in a Groovy way to do the same things with Python.
For me, it's simple and kinda stupid - they don't look anything like the rest of python, and I can replicate the functionality fairly easily if I need it. My background is Python, I do a lot of Swift programming and have some experience (i.e., two projects and a "never using this in production again" experience) with Haskell, so the concepts of closures, first order functions and functions that modify other functions aren't scary - it's just the form of wrappers is so out of the blue compared to the regular "Python" experience that I never think to use them, and when I do, I'm always a bit hazy on the details. Additionally, it smacks of macros to me, which isn't a bad thing per se, but does make me a bit cautious. 
the python documentation is too verbose for the lazy people. there's nothing difficult about decorator, just a lot of people bad at explaining simple stuff.
&gt; The motivation for this sudden change is never really explained... it seems like someone wrote the original decorator spec, and then later realized that decorators with arguments had to be completely different... but couldn't go back and fix them. Well you could do this; @mydecorator() def myfunction(myvar): return myvar + 1 Now you have a function that accepts no arguments that returns a first order function, which is used to decorate ``myfunction``. You could do it, by why would you if the decorator is always the same and you can remove the outermost function layer?
&gt; I use decorators on occasion, but I don't really know how they work. Lol!!! Classic... 
http://www.artima.com/weblogs/viewpost.jsp?thread=240808 Seems fine to me? 
Only in a horrifying parallel universe where Python vs Jetbrains vs Ubuntu vs the goddamn Science journal can be considered competitors and visitor counts on their sites matter.
Helpful indeed! I was wondering where Django gets its decorators.
[removed]
No student wants to hear: "If you're having trouble with this concept, try learning Haskell first" That's a good way to encourage someone to give up. Also, decorators don't just take functions nor do they have to return functions. For example: `property` returns a descriptor.
"There should be one and only one obvious way to do something" If doing so saves you the cognitive load of relearning decorators the moment you have to introduce variable behavior to the decorator, that totally seems worthwhile to me. Ditch the non-argument taking decorator syntax and force us to write an extra `def` even when we don't really need it. (Bonus points for simplifying refactoring and adding args to decorators.)
What you call "between parse and execution" is just execution. The `import` statement is executed, and the result of it is the execution of the imported module statement by statement (including the execution of any nested imports). That's why, for instance, you can have `import`s inside functions, and that's why decorators used inside functions work exactly the same as they do at the top level of a module.
r/restofthefuckingowl
Like any religion's holy text the Zen of Python is frequently self contradictory, and anybody who takes it literally has transcended the plane between rationality and cult behavior. Simple is better than complex
I'd be down! I'll PM you when I have something in mind! Thanks!
the big one is default mutable arguments
One trick is to specify version parameter in `cPickle` if you dont have to support multiple (old) python versions. It's a lot faster in highest version.
Let me try to explain decorators. Let's start with a simple function: def printValue(x): print('value is', x) In Python, functions are first-class. That means they're objects and can be treated as such. In other words, you can do this: printX = printValue printX(123) And it would print "`value is 123`". printValue and printX are both references to a function object. This means you can write a function that returns a function. Remember that Python allows functions to be defined inside other functions. The result is the inner function is only defined within the outer function. Imagine you had a bunch of functions already written and you decided you wanted to add logging to each one to time how long they took. You could add the code to time how long the function runs to each individual function, but that's cumbersome and really difficult if the function has multiple places where it could return. One way to do this would be to create a function that "wraps" a function with logging times, then re-assigns the functions. It would look something like this: def timeFunction(func): def inner(*args, **kwargs): begin = time.time() returnValue = func(*args, **kwargs) executiontime = time.time() - begin print('Function call took', executionTime, 'seconds') return returnValue return inner def someFunction(): # .... do a bunch of stuff def someOtherFunction(): # .... do a bunch of other stuff someFunction = timeFunction(someFunction) someOtherFunction = timeFunction(someFunction) If you look closely at the last two lines there, you should be able to understand what's happening. 1. The timeFunction function is called with someFunction as a parameter. 2. An inner() function is defined within timeFunction. The body of that function takes note of the current time, calls the function that was passed to timeFunction, using the parameters passed to inner(), prints the execution time, then returns the value of the function. 3. That local function is returned. 4. someFunction is re-assigned to that inner function that was declared inside timeFunction on step 2. So now when someFunction is executed, it logs the start time, executes the function that someFunction *originally* referred to, prints the execution time, and returns the value. Now, here's where people start talking about syntactic sugar. Those two lines at the end of that code can be removed, and instead of re-assigning those functions, you just use timeFunction as a decorator: def timeFunction(func): def inner(*args, **kwargs): begin = time.time() returnValue = func(*args, **kwargs) executiontime = time.time() - begin print('Function call took', executionTime, 'seconds') return returnValue return inner @timeFunction def someFunction(): # .... do a bunch of stuff @timeFunction def someOtherFunction(): # .... do a bunch of other stuff The decorator there is syntactic sugar for someFunc = decoratorFunction(someFunc) being done after someFunc is defined. It gets a LITTLE more complex if your decorator function accepts parameters, but the idea is similar. Hopefully this makes sense.
i learned with a blog post by a guy names simeon franklin. dont know how to pqste the link on my phone tho. just google Simeon Franklin decorators.
For my project which need to support plugins I use yapsy. So far so good. You might also want to refresh a bit your knowledge on some design patterns, like for instance OOP. That is always useful to know.
Argument Clinic. It alludes to changing the signature of a function and also references a [sketch by Python’s namesake](https://www.youtube.com/watch?v=XNkjDuSVXiE).
3:7 is an unreliable ratio though. You can say it's more reliable than the average person perhaps, but not simply reliable. Anyways, I think we've picked this one pretty dry. Good talk.
Seems like its main "selling feature" is simplicity. May be I should go with something more advanced (and perhaps better supported)? As the project seems to become quite huge and complex, in the end.
Is there a transcript? I hate videos with the fiery passion of a thousand supernovas.
More like Riven tbh
Ok, here some my own thoughts about this part: &gt;This design also must be able to handle totally new functionality added to the base code through such addons correctly. So it's not only about reloading some existing functions. That could be probably achieved (to some extent) if some/any function(s) of the base code would have some kind of *hook* in them. So if somebody wants just to add several more steps to it, without overloading the whole function, he would just register his supplemental function in some way, tying it to this hook, and each time the base function is called, it will in the end also call the supplemental function. So the latter is sort of chained to the former, dynamically. Is it doable in Python? Is it a proper thing to do?
What about videos with less passion?
I love those, even though they're a bit boring.
Sorry, I don't believe there is a transcript. I believe I have the rough script that I used for that video, but without the context of what's on screen, it wouldn't make much sense. I'd like to start making a blog post to supplement each video, but I currently don't have the time to make that happen.
Depending on your background, you may not have been exposed to the idea of first-class functions, in which case there's a few dots that need to be connected before they can make sense.
 @deco def func(): pass All this means is: def func(): pass func = deco(func) Of course, writing a decorator is slightly more complicated since you need to write a function that both takes and returns functions, but it doesn't have to be too complicated. For instance: def actually_I_just_want_print(function_to_decorate): return print That's a decorator that replaces whatever it decorates with the print function (python 3. For 2, substitute your favourite function), so: @actually_I_just_want_print def complicated_function(): pass complicated_function("hello") # prints "hello" :D I suspect the owl step is creating a new function inside the decorator, because the syntax is just a bit more loopy, but it's not so bad: def force_uppercase(function_to_decorate): def decorated_function_to_return(): # define a function return function_to_decorate().upper() #use the original function return decorated_function_to_return # return the new function @force_uppercase def whoami(): return "Bob" whoami() # returns BOB
Love your tutorials! They've been a huge help since I started picking up python again :)
There is no "absolute best". What works for you might not work for others. Check the /r/learnpython wiki.
https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/ Is a nice article to start with. 
I just picked up Python Crash Course and grabbed a python course on edX to start learning. Try to spend at least an hour a night playing with it and using it or researching it daily. I'm making pretty good progress and understanding basically everything easily. I've been a .NET developer professional for 4 years though. That's definitely helped. 
Decorators are one of the most complex and least intuitive parts of python. The code is entirely different depending on whether the decorator takes args or not, and it quickly gets complicated when you need to handle optional args and class methods: https://gist.github.com/pirate/5720dcf862397ce335978c69ebb36820 Aside from argument handling, the execution order is a frequent gotcha for beginners, as you cant refer to self in decorators on class methods, because the decorator is executed at parse time not runtime. Yet you see them all over the place in larger projects (e.g. Django), so I can totally understand how someone would be confused by them initially (I certainly was).
Have you ever worked with decorators that take optional args, work on bound class methods, or mess with descriptors? [Not as simple](https://gist.github.com/pirate/5720dcf862397ce335978c69ebb36820) as you make it sound.
The intro concept is the simple part, the "draw the rest of the fucking owl" part is when you start having to handle optional parameters, bound class methods, and returning descriptors. https://gist.github.com/pirate/5720dcf862397ce335978c69ebb36820
Except in the data analysis area where Python reigns supreme...
There's a great presentation by Ned Batchelder: [Pragmatic Unicode, or, How do I stop the pain?](https://nedbatchelder.com/text/unipain.html). Also /r/learnpython is the right sub for questions.
Thanks.
I watched that just now. Great presentation.
Try bitcoin/ethereum/stellar trading... its fun and easy to transfer your gains around... Two would be poloniex.com and stellar.org distributed exchange. Lots of fun and for the moment the wild west.
I think that's because most of pandas ops are not in-place operations. Maybe for i in range(len(listofDfs)): listofDfs[i] = listofDfs[i].#DO STUFF# should work?
I just reflash silicon chips. /r/learnpython might have different suggestions though.
Which university is that? :(
I've found that anything from realpython.com is going to be great. One of my favorite resources.
I like doing the math-based problems on [Project Euler](https://projecteuler.net/) for practice and then seeing others' solutions. It's not great for the kinda coding you'd do for a project at a job or for learning theory, but it's helped me learn a few basic shortcuts and it's more fun/easier to jump into than a course or project.
Working on the final push towards the first beta release of my Serpent.AI game agent framework. It allows you to easily turn any video game into sandbox environment and assists you in writing AIs / bots in regular Python. It runs natively on Linux, Windows and macOS; No Docker containers and VNC servers involved. I've been working on this project for around 7 months; mostly part-time but full-time for the last couple of weeks. I've also streamed every line of code written on Twitch. Every major concept is in place and all that remains for me to call it a beta is copious amounts of documentation and tutorials. I've been polishing and writing all week :| I will make a proper post when the beta version is ready, so keep an eye out if that sounds interesting to you. [https://github.com/SerpentAI/SerpentAI](https://github.com/SerpentAI/SerpentAI)
I discovered your YouTube channel yesterday and it's a fantastic resource. I plan on making my way through all your content! Keep the videos coming!
Actually, I cannot thank you enough for that video of yours. You have explained the concept very clearly. Great video.
Thankyou.
Thanks. I'm familiar with py.test and and its extensions. I'm not looking to do Groovy/Java rather than Python, I'm looking to create a Pythonic DSL that will improve upon the existing frameworks.
In short, this is a very tall order and very large companies like google / Facebook cannot yet accomplish what you are describing. It doesn't really exist yet. Everything you are describing is in one form or another a part of machine learning. Facial recognition, natural language processing, and speech recognition. I would start with the Andrew Ng to start learning the basics. This will give you an idea of what is possible with the items you listed above. 
 import owl import restOfTheFuckingOwl
I have three 4x4x6 piles. They double as my chickens' main source of food. Each pile has an Arduino, a thermometer, and a button to indicate a reset. The Arduino reads the thermometer once every 30 minutes and sends that, via WLAN, to my server. On the server side I have a script that waits for the temperature reading to come in, once it does it reads it. There are a number of parameters which it alerts me to: * Temperature falls more than five degrees after staying at a consistent temperature for more than six hours * Temperature goes below 140 degrees * Temperature hits 140 degrees * Temperature never hits 140 degrees after 48 hours * Temperature hits 175 degrees * Temperature remains above 175 degrees for more than six hours * Temperature reaches 200 degrees * Once 200 degrees is reached it will alert me every time the temperature is taken and it remains above 200. 
If you thought decorators were bad, wait till you hear about [metaclasses](https://blog.ionelmc.ro/2015/02/09/understanding-python-metaclasses/)
Lightning Talk "Eschew the Extraneous Else" (by Larry Hastings) https://youtu.be/JVVMMULwR4s?t=4m51s
What about articles about metaclasses? ;)
That's normal. `.pyc` files don't have a shebang, so when you run it like that, it tries to run it as a shell script and fails horribly.
aw damn, it treats it like a comment and ignores it? So I can never run a .pyc without calling pyton first? thanks for the info, man
The problem is not it being treated like a comment, the problem is that `.pyc` files can't possibly have a shebang because they have a fixed structure. What are you trying to achieve with this whole setup?
I just want to put this into a systemd startup service, it's not a problem I was just wondering if it was a mistake of mine thanks again!
You can put `Exec=python path_to_your_script.py` in systemd units and it'll work just fine.
This is the best comment!
In his example above `some_function` is never executed, yet it's decorator is called. In fact anyone reading the code should think that the function `a` could just be replaced with `pass` with no change in program behavior. So saying: "it is just the execution of import" isn't remotely satisfactory to me because it not requires me to understand the entire import codebase.
[SWIG](http://www.swig.org/) can help, but don't expect to just feed it a C++ header and get an identical Python library.
Is this just London data or can it be adapted for the national network? I am really looking for an easy to work with API so that I can get messages sent to me if my train is going to be late so that if it is I can't just stay at home for a bit longer and message the boss to tell her I am going to be late. 
I've started getting into golfing with Python, so that's been interesting. I also made a friend of mine a custom matrix module (yes I know of numpy, but he challenged me to make it fit for him). If anyone wants the source of it, I'll edit this comment.
For most things taught in programming, the first stumbling blocks I run into are: "*what is the purpose of them?"... and ... "where would I want to use them?" ... and ... "why is this a useful feature?" Without that, I struggle to pull in the details of whatever it is. For example, I understand basically how to use decorators. I've used them in various frameworks where they are implemented. I still don't know why people use them. No tutorial has ever really explained that part. I basically use decorators because everybody uses decorators. 
I know how they work, and it all makes sense, but only after you learn two different ways to write decorators and internalize the theory behind both. Language theory isn't something that comes across in example code, so with a new concept like "decorators" you want either: 1. To explicitly explain in words the theory and base everything on that (which is not what you find in any tutorial out there, which are more example based). 2. Have a single clear "recipe" that everyone can follow in all cases. If that means that no argument decorators should be written as `@decor()` as a rule, despite the interpreter not caring, so be it.
thanks!
Unless you use them satirically, of course. #hashtag #thatsnumberwang
Kutztown University of Pennsylvania.
I've been learning for 5 weeks and I'm really enjoying it. It's never really far from my thoughts, and I too am neck deep in docs. Currently just pushing myself to see what I can do. This is my best to date: [File Analysis Self-Development](https://github.com/fiddybux/python/blob/master/file-analysis.py) Quite pleased considering 5 weeks ago I knew literally nothing! Anyone want to hire me? ʘ‿ʘ
Agreed! And of course you must decorate your inner function with @wraps so it can masquerade as the decorated function. That's where you seem to hit the `are_you_srs.wav`.
Creating a logging decorator or a profiling decorator is like 5-6 lines of Python code. There is no owl to draw
Pandas has Series.apply(func) which will let you perform a function on each individual element of a series. Maybe come up with a function that uses a regex to check if string matches that pattern, and then replaces it?
Wow that's a great explanation right there. Then I think web scraping is a very powerful tool in data acquisition in web development. Maybe I should look more into it. Thanks man 
And having to play it blindfolded and without sound, imho
this is true about most of the professional or even middle level python things. you start learning the syntax, then functions and classes, and then done! every document and tutorial after this is so hard you can't get what they are teaching and reuse them! :) i need a good tutorial on threading! :) and i have programmed in c++, php and now python! but can't write a thread(i know what they are but can't write my own one!)
I wrote [this](http://www.b-list.org/weblog/2017/sep/05/how-python-does-unicode/) a couple weeks ago about how Python stores Unicode internally; it includes an explanation of what Unicode is, as well as how UTF-8, UTF-16 and UTF-32 work. [This article](https://eev.ee/blog/2015/09/12/dark-corners-of-unicode/) is also quite good.
It gets a bit weird when you want to pass (optional) arguments to the decorator.
If you want something quick and dirty, Swig is good since it (for the most part) generates the bindings automatically. The downsides to this are that tracebacks are generally not too helpful and the resulting Python usage will be exactly as the library you're wrapping (in other words, it will most likely not be very Pythonic). I tend to prefer pybind11. There is at least [one tool](https://cppbinder.readthedocs.io/en/latest/) that exists to help wrap things automatically.
Make sure you don't blink when the second circle nears the end!
Do we really need a whole article about how bad is it? I thought it was one of the first warning when we learn Python : do not silently suppress exceptions.
This is the article that made decorators click for me. I like that he starts with a couple of concepts, like nested functions, that are a non-decorator specific part of python to make sure you have a handle on the necessary fundamentals before getting into how those fundamentals can be used to create a decorator.
If you have a way to solve int('5.4'), I'm all ears. It's like saying 1e3 is an integer (scientific notation is by definition a float, just like an integer can't have a period). Refuse the temptation to guess. Make the user fix their input. 
Yeah, don't do that yourself. As with anything, if you start having to support super general stuff, you get nasty edge cases. If you need that sort of support, use a library like [wrapt](http://wrapt.readthedocs.io/en/latest/). Also, the author of that lib has an utterly *CLASSIC* series of articles about the nitty-gritty details of the aforementioned edge cases. It [starts here](http://blog.dscpl.com.au/2014/01/how-you-implemented-your-python.html)
Because it's nicer than manually rebinding the name of the function you're modifying.
I find a relational database more generally useful for this sort of thing, and at the scale of a local machine just sqlite3 to be best. Postgres otherwise. Remember you can have JSON fields in Postgres too. And there's timescaledb (a postgres extension) if you think you're going to be the next google. You just need to model your data, think out the relations about things like table app_info app_process_name TEXT app_exe_name TEXT productive BOOLEAN app_name TEXT app_icon BLOB table activity start_t FLOAT end_t FLOAT ps_name TEXT FOREIGN KEY app_info(app_ps_name) then you can just do something like SELECT * FROM activity LEFT JOIN app_info ON ps_name == app_process_name Databases like mongo are harder to reason about consistency for a performance gain that likely won't exist in your use case.
As far as I know, iterating a generator expression **completely** (exhausting it) is a bit slower than an already computed list because of the internal mechanism of generators, so that's why it's slower.
Yes, `some_function` is not executed, but its *definition* is, which includes the decorator. In Python, the code def f(a): print(a) is equivalent to f = lambda a: print(a) (well, there's no syntax to do that with a multi-line function, but the idea is the same) This is what gets executed when the (bytecode) interpreter reaches this line. If there is a decorator involved, the principle is the same: @mydecorator(arg) def f(a): print(a) is equivalent to f = mydecorator(arg)(lambda a: print(a)) That's why `arg` gets evaluated as soon as the execution reaches the function definition. 
PyBind is my favorite too. Have used it in two projects so far with no hassles. 
The profiler paints a rather clear picture, considerably more function calls: Code : min(data, key=lambda alist:alist[1])[1] Result: -999923 10005 function calls in 0.024 seconds Ordered by: standard name ncalls tottime percall cumtime percall filename:lineno(function) 1 0.000 0.000 0.024 0.024 :0(exec) 1 0.013 0.013 0.023 0.023 :0(min) 1 0.001 0.001 0.001 0.001 :0(setprofile) 10000 0.010 0.000 0.010 0.000 &lt;string&gt;:1(&lt;lambda&gt;) 1 0.000 0.000 0.023 0.023 &lt;string&gt;:1(&lt;module&gt;) 1 0.000 0.000 0.024 0.024 profile:0(min(data, key=lambda alist:alist[1])[1]) 0 0.000 0.000 profile:0(profiler) Timer : 19.99815480899997 Code : min([i[1] for i in data]) Result: -999923 6 function calls in 0.001 seconds Ordered by: standard name ncalls tottime percall cumtime percall filename:lineno(function) 1 0.000 0.000 0.001 0.001 :0(exec) 1 0.000 0.000 0.000 0.000 :0(min) 1 0.000 0.000 0.000 0.000 :0(setprofile) 1 0.001 0.001 0.001 0.001 &lt;string&gt;:1(&lt;listcomp&gt;) 1 0.000 0.000 0.001 0.001 &lt;string&gt;:1(&lt;module&gt;) 1 0.000 0.000 0.001 0.001 profile:0(min([i[1] for i in data])) 0 0.000 0.000 profile:0(profiler) Timer : 11.204635644913651 Code : min(i[1] for i in data) Result: -999923 10006 function calls in 0.023 seconds Ordered by: standard name ncalls tottime percall cumtime percall filename:lineno(function) 1 0.000 0.000 0.023 0.023 :0(exec) 1 0.011 0.011 0.023 0.023 :0(min) 1 0.000 0.000 0.000 0.000 :0(setprofile) 10001 0.012 0.000 0.012 0.000 &lt;string&gt;:1(&lt;genexpr&gt;) 1 0.000 0.000 0.023 0.023 &lt;string&gt;:1(&lt;module&gt;) 1 0.000 0.000 0.023 0.023 profile:0(min(i[1] for i in data)) 0 0.000 0.000 profile:0(profiler) Timer : 13.623064497020096 Edit: The much more interesting question, in my opinion: Why is the code using lambdas so much slower?
I see that a lot with programming related content. All easy, strings, classes, logical progression, then, "You now need to create an eleven-dimensional matrix to store all possible human emotions and combinations thereof, including but not restricted to frustration and murderous rage."
&gt; 10001 0.012 0.000 0.012 0.000 &lt;string&gt;:1(&lt;genexpr&gt;) &gt; That explains it. Thank you.
I was planning something like this for my next Reddit script. You can only go back 2000 posts, so I want to scrape all my saves, and unsave them so that I can see the next 2000, until I have no saved posts. Seems like your script would be a good skeleton for that. Mind sharing more info?
I never claimed to understand decorators when I first learned them. That is the point. I learned them by example (which I suspect is the norm), and when you learn the technique that way you encounter this situation where decorators with arguments are completely different from decorators without arguments. From a pedagogical perspective it would be better to require that even decorators without arguments be written and used in the style of those with arguments. You can argue that pedagogical concerns are irrelevant to the language design, but I disagree. It just leads to situations exactly like this where you end up telling end users (who aren't studying the language in some class on programming language theory) to "draw the rest of the fucking owl."
I understand that. But people don't think about things like that. We don't think about "executing the function definition" because we don't really think of the language definition as doing anything.
again: - You are searching something like Python Letucce ( https://pythonhosted.org/lettuce/). because you like something more pythonic. - Think more in Python (https://www.python.org/dev/peps/pep-0020/).
Yeah, thats not it. Even when not exhausting the generator it is still considerably slower: #!/usr/bin/env python3 import timeit from random import randint, shuffle import profile data = [randint(-1000000, 1000000) for _ in range(10000)] def custom_min(data): result = 1000000 counter = 0 for x in data: result = min(result, x) counter +=1 if counter &gt; 9000: break return result methods = [ 'custom_min([x for x in data])', 'custom_min((x for x in data))', ] for method in methods: print("Code :", method) print("Result:", eval(method)) profile.run(method) print("Timer :", timeit.timeit(method, number=1000, setup="from __main__ import custom_min, data")) print() Code : custom_min([x for x in data]) Result: -999310 9007 function calls in 0.029 seconds Ordered by: standard name ncalls tottime percall cumtime percall filename:lineno(function) 1 0.000 0.000 0.029 0.029 :0(exec) 9001 0.015 0.000 0.015 0.000 :0(min) 1 0.001 0.001 0.001 0.001 :0(setprofile) 1 0.000 0.000 0.000 0.000 &lt;string&gt;:1(&lt;listcomp&gt;) 1 0.000 0.000 0.028 0.028 &lt;string&gt;:1(&lt;module&gt;) 1 0.000 0.000 0.029 0.029 profile:0(custom_min([x for x in data])) 0 0.000 0.000 profile:0(profiler) 1 0.013 0.013 0.028 0.028 python-profile.py:9(custom_min) Timer : 4.067024977994151 Code : custom_min((x for x in data)) Result: -999310 18008 function calls in 0.048 seconds Ordered by: standard name ncalls tottime percall cumtime percall filename:lineno(function) 1 0.000 0.000 0.048 0.048 :0(exec) 9001 0.015 0.000 0.015 0.000 :0(min) 1 0.000 0.000 0.000 0.000 :0(setprofile) 9002 0.011 0.000 0.011 0.000 &lt;string&gt;:1(&lt;genexpr&gt;) 1 0.000 0.000 0.048 0.048 &lt;string&gt;:1(&lt;module&gt;) 1 0.000 0.000 0.048 0.048 profile:0(custom_min((x for x in data))) 0 0.000 0.000 profile:0(profiler) 1 0.023 0.023 0.048 0.048 python-profile.py:9(custom_min) Timer : 4.70368629693985 
Can you say anything specific though? I recall a certain top-rate SO answer being quite the opposite of your carricature. [How to make a chain of function decorators - Decorator Basics](https://stackoverflow.com/a/1594484/1292120)
I'm not sure what you mean about `env`, but it isn't correct. Portable shebang lines for non `/bin/sh` scripts should use the `env` idiom: #! /usr/bin/env python3 Make sure to be explicit about python 2 or python 3. The PEP says so, and it avoids issues with distros that are still stuck in Python 2 land.
Looking for a way to automatically find and audit the python packages available in every virtualenv on a system.
* bash * ansible (which is written in python)
Unless you know you need the performance, don't sacrifice the consistency or ease of use of a relational database. Try using `redis-cli` vs `psql` (`readline`, SQL comlpetion, paging, `\` commands, etc.) to see what I mean.
I started my week updating my python based OCR utilities https://github.com/povilasb/ocr-pack. Then I forked this terminal image viewer https://github.com/povilasb/terminal-image-viewer and made it work with non-RGB images. And now I'm playing with DNS protocol (https://gist.github.com/povilasb/c2f846d873e2c441ad2b4125fa33df0f) and trying to build something like http://code.kryo.se/iodine/ but in Python :)
Nice work, looks really interesting.
So... CUDA works with Python's object model and class system where Numba's traditional JIT doesn't? Have been really interested in using Numba for some numerically complex calcs, but its really tough to utilize for larger, more flexible packages. Even just the ability to leverage dictionaries would be a big help.
Hehe I so fkn expected this picture after reading the title.
You'll need to use javascript on the home page to call /result/ and then display the result on the home page. There are lots of examples of this online. This should get you started: https://stackoverflow.com/questions/9207740/display-ajax-loader-on-page-load 
In other words, user /u/kpagcha was actually right. It represents 10000 `next` calls on an iterator object, plus one which will throw `StopIteration` exception. 
This belongs in /r/learnpython. Also, you should indent code with four spaces rather than go crazy with `&amp;nbsp;` (also, don't you need `@app.route(...)` instead of `app.route(...)` app.route(/) def homepage(): render('home.html') #home.html has the button to be clicked app.route(/result/) def evaluate(): #main code runs here return output app.run() Finally, while I am far from an expert, I can think of two ways to handle this (and maybe in collection with each other) * Some kind of javascript to poll back and see if it's done and then forward * Use `yield` with the waiting and then `yield` the rest later A quick test: import time @app.route('/test/') def test(): for ii in range(5): yield '{}...'.format(ii) time.sleep(1) 
Blockchain! Blockchain! Blockchain! 200 lines of python. Love it. Thanks for sharing. For a more minimal version (in 20 lines of python) see [blockchain.py](https://github.com/openblockchains/awesome-blockchains/blob/master/blockchain.py/blockchain.py) @ Awesome Blockchains. 
True, deeply nested or complex decorators can be difficult to understand, but the OP seemed to struggle with just the fundamental concept of it.
Oh shit. I don't know why this isn't getting more love, this is a game changer (no pun intended) for those wanting easier AI game incorporation. I am now watching this like a god damn hawk for the release. 
Blockchain! Blockchain! Blockchain! 200 lines of python. Love it. Thanks for sharing. For a more minimal version (in 20 lines of python) see [blockchain.py](https://github.com/openblockchains/awesome-blockchains/blob/master/blockchain.py/blockchain.py) @ Awesome Blockchains. 
Corey! Your videos are amazing. I couldn't understand classes/oop until I found your channel. Your logger vidoes were also integral in me getting rid of print statements. I use both regularly at work now. Keep up the great work. 
thanks, I'll check this out
Working on making sense of Django and ElasticSearch. So far, much easier than I anticipated :-)
I'll have a look at it, Corey. Thanks for posting that!
That message obviously does not get through as I am always seeing newbie code with bare exceptions.
Hi Jacques, Does Transcrypt support metaclasses?
I'm relatively new to Python, but I've been using higher order functions in JS and Golang for awhile now. My main confusion about decorators is that I don't really understand why you'd want to use them in the first place if you could just use a function. To me, it just seems to obfuscate what's going on without really making it much nicer to read.
Another good discussion: [The most diabolical Python anti-pattern.](https://realpython.com/blog/python/the-most-diabolical-python-antipattern/)
Made a small script which can format CSV files and a quick a-level project. Currently looking at making a game in pygame with some friends. Realised I know nowhere as much as I think I do.
+ ansible
Threading. Can you use processes instead? It's usually easier to get right. 
Ansible still uses Python. I know a lot of these networking companies use GO in the backend. I'm wondering if it can be used for automating network testing. 
sintax error? are you trying to run this in python or terminal/cmd? :) also, please try to just type 'pip' or 'pip3' and check if it's installed.
Yeah sure. Will they read this warbing more carefully in this article than in a tutorial? (not rhetorical, I began to read "specialized" website after some practice, not before. Other people may do in another way)
I'm running in what I think is the python terminal, it looks similar to a cmd line though. pip/pip3 are not installed, there weren't any instructions for that part. 
An alternative approach, which I have used, is to render do it in two passes. You can parse the markdown as text, and replace your markers with HTML. Then render it with the markdown processor of your choice. Since markdown allows for inline HTML your markup will not be altered.
People coming from a Java background might notice that the syntax is similar to the Java annotations, and figure that decorators act like dumb tags - which couldn't be farther from the truth.
I thought so, you need type that in cmd ;) EDIT: if it's not working even in cmd, then you need to install pip first.. this could help you https://dev.to/el_joft/installing-pip-on-windows
I had the same issue. If you try to install it this way you have install pip separately. It’s a PITA. Instead, install anaconda which comes with python, spyder, Jupiter, and all of the necessary dependencies. Before you install anaconda, you need to remove the current spyder and python from your computer or else you’ll get an error once anaconda is installed. https://www.anaconda.com/download/
Me thinks he forgot to mention the good old "We'll reformat your complete system and reinstall everything from scratch. This will only take five days. I hope you have a copy of your data?" option ;)
&gt; Ansible still uses Python So i said. Doesn't mean it isn't better than pure python. If your criterion is that you can do automation with it, any general purpose language is a valid answer. &gt; I'm wondering if it can be used for automating network testing. Testing is almost completely different than generic automation. In this case i recommend icinga2. 
Nobody expects an unexpected error...
Yes, it should be @app, but I was just writing in a pseudo-codish manner to put the idea across. My original code looks very different. That seems promising. Thanks.
Transcrypt supports a limited form of metaclasses, as shown in the code example at: http://www.transcrypt.org/docs/html/supported_constructs.html#metaclasses-overriding-type-new-in-a-descendant-metaclass Metaclasses like used in the example are fully CPython compatible, so this code will run with CPython as well as with Transcrypt. Pragma's as used in the example are ignored by CPython, either by import of a stub as done in the example or by use of comment-like pragma's as shown in: http://www.transcrypt.org/docs/html/special_facilities.html#the-pragma-mechanism The metaclass example is part of an extensive back to back autotest, that as a whole runs both in CPython and in Transcrypt, giving identical outcome. 
&gt; I never suspected they were such a difference ? Do you mean a for loop with an append inside ? &gt; [There's really not much in it](https://stackoverflow.com/questions/22108488/are-list-comprehensions-and-functional-functions-faster-than-for-loops) - the main point is that in the explicit `for` loop it'll be repeatedly looking up the list and its `append` method.
it's a python lib but we use napalm: https://github.com/napalm-automation/napalm
thank you!
thank you! i'm giving this a shot now. 
There isn't "zero reason" you just don't agree with the conclusions from those reasons.
So we have one sub only for python news, and another on learning python essentials, but no sub on discussing professional software development using python that stands outside the scope of 'learning python'. As the answers here made it clear (and I expected), there are a number of valid solutions that involve using non-python code to establish the production environment, in which case it would be inappropriate for me to post this on /r/learnpython because of the many, valid, non-pythonic ways to approach this issue.
Agree, but still we all are humans and promises are what we have left with.
Hiring Python focused software engineer in Reno, NV. http://www.silverthreadinc.com/jobs/software-engineer/ Feel free to PM me with any questions.
Pyro's trying to be as transparent as possible. The remote exception is carried inside the exception but not printed by default - you'll have to extract it yourself or install Pyro's exception hook to see it by default. PM me if you require assistance
Did you install it in a virtualenv or just for a specific user? From cron, it may be running as root and not have access to the same libraries. I would do this by making a virtualenv, and having cron call a shell script that sources the virtualenv, then runs the python script.
There are plenty of articles online so that you don't have to read video transcripts. 
And? I've tried every form of install using cmd prompt. using pip install it said it installed, but of course it still doesn't work, and since I'm not capable of hacking into the Pentagon I have no way of understanding what's wrong.
Check out the Realtime Trains API. Covers all UK trains
Well, the reverse is true as well: without details on what you did exactly and what the error messages were, we're not capable of understanding whatever you did wrong or what the issue with your system is. If you're using anaconda, don't use pip -- use conda. The ``conda install pyserial`` command runs cleanly on my systems and I had a working pyserial installation. On Linux, and Windows 10, using miniconda 4.3 / python 3. So I guess you have to debug your setup more.
.pyc files are an implementation detail and not normally used directly. Run the .py source scripts instead (and let python itself worry about the .pyc files) (.pyc files are also not portable across different Python versions, even minor)
cool, thanks!
just don't use it if a proper API is available...
This is what I had to do. At one point, I was going crazy trying to (reliably) parse out links and images from markdown source. I had to handle inline links, reference links, and escaped characters. It was a royal pain. Then, it occurred to me that it would be *much* easier to regex `&lt;a href=` (not my actualy regex code, I account for different spacing, etc). Suddenly, what used to be really hard was a simple change! Also, just FYI, some parsers (as least as I recall when I played with them in the past) do not handle inline html well. Of course, they *should* but they don't. I am kind of surprised how often I run into issues with parsers being slightly different in how they handle things!
Yes!!! Unless there are extenuating circumstances, I always suggest anyone who is new to Python (or not new) just install anaconda (or Canopy, but I prefer the former). That takes so much pain out of these complex (and often compiled) modules/applications. The only real downside is that it is easy to lose sight of what is in the standard library, vs the anaconda distribution (or just common for your audience such as NumPy). Of course `conda` (or any of the similar tools) largely mitigate the issue.
I am not sure what your background and experience is, but I'll tell you, I have been really happy with [dataset](https://dataset.readthedocs.io/en/latest/). Think of it like a noSQL wrapper for SQL systems. Since it is built on SQLAlchemy, it can handle tons of back ends (including sqlite) and, since it is database backed, it has fast lookups (TinyDB is O(n) in my experience) Plus, you can also access the underlying SQLAlchemy API for more advanced queries. I used it for a project and was really happy with it. With that said, I also think it may turn into a crutch so, on my backlog, is to learn enough SQL to not rely on it
Stop being a solo freelancer. Edit: Downvote me all you want, doesn't change OP's XY problem. I know they want advice on gaining experience solo, but that isn't going to get them where they want to go.
Generators have always been slower than list appending, to the best of my knowledge. They potentially save memory, but they are slower. 
"fromage" first appears in the 218th file ;)
I think most of us use stackoverflow for professional programming discussions. 
@with_signature
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Loool okay. Thanks for the heads up 
Most people who start to use NoSQL databases do so because they heard they're better or because they think a schema is a pain. Schemas are wonderful, ACID compliance is wonderful, and you probably want to use a relational database system (postgres or MySQL). Strictly speaking you only need a database hosted. However, it's a really good idea to not let remote apps connect directly to the database, but rather talk to a little web app that you put in front. So you'd need hosting for that as well. There will be a bunch of security concerns. Always remember that your server-side code cannot trust anything the client sends to it. Also, this should be in r/learnpython.
Brandon Rhodes http://rhodesmill.org/brandon/ Clean Architecture http://rhodesmill.org/brandon/talks/#clean-architecture-python
He's not along for career advice. He's asking how to improve himself in his current situation. They're down voting you because your contribution is irrelevant.
I used [markdown](https://pypi.python.org/pypi/Markdown) for my project - a script to collate all my D&amp;D journal entries (stored as a Markdown document per day in campaign), convert the Markdown to HTML, and then render the HTML to a PDF. It worked pretty well and the library is pretty extendable to add functionality at different stages of the pipeline. However, if I were doing it again I would probably use [mistletoe](https://github.com/miyuchina/mistletoe) instead. It has much better support for adding new renderers and also (probably most important for your use case) getting the Markdown parsed to an abstract syntax tree that you can iterate through and edit as required. Getting the AST with the markdown library I used is possible but not easy (it requires a bit of a hack...) 
What is the reason for running a .pyc directly?
After a couple of tests with various nosql databases, where my favorite was grapheekdb because it's pure python and pretty easy, I found out that none of them was fast and small enough to compare with sqlite, which is included by default in any python install. I found out that I was thousand time faster with sqlite, even if it requires lot of joins, than with a nosql light database. Sure that would be another story with mongodb or redis, but they aren't exactly lightweight nor embeddable.
Writing code that will create git exports and open merge requests for review for some stuff.
Working on a couple of things: 1) Because my books on CD that I burned and put on a USB drive won't play correctly in my car (It wants to play all 1/x in a row, then 2/x in a row, etc - which makes it really hard to listen to the book), I am reading the ID3 standard and writing myself a tool to edit the ID3 tags on all of my audio books. Yes, I know there are a number of tools out there that will do it for me, but, where is the fun and learning experience in the convenience of a premade utility? 2) I am writing an oracle API that will build queries on the fly along with some other functionality that will write the selected data in various formats. 3) Enjoying the opening of the NHL pre-season. Pre-season hockey is a hell of a lot better than baseball or no hockey at all.
This is good, but it's a bit cleaner to use a for loop and a range rather than the while loop you're using. For example: Original: number = 1 while number &lt; 101: # Do Stuff number += 1 with range: for i in range(1,101): # Do Stuff What this does is just repeats the code for every value in the range given. It doesn't make a real difference functionally, but it is cleaner and generally better practice.
I never properly learned how to do that, I will make a note of that next time I do a thing in Python however, which doesn't seem to be anytime soon :/
for loops really aren't that complicated. The 'i' I used doesn't really have to be an 'i', that's just what I usually use. You could easily replace it with "number" so it makes more sense. Basically, it just runs the code and assigns the current value chosen from the range to the variable you give. For example: for number in range(1,101): print(number) would just output: 1 2 3 4 5 6 7 8 9 and so on until it hits 100, because each time it runs, it increases the value of the "number" variable by 1.
That's not bad, but as someone already suggested a for-loop would be more intuitive. :3 On the other hand, I personally like to write a FizzBuzz program like this instead: for i in range(1,101): num = "" if i % 3 == 0: num += "Fizz" if i % 5 == 0: num += "Buzz" if not num: num = i print(num) 
I'm currently working on a script to batch rename files but I can't make it work yet. I probably have to figure out what I want to do first and what I want to do afterwards haha.
I didn't even realise that I could've set the number variable to a string as well. Thanks :D
Ah, that makes sense now, thanks!
I believe you can start here: 1) I really recomend reading these 2 books: Clean Code and Pragmatic Programmer They will make your overall code better and are language independent. 2) Try some problem solving site, like project euler or hackerhank. To be able to solve some of their problems you will need to learn about sorting, recursion and algorithmic paradigms. With this knowledge you will be able to solve a lot of problems you will eventually face. 
sup? You should be able to validate input as an integer with the following, rather than having to add tons of unnecessary lines of code: try: val = int(userInput) except ValueError: print("That's not an int!")
I never knew that existed. I just thought that if the program returned an error, the program would stop completely, so I'd have to make like 20 lines of If statements
Yes, there are people who can solve hard problem in a snap. This is due experience, really good abstract thinking, and the fact that they are probably pretty damn smart. You can accumulate the experience. If you do not have the innate ability to think abstractly, or if are you not very high on the IQ scale - there is nothing that can be done about that. We are trapped in a prison of our own genetics. Some people are just lucky and win the genetic lottery. There are some problems I can solve quicker than I can solve others. I am really bad when it comes to problems requiring spacial visualization. So, I do puzzles and other things that help rewire my brain to use those parts responsible for spacial visualization. I do the daily programming challenges here, Project Euler, and rando-projects on my own. I try to focus on the things that give me the most trouble or have the least experience in. Spending hours racking your brain won't help. The human brain has the amazing ability to do all kinds of background processing. Switch gears. Work on something else for a bit. Get up, walk around. Clear your mind. Look at code other people wrote to solve similar problems. Things tend to fall in place once you have an idea how to solve the problem. Sometimes, the best solutions come to you when you are thinking about something else. You can only improve your problem solving skill by solving problems. Pick problems you find interesting. Try to choose them in areas that are not your strong suit. If you are not as strong with algorithms, find problems you think are interesting in an area you are interested in and write code to solve the problem. For example, I use to play a lot of Boggle With Friends. I thought it would be interesting to traverse the board for all possible words that can be spelled from a particular starting letter. This includes weighting the graph so double/triple letter/words are considered if there is more than one path to a particular word. It is things like that that can go a long way. If you try to grind away at things you aren't particularly interested in for the sake of gaining experience, it is that much harder.
to hide the code
omelette du fromage
http://i.imgur.com/tNJD6oY.gifv This is a kind reminder that in French we say "omelette *au* fromage" and not "omelette _du_ fromage". [Sorry Dexter](https://www.youtube.com/watch?v=8nW3-9gdjYA)
Python 3 not Python 2. Unless you are the RUE (Resident Unicode Expert, also wxjmfauth) who hasn't got the faintest idea what he's talking about. For those who don't know, the RUE has been making unsubstantiated claims about Python 3 and unicode for years, even claiming that Python 3.6.2 is unusable on Windows.
A complete waste of bandwidth, the docs tell you this. Why do people insist on writing stuff that gives no extra value?
Is it Python code? 
I didn't know about wrapt, it looks cool!
I avoid this problem by using `pip install xyz` on a vanilla installation from [Download the latest version for Windows](https://www.python.org/downloads/). Who really needs anaconda?
blockchain.py is not a blockchain but a database. Learn the difference. Proof of work is there for a reason (to make it an immutable chain). In your example the chain can be modified easily.
Who did you write for, Morecombe and Wise, The Two Ronnies, Only Fools And Horses, possibly even Tony Hancock or The Goons?
Hello, I noticed you saying it is a blockchain. But the problem is that the orphan rate and forks would be crazy with a time based chain like that. It is simply a concurrently accessible database with pretty rough and exploitable validation. Blockchain requires proof to determine the valid chain. Time is not an optimal definition of block validity. As well as just the hash continuation. There is a reason why there is a difficulty, orphans, merkle chain, forks and all other fancy shmancy cryptonerd terms in description of simple pow base blockchain like bitcoin.
That is awesome. Thanks for the information!
&gt; No types A strongly typed language has no types? Please explain.
Please take your sexual self abuse elsewhere as it's patently obvious that you know nothing about the Python programming language or the wonderful community that supports it.
This kind of response is not welcome in the python community. Please do not lower our standards to that of the complete thicko/troll who is dangling the bait. Thank you.
All I can say is that it is impossible to read code in languages with those damn silly braces, as you can scatter them whereever you like, or in some cases not even bother, whereas to me Python and its crystal clear whitespace was love at first sight, all of 17 years ago. I'm not going back!!!
Yeah I was lucky enough to be using open cv which makes encoding and decoding images super easy and efficient, so I just ended up using that method.
Now that's a nice dataset, for example [46826](https://wikileaks.org/macron-emails/emailid/46826). &gt; Voyez donc, en exemple, ce qu’est devenue l’Algérie en un siècle seulement de colonisation... Au départ des Européens en 1962, les terres arables et fertiles ont été gagnées sur le désert et sur les marais au prix de tant de tombes qui jalonnent l’Afrique du Nord que le terme même de « colonisation » est aujourd’hui dépassé. Comment oublier que ce sont les premiers Européens (les pères de ces enfants qui ont été chassés) qui ont asséché les marais, ensemencé les maquis, transformé les douars, les casbahs, les repaires de pirates en paisibles villages, en cités prospères, en ports dignes de ce nom, bâti les écoles, les universités et les hôpitaux, tracé les routes et édifié les ponts, chassé la maladie, la famine, fait jaillir des pierres la vigne généreuse et les orangers ? Comment oublier que c’est la France, et elle seule, qui a fait gicler du sable du désert le pétrole et le gaz ? Et c’est pour toutes ces réalisations qu’il faudrait demander pardon ? A cela, qu’ont opposé les révolutionnaires ?... La révolte, le terrorisme, l’abomination et pour finir, la dilapidation de l’héritage « colonial ». Avant que la France ne vienne dans ce pays, les autochtones jouissaient-ils de toutes ces réalisations ? Les avaient-ils réalisées ? La France les en avait-t-elle privées ? La réponse est NON ! ... Prix du repas : 25 euros, tout compris ... Omelette norvégienne
Add a new column containing the decade, then group on that. Also, /r/learnpython.
Do you have qgis anywhere in your pipeline? Might be better to exploit the elephant in the room here. If not, there are python binding for gdal. Finally, for you specific problem, a kdtree (scipy) might be a cheap way. Load all of your coordinates into the tree. Then query it for 'all points within radius x' of the centre point of your circle. Unfortunately this requires rectangular coordinate systems (UTM) to be useful. Not really good on global scales.
Can you expand on your goal? Things like target platform(s), just for you to use, or end users, etc. If it's just for you or for fun, tkinter is built in (but looks fairly dated).
Got it. Yeah, sorry I keep forgetting about /r/learnpython namesGrp = names.groupby(["Gender",(names.Year//10*10),"Name"]).sum() namesGrp.head()
I would use qgis and just do a spatial query. Or you can use geopandas to do a spatial query. Qgis is very easy to use and you can actually see your maps. 
Kivy is a nice x-platform framework: https://kivy.org
Please I need help in installing openpyxl module in my IDLE . Getting permission access denied everything . I tried most of the ways
Do pull requests on your own code. Open up a PR, don't merge it, and then review it the next day. You'll discover how much dumber the first idea really can be sometimes. (Speaking on my own behalf). There's also IRC channels you can ask stuff. Meaner bunch though.
There's no rule about not pushing it up in the meantime though. What I've found (especially on arduino) is that I'll google for something and find someone with a project that I really want the code for, but they haven't pushed it. In those cases I'd a million times rather have a broken codebase to play with and patch than have to start from scratch. Remindme! 4 days :) 
Looking for work. Everyone has me doing homeworks. Well, 3 companies so far.
The moment the SO community detects a question they feel is a newb question, they will fucking tear me apart. It's happened dozens of times, and it's really disheartening. I'm not going to contribute to a community that is openly hostile to me. SO can go fuck themselves as far as i'm concerned. Sure it's helpful to find answers from a google search, but if I ask a question, they'll just tell me to read a fucking textbook, wherein the real issue is that many of the issues i've been over to SO for are complex enough that a discussion is much more productive than searching a fucking book. reading books is not the best way to learn software development. I wholeheartedly believe that the SO community is absolutely toxic to new and intermediate developers. I've even read a few articles by experienced professionals who say they hesitate to ask questions on SO because they know how toxic the community can be. Plus, if experienced developers aren't allowed to have open-minded discussions about how they approach development issues with python, then what the fuck is the point of a subreddit? Reddit is the perfect forum for this type of discussion, AND i've found it's MUCH friendlier to us non-professionals. Fact is, intermediate and experienced developers need a forum to just shoot the shit about how we do what we do and why without getting the toxic bullshit i've found over at SO. If you think SO is (or should be) the only right answer, you're sorely mistaken.
First, I should say that any help would be appreciated. I've just started with Anaconda and am working with Spyder for the first time (got sick of various IDLE "features"). What I want to do is stop having to waste time on shopping and stick to a food budget (both financially and calorically). It might be a huge project, but what I am starting on is a way to generate a grocery list which will conform to a budget based on a caloric/nutritional plan a well as a list of recipes which I can cook and prepare 1-2 times a week and then store for the next few days worth of meals. I think will be pretty simple so long as I limit myself to a single store. It's nice to have a challenge which has some real-life benefit for success. If anyone knows of any tools which might make the project easier I would love to hear about it, I tried MealPlan myPlan = Recipies(ShopingList.Generate.FromBudget(FOOD_BUDGET, CALORIE_BUDGET, ZIP_CODE)) but it turns out that isn't a real package :( edit: forgot to add shopinglist to fictional code
Because people like to learn in different ways
I mean... cat * | grep "fromage"
It doesn't cost anything to be nice. But in any case, you might be wrong. Proof of work is not necessary for something to be called a blockchain. This is a blockchain. Sure it's insecure, but that doesn't mean it's not a blockchain. 
Have you used pip to install openpyxl? I found this https://stackoverflow.com/questions/38364404/how-to-install-openpyxl-with-pip But that sort of helps with win 10.
Sorry for posting in the wrong sub but I appreciate the information. This makes a lot more sense to me now (I think). So the best move would be to throw up a little Bottle app to query the database per requests from the app? (I've messed around with Bottle/Flask and MySQL hosting on PythonAnywhere so I have a little experience there)
grep "fromage" *
So I have played around with SQLite and it is certainly simple and quick but is there any way to update the SQLite on a remote phone? My understanding is that it is stored locally so if say 50 people had this app and it used SQLite to store marker locations. The only way to add new locations would be to push an update with and updated SQLite to those 50 people? Thanks and sorry for the newbish questions
Oh, I forgot you could do that :)
Not the shortest but I like doing it like this, just 'cause it's clever. def fizzbuzz(num): fizz = 'Fizz'*(divmod(num, 3)[1] == 0) buzz = 'Buzz'*(divmod(num, 5)[1] == 0) print(fizz + buzz or num) def main(): for x in range(1,101): fizzbuzz(x) if __name__ == '__main__': main() NOTE: The dunder lines are being removed...
Cheesegate confirmed
I just delete it and reinstall. Pretty simple to do this with mini conda.
This looks awesome! 
4 days indeed :) 
Pretty much right, and that's how all apps like that work. But you'd only push the updates, not the entire database (not sure if you were unclear on that). You'd just do something like while True: sleep(1) x = requests.get('your server/get new locations') if x: store it locally ^ from the phone app 
Yep exactly
Step 1: /r/learnpython Step 2: read the sidebar
I'm also new to Reddit lol. Thank you.
Take the introduction to Python course on edX. Both MIT and GT offer a fantastic intro to the language from first principles. It keeps you focus, and guides your knowledge in a path that will teach you the building blocks very quickly. 
[UUOC](https://en.wikipedia.org/wiki/Cat_(Unix%29#Useless_use_of_cat)
Wx is pretty nice and has a permissible license, but can have some performance issues if you try to push it too far and might be a bit harder to get installed. PyQt is pretty popular, but the license is more restrictive. It has better performance and cross platform support though, and is definitely more advanced. I recommend using qtpy with it though, as it helps match up the different versions of PyQt so you don't have to program against just one version. 
Using beautiful soup to pull toner levels from the printers in my office and then driving a batch of servos to display levels on airplane style analog gauges with the adafruit servo hat and a raspi. Yeah I get low toner cartridge level alerts via email, but that doesn't look as cool on my desk. haha Edit: Single gauge up and running. Need to put the other 3 together and build a housing. https://drive.google.com/file/d/1NN0mK8QcGTclMEJCyMhAmO0JiD7uYpiIrA/view?usp=sharing
I started with https://automatetheboringstuff.com/ it's free but when I was done I bough the book and still use it for reference.
Me too, are you using any specific site or book? I'm mostly using online videos, Also taking a course next month.
I recommend mistune https://github.com/lepture/mistune
It might make for simpler, more readable code if you made a decade column separately (so you'd have a `names.Year` and a `names.Decade`) and then you can group on that column. You or someone else may look at your code tomorrow, next week, next month, or next year, and you want this person to easily know what's going on without having to really slow down at this line to figure out what's happening. 
Can anyone give a summary of what the biggest changes are?
[removed]
Any proof is needed. Otherwise any chain can be broken. You don't have any proof in blockchain.py. Didn't want to sound rude, i guess in a hurry did a bit rude post 
Have a look at Shapely, maybe combined with Rtree. Googling both terms should give you examples to get started with. 
Anything which returned lists or dicts now returns a custom iterable view which does lots of different things. Possibly too many things. That's most of it.
Practically speaking you are right. But I think technically it still is a blockchain (albeit a very weak one). I'm just being pedantic :)
&gt; can have some performance issues if you try to push it too far Can you give an example? It's hard for me to imagine what you might mean.
In your shebang, use '/usr/bin/env python' so it will use the python executable that the user prefers. If python version specific then use python2 or python3 in these dangerous times.
The second one is not a decorator. It is a decorator "factory", a callable that returns a decorator. Conflating the two leads to confusion and people thinking decorators are complex. When they are exactly one very simple thing.
Thank ya very much, just changed it ;]
Welcome to reddit, /u/venomanon... 🎵 *doot dooo be doo-doo * 🎵
- download new video which published by specific channel from youtube - convert to mp3 - add to my person podcast feed 
Guard against user/untrusted input. You coerce to proper int which is good, but do you want program to fail with user-unfriendly traceback when not given an int?
&gt; user/untrusted input Thanks? I will figure out what that means immediately.
Well you could use pyautogui if you were super careful and set it up right.
One option is just to parse it with pandoc plus a panflute filter in maybe 5 lines of python. In that way you can just set a rule to modify certain elements, and avoid dealing with parsing html or anything like that. You can even call both from a python script (useful if you inject data from another source). Link: http://scorreia.com/software/panflute/
What if enter choice 6? What if I enter choice g? What if I give some unspecified input? What if I divide by zero? How will you code handle these invalid inputs? Think on that :) Other wise code is really nice. Maybe next time try an infix evaluator? 
Thanks a lot. That's something I didn't even think of. I will definitely mess around and fix it. Appreciate the input. 
PySide is the same core library (Qt) but it's LGPL instead of GPL, and there's a huge difference there. 
That title...
`kivy` is under active development, it normally used for flat-UI such as on mobile. It has openGL acceleration. It's the least mature of the main options, but if you want to contribute to a library, it might be the best choice. `PyQt5` and `PySide` both wrap the C++ Qt library. Qt is possibly the biggest and most mature GUI framework in the world aside from .NET. `PyQt` comes with a very restrictive GPL license whereas `PySide` is LGPL. 'PySide' only supports Qt4 at present but `PySide2` is expected to be released soon-ish, and PySide is the official version from the Qt Corporation. Qt has openGL acceleration. Both feel like wrappers around the C++ library. `PyTk` is kind of old, but still has some users. `wxPython` was aged but just this year received a major new update. In general the biggest problem with GUI in Python is the GIL, as it tends to make the GUI lock-up occasionally. I prefer to build GUIs for Python apps as a separate process and use inter-process communication (which also means I don't have to write the GUI in Python). That's kind of complicated though. The key to writing an acceptably responsive GUI for Python is to learn how to use the event loop of the GUI package rather than just doing everything in a procedural way. 
PySide also seems to be less maintained. Last time I checked (which was a few months ago), it didn't have support for python 3.
:) btw nice yoda -|---------- / -----------[-- (These are supposed to be light sabres :P )
[removed]
I'm currently migrating a non-trivial desktop app from wx to PyQt mainly due to performance and portability (especially to py3). The performance problem I really ran into was with matplotlib, switching to pyqtgraph is a huge performance boost, but I've still felt like qt has a better response time in general. Granted, I'm not done with this conversion yet, but it seems to overall be a more capable and performant GUI toolkit than wx. This is after about 4 years of using wx, and only about 2 weeks of using qt. Both libraries had their problems*, but qt is more complete and easy to work with. Wx is almost a direct translation from C++ to Python, while the qt bindings provide a somewhat more (but still imperfect) pythonic API over the C++ API. \* for example, today I ran into the problem that qt4 doesn't properly render svgs through QSvgWidget if that image contains masks or other modern svg features, so instead I'm pretending to have one through QWebView since it is just WebKit and so renders the svg correctly. 
If you only intent to save webpages this way, selenium is your best choices. Selenium is a browser automation tool and it can also screenshot of a webpage from top to bottom not just what's on the screen. More over you can tell it to click a button on the page to go to another page to do the same.
That's what Pyside2 is for
 ag fromage
grep fromage . -R
Wish we had this feature called autoformatting!
Good bot
Thank you Snaketooth10k for voting on haikubot-1911. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Sorry, I didn't fully understand your question. Your sqlite database is running on a remote phone? That's very unusual. When using a remote database, it's almost always on a server. Anyway, Sqlite cannot handle concurrent connections. For that you have to switch to another database like mariadb or postgresql. You can indeed write a rest server for a sqlite database, which then works around this problem, but at the cost of performance. Your situation with multiple users sharing common data is usually handled by having a central database on a server, for instance a cloud, and each application polls the server for updates. Sqlite can be used as a local cache, but that's not required if the data are very small.
You can accomplish the point within a circle problem with a bunch of distance calculations between points. Is the point less than the radius away from the circle's centroid, then it is within the circle. There are other ways to tackle that problem. pyproj uses GeographicLib in its Geod class. It is fairly easy to use. geopy is not using the most accurate algorithm for distance calculations. geopy has some great promise, but it is mostly abandoned.
I'm not going to argue on the technicality of whether one is or is not a decorator. I will concede that they are different in construction. However, I think calling one a "decorator factory" is more confusing because they both use `@` and are applied to functions the same way. Is there then a special name for class decorators? class Decorator(object): def __init__(self, function): self.function = function def __call__(self, *args): return self.function(over_ride) How about a special name for decorators that are applied to methods rather than functions? def decorator(function): @wraps(function) def wrapper(self, *args, **kwargs): result = function(self, *args, **kwargs) return result return wrapper class Example: def __init__(self, variable): self.variable = variable @decorator def method(self): return self.variable Wouldn't it be easier to just lump all these together under the umbrella term "decorator" since they all use the same syntax?
Do they support implicit graphs yet?
Checking out GIL implementation in Python 2.7.14 and Python 3.6 (currently checking out code in 2.7) and visualizing its thread acquire/release cycle. It'll take a lot of time since I don't have advanced knowledge of C.
_all_ platforms? My path is set in .zprofile... what's wrong with a symlink from ~/bin? Avoids gunking up your PATH with a million separate entries for each app. This is basically the strategy that homebrew on macOS uses (though it links from /usr/local/bin)
Ad revenue
Yeah, i agree with you. For that reason I checked the hash from the previous block and yes, this implementation does not include peer2peer, proof of work or some advanced feature.
`pickle` isn't dangerous when used correctly, and almost any module _can_ be "dangerous" when used incorrectly. Just scanning for specific modules will give you no real information on how secure the source code is.
Almost all modules are "dangerous" if used in the wrong way. Just searching for the presence of a module is not going to be useful. What are you trying to achieve?
I think you've missed the rules of FizzBuzz a little bit. Typically the challenge is if a number is divisible by A, or by B, or by both A and B. As others have said, you should `for` loop over `range()` instead of while. Be mindful that `range()` in python2 will create a list of every element within that set, where python3 will use a generator and therefore only return a single element per iteration. This is important when you maximum is very large. I am _very_ curious about what you mean when you say VB is easy for GUI development but "harder for everything else"? Can you give an example? I (re)wrote a somewhat substantial accounting software system in VB in the 90s, and the language didn't really make anything that wasn't part of the GUI any harder than any other language I've used.
I'm getting started learning Python :)
It means that you have to prepare for things that might be entered that aren't whole numbers (integers). You have used int() in your code but that can fail if the user puts in something that isn't a number and you want your code to be able to handle that.
Good point. I've added a new version - [blockchain_with_proof_of_work.rb](https://github.com/openblockchains/awesome-blockchains/blob/master/blockchain.py/blockchain_with_proof_of_work.py). What's the difference? Now includes a proof of work when computing the hash e.g.: def compute_hash_with_proof_of_work( self ): nonce = 0 while True: ## loop forever hash = self.calc_hash_with_nonce( nonce ) if hash.startswith( "00" ): return [nonce,hash] ## bingo! proof of work if hash starts with leading zeros (00) else: nonce += 1 ## keep trying (and trying and trying) What do you think?
I'm just starting on Python as well professionally through university. I found that automating the boring stuff, or taking something you do every day and making your own app for it really helped. For instance, developing a python script that automatically renames and moves your files based on their extension into certain folders is a great way to start. It teaches the Syntax of the language, the application of the language and how it interfaces with files and the reset of the OS 
I agree with you.
working on a twitter monitor bot that collects messages with feminist movement hashtags (niunamenos, feminicidio, vivasnosqueremos), organice and sends them to an app that displays as overlay on the camera stream
So... a spambot?
just subbed :) thanks.
You've got an image in the repo, and this doesn't matter much to me, but out of the 35kb the repo is to download, 80% of that is the image (23kb). I suppose it doesn't make much difference either way, but you could compress the first few lines down. ON_WINDOWS = False if os.name == 'nt' or platform.system() == 'Windows': ON_WINDOWS = True vs ON_WINDOWS = os.name == 'nt' or platform.system() == 'Windows' And this is my ignorance, but the requirements.txt is just -e . Does pip know that this works? Seems like you can pass it files normally. It seems like you depend on `click`.
Hey thanks! I think the love will come when I do a proper release. I've been keeping this on the low to keep myself focused. If you are curious, you can look up the [wiki](https://github.com/SerpentAI/SerpentAI/wiki) in the meantime. It's still incomplete but has maybe 50% of the content finished up.
In the current semester I need to do a lot of desktop gui's. 
Haha! That first challenge reminds me of my attempt to parse access point information from a similar format: https://github.com/kootenpv/access_points/tree/master/data It's surprisingly nasty and good to have test cases for! 
Context here seems to be that the long quote above is from a racist/nationalist dude ranting that Macron is wrong to apologize for the colonization of Algeria because (in racist/nationalist dude's opinion) colonization is a great thing that brings all kinds of benefits to the people whose country gets colonized and so we should just overlook the violence and racism and discrimination involved in it. Sort of a [White Man's Burden](https://en.wikipedia.org/wiki/The_White_Man%27s_Burden) *en français*.
**The White Man's Burden** "The White Man's Burden: The United States and the Philippine Islands" is a 1899 poem by Rudyard Kipling about the Philippine–American War (1899–1902), which invites the U.S. to assume colonial control of that country. The poem was published in The New York Sun on 10 February 1899. Originally, Kipling wrote the poem for the Diamond Jubilee celebration of Queen Victoria's reign (1837–1901), but it was exchanged for the poem "Recessional", also by Kipling. Later, he rewrote the poem "The White Man's Burden" to address the American colonization of the Philippine Islands, a Pacific Ocean archipelago conquered from Imperial Spain, in the three-month Spanish–American War (1898); the birth of the American Empire. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.27
&gt; all platforms? My path is set in .zprofile... zsh is not a platform man ...
Do you know what a declaration means? Do you know the difference between: 'int i = 0' and 'i = 0' ? What is missing. pls tell.
Bump ?!
You didn't answer my question but never mind. Nothing is missing. There is an unneeded `int` as I can tell from `i = 0` that i is an integer. If I really need to know if a name such as `i` is a particular type at runtime I can always find out with [isinstance](https://docs.python.org/3/library/functions.html#isinstance), but to a degree that means that you are losing out with duck typing..
I did, you're just too thick to understand it. You can tell me that i is an integer or 0? Because i is not an integer. &gt;isinstance Wow, didn't know that you can do that without executing the code.
[How you implemented your Python decorator is wrong](http://blog.dscpl.com.au/2014/01/how-you-implemented-your-python.html).
What movie is the gif from?
I think about things like that, for one. When our mental models don't correspond to what's actually happening, it's useful to change our mental models. It takes time and effort, but it's worth it for the understanding we gain. It can make the difference between seeing programming as magic incantations you have to memorize and a small set of simple, consistent rules.
 rg fromage If you want to go faster
When you resort to such insults you're clearly out of your depth. To be pedantic `i` is not an integer, it is a name that happens to be bound to an object that is an integer. Please go and read up about dynamic typing and when you understand feel free to come back. Until such time as that happens please do not continue to show your complete ignorance of the subject, as shown by your ludicrous final sentence.
It is quite powerful tool but in some cases it might be "illegal" or atleast unethical. Some high profile websites might even have some ways they try to circumvent scraping. For Example: some sites have banned urllib default UserAgent string. 
 import pyscreenshot as ImageGrab import selenium from selenium import webdriver Google is your friend.
I know what dynamic typing is. I don't think you understand what you're arguing against.. which is hilarious given that you started the argument. When you can tell me how to run commands in on python code without executing code, you can speak.
Ah, that makes more sense. I didn't know the [context](http://www.reuters.com/article/us-france-election/frances-macron-seeks-to-end-controversy-over-algeria-comments-idUSKBN15X0QP) of the letter, and was somewhat baffled by the content.
&gt; Why is the code using lambdas so much slower? Isn't that because each call to the key function sets up a new frame, whereas the next call on the generator reuses the existing frame?
&gt; When you can tell me how to run commands in on python code without executing code, you can speak. Now what are you rabbitting on about?
I've tried and liked the interface. It asks you to solve algorithm problems in Python (or Java), lets you test your solution on test data, and you can also view their sample solutions which is great for learning.
python 2 code in 2017 pls And its kinda weird having it jump back and fourth between one-liners and dealing-with-arbitrary-input 
Great work Robin and co! After so little public movement for so long, it's great to see wxPython getting new, active development that is Python 3 compatible. The lack of Python 3 compatibility is one of the biggest factors why we decided to move away from wx and to qt, but this newer development might allow us to one day move back to wx (at least for certain applications). It's definitely an option to keep open since it has a much friendlier license for businesses. 
Read up.
Difficulty should be set by the speed of solving. That's important. Static difficulty doesn't give the consistent resolution time
Makes sense, thanks for the help!
Unfortunately that great name is already in use in CPython: https://docs.python.org/3/howto/clinic.html
I think I like this best so far. Would something like this be clear in what it does? @with_signature(insert_args=1) def pass_42(f, *args, **kwargs): return f(42, *args, **kwargs) @pass_42 def add_numbers(a, b): return a + b # signature is: # add_numbers(b) print(add_numbers(7)) # prints 49 @with_signature def times(f, _n, *args, **kwargs): result = None for _ in range(_n): result = f(*args, **kwargs) return result @times def say_hello(name="world"): print("Hello", name) say_hello(3, "Spam") # prints: # Hello Spam # Hello Spam # Hello Spam
To be of value, tutorial material should: * be better technical writing than this (at the very least, it should use proper grammar and punctuation) * show code samples with proper formatting
&gt; There should be one and only one obvious way to do something There is a way of viewing decorators that satisfies the above. We have: @&lt;expression&gt; def func(x): ... The *result* of `&lt;expression&gt;` is called with `func` as its argument, and the result is saved with name `func`. `&lt;expression&gt;` should evaluate to a callable. If `&lt;expression&gt;` is simply the name of a function, then the expression evaluates to that function, and we're in business. If `&lt;expression&gt;` is something like `decorator(foo, bar)`, then the result of this function call is applied to `func`. The only catch is that you're syntactically limited by the language to `&lt;expression&gt;` being a function or function call. In this view, there isn't any special syntax for non-argument taking decorators.
Here is the code : https://drive.google.com/open?id=0B_Qvci1hzIcjV21IWVNJMWFwMVE Chart embedded in a blog : http://datasoaring.blogspot.com.br/2017/09/usa-federal-debt-total-public-debt-and.html
ЦЕ НЕ Є ДОБРЕ
*plonk*
I agree with Magentium, book is very good at getting you to experience python and solve some practical problems, but its does not go deep into the language, if I remember correctly I don't think it even goes into any OOP.
Just so you are aware, it doesn't do that very well. Did you consider using something like cython to transpile your Python to C, and then ship a compiled binary?
I tried to do that but I couldn't find a simple enough guide. Care to share any?
Very cool, but still has a lot of boilerplate in the example. This screams for `concurrent.futures` style support so you can simply run an async `map()` or an `as_completed()` iterator thing over some iterable.
All of the [official docs](https://docs.python.org/3/) are pretty good, with [The Python Standard Library](https://docs.python.org/3/library/index.html) being essential to my needs. [Python In A Nutshell](http://shop.oreilly.com/product/0636920012610.do) comes highly recommended.
I used the same site and found it to be very helpful. 
I'll move it out of the repo now, thanks! As far as the requirements.txt goes, yes that is standard practice. See the last section of https://caremad.io/posts/2013/07/setup-vs-requirement https://github.com/requests/requests/blob/0eb9a4c1617909bbbb465a9987c7cba0f515eaa6/Pipfile#L25 https://github.com/pyca/cryptography/blob/1b86dc527dfecf1795ac28cd6bd32e8cf8725566/dev-requirements.txt#L7
Fascinating project. I am eager to see it develop. Does anyone know relative processing speeds for Geopandas vs. ArcGIS? Let's say, for a large spatial join?
This is a really interesting idea, especially now that we support Python 3.6. Want to start a ticket about it?
It was actually mixed (some code snippets were 2 others 3). Anyways thanks for noticing. I upgraded all snippets to python3 now.
Good bot
You are the 9424^th person to call /u/GoodBot_BadBot a good bot! ^^^^/u/Good_GoodBot_BadBot ^^^^stopped ^^^^working. ^^^^Now ^^^^I'm ^^^^being ^^^^helpful.
It's impressively thorough, and the commentary about performance implications, etc. are outstanding. I find that when I think about decorators, it breaks out something like this (with logarithmic decay between steps): 1. I'm just using one somebody else wrote 2. I need to hack out a very simple one for some small task 3. I need to actually write a robust one for other people to use It's number 3 that has me reaching for `wrapt`. At any rate, I hope the lib can help with your next decorator.
A List of **Non Trivial** Python Exercises first exercise: *Write a program that asks the user for a number (integer only) and prints the sum of its digits* Joking apart, I like exercises that focus on the language and not only in data structure and algorithm. I saw python beginners trying to implement algorithms in python the same way you do in C. That's so wrong.
Interesting to see the effects of the Great Recession on both federal debt and GDP.
Insert four spaces before every line to make reddit display your code as code: def fizzbuzz(num): fizz = 'Fizz'*(divmod(num, 3)[1] == 0) buzz = 'Buzz'*(divmod(num, 5)[1] == 0) print(fizz + buzz or num) def main(): for x in range(1,101): fizzbuzz(x) if __name__ == '__main__': main() (Also, why use `divmod(num, 3)[1]` instead of `num % 3`?)
Quite right.
named after Monty Python, dope.
You need `Selenium` not only py.test. Implement your web navigation using selenium and then call it from your pytest.
https://pyup.io/safety/ https://pyup.io/safety/ci/
Clarification: with async map() I meant not something asyncio (although that would be cool too!), but like a Zappa flavour of the `concurrent.futures.Executor` that you can drop in a non-asyncio project like Django. 
Has it received some widespread criticism?... 
I'd love to know this as well. I suspect that it may be easier to find numbers comparing ArcGIS with PostGIS, which uses the same OSGeo technology internally.
503 service unavailable
I would say there's a gap between the two, and I would fill that gap with some other, more basic books, and some coding practice. But I can highly recommend Fluent Python, once you're "mature" enough for it. Read and re-read it. 
&gt; The performance problem I really ran into was with matplotlib, switching to pyqtgraph is a huge performance boost, Are you doing a rapidly updating plot? Taking this from pyqtgraph's page: &gt; "Speed. If you are doing anything requiring rapid plot updates, video, or realtime interactivity, matplotlib is not the best choice." Seems like the issue is really matplotlib more than wxPython, no? Though I get that, functionally, it still pushes you to choose PyQT.
Serious question: who still uses pyDev? Holdouts from years past? Or is there some feature(s) that make it truly preferable to the multitude of new IDEs?
You probably want `i` as well to get Fromage as well.
This seems like a good list for people who want to learn python/programming. Gives them real targets to achieve. 
Examples of what?
Is this the "Phoenix" branch?
OSS 117 I'm pretty sure
I think he mean that /usr/bin/env is not supported in some systems, or is disabled for security reasons in others.
Thanks! That's helpful.
It's double upvote day! Upvoted the complainer for complaining and upvoted the creator for putting in the time to fix it.
sh/bash ain't either.
Not really, it's just that people use it for scraping a lot and banning its useragent string is first line of defense..
examples of any non trivial program
Is this good enough? Prints the numbers from 0 to 9: `list(map(print, range(10)))`
Yes :-)
Many people ;) PyDev has many users and is widely used. Just looking at public sources to make sure it's unbiased: http://marketplace.eclipse.org/content/pydev-python-ide-eclipse shows that around 15k-16k users install it every month -- and https://sourceforge.net/projects/pydev/files/pydev/stats/timeline?dates=2017-01-01+to+2017-09-08 shows 15k users from there too... and neither of those is the official way of installing it! -- note that monthly ups and downs are mostly based on the final Eclipse releases (it goes up each year at that time and then settles a bit lower over the year), besides being distributed directly on Linux repos, etc. You can also see, LiClipse (http://www.liclipse.com/) public counters for the previous version at: https://www.mediafire.com/folder/ka5iei6qnyaq4/LiClipse#9lvd44ll5q63q So, many people do use it. Now, regarding features, I'd say its integration with 3rd party tools is nice (PyLint, isort, pep8, autopep8, pip, conda), it has top-notch code-completion (doesn't really leave anything out vs other IDEs and has some unique features like importing a token on code completion) and code navigation (http://www.pydev.org/manual_101_navigate_code.html), has a remote debugger (on the open source version -- actually, the PyCharm debugger and the PyDev debugger are the same under the hood as it was started in PyDev and is also used on PyCharm, the only difference is that on PyDev all debugger features are available)... In general, I'd say that it's a pretty solid package and doesn't really have any big shortcoming against any other IDE, it's mostly a matter of taste (in the company I work for, it's something as 50/50 PyDev, PyCharm, but I do agree that the PyCharm marketing is much better and they've been able to convert many newcomers due to that, so, many don't even try other IDEs -- not that it's not deserved either as they also do have a pretty solid package with the advantage of good marketing).
A nice exercise.
why is that non-trivial. convert int to string, split apart, convert single-char strings to int, sum
wat… what kind of out of date junk or arbitrarily and dubiously 'secure' system is that?
As someone getting back into python this looks really good. Thanks for sharing :) 
TIL about [PyCharm as a Python IDE for Generating UML Diagrams](https://waterprogramming.wordpress.com/2015/07/29/pycharm-as-a-python-ide-for-generating-uml-diagrams/).
That's the point he's trying to make.
 parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter) accomplishes (almost) the same thing, except no default shows up as (default: None)
It would be ten times more impressive if it listed numbers from 0 to 99.
I should have been checked that before, thanks!
i thought his point was that writing an algorithm in python the way you'd write it in C is bad form. my point was that calling the exercise non-trivial is silly because it seems very trivial.
Learning Python by Mark Lutz,. can't be any more thorough than that.
You won't get very far avoiding branching and looping constructs.
Our application typically sees on the order of 250,000 points that need to be plotted relatively quickly. Matplotlib is the problem, sure, but there aren't really any other good options for wx (that I've come across, anyway). PyQt has pyqtgraph, and potentially future support for [vispy](http://vispy.org/) if that project ever gets off the ground. My testing with pyqtgraph shows that it can easily handle on the order of 20,000,000 points without choking up. I got bored of clicking the add button at 128 sets of data, so it can probably support way more than that. I'll still have a soft spot for wxPython though, mainly because it's a great example of high quality, 100% open source, cross platform, community maintained code, and because I've used it for several years at this point. Who knows, maybe one day I'll decide to convert pyqtgraph into pywxgraph so I can switch back to wxPython.
He made both points :) quoting the exercise was sarcasm on his part.
Not sure if this matters, but there's a potential issue/bug if the stop method is called twice. 
&gt; actually, the PyCharm debugger and the PyDev debugger are the same under the hood as it was started in PyDev and is also used on PyCharm, the only difference is that on PyDev all debugger features are available)... This I did not know! &gt; shows that around 15k-16k users install it every month I don't doubt that it's still popular! I suppose I worded my inquiry rather poorly. I actually started out using PyDev myself, and it was certainly powerful and preferable to IDLE. But that was many years ago. I would wager the popularity is a result of its deep entrenchment in a vast number of "Intro to Python" tutorials back when it was the big dog. I just assumed everyone had moved on to more svelte PyCharm, etc... but I guess I'm just generalizing my own experience onto the masses.
This heavily depends on whether or not you are allowed to use pre-defined functions that also do not use for loops or if conditions. Or more generically, are you meaning no usage of comparison or looping control flow altogether? If you're allowed to use pre-defined functions, you can do a hell of a lot through functional iteration tools like filter, map, reduce, and others which are basically analogs to if and for within a functional programming paradigm. Or you could skirt the issue and cheat by pre-writing your own library that contains all the necessary flow control you want and simply call it from an external script. However, if you're going more BASIC than even this and restricting all structured comparison and looping, then by default python just doesn't do this. Some folks have built libraries that add labels and goto statements that act as standins for function calls, but even that isn't as easily versatile (though admittedly dangerous and highly unmaintainable) as what languages like BASIC would afford you because you can't really define labels for any scope smaller than an entire function with these libraries. Now, assuming you could inject fully featured labels and gotos into the language somehow (theoretically possible) you can still perform pseudo-comparison through careful manipulation of data structures and arithmetic to derive keys of comparison than can be appended to a given label to represent what might happen in that specific case. However, this also means having to define unique labels for every result unless the label system incorporated some shorthand for ranges, but that starts skirting on the border of comparison again since you're relying on the language to compare your key to an index of possible values. Said label/goto system would also probably need to have some call/goto-stack tools so that you could still afford *some* generality in code block definition, or else you end up with a cross product of all possible code execution paths in a single file. In short, non-trivial practically requires the use of comparison and sane flow control whether that's in the form of imperative ifs and fors or functional iteration tools.
okay, missed the implied /s
I'll (unabashedly) posit that you simply don't need one, because of Python's popularity on stackexchange. After you've navigated some introductory texts, you should be able to *start* anything you need, and the tips/trick/idioms come with naturally discovering them as you search from solutions. I realize that's not the answer you were hoping for, but I think it's a valid alternative.
Can you explain where you get the footage from? And how it works?
This is pretty cool! Could you expand on the python2 requirement/compatibility issue?
There's a typo — `fatorial` instead of `factorial`.
Bad bot
thanks, I tried to translate to english from portuguese, and forgot some variables in the translation, I´ve already fixed in the post. 
but the script still doesn´t work haha 
Okay, so does it fix your problem or do you have a specific question? Now that your code is valid, it does what it does. We don't know if it's the same as what you want it to do.
I´ll give a try
Glad you like it :) . I started this project using apache wsgi but when trying python3 I ran into issues ( http://devmartin.com/blog/2015/02/how-to-deploy-a-python3-wsgi-application-with-apache2-and-debian/ ). I haven't tried to configure python3 after that . I'll try to make the standalone demo compatible with python3 asap. 
Now it´s fixed 
You're taking factorials of negative numbers, which leads to infinite recursion (`-1` is not zero, so calculate `factorial(-1 - 1)` etc.). Try starting at `n=1`? I don't what `n` is of course.
 sum(int(c) for c in str(my_int))
Why convert it to a string when you can just mod by 10, add that to a running total, then divide by 10. 
No, it isn´t the problem, the problem that python can´t calculate element the way that´s already written, and I don´t know why. 
&gt; I just assumed everyone had moved on to more svelte PyCharm, etc... but I guess I'm just generalizing my own experience onto the masses. Probably... PyDev itself has improved quite a lot over the years too (it's a bit unfortunate that people compare PyCharm nowadays with the experience on the state of PyDev from XX years ago, not from modern PyDev).
yeah list comprehension makes that a snap
It worked Thank you so much !!
By reading a different, worse text containing less information than the official docs?
Thank you for pointing this out, I've rewritten it a bit more thorougly. The main reason of creation of this class is the idea (perhaps not new) to use stopwatch as context manager.
Thanks for bringing this up. It's a good idea. Not sure when I'll have time to look at it more, though. /-:
Nice post man. It's getting some attention on social media. But please, please, convert that Python 2 code to [Python 3](http://codinglio.com/category/python-coding-challenge/). It's 2017.
Yeah, they are shells. So why are you talking about them ?
Is basic syntax exercise 2 intended to be done with or without collections.Counter? import sys from collections import Counter with open(sys.argv[1]) as f: counter = Counter(f.read().split()) print counter.most_common(1)
Hey, Will. What skill level of videos are you looking for? I usually recommend checking out Udacity's courses. I think they do a great job of giving practical examples and have great instructors. The format is a little different from me and sentdex's 10-30 minutes YouTube style lectures... These are broken up into smaller chunks with quizzes and stuff in between. If you're looking for introduction courses then they have a couple of beginner Python courses in their catalog. If you're ready for something advanced, then I really thought this [Design of Computer Programs by Peter Norvig](https://www.udacity.com/course/design-of-computer-programs--cs212) was fantastic. Hope that helps.
Pick a project that is interesting to you, and seems within reach of your understanding. You'll learn the language much better doing something like that, than with practice exercises.
Understood. Thanks! Im trying to go througt the exercises just that i become more familiar with the syntax.
Yes, but other languages will execute them faster.
Turing completeness would suggest so.
+1
&gt; convert int to string user's input is a string
I teach decorators as kebab wraps. def wrap_kebab(f): def _lavash(*args, **kwargs): return "lavash", f(*args, **kwargs), "lavash" return _lavash @wrap_kebab def make_authentic_adana(): return "meat" 
What are the actual benefits of these changes?
Why doesn't what work?
Y'know, it's a lot easier to answer a question when we have all the information regarding the problem. 
That's because It doesn't work! In order to make it work you need to make sure it works properly.
Try /r/learnpython
I've always been partial to https://github.com/Frozenball/pytest-sugar but that's also in the console.
It looks like you need Numpy to run the program. It would be easier to help if you posted the error message you are receiving when you try to run the program or the fact that python 2.7 is not showing as being installed.
That's not correct. PySide supports up to 3.4, and there's a fork for 3.6: https://github.com/krrr/PySide I've built the above. And PySide2 is in beta-ish. 
Hi, I was not excepting an answer from you :). (first time on reddit ^^) Again, what I like about your videos and sentdex' are the fact that they are pretty specific. I enjoy the fact that sentdex focuses on python applied to finance and machine learning. So basically, I watch sentdex for python applied to finance and your videos to see advance technical aspects of python fundamentals, such as your video on classes or decorators. ( which you were right to say that one needs to watch them several times) I am aware of payed courses like udacity, but I very much enjoy independent youtubers who make specific non academic content. I'll take a look at Peter's work. Thanks again 
Serious question: how relevant is Python 3 now? Does it really take on by storm and replaces Python 2 everywhere?
You have literally not even tried. Also this is not the right sub if you dont know how2python, go to r/learnpython
if you don't use it we insult your mother
I'm planning on getting together with a few friends at PyconUK (in a few weeks) to built it up a bit more. I haven't shared the project publicly yet and am a bit burnt out right now 😅 there may be issues I'm not aware of that I can try an fix over the next few days. Please share your thoughts, would really appreciate it. Thanks for your help.
ah thanks man
that's pretty cool! Not quite what I was looking for, but it looks helpful. (drat, I'm on Windows though.)
fgrep "fromage" *
Because this thing only works with shells that store their path in .profile, .bash_profile, or .bashrc. 
If you open a Python REPL and type help(str), you'll find all of the core methods on strings.
Cheers friend! 
I still use it. As much as people complain about eclipse being "slow", I find pycharm much more abusive on CPU and memory than eclipse. The project we have at work is massive, so the difference is very noticeable.
Very cool. I'm totally going to use it. I also didn't know about qtpy. EDIT: It works. 6 lines of code; just need to redo my buttons now. Want to add an dialog for creating a custom style? :) try: import qtmodern.styles except ImportError: pass else: qtmodern.styles.dark(app) 
Looks interesting. installed it via `pip` and ran into this $ piper add "django" Traceback (most recent call last): File "/Users/christian/.pyenv/versions/3.6.2/bin/piper", line 7, in &lt;module&gt; from mrpiper.cli import cli File "/Users/christian/.pyenv/versions/3.6.2/lib/python3.6/site-packages/mrpiper/cli.py", line 17, in &lt;module&gt; from . import piper File "/Users/christian/.pyenv/versions/3.6.2/lib/python3.6/site-packages/mrpiper/piper.py", line 47, in &lt;module&gt; project = PythonProject() File "/Users/christian/.pyenv/versions/3.6.2/lib/python3.6/site-packages/mrpiper/project.py", line 47, in __init__ self.detect_virtualenv_location() File "/Users/christian/.pyenv/versions/3.6.2/lib/python3.6/site-packages/mrpiper/project.py", line 234, in detect_virtualenv_location if self.virtualenv_outside_dir.exists(): #outside File "/Users/christian/.pyenv/versions/3.6.2/lib/python3.6/site-packages/mrpiper/project.py", line 213, in virtualenv_outside_dir hashlib.sha256(self.project_dir.abspath()).hexdigest()[:6] TypeError: Unicode-objects must be encoded before hashing
Thank you very much for sharing! This is very useful. Think I know what the issue is, I'll patch, add a test for this case and publish the new version. Can you kindly try without the quotes?
Pytest html will generate nice reports our of the box, and it's also very extendable https://pypi.python.org/pypi/pytest-html/
I tried - `piper add django` - `piper add "django"` - `piper add "django&lt;1.11.0"` - `piper add 'django'` - `piper add 'django&lt;1.11.0'` and they all gave the same error
no worries man! :D
Quicker to fetch and iterate through large graphs, presumably? More in line with python 3's lazy loading ethos, I suppose.
Work on deep learning platform, not converting to Python 3. Good luck in school. 
Only trying this because I am learning python atm and want to test myself. Currently in the pooper. Dict = open ('dictionary.txt', 'a') User = input () Dict.write (user) Dict.close
What's the advantage over Pex? 
yeah this is kinda simialr to what i ended up doing but when i did do it my python would not separate the words in the text file and were all together and therefore when i searched for them in my python script it wouldnt not find it
Python 2 should only really be seeing use as legacy
Ok. Well just do Dict.write (user + '\n') for new lines. Or whatever. 
oh shit thanks man
FYI, Udacity is free. It kind've looks like it costs money sometimes, but really you only pay if you want one-on-one tutors and certificates and all that. But if you just want to watch the videos and take the quizzes then I believe all of that is available for free.
Yay! I hope it solves my "requests" problem
And for jobs, if you pick a project to work on, you can talk about that in interviews and place it on your resume as solid experience with the language to make up for the lack of professional experience coming from university.
Oh OK my bad. Will check it out
Completely different use case. As far as I can tell about pex, it's just a way to package your application and virtual environment into a zip file. The end result is a .pyz file (a .zip file, really) that contains all your program. The .pyz file requires an installation of Python on your computer though; therefore you can't use pex to send your program to a random use (who will not have Python) PyInstaller (and cx\_freeze, and py2exe) fill *that* gap. They freeze your program into an executable (and the executable only contains the .pyo files, not the .py files), together with any dependencies. The end result is a PE exe file (or macOS .app, or ELF executable), that can run on a system that _doesn't have Python installed_.
Working for me... This is great! :) $ piper add django Installing django... Collecting django Downloading Django-1.11.5-py2.py3-none-any.whl (6.9MB) Collecting pytz (from django) Downloading pytz-2017.2-py2.py3-none-any.whl (484kB) Installing collected packages: pytz, django Successfully installed django-1.11.5 pytz-2017.2 Package django installed ✓ Requirements locked ✓ Requirements updated ✓ ✨ Adding package complete
Take a look at https://rrighart.github.io/GA/
Pffft, you guys are noobs. I can answer questions that haven't even been asked yet. ;)
I work in bioinformatics, and I really like the exercises at "rosalind.info" because they aren't about learning any particular language but are instead focused on solving problems. You can probably find simple/ugly/brute-force ways to solve them, then move towards more efficient/elegant solutions, but the important thing is to get the right answer.
Pycharm can run the tests while you edit code. Have you considered using pytest-xdist to run across more cores?
Easy answer: get them to install the interpreter. It's free and takes less than 5 minutes. Very hard answer: use something [py2exe](http://www.py2exe.org/index.cgi/Tutorial).
Check out Py2Exe http://www.py2exe.org/index.cgi/Tutorial and PyInstaller https://pyinstaller.readthedocs.io/en/stable/usage.html. These will package up the interpreter as well as any used libraries and your script into a single executable you can share with your friend.
Oh, I agree, `#!/usr/bin/env python3` is the "right" way to do it in the general case.
You really overlooked Simpylchain?
You still need to manually install a python runtime on your machine before you can run a pex. 
Just what I was looking for! Thanks!
I'll say that if your interview doesn't pan out then you should let me know, because we would definitely be able to take advantage of your skills. Also, I'm mostly familiar with using pyvisa and pyserial for data collection, numpy and scipy of course for low level data manipulation, pandas for statistical and higher level data processing. Matplotlib and seaborn for pretty plots, pyqtgraph for fast embedded plots on a UI. Beyond that, if you knew the basics of web development, that can come in handy on occasion. It would be best to have good experience developing software more generally, like writing libraries, applications of different types, version control experience, documentation experience, testing experience, and exposure to systems for managing the product development life cycle (e.g. Jira). If you can do these things, you can learn any language and library. 
Good luck!
It's much harder to convince someone to install python than to py2exe your script to be honest. 
I'm having a hard time understanding how you have friends who would feel more secure running a *raw executable* a friend sent them on their machine than to install a very common and well recognized programming interpreter.
Have you ever met a non-it person? Copy pasting using right mouse button and stuff?
[Wow, 5 steps](https://www.ics.uci.edu/~pattis/common/handouts/pythoneclipsejava/python.html). It'll take you so much longer to learn how to use py2exe than it would to install Python on every computer you know. As for sharing, you still need to share a package. Either it's your 1 .exe and any supporting files, or it's one folder. Zip it, buy a USB, or share it with DropBox, either way equally simple. 
You can create your python files using whatever editor you want. To run the python file you can use the terminal navigate to the folder then type python then your file name. Eg python test.py
Thank you for this link. Much appreciated. I am assuming something similar exists for Adobe Analytics too. 
&gt; Write a program that asks the user for a number (integer only) and prints the sum of its digits Am I missing something? This doesn't sound non-trivial. print(sum(map(int, input())))
Thanks! I tried this out and got it to work after a few minutes
Sweet happy programming 
Yep
You would need at least an hello world script to run python...
What terminal emulator are you using in those demo images/animations?
Did you try it like that? Doesn't work. 
twitters API is really not very restrictive? Just use that, 30k tweets shouldn't really be a problem. you can look into the streaming API is high volume is a concern: https://dev.twitter.com/streaming/overview
I use PyDev for complex scripts/packages, Jupyter notebooks for exploring data and providing simple reports, and finally any text editor for one-off scripts. I know many people hate Eclipse but I haven't had any issues for years (I never used it for Java development). There are great plugins you can install besides PyDev. For example, I started using DBeaver a couple of months ago and really like it.
You can package interpreter into pex as well as all bound libs. So far pex looks like a superset. 
If it hasn't, is there a github ticket? Have you submitted a ticket? A pull request? Contributed to the conversation?
pyo vs py isn't really much of an advantage. It's fairly straightforward to obtain the py from the "binary" version. The self contained executable, however, is really the killer feature. Last I looked, py2exe was just Windows. Happy to see it expanded
Looks pretty, you just got me to finally install PySide2 via `conda` so that I can play. Edit: for anyone else: https://github.com/conda-forge/pyside2-feedstock 
Wow, thanks yeah I definitely could be interested in the job you are talking about. I'm currently employed, but I'm scared to stay in the HDD industry for too long since it's shrinking very quickly these days. Thanks for the advice. I use matplotlib and numpy a lot for the test modules I make and scripts I use to analyze/plot raw test data. But I've never used pyvisa, pyserial, or scipy. I have never worked in web development, just consumer hardware so far. Could be interesting to learn, I was doing an online node.js class for a bit. I definitely need to get better at testing code and managing versions and all that. I think I will definitely look into that before the interview. 
What's the advantage of PyInstaller over Cxfreeze? Is one more actively developed? Easier to use? Looking to package a Python3 app for Windows.
I can tell you that pyinstaller does a much better job of actually detecting and including dependencies. I recently tried both for freezing a multi-threaded, scipy based application and cx_freeze was a real hassle to get functional. Pyinstaller more or less just magically worked in my case whereas cx_freeze took hours of debugging.
Cool, thanks! [The project](http://github.com/manuelcortez/twblue) is Python 2 now, but uses Py2exe so looking for a new packaging tool for the py3 port. Any useful info on porting py2exe setup.py scripts to PyInstaller specfiles?
What a great explanation and practical example
should be a github repo
You should know the differences and how to convert them at the very least. I use 2.7 by default because of some libraries I frequently use but usually end up writing them in a way I can use both. 
Here's what I did before my chromebook killed itself: 1) Download and install crouton: https://github.com/dnschneid/crouton 2) Install an ubuntu image 3) enter this image in the command line 4) Install jupyter-notebook 5) run the notebook and access it via your ChromeOS chrome browser at the provided ip address &amp; socket. this means I can cut out the overhead of actually having to run x and the lack of responsiveness that that implies in the editor, so I now have a native UI and local Python environment.
Cxfreeze can't bundle everything into a single exe file, which is why I ended up using pyinstaller. 
pay negotiable 
Hallelujah
Testing, documenting, and packaging your code is a very useful skill to have in any language. While the details and methods will vary, the problem solving skills and analytical thinking applies universally. It may not seem like that important, but consider it this way. Testing shows that you can think about what your code is supposed to do, that you can verify that it can, and you cab verify that it handles bad situations well. These are tough engineering problems, other engineers have to refine and validate their designs to much higher standards than software usually is held to. This is an amazing skill to have in any engineering discipline. Documentation is one of the main ways that a programmer communicates with users. Your docs should be clear and readable, with plenty of examples solving different problems. Being able to write good docs indicates that you are a good communicator, and someone who cares about their customers. Packaging is how you get your code to your users/customers. If it doesn't come in a convenient, simple package then people won't want to use it. You should be able to present a package to your customers and be able to justify why they need it. While this sounds mostly like salesmanship, in software it usually ends up being a highly technical problem figuring out how to make it work for everyone. Users don't care that it's written in Python, they just want software that "just works". Trust me when I say that this is far more difficult that it sounds. --- Again, the specific libraries might be a plus for specific jobs, but most of them are pretty simple to figure out. Pyvisa and pyserial amount to connect, read, and write commands for the most part, any EE can figure them out in an afternoon. Scipy is more specialized, we do signal processing and stats, so we use the scipy.signal and scipy.stats modules. As for web development, I only bring it up because it can help you branch out into other fields, and because web sites are usually easier to distribute these days than traditional software. If you can put together a dashboard of production metrics or something, it might have only been 100 lines of code but it'll be worth 100,000 lines of "real code" when showing off to upper management. --- And like I said, if you are in the market for a new job, just shoot me a message. I don't think we have any positions open right now, but we are looking to open several more over the next few years. We're actually a somewhat related industry, if you're familiar with the HDD industry then you've probably heard of molex connectors. Well, I'm part of the high speed products division. We make a lot of HDD connectors, among many other connectors and assemblies that go much faster than the latest SATA spec. I'd say you'd have a pretty good shot at making it to an interview with your background. 
Very nice. Would you consider also having support for `Qt.py` instead of just `qtpy`. They're similar but using `Qt.py` gives one py file to distribute and it ties into a lot of studio pipelines now. I contribute to both qt projects and they definitely each have their pros and cons.
I would possibly consider starting mostly from scratch. With pyinstaller you literally just need to give the target .py file and it will generate a spec file based on that. That spec file will largely be cutomizable pretty similarly to what you already have in the p2exe config. The reason I would suggest starting from scratch though is that I believe pyinstaller will automatically handle a lot of what you have functions designed to handle. I mean you could probably tweak what you have and it would work. A lot of the constructs are very similar between all 3 of the tools. But if a lot of what you have in there is redundant, I think going minimalist is going to be easier to maintain.
However you can generate installers with cx_freeze, whereas I haven't seen a built-in option for pyinstaller. Also the single exe file isn't always going to work when the folder aproach does. Some multiprocessing stuff in particular would work out of the box for me with the folder option but not with the single file for pyinstaller.
It's sort of ungainly to use GIL side stepping threading. I generally follow two options. I either use `gevent` or async (Depending on version number), or perform IPC using zmq. I've programmed game daemons using flask. The REST interface is a flask instance. I use async/gevent if there's bottlenecking due to visitors/second. Then ferry data to a separate daemon that implements threads. The upside is that the game daemon can exist on the same machine or on a seperate server. 
This 1000x, especially if you are like me and you learn by going "Hmm, i need to do X. What is the best way to do X?" Rather than going through a book that teaches you how to write an application that does something I dont care about, and I will likely not remember anything I did in it.
I can't recommend that as a real fix as you will still need to monitor and tune the frequency of interventions and you might never get it right. BTW, it should be `plonectl restart`. It might be a valid workaround but you should keep investigating by checking the errorlog, the log files, adjusting log level, running strace, etc. to see where your plone instance goes wrong. 
From my experience the only difference is that PyInstaller works.
Any proofs?
How to run Python on a Chromebook or online from a Chromebook is a frequently asked question at /r/chromeos and there are many ways to do it. Here's a recent thread on the topic: https://www.reddit.com/r/chromeos/comments/709jk6/is_it_possible_to_work_on_python_and_r_in_a/ 
GIL is cringe topic for new people. 
Thanks for the thoughtful, insightful response!
If you're using Pex, you're likely not trying to create standalone python executables-- that's why I love PyInstaller
The #1 thing that stands out to me in this release: Python 3.6 support! I had to step a few projects back to 3.5 due to this not being supported before, since they were internal tools and many devs didn't want to install/use python+pip manually. Thanks to all that contribute to the project!
More cores won't help, this is a Python interpreter talking to some external hardware that actually does the test, so there's no way to speed it up. I just want to display a progress indicator (step 1/12 reached, then step 2/12 reached, etc.) during a test. There is no way to break up each tests into smaller bits since there is sequential dependency of operations within a test.
Thanks but I don't want a nice report, I want a UI that updates dynamically while the tests are running.
I think you're right. Sidestepping GIL with threading is pretty bad. That is an interesting proposal. It feels a little heavy, but makes sense. Thanks.
What kind of processing is it? The best approach depends on what you're doing. Heavy cpu-bound processing shouldn't be written in pure python, usually. That's where the GIL will bite you. If you can find (or maybe write) a library that does the bulk of the processing in C, and load it with ctypes or cffi, you get automatic release of the GIL, and the code can run in parallel just fine with a simple threadpool (as long as you don't keep going back and forth between C and Python, which adds a lot of overhead for the release/acquire of the GIL). If C is not an option, the only way to do pure python cpu-bound parallelism is with process pools. If the work is IO-bound, though, everything is much easier. Threads will work fine, and you can squeeze even more concurrency with asyncio, gevent, and stuff. Anyway, from an architectural point of view, you should always have services focus on only one job. Web services should focus on handling requests. Queue processing should be its own process. 
I use pythonanywhere.com. its an online ide.
wew
I guess my problem right now is ( And I just started today ) that I don't really know what I can do with Python yet. I have some ideas, but not sure if Python will do what I want. 
Just posted this on the other thread, but in case anyone here is interested: To get tweets beyond the first few hundred, just do date range searches by constructing URLs (a month at a time, say). m.twitter.com is easier to parse.
Wow, this is really great. Was expecting to have to poke at it a bit to get it working but instead it just worked ... dropped it into a new branch of my ~5k LOC project and it just worked right away. Will do some more testing with it tomorrow when I'm not half asleep. Cheers!
`ss` and `ll` are bad variable names. They don't convey what the variables contain. You're going to have more than 140 characters if you end up having more than 9 chunks. Why import `os` if you're not using it? Splitting tweets kinda seems to be missing the point. It's not a blogging platform; if you can't say it in 140 characters, you probably shouldn't be tweeting it.
you cannot include an interpreter in a pex file
If that's your own computer and your worried about messing it up, maybe get a raspberry pi.
[removed]
What's missing? Any actual discussion.
Here's a fun little project for you in relation to data science: Collect the name , count and file sizes of all files in a directory on your computer. Export those as an Average file size, a Minimum and Maximum file size, and the number of items in that folder. Once you've got that done, include a functionality that can list the documents grouped by their extension, size range, and / or modified time. While this seems quite advanced and will probably take some time to get working completely, it will get you into the mindset of taking it slow and implementing small parts at a time. 
We covered this on the Python Bytes podcast in case you're interested in some commentary on it: https://pythonbytes.fm/episodes/show/42/behold-the-python-2-death-clock
&gt; Contributed to the conversation? I drink pepsi. Got that conversation joining shit covered.
There was already a github issue on requests as far as I remember and also a work around that didn't work for me. Further as I am in the r/learnpython camp I wouldn't presume to be able to submit a ticket at the required quality. 
Hmm i'm not sure what you're talking about
Obligatory https://www.mjt.me.uk/posts/falsehoods-programmers-believe-about-addresses/
Well, you can do A LOT in python. So, what are your ideas? There's got to be a way to use python in at least one of them
yup this is a very good reference for beginners
thank you very much
To give you an example of variety, I am writing a python based discord bot at the moment that grabs info from various sites on demand, watches an api for updates, and probably much more down the road. I have seen full games made in python (a game I love, and have literally played for years, eve online at one point had a large chunk of its code base in python), there are web frameworks (something I might mess with).... It is a full featured programming language, the sky is the limit.
You are applying to a job very similiar to mine. &gt;classes/functions/decorators/numpy/matplotlib/etc It might differ from your workplace, but when dealing with hardware testing functional programming can be very handy. So I would take a look at first-class citizen, higher order functions, first-class functions and so on. Also look into (de-)serialization of data and how to set up communication with hardware via ports. You will most likely need to use and/or implement context manager for connections so that is always nice to know too. Now talking about the "very good with python" part they can ask you a plethora of things here, but it is very likely that they ask you about how to make loops pythonic or preventing using them altogether. List comprehensions, generators, magic functions, how lists and strings behave with +/* operators were all part of my interviews for example.
Hi, sorry but this is off topic but i have been following your python beginners series and its amazing i have been trying to learn python for sometime now and i feel their is a lack of project based tutorial where we noob can learn how to start a specific project,plan ,structure and solve problem something like 3d modelling tutorial where viewer actually solve problems with tutorial maker.so can you please start a series where you do a project and actually teach us your approach would be awesome to see how pros approach problems and how they solve it! thankyou
Maybe it's me but I find that the implementation of song.play() is non-trivial when going to a concert.
anyone succeeded in making an exe with sftp code?
You are missing the important part: from musician import Musician from musician.life import afterparty for member in band: musician = Musician(member) if musician.role != 'drummer': musician.have_fun(afterparty)
gevent is super awesome and is the best way to do this. use gunicorn with gevent worker for your whole app and then implement any specific gevent features in your app.
I'm a beganer with no program experience。where should I get start？
Seems like nowadays you can just use a cloud service to run what you need and your computer is just a terminal. 
Miguel Grinberg discussed this topic in on of his Posts and described 3 Ways to put your Chromebook into a developing maschine. https://blog.miguelgrinberg.com/post/using-a-chromebook-for-web-development
It's easy when you don't know anything about it.
No, you'd first have to have access to a Python interpreter; be it a local CPython/JPython/IronPython installation or https://repl.it/languages/python3
Sounds great. The web browser is the new terminal...
I think the perfect book to fill the gap would be Python Cookbook by David Beazley and Brian K. Jones, which is considered intermidiate level and fluent python refers to a lot. 
I'm not sure if this is what you're asking, but I've used paramiko in a project packaged together with pyinstaller and all is good. 
You can disable stdout capturing and use print statements.
What kind of positions are open? I've been looking for a job since April. I'm a mechatronics EIT with a mechanical masters from a robotics lab, and I also use Python on an almost daily basis, for everything from regexes to automating KSP to numerical simulations. I've interfaced with external devices (PySerial mainly), and written a driver and a few libraries (two of my packages are on PyPI). I obviously use version control and try to document as much as I can. (https://github.com/masasin) On the other hand, I have no experience with web or JIRA...
Automate the boring stuff https://automatetheboringstuff.com/
Obviously you have not met non-IT people. I mean I get it, it is easy. People /should/ be able to get it. 
Thanks!
We're python3 only. It's not a _masive_ codebase as such, but we're around 200k lines of python I'd guess. Some parts are mypy, some are the older "assert the heck out of things" patterns, all of it is python3 only, some parts are python3.3 compat, others are 3.6 -only, depends on where it's supposed to run.
That sounds good. I tried making a pysftp program but it did not make a working exe file. Maybe I will give it another go in the future.
Right, it's a very good start for NLP.
Hey, you can use python as server (backend) and for frontend you should learn some HTML/Javascript/CSS. For hosting, I use Heroku generally. It supports free python (ruby node.js etc. as well) hosting with limited server settings. But it is enough to starters. 
Learning Python by Mark Lutz will be good for you. It not only elaborates about language but also introduce OOP. It contains exercises that will help you to become familiar with language.
There are Python-in-a-browser sites that are based on Brython. For example, [Brython editor](http://brython.info/tests/editor.html?lang=en) and [Run Python](https://runpython.com/), which is designed as an IDE with a Github backend.
PyInstaller can produce single immutable self contained dependency free portable exe files using the --one-file option. CxFreeze always produces a directory with many files and dlls. It makes cxfreeze harder to make and deploy and update stand-alone tools or utilities for Windows. For example, it also requires to also build installers, updaters and uninstalled instead of simply copy/replace/delete a single exe file. If you are building a huge monolithic program or application, sure cx_freeze is fine for that use case. But if you want to build and distribute small easy to deploy and run tools and utilities or may be part of a larger package. (I've used pyinstaller to create a self-updater for an online game for example). 
Couple of things: 1. When initialling the board you could use list(range(9)) 2. Arrays start at 1! 3. You don't need to return at the end of a function (implicit return None) 4. Think about how you could optimise a lot of the hardcoded checking using ranges 
That's just cheating.
https://www.reddit.com/r/GalliumOS/
I'm the technical guy doing interviews at our company, and I'll toss in some unwanted advice. For jobs, I value you _delivering_ a side project far more than whatever exercises you can do. If you can manage packaging, wrapping up, cutting features and saying "this will be done later", documenting, and all the other things in an OSS project, you have _valuable_ skills to me. And, to students. Don't bother interviewing if you don't know how revision control (git, hg, whichever) , a diff-tool and your favourite text editor works. So. Pick a project, do it, and do it to the best of your ability. I will ask for a code sample, and if you can point to a project on GitHub, Sourceforge, GitLab, or wherever, it's a _huge_ bonus in my book. Especially if you've done more than a single 0.1 release and then abandoned it.
https://www.codecademy.com/learn/learn-python
That is a really good approach, thank you! I will work on those exercises
me to. No previous programming background. I find it very interesting. Good luck mate!
support 【no、fixed 、dynamic pool】=&gt;Django framework.
Fuck off mate. 
no, that just the base libs. even correctly using a web service wouldn't be cheating, it would be job done, enterprise style (here's the invoice ;-) although it needs a bit more work: import sys def clean(s): return ''.join(c for c in s.lower() if c not in '!.,?"\'-`~') # tweak as needed with open(sys.argv[1]) as f: c = Counter(clean(s) for s in f.read().split()) print(c.most_common(1)[0])
I like how easy this is for beginners but there is a 'but'. I've been using NLTK for years, I love it. The documentation is vast and up until about a year ago it was the 'go-to' for NLP tasks. But since then, spaCy has since replaced it as the go-to. Not just because of it's intense speed, but because of how easily it is to use it for Deep Learning projects. NLTK will always have a special place in my heart, and if I'm looking for a quick fix to an NLP problem, I'd probably use NLTK. But for the most part, beginners should use NLTK as a guide to help them understand the fundamentals of NLP then use that knowledge with the more widely used spaCy.
Honest question that isn't trying to be hostile: Why would I use this, when all I need to do to get a similar (and more tailored look) is apply a `Material.theme` and some simple other ui tricks to my project? One of the greatest strengths of PyQt is their Designer program which lets me customize the look of the window before implementing any logic, all without writing a single line of code.
**For Hire** I am in the process of graduating from my Masters in Computer Science. Looking for a software dev Python role, I have experience using Django and the Django REST Framework. I'm looking for roles based in London, UK. I'd also be interested to hear any suggestions about any interesting Python based companies in London to look into. Thanks!
[removed]
To be honest, this is quite overcomplicated for what it's doing. It would be very easy to make a mistake in your iteration/state loops, and you have to maintain the numbers of songs in each play group in multiple places. import sameoldconcertshit as socs import time from songs import setlis from geolocation import current_city def pop(seq, span): '''Pops span items off the head of a list, returning a sublist.''' popped = seq[:span] del seq[:span] return popped def main(): socs.enter_stage() # Play a few, nonstop. group = pop(setlist, 3) for song in group: song.play() socs.tell_audience_youre_glad_to_be_back(current_city) # Play a few, with costume or rest breaks in between. group = pop(setlist, 4) for song in group: socs.leave_stage() time.sleep(60) socs.enter_stage() song.play() # Power through the remainder if it's a long playlist. for song in setlist: song.play() socs.say_goodnight_and_i_love_you() socs.leave_stage() if __name__ == '__main__': main() My other comment is about your comments. Strategy in comments, tactics in code. A comment should not repeat what the code is doing literally, it should explain what the code is intending to do in general. If the intent of the code is easy to read from the code itself, don't just repeat the names of the functions. For example, `socs.leave_stage() # gotta leave the stage` is just redundant. Check out /r/learnpython for language ideas.
It think you could use a: while i_cant_hear_you: print("How y'all doing tooniiiight?")
Has anyone succeeded in shipping a Django app or know of an example ? thanks
The code looks fine, just make sure your indentation is correct: def fib(n): if n &lt;= 25: if n==1 or n==2: return 1 return fib(n-1)+fib(n-2) return str("Enter a number smaller than 25.") 
Living the --onefile --noconsole life
Have you seen [vex](https://pypi.python.org/pypi/vex) or [pew](https://pypi.python.org/pypi/pew/)?
In that case, you probably wouldn't mind sharing your knowledge with OP. For a genius such as yourself, that should be a rather simple task. :p 
Try this: https://github.com/pyinstaller/pyinstaller/wiki/Recipe-Multiprocessing
[removed]
There's a perfectly good solution to fibonacci in the sidebar of this subreddit. Your approach uses recursion, but there's really no need to. 
You might be missing the n=0 case of the website.
Thanks! If you find any problem just raise an Issue on Github.
[removed]
Just report as a spammer, which gives you a convenient link to block this person.
For PyCharm, we have a series of Getting Started with PyCharm videos on YouTube.
Nope! I had never seen them. Pew seems more like this, though. Thanks for sharing.
maybe some errorr handling, or a loop that loops until you input an integer (empty string to cancel) ?
Would Django not be a good choice? https://www.djangoproject.com I'm new to this so I could be confused on use cases. 
r/learnpython
Yes django is a good choice of course. By the way Flask or bottle frameworks can be used as well. They are much easier to learn for me. But django is much more comprehensive then others.
Can't wait until cloud computing will be strong enough for that 
I was waiting for the pedants. XD Love it. edit: show that I am enjoying the criticism and how he/she takes my good natured fun post and tries to make me sad.
Does anyone know where I could find a PyInstaller .spec script for Mayavi and its dependencies (VTK, PyQt/PySide, etc.)? In the past, I've grabbed a Python 2.7 of PortablePython and pip installed everything I need into that directory. However, this only works for Windows. I'd love to have a PyInstaller script that allows me to generate a simple install package for Mac, Windows and Linux, preferably under Python 3.x ...
VTK can also calculate surface areas and volume of meshes: https://www.vtk.org/doc/nightly/html/classvtkMassProperties.html . I have no knowledge of a python package that can calculate the second moment of area. However, Rhinoceros can compute these properties:http://docs.mcneel.com/rhino/5/help/en-us/commands/areamoments.htm . You can freely download a trial version that will work for 3 months. 
It is for some of us. I understand that your use-cases may be different though.
You should mention you are running in developer mode to do this, as it will affect the security of the system. I am not saying don't do it, but it should carry a disclaimer similar to jailbreaking a phone or games console.
`py -m pip install beautifulsoup4` should work if you have "add to PATH" checked.
Works for me. def fizzbuzz(num): fizz = 'Fizz' * (num % 3 == 0) buzz = 'Buzz' * (num % 5 == 0) print(fizz + buzz or num) def main(): for x in range(1,101): fizzbuzz(x) if __name__ == '__main__': main() 
Hit up /r/learnpython to get a better idea, but try breaking down the problem and you'll find tons of resources. You want to make an app so find a way to port your front end code to a server or a mobile app. You want to track numbers across sessions so look into interacting with a database or a fileformat like JSON. You want to find nutritional information so look into using `requests` to make API calls to a given site, or `beautifulsoup` to scrap the HTML pages. I'm the same way in that reading docs is way worse than using an app and tweaking it, but you'll need to get creative with this specific idea.
I have mostly experience with Flask and Django. I've found Flask to be easier to get into and less work to set up and manage projects for, but Django to be more feature complete. Of course, there are many extensions for Flask available that cover most if not all of them. I'm writing a framework myself, inspired by Flask and Django, geared towards making simple dynamic websites extremely easy to setup. I'm rather strapped for time at the moment, but I'll release it on GitHub when I'm confident it's ready for experimental use.
What message do you get if you simply type the command "python" at the prompt? 
Are you using Jupyter notebooks? It doesn't get easier than [ipywidgets](https://github.com/jupyter-widgets/ipywidgets). Typically one short line of code to add a slider or other UI control. See the [example here](https://github.com/jupyter-widgets/ipywidgets/blob/d19d7b612f5514e31a4dce9123ac782407003858/docs/source/examples/Beat%20Frequencies.ipynb) for a basic template.
Once it can run high end games I predict that'll be the time where most home computers will be mainly terminals to connect to some cloud service. But I'm sure they are good enough for most non gaming I do, I just haven't really checked out using an cloud IDE yet. But I use Google drive and it's various tools for pretty much everything school related 
Yep, been waiting for this too!
what you mean you can't get python to work? You getting an error message when you type python into the terminal? If so, paste it here
i think he just wants to check when n=6 tho
Consider a solution with way less magic: https://pypi.python.org/pypi/pynsist
I think there's an example widget in the matplotlib gallery that does exactly what you want. Check out the source code for that, it's probably really easy to modify to fit your data. 
"python is not recognized as an internal or external command, operable program or batch file.
"python is not recognized as an internal or external command, operable program or batch file."
negative, does not work.
so you dont have it installed? Try the windows equivalent of which python
Well his code works for n=6, and he asks why the website doesn't accept it. So I doubt that.
no i have it installed... python 3.7 ... c/users/appdata/local/program/python/python37
Python isn't in your path. Manually add the python root directory and the python scripts directory to your path to resolve the problem. 
tell us what's your opereting system is and error mesage after you type: python -m pip install &lt;something&gt; and pip install &lt;something&gt; after that we will help you :) 
show us the output of ```echo %PATH%```
Just to further what Krieger said: on Windows you have to add: 1. The base directory, where `python.exe` and `pythonw.exe` live. 2. The `{base}\Scripts` directory, where `pip.exe` lives. to your path.
Doesn't Nvidia already have a cloud gaming service like that?
Have you checked "Add python to PATH" in the windows installer? https://imgur.com/wfdDFvN https://docs.python.org/3/using/windows.html#installation-steps 
So it does! Looks like I had a parenthesis in the wrong place. I think at the time when I wrote it, couple of years ago, I had just discovered divmod so wanted to use it somewhere. No other reason then that. Thanks for the spacing reminder. Easy to forget while replying to these things from a phone. BTW I tried to add the spacing but it was messing it all up. Probably easier to do on a PC. Oh well. 
what do you mean by adding those two items to my path? via environment variables?
Yes, just append them to the system environment variable %PATH% using semicolons as a delimiter 
if I have the time I will try this looks really cool ! :)
yep, made sure to do that
I've done that, to my path variable ... C:\Users\blackbelt21\AppData\Local\Programs\Python\Python37;C:\Users\blackbelt21\AppData\Local\Programs\Python\Python37\Scripts no luck still 
What error message are you getting? 
&gt; "python is not recognized as an internal or external command, operable program or batch file. 
As far as I know, material theme is for QtQuick, not the “old” QtWidgets.
Windows 8.1. "python is not recognized as an internal or external command, operable program or batch file.
Are you running command prompt as admin or your own user account? It sounds like you have everything configured as directed in this post. If that doesn't work, you can work around it by changing to the actual python directory and running python directly from that location. You will need to type out the full path to your script and any scripts that use os.getcwd() will need updating.
How does it compare with [conda constructor](https://github.com/conda/constructor)?
[removed]
You will need to restart your console window if you haven't. The variables get loaded at launch, so it won't immediately see any changes. Also if you added it to the user path and not the system path make sure you aren't running cmd as an administrator. 
https://comedyfestival.files.wordpress.com/2017/06/one-million-dollars.jpg
yep, tried that ... didn't work.
tried both ways.
The `%` must go directly after the string. The way you have it it's after the list. You can't apply it to a list of strings like that. messages = [ "So %s, Better Sunday adventure: Bottomless mimosas at Mikes Chicken and Doughnuts, hot pilates, churching it up or being stuck in an elevator with George Clooney?" % (name), "%s, lets just skip to the important stuff. What's your favorite Spice Girls song" % (name), "I just saw the best upsexy ever", "I want to paint you green and spank you like a disobedient avocado.", "Do you peel a banana from the top or bottom?", "You don't know how many times I had to swipe left to find you!", "Do you think love is real?", "Two truths and a lie; ready. set. go!", "You can only keep one: Jon Stewart, Stephen Colbert, or John Oliver?" ] Also: You can split long lists over several lines to make them easier to read. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Not a book but give codecademy a try. It helped me learn the basics of python and now I’m using python to do machine learning for my internship.
Put the whole pip part while installing. Instead of 'pip install beautiful soup' do c:/pythonx.x/scripts/pip.exe install beautifulsoup. Do you copy? 
Just a side note, when you do get this to work, take a look at memoization to dramatically decrease the time complexity. 
I don't know, do they? There have been several attempts at it, have yet to see one which actually does it without destroying the feeling 
wooooooooooooo!!! THANKS SO MUCH!!!! 
I can vouch for this approach. ipywidgets is very capable and can handle this very easily. However, if you need something running out of the browser I'd recommend PyQt. It's pretty simple to get a simple interface put together with a couple sliders. I could probably throw the UI together in &lt;10 minutes.
Hahah, Happy to Help, what are you scraping btw? There are some Java Scripted sites you cannot scrape! Good luck
Post the method, I'll disprove you right here and now.
Learning python for this time. 
`py`, not `python`.
beatport 
Maybe you just want [GeoGebra](https://www.geogebra.org/)?
Ah, it's a decorator-decorator? `with_signature` says to me "The decorated function has this signature", whereas your decorator seems actually to do two things. I would be tempted to split these two use cases into separate decorators; one for modifying a signature, the other for "flattening/deferring" the decorator. 
[I am using this!](https://www.udemy.com/python-the-complete-python-developer-course/learn/v4/)
What is Zope?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Alternatively use new-style formatting to avoid duplication of parameter insertion. messages = ["So {0}, Better Sunday adventure: Bottomless mimosas at Mikes Chicken and Doughnuts, hot pilates, churching it up or being stuck in an elevator with George Clooney?", "{0}, lets just skip to the important stuff. What's your favorite Spice Girls song", "I just saw the best upsexy ever", "I want to paint you green and spank you like a disobedient avocado.", "Do you peel a banana from the top or bottom?", "You don't know how many times I had to swipe left to find you!", "Do you think love is real?", "Two truths and a lie; ready. set. go!", "You can only keep one: Jon Stewart, Stephen Colbert, or John Oliver?"] random_message = random.choice(messages) print(random_message.format(name)) Using % this won't work because if you insert a variable without a placeholder you'll get a TypeError, but the {} and .format function gets around this.
hey! I'm a drummer... :'(
it was a blogging platform with tje first NoSQL
I appreciate the link, but I previously attempted that as well as a number of related fixes based on various freezing packages. None of them was able to get my application working for single executable. However, the single dir form worked fine and was acceptable in my circumstance. 
Jupyter works! but I got some problem with time, it takes some time for plot to be shown
Zope is as old as Python ... Also Guido worked on it https://github.com/zopefoundation/Zope/graphs/contributors
Thank you, I wasn't on my laptop when typing that comment.
Thank you!
Seems like good bait to lock yourself into proprietary packaging system. Also, not the same thing as pynsist: constructor is just a way to bundle conda packages. Not for apps.
me too mate, that's why I know :-(
*group hug*
Sorry, I was offhandedly suggesting a "better" name for this package. Trying to keep in the vein of obnoxious "py" naming. 
Python -m http.server 80
It was a blogging platform in the sense that django, rails and node.js are blogging platforms.
probably should have said CMS
A platform for developing web applications with a built in database that can store python objects directly. It can also work with sql databases. It was before all the new platforms and has been an inspirations for most of them in some way.
Actually, first he would need to have opposable thumbs. Then working digits. Followed by a digital computing device of some kinds.
I've been working on a telegram bot for controlling my reports at work so getting notifications if something hasn't ran that should have and then the ability to re run any reports that are needed and restart the celery service if it goes Pete tong
That would have been closer. But it wasn't that either. Plone is a CMS built on top of Zone. 
I'm happy to answer any questions.
You need to build it on linux/mac. The qt and vtk libraries play nice. I can't say the same thing about numpy mkl
That is actually kind of disgusting. If you enjoy something like this, you probably love old-school c, where failure is indicated by a function returning a magic number(or not returning a magic number, depending on the function). There you don't even have to explicitly ignore errors, you just don't write the code to catch and evaluate to return value of the function call. So much easier :)
Oh dear, you are correct! How could I ever miss that potential problem.
nvidia does and its pretty decent last time I tried it. If you do fps though be prepared for input lag.
I don't know, maybe being able to treat any class/instance as a `dict` using `instance.__dict__()`. You can dig all the way to bedrock with it.
That it comes pre-installed on Linux distributions.
Haha, I rarely get to use it. Pretty much just when I'm writing a quick script to test something. We tend to have pretty messy data where I work so sometimes I don't want to have to make sure every little thing gets parsed nicely, and just want to see if what I'm doing overall is working. Oh man I didn't know that about C. That's real gross. 
This would count "were" and "we're" as the same word (its and it's, etc.) which is probably not intended. def clean(s): return s.lower().strip('();:!.,?"\'-`~') This might work better?
There was a rather long period of time where basically all software was written like that. The first language to have exceptions was PL/I in the 1970s(i think), but even a long time afterwards this was the standard. I think structured exception handling is one of the few(maybe the only) concept in modern programming that nobody, in their right mind, disagrees with.
You might also like https://docs.python.org/3/library/contextlib.html#contextlib.suppress which is a nicer way for the same try/except/pass idiom. In general it is very bad to do `except: pass` (ignore all exceptions). It makes debugging harder.
Good luck! /r/watchpeoplecode
It sounds like these tests which go out and manipulate the hardware aren't quite unit tests, and maybe they should go somewhere else. How much functionality of `py.test` are you actually using in these tests? Are you just using `py.test` to run them? If its the latter, then why not put these integration tests into a normal python script and add `assert`s and print the progress as you go?
This feels like someone announcing the latest release of COBOL. Is anyone still using Zope in production, other than big enterprises maintaining legacy apps?
[removed]
I loved zope and used it, but it was not practical for large scale. It had a lot of really cool things. User management built in, among other things. I love that it's still out there. It feels like and old friend. 
This one works well and has saving and a terminal to run your code https://repl.it/languages/python3 
You did'nt mention that this whole problem could have been prevented: &gt; You may sign your uploads with GPG using the "--sign" argument to "python setup.py upload". https://pypi.python.org/security 
Well, it really helps, and should be necessary actually. Anyway, signing the packages would not have prevented users from installing the fake packages. The attackers did not replace the files, they just uploaded files in a different context (a different package name). Still, your comment is interesting, and I should have mentioned that, you're right.
&gt; So y is a 2-d array because of the None use while x is a vector. Yes. &gt; How to read? Just check the length. len(x.shape)=1, len(y.shape)=2 
Seems like someone invents this every month. As usual, no, I don't find it pythonic. 
I guess I was asking the rules of using None. One more example: z = x[None,:] z array([[ 0. , 0.25, 0.5 , 0.75, 1. ]]) z.shape # return (1,5) It seems None is applied to row in z's case? 
Using pip, use the `--user` flag. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I manage a few Plone sites. I hate Plone/Zope so much.
Thanks for the feedback! 1. That's a good suggestion. I just implemented this. 2. Could you explain this please? Don't python indexes start at 0? 3. Didn't know that, thanks! Implemented this for the print_gui() function that displays the tic-tac-toe board. 4. You're right, there was some redundant code in the check_winner() function.
I don't like this `obj = {a : 1, b : 2}` obj.a.a should not equal None, it should throw a KeyError it should only equal None when the value is actually none `obj = {a : None, b : 2}`
There's a handful. I've seen multiple implementations, and I think this is the most Pythonic. Rather than going with a standard answer, you could provide actual feedback. I guess you gave up on a real problem in Python (handling nested objects)... `{}.get("some_key", {}).get("some_other", {}).get("yet_another")` is crazy.
Yes, the None let's you fake a specific dimension. It's very useful when you're trying to divide an (N,3) array by an (N,) array and you want to do it row-wise.
I really, and sincerely, have to give twilio credit. They have the best blog posts about using various pieces of web tech that I might never get around to using. And sure, they are all wrapped around their "send an mms to twilio and get back", but it's fine and it's cool and it's accessible.
Thanks, I will keep it in mind and reconsider. It would be more like javascript. As for the background story, I think when we go this way, we usually just care whether something is there... or not. That's when even `obj.a.a` would be valid. 
It only works in javascript because of the difference between null and undefined. In js `obj.a.a = undefined` This way you have an actual difference between: 1. value is exists but has the value of null 2. value doesn't exist When you set both to none you make it impossible to distinguish the two
Thanks for the quick reply! I have brew installed, but not pip.
If you are using python3 on a mac, it comes with pip, but the command to use it is `pip3`.
How is that a real problem? Your solution is just a shorter and more limited way of normal nested dictionary access. try: result = data['a']['a']['a'] except KeyError: result = 15 I for one see no problem to be fixed, especially not in a way that limits me to string keys that don't start with numbers and don't contain illegal characters like spaces or punctuation. 
&gt; Could you explain this please? Don't python indexes start at 0? You initiallised the tic tac toe grid from as 1 to 9 instead of 0 to 8 but that's just me being pedantic. 
Gotcha. It did work for me but it's definitely quite a bit of pain to package things sometimes.
So what happened? Please help us to help you, we're not mind readers.
Is there any particular reason that you are running the first alpha release of 3.7?
http://www.nvidia.com/object/cloud-gaming.html
Ah I see. Yeah, that was more of a design decision. Figured most people are more familiar with the 1-9 layout of a keypad versus a 0-8 system, and wanted to maintain consistency in the code as well as the user output.
End of an era.
How is it proprietary? It is open source, and very easy to host your own package repo.
A gpg digital signature uses a key pair that would have been unknown and therefore _detectable_ before installing... but you are right, pip can't really do that checking without some support for trusting keys.
Use pip like everyone else
Link is broken, could you reupload it?
Yeah, I figured I'd need to build it on Mac or Linux, but bundling all the dependencies and getting them to load without run-time issues seems to be the challenge. Quality (i.e., not simplistic) examples seem hard to come by.
Use pyenv
&gt; Django 2.0 supports Python 3.4, 3.5, and 3.6. We highly recommend and only officially support the latest release of each series. &gt; The Django 1.11.x series is the last to support Python 2.7. It kind of marks the end of py2 era in the web world, too. Hopefully Twisted will catch up as well soon.
Ok, mr. perfect. Your code fails pep8. Two blank lines before function definitions and you don't have a newline at the end of the file. Freakin amature.
Hiya /r/Python! I've been working on this project tirelessly for the last 7 months, mostly part-time. My goal with Serpent.AI is to lower the barriers to entry when it comes to using games as sandboxes for code experiments. It unlocks your entire existing game library (Steam, DRM-Free etc.) to be used as potential game agent environments and it does so natively! No Docker containers, No VNC. It is simple enough for beginners &amp; hobbyists to dabble in, but also powerful enough to drive serious machine learning and AI research. The framework provides structure and conventions so you can focus on your experiment exclusively. It also doesn't try to dictate how you solve your problems. Your game agent is your canvas! If you've ever daydreamed about having Python code interact with games, or are looking for something to support you with your next machine learning experiment with games, you ought to give it a try! Although it's early, the [Wiki](https://github.com/SerpentAI/SerpentAI/wiki) is already pretty information-rich. If you are willing to give it a shot, I'm organizing a small hackathon over the weekend to introduce people to it. I will be live on Twitch for large parts of Saturday and Sunday where I'll be working on a game agent as a demo and answering any questions. The framework's core is already solid, so why beta? I'm mainly looking to expand the user base and get feedback on the pain points (and bugs). I want to take my time to polish and document even more. I'm looking at a Q1 2018 1.0 release. I built Serpent.AI to have a blast experimenting with code, machine learning and games and I hope you will enjoy it too! &lt;3 A few links: * [Website](http://serpent.ai) * [Wiki](https://github.com/SerpentAI/SerpentAI/wiki) * [Discord](https://discord.gg/9D5SuxH) * [Twitch Channel](https://www.twitch.tv/serpent_ai)
and Selenium which wraps chrome which wraps webengine may be an overkill if you just want to use webengine. I would also like to see some justification for that comment about qtwebengine being out of date when afaik it is the guts of chrome.
This looks good, I'm going to try it as a webscraping library - qtwebengine isn't the easiest lib to get one's head around, so kudos for the wrapper. --- (hours later) This has a lot of potential, and the documentation is really quite good, but for guys like me new to python, an example of how to integrate it into a web service like flask so that the signalling delivers fully-rendered html back to the flask route handler would be great.
And why do you need to pop them? Why make a whole new function for popping the songs? When we could just do: for song in setlist[0:3]: for song in setlist[4:7]: for song in setlist[8:12]: I mean, in your "perfect version", like my "funny example", you assume the total number of songs to be played. Why go after the comments instead of that? Pretty big oversight on your part "mr. scientist." Explain yourself.
Well, again, if you want to change the size of each group, you have to maintain the number in multiple places. Want more songs up front, change it in two places. for song in setlist[0:3]: for song in setlist[4:7]: for song in setlist[8:12]: And in this process, you have a bug. You skip the songs at indices 3 and 7. Coding defensively means predicting the kind of coding patterns which easily invite overlooked bugs and avoiding those patterns.
You got nitpicky and I called you on your BS. Go away.
Hard coding the indexes is your definition of "coding defensively" loololololl
"I only have to change it in two places" lmao.
Gotcha. Yeah, I need to learn how to make generators/iterations and maybe some more decorators. Magic functions as well.
/r/learnpython
That is different from the path you commented earlier. It is not in your path.
Why? (Not trying to be a dick. I've never had to maintain this)
Love the framework. Got me interested in machine learning and python. Really cool to see a game be played without touching keyboard and mouse :)
print "rip"
It's very outdated and the way things are laid out on the filesystem and through the web make no sense whatsoever. Simple things like adding css rules require multiple steps when you should be able to just add/edit a static file. The ZODB is pretty terrible, too. It's used to store python objects, whereas most modern frameworks just store content in a SQL database or as static content. Most plugins/addons aren't really maintained anymore so when you find a plugin that's supposed to do something it rarely works. Overall the whole system just feels like a black box and it's very difficult to make any changes/customizations beyond the default functionality. In addition to all that it has the worst performance of any CMS/Web Framework I've ever tried. Oh, also the documentation is trash, though I guess that's pretty common.
You might like a more interative, exploration driven style of data visualizaton using IPython (or Jupyter), pandas, and matplotlib. https://blog.pythonanywhere.com/127/
I use DotMap to convert JSON files (configs) into these attr-dicts. I don't think they're very good for use "deep" into your program because of the overhead, and worrying when it's in `dict` form and when it's in `DotMap`. However, when you use them in places where you know which keys should exist it can be a lot cleaner. `config['extra']['server']['mode']` vs `config.extra.server.mode`
Looks cool! I'm going to check it out this weekend.
No, this question as stated isn't even appropriate for /r/learnpython (mod speaking here). We don't do just copy-and-pasted homework problems.
Use while = False loop and have certain key/s for turning that while true
Built a toy tokenizer for a class, and headed out tomorrow to a hackathon.
SyntaxError: Missing parentheses in call to 'print'
 def pluralize(total_units, time_unit): if total_units == 0: return '' return f'{total_units} {time_unit}{"" if total_units == 1 else "s"}' def seconds_to_string(seconds): if seconds &lt; 0: raise ValueError('seconds must be greater than zero') weeks, seconds = divmod(seconds, 604800) days, seconds = divmod(seconds, 86400) hours, seconds = divmod(seconds, 3600) minutes, seconds = divmod(seconds, 60) return ' '.join(filter(None, ( pluralize(weeks, 'Week'), pluralize(days, 'Day'), pluralize(hours, 'Hour'), pluralize(minutes, 'Minute'), pluralize(seconds, 'Second') ))) or '0 Seconds' if __name__ == '__main__': assert seconds_to_string(0) == '0 Seconds' assert seconds_to_string(1) == '1 Second' assert seconds_to_string(45) == '45 Seconds' assert seconds_to_string(60) == '1 Minute' assert seconds_to_string(100) == '1 Minute 40 Seconds' assert seconds_to_string(3600) == '1 Hour' assert seconds_to_string(8989) == '2 Hours 29 Minutes 49 Seconds' assert seconds_to_string(72783) == '20 Hours 13 Minutes 3 Seconds' assert seconds_to_string(86400) == '1 Day' assert seconds_to_string(172801) == '2 Days 1 Second' assert seconds_to_string(604800) == '1 Week' assert seconds_to_string(608461) == '1 Week 1 Hour 1 Minute 1 Second' assert (seconds_to_string(2342455) == '3 Weeks 6 Days 2 Hours 40 Minutes 55 Seconds') assert (seconds_to_string(27364283) == '45 Weeks 1 Day 17 Hours 11 Minutes 23 Seconds') 
Nice, I like it!
Thanks! 
you can use pytrends to get trend results from google trends, related queries and things to that effect. https://pypi.python.org/pypi/pytrends/4.1.1
Can we codename it "Viperdjango"?
Sad to hear. I worked for a while almost exclusively with Plone and there was a thriving culture surrounding it. I fell out of the loop a while ago and it sounds like others did as well. Looking back it does seem there was a lot of over engineering, but it made sense at the time. 
Finally! I can automate my game playing to save time to spend more time automating other things!
In other news I've been calling it Bubble Tea this whole time...
Hm... No asyncio anywhere? Even as an optional feature?
https://www.jetbrains.com/help/pycharm/creating-and-editing-run-debug-configurations.html Edit the configuration to include the arguments you want. 
In the pycharm ide settings you can change the command line arguments for what actually runs whenever you press run. You should Google "pycharm command line arguments stack overflow"
It's bubble tea everywhere except one chain that wanted to be different and called it Boba and when (predominately white) groupies who jump from fad to fad left yogurt and wanted bubble tea they keep trying to make boba stick even though it's wrong. It's like mispronouncing tilapia
@lightShadow: it's not an end its a new start! :)
This is crazy impressive. 
You need to automate the automating
This highlights that once you get to the point where you need to start scaling applications, there is more than just the framework (django or flask) to think about. OTOH, the OP article concludes my realizations with microframeworks: &gt;However, once relational databases come into play, Flask enters a cycle of diminishing returns. Before long, projects will be dealing with forms, REST endpoints and other things that are all best represented via a declarative model with types. The exact stance Django’s applications take from the beginning From my experience when supporting Flask apps for the long term, they end up being like Django.
Zope was amazingly seductive. You could change anything on the site, while it was running, by editing snippets of code (Python, two different HTML templating languages, CSS) through a web form. You could override parts of the site for every folder automagically. The rapid feedback cycle was incredible. The cost of all that was in maintainability. Everything lived in a custom object database format (ZODB) which nothing else could read. No files on disk -- no version control. Well, there were products (that's what Zope's plugins were called) that tried to export Zope's internal objects as files on disk so you could keep them in CVS, but it was still a pain. And there were products that let you serve files from the filesystem, and it was also a pain (when you upgrade and discover the directory layout was changed so none of your pictures work any more). Ah, good times. I don't miss them.
Wow, what *is* the actual error message! Nice! I see they replaced the older generic "invalid syntax" message in 3.4 and I didn't notice.
*bubble tea 
## This if fun so far # basic syntax from functools import reduce from operator import mul from collections import Counter from pathlib import Path from pprint import pprint # 1. def f1(): return sum(int(x) for x in input()) # 2. def f2(): pprint(dict(Counter(Path(input('enter filename')).read_text()).most_common(5))) # functions from collections import defaultdict # 1. def f1(n): return sum(int(n) for n in str(n)) # 2. def f2(*args): return reduce(mul, (arg for arg in args if isinstance(arg, int))) # 3. def f3(n, l): return [s for s in l if len(s) &gt; n] # 4. def groupby(f, l): result = defaultdict(list) for e in l: result[f(e)].append(e) return result # decorators and generators # 1. def after5(f): ignore = 5 def wrapper(*args, **kwargs): nonlocal ignore if ignore == 0: return f(*args, **kwargs) ignore -= 1 return wrapper # 2. def memoize(f): results = {} def wrapper(arg): return results.get(arg) or results.setdefault(arg, f(arg)) return wrapper @memoize def fib(n): print(f"fib({n})") if n &lt;= 2: return 1 return fib(n-1)+fib(n-2) # 3. def fibgen(n): if n &lt;= 2: return n x, y = 0, 1 def inner(): nonlocal x, y for _ in range(n+1): yield x x, y = y, x+y *_, result = inner() return result # 4. def accepts(*types): def decorator(f): def arg_handler(*args): assert all(isinstance(a, t) for a, t in zip(args, types)) return f(*args) return arg_handler return decorator @accepts(float, int) def power(base, exp): print('passed') 
First off, [/r/learnpython](https://www.reddit.com/r/learnpython) is the appropriate place for this. Second off we've no idea -- except guessing -- that that Browser name is, or where the WebDriver class it apparently represents came from, and so cannot help you without more information. Like show us the code you attempted to use and that failed. Third, the error means what it says it means, the WebDriver object, whatever that is, doesn't have a **close** attribute it method associated with it.
Awesome, the docs might be a bit rough. Ping me if you have issues getting started.
I know the blog post was about recursion, but It was a nice example so I decided to have my take on just the converting seconds to something more readable bit of the post. A bit of thought made me think that I could structure my solution around successive remainders, which means divmod! My resultant code is: def say_secs(seconds): names = 'sec min hour day week'.split() modulos = [60, 60, 24, 7] units, remainder = [], seconds for mod in modulos: remainder, unit = divmod(remainder, mod) units.append(unit) units.append(remainder) plurals = [('' if count == 1 else 's') for count in units] out = ' '.join(f'{count} {name}{p}' for count, name, p in (zip(units[::-1], names[::-1], plurals[::-1])) if count) return out or '0 secs' if __name__ == '__main__': for s in [0, 100, 66400, 172801, 987987]: print(f'{s:6} seconds is: {say_secs(s)}') Output: 0 seconds is: 0 secs 100 seconds is: 1 min 40 secs 66400 seconds is: 18 hours 26 mins 40 secs 172801 seconds is: 2 days 1 sec 987987 seconds is: 1 week 4 days 10 hours 26 mins 27 secs 
The best way is indeed to handle that in another process (or microservice). There are a few frameworks that would help with this such as celery. 
We're still on 1.8 here, working our way towards 1.9 (so we can get to 1.11 and then do a python 3 upgrade). Honestly, having written both, I don't see why one should stick with 2.7 anymore. It does take a long time to migrate though, in a big codebase, there are a lot of small details that are easy to miss, that 2to3 might not pick up. 
This is a really cool project, I've followed the development of the framework on the twitch stream since super hexagon, really educational/fun. Hope to see peoples implementations soon!
I would recommend combining Spyder with the Jupyter notebook, my approach is to write my modules in Spyder one one screen and then test them/do more interactive work in a notebook on the other, but you could do the same with Sublime. There is a useful iPython magic called autoreload, call it using: "%load_ext autoreload %autoreload 2" This will re-import all your modules before every cell is run, so if you make some changes in Spyder,/Sublime they are picked up by your Jupyter iPython instance. For inspecting pandas DataFrames, I would really recommend using xlwings, there is a very handy function called view(some_dataframe), which immediately opens a new Excel instance and copies some_dataframe into the first sheet so you can do some spot checks. Hope that's helpful! I don't know of any IDE's which have a tighter integration with pandas/matplotlib than Spyder, so I can't give you a recommendation there. But maybe Pycharm is worth a try since it is more Sublime-like.
I did Zope/Plone dev for 10 years. There was a very strong focus of maintaining backwards compatibility. In the end that became its undoing. The Phone stack became ridiculously large and intertwined. Every new software methodology over those 10 years became a new layer. Zope itself is a beautiful idea and very we'll executed. Basically it is nosql done right. If you take a modern framework and add a nosql database you will still be at 20% of what zope offers. But time has run its course and zone/plone has turned into a dead end. Alas. Edit: goddamn phone keyboard. 
the browser name:firefox
No, I mean the Python object named Browser, as in please provide what Python code you are attempting to run.
If you don't know much about python then you will likely get better answers in /r/learnpython. Questions you should look to answer are: What do you want it to do? and What have you managed to do already? People are a lot more likely to help if you have specific questions and can demonstrate you've at least tried. "I got nothing" will get you nowhere. "I googled 'discord python' and found this link but I'm not sure how I use it" will get you help. 
Okay thank you ever so much
yes ,here you go from splinter import Browser b = Browser() b.visit('https://www.google.com') b.close() 
Working on it
And what makes you think that the object returned by Browser is supposed to have a **close** method? Looking at the [source code](https://github.com/cobrateam/splinter/blob/master/splinter/driver/webdriver/firefox.py) it doesn't either provide or inherit one.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [cobrateam/splinter/.../**firefox.py** (master → 5a6c8e6)](https://github.com/cobrateam/splinter/blob/5a6c8e620bae6658b5a9f8ed3ae1e84ff740050f/splinter/driver/webdriver/firefox.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dne53sy.)^.
Can this be used for Browsergames like Bloons TD5? (https://ninjakiwi.com/Games/Tower-Defense/Play/Bloons-Tower-Defense-5.html)
but i want just test and it gives me that error
Yes, I understand that it gives you that error, what I do not understand is why you think there should be a **close** method to call at all. This is the example from their documentation: from splinter import Browser with Browser() as browser: # Visit URL url = "http://www.google.com" browser.visit(url) browser.fill('q', 'splinter - python acceptance testing for web applications') Do you see any call to **browser.close()**? No? That is because the object returned by Browser does not have a **close** method to call. So why are you trying to call it? 
[iLook Here](https://stackoverflow.com/questions/16839075/how-to-close-child-browser-window-in-selenium-webdriver-using-java) Also it is appropriate to ask: `what is inheritance`? Splinter is extending selenium which does have `close()`. I think the problem is deeper. I wonder if op's error output is a complete traceback. 
but i learnt it in on book ,it says it will work well
That sounds boring. If only there was a way to automate the boring stuff...
Ah, I thought that question seemed familiar. **The question is also on [Rosetta Code](http://rosettacode.org/wiki/Convert_seconds_to_compound_duration)**.
[](/rdtwismile) Nice work! I wouldn't worry too much about it being a bit clunky right now. I'm sure you'll be able to figure those things out in time as you learn more!
I'm an almost CS gradurate, but I only know low level languajes such C/C++. Python is for an assignment. Good luck to you too! :D
press start button and type "sysdm.cpl" and press enter. after that go to advanced tab and environment variables (on the bottom of window). on system variables search variable "PATH" and click 2 times on it. and add two variables: 1) install folder (default is: c:\PythonXX (XX is version)) 2) scripts folder (default is: c:\PythonXX\Scripts) after that you'll be able to use python and pip directly from CMD. reboot may be required for that to work. Cheers :) 
So a number of questions/remarks. Cool project. &gt; novel framework to assist &gt; sandbox environment &gt; tool for Machine Learning &amp; AI What does it *do* though? From the Binding of Isaac example it's a framework that learns to play the game, right? By simulating inputs? By using your project as a module to create sandbox/test modes in a game running with python? I don't care about the background if I don't know what it is. Your project page really doesn't tell me much about what it does or how it does it. Also it seems you have used super hexagon as an example, is there a fully working example for a game to read through, to discover all the features? Because browsing super hexagons main menu doesn't seem that appealing. Final question, could this be used to write bots for games? Because that could be fun.
I joked around with an old co worker about that once and he followed through. I used to build in house WordPress plugins professionally for a marketing company and I told my co worker that he should make a plugin generator that automatically creates a blank plugin based on whatever parameters he sets. He went all out on making it and made it so that he didn't have to code anymore to create initial plugin code. He did it over a weekend. I remember he was pretty damn good at PHP. I've always thought about making scripts to automate other coding tasks. I know that's essentially what python packages are but still.
You could even take it a step further and automate the automation process to automate things
Absolutely beautiful
If this worked, that means all your efforts of putting the python installation folder in your system PATH were flawed. Review what you did wrong there to avoid it in the future
Finishing my level editor and ironing out the last bugs in my [Boulder Dash remake](https://github.com/irmen/bouldercaves). It was a great time figuring out the inner workings of one of my favorite retro games from the 80's, and recreating it in Python
I couldn't stop coding: https://www.reddit.com/r/programming/comments/71xwk5/unit_conversions_python_code_exploring_a_method/ 
Yes. Anything that can be seen is technically eligible. I haven't made a browser launcher yet for game plugins but it would take around 10 minutes if you really need it.
This is amazing. I'm fairly new into python/programming but part of what has been motivating me to learn a little more each day has been the challenge of getting AI to play videogames for me. This seems like an amazing framework to get me started faster then I expected.
This is a huge release. I really wish Cython would use better versioning. It's hard to keep track of when lots of new things are added when they only ever increment by 0.01. Edit: Also, why are a lot of these features seemingly documented only in the changelog and not in the documentation proper? I had heard rumors a while ago about async/await support but that doesn't seem to appear anywhere in the official documentation.
It's not "a framework that learns to play the game". And yes, it could be used to write bots for games, it's the idea, AI and bot programming, as the title says. What this framework does (as I understood it), it's helping you to create a interface with any game you want (called agent). So, it helps you to read things from the game, and send keys to it, but coding the bot/neurtal network it's your job :P If you want to compare it with similar software, look at Gym/Universe of OpenAI, there is a lot of info about it. And yes! this is really fun! Btw, look at the wiki, it has a lot of info: https://github.com/SerpentAI/SerpentAI/wiki
Thanks for the questions. I think the wiki covers most if not all of them but I agree things could be better communicated in the readme. It's a little tricky to explain because I don't think it's something that has been done 100 times over. If a new, say, web framework comes out, you have a frame of reference as to what is expected to be there. Here's another attempt at a summary: You can see an agent as something that receives input, analyzes and transforms it to then return output. A game agent does exactly this but in the context of games: It receives frames as input, analyzes and transforms it and sends keyboard and mouse actions as output. The framework gives you the input/output part for free, leaving you to fully focus on the middle part, where it supports you heavily with modules. Through the use of code generators and plugins, you can get started on a new game in minutes. And yes, it's not limited to machine learning approaches. If you want to build little bots for your game library, you can. I have a full example [here](https://github.com/SerpentAI/SerpentYouMustBuildABoatGameAgentPlugin). This plugin implements random play, a scripted bot and a machine learning approach.
What do you mean? asyncio is a python standard library.
Yeah, no idea. Looking through comment and post history, I'm thinking he/she/it's not quite up to the Turing test.
The object returned by Browser is a WebDriver subclass, which appears to be controlling the overall Firefox process that is being wrapped. It ultimately has no **close** method, but it does have a **quit**, while the the adjacent **Window** class returned by the WebDrivers's **windows** method does have a **close** method ... that in turn appears to be called for every Window when he WebDriver itself is closed. Either way I don't think OP is actually looking for help.
hey. i am newbie . I want to learn python. become a profectional engineer. What should i learn now? 
This is a massively useful release! I want to start using it right away. If these features are not in the official documentation then I see an easy way for me or someone else to make a pull request within the next week or so. Many of these features could have documentation that is a straight copy/paste of the changelog. 
I've been playing around with flask the last couple of days, with a couple of books I picked up for free on Packt + the flask mega tutorial. It's oddly satisfying to work myself around the breaking changes between times of publication and my tinkering around with the content. I'm less impressed over how it seems certain authors start off nicely, and then end up trying to just finish off things as fast as possible. Also, I finally got around to start working on a pet project I've registered the domain for a good while back. This suddenly has me knee-deep in javascript and css as well, so it's a good learning experience. The project hasn't been too well thought out, so I'm making notes of ideas I get as I go along, which is also nice - feeling the creativity flow, so to speak. Who knows, maybe I'll post a link to it here when it's getting ready to "go on air".
Exactly. I hoped that Django 2 would have optional support for async views and whatnot so that you could choose to write blocking views and async views. For an IO-bound application that is Django, async programming really helps.
Same here. Taking a great course at Coursera by University of Michigan.
...How do people mispronounce tilapia?
Asynchronous comprehensions is a game changer for me!
What would the benefits be to an async view?
Your statement is difficult to read. As said in the right of this sub-reddit: &gt; If you are about to ask a question, please consider r/learnpython or the learn python discord. Homework-style questions will be removed, and you'll be encouraged to post there instead. &gt; &gt; Please don't use URL shorteners &gt; &gt; Posting code to this subreddit: &gt; &gt; Add 4 extra spaces before each line of code If you do not find it on internet it may be because one-liners are not considered "pythonic". Why do you need this to be a one-liner? btw, if you really need this as one-liner: import itertools as it print(*(lambda start, count: it.accumulate(range(start, start + count + 1), lambda previous, n: previous * 2 + 5))(1, 2), sep="\n") (one extra line for import) or real one-liner: import itertools as it; print(*(lambda start, count: it.accumulate(range(start, start + count + 1), lambda previous, n: previous * 2 + 5))(1, 2), sep="\n") I have use a lambda function only to stick with your start/count convention.
 end=''
They aren't asking how to get their code into one line. They just want to print their output on one line instead of each number on a new line.
It would be easier to print it as one line if you append each number to a string and print just one time at the end. Is there a reason this is being done with recursion instead of a for loop? A for loop would make this easier. If you want to keep the recursion then this would work. def help(start, count): print("{} ".format(start), end='') if count &lt; 1: print() return start else: n = (start * 2 + 5) start = help(n, count - 1) return start help(1,2)
Oh right. Return the data instead of printing it in the function and print the result as print(*help(1, 2), sep=" ") Or just replace your print with print(..., end=" ") 
I've done something similar to control water valves. I used Arduino relay boards and use both web based and time based controls. I tried using physical buttons, but the PI GPIO is horribly susceptible to line noise in a higher voltage environment (my valves run on 24V). PM me and I'll send you some of my design work and the code.
(Strangely proud of my ugly and useless one-liner. I should start Perl)
This is horrible.
I'll make dead cells my bitch now, since I can't play due my injuried arm. 
A badly written blog post on beginner level python sold as some sort of revelations. Hurray?
/r/factorio is leaking.
Factorio needs this
Hehehe til(a as in apple)pia
These are not tricks, just idiomatic Python.
I'm sorry but that's way too legible for Perl.
"suprising"
Not 100%, but I'm pretty sure there's no way to do that with just xpath. I think you have to iterate over all the &lt;module&gt; elements, check for a description element, and return `description_element.text` or ''
I didn't get past the clickbait title, and according to the comments, I didn't miss out. This post adds nothing to this subreddit (in my humble opinion) and should be deleted. edit: OP, you posted [this](https://www.reddit.com/r/Python/comments/71h4cz/a_list_of_non_trivial_python_exercises/dnbgf5v/) only 2 days ago: &gt; please, please, convert that Python 2 code to Python 3. It's 2017. Follow your own advice. 
Thanks for the Info! If you could do this anytime in the future it would be nice, but no need to hurry, need to brush up my python first ;)
Also there is a python wrapper for the discord api. You can check out the project [here](https://github.com/Rapptz/discord.py) and the docs [here](http://discordpy.readthedocs.io/en/latest/)
I see a lot of examples of something like '//modules/description/string(.)' But when I try that I get an invalid syntax error. 'string(//modules/description)' does something, but only returns the first text element.. I have also seen examples of putting an or statement inside '[]', is it possible to have an or statement that says display //description/text() or ""? THanks
I'm looking forward to the typing support! More details in [issue #1672](https://github.com/cython/cython/issues/1672)
Native typing annotations seems like it would make Cython much more compelling. Time invested in typing normal code would align with Cython typing pretty nicely, so work in one benefits the other.
Yeah, I can see the power in it. I will definitely message you in the next couple weeks when I start if I have difficulties and thank you for your help :)
Yuck. There's no excuse for: print "blah" anymore, even if you do still use Python 2. Upper case variable names, non PEP8 spacing, If this is the kind of Python you are writing, I sincerely hope that no one is paying you to do it.
r/learnpython
&gt;I have also seen examples of putting an or statement inside '[]', is it possible to have an or statement that says display //description/text() or ""? I don't think so I think the problem is getting a result for an element that doesn't exist. Maybe take a look at [https://xpathology.herokuapp.com/](https://xpathology.herokuapp.com/) At any rate, I think I solved with this (where elem is a module element): def get_text(elem): desc = elem.find('description') if desc is not None: return desc.text else: return '' edit: This post is probably more appropriate for r/learnpython 
Maybe try browser.quit()
I literally said this 2 years ago: https://www.reddit.com/r/Python/comments/3gaf94/cython_023_released/ctwgsws/
Simplest way to get a basic webapp up and deployed, in my opinion, is [Pyramid](https://trypyramid.com/) So, you want some basic routes: - index page - One POST per feature that you want to toggle on/off And simply add a html form with a submit to each of those features to toggle on /off. You can then either call your code directly, or place it in the same project. -- Rationale: Bottle is pretty awesome for minimal projects, but require you to learn and figure out what you want to do first. Pyramid is opinionated, and has one of the _best_ and most thorough tutorials out there. Opinionated is good for beginners, because it sets out the framework to build on. "do this to succeed" is an amazing capacity to have. 
Another good set of Python-based tools for elevation datasets are from [RSGISLib](http://www.rsgislib.org/rsgislib_elevation.html). Might be worth checking out too.
Working through it now. Thank you for the suggestion. 
Thank you 
That is crazy but the solution is not to make it easier to do a crazy thing. The solution is to create domain objects with known attributes, that you can use safely. 
1. looks like the `inspect` is necessary only to handle both functions and generators, which make sence on this function, but I'm not sure how much it will be on other usecases 2. since the first parameter must be `func`, I'm guessing all arguments must be keywords args. iirc, i saw somewhere (maybe earlier version of this code) a use of positional args with a try to "shift" them (i.e. `if not callable(func) .... partial(scope=func)`. works, but ugly)
During my postgraduate studies I fell in love with R's 'raster' package. For anyone who does Python, R should be easy to pick up.
Dimentions? Would you be able to get a C.H.I.P in there, even a Pi0?
Of all the pages on the wiki, https://github.com/SerpentAI/SerpentAI/wiki/Game-Agent-Development-Starter-Workflow is so empty :(
Thanks /u/TheMinimalistMapper ! Looks like a great tool. I will explore that!
37mm x 37mm
So what you're saying is he needs to automate his automations so he can automate more automations through his automating automations.
Pycharm has an issue getting your env variable inside, set the path to cudnn in your pycharm settings
Do you mean for web apps? https://www.pythonanywhere.com/
Wonderful news! Hopefully that will help also with Plone renewall.
Yes. I believe at that point, you're at the core physics of existence.
Do your own homework.
&gt; I'm not a huge fan of Spyder (*Spyder maintainer here*) Would you care to comment on the reasons? We're always very interested in hearing feedback.
You monster. 
Can't be done in a single pass with XPath 1.0. &gt;&gt;&gt; [e.xpath('string(./description)') for e in root.xpath('//module')] ['A', '', 'C']
I think I'm missing something. Is this a non recursive solution? I don't see anything recursion unless I'm mixing up what I believe is first class functions. 
Actually just found he has a series of python lessons called *Moden Python: Big Ideas, Little Code in Python* in [safaribooksonline](https://www.safaribooksonline.com/library/view/modern-python-livelessons/9780134743400/MOPY_01_00_00.html). hint: You can get 10 days trial in safaribookonline (no email verification is required).
It may be useful for your specific projects, but I would never add anything like that as an external dependency: it's way too complex and magic (so your attributes behave as ints? but also have subattributes?). AND, the main use case can be supported with a single 5-line function, e.g. def get_value(dict, keys, default=__throw__): ''' specify keys as a dotted single string 'a.b.c' ... '''' x = get_value(data, 'a.a.a.a', None) y = get_value(data, 'x.y.z') # will throw if a key is missing bonus point is that this api allows a much simpler and informative error handling (e.g. you can die on missing key rather than return None, you can also generate MUCH better error messages: "key z is missing: tried to lookup key seq x.y.z", try that with your approach). Not everything needs a dedicated standalone component
Are you sure this is the right sub for that?
&gt; I think I'm missing something. Is this a non recursive solution? No, you didn't miss anything. This is a non-recursive solution. I just thought the solutions in the article were over-complicated for such a simple problem. I almost felt bad for the authors "friend" who was in an introductory compsci class but was subjected to 100+ lines of code to try and understand. Classes, magic methods, inheritance, closures, recursion, generators... talk about overload! These are all useful concepts but this problem doesn't really need any of them. As the Zen of Python says: "Simple is better than complex." 
Thanks for the comment!
From your print statement, it looks like you are using Python 2. Python 2 strings are not Unicode by default.
There's a whole host of issues that have to be thought of, let alone fixed, before that's a possibility. At the very least, it'll make the request bound ORM session an issue as many coroutines can share the same thread. 
Seconded. Flask could probably solve the problem as well, but an opinionated framework might be a better choice here. 