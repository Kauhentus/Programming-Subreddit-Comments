It's probably my second choice after Haskell. Definitely workable.
Personally, I had good success with [Twitter's Scala School](https://twitter.github.io/scala_school/) to quickly learn Scala's syntax. But that was more effective because I had seen a lot of the relevant concepts in the past, and I don't know about your background, so I'm not sure as to whether it would suit you as well.
Neat! Now I just need a botnet and some Russian reddit accounts.
Mate it's April Fools.
 here's a code for converting each row into a dictionary, where the column name is the key. the csv module is in standard lib, I think. let me know if you want another example import csv with open(file, 'r') as f: data = csv.reader(f) column_names = next(data) for row in data: row_dict = dict(zip(column_names, row) ) 
Maybe try this: https://github.com/adewes/blitzdb/blob/master/README.md
First thing you need to do is create a label for each vector. The label is whether a word is known or not. Then you need to make a 2D matrix where each row is a word. Then you can use any of the sklearn supervised learning classifier to train your model. If your data was created by a neural net, like gensim topic models, then I would do PCA, and then RandomForestClassifier or SVM. 
I work with user behavioral data (some large datasets, think marketing tactics stuff) -- I wish I was smart enough to figure out how to use this tool...It looks really cool...Any ideas would be great to know.
Check out minio and pachyderm. 
Hey man, this isn't /r/javascript. Here in /r/python, we like to code in Scala!
SimulateMe! Acephalic_Saint
Working on a design for a gui using tkinter and matplotlib geared towards viewing cloud (ones in the sky) data. 
Seconding this. Also for some installations it may be easier to have a single internal server rather than an app the end users run in different environments. 
where ? 
I don't know why but that keyboard noise in the vid is so satisfying.
why is it not VirtualBox VM ??????
%-based string formatting is deferred until flushing the buffer ala logging interface .. str.format happens inline.
wow they can do web development
As a python kindergartener I'd like to see an example code of whatcha mean
yes its possible there are no discord bot tuts really you are on your own python is the best for this probable no people probably will not want to help your ide does not matter too much but I like how sublime text looks
You have a list of number, you want to obtain the sum of their square root. Instead of looping , you use map function to transform the list to their square root number, then use reduce to sum over them
Absolutely, no doubt about it. Thanks to kivy https://youtu.be/GJ3f88ebDqc Works great for both small and large apps. It is mature enough to achieve what you can see in the video. Works great because it is pluggable with any other python library, so you can do anything you could do with regular python. Supports 3.6 too. Pretty easy to learn, there are many tutorials on YouTube, including my own. Give it a shot! 
Of course in this situation you would use numpy, but I am just demonstrating what did I mean using the simplest example. reduce(lambda x,y:x+y,map(lambda x:x**2, a))
Cool, thanks ! 
Agree with you 100% I'm in the process of refactoring my code to decouple views from business logic. Was easy to implement but creates fragile code. In fact this revelation came to me whole listening to a pretty nice talk on clean architecture https://youtu.be/Nsjsiz2A9mg
This post is encouraging users to raise RuntimeError... That may not a good idea. See: https://utcc.utoronto.ca/~cks/space/blog/python/NeverRaiseCoreExceptions The interpreter will throw RuntimeError when something has gone *really* wrong. You don't want to catch *that* in try except, just because you are looking out for a malformed config file.
Awesome. Does it support kivy? 
**sigh** what is it with programmers wanting to use DBs as file storage mechanisms... OK, before I get downvoted to hell, hear me out people: " filesystems are meant to handle FILES, and databases are meant to handle DATA". Sssshhhh!! No, in this context DATA != FILES NO! I SAID NO! STFU AND LISTEN. A file is a collection of data by definition, sure. But what you all keep confusing over and over is that files are NOT IMMUTABLE, files are prone to corruption, and like most programmers, your "solution" to try to abstract the problem away a level up with wrapping a DB around it is just retarded. That's like, that's like... OK, metaphor time, lets say my ice cream is melting from the heat of the Sun and that it's exposed to the air on a flimsy piece of waffle cone only further driving its possibility of doom. So, according to your solution path, in this metaphor, using a database would be similar to me hiring a refrigerated truck to drive me around while I try to eat it... At times the doors of the truck may not open, or at times the refrigerant may be out... Hell, the truck might even try to run me over because its breaks are busted. Why the hell would I hire a damn truck when I could either: a) simply eat the thing inside in an air-conditioned dining area, all nice and neat. b) hurry the f up with my ice cream and eat it before it melts. Way cheaper and simpler options than hiring a friggin truck. I mean logistically you can take this metaphor even further by considering the fact that I would have to hire a driver, pay them salary and benefits, pay insurance, set aside money for repair budget etc etc... All so I can eat a $2 ice cream??? For real? Y'all have lost your damn minds... Postgres should be a document db... tut tut tut
I'm not the author of the document, but my 2 cents: If the program can't start because it requires missing basic configuration, such as if it's a network client program started without user input and requiring an IP to connect, then I think it makes sense. Your program just can't execute without it. It's a runtime error. Other good reasons for a runtime error: - badly setup event loop; - baldy setup communications channels, such as thread / multiprocess queues; - any required missing resource with no better exception to define the problem; Now I would always subclass RuntimeError to have something more accurate. But yeah, basically, this seems like what RuntimeError is for. Also I would probably choose sane default and warnings over using RuntimeError when possible. Maybe we could contact the author to ask him/her to remove it or add more informations. But I can't find contact details on the site.
This is way too awesome...
Someone answer this question please 
I didn't get your whole analogy, care to explain what you mean in practical terms? What advantages/disadvantages are there to storing documents in a database? Forgive me for my ignorance but I'm still studying and have no work experience. 
When I was first figuring out how to attempt this project, I thought about using NNs. The reason I didn't, was the sheer amount of data they need. So the project would stop being much about programming, and would be mostly about data conditioning. And since I can't generate any new data in a good format, I figured that would be a problem. So I think in general, the approach I used, which is incredibly explicit (in particular, it relied on me knowing how I formed a letter, not just the final shape of that letter), is probably not the best approach. But it did seem to be an approach that would be achievable for me, in a reasonable timescale. In AI generally, knowledge acquisition is often the elephant in the room. 
I totally didn't expect this Post to be so popular, and I feel a bit bad for not putting more effort into explaining and documenting the process. And I think I might do. I've promised that I would make a video of the plotter working, I will put a bit of effort into making a webpage with more details. Fortunately, with voice recognition, that's much easier than doing the programming!
I didn't know that. That is interesting! Even more reason to support them.
Thank you for the tip, I haven't seen it no. I will store the link. At the moment I don't feel like I need voice control over the browser, but my MS is progressive, so I'm sure that day will come. 
Good luck :)
I was in the same position an year ago, found out I had created a buggy re-implementation of celery. But hey, had a lot of fun
nice video thanks for posting
Querying the hardrive is terrible though. So I hope your are talking about a specifically design FS system and not your OS'.
Yes the FSStorage classes made the zodb a lot better to work with.
People talk about documents db when they really store nested mappings and arrays. Those are not really files. They are complex data structures you need to query.
You're an inspiration. Good hunting! 
File systems don't support transactions. They bloody well should buy that is another matter.
&gt; Of course in this situation you would use numpy Why "of course"? sum([sqrt(x) for x in a]) is perfectly legible and doesn't require knowledge of a third party library.
Loosely defined nestable key-value data is terrible and you shouldn't work with it. It's just a bad idea. Stop trying to use it, stop trying to work with it, and transform it into a well-defined format that you *can* store in a proper database.
I try and do whatever is most 'pythonic'. Generally I will try to use numpy expressions if I can, if not generator expressions. I try to avoid constructing lists if I can until needed. I will use a for loop if it's the cleanest way to express something. I think the alternatives are great, but not if you're trying to force them.
Sure have, for a few projects. One was a tool I built at work, currently used by ~100 staff. Aside from some domain specific requirements, it relies on pretty standard packages: * ORM/db models via `flask_sqlalchemy` * Form handling via `flask_wtf` * User management via `flask_login` * Redis caching via `flask_cache` I'm currently building another project which will probably only need the first three of those. DB models, forms and user auth can get you a long way building most kinds of apps.
If your api is a class, define an __enter__ and a __exit__. If function, look up contextlib.contextmanager class API: def __enter__(self): self.connect() return self def __exit__(self, *args): self.close() def __init__(self, creds_file): # Parse json to get username and # password and make them attributes
I use namedtuple all the time. I think that if you're letting your IDE determine how you write code, you're doing it completely wrong. You don't need PyCharm to tell you how to write code. You write the code that you want, and PyCharm can get over itself and work with it. If PyCharm won't do it, don't use PyCharm! I don't have autocompletion issues with namedtuples in vim, because autocomplete is super simple (which is what I want). I type some letters, press Ctrl-p, and vim will autocomplete those letters. It will almost always give me what I want, but sometimes I have to press Ctrl-p another couple of times to get the right thing. If PyCharm is trying to be 'clever' and is then somehow doing worse than naive find-all-the-identifiers-in-these-files-without-knowing-the-language autocomplete, then it's not very clever is it?
I never actively avoid it. I start with a comprehension. The moment it looks like it's getting cumbersome, I either extract intermediate steps out into their own lines, or refactor the whole thing to use a for loop. Whatever is visually more understandable.
Now you have two problems.
&gt; how do I suggest Email?
I've seen people use list comprehensions when all they want is a side effect. That's pretty bad I think. But if you want a list, of course a comprehension is nice, unless the logic is too fiddly. 
I also feel this urge when I'm brainstorming but experience has taught me to avoid unless it's a fun throwaway project. For loops are so much easier to read, maintain, and share with others. Writing code for future you. 
Consider contributing to [python-amcrest](https://github.com/tchellomello/python-amcrest) and/or [home-assistant](https://home-assistant.io/components/camera.amcrest/)!
I worked with Jim for about a year in 2015 and 2016, he's truly a software sage. I learned a great deal about how to arrive at and execute on sane architectural decisions from him!
Looks really useful. 
After watching a bit of the video, from what I understood, the advantage of using postgres is that it can be a hybrid, relational db as well as document db. As a web dev noob, I've been completely lost as far as trying to pick a database for storing json. I'm really leaning towards couchdb because of the REST api, but postgres seems like a viable alternative. I'm really looking for something that can interface with matlab as well. 
&gt; It's super mature (19 years!) Really? [A Brief Timeline of Python](http://python-history.blogspot.co.uk/2009/01/brief-timeline-of-python.html) says differently, making it super super mature :-)
Lol what are you talking about? It's huge.
Learn SQL. It's not hard and it'll take you a long way.
[Notebook](http://nbviewer.jupyter.org/github/rjtavares/numbers_arent_people/blob/master/experiments/How%20to%20reproduce%20the%20Indiana%20Jones%20flight%20effect%20with%20Python.ipynb) rendered at nbviewer.jupyter.org 
I'm going to write a description of how it works. Honestly, the actual code to make it work isn't very inspiring. But I'm happy to describe the math, and the approach. It is basically a new interpolating cubic spline (cubic so it can be easily converted into cubic Beziers at the end, because everything speaks Bezier), that takes into account motion speed, and that seems to correspond with the way we move our hands when writing. I use it to interpolate position, and other properties such as pressure (it could also support nib angle for calligraphy, or brush orientation for eastern calligraphy, for example). Then there's a whole bunch of basic vector, matrix, transformations, and spline support (there are millions of libraries that do that, mine is almost certainly worse, because it is cobbled together), a rather rudimentary implementation of some ideas from fonts (like kerning tables, and contextual alternatives), and then the bulk of it is the actual data for each letter form. Which I don't want to share, because the whole point is that that's personal. But I think the overall approach is fairly easy to communicate, and I'm very happy to share that. But I'm not going to go through the code to separate all the stuff I can put on github. Anyone who would be capable of using the code, would be trivially capable of re-implementing it, from the description I put together.
Two things pop out at me right away. First you shouldn't be putting empty vectors into the features and labels lists. If the try clause fails then skip that row, don't insert an empty list. You have to convert the input into numpy objects, currently you are using lists. labels = nump.array(labels) features = [nump.hstack(feat) for feat in features] features = numpy.vstack(features) something along those lines to create a 2d numpy matrix 
Yep. "map" and "reduce" are usually faster than "for", even when in a list comprehension like that, because the iteration is being done within the builtin function rather than iterating at interpreted speed -- however the overhead of the lambda functions would kill that speed.
Thanks, thats's actually much better.
How did you discover the /pixel.json and /draw.json endpoints?
That is the most nonsensical analogy I think I've ever read. Well done.
I am looking to store lots of numerical data from a physics simulation. Not really looking to do traditional sql queries and stuff.
This is basically impossible to read with the terrible formatting you have. If you take a line and prepend four spaces, it is formatted as code. So what you should do is the following: 1) open up that code in an editor of your choice, 2) limit the line width to something sensible, 3) add four spaces before each line, and 4) paste it in. Doing that with your code makes it look like this: import shutil import requests import hashlib import concurrent.futures as futures from datetime import datetime from concurrent.futures import ThreadPoolExecutor urls = ['http://speedtest.ftp.otenet.gr/files/test100k.db', 'http://speedtest.ftp.otenet.gr/files/test1Mb.db' 'http://speedtest.ftp.otenet.gr/files/test10Mb.db'] def download_file(url): filename = url.split('/')[-1] log(f'Starting download {url}') r = requests.get(url, stream=True) with open(filename, 'wb') as f: shutil.copyfileobj(r.raw, f) log(f'Finished download {url}') return filename def sha256_file(filename, block_size=65536): sha256 = hashlib.sha256() log(f'Hashing file {filename}...') with open(filename, 'rb') as f: for block in iter(lambda: f.read(block_size), b''): sha256.update(block) return sha256.hexdigest() def parallel(n, fn, data): with ThreadPoolExecutor(max_workers=n) as exe: jobs = (exe.submit(fn, d) for d in data) for job in futures.as_completed(jobs): yield job.result() def log(msg): print(f'{datetime.now()} {msg}') def main(): files = parallel(3, download_file, urls) hashes = parallel(2, sha256_file, files) for h in hashes: log(f'Hash: {h}') if __name__ == '__main__': main() Edit: This would be your output: 2017-04-01 22:35:56.544035 Starting download http://speedtest.ftp.otenet.gr/files/test100k.db 2017-04-01 22:35:56.544035 Starting download http://speedtest.ftp.otenet.gr/files/test1Mb.dbhttp://speedtest.ftp.otenet.gr/files/test10Mb.db 2017-04-01 22:35:56.934744 Finished download http://speedtest.ftp.otenet.gr/files/test1Mb.dbhttp://speedtest.ftp.otenet.gr/files/test10Mb.db 2017-04-01 22:35:56.934744 Hashing file test10Mb.db... 2017-04-01 22:35:57.289562 Finished download http://speedtest.ftp.otenet.gr/files/test100k.db 2017-04-01 22:35:57.289562 Hashing file test100k.db... 2017-04-01 22:35:57.289562 Hash: 2f1fbb59927ef89b03e097506078f8e12597cf49a71543f025ab6782be9dd988 2017-04-01 22:35:57.289562 Hash: f627ca4c2c322f15db26152df306bd4f983f0146409b81a4341b9b340c365a16
What about C/C++ ? Is there any other languages I should consider ? 
Hi. It has many use cases. The project was born because Celery currently doesn't support asyncio. It's fantastic project, but It was not designed for use this kind of working mode. The new approach of development with asyncio is not compatible with celery working. Why? Because when you try to send a task to celery the event-loop was locked. This situation is more common in web development, for example. If you're using aiohttp or Sanic (for example), and you want to do something in background or in another machine and distribute the jobs between a network of workers (like Celery does), the simple task of send this task to the Celery, blocks the event-loop and we can't attend any request / response until the sending (or the waiting for the task response) is done. For this kind of problems I was designed aiotasks. Really, that aiotasks does is to distribute coroutines..
The core widgets are ported to Python 3 in Phoenix. Yeah it would be nice if everything was ready but I think it's pretty good at the moment
Writing a library and script to talk to a [Concept2](http://www.concept2.co.uk/indoor-rowers/performance-monitors) rowing machine via bluetooth. It's mostly working now; making it more user friendly/releasable is the next job. Currently records to a database and exports to tcx. It can also upload directly to Strava.
Doesn't mean that Dropbox and Google Drive will stop working. 
Replying to the original question, I'm not really sure what's going on here honestly. However I'll point out that replaceing the `main()` function with the following probably does what you want: def main(): for file in parallel(3, download_file, urls): hash = sha256_file(file) log(f'Hash: {hash}') I say it probably does what you want because this is parallelizing the download call and leaving everything else serialized. This seems like a step backwards, but realistically the hashing portion of your code will be very fast compared to the download and so parallelizing there doesn't make much sense. (In fact, depending on how the hashing is implemented internally, it may effectively be single-threaded due to the GIL...but don't quote me on that.) This doesn't answer the fundamental question though...and I'm curious as to what's going on as well...
&gt; Replying to the original question, I'm not really sure what's going on here honestly. However I'll point out that replaceing the `main()` function with the following probably does what you want: &gt; def main(): for file in parallel(3, download_file, urls): hash = sha256_file(file) log(f'Hash: {hash}') &gt; I say it probably does what you want because this is parallelizing the download call and leaving everything else serialized. This seems like a step backwards, but realistically the hashing portion of your code will be very fast compared to the download and so parallelizing there doesn't make much sense. (In fact, depending on how the hashing is implemented internally, it may effectively be single-threaded due to the GIL...but don't quote me on that.) &gt; This doesn't answer the fundamental question though...and I'm curious as to what's going on as well... ~ */u/ApproximateIdentity*
Also, there are very few atomic operations on filesystems to ensure consistency.
Note that a map like this can be **much** slower than a simple list comprehension.
I like the idea that VCS and document/KV stores are converging over time. Ref http://paulhammant.com/2012/12/22/scm-and-key-value-store-convergence/
If the end result is supposed to be a list and I'm only doing one small thing to the list, I'll use a list comprehension. If the end result is supposed to be a list and I'm doing a lot of things, depending on the situation that might inspire me to move those steps into a function instead, and then still use a list comprehension. 
you mean map(lambda x:x+1, a) is slower than [x+1 for x in a]? umm, could you elaborate on the why? 
&gt; "map" and "reduce" are usually faster than "for", even when in a list comprehension like that, because the iteration is being done within the builtin function rather than iterating at interpreted speed -- however the overhead of the lambda functions would kill that speed. So… `map` and `filter` are faster than `for` or listcomps, if you don't do anything?
Have you seen python3 cookbook? * http://chimera.labs.oreilly.com/books/1230000000393/index.html
Because function invocation is rather expensive in Python, so the former is about 3 times as expensive as the latter in CPython (with an `a` of `range(25)`, but the overhead is constant so the factor should be pretty stable) and about 10 times in Pypy.
I have that impulse, and I do my best to fight it. Maps and comprehensions feel more clever than a simple for loop, but they aren't automatically better and they are almost always harder to read. Think of the next guy who has to look at your code.
IMO, Fluent Python is a little better. Also, Programming With Python 3 by Summerfield. Though, I am yet to complete any of those book. As I said, reading technical books is boring. I am more comfortable with tinkering codes. Actually, I wanted a book that can give me a rough idea of what Python is capable of doing, from where on I can continue my own search and learn by breaking shits.
It looks like you're supposed to start it using the `idlex` command.
Awesome! That's exactly what I was hoping for.
Pick a module from the standard library or a 3rd party package that you are interested and hack on it. You'll see a lot of interesting uses of the language and if you get to a code segment you don't understand, try to figure it out . If you can't ask one of the developers. 
I think they're saying that map(int, xs) is faster than (int(x) for x in xs) which is faster than map(lambda x: int(x), xs) 
It's good practice to limit the number of lines in a try bloc, to make the except as granular as you can. If you catch something very broad like a TypeError or a ValueError, any of your lines could potentially raise it and the except would trigger on something you probably didn't want it to. Altough it's not very often you use "else". Most of the time you just put the reminding lines after the try/except bloc, maybe in another try/except bloc. You only use else when: - you want very accurately target your except - the reminding lines should execute only if there was no errors - your except do reraise errors But when you do need else, it's very nice
hdf5. Always hdf5. Use [h5py](http://docs.h5py.org/en/latest/quick.html) and you can pump numpy arrays in and out. The format is hierarchical, n-dimensional, and allows you to add metadata to your arrays. Plus it's an open standard, so if you ship your 'database' to someone using MATLAB or R or whatever, they'll have the tools to manipulate it.
Python the Hardway is really good for learning the language...won't teach you to program though.
Learning Python by Mark Lutz
you've only been programming 6 months and you've gone through you don't know js, and the entire sidebar?
About what Python is capable of doing you can browse those websites: * https://wiki.python.org/moin/Applications * https://www.python.org/about/success/ then you can move to more specific books like django, pandas or black hat python.
Exactly. If map or reduce are used with builtin or library functions written in C, then they are usually very fast.
Nah not all, but mostly. I am reading the async and performance book of the YDKJS, and for SideBar books, I started with Dive into Python, read it full. Rest I just glossed over and read attentively when I encountered something I don't know or don't have a clear idea about.
* https://www.reddit.com/r/learnpython/wiki/books * https://www.reddit.com/r/learnpython/wiki/faq#wiki_what_do_i_do_now_after_.5Binsert_learning_resource.5D.3F
Fluent Python is a classic in my opinion. Easily intermediate stuff and Pythonic examples. 
i think you'll have a much more productive experience if you get your hands dirty and play along with the books rather than just reading through them
Oh I don't understand shit of what I read, most of the time. So tinkering around with code is a must for me for gaining a clear understanding of what I learnt
Given the "alternative" is a listcomp used solely for its side-effect, I'd go with ignoring PEP8 on this one every single time.
[Kirk Byers gives free email/on-line courses](https://pynet.twb-tech.com/). He takes an approach for network engineers and dev ops to automate with Python, but the courses are awesome and anyone can learn from them
If you're not returning a list, I'd highly discourage it. The latter is much cleaner. Edit: sorry, if I wasn't clear: "I agree". 
The amazing, resourceful book of... ... reading and hacking other people's code. Seriously, you will learn a LOT quickly.
I think one of the big advantages of "else" is simply to make the code more readable. It makes it more explicit as to what you we're trying to do given that the code followed the "happy path". Similarly how using "else" at the end of a for loop makes it clear how you're handling the case when you were searching for something but didn't find it. I do agree that can write fine code without it, like you do in any other language, but I do think it can make the "happy path" and the "error handling path" a little easier to follow. 
For Linux, sure - I'm productive in the language, and it's easy to pull in dependencies (including python itself) with the package manager. If I was writing some windows-targeted software to actually make me money, however, I'd want something that easily compiles to a single binary. Traditionally this means C or C++. Nowadays I might also consider Go, or D, or I'm not sure what else exactly.
Generally speaking, any method that instantiates a list, then runs through a loop to populate the list, and then returns the list, can be replaced with a generator. You don't need to instantiate a list at all, just replace the .append line with a yield expression. The resulting method is more pythonic and more flexible.
How suitable is Python for learning stuff like data structures, algorithms, networking and such?
Can you comment at all on how it compares to Expert Python?
This is how I learned to [troubleshoot python](https://www.amazon.com/User-Friendly-Medical-Reference-Herpetocultural-Library/dp/1882770358/ref=pd_sim_14_5?_encoding=UTF8&amp;psc=1&amp;refRID=4Y1VGQ88VZ2KTDNN4DRJ).
Sorry, no. I don't know Expert Python.
Would these be books to read before or after ATBS?
But if you're using a function, why not use map and filter?
After
Ah I see, sorry misconception on my part.
If you are always going to use 100% of the list.. does it really matter which way you go? I like generator when sometimes I use 10 items, sometimes the entire list. if I know I am 100% going to use 100% of my list, it seems overkill and anti-performance to mess with generators. Am I wrong?
It depends on the types you have. I parser a nasty fixed width fortran format with python. It's got ints, strings, floats, scientific notation with and without an E (e.g. `1.5e+6, 1.5+6, 1.5d6`). So it depends.
Yes, I meant wxPython, the widget toolkit, not Python, the language. They're both nice and mature. :D
That's good. Is there a list somewhere of what's not brought over yet? Is AGW working in Phoenix?
Is there a repository? github? if yes you can send a Pull Request, if not, forums, emails etc.. Can you say the name of the library?
The post processing script that generates the json already searches through it and pulls out the things i care about. Thats why couchdb makes sense to me because after that post processing is done I don't need to keep redoing it everytime I just want to be able to pull up a browser and look at the results. Can't use S3 because the data is classified. Theres also no internet. 
Probably. It depends on the context. The generator is going to build each item as you consume it (lazy evaluation), whereas the list is going to build everything ahead of time. In most scenarios, I think the generator is more performant. I don't think there's any scenario in which it's 'overkill'. I consider the generator solution more pythonic in most cases. The only scenario in which instantiating a list, building a list, and returning a list is a better idea is one in which you plan to iterate over the data multiple times or directly index the list. But even then, you could simply wrap the call to the method you've built in 'list(method(params))'. Which means that building the method as a generator is more flexible.
Dude you're already writing a function to perform the inner-loop instead of doing it inline, you might as well use map now.
To me it looks like you're still sending json though? This looks neat otherwise. One question that I've been asked is if my analysis tool can be used real time as the simulation is running, with h5serv it would be possible. I'll consider giving it a try. 
I just checked my current python project. Over 30k lines, 0 uses of map. Plenty of Lambdas, but otherwise I find other ways to solve the problems.
So what does Pext do again? Install modules?
I was just about to post this. I think the bottom right corner is good place. But it'll take quite a bit of us to do it. 
Back-ported it to py3.5.2 and it seems to work ok. import shutil import requests import hashlib import concurrent.futures as futures from datetime import datetime from concurrent.futures import ThreadPoolExecutor from concurrent.futures import ProcessPoolExecutor urls = ['http://speedtest.ftp.otenet.gr/files/test100k.db', 'http://speedtest.ftp.otenet.gr/files/test1Mb.db', 'http://speedtest.ftp.otenet.gr/files/test10Mb.db'] def download_file(url): filename = url.split('/')[-1] log('Starting download {url}'.format(url=url)) r = requests.get(url, stream=True) with open(filename, 'wb') as f: shutil.copyfileobj(r.raw, f) log('Finished download {url}'.format(url=url)) return filename def sha256_file(filename, block_size=65536): sha256 = hashlib.sha256() log('Hashing file {filename}...'.format(filename=filename)) with open(filename, 'rb') as f: for block in iter(lambda: f.read(block_size), b''): sha256.update(block) return sha256.hexdigest() def parallel(n, fn, data): with ProcessPoolExecutor(max_workers=n) as exe: jobs = (exe.submit(fn, d) for d in data) for job in futures.as_completed(jobs): yield job.result() def log(msg): print('{t} {msg}'.format(t=datetime.now(), msg=msg)) def main(): files = parallel(3, download_file, urls) hashes = parallel(2, sha256_file, files) for h in hashes: log('Hash: {h}'.format(h=h)) if __name__ == '__main__': main() Output: 2017-04-02 22:02:25.961001 Starting download http://speedtest.ftp.otenet.gr/files/test100k.db 2017-04-02 22:02:25.961027 Starting download http://speedtest.ftp.otenet.gr/files/test1Mb.db 2017-04-02 22:02:25.963715 Starting download http://speedtest.ftp.otenet.gr/files/test10Mb.db 2017-04-02 22:02:26.626434 Finished download http://speedtest.ftp.otenet.gr/files/test100k.db 2017-04-02 22:02:26.646516 Hashing file test100k.db... 2017-04-02 22:02:27.849989 Finished download http://speedtest.ftp.otenet.gr/files/test1Mb.db 2017-04-02 22:02:27.854476 Hashing file test1Mb.db... 2017-04-02 22:02:32.499716 Finished download http://speedtest.ftp.otenet.gr/files/test10Mb.db 2017-04-02 22:02:32.509849 Hashing file test10Mb.db... 2017-04-02 22:02:32.516779 Hash: 30e14955ebf1352266dc2ff8067e68104607e750abb9d3b36582b8af909fcb58 2017-04-02 22:02:32.519760 Hash: f627ca4c2c322f15db26152df306bd4f983f0146409b81a4341b9b340c365a16 2017-04-02 22:02:32.566297 Hash: e5b844cc57f57094ea4585e235f36c78c1cd222262bb89d53c94dcb4d6b3e55d 
Going to be honest, most everything I learned about the nitty gritty was from running into issues or a question, searching stack overflow or google and usually found a good example and explanation from the pros on there. To me coding is something you learn from doing it not staring at a book. But that is me.
Electron is still pretty cool, to be honest. People are making really attractive desktop apps which are mostly cross-platform, and there are tools for making packages and installers from them (Python doesn't have great tools for this, though I have a couple of projects aiming to improve the state of play). [Etcher](https://etcher.io/) is a great example of what I mean. Writing images to USB sticks or SD cards is going to take a few minutes, so it doesn't matter if the application takes a few seconds to start - it takes me longer than that to look up how to use `dd` every time I want it.
OR! we could do a "hidden" window on the start bar that looks like an executing python script.
It would be something like the python logo with r/python right next to it. Pretty sure Start Bar guys wouldn't mind. 
I don't think I disagree with that. You *can* do cool apps with Python with Kivy, and with various other tools. I discovered Pyglet recently - that's pretty neat too. But I don't think many people *are* doing these things, which means that there aren't as many resources and tools for people who want to. The community and the ecosystem matter as well as the frameworks.
SimulateMe! PinkAbuuna
Dumb file versioning is pretty simple to implement. Save the version number end unique filename in the db and save the file under that file name.
No matter what value I give to 'color', I can only draw in white.
I wouldn't recommend this to someone who is unfamiliar with Python, or general programming, though. This is good after someone has worked through Mark Lutz's "Learning Python" (the mouse book). Awesome book though!
April Fool's notwithstanding, it's an old joke that Python is just Scala in disguise. It looks like: object HelloWorld { def main(args: Array[String]): Unit = { println("Hello, world!") } } So, python(ish) with stronger typing and braces. Even python 3.5+'s type hinting shenanigans are very scala-esque. See also /r/Scala
if print(c) raises divide by zero you want to know about it
RemindMe!
Unless you are not writing an open source app and can't afford the license costs. Commercial QT is far too expensive for a single developer. Especially if you are coding part time after your day job. $295/mo. Seriously?
I've some ints at the beginning to specify parameters concerning the settings of the simulation that produced the data. While the data itself are all Xe+Y thankfully. but there is a nasty load of strings ... mid way through the file, which of course pandas.read_fwf() doesn't like.
I'm writing Python with Tkinter on Windows, compiling into a single .exe with PyInstaller.
they're ascii, I felt that loadtxt wasn't quite powerful enough for my purposes, but i might give it a go
In other words, design the entire thing for you? If you aren't able to at least get a concept on paper, you might be in over your head
/r/learnpython 
Beazley's "Python Essential Reference". part I is the best part - about 200 pages that covers how it all works. amazon link: http://a.co/aK8cyLi
It was a happy day when ternary `if` added to Python.
I have a logo idea [here](http://imgur.com/cZOBeVC) that we could do. It is a 28x28 image so a good place to put it (IMO) is at (800, 875) as the top left corner. EDIT: Notice the black edges. It is a 28x28 with the black edges
/t/learnpython 
You could use `myFile.readlines()` to get a list where every element of the list is one line of your file. Then, you can iterate through that list using a `for` loop, checking for duplicates in every line instead of in every file. To get the line number, you can use the `enumerate` function like this: for i, line in enumerate(lines): print(i, line) In this example (with `lines` being the list returned by `readlines`), `i` will be the index of the list element `line`, which is equal to the line number in this case, except for the fact that `i` starts at 0 instead of 1. To get the line number, you can just use `i + 1`.
I appreciate the advice. I don't want to waste anyone's time.
Let's discuss it here: https://discord.gg/GxWUk
I hope it didn't sound mean. I love that everybody provides this that and another library. It's just that if you get inundated with these posts and no context it's hard to put in the time and effort to vet every single one. 
Dang, a shark popped up since the time I made the sprite. That could be a problem. We can write over it though, hopefully
Those are a good start. If you can find tutorials that involve setting up a small test run project, or use them to set up one for yourself, you'll get your hands dirty and get a feel for how things work. I prefer to do this before trying to implement my own project ideas, to make sure I get the concepts I want to learn straight first. I'm easily distracted once I get into my own work :) Caching is cool, but honestly, probably unnecessary. Even complex websites with a reasonable userbase don't need it - a good database (Postgres is my preference) can do tons of work in a few milliseconds. I only implemented it because I had a specific use case where about a hundred different result sets of a very complex query would need to be retrieved thousands of times per day, with those results only changing occasionally - in that case it seemed better to cache the results in redis, then separately trigger a purge of the cache whenever needed. I wouldn't bother for 99% of sites, even for ones where there would be a small performance benefit - it's easy to start hunting for metrics instead of delivering useful code. (Separately, it *is* actually pretty easy to use the `flask_cache` package with redis - only a few lines of code needed.) SQLAlchemy can do crazy advanced stuff; if you read all the docs you'll eventually realise that even the edgiest of edge cases is covered. There's a definite learning curve, but getting the basics down isn't hard, and once you realise that your DB model is also a perfect place to encapsulate model-specific business logic, SQLAlchemy objects become immensely powerful. It's also nice not to worry about the underlying RDBMS, although seeing as I stick to Postgres where possible it's less of an advantage for me. 
You'll be better off with having a background task running in a separate process to do that job and any other asynchronous job.
thx. I prefer Postgres, kindof annoying most tutorials demonstrate mysql. 
 for val in an_iterable: if val not in vain: do_stuff_using(val)
Fun fact: list comprehensions (and map/reduce/filter) ARE for loops, just prettied up a bit. Using an explicit for loop is great for doing convoluted things in an obvious and clear way, or for making debugging easier. For example, which of these two segments of code is easier to troubleshoot? things = [f(x) for x in [things for thing in produce_things()] if x % 3 != 0] things = [] for thing in produce_things(): if thing % 3 != 0: things.append(f(thing)) The examples are pretty contrived, but imagine you've got multiple non-trivial transformations being done in a row, and there's a very subtle bug in step 2 of 6. With a deeply nested listcomp, you wouldn't be able to trivially determine which step is producing incorrect output. Of course, listcomps ARE fantastic and I strongly recommend using them, *when they don't hurt readability*.
this is called an edge case in programming so you have to consider this in your code. something like words[len(words)]== lines[i+1].split()[0] . 
One of the reasons stuff gets overwritten is because so many people want to put a huge square block around their art with a single color background. Would be find if "PYTHON" was on a white rectangle but the two snakes shouldn't have a giant grey box around them.
Map isn't pythonic though.
They're officially Pythonic, so they're canonically readable. 
Blech. nums = [1, 2, 3, 4] sum_of_squares = sum(num ** 1/2 for num in nums) 
&gt;I am still not much accustomed to the dry languages of the docs or technical books.(I find them boring, I guess it's just noob things) A lot of them are genuinely poorly written. Being able to read docs is a skill, but they're meant as a reference - consult them when you have a project. 
&gt; However, it's slow, the lack of a compiler means more potential runtime &gt;bugs, the lack of a type system means you'll spend too much time &gt;debugging silly problems, reference counting memory management &gt;means you will have memory fragmentation How don't these criticisms apply to every type of Python program? 
Help me draw by coordinating through pip's `placer` :D pip install placer Then run `python -m placer.client &lt;reddit_username&gt; http://178.62.225.79:45111/instruction` Read about it here: https://github.com/kootenpv/placer
i had to have butt surgery and knew in advance I would be mostly bed ridden for a couple weeks. so i set up my room so I could watch movies from my bed. when the time came, I could navigate my desktop with a wireless mouse just great. everything was fine except finding the volume controls was very difficult. i knew more-or-less where it was, and could guess but with only about 30% success rate. eventually I decided it was as good of time as any to learn android, so I pulled out my laptop and coded a volume control client in android, and a simple server in python that I connected to via wifi. 
This [http://whitemyth.com/sites/default/files/downloads/UniDocs/Practical%20Programming%20-%20An%20Introduction%20to%20Computer%20Science%20Using%20Python%203%202E%20(Gries).pdf] is the textbook we use in class. I found it better than other texts in terms of readability
[Thank you](http://imgur.com/search?q=rawr), I didn't notice it. :) 
If you create a list of all the lines without the bad strings, you can probably just pass that in as a generator to pandas. I'm not a pandas expert, but I did that the other week with numpy. Just don't start splitting the lines and typing things. Python is super slow to type things. Pandas is much faster.
Internal ERP app for production and inventory control. Nothing challenging, but RFID reader input, bar code scanner, and SQL Server DB Compile and drop new version of .exe on a network drive for users.
Delegate here from /r/TsundereSharks Could you please find another place?
Look into Homeassistant.io. Runs on the RPi, and written in python. 
I'm here from /r/TsundereSharks We've spent an entire day drawing that shark without the use of scripts and you guys are about to replace it with a grey box. As far as I can tell there's no way for me to communicate with the people who are actually doing it
Also here from /r/TsundereSharks. Please find a new spot.
**Here's a sneak peek of [/r/TsundereSharks](https://np.reddit.com/r/TsundereSharks) using the [top posts](https://np.reddit.com/r/TsundereSharks/top/?sort=top&amp;t=year) of the year!** \#1: [Nooooo shark-chan](https://i.reddituploads.com/c434ef4738c746a49946b8aa8e8b5a99?fit=max&amp;h=1536&amp;w=1536&amp;s=0dc35073644bc5627d6b64e40a3e0f90) | [32 comments](https://np.reddit.com/r/TsundereSharks/comments/4xt04r/nooooo_sharkchan/) \#2: [Kawaii Pokestop](http://imgur.com/Betuwon) | [47 comments](https://np.reddit.com/r/TsundereSharks/comments/4spovr/kawaii_pokestop/) \#3: [Not sure if this has been posted before, but damn are they Kawaii](http://i.imgur.com/W3T83bu.jpg) | [23 comments](https://np.reddit.com/r/TsundereSharks/comments/5c2ic2/not_sure_if_this_has_been_posted_before_but_damn/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
Not what I'm here for, but damn #3 is kawaii...
There's a big open pink space at 475,914. Can it be moved there so the shark isn't destroyed?
Or the big open pink space at 475,914
I'm skipping grays now, and have told everyone else to do the same. Some are asleep though.
/u/opfeels /u/mcmeaningoflife42
/u/mcmeaningoflife42 is mostly positive! [view results](http://ruadick.com/user/mcmeaningoflife42/) - Ranked #11965 of 60319"
Yes, if you use a transactional database for transactions then a filesystem can support transactions (!?).
I have no idea why the Osu folks are getting streamrolled so much, but perhaps they've overextended themselves.
I am trying to create the python logo here: https://www.reddit.com/r/place#x=512&amp;y=375 [I am going off of this design](https://i.imgur.com/cZOBeVC.png) by /u/Jerfov2. Still located in the same spot! Help me out!!
I already have the flask framework working, but I don't really know what to do to achieve what I'm looking for. 
There's a pretty chaotic, un-maintained area of Swedish flag over near 729,67 that you might be able to claim. Or there's a spot left of the Haskell logo at 247,560 that might be big enough for you guys. There's a patch of pure chaos at 14,341. It seems to have activity going on, but not with obvious intent. Or there's an unkempt area of Irish flag at 476,561 that you might be able to bargain for. And there's some poorly-structured space near the snake at 47,116 that could yours. Anyway, the upshot is, I'm from /r/TsundereSharks, and if I need I'll keep re-drawing shark-chan's tail by hand for as long as I'm awake, but it'd be nicer to make peace with the bots that are drawing over it.
This place looks too cluttered, there's a void in the bottom left corner next to some flags, maybe we could do it there? https://www.reddit.com/r/place/#x=151&amp;y=731
I wrote a module to distribute calculation across several machines. I wrote it because I had a handful of crappy machines and wanted to play with GA's and parallelism.
Here are a few sites that will help. [hackerrank](https://www.hackerrank.com) [codewars](https://www.codewars.com) [codefights](https://codefights.com) [codeforces](http://codeforces.com) [codeeval](https://www.codeeval.com) There are many like this but hackerrank and codewars are two of the most popular and are pretty good too though they have different styles of chellenges. Hackerank contains a wider specter of problems to solve and are harder in many cases. CodeForces is a russian online coding competition. It has some quality challenges and skilled programmers. If I were to judge I'd say they're for the most part much tougher than challenges on other similar sites. Codefights is newer but interesting and can be fun. Also if you like games there's [codingame](https://www.codingame.com). Though not the kind of challenges aiming at real world problems, anything that can sharpen your programming skills will help you, and if you find enjoyment in it even better.
Just saw this. I'll disable my script and tell the others to do so as well. Sorry for the overwrite. 
Here from /r/ziaplace. We've been working on our New Mexico Zia symbol for 20 hours now and the shark and python logo are fighting us. We've already repositioned once to accommodate the Bruins logo, please don't make us move. We only have 3 electoral votes after all, we don't want to be marginalized again...
(maybe offtopic?) How do you quickly build a web app. I've been attempting to learn flask but too much (different) information is making me crazy. Any pointers/examples?
Don't forget about the Python documentation. It's great -- and free. I refer to "The Python Standard Library" just about every day.
From [Python 3.x.y documentation](https://docs.python.org/3/) select "Glossary" under "Indices and tables:".
I only have relational databases so I'd go with SQLAlchemy and join Pandas Dataframes. If it's a lot of data I'd figure out how to do it in Spark using Java drivers for the respective databases. Joining across different databases is rare so I won't mind jumping through hoops myself.
Hey, I'm not exactly sure how to solve your problem, but I'll offer what I can First, welcome to python! Now, so you know, and so you can hope to get useful answers, this type of question is better suited for /r/learnpython. A lot more people looking to help out hang around that sub. Now, when you go to that sub, you'll have to be more specific with your question. Including your code is good, but there's more to it. You want the dialog box informing you of if the file saved. Are you not sure how to make the dialog box itself, how to make it pop up, or how to put text into it? Also you could be asking for how to check if the file saved at all, or maybe your program occasionally throws an error when you try to save it. If that's the case, there's a thing you can add to your code called a 'try' and 'except' statement. Remember, you're asking programmers. We tend to need specifics to answer your questions. When a question is ambiguous, there are a ton of possible paths to a solution you could take, many of which don't solve the actual problem. 
How come you went with MkDocs over the more standard Sphinx? I had never heard of it before, but it looks really nice! Now I'm wondering if I should give it a try.
Aw.. you aren't sharing the code?
When a frozenset is initialized from an iterator of unknown length doesn't it use the same growth mechanism, anyway?
Perhaps you could edit the post to go to the next attempt: https://www.reddit.com/r/Python/comments/635cl6/attempt_to_coordinate_rpython_on_rplace_through/ Can't wait to see the logo!
Also check out https://github.com/OptiKey/OptiKey/wiki in case you need it in the future. &gt; OptiKey is an assistive on-screen keyboard which runs on Windows. It is designed to be used with a low cost eye-tracking device to bring keyboard control, mouse control and speech to people with motor and speech limitations (...) The creator did an AMA a while ago.
Thank you for your generous offer. I have created (non-handwriting) fonts programmatically in the past, so I have a toolchain for creating fonts from vector content (via UFO) with open type tables for contextual alternatives, substitutions, kerning and so on. This project was something different: something that fonts couldn't do (or at least not without a combinatorial explosion of contextual alternatives and variants). It is really about the physicality of the writing. I could, but I don't expect to, use this for word processing or output on a laser printer. So an .otf wouldn't be much use to me. I do totally appreciate the offer, though. I am not diminishing your generosity. I'm sure for an awful lot of people with disabilities, even the basic handwriting font could be a huge morale boost. So thank you for the offer.
You realise according to the original commenter a listcomp was used specifically to "avoid an additional line" right?
Pycharm's issue is about parsing the namedtuple constructor to get field names. Six support is now working, I bet namedtuple support is coming soon. Otherwise autocomplete is working very well. 
Our motion capture system was unable to send data to the robot's operating station. Made a proper port forwarder.
Month since I made first print('Hello world!') finished game.log parser and trying to make nice output with PyQt. Choosing game still doesn't work aka displays only 1st one but 'it's something'. http://i.imgur.com/0wTBTr0.png *Getting back to learn how to Python*
https://discordapp.com/invite/gsdDK
&gt;Hey guys, we need to be more organized if we want to make a difference on /r/place :) (see the previous attempt) Dude, I don't know what you're talking about. The previous attempt is more than halfway done at this point. I should know, I'm one of the people who built the image that it's currently destroying. I'm all for you guys going somewhere else but if you do can you make sure to tell the person currently running your scripts?
But your shark is overwritten by that yellow thing on the right as well. It's hard to find a free spot without overwritting other's art now!
I updated the coordinates to (805, 879) 
For work: Working with Flask and Postgresql on a website where customers add their companies. Also SEO optimizing everything for google. For fun: Just started learning pygame, I am very interessted in games and always wanted to create a good game with python, I mean a quality game (pixel art style or voxel art).
sorrymom.py 
Seems about right 
[removed]
I'm afraid to try this
This is really great. You should apply sentiment analysis as a micro service against social media profiles. And then car loans. And maybe police reports! I'll be so excited when sentiment analysis is finally integrated as a key government service! /s But seriously this is a great write up that I am sure will be referred back to. 
Errr didn't we use the wrong blue for the logo?! Also, the discord invitation posted by /u/rubickcz isn't working right now. We can fix the logo color later though, let's definitely carve a space out first.
Do you mind if we take a look? I realize that maybe, as it is work related, it is off-limits, but if not, it would be greatly appreciated.
Yeah sed some swear by awk. If your using enacts or vim it might be easier to write a macro. Will take a while on that number of entries. 
Can you updated the URL again ? 
Doesn't it make more sense to go by the 2 snakes on the top left?
I'm working on the same space, using the current design (and not changing the blue for now), but I still think the color is not the best choice available: current blue color : #0000ea (0 , 0 , 234) official python logo: #3776AA (55, 118, 170) one to the left : #0083C7 (0 , 131, 199) In any case, glad we're getting something up! Also, any chance of getting a working discord link? 
I started with C++/Qt, moving to PyQt was a breeze, much higher gains on productivity.
....aaand the first one is Arrow. Which you shouldn't use because it's conceptually flawed. Sigh. 
Ah, I see :) Thanks for pointing this out.
[Here](https://discord.gg/hT5rK6r) is a link to the discord.
Huge supporter of automate the boring stuff. And the the Udemy course which follows the book. You can get samples of the various video chapters on youtube.
I've never used [VMProf](https://vmprof.readthedocs.io/), but I found this news quite interesting, as I'm always looking out for better debugging/profiling tools. So far, I've used [pyflame](https://github.com/uber/pyflame) a few times. It allows to profile multithreaded Python code without adding any significant overhead. It also produces flame graphs, which is pretty nice. But according to VMProf's [documentation](https://vmprof.readthedocs.io/en/latest/native.html), it seems that it's now able to walk the native callstack, as well the Python callstack. So in theory, you could get a flame graph that includes both the calls to pure Python code and to C code (C extensions). Pretty cool! I'll need to try it soon :)
Via HN. https://news.ycombinator.com/item?id=14022110
Non-Mobile link: https://en.wikipedia.org/wiki/Interpreted_language *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^51477
Conda update spyder
These aren't even new libraries. Plus it's April. What does *current year* have to do with these libraries?
I'm not sure if this will work but I'd probably try just copying the anaconda/envs somewhere and then getting rid of anaconda and reinstalling it and then copying those directories back. You can also try to upgrade anaconda. I would also be sure you have exported the environments into environment.yml files because it should be easy to recreate them if something goes wrong.
imo because they have extendable pip-installable extension. 
Can you add some monitoring so we can see how active placer is? How many users are actively contributing? When the last person was that logged in? Etc...
Hey, as a fellow graduate student, I just want to give you my encouragement. 
Copy C:\Miniconda\envs to somewhere else Add that somewhere else to your conda config under envs_dirs Reinstall miniconda all you want, your envs will stay untouched
&gt; Add that somewhere else to your conda config under envs_dirs Thanks but what do you mean by this ? Where is the config file ? 
Did you write an IRC client or server?
Reddit, it seems, doesn't want to play ball and add in all the correct new lines for the code. They are there, though.
Invite is broken. New one?
Because it's faster in C++ and because the pandas function probably takes it in the unsplit form.
You are doing several things wrong. * `Message` is a widget, very similar to `Label`. I think you are looking for `messagebox`. * The `print` function is the only function that can automatically concatenate arguments. All other functions require that you make a single string yourself (generally using `format`). * the `command` argument must be a function. * To add to a value, you need `+=`, to return a new value, use `+`. * do not use wildcard imports I think this is what you are trying to do: import tkinter as tk from tkinter import messagebox root = tk.Tk() root.geometry("200x200") stats_core = {"Strength": 10} def print_core(): message = "Your Core Stats:\nStrength = {}".format(stats_core["Strength"]) messagebox.showinfo("Stats Display", message) def add_to_strength(): stats_core["Strength"] += 1 test_button = tk.Button(root, text="Add value", command=add_to_strength) test_button.pack() show_core = tk.Button(root, text="Show Core", command=print_core) show_core.pack() root.mainloop() If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
You need to add 4 spaces of indent to get a code block rendering: def foo(): do_the_thing() then read this: http://effbot.org/zone/tkinter-callbacks.htm `command` takes a function (a callable), you're giving it a value (namely `stats_core["Strength"] + 1` which is `101`. Also you need to store the value back in the dict once you've incremented it.
You have a million way to do this stuff and there is a lot of tech out there to do this kinda stuff, building it is fun but you could find something more robust, it's a decision you have to make. Also there's value in bespoke stuff. Just make sure you control i/o in to your files
I made [this](https://www.reddit.com/r/placeQR/comments/637o1s/finished_version_algorithm_that_automatically/) to maintain the qr code in the top left. Thank you for your work. Was really easy to make thanks to you.
Because it's boring :D but helpful ;)
&gt; Microservices’ biggest con is performance, but greatest pro is time-to-market. This is blatantly false. Microservices do little, if anything, for time-to-market that you couldn't have without them - the speed at which you can change direction with microservices is a collateral, the real kickers are scalability and fault tolerance (and in a way, Erlang invented the same idea decades ago). By extension, the real reason why Python's run-time performance is mostly irrelevant is because the code that you write in Python isn't going to be the time-critical bits - those are still written in C, or some other language that is more suited to the task. A typical Python application spends more than 90% of its waking hours waiting for stuff: disk, network, peripherals, RAM, syscalls. Optimizing the Python part will often produce absolutely no improvement at all.
The beauty, and enjoyment of writing the code outweighs the slowness of the language. Theres ways to get it to run pretty fast (async/uvloop, tornado, etc). It's not as fast as C, but who cares. I don't want to write C for web.
There is already one here that needs some help defending: https://www.reddit.com/r/place/#x=807&amp;y=901
Sorry, but this might just be a difference of opinion. Most org's I know of that adopt microservices do it for the "organizational scalability", the other pros are just cherries on top. This post summarizes the pros from sam newmans book: https://stackoverflow.com/questions/34903605/microservices-what-are-pros-and-cons All of the pros listed improve time-to-market except for the "scalability", which in the long run, could also improve time-to-market. Your other points about python not spending much time in CPU is correct. I mention that in the article: "CPU is most likely not your bottleneck".
So, a big caveat of this post should be that all of this is **extremely** web oriented. For anyone doing anything remotely related to data analysis, CFD, or any form of scientific computing, this post don't apply. Because speed **does** matter in some circumstances. HPC does not rhyme with Python. Yet, scientists use more and more Python. The reason is because it's great to prototype stuff, analyze data, and most of all, the interfaces with C or Fortran are wonderful. This is what makes Numpy and the whole Scipy stack so wonderful. It is because *it is fast enough*. So, your conclusion still apply to us (scientists use Python *because it's easy to do something with it*), but not so much the reasoning (*speed does matter*, but when we do, we do it in C/Fortran). Please, don't forget about the science part of the community :o)
It works for me. At least if I install it through Anaconda.
Yes, but no, not always. Let me give you a bit of context. I'm a researcher in astrophysics. The details don't matter, but what I'm doing for a living is solving non-linear, highly coupled PDEs with high enough accuracy and on a large volume of universe. This does already require to run on "big boxes". The code I routinely use, written in Fortran, routinely runs on hundreds or thousands of cores, and typically needs large amount of memory. One science run can require typically a few 100 000 CPU hours. So CPU *is* the bottleneck for that kind of project. But you might have noticed I said my code is in Fortran. That's because the first iteration of the current code originated around 2002, and it is much too expensive in terms of manpower to rewrite it in C++ or whatever. And it wouldn't be so much better (unleash the trolls here, if you want). So yup, "my time matters". But still, if I want to change something, it is more effective (both for me and in terms of CPU time) to add one more module in Fortran rather than develop in Python. Still, I would prototype it in Python, do the first order-of-magnitude tests in Python, check if the physics makes sense, and so on. But if I want to use the "biggest boxes" available for me, I need to use C/Fortran speed. Because low-level management is mandatory for my kind of purpose. This does not defeat your point (i.e. *do what's more optimal in you-time*), but "more optimal" does not always mean "in Python".
Yes, I totally agree. My main point, "optimize your most expensive resource" still holds. And yes, the solution is not always python. My point was that in MOST cases, python will probably work just fine. But I totally understand that some things dont work great in python. For example, you wouldn't want to write a real-time bidding app in python, or an Operating System, etc. So yes, I would say this is exactly what I am saying. If you find that your most expensive resource is not "time to write the code", then please use the right tools to optimize whatever your most expensive resource is.
I suppose it would have to. Based on looking at the source for setobject.c, it would appear that if the iterable passed is not a frozen set, it calls `make_new_set`. I don't see a way in which it couldn't resize and take an iterator of unknown size...
Call is deliberately blocking. You can use [popen](https://docs.python.org/2/library/subprocess.html#popen-constructor) instead.
It's the continuation prompt. You're probably pasting line along with the newline character that's after it. You've got three options: - copy&amp;paste code without newline - remove the newline after pasting - select code in the editor and use `Alt+Shift+E` to execute it in the console. Hope that helps :-) 
I want to open test.txt in my editor (leafpad). The arguments for Popen are a list of strings, starting with the program I want to open. &gt;&gt;&gt; from subprocess import Popen &gt;&gt;&gt; p = Popen(['leafpad','test.txt']) &gt;&gt;&gt; p is then a handle for me to interact with leafpad. &gt;&gt;&gt; p.kill() If that doesn't work, can you post your errors.
There is no cross-platform way to read input events, especially from an undocumented device like the Steam Controller. `libusb` is probably your best option, but you'll have to drop down to a really low level for that to work.
Alrighty, I'll have to look into that for sure, thank you for the direction! :) What exactly do you mean by dropping to a low level tho?
/u/Phobos95 is slightly positive. [view results](http://ruadick.com/user/Phobos95/) - Ranked #50114 of 63709"
You might as well include `fig.savefig('aaa.png', bbox_inches='tight')` to remove white strips around your plot. Still don't understand why this isn't default.
sorry it automatically upvotes and tkinter ismt complicated the complicated think is prometheus and tsschecker 
When you make your figure, you can use the keywords `figsize` and `dpi` to specify the size (in inches) and resolution of your file. Also, if you save it as a .pdf instead of a .png it saves a vectorized version. Try running this for example: import numpy.pyplot as plt import numpy as np x = np.linspace(-3, 3, 50) def f(x): return x**2 y = f(x) plt.figure(figsize=(16, 9), dpi=250) plt.plot(x, y, label=r'$x^2$') plt.legend(True) plt.savefig('fig1.pdf') Edit: Forgot to close the string expression in the `label`.
Just a few curious questions from a curious man: Where are you studying? What are the courses like? What sort of level of detail do they go into? What year are you currently? Thanks in advance! 
I am working my way through a Machine Learning course right now. Its pretty good. I have purchased a number of courses on Udemy my advice, listen to the sample content and make sure the voice doesnt irritate you. Good luck. 
Any takers? Looks easy enough.
No problem! See my edit, I forgot a `'`:)
Let me have a look at the code and the issues/feature requests in the next couple of days but I think I would be interested. The projects looks great, it solves a common problem in a easy way and indeed has room to grow and a user base. Here's my GitHub account if you'd like to 'vet' me - https://github.com/pawelad
Also, debugging a list comprehension can be much more cumbersome than simply rewriting as a loop with a print statement.
Can you paste the error?
I have chromedriver installed but perhaps in the wrong place. I assumed I could tell webdriver where to look for it inside the program as that seemed to be what the videos I watched were doing
You need to provide more details. What are those programs and what do they do? How often do you need to use them? Are you proposing re-building them from scratch or building ad-hoc interfaces around them? Are you only wanting to build tools to help process output from them or input to them? The answer is that you should do what best accomplishes your goals. If there's a way you can do this that the broader community benefits, then awesome - great! 
The scikit packages cover a very large degree of specialization. Can you post a link to the codes you use, and give more details about the type of work you do and what you're trying to improve? There's just not enough info to offer any useful advice.
People would be more fearful. Mainly because you'd left the strait jacket behind when you left the padding room.
Thank you very much! I'll look into these.
Damn thanks. matplotlib has been a mystery to me. Every time I have to visualize something I have to kinda wing it.
&gt; Yet, scientists use more and more Python. ... It is because it is fast enough. People can point at benchmarks all day if they want. Yes, C is faster, without a doubt. But I can write equivalent Python code in a tenth of the time. So I could give a rat's dick if it executes 40% slower.
I would try to download the webdriver and put it in your project directory. Next time please consider r/learnpython 
Question 6 is covered in the Python Tutorial. It's where they first teach you about defining functions ... looking ... section 4.7.1. It also tells you what to do if you don't want that behavior. 
And sometimes python is faster or fast enough. Just last week I tried to speed huge a huge transform on billions of rows using Go - but had to abandon the effort: * Go's csv module is both slow &amp; crappy - and lacks the ability to handle trivial quoting, escaping, etc. * Go's gzip module is even slower &amp; crappier - breathtakingly-slow. A hybrid of python &amp; go turned out to be the fastest solution (about 50% faster than pure python), but since it screwed up the csv data I couldn't use it.
if you save the plot with the same plt.savefig() convention, but set the filename arg to 'transparentback.png' it just automatically sets background to transparent??
That sounds about right. The CSV is just 3 columns (date,time,value). I would be happy to send you one of the files if you are interested. 
I'll look over it for ya, just shoot me a PM or something. I can't make any promises as I am about to graduate but would like to add something to make my resume "pop" or stand out :) Also you said files, as in plural? Do they all follow the same format/layout? Are some formatted differently than others?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
https://www.continuum.io/blog/developer-blog/calling-c-libraries-numba-using-cffi Let's you write some lower level glue code in a native code speed python library too.
Sounds like cephes. Those old libraries haven't been updated because they do everything they need to fast and accurately. Cephes (for instance) is used by scipy and torch and probably dozens of others who don't say so. I'd say work on improving their python interoperability (calling from and packaging into). Did that with cephes at my job recently. Trying to reimplement that would have been awful.
You should look at JIT compiling to Fortran with SymPy. We use it and get good performance. The initial compile time can be somewhat slow (maybe you don't have to use JIT, I don't know about that; that wouldn't be a great use of cluster time).
Just start and post questions in /r/learnpython
Let's find out! [Here](https://gist.github.com/nickdumas/f7bb22d992476b4fd84095e1dac54f9f) is a gist I threw together with python2 vs python3 `dis.dis` output for functions using 1) listcomps 2) for loops 3) for loops with yields. I have to leave work in a few minutes so I don't have time for an in depth analysis. Feel free to fork the gist and do a writeup or comment or w/e.
Since 2 years now, we have been doing online stochastic gradient descent, learning from about 5000000 per hour, 24x7, extracting hundreads of features (from a space of billions of features) from each of them, and predicting rates in realtime in a few milliseconds. 95% of the system is python, the remaining 5% is C. The system is indeed FASTER because python is the main language: multiprocessing, ipc (both zmq and stdlib), database access (pg with many optimizations and intensively batched updates), the ability to quickly try&amp;err many algorithms and data structures to find the best design and implementation, code expressivity, etc. all of that is enormously facilitated by python. Of course, if we knew exactly where we were going to from day zero, then we might have implemented everything in C++ to get full speed; but in the real world, the net result is faster than it would have been if every bad initial decision was petrified into rigid, tediously written code. Besides, for most of the problems we deal with, heating a core is hitting a scalability limit, so parallelism is the biggest concern and python is very practical for multiprocessing (sometimes you do want threads accessing shared state and python then becomes a PITA, but it's not that common and going that way also precludes going multinode later; besides using shared memory covers most relevant numerically intensive cases). All in all, I would say that speed is not only an attribute of a solved problem, but also a consequence of the problem solving process. And that numerically intensive problems are also very "framework intensive" these days, not only web apps. Finally, let me add that python is still an excellent glue language (in the classical conception of scripting language) for faster modules written in other languages by the same or other parties. 
fastest way to learn is to follow a book and ask questions in /r/learnpython/
I would if I had any idea where to start. I'm a complete novice, recently started on automate the boring stuff with python. 
 I would like to collaborate with you on this and achieve the desired result.
Is it yet *recommended* for Python 3 use? I don't know if they've had enough time to work on that part of it yet, since the donation they received from Mozilla. 
Those are libraries. They aren't complete solutions in themselves; you need to "right" apps/scripts that use the libraries.
Can you parse one csv once?
? Don't use 'is' to compare strings.
FYI -- thought I'd update you we made sure matplotlib works on repl.it and also we try to show generated files (like say figures) https://repl.it/site/blog/file-updates
requests + beautifulsoup
http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html
Which new aligners are you referring to? My old lab was trying to design one so I'm trying to keep up on what's modern
Gotcha, thank you for clarifying, really appreciate the cheat sheet(s)
3.4 is supported. 3.5 is beta and available on one platform only.
No prob. Helps me a lot, too. Corrected the mistake on Github
Makes sense: True == 1 False == 0
For 2D data contour and contourf are very useful. They can be more quantitative than imshow and usually generate files with smaller sizes in vector formats for publication, for instance.
https://reviews.financesonline.com/p/taskque/ 
Let's say we want to know wether it is dark outside or not. There is a website for that: http://www.isitdarkoutside.com. We'll use Requests and Beautifulsoup to scrape the answer from the website. import requests import bs4 request = requests.get('http://www.isitdarkoutside.com') The content of the webpage is stored in `request.content`. We'll pass the content to the Beautifulsoup HTML parser. parser = bs4.BeautifulSoup(request.content, 'html.parser') You can easily scan through the source code if you pretty print it: print(parser.prettify()) Beautifulsoup offers different methods to search for elements on the page. `find` and `findAll` are pretty useful in this case. We are looking for the element with id `answer`. answer = parser.find(id='answer') print(answer) This returns the full html element, we only want the content print(answer.contents)
IIRC there's a question about this in the PyPy FAQ, and it wouldn't provide much if any speedup. Mixing types in tuples is also incredibly useful - that's the whole point of tuples.
CFFI is my preferred tool, although Ctypes, Cython or CPython Extensions work as well.
Though I agree that it's quite easy to express ideas in Python, with a very natural flow to its language and syntax, I don't think that's entirely why it's on average shorter or more concise than other languages Going hand in hand with it's fairly short syntax structure, do recall that the amount of packages available is one of Python's greatest assets. If you need to interact with an API, someone has likely already written and actively maintains a Python wrapper for it. That's a lot of code you don't have to write to interface with the API, with maybe a single line in `requirements.txt` and a single `import Client from apiwrapper`. Similarly, there are many other, high quality packages that abstract away a lot of the length and bulk of mundane tasks (think `requests`) and allow a programmer to then use these abstractions to express ideas. PyPi is one of the most expansive and diverse package repositories for a very popular language across multiple fields of study, and I don't think the author of this article really addresses that.
https://www.reddit.com/r/Python/comments/637sm3/yes_python_is_slow_and_i_dont_care/?ref=search_posts
I'm not saying you don't need boundaries in order to scale software teams. You do. I'm just saying that those boundaries don't have to be network boundaries. I've had pretty good success implementing these boundaries as *library* boundaries, and decoupling through package management - each sub-team was responsible for a few libraries, and we'd internally publish releases for them. We still used service-based architectures for some things, but the choice was made on technical grounds (scalability, fault tolerance, availability) rather than organizational. Scope and scope boundaries were guarded more than enough using libraries and releases. For Uber, the situation is special, because they had to scale at an insane rate, and they had to scale on multiple dimensions at once - team size, traffic, data volume. Microservices cover the "traffic" and "data volume" parts, and provide enough leverage for tackling the "team size" part - but using them *only* for the team size part when the other two are not an issue isn't worth it IMO.
slowclap.py
import CIA It's in the global namespace by default on windows.
Thank you!!! That worked. Was just some white space that I didn't realize I had copied over. Also, upon realizing that, I also found out I could just hit the up arrow to paste the last code that was typed and even further back. I really appreciate it! =)
When you need static types, just use mypy
Thanks for the help. I got it to work by removing the tbody portion. When I expand this thing to do more heavy lifting I will use html5lib.
C'mon, this exact same story was posted yesterday (though to the Medium version). Did you check the front of /r/python before posting?
And if you need correctness, also write the appropriate tests. Even strong staticaly-typed purely functional languages like haskell don't free you from the responsibility of testing the code you write. You can always write a type-correct code that does the wrong thing.
I can't speak to how an employer will view it, but the courses themselves (for the ones I've purchased) seem very well organized and I'm learning from them. I'd recommend them.
If you are ever googling python stuff and google asks if you are ready for an adventure, click yes. It is not a virus. It's a job interview. 
Thanks!
Interesting idea, although I have to say it's probably only applicable for areas where you are non-expert (if even then). I work a lot in the DNS realm, and the amount of pointless or even harmful advice is overwhelming. My own take on it is that if you understand the reasons for a recommendation then you can follow it or not. Recommendations presented without explanation make me nervous (like the SQL Alchemy special-purpose library recommendation)... 
kreygasm.py
Thx for feedback, I will think about your points.
Great! Thanks
I fully agree that Python is great for science. That's why I use it everyday. That's why I push my collaborators to use it whenever it makes sense. And indeed, for most use cases, you will not need to re-write the performance-critical part of the code. When you're just crunching numbers, you can use the Scipy stack and any assorted library you want where the heavy lifting is done under the hood. However, again, some people *do* write HPC code themselves, and yes, it might happen than calling a Fortran module from Python is too slow, just because you need to reshape a huge array or whatever. In most cases, using PyPy, Numba, Cython, the native f2py provided by numpy (I can't tell you how much I love it) or whatever smart optimization is more than enough. But not always, and that was my only remark. I think in the end we're all kind of agreeing anyway, right?
pieceofthe.py
one time I was playing around in google docs and found a "google drive" version of a code editor, similar to Atom. I was stupid and thought I could just find it later so I closed it and continued on my school work. Little did I know it was a interview type test. 
You destroyed the tsundere shark
Currently working on my personal commute times project. I've gotten python to do the calculations for me, and i am working on making python export the times to excel for me. Cutting the time down from ~20 minutes by hand to ~20 seconds. Hopefully my professor thinks the outcome of the project is meaningful enough so i can join her research team. ^^^^^^^^^^^^^^^hopefully.
Did this happen to you? What where you searching for? Would love to get a shot at it 
Trying to polish up my Python 3 skills so I can start using it for some web development projects I've been thinking about. I want to stop my annual habit of trying to pick up the newest, coolest framework, and settle down and actually build something worthwhile.
There is now a very high level plan for how to proceed with [Phoenix](https://groups.google.com/forum/#!topic/wxpython-dev/aenkS6q_SJs), the Python 3 version of wxPython
If you're talking about [foobar](https://foobar.withgoogle.com), it's tied to your Google account and you can still access it once you're invited.
I'm going to be working on fixing the icons in the spritesheet of this subreddit. Apparently I messed them up with the april fool's day prank.
what
We had an annoying javascript version. I wish we'd used the python one.
[Yep](https://thehustle.co/the-secret-google-interview-that-landed-me-a-job)
Oh neat! Thanks again!
shoulda left an exec command, just in case someone decides to run place through a python interpreter to see what happens
They find you. 
Baka senpai!
Yeah, initially we wanted the logo to be on a gray background with a "PYTHON" text below, but we faced repulsion from people drawing the New Mexico flag, so finally we decided to just outline the logo and defend it.
One of the first automation scripts I saw for r/place was written in Python. So I'd say "we" left our footprint quite early. :)
Thanks
Your threading would have to be done in C though, right? Because of the GIL?
I've got two things going right now: At work, I'm currently working on porting our existing scons-but-not-really (which is terrible) based build system to pure scons (which is less terrible). The code base is a few million lines of C code. Rather than doing everything manually, I'm generating new scons scripts by parsing the actual list of compile/link/archive/etc commands that are executed by a build. It's actually working pretty well so far after a few weeks of effort, though it's still missing some plumbing to actually invoke a real build. On a personal front, I've just started on a pretty simple python -&gt; C++ transpiler, and I've almost gotten a (very basic recursive) fibonacci sequence to transpile into proper (and fairly readable) C++! The current plan is to support whatever python 3.6 features I feel are interesting and ignore everything else. The big caveat is that it will (at least initially) require the python code to be completely typed.
I found it when I was searching for super() related concepts. Don't participate, fuck google.
I think the other one you're looking for is [poline](https://github.com/riolet/poline). Of those 3, it looks like poline is the only one under active development, so I'd call that a winner. If this contest is flexible enough to include in-python rather than in-bash solutions, [plumbum](http://plumbum.readthedocs.io/en/latest/local_commands.html) + ipython is a very functional combination. I like it because I know I'll be able to get what I want done, in a predictable mostly pythonic way, but it's not oriented for use within bash or focused on one-line solutions. pyped gives the following example: $ ps aux | pyp "line = x.split()" "print(line[1], line[-1])" | grep worker In python with plumbum, a similar operation could be done a number of ways, such as: from plumbum.cmd import ps print( '\n'.join( f"{line.split()[1]} {line.split()[-1]}" for line in ps('aux').splitlines() if 'worker' in line.split()[-1] ) ) (one-line plus import) or: from plumbum.cmd import ps for line in ps('aux').splitlines(): _, pid, *_, cmd = line.split() if 'worker' in cmd: print(f"{pid} {cmd}")
That link does not answer the question OP is asking.
I did modify the script that way but mine was polling the sub's wiki for the latest picture.
These are some good picks.
Html unescape then regex out the json object based on knowing what the first key was. Given that time was of the essence and that I would never have to maintain it, practicality did beat purity.
I don't think there is an answer to OPs question. There is no one right way. In the common situation where there is already a mature C library, writing your own C function doesn't necessarily make sense. I think my post is an excellent example of one right way to do it. It worked really well for me where cython would have been less ideal. But it always depends on the situation.
Well shit, I should stop using startpage/duckduckgo.
Wikipedia ["Separation of Concerns"](https://en.wikipedia.org/wiki/Separation_of_concerns) Define what you want from the page and put it in a processing queue. You're going to lose the WebDriver functionality if you're not on the current page you're parsing...but you can dump the HTML and re-parse with `beautifulsoup` or similar.
I've used http://weasyprint.org/ in the past to generate invoices and such. But its CSS/HTML parsing is limited so your bootstrap stuff would probably not look right.
There's several coding-style games, where you have to write code to advance. I can't think of any at a third grade level though. Do they still make those labVIEW controlled legos? 
I'd recommend using phantomjs for this. phantomjs rasterize.js "filepath" output.pdf filepath can be local file or a URL. You may be able to use Selenium with PhantomJS to accomplish this. There is a driver for it, but I haven't tried it with this specific use case.
https://opensource.com/life/15/8/python-turtle-graphics http://www.oreilly.com/pub/e/3422
https://pi-top.com/product/ceed-universe It's a raspberry pi with all the programs needed (scratch, python, programming games) for an introduction to programming.
The site is not mine, but I liked the tutorial. I think it will be great if the author show the results of the coding examples.
That's an interesting plan but it's not test-coverage nor will it exercise edge cases. Some important tests are targeted at conditions that only show up rarely in production, so I don't think automation will be enough on it's own.
I think treehouse provide some courses that should be accessible to kids. I'm not sure about python but they have a course for HTML/css where you customise a bear or something like that.
Strange. I guess CentOS started including it by default at some point. The prior release doesn't have it.
What you're describing is called *regression testing*, specifically against a *golden record*. This is certainly not a bad idea, but there are some tools which might let you use even better tests. [Hypothesis](https://hypothesis.readthedocs.io) is a great Python library for testing: you write a normal test function, then decorate it with a declaration of what inputs it takes (eg "an int &gt; 0" or "this object constructor called with args of these kinds"). When it finds a failing example, it then simplifies it as far as possible. This is super-powerful if you can use it to generate data, call an old and the new version, and assert that the result is the same - I garuntee that this will find edge cases you didn't know about. I'd use it anyway, but this is a really easy and powerful way to get started.
Right, I checked /r/askpython and it was empty. Thanks for the tip! This answer doesn't seem to work though: Traceback (most recent call last): File "./my_script.py", line 23, in &lt;module&gt; includeSet = set(options.get("include-mount", [])) TypeError: 'NoneType' object is not iterable 
Is `options` the dict? Maybe you could use ```options.get("include-mount")``` 
Ha! Yeah, I should've seen that. My previous answer will work for you then: includeSet = set(options.get("include-mount") or []) 
That... still doesn't work if options is None, since it'll try to do .get on it before it goes to the [].
Awesome, I'll check those out and compare them to my old labs method. Thanks!
Yet.
Good work for getting us set up rubickcz! We did well in the end!
So I think `get()` is what you need. It will return `Nonewhen the key is missing.
[**syntax_sugar**](https://github.com/czheo/syntax_sugar_python) is a legit pipe library, although I'm not sure that it matches the use case you mentioned.
Joined! Thank you for allowing us to share the financial costs of developing. I'm quite impressed with the VOC approach to getting python on android. Your idea seems like an original and most-likely-to-succeed solution. Here's to you getting 2,000 supporters!
Totally, 100% not what I was asking about but very interesting anyway. I wouldn't ever use it but it's a cool idea!
You should post this on /r/learnpython But for I can see you're using "`()`" instead of "`[]`". Python thinks that `original` and `ABCNormal` are functions/methods
I got it while searching "dependency injection". 
First: r/learnpython is the correct place for this type of question. To answer your question: you're indexing original, which is a string. Use square brackets [i]. Same for lists, such as ABCNormal. () is for calling functions. Also the character in original is " ", which doesn't appear in ABCNormal, so you'll never get a result. 
This looks like a homework problem. Let's not do OP's homework for them. 
I think what you're looking for is in the menu under "Code -&gt; Optimize Imports"
The filenames need to be strings, and `n` is an integer. You can build strings with the likes of `str(n) + '.png'` or `'{}.jpg'.format(n)`.
My main use of python has been prototyping code bits before i implement them in java. Shame we don't use python for assesments at my uni, but I'll still keep using it where i can. Still my favourite language to use 
Thank you. It's interesting that after I learned about this, I found several places where old code could be simplified by using transform too. Hope it helps others as well.
I've been searching for stuff like this for years. Maybe it doesn't happen in countries like Mexico
To be pedantic, you're using libpng and libjpeg with pillow. And there are imagemagick bindings for Python called wand (and it's pretty awesome). I personally prefer wand to pillow, but that's me. 
Not as exciting as everyone elses but im currently making a project that updates and tracks stocks in excel for a school project. Super tedious to do manually
Thanks! 1. In this project, I've used mpv/mplayer in slave mode, without using any module for playing multimedia. But There are some python bindings available for mpv which you can take a look at. 2. media server - which is just another web server, is based on python's basic http.server module without depending on any external framework. 3. For web-scrapping, that required fetching metadata BeautifulSoup is sufficient. But one can use any scrapping module for this. 4. For user interface, I think PyQt is the best, when it comes to customization. Once we use PyQt, we get many good components of it such as QtWebEngine which is based on chromium for any web related tasks and for displaying customized web pages, which we can also use for scrapping some javascript heavy pages, without using selenium or phantomjs. 5. For local database, sqlite and it's python bindings are sufficient, which doesn't require setting up any database server. 6. For Tagging of audio files, one can use either pytaglib or mutagen. There are some more optional modules, which you can look at README for varios tasks.
Boo! 
&gt;Make it easy for users to install their own certificate By this do you mean you're doing auth through clientside browser certs? If so I've done it in the past with nginx validating their cert and then sending the cert fields through to Flask. Let me know if that's the case and I can paste some code in here. I really liked doing it that way but haven't done it recently because some proxies and load balancers don't forward that info (look at you, ELB...) and because users bitch endlessly about having to import certs into their browser.
&gt; However, the author clearly doesn't understand the purpose/role of robots.txt and of Terms of Service. This is a small, yet super important point. His account might be banned, or worse, he might get into legal trouble. There was an entire section of his article dedicated to `robots.txt` and he mentioned that instagram didn't have one at all. But if you check it does have one and all it does it stop bots from accessing api urls. There is a section in the TOS that does prohibit it though. That being said if the web scrapers I use respected a website's robots.txt then I wouldn't scrape ANYTHING. Everyone disallows them, or damn near everyone. At worst he could get his account banned from these services. I highly doubt there would be any chance of legal repercussions.
He said how following people results in a human feeling of "I owe you one." so they follow back. Automated accounts don't care but the human accounts will do the whole "Well, he followed me so I'll follow him". Then he just unfollows the next time the script is run and the human users don't bother to unfollow him as well. So he ends up with actual users.
Right now I'm working on learning the rest of the socket module (the Bluetooth parts, looking into PyBluez) so I can start making a custom app with Android Studio (which I am also learning).
I would recommend learning on the latest 3.6.x. For most purposes 3.4 and 3.6 are identical though.
Just read that, it seems to make more sense now. Thanks!
It started to do that while I was typing in my next search and I didn't stop fast enough for it to stay on the page.
lol what?
Yep, he's using a 2d array. It's a list in a list.
If you mean the "Script Editor", that's not an interview test.
While I don't _only_ write Python, a good majority (probably 95% or more) of the work I do is in Python. The rest in in either C++ or C#. With the possible exception that I am a contract dev as opposed to an employee, I'd imagine my lifestyle is very similar to programmers who use other languages. A good amount of my work is backend stuff, some automation, some analytics, and, more recently, a lot of web development using tools like Django and Flask (I'm a bit obsessed with Flask at the moment). As long as you're not using some obscure language, the language you write will find you pretty much the same jobs as any other developer. Does that answer your question? Is there something specific you'd like to know?
You don't have f-strings in 3.4.
Aswell as the new async syntax
&gt; for most purposes
How much are you printing to the console / stdout? The time that print statements take can very a lot from platform to platform. (Windows VMs being particularly bad, IIRC). 
No, that is not what I'm referring to.
[Hiring] Python software developers for full-time in-house work at Eniram Ltd in Helsinki, Finland. Our team creates the platforms for: - data storage - data processing - interactive computing Our services are used by our data scientists, analysts and production systems in order to help shipping companies save fuel and reduce CO2 emissions. On the Python side, useful skills include mastering of Linux, NumPy &amp; Pandas, Jupyter, JupyterHub, Docker, Kubernetes and Cython. More information: http://www.eniram.fi/about/careers/5666-2/ or PM
If you have VLC you can get libvlc bindings for python. https://wiki.videolan.org/python_bindings Note that it only plays media, so you'd need to create an interface.
It's not a question of heavy lifting, html5lib is probably slower than the native lxml HTML parser. The difference is that html5lib is a proper HTML5 parser, and should generate a tree identical to what you see in the Chrome (or Firefox or Safari or Edge) devtools, that's not the case of the builtin lxml parser.
Yeah. It's not well advertised how far along it is and it sucks that there is basically only one person doing the development.
If this is about Anaconda v regular, this might also be an issue with optimisation settings in the interpreter binary. I know the ones from Python.org for Linux used to be slower than the ones supplied by Ubuntu because ... reasons (they had to support a wider range of platforms? they didn't have the budget?)
class-based indexes, subquery expressions and it being a LTS are my favorites. having support for three years is just sweet :-)
Thanks to all who participated, especially you guys, who joined our discord.
Both using anaconda? Anaconda is good at makings sure numpy and similar are properly optimised when installed, so that could be the reason.
Of all the videos I watched about async programming in Python, this one is on my top two list. I'll post the other one if I can find it again. If someone has link to material (video or text) that builds off this video, I would love to see it. 
You had one job 
What are you using as libraries? Are launching a dedicaced python interpreter every run? Running on a already running ipython console means that you don't have to reload the modules every runs. It could explain a huge overhead. Mind sharing a minimal example able to reproduce the behavior in order to run some benchmark?
@OP keep in mind that 3.6 has everything 3.4 has and more. although just a bit more. But there's no downside to starting with 3.6
One of our friends just got a job at Google and he had to move to silicon Valley. He's paying $2400/month for his apt. I don't know what the different offices do but this would have been the same kind of job. In Seattle we're paying $1800 for 600 Sq ft a month which I think is crazy as well. The mortgage on our house in Texas was $1200 for 1900 Sq ft. It's all nonsense over there in the west. 
First, how are you even discussin this ? Are you THAT dishonest ? Secondly, there are a huge part that DIDN'T accept your message. What about them ? Seriously that didn't occur to you ? Then for the one that did answer, it's because they believe it was real. Or they are bot themself. Of just automatically accept anything because they are too happy to have numbers. And anyway, this has nothing to do with the reaction of the people you spam. Spamming is defined "the use of electronic messaging systems to send an unsolicited message". Not "messages people don't want". Now get your act together, accept what you did and decide. Either you continue spamming and are alright with it. Or you don't and you stop. But don't fart and pretend it's channel n5.
&gt; Also the character in original is " ", which doesn't appear in ABCNormal, so you'll never get a result. Fix that and the "B" is still a problem.
thank you for your reply! I am actually not printing anything! I just run the script and generating the variables, but I'm not printing a single thing in the console...
thanks for replying! yeah, I'm using Anaconda and Spyder to run my script in both consoles. I normally just use IPython, but for a reason I ran my script on the Python console and noticed how long it took!
Thank you for your reply :) I am importing pandas, numpy, matplotlib.pyplot and datetime. The code at the moment is around 350 lines (ugh) and imports data from csv files (45 csv files are read and imported to Python, with some columns attributed to parameters in custom classes) and messing around with these parameters to calculate some stuff. I know my description is not particularly helpful, but I can't quite share the data files that I'm importing, so I guess sharing an example is not so useful? Any advice on that?
Maybe it's time to finally try it out! Haha
It was late, I thought it was funny.
+1 for pandas, perfectly suited for this use case
Wow, I was recently looking into asyncio and this talk is in the top 3 of the best explainers behind the logic. Another interesting one is from one of the developers of the module [Yury Selivanov](https://www.youtube.com/watch?v=m28fiN9y_r8).
You haven't tried out jupyter notebooks yet? Oh man, they're the best for interactive programming. I've used them for everything, from making slideshows and tutorials to being frontends for massive data processing tasks. Since it's a web server you can also expose it to collaborators. It's been a game changer for me.
Lists are arrays of pointer to objects. So you have an integer point for the address of the integer object. An array is an actual array of type specified. 
The mplayer program has a "slave mode" that could be used: http://www.mplayerhq.hu/DOCS/tech/slave.txt There is also a Python wrapper for the API: https://github.com/baudm/mplayer.py
&gt; And programming with threads is very hard because of all the things that we must consider when using them. Hmm, OK, I don't really agree.... &gt; Unfortunately, asyncio is a complex beast with many concepts to understand. Imagine that! &gt; In a manycore future, we will need to write programs that execute in parallel. [....] &gt; The answer is asynchronous I/O. Except asyncio does not address the GIL issue in any way and does not provide paralleism. &gt; If the cost is so great, why continue to write asynchronous code? Speed is not the (only) answer. asyncio does not add speed at all, only throughput.
It was, but a fullstop ended it all
SimulateMe! PM_ME_CUTE_PUPPYS 
I seldom recommend the [`array` module](https://docs.python.org/2/library/array.html) because it confuses people, but this is a perfect scenario to use it. There also exists the [`struct` module](https://docs.python.org/2/library/struct.html) if you have fixed sized objects, that can be represented, and don't need all the extra type functionality.
The only reason to not use the latest version of 3.x is if you have a dependency on some package. The lag is usually a few months.
The biggest problem I had with mine was to make it easy for casual users to run. Installing Python and getting packages with pip was a hurdle for lots. I could freeze it as a single executable but I want the source to be easy to inspect so people can check out I'm not stealing their credentials. I don't know if someone has an idea to make the process easier.
What about deps?
But then people need to trust the zip they can't easily inspect.
I spend about 20 hours of my own time a week maintaining open-source projects, but I honestly don't see the issue. Obviously a fun little exercise has much broader appeal, especially to people to r/all, than any specific OSS library or blog post.
I usually just export to html, but since it's just running code you can write your own report exporting. You can export to latex or pdf too with the right setup. The notebook format is also pretty easy to work with (it's just a json file) if you want to do more complex stuff. 
As others have said, flask is what you need. You'll need a hosting environment for it, PythonAnywhere and Heroku are two of the most popular I think. I use the former and it genuinely makes it easy if you have no idea what you're doing. 
Much better, thank you! Subtle difference changing "-" to "_" there.
Nbconvert can create HTML and latex. You can also use templates, but I have not yet invested much into it. At the moment I cannot see this for pixel perfect reports.. but "quickly printable analysis"..
The best structure depends on what you intend to do with the data after it is loaded into memory. What algorithms are you running on it? What access patterns? Read only or read/write? A sorted 2xN array can be faster and more compact than any dict, list or hashmap. Instead of updating hashes and extending lists during insertion you just sort at the end. But this data structure is not suitable unless the data is pretty much static after initial loading. BTW, many operations can be done in sql right on the original SQLite data. Depending on what you want to do with it this may be faster than the initial loading...
My version did the same! I also separated the image color converter and the actual placer, so you could edit the image manually afterwards. Sadly, color distance algorithms don't always give the result that looks best to humans (as that's highly contextual).
I don't know about "the script" - I think there were a few out there. I wrote my own.
Its sad that asyncio is so misunderstood. Admittedly it took me awhile but once you "get it" its so simple.
I'm all for more people using docker and the Python use is kinda handy especially if you're trying to just make a brain dead tool and want to easily distribute it.
Awesome... I've had to work around this alot. Any idea if it applies to kernel densities as well? I should look into it more 
I think you may have replied to the wrong comment, you probably assumed my reply was about the instagram thread (funnily enough it makes sense in that context too, although I agreed with your admonishment about spamming).
Yeah that's just [the default transformation optparse performs to get a `dest` from your long name](https://github.com/python/cpython/blob/6f0eb93183519024cb360162bdd81b9faec97ba6/Lib/optparse.py#L675) if you don't explicitly specify one. You can override it by specifying `dest=&lt;a name&gt;` explicitly.
It's Python code so you have to have Python installed on the other computer to run it.
Automate the Boring Stuff is one of the most commonly recommended starting books in this community. I can personally recommend it as a great approach to teaching Python with a mind toward real-world/workplace applications. Note that, like other books by Al Sweigart, the full text is also available online: see the sidebar. I've heard good things about the other books in the bundle, but haven't read many. I'd be interested in hearing others' thoughts on some of the other books/authors in the bundle.
asyncio? 
Is there no way to execute it?
Because their main stack seems to be PHP and MSSQL - because it used to be classic ASP and MSSQL.
Requires javascript to see a bunch of text, lol. Welcome to the Web 2.0, creating more complicated ways to solve an already solved problem. For all you no-script'ers, here's the text: &gt; This post describes a recent architectural change made on my team at Wayfair. The Intelligent Systems Team, as we are called, is responsible for creating a fully personalized experience for millions of customers every day. One of the core products we own is the Recommendations Service. At its core, the service is a simple Python/Flask app that provides recommendations used on site, in emails, to power our proprietary display retargeting platform, and throughout various other applications. &gt;An Object Relational Mapping (ORM) is a technology that translates relationship database schemas to an object-oriented model. The Recommendations Service utilized one to retrieve information from MSSQL server before storing that data in Redis. This blog post explains why we’ve discarded this approach in favor of directly dispatching SQL queries using SQLAlchemy Core. &gt;The last few months have seen the Recommendations Service increase in both functional and architectural complexity. The core of this service is the ability to ingest a 32 character alphanumeric GUID per request which corresponds with a predetermined configuration. Having to adhere to a strict SLA, we try to hit the DB at most once per request, and only if the cache is empty. &gt;With the most recent feature update, Configuration Sequences, our configuration query needed to model a One-To-Many-To-Many relationship. Executing this DB interaction through the existing SQLAlchemy ORM became too unwieldy, for multiple reasons. Others have written fairly extensively about their distaste for ORMs. Here are the main reasons why we’ve deprecated our ORM code. &gt; Code Maintainability- ORM code can appear elegant when working with simple models. When that model contains multiple join tables and picklists, things get fairly complex. We ended up with over 100 lines of code that were tightly coupled to the database design, single line functions with half a dozen operators, and lack of clarity about how often the DB is queried. Not only did someone need to learn a new technology to be effective, but their success was often hindered by a lack of documentation. Directly dispatching SQL queries in Flask is fairly straightforward. &gt; Do less work- It’s much more efficient for an engineer to build a SQL query once, than to have the ORM do that work for us every time a request is made. Additionally, the more complex the query, the more difficult it is to translate into ORM code. By altering this approach, we are enabling the service to scale more smoothly. &gt; Don’t hide the good stuff- Data Literacy is one of our main tenets at Wayfair. If you’re an engineer, you should be able to “speak SQL”. The idea behind an ORM is to hide the SQL code, but it doesn’t- it just makes it more unintelligible. The most important parts of the query are abstracted away and hidden behind a foreign syntax. This is very bad- especially when you realize that your vital WITH (NOLOCK) hint doesn’t actually work. It’s very difficult to optimize a SQL query you can’t see, so why not just put it directly in your code? &gt;In general, the service is now more pleasant to work with, and gives our engineers an increased sense of confidence when pushing code. This is due not only to the legibility of the code, but also the increased testability. Just another way we’re trying to shake the anti-patterns from our codebase.
My first guess is that you are in fact using two different numpy's, one of which is [MKL optimized](https://docs.continuum.io/mkl-optimizations/) To verify this, first go into your `ipython` and see where that numpy is located import numpy print(numpy.__file__) Then do the same in your regular python shell. My bet would be the files are different. EDIT: After a little digging, you really want `numpy.__config__.show()` to inspect the differences in how numpy was compiled- see [this stackoverflow answer](http://stackoverflow.com/a/19350234/1948982)
Hrmm...I already have a bunch of these from a previous bundle, but it's tempting to get the ones that don't overlap 
wow! thanks for this!!! 
And thou shalt not stop at three unless you know what you're talking about, in which case you continue until four, and then, and only then, stop [Template strings](https://docs.python.org/3/library/string.html#template-strings).
No, it's Python code and it has to be run through the Python interpreter.
That might well be the cPython representation, but how do the numerous other Pythons do it?
Would you recommend them?
You could hand out the spare keys to some friends or coworker's. at this price, even the overlap isn't too bad, just to get one book.
Thanks alot!
Surely there will not be too many packages that are compatible with older 3.x but not 3.6? Python prides itself on **NOT** breaking backwards compatibility. Yes I know about 2 vs 3, boring, please can we move on.
David Beazly's "developer library" was great. My learning on python was the primer on python.org, and that book (and of course the stdlib docs on python.org). 
 Can I code that in a .bat or .exe file?
I don't know how you can implement it any other way, as a list can hold all various types. This is the inherent difference with list and array. The array can be packed, because you are giving it the size of each item. 
I don't think Humble Bundle provides keys for books, they're simply in .epub format so you can download and share them if you want.
So Jython and IronPython use arrays of pointers to objects? Okay I'll take your word for it as I'm far too lazy to check right now. Or are we talking at cross purposes?
What have you tried?
It doesn't have to be the case, but most implementations I've seen use a PyObject and it is a Vector (growable array) that stored pointers to PyObjects. It is the most straight forward, performant, and memory efficient way to achieve the goal. For Jython it looks like an wrapper around the Java implementation of List. https://github.com/jythontools/jython/blob/master/src/org/python/core/JavaProxyList.java I tried to read through it, but there are sooo many wasted characters... :) 
I believe the proper term is "hostages" these days. 
this is so cool
What did all the hits from your search tell you to do? To put it another way, I don't spoon feed you, wipe your mouth, check your bib or change your nappy. If you can't be bothered to put some effort into taking yourself forward I suggest that you give up.
but I'm sure the author would enjoy it if we bought it as well ;)
Would anyone recommend the hacking books for complete netsec beginners?
Chess!
Which package are you using to run the code in Atom? I'm using 3.6 so I'm not sure how helpful I can be but I can take a look at my setup and compare.
What can normal virtual machines do that Docker can't?
I'd love to hear more about what it's like to program every day. Do you have a certain number of bugs to squash each day? Programs to complete at the end of each month? How much of your time do you spend programming? And then how did you get into it? Fascinated by python, not sure if programming for a living is my jam. Also not sure how much I need to learn to call myself a developer. 
It looks like you're trying to mention another user, which only works if it's done in the comments like this (otherwise they don't receive a notification): - /u/autotldr --- ^I'm ^a ^bot. ^Bleep. ^Bloop. ^| ^Visit ^/r/mentionhelper ^for ^discussion/feedback ^| ^Want ^to ^be ^left ^alone? ^Reply ^to ^this ^message ^with ^"stop"
I'd like to know too
The Python Crash Course is pretty good. Haven't looked at "Automate the Boring Stuff" yet, but I have it from a previous bundle.
From the sample code, I'm not sure what problem your tool solves. I still have to write SQL, and I still have to analyze the data myself. So you just wrote a thin-wrapper to psycopg2, that basically just suppresses exception? (which I actually consider a downside..) The features in the "coming soon" section might make it worthwhile, especially if you can automatically create cron jobs, and save the output to a directory organized by date.
Nooooooo ;)
Any of these worth grabbing for a very experienced Python user? 
Damn that's good..
Ugly. You can do any check in first line if and raise any exception or even return None or something.
I've used Tesseract in Python to do a job like this in the past. The accuracy of the OCR was quite good.
I've got a bit of background in that area and own a copy of grey hat python. I haven't looked at it for a long time mainly because I didn't get much value from it. IIRC it's very focused around cracking binaries on Windows platform via hooking into a commercial debugger (with a suggested free alternative debugger). If that is your interest then you might like it. If you are hoping for broader context then maybe give it a miss. Someone who is more familiar with the book might give you a different impression. This is just my recollection. 
1. A color is defined by 3 integers from 0 - 255. To make life easy, many people (especially in web development) combined these 3 into a single 7 character string which starts with '#' and uses the 2 characters for each color in hexadecimal notation. This is called 'html color' or 'hex color' codes and tkinter accepts this notation. That code you have converts the 3 integers into that single string. 2. What brackets? 3. A GUI needs to have an infinite loop to look for and react to changes. Some of those you define but a lot of them like the minimize, maximize, close, buttons, OS signals, mouseover events (highlight the button under the mouse), etc are default. `mainloop()` starts the GUI's infinite loop. The function does not end until the GUI closes. If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. 
This was recently posted
Maybe wordpress……
This post is better suited for r/learnpython
How are you approaching this? Are you using your geo location?
Well our SI gave our teams CSV files for data gathered from crime areas in and around Portland, OR i believe. We have to display these stats on a 2D Array(a heatmap), like a 3 here if there were three coordinates mentioned, 6 if there was 6, etc.
Can anyone show up?
Wow, I've never seen the use of programming books because there's so much out there on the internet, but I now see the light! The formatting, consistency, readability, and presentation are top-notch. I'm gonna make my friend read one of the beginner ones.
Just requests/pillow. I would check what is the right origin and source image to use by checking on the sub's wiki so that people who went to bed could still be updated on the latest strategy.
The code has a couple typos that I assumed were copy paste errors. First, indentation is very important in python. Also you have a 'o' where a '0' should be. Try this: import Tkinter as tk window = tk.Tk() def sliderUpdate(source): red = redSlider.get() green = greenSlider.get() blue = blueSlider.get() color = "#%02x%02x%02x" % (red, green, blue) canvas.config(bg=color) redSlider = tk.Scale(window, from_=0, to=255, command=sliderUpdate) greenSlider = tk.Scale(window, from_=0, to=255, command=sliderUpdate) blueSlider = tk.Scale(window, from_=0, to=255, command=sliderUpdate) canvas = tk.Canvas(window, width=200, height=200) redSlider.grid(row=1, column=1) greenSlider.grid(row1, column=2) blueSlider.grid(row=1, column=3) canvas.grid(row=2, column=1, columnspan=3) tk.mainloop() 1) Look into string formatting. In short: `'%02x'%variable` is a (old fashioned) way to convert an integer to a zero padded hexadecimal string. 2) You mean what is the point of "source"? The trigger passes some information and that is just a way to dump it, since its not needed. 
Thank you so much! BTW on line 23 you wrote row1 instead of row=1
A few lists in a list.
Ah good catch. A typo I missed. 
This is great. I only wish it had touched on decorators with arguments, such as `flask.Flask.route`. I've always had trouble remembering how those work.
Just finished automate the boring stuff and loved it. Is crash course a backwards step or new stuff?
Thanks! I'll start converting
Im new to Python.. Like 'Hello, World!' new. How are fStrings different than say * print("hello" + variable) ???
wow easy to understand.. Thank you so much. Honestly didn't expect you or anyone for that matter to reply to someone as new as me. But your example made perfect sense. You dont tutor do you? LOL...
&gt; And if you need correctness, also write the appropriate tests. Even strong staticaly-typed purely functional languages like haskell don't free you from the responsibility of testing the code you write. You can always write a type-correct code that does the wrong thing. Do you spend your time asserting the types or something more productive. Saying "write tests" to compensate for dynamic typing is great if you have infinate time, and infinate patience to do things a machine should do for you with a trivial amount of hints. &gt;When you need static types, just use mypy The primary maintainers of mypy recently announced they are no longer funding/driving it's development. I hope the community picks it up successfully. You could just use a staticly typed language when your doing something that you intend to maintain longer than yourself and your current focus.
Author here. This humble bundle is for the benefit of the Python Software Foundation, so they'd be the ones enjoying it if you bought it. Well, I guess I would enjoy it too. The PSF is an awesome group of people.
RemindMe! 2 weeks
Yes, excellent question. The whole reason I started this is because in my current class, there are 2 or 3 people out of 28 that can code sufficiently. I made this to help them in particular. Of course personally I work in python 3.6, but the WJEC (people who mark our work) have specified 2.7. I didn't want to put the burden on my class to try to figure out how specific changes to the language will affect their code. If I ever remake these lessons, I can assure you they'll be in python 3. 
i can never resist a good book bundle
Sure. I don't know that. Now what?
I'm sorry for doing this, but you might be intereed in [this blogpost](http://hyperboleandahalf.blogspot.cz/2010/04/alot-is-better-than-you-at-everything.html?m=1).
That's what I'd like to know.
What does Invent Your Own Computer Games with Python use? Pure Python, tkinter, pygame, etc.? Edit: It's a mix of pure Python shell and some pygame. There's a sequel Making Games with Python &amp; Pygame too.
Now you have closure.
Add --rm to your Docker run command and you won't have all the left-over container clutter
&gt; making slideshows Can you elaborate on this, please? I briefly tried nbpresent, and it was quite cumbersome.
&gt; But aside from embarassingly parallel programs, this has always been considered to be too difficult to be worth it. Maybe for python fanboys. Other languages (even some scripting) had neither designed themselves into a "threads impossible" corner, nor fostered the "threads are baaaaad, don't use them" mentality. While the whole world around has been using threads to do great things (mainly: using them as an implementation detail to build better abstractions), pythonistas had been nursing their stockholm syndrome, calling others fools, masturbating with processes and calling it "the better way".
I just got them, anyone recommend a general reading order? Or just where to start?
id like to see anything like that in python 3
/r/evenwithcontext
Hmm, just yesterday I was thinking "I should learn Python" and now this...
They cover hacking/security, gamedev and math. Might be something good if you are new to those areas. The rest are tutorials, with basic introduction into python itself, webdev, automatation and some hardware-stuff with raspberry pi and arduino. Nothing that isn't already coverd by the thousands of tutorials online. So just for them, it's not really worth. Interessting though is the wide range of small projects from different areas. If someone seeks some inspiration it might be worth the up to 15 bucks. But more important that that, it's a good way to donate something to python.org. Even if the books are not much worth for you, it's cheap enough and includes an donation where you can decide hoch much goes to whom. That is IMHO more than worth the money.
But does stripe let you payout? EDIT: Found my answer it doesnt. This is my only pitfall at the moment. Thank you! 
Because you haven't contributed anything meaningful. Your post is not a question that asks for advice or stimulates discussion. Neither does it teach the community anything new or relevant. It merely informs us of something you intend on doing, and your motivation for doing so. You do not outline how you intend on doing that (what libraries you might employ). 
right thank you for actual clarification. 
You're welcome. I didn't even downvote you, but in short the post really sticks out like a sote thumb on this sub. Consider editing it with an actual outline of how you're going to approach your project. Also I feel you on the boring job, I've done a similar job and it is painful.
I'm really not good at descriptive writing. I literally can't get the words out.
What would be the best order to work through these for a Python beginner? Start with crash course then do the Automation book?
I think you can only copy/cut/paste cells in the same notebook, not to another. You should just copy the content of that cell and paste it in a new one on the other notebook.
Bullet point it. And to answer your question as to why companies don't implement it, management and complacency. The workplace I mention actually hired a company to overhaul their IT systems, and it's taking years. So add incompetence. 
Totally agree on your second point. Python has been a big part of my work and life, so I had no problem getting this bundle as an excuse to donate to the python foundation :)
It looks you put out a lot of effort to make this, and had the courage to actually seek opinions. I'd like to congratulate you for that alone.
+1. There are many good reasons to not use an ORM, but additional complexity is definitly not one of them.
Yes, but.. "This release adds some long-awaited features, such as cell tagging, customizing keyboard shortcuts, copying &amp; pasting cells between notebooks, and a more attractive default style for tables."
Ah, I didn't see that. I'm not sure then sorry :(
gaaaah that reminds me I need to finish my bot for Askreddit thread scraping! what does your bot do?
Why not just use matplotlib (imshow or hist2d) or seaborn (hexbin) to do the graphing for you.
"Could you give me the code to build a flask restful API with an angular 2 front end?"
Thats really to goal of it, we use postgres alot at work as well as pgadmin and converting csv files to excel files with tables it tedious, I want to solve that issue!
Thanks! I really appreciate that! I definitely want it to be something useful for other people and not just a project!
Whose is awesome.
These are the examples I didn't transcribe: &amp;nbsp; ### Page 1 **A:** `Recursion` &amp;nbsp; Specifically, the `sumRange` example. &amp;nbsp; I couldn't see the benefit of using recursion for the given use case, and couldn't think of any use cases where it would actually be more useful than looping or using `map`/`filter`/`reduce`. &amp;nbsp; Anyone know of a good real-world application for it? &amp;nbsp; ### Page 5 **B:** `Referential Transparency` **C:** `Execution Order` **D:** `Type Annotations` &amp;nbsp; I didn't fully understand the `Referential Transparency` examples, and couldn't think of a way to implement the `Execution Order` &amp; `Type Annotation` examples in Python. &amp;nbsp; I do know how to use basic type annotation, but am not sure how to translate the `String -&gt; (Int -&gt; (String -&gt; String))` pattern used in the examples. &amp;nbsp; ----- &amp;nbsp; If anyone knows how to implement these things, please post examples! 
&gt; It really challenging and rewarding work, but the hours are insane and with the ever growing outsourcing of work it was only getting worse. After about a year I was suddenly working ~22 hour days as if it were normal Sounds like why we're all fucked
already linked @ `Related Resources` (*first one in the second group*). haven't gotten a chance to go work through it yet, but seems like there are a lot of useful examples.
Perfect you're the man/woman/other!! 
I will be messaging you on [**2017-04-20 14:08:07 UTC**](http://www.wolframalpha.com/input/?i=2017-04-20 14:08:07 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/63nbw9/humble_book_bundle_python/dfwcfjc) [**3 OTHERS CLICKED THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/63nbw9/humble_book_bundle_python/dfwcfjc]%0A%0ARemindMe! 2 weeks) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! dfwq9n2) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Sadly, youre right. 
Whose awesome? Your awesome. ^^^/cringespelling
Son of a bitch! I spent 60 dollars last week on three of those books. I got the automate the boring stuff, python crash course, and black hat python. I don't know anything about coding and I'm going through the crash course book first. So far, it seems well written. It's easy to understand and he does a good job explaining things. That being said, I don't know anything about programming, so it could be the worst book ever made and I wouldn't know.
Your questions are irrelevant, unfortunately. My point is that if you go against the ToS, you put yourself in a vulnerable position. Sure, they might just cancel your account; this is the most likely scenario. But they might also sue you for whatever reason they think is right (trespass, violation of the Computer Fraud and Abuse Act, copyright, etc.). If they do so, it means that you need to get a lawyer. Even if you're right, and you eventually win against the company that sued you, you'll have spent a lot of $$$ on legal services. So you lost, essentially. Now, I'm not saying that this is going to happen for sure. This *probably* won't happen. I'm just saying that it *might* happen. Are you willing to take the risk?
Both of the "computer games with python" books are great, and helped me have that breakthrough moment. Quite a heavy reliance on pygame in book 2, which is a little old and clunky for real word stuff, but definitely a good way to get the fundamentals in.
What if you want to be a dysfunctional programmer?
Also pynsist
2 scoops of Django worked well for me
It's interesting discussing new ideas, it should be done more often! this proposal though means that we cant any longer pass iterators into functions. That's incompatible with a lot of programs, so will def be a no-fly. 
That's valid criticism, but it's just 1 file. :set tabstop=4 expandtab :retab! and you're done.
Coincidentally, I used flask and angular2, but I separate them. I used nginx to serve the frontend and have it make calls to my flask backend: https://github.com/kootenpv/neural_complete
Just a joke. But seriously people, don't use tabs!
Do you mean his "Python Cookbook"?
The rationale is that multiline string literals are sometimes convenient.
sure, when defining a string. not sure I see it as more convenient than not letting you know you missed a comma in an array though :/
I use tabs for identation and spaces for alignment, but you can judge me.
*shrug* I guess I just never used that form before. I personally find it a bit vague without a plus or comma or some other syntax indicating explicitly that concatenation is happening. oh well, you learn something new every day I guess
&gt; Because You can predict all the combinations of inputs from the users? I don't follow what exactly user input has to do with type errors in your code. You should be sanitizing input even in haskell. &gt; since you talk in singular form, it sounds like you work alone I work in a small company, with a small IT team, yes. But bigger teams probably need even more certainty, so tests are much more important then. Using static typing as an excuse to not testing is much more dangerous than just using dynamic typing in the first place.
**Here's a sneak peek of [/r/spacex](https://np.reddit.com/r/spacex) using the [top posts](https://np.reddit.com/r/spacex/top/?sort=top&amp;t=year) of the year!** \#1: [SpaceX Interplanetary Transport System](https://www.youtube.com/watch?v=0qo78R_yYFA) | [2857 comments](https://np.reddit.com/r/spacex/comments/54rrnb/spacex_interplanetary_transport_system/) \#2: [The first stage has landed successfully on OCISLY!](https://twitter.com/spacex/status/718542066041532416) | [1251 comments](https://np.reddit.com/r/spacex/comments/4dycyv/the_first_stage_has_landed_successfully_on_ocisly/) \#3: [I am Elon Musk, ask me anything about becoming a spacefaring civ!](https://np.reddit.com/r/spacex/comments/590wi9/i_am_elon_musk_ask_me_anything_about_becoming_a/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
Nothing is more disgusting than you spaces programmers.
`target.write("\n%s\n%s\n%s" % (line1, line2, line3))` Also, post questions in /r/learnpython.
asyncio creates an enormous amount of complexity, work, and frustration for not just its own users but also the entire library ecosystem that needs to be completely rewritten or forked to suit this programming style, all in the name of underlying technical assumptions which are completely wrong yet are continuously parroted in blog post after blog post.
As written, you're trying to apply the `%` operator to whatever `write()` returns, which in the case of 2.x is `None`. You need to apply the `%` operator to the string before passing it to `write()`. Also, instead of string formatting, just do this: from __future__ import print_function ... print(line1, line2, line3, sep='\n', file=target) 
Django. 
r/learnpython Make sure it's for Python 3, Python 2 is (hopefully) dead soon. Paid tutorials aren't necessary, although a good book may serve you well (a real book, not one of those ten page pamphlets). Otherwise don't worry too much. To quote the wise philosopher Shia LeBeouf: Just do it.
For all you space zealot bowl chip peasants, I leave you with this [**parable**](http://i.imgur.com/3rRhrcx.png?1) in the hopes that it will inspire you to learn how to use an editor.
So if in my Dockerfile I have commands to install Apache, then everytime I launch a Docker instance, it will install Apache? That seems very inefficient.
Or you could just define the decorator inside the class and delete it afterwards. class Foo: def decorate(fn): ... @decorate def bar(self): ... del decorate Foo().decorate # AttributeError: 'Foo' object has no attribute 'decorate' ^(edit: fixed the example) &gt; You also can make Decorators private No you can't. The underscore is just a convention.
No dockerfile commands get run once when building the image but storing persistent data like with a DB once the image is running hasn't really been figured out yet. 
&gt; `del decorate` That's an interesting idea, thanks. &gt; No you can't. The underscore is just a convention. I'm well aware of it, and that's exactly what you call “private by convention”. 
Need help in Threading API calls where number of threads could vary. I tried doing it, but couldn't find a solution. Any help would be great! Thanks
This is a great explanation, well done!
So I was just making a program that takes in text, splits them into a list each of n characters(here n=800) and then calls Microsoft Cognitive TTS api multiple times for decoded mp3 (as max limit of characters in single api call is 1000). So for example, for about 16 API calls(due to the restriction obvio), time taken is about two and a half minutes to get the full response. Is there a way by which I can restrict the whole time to something like under 25 secs maybe? This probably could be resolved with multithreading/multiprocessing, but I'm not sure how to do it. I tried it doing once, but failed because the number of API calls is not fixed and totally depend on the length of text. Any help would be highly appreciated! Just for clarification purposes, split_content_by_dot() takes huge amount of text and divides them into n number of characters and returns a list of that divided text get_raw_wav() takes text as input and returns an decoded mp3 in which Microsoft's Cognitive API is used. def this(text = ""): count = 0 weird = '' if len(text)&gt;950: x = split_content_by_dot(text, 800) #len(j) is approximately varies according to len of text for j in x: i = j.replace("&lt;","").replace("&gt;","") print i weird = weird + get_raw_wav(i) #calling of get_raw_wav(i) probably should be threaded count = count + 1 print len(i) return_this = weird else: print 'yes' return_this = get_raw_wav(text) print count return return_this def get_raw_wav(text): key = {'Ocp-Apim-Subscription-Key': '__mykey__'} r = requests.post(url="https://api.cognitive.microsoft.com/sts/v1.0/issueToken", headers=key) access_token = r.text headers = {"Content-type": "application/ssml+xml", "X-Microsoft-OutputFormat": "audio-16khz-128kbitrate-mono-mp3", "Authorization": "Bearer " + access_token, "X-Search-AppId": "__", "X-Search-ClientID": "__", "User-Agent": "TTSForPython"} body = "&lt;speak version='1.0' xml:lang='en-us'&gt;&lt;voice xml:lang='en-CA' xml:gender='Female' name='Microsoft Server Speech Text to Speech Voice (en-CA, HeatherRUS)'&gt;" + text + "&lt;/voice&gt;&lt;/speak&gt;" conn = http.client.HTTPSConnection("speech.platform.bing.com") conn.request("POST", "/synthesize", body, headers) response = conn.getresponse() print(response.status, response.reason) data = response.read() encoded = base64.b64encode(data) conn.close() return encoded
I liked the Python Playground book enough to write a review on it: - https://www.blog.pythonlibrary.org/2015/12/11/book-review-python-playground-geeky-projects-for-the-curious-programmer/ I have skimmed the Python Crash Course one a bit and it looks fun too.
Yeah, I don't really see why people are so excited about it. The asyncio module is kind of cool, but really hard to grasp. Even after reading about it extensively, I had to rewrite my examples several times before I got even simple things to work correctly.
What is the motivation for moving to functional programming in Python? Do all of the reasons spoken of in the article also apply here?
PHP?
I encourage you to embrace the loosely typed nature of Python, but if you're really heading down this path (implementing your own type safety in a real project), I check out http://mypy-lang.org/. 
There is a new site that eases up many of the web based scientific analysis .... this is targeted towards individual scientists and/or small groups, who do not have extensive IT departments.... or other human IT resources... http://witheve.com http://incidentalcomplexity.com/
I have never used it but, since you are already using `requests`, did you try [this](http://docs.python-requests.org/en/v0.10.6/user/advanced/#asynchronous-requests) ? It looks like you can make asynchronous requests with this. Hope it helps you ! 
Thanks for the thorough follow-up! Def cleared up some of the things I didn't get initially, and I'm sure the rest will make sense with more practice. &amp;nbsp; Makes me want to try out some pure FP to fully grasp some of the concepts that don't carry over to Python 100%. &amp;nbsp; Also, here's some extra rep since your legitimate contribution is being buried by the shitposting (*of which I may have partaken...*) above: [**REPPED.**](http://i.imgur.com/yBXmzpK.gif)
I'm definitely not going down this path. The point was that python allows you to basically hijack objects to make them act however you want. It's super simple to basically change how things work under the hood. Maybe I was a little enthusiastic, but I haven't tried to make any of my project code run like this because like I said in the post, I don't have issues with it in the first place.
Maybe I didn't highlight it enough in my post, but this is just an example. I love how python allows you to change how things work under the hood via magic methods. This example isn't pythonic in the sense that it tries to create a rule that goes against how python is designed, but the point is you can create that rule pretty easily. Edit: &gt;Fourth, and this is actually what I want to mention, here's a challenge for you. How would you implement `TypeLocked` so that both assignments in this example raise errors? Trick question. It's possible to make it work, but I don't know if that is possible to implement from the `TypeLocked` object's perspective. You just need to craft your `Child` class correctly: class Parent(TypeLocked): attribute_type_bindings = {'x': int} class Child(Parent): # Copy the Parent.attribute_type_bindings dict attribute_type_bindings = dict(Parent.attribute_type_bindings) # Register additional attribute type bindings attribute_type_bindings['y'] = int child = Child(0, 12) child.y = 'a' # Throws error like expected. child.x = 'a' # Throws error like expected. parent = Parent(5) parent.y = 'h' # No error like expected. parent.x = 'a' # Throws error like expected. My object can't be held responsible for user error ;) If the goal was to change how python works so that it checks the instance or `type` then this seems pretty pythonic to me. It's readable even if you have to register something in a static attribute. If you know the object inherits from `TypeLocked`, you know it has locked `type`s and how to access what those `type`s should be. 
I will judge the shit out of you, and [so will Python 3's interpreter.](https://docs.python.org/3/library/exceptions.html#TabError)
Why does it mean you can't pass iterators?
"Moving to functional programming" implies changing everything and never using for loops and the likes, which I think is way overdoing it. However, some of the practices of functional programming are hugely beneficial even if you're not doing the whole monads thing. The big one is isolating side effects. You can think about it as separation of concerns, taken one step further. Separation of concerns means no popping a MessageBox from the networking code when the network connection has been lost, and not sending packets from the GUI code when a button has been clicked. Instead, there would be mechanisms for communicating between the modules, to allow all networking operations to happen in (conceptually) "one place". This would allow, e.g, merging packets or whatever is needed. Try merging packets when they're sent from the GUI code. Isolating side effects (any I/O, really - database read/writes, network requests, system calls...) gives you automatic layered structure of the code; allows you to control those side effects; and forces you to structure your code such that 99% of the code does some sort of calculation without actually doing anything. This is immensely good when it comes to testing your code. Instead of having to mock all dependencies, your computation functions will take arguments. Instead of doing I/O, your computation function will report back what needs to be done. Writing the code that takes the intent objects and actually does what needs to be done is either trivial, in which case you've simplified the code structure considerably; or it is not trivial, in which case you've simplified the code structure immensely. In my last job, I moved portions of spaghetti-state Java code to use a calculate-and-execute structure. One of them was a GUI to display the system's state. It would make queries and present them in the same code. I moved it to calculate the queries it needs to perform, perform them, calculate the GUI changes and perform them. It made me feel whole and you should do it, too. Also it had no bugs afterwards. You don't need fancy &gt;&gt;= operators to do functional programming. In my opinion, you also don't need `map` and `reduce`. You need them to "move to functional programming", but you don't need them if you want to write good code inspired by functional programming practices.
awesome! thanks for writing this! I am at the beginning of a reoccurring attempt at learning python and your book has been easy to read and helpful. And I meant purchasing it from your website, automatetheboringstuff.com 
I suppose they could have meant duck typed as well. 
I just use an editor that automatically converts tab presses to a designated number of spaces.
the tumblr is leaking
So just starting python...What's wrong with using tab?
My entire company uses 4-space indentation, even for C and C++ code.
Sure it doesn't raise an error if you use a reserved keyword to name your variable, but anyone writing code in Python knows not to make that mistake &amp; editors with syntax highlighting clearly show what words are reserved as keywords already. Nested statements is basically a different way of tackling for loops and simplifies interactions with iterable data types once you get used to the syntax/format. Python's dictionaries are pretty fun/useful and its string library is incredible.
&gt; Using static typing as an excuse to not testing You just made a ridiculous leap. Nobody said that. The premise is that you use static typing + testing instead of assuming testing will catch all the cases that would normally result in the user getting a crappy runtime experience because of some type inconsistency.
Are you questioning the authority of the BDFL?
For some reasons that seemed good back in the day, tabs haven't been really defined. It's an invisible character, but what it means to a text editor is what wasn't defined. In default vim setup, for example, a tab is displayed as taking up the same area as 8 spaces, but if you press tab while editing, the equivalent of only 4 spaces are shown. Further, some people like to have a tab displayed as 2 spaces, 3 spaces, 4, or even other values. So tabs have become this miserable item that can't do the one thing they were meant to do: conveniently move text a particular number of spaces. I like the idea of tabs, if their definition were set in stone. But even if the space-equivalent units were set, tabs are slightly different depending on the font you use. So, it really is a lost cause. Anyway, we've found a way to use inordinate amounts of our CPUs to hide most of the effects of this mess from us, while doing nothing to actually solve the problem. Which probably isn't solvable, anyway. Edit: added some words
1. You actually can't use most (all?) keywords in assignments because it would be a syntax error, e.g. you cannot do `if=1` or `def=1` but you can do `id=1` because `id` is a builtin function (not a keyword). It is clearly documented that it is so and every editor would warn you when you try this. So this is actually a non-issue. 2. "*Nested statements creating unreadable code*". Not sure what you mean here. Most languages allow you to nest statements. It is called [structured programming](https://en.wikipedia.org/wiki/Structured_programming). How is this a weakness of Python compared with other languages? Why does this lead to "unreadable code"? 3. Python seams to have all weaknesses that "*that doomed other languages*". What exactly are these other weaknesses? Are you really comparing VB to Python? For real?
Attempting to repeat some of my matlab code in python.
Have you been through any python tutorials? You're looking for r/learnpython. We have a bunch of learning resources linked in the sidebar there that you'll want to peruse.
I've been using html export and then wkhtmltopdf. You can even apply some css! 
Do you think that async might be a step towards having better parallelism in python in the future? Like, if corotines could release the GIL so long as they didn't have mutable objects or something? Or you think it isn't relevant to parallelism at all even theoretically? Genuinely curious.
&gt; a decorator can't reproduce property on its own It's kind of hard to tell the two apart when the syntax is exactly the same; class ReadOnly(object): def __init__(self, getter): self._getter = getter def __get__(self, instance, owner): return self._getter(instance) class MyClass(object): def __init__(self, myvar): # store my variable self._myvar = myvar @ReadOnly def get_myvar(self): # I know you'd never do this outside of Java # but it's a good example return self._myvar myins = MyClass("Hello!") myins.get_myvar # returns "Hello!" The only difference is I'm calling ``__init__`` as a decorator instead of a second order function.
Doesn't asyncio address the issue of IO bound threads fighting over the GIL by providing a more intelligent scheduler? 
itertoolz.py: import itertools how much is reimplementing standard lib stuff?
Those all take a really long time to load. Except datetime.
Just an idea: profile = set("".join(first_name, last_name, year) mail = set(e_mail.split("@")[0]) inter = profile &amp; mail score = len(inter)/min(len(profile), len(mail)) * 100 
The docs on `unittest` are pretty good - it's a testing framework that's part of the standard library: https://docs.python.org/3/library/unittest.html. That would be a good place to start. Some other popular testing libraries are `nose` and `pytest`. These can be used in conjunction with `unittest`, but offer additional utility or convenience. CI stands for Continuous Integration. The general idea is that it's a tool or service that is configured to build your project from scratch, and run your test suite. One benefit is to avoid the "it works on my machine" problem, as dev machines often have environments that are customized in one way or another. They're usually configured to be started from a git commit hook on your central version control repo - often GitHub or something similar. These are applicable to all languages, not just Python. TravisCI and CircleCI are pretty popular, and very easy to add to a project hosted on GitHub. Jenkins is also pretty common, and is extremely powerful and configurable, but also has a higher learning curve. Other general tools you might want to be aware of: `pip` - the de-facto standard way of installing python libraries `virtualenv` and `virtualenvwrapper` - tools for creating virtual environments. This is a way to keep dependencies of one project separate from another. You can also create environments for different python versions if you need to. Python 3 introduced a similar tool called `venv`. `PEP-8` - not really a tool, but a standard coding style guide. Most projects generally adhere to it, usually with some modifications. Definitely worth being familiar with the basics at least. Anaconda - or simply `conda` is a third-party python distribution that is quite popular in the scientific community. It has it's own installer / virtualenv tools. Might be worth looking into if you find all the other tools a bit overwhelming. If you find yourself working in the interactive interpreter often (and you probably will, it's a great way to try things out) - IPython is a pretty substantial improvement to the standard repl. That's probably enough to keep you busy for a while : ) Oh, and run `import this` in your interpreter : )
That's still a descriptor. What I meant was there's no way of getting around needing `__get__` to re-implement `property`. You *could* partially reproduce `staticmethod` and `classmethod` (albeit in an entirely crippled way) with just decorators: def classmethod(f): @wraps(f) def _(self, *a, **k): return f(type(self), *a, **k) return f def staticmethod(f): @wraps(f) def _(self, *a, **k): return f(*a, **k) return f Now, these will only work on methods on an object and not a class so it's an entirely useless replacement for the builtin versions even if they properly emulate how the underlying function is called.
Congrats on your first app! Lots of nice subtle touches, like the parallax effect on the youtube preview image, and the way the helper text moves on the form fields.
C# and the .Net Framework are fine for many problems but without any information about what your product is there's not much else it say because the framework exists to solve so many things. I assume you're providing an on-premise product if your clients care about the language but if you're maintaining your own backend then you should be able to choose whatever backend technology you want.
Great! Thanks a lot. 
Don't listen to anyone who tells you to use one over the other.&amp;nbsp; They are like devout [*insert religion here*] evangelists who cannot respect that you have the ability to form your own thoughts &amp; beliefs.&amp;nbsp; &amp;nbsp; Read my rant against PEP8 @ [**/r/Python/Okay... real talk. Who actually follows PEP completely?**](https://www.reddit.com/r/Python/comments/5x4cx5/okay_real_talk_who_actually_follows_pep_completely/defr9eg/?utm_content=permalink&amp;utm_medium=user&amp;utm_source=reddit&amp;utm_name=frontpage), and the linked reference material (*PEP8, Code Complete, Clean Code, and also - the style guides of any other languages*).&amp;nbsp; Then, form your own opinion and use whatever suits your needs best. &amp;nbsp; Also, respect the environment you're working in.&amp;nbsp; Use your preferred coding style for your own code.&amp;nbsp; If you're contributing to a project that already has some sort of style guidelines defined, drop your preferences and use them instead.&amp;nbsp; Be Adaptable. &amp;nbsp; ### *#NoStepOnSnek*
Yeah, how is this an issue for anyone anymore. I tab key = 4 spaces and I use vim, so it doesn't need to be a fancy editor.
/u/opfeels /u/tigerLRG245 
Try looking for a browser add-on, Firefox had a great one, but recently was deprecated when the browser dropped XUL support.
Appreciate that, using an old firefox version and am using firebug, which is what I bet you're referring to. Can you identify the Xpath in the string I pasted above?
Modified for OP's naming convention: def do_this(asd) -&gt; None: # do something here def main() -&gt; None: do_this(asd) The -&gt; None bit's optional; it's a signal to IDEs, an optional static type checker, and yourself, what the function's supposed to return; in this case, it's python's null object, None.
Selenium has many options for locating an element or text. http://docs.seleniumhq.org/docs/02_selenium_ide.jsp#locating-elements
back in your day? Kids these days don't even remember what it was like before time existed...
&gt; My company is seriously considering changing our tech stack to .NET from python/Django That's unfortunate. &gt; We've got some larger clients requesting .NET A lot of enterprises dove head first into .NET so that understandable. &gt; we've been having trouble finding local python talent to add to our team We tend to be gainfully employed, so that too makes sense. &gt; Would love to hear thoughts from pythons devs who have .net experience too I detest .NET. I've used it for years, and literally the only thing I like about it is the C# language. I dislike their documentation, their IDE, their compiler, the "pip" equivalent, really everything. If you're doing Windows development however, it's the only way to go. &gt; What are things we should seriously consider making this switch? What pays the bills.
When you **define** the `f` function it will create a variable L in the namespace of the function and assign it the value of `[]`, or an empty list. This means **for every function definition, the default values of parameters will be evaluated and saved**. That's the `def &lt;funcname&gt;` codeblock. So, before you ever call a function these default values will be saved. When a default value is mutable, like a list, this means you can accidentally end up mutating the default value and passing it to future calls of the function. It's a classic mistake in ol' Python. When the function finishes, L is not necessarily garbage collected. When you call the function again, if you check the `id()` of the `L` list you will see that the same `L` still exists in memory on every call and is still our same entity as during function definition. &gt;&gt;&gt; def f(a, L=[]): ... print(id(L)) ... L.append(a) ... return L ... &gt;&gt;&gt; L Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; NameError: name 'L' is not defined &gt;&gt;&gt; f(1) 4315636296 [1] &gt;&gt;&gt; f(2) 4315636296 [1, 2] &gt;&gt;&gt; f(3, []) 4315417056 [3] &gt;&gt;&gt; f(3) 4315636296 [1, 2, 3] &gt;&gt;&gt; f(3) 4315636296 [1, 2, 3, 3] Here we call the function without a second argument, and with a second argument. The `id()` function returns the location in memory of our value. You'll see the id remains the same when called without the second arg even after calling the function once with a second arg. 
Welcome to the fantastic Python community! As you're learning if you have questions you can also check out r/learnpython.
**Here's a sneak peek of [/r/learnpython](https://np.reddit.com/r/learnpython) using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [Beginner's Python cheat sheets - updated](https://np.reddit.com/r/learnpython/comments/4y06nq/beginners_python_cheat_sheets_updated/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
Wait, so you could modify a line like that and it'll "create" an xpath? "fso" is what needs to be clicked.
Except it's more like every 5-10 years. format has been around quite a while now.
Seems pretty much like what I wrote.
You can play with PRAW and code a Reddit bot. 
You should look into the difflib builtin library. It contains a SequenceMatcher class which can score two sequences based on their similarity.
Might want to mention that these are cryptographic hashes (good for the stuff mentioned in the article, +1), and are not replaceable with the Python built-in `hash()`, used for unique object reference. 
Default arguments are assigned when the function object is created (i.e. once), not every time the function is called. See also [here](http://python-guide-pt-br.readthedocs.io/en/latest/writing/gotchas/#mutable-default-arguments)
&gt; A hash function is an irreversible function that generates a unique string for any set of data. Any mathematical function can be hash. It does not have to be irreversible. A cryptographic hash is designed to be irreversible.
&gt; generate a unique string for any set of data I was going to say same thing, but it could be interpreted as unique string for single data(does not generate different string for same data). The word is ambiguous though.
Firstly, you'll get more and better help on r/learnpython Secondly, I would highly recommend flask. A simple hello world looks this (please forgive syntax errors, I'm on mobile) import flask app = flask.Flask(__name__) @app.route("/") def hello (): return "hooray!" def main (): app.run(debug=True) if __name__ == "__main__": main() From there you'll want to learn about simple HTML forms so that users can submit data from webpages then from there you'll want to learn a database such as SQLite or MySQL to keep track of users and their data. 
If you are looking for python projects, you may browse it here-&gt; [Python Programming](http://gainfromhere.com/python-programming-language/). Moreover, you may improve your skills, so just try it and i am sure you will find it helpful in improving skills and making python projects.
Obeythetestinggoat.com
Developing a command line application at work which compiles data from batches of Excel files and writes to a SQLite file or a master spreadsheet. Using openpyxl to read the source files and write to and format the destination file. In parallel, also developing a tool which does the same job but with a GUI (using PyQt5). The GUI tool will eventually be used by the client - the command-line version was used for ongoing testing and development.
I'm using Jenkins to automate my stuff and it's very powerful. It just monitors the gitrepo or the files for changes and runs when new code has been commited. The other day I configured it to test, build and upload to an Arduino board. In my case Jenkins is running on a virtual machine.
When I started to read this article I've expected it to be a tricky bug, like list comprehension variable scope thing in python2 at least. But key overlap.... seriously ? Don't get me wrong but that kind of articles make me salty. I've just spent my time reading an article to get nothing out of this. Next time mark it as a beginner at least.
Let me guess... `name` of item in `size` is not unique, so when you generate `identifier_info` using generator, the `alternate_identifier` will be overridden. 
I could use a scriptable sequence diagram generator. Something like https://www.websequencediagrams.com/, but a CLI tool. And the output could be not an image, but ASCII instead. e.g. Client Server | GET /path | | -------------------&gt; | | | | result | | &lt;------------------- | | | 
Go to Travis-CI and look at some notable Python projects. Check what kinds of tests those projects run. That will provide you with a ton of learning. https://docs.travis-ci.com/user/languages/python/#Examples
Why is this not called pylexa?
We're an ad agency and most of our clients are large corporations. 80% of the work we do is enterprise level websites. Our clients either request a .NET cms because they already have one and they would prefer not to (or sometimes cant) switch or they wish to host the website themselves and their IT team is only comfortable with windows.
Ever heard of descriptors? class AssertType: def __init__(self, name, type): self.name = name self.type = type def __get__(self, obj, type=None): return obj.__dict__[self.name] def __set__(self, obj, value): if not isinstance(value, self.type): raise TypeError obj.__dict__[self.name] = value def __delete__(self, obj): del obj.__dict__[self.name] class MyClass: x = AssertType('x', int) def __init__(self, x): self.x = x MyClass('string') # raises TypeError
Let the beginners decide. How about that?
Don't you have a package manager for this?
Doesn't the github API already provide this functionality, pretty much?
No asyncio? 
The definition is that it maps an arbitrary sized block of data to a fixed size
If anyone else wants to skip the narrative and go straight to the tech: https://github.com/nmyster/python-alexa
Cool, buy I feel you need to cleanup your publication styling; I doubt people are having much fate or want to risk social liability in stuff like 'evilstoner35', cryptic orgs like 'tkadm30' or that horrendous website design. And maybe not mix your cannaboid research into your software development activities.
'pragmatic' odd that it's faster than sanic 
&gt; horrendous Whoa. Thanks for this input. I appreciate your comments on my website design.
For these situations where it's not really easy to spot these overlaps I always use a `set_once` function. def set_once(dict_, key, value): if key in dict_: raise KeyError("%s already set!" % key) else: dict_[key] = value
It works across all Python 3 versions actually. OTOH variable annotation syntax is 3.6 only.
Installers might make use of them. Also people downloading stuff like Kali are generally more security-aware and probably will check for it, and also behind the scenes in most package managers (Apt for example) there will be use of checksums.
Wish I had thought of that :P Open to name suggestions
Python 3 hasn't even been out for 10 years. It's practically still in its infancy.
Well, if you just want to get stuff done, implicit async could be a better option. If you go down the asyncio route you might/will come across libraries which are not ready for it. However, I do agree that asyncio should be the way to go and I'm a bit sad this new framework doesn't support it.
If that's the situation then you don't have much of a choice. I don't care for ASP.Net if that's what you'll end up using but C# itself and much of the framework is just fine. It has a very different philosophy from Python but that doesn't make it bad, just different. When I left my job as a backend dev using .Net to one that uses Python, the language and framework weren't part of that decision at all.
This is kind of a puff piece. But worse than that: import hashlib as hash This is **bad**. First and foremost, `hash` is a builtin. Unless you are intentionally overriding the builtin behavior, (which they don't seem to be), it is just asking for trouble. And hard to find trouble at that Second, and this is very subjective, this is kind of a non-standard `import foo as bar` type statement. Again, subjective, but doing things like import numpy as np are well accepted and you see them everywhere. I have read about hashing in Python before and never saw this. Whether or not this should be one of those cases it up to the programer, but it seems like a bad choice here,
Yeah, I think max recursion depth on Python is what....1000? I've been using it to traverse a bunch of websites (well, a crawler) where there's no way we'd hit that depth since it's really wrapped in a for loop and split up since we know the first layer of of visits... So far it's run like butter! But yeah, not the favored paradigm. Do you miss Scala?
Almost none. They use itertools to implement things left out of itertools. I think they alias chain to concat, maybe one other? I don't remember.
My main problem with it as well.
You can use it like this. https://cdn.dribbble.com/users/255834/screenshots/3047271/register.jpg What user needs is just phone number for user registration, we give them the token back if they verify the SMS. https://github.com/wejhink/django-phone-login/tree/master/example
Sometimes there is more than one package manager involved or you might only be interested in certain packages. Dependency management can get messy pretty fast. ;)
I was trying to solve the same issue last week, and it seems that neither pyinstaller or py2exe fully support 3.6 yet. I also attempted to use cx_freeze, which supposedly does have 3.6 support, but I was running into all kinds of issues anyway. I eventually gave up trying to troubleshoot something with so little support, moved my project to Python 3.5, and used pyinstaller with no issues. 
It's only my impression based on limited experience with the language. I haven't done anything outside of exploring simple language features through Jupyter(also very new to me). I'm willing to give it time but just wondered why this language prevailed while so many others went by the wayside. Other, more thoughtful comments outlined that. 
I'm sorry
Testing Weather webservices via POST with various parameter filtering.
I was able to assign a value to len then not able to use it as a function. This was just an experiment and not something I expected to use in any application. It was puzzling since it's was a legal operation. On creating nested statements, you can chain several statements together while creating sets, dictionaries other collections. To me, there is an inherent risk of code becoming less maintainable since it makes perfect sense while you're developing but later you or someone else must then break it down. I'm well familiar with the discipline of structured programming and nesting statements where appropriate. I'm not comparing VB to Python. I'm pointing out that the language allows creating variables without a type and it seems that some time ago, "strongly typed" languages began to take hold in the industry and languages that handle things more implicitly became less desirable. In Python, you don't declare anything, its instantiation occurs when you first assign a value and can later hold a value of another type. 
I'd say the big disadvantage right now is that it's about 2 weeks old and clearly under very active development. I doubt Tom would recommend you build anything serious on it just yet, though now would be a great time to experiment with it and provide feedback. In terms of advantages: those early performance numbers look extremely interesting. It's also very exciting to see someone trying out Python 3 annotations in this way. And you can't discount the pedigree of the author - hard to think if anyone more likely to come up with an interesting new take on API frameworks. 
This article is wrong in so many ways. 1. `update()` appends new data to the hash object; it does *not* replace the original data. The author's example of showing different hashes for `Hello World!` and `Hello World` is actually showing the hashes of `Hello World!` and `Hello World!Hello World`. * `update()` has no return value; you will get an error if you try to chain method calls like the author does. * `hash()` is a Python built-in that should not be overridden. * The author is using a legacy version of Python. Example: &gt;&gt;&gt; # [3] don't override hash() built-in &gt;&gt;&gt; import hashlib &gt;&gt;&gt; hash_obj = hashlib.sha256() &gt;&gt;&gt; hash_obj.update(b'hello world') &gt;&gt;&gt; hash_obj.hexdigest() 'b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9' &gt;&gt;&gt; # [1] this appends to the existing data &gt;&gt;&gt; hash_obj.update(b'hello world') &gt;&gt;&gt; hash_obj.hexdigest() '524857d0148721c24e3e7795e19ade0cdcf49f2a4dfbef2f1575d1208fa8c54f' &gt;&gt;&gt; # [2] the author's code is broken: &gt;&gt;&gt; hash_obj.update(b'hello world').hexdigest() Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; AttributeError: 'NoneType' object has no attribute 'hexdigest'
http://www.pythonlearn.com/html-270/index.html http://greenteapress.com/thinkpython2/html/index.html Here are couple links to some online books. They are a good starting point. I took an online course at http://edx.org that really helped me get some good hands-on training. It took this MIT 6.00.1x course and found it very helpful - https://courses.edx.org/courses/course-v1:MITx+6.00.1x+2T2016/info 
Well, as far as a "hello, world" style benchmark goes, then yes. Once you start putting in blocking operations that's likely to change, but I've included the benchmark in order to demonstrate how the dynamic nature of API Star means that you only end up pulling in exactly the components you need for any given request. The framework certainly isn't going to be your limiting factor as far as performance goes.
:-) It's a small world! I've been working on my first project at work and I've found Google and Bing to be my best resources. Once I get stuck on something, I can usually search online for some options. 
There are modules for email (e.g. smtplib) and web scraping (e.g. beautiful soup) that you would need to combine with your own logic to pull this off. You might find that there are APIs provided by your suppliers that can make it easier. Probably need to have a better "spec" than that, but this is definitely doable.
1. `len` is a builtin function not a keyword. I understand what you are saying but again, this is a non-issue 2. Are you referring to comprehensions? Can you give a specific example? The fact that you can chain statements is a strength not an issue. You can create unreadable code in any language but Python is one of the most difficult languages to do so (it actually forces you to write readable code). 3. Python is actually strongly typed it is not statically typed. Objects actually have a type and conversions are not implicit. Yes, variables do not a have a type, it is a dynamic language and will remain so, this has both advantages and disadvantages but cannot be considered a pure negative. 
The slides from my DjangoCon Europe talk give a bit of flavour about where I'm planning to take this: http://www.encode.io/talks/rethinking-the-web-api-framework/index.html
No, `struct.pack` only does the conversion to a bytes type (in python3) or string type (in python2). You will have to make sure 'data' the correct size yourself. Since a file is already bytes / string, you don't need the `struct` module at all. Just standard string slicing. If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I started making simple IOT with stuff I have laying around. I set up a Raspberry to check my iCloud calendar for "alarm events" every morning. Then send commands to my stereo over WiFi to turn on radio at the time of the event. It is actually pretty nice to be woken up by radio chatter.
Hey! I am a member of a small Slack group dedicated to Python. Our focus is working together on real world projects to get experience with collaboration, helping each other, using git / github and making useful programs in general. If you are interested you can pm me your mail and I'll send you an invite.
Maybe you have a Roomba? They have a pretty extensive manual on how to interface with it. I can start mine with my phone or automatically when I leave my home. Maybe a Philips Hue? Mine turns on with the radio alarm, and turns gradually brighter over 15 minutes.
I'm also one of those weird people that prefer the whitespace over bracket soup 👽 
&gt; One example of such a feature is the fact that everything in Python is mutable, killing many opportunities for optimization. Isn't that also true of JavaScript? 
[Why Python?](http://www.linuxjournal.com/article/3882) is a very old article but it still holds true. Python is strongly typed so doesn't allow implicit conversions and has sound memory management, so where does the "seems to have all the same weaknesses that doomed other languages" come from?
Nice code, it gave me a head start on project I started thinking about earlier this week. &amp;nbsp; Check it out @ [**/r/Python/Attribute Loader with Type Management**](https://www.reddit.com/r/Python/comments/641dhn/attribute_loader_with_type_management) &amp;nbsp; Thanks for sharing!
&gt; (it's just coincidental that python is the best language ;-) I and others disagree [Why is Python popular, while Lisp and Scheme aren't?](https://mail.python.org/pipermail/python-list/2002-November/141486.html) :D
This is what's showing up.. :/ http://imgur.com/a/yoSPc Just plain confused.
/r/ojii mentioned some alternatives also. Like you said about it being precise, that's why I resorted to it. There are multiple radios on this page. The only thing unique I am seeing to each item is the "@value=".
/r/learnpython
beautifulsoup is a very popular one. I've never used it and i'm trying to install it right now but it is popular for purposes like this. if you want to work together to makes something with it then we can!
People say beautifulsoup, I prefer lxml. It allows you to use xpaths and xpath is very powerfull.
In Python, *function definitions are executed.* That is, a function object does not exist until the flow of control gets to that function's definition. Default argument values are evaluated when the function definition is executed and the default values are stored in the function object at this time. To defer default argument evaluation until the function is called would not only make function calls much more expensive (and unpredictably so, since you might not know which arguments have default values) it could have counterintuitive effects in other situations. Consider: a = 5 def func(val=a): print(val) a = 3 func() # what gets printed here? 5 Do you want it to print 3? Now imagine that there are thousands of lines of code and the global variable `a` could be changed anywhere in them. *Now* do you want it to print 3?
&gt; Beautiful Soup sits on top of popular Python parsers like lxml and html5lib, allowing you to try out different parsing strategies or trade speed for flexibility. 
Might want to integrate it with the calendar and have it add an event for the shipment arriving. There are some people married to their calendars and will check that on a daily basis, having their shipments appear in their organizers would be a good feature.
I like it.
I can tell you to forget about iron Python. It actually works pretty well until you try to integrate with the larger .Net ecosystem and then the impedance mismatch is huge. Even lists and dicts require explicit conversion bc .Net functions only accept and return .Net types.
I agree, that line confused me too when I just read it again. I will change it right away to make things more clear
You'll get a very rare collision with SHA256 working in big data. Not really noteworthy as you can't generate known collisions. (Our system at first stored data exclusively by hash directory / file structure on disks, but started running into cases where data was unqiue but same hash, so had to add a caveat.)
That's interesting. That does kind of get you into the infrastructure monitoring that lambda is supposed to free you from. It's certainly one way of batch freeing memory, though. 
Wow. This is super interesting. It's fascinating that you found inspiration in the dependency injection of `pytest` fixtures to build something similar. Two things occur to me: after using both Django and Flask for years, I vastly prefer SQLAlchemy to the Django ORM. It looked like there were some Django ORM examples early on, but I'm assuming this framework won't be opinionated about its database layer and we'll be able to use whatever? Secondly, I really like how you're using type annotations here. It looks strangely similar to the motivations of the [Haskell library Servant](http://haskell-servant.readthedocs.io/en/stable/). I've been fascinated by `Servant` ever since I read the paper, but they had a somewhat similar goal (albeit using the hugely expressive type system in Haskell): if you *describe* your API as a type, then you can *interpret* that type in various ways: build servers, autogenerate client code in a variety of languages (JS, AngularJS, React, Python, etc.), autogenerate documentation, and do anything else you might imagine. I was so inspired by the servant approach that I built a Python [client generator for it](https://github.com/pellagic-puffbomb/servant-py) (which I haven't put on Hackage yet; still testing and not sure if anyone but me would care). Have you encountered Servant before? What you're going for here seems to be strikingly similar.
You need to stop trying to reinvent a bicycle (with shoes for wheels) and figure out why pip is "not working." What are you experiencing with pip? Also, /r/learnpython Also, plenty freeware Windows apps can open tar.gz files, including 7zip and even Unreal Commander, but that's **completely** beside the point.
Sure. * Use something like poplib to retrieve the emails. * Do some sort of regex search on the mail body for known tracking number formats. For example UPS starts with 1Z and has 12-15 digits afters that. * Use the shipper API to get the tracking status, if non-existent you can use a web scraper instead. * Do with it what you need. You can create a simple dashboard with flask or integrate it with whatever productivity app you use. If you're going the web scraping route, selenium is good for things like this, it's basically an API to control and get information from a web browser. When you have the script ready you can use the phantomjs driver so that you don't have a window popping up every time you run the script.
Are you referring to PyCrypto? I know there's a fork of it for Python 3 - https://pypi.python.org/pypi/pycryptodome
You're seriously saying you found sha256 collisions?? With some input pair that is completely unique from each other?? I can understand if it's a problem in the hashing, like you have some Person record that is {"full_name": "foo", "age": 21, "_id": 401} and you only generate a hash from full_name and age but _id isn't hashed into it so you have two similar records with foo and 21 and the hash collides, but that's the same exact input data. If you literally found two sets of input that collide with sha256, that's worth telling people. I can understand if you wouldn't publish it because it's two passwords that you can't tell the world, but seriously, no one knows of any sha256 collisions at all right now, not generated or on accident. There's not only no way to generate collisions, but *there are no known collisions*. It's worth blogging about at the very least. http://stackoverflow.com/questions/4014090/is-it-safe-to-ignore-the-possibility-of-sha-collisions-in-practice &gt;The possibility of a collision does not depend on the size of the files, only on their number. &gt;This is an example of the birthday paradox. The Wikipedia page gives an estimate of the likelihood of a collision. If you run the numbers, you'll see that **all harddisks ever produced on Earth can't hold enough 1MB files to get a likelihood of a collision of even 0.01% for SHA-256**. &gt;Basically, you can simply ignore the possibility. Given the probability of it, I have to assume that you saw collisions because you weren't hashing the full input data you wanted to, and were maybe hashing the prefix of two different files with the same prefix. There's no way you've just seen them randomly even if you have petabytes of data.
&gt; I'm sorry to be the annoying nitpick, but Whenever you find yourself writing this, don't.
Any idea what [pythonnet](http://pythonnet.github.io/) is like?
You might find [Python Is Not Java](http://dirtsimple.org/2004/12/python-is-not-java.html) and [Java is not Python, either...](http://dirtsimple.org/2004/12/java-is-not-python-either.html) useful.
A lot of the concepts here remind me of things pioneered as being usable abstractions in hug: https://github.com/timothycrosley/hug#getting-started out of curiousity, what are the things you found missing in hug that you thought could be solved in a new framework? Anything new beyond what's detailed here: https://github.com/timothycrosley/hug/issues/211?
whats wrong with that?
see edit
im working on a code that you log onto and it has multiple functionswhen logged on like a banking thing a calculatorand a game, im currentlyon hold as I cant think of other functions to add.
Yeah. I really liked working in Scala. But Python certainly has its own perks.
actually i little afraid of when i try to downgrade with promethues and do something wrong and try again thats it 
Hi Tim - absolutely yup. It's the same kind of style as Hug as far as the dependency injected parameters. (I don't know how you implement that in Hug, but it's the same style of interface.) The schema generation mentioned in that ticket, plus a type system that ties in with that are major things I'd like to see (in either framework). That'll mean being able to leverage the API docs we already have in REST framework, and the dynamic client libraries. Beyond that, it's an itch. I've got my own ideas about the specifics of how I'd like to see everything fit together.
Yes of course, everyone is welcome.
Dude, this is so damn improbable that I have to think this is a bug. You should not be seeing collisions like that, especially in just terabytes of data. I imagine something was screwing up where not all the data was going into the sha256 function, OR you were hashing the same data, but something failed on the write to the db and it didn't write the whole file (looked like different file size, but one was just partial of the same data). If it's the choice between a weird bug and a sha256 collision, it's a weird bug. http://crypto.stackexchange.com/questions/24732/probability-of-sha256-collisions-for-certain-amount-of-hashed-values To put that in perspective, if you had 1 QUADRILLION files, your chance of seeing a collision is: 0.0000000000000000000000000000000000000000000000004318084 Terabytes of data is not going to cause a single collision here.
As I said, can't look at the code to do a root cause analysis anymore, but I agree that bug is the more probable answer (Hell, I wouldn't believe someone else in my shoes without hard proof). I am just personally [not discounting](http://www.skewsme.com/img/programmed-to-believe.jpg) the possibility as the fix kept it working reliably for years. Edit: Was first gig out of college, was obviously unaware of any importance or true rarity of something like this. Just knew it was something I had to code around. And again, first gig out of college, so statistically more likely a bug lol. 
This is cool. If I understand correctly, this framework is directed to building alexa skills to be deployed to AWS Lambda instead of to a flask server like flask-ask. Let's say I am developing a production grade Alexa skills serving hundreds of requests per minute. Would this be ok framework to use?
Is there a reason you don't want to use an existing tool like `rsync`? Backups are one of those things that are really easy to fuck up if you attempt to roll your own.
LUA has mutable variable types as well
It can be on Windows natively as part of [msys2](http://www.msys2.org/), and it does checksums on a per-chunk basis, so it'll actually save you a lot of copying if files don't change much. You can wrap it to do any sort of checks you want with the `--dry-run` option combined with `--existing`/`--ignore-existing`/`--delete`.
It may, with the `--fuzzy` option, but it also may not. You can look up the specifics of how the `--fuzzy` option works. [This](https://github.com/dparoli/hrsync) may also be interesting.
You sound pretty butthurt in this thread. 
I haven't, but I like this a lot!
Hey, yeah it's aimed specifically at Lambda and Python. I don't see why you couldn't - the framework deals with the response and request - up to the quality of your code to stand up to to complex task. Some features are missing which I'll add but overall its ready to use - give it a go and let me know what you think 
Looks like `fuzzy` won't do what I'm looking for: &gt; Without patching, the rsync utility lacks support to detect when a file was renamed/moved across multiple directories inside the synced tree. There is a ––fuzzy option to save bandwidth by building upon similar files on the target side, but only in the same directory. Following that link, it seems their solution is to permanently hard-link to the old filepath, which, unless I misunderstood them, I honestly think is a retarded hack that can't be taken seriously as a long-term solution. I'd prefer keeping track of hashes with my original method. Thanks for the information, insightful and if nothing else it's an option I can cross off.
new concept to me. APIs of the future indeed.
I said variable *types* not the values. And I think that isn't a feature that "most" languages have. EDIT: I realized that you couldn't possibly have meant variable values so I guess I need you to clarify. EDIT2: I think I was confused because you mentioned classes and I was thinking about LUA. But yeah that makes sense. Even for a dynamic typed language having classes that are mutable (like in Python) is pretty powerful while both JS and LUA don't even have a concept of classes (or just barely)
It would take a minimal amount of system resources, but it would require you to reinvent a couple of wheels, so using the system scheduler is the way to go. Why are you creating .bat files? You could just run ask the task scheduler to run python. 
&gt; I realized that you couldn't possibly have **meant variable values** so I guess I need you to clarify. Yeah, I did. I interpreted "mutable variable types" to mean like `NSMutableArray` as well as `NSArray`, not variables whose type may change. If you meant "dynamic typing", then sorry, I misinterpreted your comment. &gt; Even for a dynamic typed language having classes that are mutable (like in Python) is pretty powerful while both JS and LUA don't even have a concept of classes (or just barely) I'm not very familiar with Lua. Nor with implementing languages, for that matter. It seems to me the big difference between Python's classes and JavaScript's prototypes is inheritance. You can't add methods to built-in classes (`str`, `list`, `dict` etc.) in Python, but you can create a subclass. JS lets you add new methods to built-ins like arrays. OTOH, JS also has weak typing. Does that not also make building a fast VM/interpreter harder than Python's strong typing? 
Nothing will go wrong Set you're nonce and then do it Also, what version are you going from and to
If you want to do idiomatic functional programming, you need currying, and vanilla python makes it very ugly. To do fp in python you will benefit immensely from the pytoolz library: import toolz.curried as tz Otherwise non-trivial fp will get ugly fast. You could get farther if vanilla `map` was curried but thankfully toolz has a curried map implementation. After you start using currying everywhere, you will notice it breaks pylint, mypy... FP in python hits a dead-end but it imo is still a step up.
It would depend on what is contained in that file. 
You could always use the time.sleep() function, and have it wait until the next time you want to run it; that takes up hardly any system resources
I can't help with the conference part of it at the moment, but for the keyword recognition you may want to have a look at [IBM Watson](https://www.ibm.com/watson/). There are heaps of different clouds tools and APIs including speech to text (with keyword listening), text to speech and even conversation bots that you can set up with voice or text. They have a free one month trial which includes 1000min of most services or a fairly chunky amount of API calls depending on which service you're using. Hope this helps!
&gt; Yeah, meant dynamic typing. I'll remember that mutable is the wrong word to describe that :) I don't know if it's wrong. I'm just familiar with the term "dynamic typing" for languages where the type of a variable may change. When you said "mutable variable types", the first thing that popped into my head was Objective-C because it has all these classes with "mutable" in the name to differentiate them from their non-mutable counterparts. &gt; I am not sure what the difference weak/strong would mean when the runtime has to evaluate an expression like "a + b". Do you? No idea, tbh. Not knowing how JIT etc. works, I naïvely assume that having to coerce types to perform comparisons/concatenations etc., as a weakly-typed language like JS or PHP does, creates extra overhead vs a strongly-typed language like Python where you compare like with like or an exception is raised.
Not anything in particular. &amp;nbsp; Over the last few years I've been teaching myself programming with 100% project-based learning in various languages, without ever really getting to know any of them in-depth. &amp;nbsp; Recently decided to focus on Python for a while and take a more academic approach (*I'm working through [**these books**](https://gist.github.com/Enteleform/85dc4117c3cac6097495dcd32036a332) for now*) to fill in the gaps &amp; level up, since IMO it is the easiest language to learn with (*least amount of syntactic boilerplate, making it easier to understand the essential parts a given concept*). &amp;nbsp; Since I'm going to be spending a lot of time with Python, just been building out my personal workflow with a bunch of util modules &amp; some magic stuff like this so I can focus on learning &amp; build/test stuff super quickly.&amp;nbsp; Actually just built an automated, comparative performance test module you might be interested in, I'll tag you after I clean it up a bit &amp; post it on Reddit. &amp;nbsp; What kind of stuff have you been working on?&amp;nbsp; Got any other meta projects on Reddit/Github/etc.?
Eventually python users complaining about performance need to discover parallelism and stop fearing the gil-boogeyman. Futures with threadpools &amp; processpools are easy to use and deliver better performance improvements than most language speed-ups.
saw this one, but it relies on the microphone. I am looking for something that can make a call and ssomehow listen to the audio stream.
To add to this. You'd likely have to mix two different techniques. First you'd need something for the conference calls and then another for the voice recognition. For the call however I believe you MAY be able to use the twillio api, not too sure though so I recommend checking it out.
What about an aux cable from the speaker jack to the mic jack. Otherwise you might need a different language to manage the audio stream
Would an old fashioned [dialup modem with voice/data/fax work](https://www.newegg.ca/Product/Product.aspx?Item=9SIA6RD2FD5145&amp;cm_re=voice_fax_modem-_-9SIA6RD2FD5145-_-Product)? You can turn it into an answering machine, so you must also be able to listen on a call you dialed.
Yeah- I skimmed through it for ~1 minute and found it 
Yeah, I build a lot of code that aids in the writing of code if that makes sense. Check out my GitHub https://github.com/wykleph The selenext module has some cool stuff in it. Oyster has a good example of a drop-in plugin system.
Can't lose what you don't wager
Visual Studio Code on Mac and Rhel 7. Works great and the same tool between OS's
Use Anaconda python distribution. Never had a problem with the notebook in this distro. 
what you want is asterisk probably... and some speech recognition software, and a couple VOIP lines.
How to implement Authentication with it? Is it included? If not, what is the recommended way to implement Authentication? Thanks.
Why do I get the feeling josh newlan doesn't include this project in his portfolio when he's applying for jobs
why do people make these terrible cover images 
Please explain. I use threads pretty often, but I was under the impression that Python threads were intrinsically limited by the GIL. Did they make some changes I'm not aware of?
strptime to parse and strftime to format
1. /r/learnpython 2. https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior
To match the soullessness of the video.
If you're not on Windows, you can use %-m/%-d; if you are, you should probably look at this answer: http://stackoverflow.com/a/16097385 String replacement will work fine in this instance, but not in general.
Is this an alternative to DRF? To Django? Or something else?
this is probably the most important thing that a lot of us are looking forward to. A asyncio + libuv based framework that is holding its own against golang and nodejs. It can be done - https://github.com/MagicStack/asyncpg is showing how python 3.* and asyncio is able to drive python performance to be as competitive as anything else. Its time for a async centric python framework that takes into account performance as well. please do consider it.
Python is great for this, with modules like hashlib, shutil and sqlite3 built in. Just be careful to process large files in a streaming way without loading them all into RAM at once. There's no built-in support in Python for this; you'll have to call `fileobj.read(chunk_size)` in a loop.
Nice. Another resource that I've found useful is this [video series](https://www.youtube.com/playlist?list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y) by Kevin Markham. 
I'm glad I'm not the only one who thinks like this :)
Sure, pm me your email address so I can send you an invite.
The names of the dicts and variables make everything confusing. Examples: identifier_info: should be name_by_alternate_identifier identifier (in the loop): should be "name" 
I am building a clone of jstips for a coding community called Chingu in Django
Yes, those are definitely some of the best tutorials on Pandas I've seen to date. Most other tutorials have code that is fairly un-performant or otherwise un-idiomatic, and don't even touch on what makes Pandas truly powerful.
$HOME/.local/bin
Mailgun?
Set them in `data_files` in your `setup()` call.
Sendgrid
I enjoyed the Coursera class from Michigan University called Intro to Data Science. The first class is all an intro to Pandas
OMG two months ago it said August and 3 months before that it said April!
There is no one clear use case that I had in my mind when doing this. But I did sometimes wanted to check what was the latest X version from the terminal, not open a browser, Google the project, go to the downloads page, etc. I'm also thinking about a notification system if a new release comes out for projects you 'subscribe' to. So yeah, I don't have a perfect answer to you and it is a valid question : -) It's just something I wanted a couple of times and was surprised that there isn't anything like that around.
It does whatever a spider pig does?
Sweet thanks!
Im ashamed to ask this, but what is the difference between a text editor and a IDE?
A text editor will usually have basic autocompletion support, syntax highlighting, and not much else. An IDE adds intelligent refactoring support ("rename variable", "extract function", etc.), context-aware autocompletion, debugger integration and so on.
Okay, then i will go for a text editor because im a beginner and probably won't need all the fancy IDE-capabilities
spaces are omitted by parses in many places f.i.: In [1]: d = {'ab': 'here'} In [2]: d . get ( 'a' 'b' ) Out[2]: 'here'
One thing PyCharm actually does that's really helpful for beginners at times is code inspection. Basically, it will detect the places where your code could be written better, or where the logic doesn't make sense, and highlight them for you and even provide optional quick fixes.
It's not really that complex, especially if you use the Education Edition (which is designed for - you guessed it - education), and it's going to be a great asset for you if you want to work on bigger projects in the future.
I would recommend that. Learn one thing at a time.
Why dont people use Visual Studio Code instead of Atom then?
It's just personal preference. Everyone would go to war over their text editor. 
I used Atom because I liked the git integration. I stopped because I found VS Code and prefer that environment. I can't really answer why others are using what they are using. Just general advice about making decisions like this. Not directed at you, but just speaking in general. Don't worry too much about making the **right** decision at this exact moment. Nothing is set in stone. If you don't feel that comfortable in one environment, try something else. This is also true for coding itself. Instead of spending time come up with the most efficient solution that requires the least amount of code. Start trying one path out. If it doesn't work, you can go back and fix it. Chances are you'll learn a lot more making the decision than researching the decision.
Another great recent resource is the pandas chapter from the Python Data Science Handbook by Jake VanderPlas http://shop.oreilly.com/product/0636920034919.do And notebook versions here: https://github.com/jakevdp/PythonDataScienceHandbook
What is main difference between Python 2 &amp; Python 3?
I think you misunderstand the features. You can code anything you want in pycharm community. There's no limitation on what you can code. What you're referring to is pycharms native support for databases so you can interact with the database inside pycharm. Again there is no restriction on your code. That is impossible. You simply don't get all the tools inside one editor, but you can get other tools to fill that gap. It's what you would have to do with any other editor anyway.
I use Sublime for pretty much everything. It doesn't have the right integrations or remote interpreter capabilities that PyCharm has, but it's lightening fast, and has an incredible ecosystem of plugins (I recommend Anaconda). Honorable mention guess to Atom which is open source and has made some great strides.
Improving a Python-based tool [cdnupload](https://cdnupload.com/) that I just released -- it uploads your website’s static files to a CDN with a content-based hash in the filenames, giving great caching while avoiding versioning issues.
Py*Charm* is especially good as a "Witch" IDE.
I want to have a service join a conference call so when some people forget or don't respond, I can send a msg to slack by saying "hey assistant, remind X he needs to join"
There's even a hex editor plugin. 
I actually think that's a really good idea. So, I've done some stuff with speech recognition before. Can I help out? 
You could also purchase the eBook from Augspurger's website.
Show us what you've tried so far
Well of course, but I must preface by saying that I have no clue what I'm doing and just started researching.
Does twillo allow you to listen in on the call?
I don't think so. My initial thoughts are you would need to get a pi with a sim card. Then you can make a call from the pi into the conference call. Then listen to the audio that way. 
Are you talking about the dictionary is empty in between runs of your script?
I couldnt help but point out the wicked witch ide
There's actually recent research showing that the hot hand is real.
Can you provide code/data that duplicates this situation? We use pandas in ETL and I've never observed this happening, and we have automated QA that would catch this sort of behavior immediately.
The key is fine, it's just a tuple of ints.
&gt; then the dictionary disappears When posting an example, give the full code including a demonstration of the problem. It isn't clear what 'the dictionary disappears' even means, and the code so far seems fine.
Actually, twillo CAN do it! The tricky part will be outputting the audio into the word recogniser. The best solution would be to monitor the audio live but I'm going to guess that we would have to record everything that's being said for and analysing the recordings retrospectively. 
Thanks for responding! Next time I will post everything from the start. And after looking at things again, I realized the dictionary wasn't erased, it just no longer appears in my list of variables. Do you know why this happens? Turns out there was no problem all along. Thanks for your time anyway! 
Seems to be stuck in what way? It is 80%-ish Python 3
Then, if your code really is just what you posted, either this is a bug in spyder or the variable explorer has some surprising behaviour. People would have said this straight away if you'd posted the full details in the original post, that's why it's important to give a detailed report.
I got 100 pages through this and I did not like it at all. Its incredibly dry and boring. The examples were very technical and had no useful context and very little explanation. There are no exercises to practice for yourself either. 
I assume spyder doesn't display some non-standard objects
"This has good flesh"
I can't stand this style of video. Memes, useless information, filler jokes. That hair too...
Lotus eaters click on images with wide eyes and open mouths. 
Or Eclipse, Eclipse or Eclipse if you need a heavyweight. Sometimes a problem can be fixed with a watch maker's tool, not a sledge hammer :-)
sounds like this would have huge latency
&gt;I don't use markov. God said "no weights". Sometimes stunning how prolific Terry Davis is.
&gt; I'm not sure I understand the metaphore. How is Eclipse like a watchmakers tool and Pycharm like a hammer? I think he might be comparing your enthusiasm for PyCharm to some Java (and even C/C++) developers' enthusiasm for Eclipse, as opposed to a (good) text editor?
Can I get a source for this research, this intrigues me. 
No surprises, but I do wish people would use "deprecated" and not "depreciated" as they mean two entirely different things :-)
The 2 vs 3 battle has been ongoing for years, and now 3 is taking off as most, if not all, of the biggest used libraries have been ported, or never will be ported. So the figures strike me as meaningless, without the data for Python 3 before late 2014 what is the point of this "analysis"?
Python 3 has guaranteed long term support, Python 2 doesn't unless you pay for it.
Yeah, I totally misread his comment. Thanks!
Thank you for pointing that out, I didn't know they were different words.
I wish I could share it. Even though we don't use it anymore the code belongs to the company and its too much work to rebuild it on the side as proof. Thought of not even posting because of this but might as well put my thoughts of a caution out there. 
True however we do know that the switching point has happened and that it has been this way for over a year.
I've no idea what the original article is saying. Ints aren't mutable, strings aren't mutable, so does anybody have any idea as to what the originator is actually trying to say?
Of course if you want to be pedantic Python doesn't have variables, it has names. A name gets bound to an object. I believe that the best analogy is that of the "sticky note", please see [Understanding python functions - Instant Python tutorial](https://mail.python.org/pipermail/python-list/2007-July/443091.html).
&gt; I am not sure what the difference weak/strong would mean when the runtime has to evaluate an expression like "a + b". Do you? Consider:- C:\&gt;python Python 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 18:41:36) [MSC v.1900 64 bit (AMD64)] on win32 Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; a = 1 &gt;&gt;&gt; b = 2 &gt;&gt;&gt; a + b 3 &gt;&gt;&gt; c = 3 &gt;&gt;&gt; d = '4' &gt;&gt;&gt; c + d Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; TypeError: unsupported operand type(s) for +: 'int' and 'str' Python is strongly typed so lets you add two integers as in 'a' and 'b' above. It refuses to let you 'add' the int 'c' and the string 'd'. A weakly typed language like VB would be quite happy with 'c + d'.
Hmm. Just tried to replicate that; which values of 'this_attribute' are you using, and what's the error message that you're getting?
 import universe import random song = random.choice(universe.music) song.play() :) 
scapy and metasploit might be a good place to start. 
Emacs.
If pycharm is too confusing abandon all hope.
PyCharm
Haha. I understand spaces-only people, but their points are only valid because whomever defined the space did something that the tab creators did not do: defined how much space it would be represented as. So your tab master race is defined in terms of...spaces. 
Thank you! Looking forward to diving into this material.
Made something similar a while ago. Code here. https://github.com/sp1d3rx/nonsense/blob/master/nonsense.py I found it fun to feed it the Constitution and Alice in wonderland. Comes up with absurd laws. 
In the future, if you are going to ask a Python question, you should probably do so on /r/learnpython. As for the bundle, the only book I have heard of is Automate The Boring Stuff, which is quite popular but is also free online [here](https://automatetheboringstuff.com/). Also, they Python (IRC) community suggests this [open source book here](http://greenteapress.com/wp/think-python-2e/). So you might be better off just saving yourself a dollar unless you want actual PDFs of those books or just have money to throw around. When I first learned Python, I used the Codecademy tutorial (also free with an account), and then I branched out from there on my own while also learning to use my GNU/Linux system. I still think the Codecademy tutorial is useful, especially if this is your first time programming since it is interactive. But today, I wouldn't really recommend it since it teaches Python 2. You should be learning Python 3. Both the books I mention above teach Python 3. Hope this helps. 
Am I missing something with posts like this. It's literally just the slides from a presentation without audio. Which is sorta meaningless.
I've​ heard good things about Automate the Boring Stuff with Python A couple of the books seem to be aimed at children, a couple others seem to be aimed at security guys. 
Thats what I noticed, hence why I asked if they are useful. I'll probably end up using the free link for "Automate the Boring Stuff with Python" mentioned above.
Hints of plum and meat
That was fixed when evil-mode came out.
If you want to play the song at a specific time, check out [schedule](https://github.com/dbader/schedule)
Use GitHub's pulse feature to check staleness instead. Code that's perfectly stable doesn't need new commits all the time, or commits might be on other branches. Using that, it looks like the maintainer has closed a few issues this month, which isn't bad. 
You are right. My mistake was to think a typesave language (which might have the same syntax as python for this case) would be able to notice that `['foo' 'bar']` and `['foo', 'bar']` have different types. But infact they are both lists of strings. Damn.
Totally depends on what you're comfortable with. Python is easy to learn and has a pretty logical syntax for people who have never programmed so in that sense it might be good for quickly launching an idea. But if you're already a Ruby programmer then I see no reason to learn something new for web development.
Thanks for the clearance. How can i put complex mathematical equation at work to calculate inputs provided by users via browser?
Because it's fun. Of course to appreciate it you need to know what each of them reference and enjoy the youtube/imger/reddit subculture.
I don't see how this is "infrastructure mornitoring". Resources are not infinite on aws or anywhere else and need to be managed carefully.
Are you new to coding or just python? 
Udemy looks like a pretty solid but it's definitely out of my price range. I'll definitely take a look at the others you mentioned. I've had good experiences with udacity in the past.
This is exactly how it works. Also I'd believe porn titles are done the same.
You really really should use Python 3. Some people will find your article and use Python 2 only because you did. Edit: Just noticed that article is from 2014, nevermind then.
Yeah, you'd think with how much internet commenting he does that that would be all he did, but he's built an entire os. That said, this one almost feels like a parody
You might want to build a firewall box to connect to the internet and put your network behind that. After that you may want to consider other things
Kivy. Not sure how well it handles real-time data, but definitely awesome for building android apps. 
PyBee's Toga
I'm working on an old school text adventure. I've made some pretty linear ones in the past but this time I'm thinking about including battle events which would append xp and decrease hp. I'm using classes to store the character info and also key enemy info while using ascii art to visually emphasize stuff like skeletons, dungeon entrances and footsteps. I'm an hour away from completing my first chapter. I'll upload it on git so please help me where i go wrong, I'm still pretty new at python.
It's just not a very active project. I use the package and have for years. I haven't found anything 1/10th as lean that does what it does. Even if it was dead, I'd still use it. 10 months is also not that long in the open source world. I run a project and went 1.5 years between releases. I shoot for a year now.
I have actually been working on this myself with the Amazon Alexa. I've been using api.ai, and wit.ai along with APIs to help with my needs. Maybe we could work together somehow? It's a wonderful idea that should be in use already. 
Give PyQt5 a try, that's what I've always used for Python GUI programs and it's worked great
If there was a "best" then everyone would use it and there would only be one. There is only "best for" ... which means you need to tell us what you want from a GUI library before we can tell you what's best for you. in a nutshell: * Tkinter: best for super fast development and if you don't want to require your windows users to install extra libraries * pyGTK / PyGObject: best for native looking linux programs. Uses Glade. * PyQT/ PySide: best for highly custom very pretty interfaces and automatic event linking. Looks native on any OS. You can use QTDesigner to create GUIs. * wxPython: Alternative to tkinter for fast and easy interfaces. Has a GTK-like Glade. * Kivy: best for multi-touch and small screens - tablets and phones * Remi: best for programs that can be accessed via a browser locally or remotely * Bokah: best for interactive data display in a browser. You may also want to consider if your application would work as a webpage / webapp, and use one of the powerful python web frameworks instead. 
In addition to Kivy, you might also look into something like QPython.
Also try the Qt Designer. Could get a simple GUI running pretty quickly.
I definitely think it's a brilliant idea! I wouldn't mind working together but I'm a bit of a budding programmer. I do have extensive experience with therapy, however.
Would it be easier/possible to make a variable = -1 and to call for it anytime you need the +1 to get zero? I don't know too much Python yet, but it sounds like more work to force Python to forget how math works.
I would add/clarify that PyQT *mimics* the native OS look, while wxPython actually *is* the native OS look because it's calling the underlying C API. Also if you're looking for Python 3, it's wxPython Phoenix.
Telling us why it isn't working (what is it doing? Is it giving an error? Etc...). You definitely shouldnt be using input() a second time. Just compare the original choice to 2. Also input() is returning strings. So compare with "1" and "2" and in your equations convert what input returned to a number using int() (I.e. CtoF =int(input("...")) ) Once that's working you should think a bit about what happens if someone doesn't enter a number. How would you catch the error? 
One solution is my [Make 2 + 2 = 5 for Python](http://codegolf.stackexchange.com/a/28851/176) scheme that abuses CPython's small-integer caching. If you overwrite 0/1, that's *very* likely to cause problems (segfaults), but 2 appears *slightly* safer. It's also a Python 2.7-only thing right now, it would take some monkeying to figure out the memory structure of Python 3(.X.Y) ints (in 32/64-bit, depends on if built with debug...). Guess and change the `+ 16` to other values (24, 32...) and that might make it work without faulting. Python 2.7.13 (default, Mar 21 2017, 12:06:14) [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; import ctypes;ctypes.c_int8.from_address(id(2) + 16).value = 0 &gt;&gt;&gt; 1 + 1 0 &gt;&gt;&gt; 2 0 Edit: Beware running the same `import ctypes;ctypes.c_int8.from_address(id(2) + 16).value = 0` command on 3.6.1. I did, then did `1 + 1` (not even `print(1 + 1)`) in the REPL, it printed ***endless* 0's**. Mucking with the value of 2 seems to have jacked up some internal thing in the REPL. `2 + 2` works with some address monkeying: $ python -V Python 3.6.1 $ python -c "import ctypes;ctypes.c_int8.from_address(id(4) + 12).value = 5;print(2+2)" fish: 'python -c "import ctypes;ctypes…' terminated by signal SIGSEGV (Address boundary error) $ python -c "import ctypes;ctypes.c_int8.from_address(id(4) + 16).value = 5;print(2+2)" 129622549775260933043827238983354141141630980 $ python -c "import ctypes;ctypes.c_int8.from_address(id(4) + 24).value = 5;print(2+2)" 5
Thanks a lot _AceLewis to define difference both python2 and python 3, now I'm understand 
There's an issue in the tracker that explains that, apparently it's just not implemented for ff. I don't recall exactly, but something about the dunder methods being stored in a different location. 
i just thought maybe it's worth it.
Kivy, though there are many traps, but I can't find better
Is that course python 2 or 3? 
you're saying that using a thread scheduler which is in-Python implementation that only context switches at the point of IO is more efficient than the operating system's threading scheduler, which has access to the CPU architecture and context switches more equitably between system calls. The answer is no. edit: a "greenlet" style approach using gevent / eventlet *does* have the advantage that you can spawn greenlets much more cheaply than threads. if you are using threads, the architecture of the app should be oriented around a fixed pool of long running threads, rather than on-the-fly thread creation. asyncio itself is of course using a thread to actually provide the event loop.
My initial instinct would be to build the app with a html/css/js framework, and pass the graphs as images (matplotlib) to the page via ajax.
I'm probably going to tell you an unpopular decision and get downvoted for this, but anyway... I'd just do it in Java and get android studio, or maybe even C# with Unity. http://www.android-graphview.org/realtime-chart/ Java really isn't that rough. Does that code look like it'd take too long to write and understand? If it really does look alien, sure, python. But if you want to get as much performance as possible and you want an android app, you should probably just do java in android studio and make a native app. Seriously, this isn't coming from bias. I've been doing python dev professionally for 6 years, love the language. It's great for *most* things. However when it comes to specific tasks: - system/driver/OS dev: C or Rust, unless it's fine as a system script then python or bash even - android dev: probably java, python+kivy for super simple stuff with no performance requirements, unity works too and is fast - game dev: either C++/C#+unity and *maybe* java or python depending on performance requirements. Even some steam games use python! [Unity of Command](http://unityofcommand.net/) uses python + pygame + cairo for vector graphics. Also Lua has its place here, usually in conjunction with C++ - almost everything else: python is perfect! Web dev, scripts, anything without major performance requirements, *security* for sure, experimentation, research, general purpose coding You said real time graphs, so depending on what that means to you, you might be better off with Java. It's really not too crazy to do simple stuff, and for graphing it might be relatively easy to get into. It'll also compile into native code with [ART](https://source.android.com/devices/tech/dalvik/), and I'm not sure if kivy would benefit from that. It might, but there's still probably a lot of overhead. Feel free to disagree since you know your problem best, but if this is coming from using python because you don't know java, I wouldn't be too scared of it, and I'd also consider the possible performance benefits and if those are preferable.
The way computer support decimal numbers is called floating point. Because of how they are stored certain numbers can be represented exactly. You've seen some examples of this. Also try .1 + .2 you won't get the expected .3. If you want it to show the number the way you were originally envisioned then use format string specifies, rounding, or another strategy. 
Section 15 in the Python tutorial gives a nice explanation of how this works. 
That is not exactly what I want. What I want is to be able to use Cmake + CLion to execute python tests. CLion already supports PyCharm as a plugin, but I am unable to run Python Test Units through CLion. I though that someone had already tried this, and that is why I asked.
Atom has been very popular for a while now, and VS Code is much newer so I think people are more likely to recommend atom for that reason. However I think you should try both and see what works best for you. 
Just hearing about pyqtdeploy now, looks like the latest release also supports Python 3.6 and the default Android API level is now 21. Cool stuff, thanks for bringing it up! link: https://www.riverbankcomputing.com/news/pyqtdeploy-132
Here's an idea. What if you used [pynsist](https://github.com/takluyver/pynsist) to package your script with the required Python version and point task manager at the executable? link: https://pynsist.readthedocs.io/en/latest/index.html Note - I suppose you could use pyinstaller or one of the other options, I prefer pynsist tho.
Sort of a non-answer here, rather then wrestling with a technology like Kivy (which people in this thread seem to be reluctantly recommended) why not just use Java? I hear good things about react native as well.
Maybe https://github.com/cwacek/python-jsonschema-objects is what you want?
Sublime Built-In? EMacs 
Vim
Emacs: http://wikemacs.org/wiki/Python quite capable (refactoring,…) and unbeatable as a text editor (with evil vim emulation!) and git support (magit https://magit.vc/). Check out [helm-ag](https://github.com/syohex/emacs-helm-ag), org-mode http://orgmode.org/
Try pip install --target directory pillow
&gt;you're saying that using a thread scheduler which is in-Python implementation that only context switches at the point of IO is more efficient than the operating system's threading scheduler, which has access to the CPU architecture and context switches more equitably between system calls. The answer is no. That was the idea of threads in Python (that the OS was better at managing processes than python would be) but in practice the GIL totally screws that up. The interpreter decides when to allow thread switching already by releasing the GIL and sending a signal to the OS, but then the time it takes for another thread to actually wake up and acquire the GIL is longer than the time it takes for the previously running thread to reacquire it, so other threads keep getting woken up, find the GIL already acquired, and go back to waiting. The only ways to solve this I know of are 1) have the interpreter wait longer to see if any other threads acquire the GIL (so the interpreter pauses for longer everytime wether there are even any other threads or if those threads are ready to acquire the GIL) or 2) have python intelligently manage the context switching it is already unintelligently managing.
&gt; You said real time graphs, so depending on what that means to you, you might be better off with Java. &amp;nbsp; OP, if you end up going with Java, use [**MPAndroidChart**](https://github.com/PhilJay/MPAndroidChart).&amp;nbsp; It has great performance, is very simple to use (*while also providing access to a highly granular set of customization options*), and has real-time plotting baked in. &amp;nbsp; Check out the [**Library Demo**](https://play.google.com/store/apps/details?id=com.xxmassdeveloper.mpchartexample) on Google Play.
&gt; I've tried Kivy in the past and found it pretty frustrating to create custom controls that look nice. &amp;nbsp; It's definitely doable.&amp;nbsp; See [**Yeco**](https://www.youtube.com/watch?v=aa9LXpg_gd0) and **/r/Ruditorres**'s [**Business Dashboard App**](https://www.youtube.com/watch?v=GJ3f88ebDqc). &amp;nbsp; Also, I prototyped this [**Command Palette**](http://i.imgur.com/so8JhBB.gif) pretty quickly (*still working on it, focusing on core Python before getting back into that project*).
https://marshmallow.readthedocs.io/en/latest/ ?
Checking out PyBee has been on my list for so long, but I never find time!
Kotlin is awesome, it's like if Java went 20% of the way toward Python.
Matplotlib 100% 
Ha! I knew I wasn't the only one!
Levenshtein distance
Thanks. I was about to start using Jupyter and I guess I may as well just go ahead and dive into pandas before going any further with my data.
A quick look at mControl (skipping the home automation system with the same name!) Leads me to think it would be quite a job to recreate it, and Python would not be the right tool. (C#, maybe?)
just... dont! react-native or java if u dnt want to pull ur hair out
If you dont care of a bit of latency, you may use content management system like WordPress and drupal. You don't even have to write a single line of code with CMS and handy plugins. 
If resolution is a problem, you're using matplotlib wrong. Save in SVG and you can zoom for days.
Matplotlib is fucking awful in terms of API and documentation, but it's much more powerful than its alternatives. And also, still less awful in API than MATLAB.
You can improve the look of matplotlib plots a lot just with themes - in fact, just importing seaborn will set matplotlib's theme and make its plots a lot more pretty even if you don't actually use seaborn.
Understood, thank you for your input. I was hoping by asking here I would save myself some time as I'm sure you guys would have an easier time just determining if this is even possible or not. It doesn't sound like someone with limited programming experience would be able to accomplish this easily.
[Hiring] Austin, Texas Note: I'm not the person doing the hiring. Just looking for a good coworker. Our small team (4 people) writes analysis pipelines for genetics assays (developed in house) and packages them as web applications served to the customer as a virtual machine. Python, Linux, Flask, React, Jenkins, Postgres, Docker, Vagrant and of course a bunch of scientific computing packages (Numpy, Pandas, Numba, Cython, Scipy). Background in biochemistry or bioinformatics preferred. PM me if interested.
This article may be helpful http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003833 You have said neuroscience. The author of this article is from computational neuroscience http://www.labri.fr/perso/nrougier/coding/index.html
GGPLOT2 from R does an awsome job two. Produce amazing graph with only 3 lines of code !
[Relevant xkcd](http://xkcd.com/217/) It boils down to floating point errors. 
Pycharm. But it honestly may take you longer to learn the tools and tricks of pycharm then just find / replacing obscure variable names with meaningful ones. 
I don't remember. But I don't think it should matter. 
Why are you comparing the first name string against the first character of the email address string?
Pycharm should do the trick.
No problem 
I'm guessing [this](https://atom.io/packages/hydrogen)
Vim.
 try: name = self._CIT101[stuId]["name"] except KeyError: print("error:", self._CIT101[stuId].keys()) And debug. Your data isn't what you assume it is. Edit: and /r/learnpython in the future. I suggest deleting this post so others don't see it and think to post learning questions here. 
Your attempt at SEO is bad and you should feel bad, spammer.
I had thought of kivy but it has very much problem with graphs, especially the real time ones. 
The problem is I am not familiar with javascript. 
Oh that explains it. I thought I was in /r/labrats and was surprised that 100% of comments were about python.
Can you please post a link of a good tutorial where I can learn the syntax? 
well, learn it ;)
I'm going to go against the stream and say that the absolute best publication quality plots I've done are with tikz and pgfplots. Matplotlib with PDF or EPS output is of course good for “infinitely” zoomable charts, but things like the aspect ratio and the font choice are not so easily changed after generation. Try using the same plot in a journal article, a poster and a presentation… no thanks. Better throw the data in a CSV file and generate the plot from the LaTeX source. 
Even I'm interested for the same. Rather than using Pygame, we could work on a web interface like a HTML canvas, JavaScript n Websocket, with a Python Back end supporting websockets. 
With a title like "The Ultimate Guide" - I really hope the author is planning on going into a lot more depth. I guess I'm just starting to get real tired of the number of blog posts about various data science tools (numpy, pandas, matplotlib, for example) that just give you the basic 'Hello World' example for that tool. There's just so many of these - does the world need any more?
Learning numpy and pandas as I continue my job search for a data analytical job. I just finished writing a simple script to generate the number of occurrences for each letter in my résumé earlier today 