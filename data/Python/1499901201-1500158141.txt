I'd be happy to build this for you for $15 (Venmo) and some sample data. DM me.
If you're reading a tutorial or book that recommends using Python 2, find another one! (the sidebar has some good suggestions) 
Repost of https://www.reddit.com/r/Python/comments/6m08t6/share_files_in_same_network/ and https://docs.python.org/3.6/library/http.server.html ? &gt;http.server can also be invoked directly using the -m switch of the interpreter with a port number argument. Similar to the previous example, this serves files relative to the current directory: &gt; &gt;python -m http.server 8000
Thank you all for your helpful responses. After doing some research I settled on PyQt. It didn't take me long to generate a simple GUI in Qt Designer and import it into the code. Sweet! 
&gt;If you are referring to mypy, I covered that: I was referring to *type* and *isinstance*. Or are they not sufficient?
&gt; Honestly this isn't a Java-programmer problem. Sorry, never said it was. It is a problem for me as a Java developer to picture a pythonic way to solve it &gt; My first thought is that you've read too many books on designing systems and haven't done enough of actually designing systems that you then maintain. That would be wrong. I have been a senior developer for 10 years, a CTO of my own startup, and now run my own startup as the owner / lead developer. I have no problem in writing code. I haven written hundreds of thousands of lines of production code used by millions of people. However I spend a fairly limited amount of time in Python, it is about my 6th most fluent language after Java/Scala/Javascript/Clojure/Kotlin On the other hand, I am willing to be humble and seek to better my craft. &gt; Your example here is not complete enough for us to understand how you're getting yourself into this mess to begin with Sure, I can give you my real context. This is for excel templates. I have an enum with 50 different templates. Each has basically a download function (take these params, fill out an excel file from the database, send it to the user), and an upload function (take that filled out template, turn it into database objects, and save to the database). The final save to database code lives off in celery tasks, so that is nicely broken out. The download and upload piece is currently a 50 block IF statement (1 for downloads, 1 for uploads). Very ugly. It obviously started out as 1 template (so single upload and download implementation), and then over the past year it grew to like 50. So getting a bit absurd. I have a lot of code I can reuse between Upload A and upload B.. so I can very easily picture it in an object hierarchy. In java I would use a factory (https://www.tutorialspoint.com/design_pattern/factory_pattern.htm ) and be done. Python it is seeming a bit more gross and un-pythonic to do that. The enum is simply how I populate dropdown selects.. throw each type of template in an Enum, and it shows up as a template in the "choose your download" menu. 
Ah, right. As you can probably tell I don't really use MacOS ever.
Yeah I've never been stopped by my lack of math knowledge before so it's frustrating. I can get so far, but can't get the second last page figured into my equations.
This isn't go. Format your own Python.
http://www.diveintopython3.net/your-first-python-program.html something to set you off with before others come in with better answers
Not well...I'm pretty sure the lights should've gone on about 10 minutes ago and it's still dark in my house :(
Not really rigorous, quite wordy when it is not needed, and too 'cool' for me. I can't listen to this guy for more than ten minutes despite liking the subject.
Go to /r/learnpython. Be sure to post the code that you're using as it's very hard to help someone who doesn't provide relevant information.
Configuring my enviroment and learning more about Python. 
Those are *runtime* checks, you have to double-check that you've covered all the bases with high test coverage, like I said. Compile time checks catch these kinds of errors WAY earlier. It's not the end of the world. I'm still writing Python everyday and loving it.
Its fun to discuss things with other people isn't that the point of this subreddit? To exchange ideas about a topic we share an interest in.
I figured out anyway :). Thanks for the tip though! Also, just a question, my game works with a resolution of 1200x600 only, would other computers be able to set their resolution to that?
It doesn't look like you wanted to initiate a discussion... by asking "what is this?"
Also your question is nothing Python related
Not necessarily. If you're only going to support one resolution then it should be 1024x768 as just about everyone can handle that. Ideally though, you should make your game support arbitrary resolutions.
Seriously, check [this](http://nbviewer.jupyter.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-4-Matplotlib.ipynb) out and [this](http://pbpython.com/effective-matplotlib.html) if you haven't already. Hands-down, pretty much all you need to master MATPLOTLIB.
Wow those are beautiful, way better than sifting through docs! My boss loves flashy grapics too! (;
Considering its relevant to programming and python is a programming language I think its reasonable to want a definition of how they are used from the prospective of someone within the language I plan to use.
Why does this csv exporter define a "send email" feature? 
Well it did initiate a discussion thats why we are talking right now. The difference is your talking about your opinion of this post and not the actual topic at hand which is what I was aiming for.
Yea, I tried doing that, but for every resolution I’d need different XY locations for everything, and yes, I tried the resolution/2 thing, lots of my things weren’t in the right place. I guess I can try to make it 1024x768 later, but I need confirmation from someone if I can actually publish pygame games anywhere (windows store, etc)
If you mean "display that size window or larger" then you should have no problem unless you meet [that one person](https://imgur.com/a/Zot3Y) who still has 1024x768 in 2017. If you mean "set display full screen resolution to 1200x600" that's going to fail.
Pygame can scale the display. I don't remember how, but it's in their docs. So you only need to work with a single resolution. You really should be posting in r/learnpython as the quality of teaching is better. They'd probably look it up for you :)
For an indie desktop game at fixed resolution I would target 720p (because TV, and easy upscaling by 1.5 to 1080p, and 1024x768 is basically dead) but you're quite correct in that you don't want to target a specific resolution.
Yes. Agree 100%.
rosalind.info also has a lot of bioinformatics intro problems
pandas is a good library to start from with this
Started with atari basic -&gt; qbasic -&gt; vbs/asp -&gt; vb.net -&gt; javascript -&gt; php -&gt; python There not much that i miss from the other languages. I think at the most i miss some of the simplisity of asp pages but it was a simpler internet back then also. I love PEP8 but generally ignore E501. Bit of an older coder and recently i've positioned myself to do more raw data processing work so python really just made sense.
ok fine. then you should read a book on design. this isnt a matter of nonpythonic. this is just a gross anti pattern no matter your title languages or how many bazillion lines you say you've written . but if you read the bottom of my first response you should find all the rope you need to hang yourself.
This looks interesting but my main concern is if this is just a novel "side project" or something that can be used in production. I've often used PyPy over the years anytime I needed more performance and recently Numba for math/algorithm heavy work and they've never let me down.
I always wonder why job applications worry about your experience with scrum/agile. I'd love to hear stories of some dev who didn't understand it or caused a problem due to their lack of knowledge of scrum. It's literally designed so that it's easy to pickup and perfectly logical.
oh. Turns out my screen is 1600x900, and yes its supposed to be fullscreen. Anyway, I managed to do a thing where it is resolutionx/a number and resolutiony/a number, so that's good. The only thing is, as the resolution goes down, the images just go more to the righta bit, but it doesnt really show unless you are at an incredibly low resolution, so that's good!
Miniconda specifically solves the problem with anaconda being a big installation. You would then need to provide a environment.yaml file, which details which packages to install, so that an exact environment can be 'cloned'. All in all still not the most lightweight solution but its not super complicated.
instructions unclear, house burnt down
&gt;Those are runtime checks, you have to double-check that you've covered all the bases with high test coverage, like I said. If them being "runtime checks" prevents you from having high test coverage, the language is not the issue. JUnit for Java does it the same way and that's an enterprise tool even.
Pyramid. Better than Flask for all but small properties.
What software do you ship? I'm guessing it's not a web app....
I'm not saying it prevents me from high coverage, I'm saying them being runtime checks **requires** high coverage. 
More people use Django and flask, so it's easier to find blogs, StackOverflow posts, etc to help with debugging and such
&gt;I'm saying them being runtime checks requires high coverage. I originally read it as that, yeah, but it made no sense whatsoever to me. Why would it being a runtime check force you to have a high coverage? You could just test 3% of your sourcecode if you so wish.
&gt; Limitations &gt; &gt; Python 2.7 (for now) The work looks cool for sure, and I'm excited to see that "for now" disappear :). I can't say I've written Python 2 in the last 3 or so years now (funny timing, oddly enough). I think something like this will help newcomers to the ecosystem, trying to make running Python as simple as JS.
an app that comes generates project ideas
Careful what you compare, you're diving into two different baskets: WSGI: * Flask: micro framework, only includes routing and rendering. Everything else is bring your own. * pyramid: I am not super familiar, but my understanding is flask-like with different assumptions made (no globals, being part of that). * Django: batteries included and highly opinionated. You get routing, templating, an orm, and migrations built in. If you work inside the box, it's excellent. Going outside (e.g. swapping sqlalchemy for the Django) can be painful. These are the traditional request/response cycle frameworks and are consequently much simpler to understand. They still meet a large majority of the web traffic need (and usually have some story to make up for anything they may be "missing" - socket.io, channels, etc). Async: * Tornado is an async framework meeting a different need/paradigm. Async is event driven and has different performance characteristics depending on your need. There are fewer niceties included, but for various reasons.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
R/learnPython 
/r/learnpython. For future reference, subreddit links only work with a lower case 'R' on desktop. __________________________________ **^^Capital ^^Corrector ^^Bot ^^v1.0** ^^| ^^[Information](https://www.reddit.com/user/Capital_R_and_U_Bot/comments/6fmx4n/information/) ^^| ^^[Contact](https://www.reddit.com/message/compose/?to=whydidntyoudomyjob) ^^| [^^Song ^^of ^^the ^^day](https://www.youtube.com/watch?v=vbB43z6Q_0Y) ^^| [^^How ^^to ^^remove](https://www.reddit.com/user/Capital_R_and_U_Bot/comments/6jaw32/how_to_remove/)
Sorry I made a mistake in transcript. The first print in code is written right with print('') but concatenation with strings and metods in the last print was the problem. I written again that with some space and now it's working! print (‘scuola: ‘+ self.scuola +’ classe ‘+ str(self.classe))
Not llvm but still compiles to native code: https://nuitka.net
Very compliant compiler: https://nuitka.net
Django and Flask work for 99% of people. If they don't work for you, you know why and what you need, so you don't need to ask the internet. This is why they are rarely mentioned. Pyramid doesn't come with its own opinions, so it requires you to have them. This is neither good or bad thing, but requires some experience, so this is rarely recommended as first framework to use. Tornado is async, which very specific usecase. Outside of this domain other frameworks are better in every aspect.
Makes me appreciate just reading about it.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Quick question: Does python generate some sort of Intermediate Representation? Python code -&gt; AST -&gt; IR code -&gt; Run IR code in a stack machine or register machine. Wouldn't be easier to write optimizations to the IR? Just like LLVM does with C/C++ code. It's way easier to write optimizations when you have SSA form or something like that. 
That's a really good idea! Post about it here because it sounds useful as hell, like a short-term notice board for yourself
let's not forget cherrypy, Falcon, webpy
Yes, yes :)
"Very" being a euphemism for "not fully". And it accomplishes good compatibility by essentially being CPython for a huge chunk. 
RPython is valid Python. So RPython with static types that aren't inferred might be a good start. 
The coolest feature of Pyramid, for me at least, is the ability to scale from "micro" to "macro" applications easily
I have no previous experience with python on the frontend, but I know django may be in that direction. By the way, I hate JS too, but maybe if you try to use python for the frontend you will be hating python too :D Right now I use React for every frontend application, after manipulating data with python. I'd never switch to full python. Each language should be used for it's very purpose (not to mention that js is up-todate with every major browser release while python might be no)
Not OP but I've done similar if the export takes so long it would timeout a http request.
I was literally going to start work on adding something this to my project as soon as I got to my desk this morning, so this is wonderfully timed, thank you. 
+1 for Pyramid. Have been using it for 5+ years and it is scaling up well. We use it with a mixed mysql + mongo back-end. Easy to test your views (no globals, no html baked into the view). The online community is small but the docs are great and the devs always helpful.
XML...I dunno man.
What's the judgement over web2py? I found it super easy to get started but wonder why it is rarely brought up. Does it come with some great limitations or flaws?
I'd love to find something like Django but async.
&gt; Pip installation of Pa**kc**ages typo.
I thought so too, has group/team potential too. Now I need to learn the flask ecosystem The funny thing is if you get three real things done in a day it would be a small miracle
&gt; import django_rq as django_rq wat?
Yes
Just learn TypeScript and accept your fate with the rest of us.
No one mentioned Sanic yet? It's a very fast async version of Flask.
Did stumble upon this and thought it might be of interest here. 
Haven't used any of those (nor am I really experienced with JS), so I can give no judgement on performance or quality but you might want to check out these projects: https://pybee.org/project/projects/bridges/batavia/ http://pyjs.org/
The danger with ast macros is that people start building hundred of stupid DLS like in other languages. They always end up: - badly tested - badly documented - not better than a well polished lib with a nice API 
Is the new AFS case sensitive? 
Yes the idea came from jsfiddle. Im running the processes on AWS Lambda and it has a lot of limitations. I have to figure work arounds. Thank you for the input !! 
Thanks for for spotting !!
The closest thing to using python in the front end is using the cgi-bin. Each page would send a request to the cgi-bin that would return pure html generated by some python. In fact, my entire home automation system is built this way. 
I'm coming back to tornado since starting with async again
You can check-out [Transcrypt](http://www.transcrypt.org/home) too. It seems a really cool project but I haven't tried it yet. Anyway, for now, you should stick with JS if you want to build real-world applications :/
Pyramid requires some experiences, or on the other side, give more experiences. I will recommend it for first framework because of that. Then when you understand what is a framework you can decide to switch to an other, you know why. For example using Pyramid helped me a lot to use Go. 
Woah. Never heard of it before. 
In 2017, I would not want to use Python on the front end. The front end architectures I think work best are all functional, and JavaScript is a better FP language than Python by a longshot IMO.
Cool work, I hope py3 will appear soon. Some nice features could be : Having some modules already installed (such as numpy). Add a shortcut to run the script, or am I missing it (Mac user here) ? I imagine you already know it, but repl.it is really similar of what you're doing.
Or you could try Elm? It's a very different language from Python, being purely functional and statically typed, but a lot of the design philosophy is quite pythonic (e.g. trying to have only one obvious way to do things). I'm having fun with it.
sorry ? weird to hear that Django would replace JS, I don't agree. Django has plugins to create select2 widgets and stuff like that, but it doesn't replace JS. If you want a bit of interactivity in your app, you need JS. (same for RoR @zspitfire06, but Ruby has frameworks like https://inesita.fazibear.me/ or http://voltframework.com/)
There's a curious python web framework that allows to write great apps like [kansha](https://github.com/Net-ng/kansha), a Trello clone, backed by a prosperous firm, without writing html nor javascript: the [Nagare](http://www.nagare.org/) framework. A [continuations-based](https://en.wikipedia.org/wiki/Continuation) framework. The drawbacks I can think of are that for one, the urls are ugly, then maybe you'll mix a bit of javacsript in the templates, and it can't do double data binding like other JS frameworks out there (yet ? I read they're working on it). It's strange tech, based on stackless Python, but the Kansha result is impressive. You also have the possibility to use python-like JS languages: [Rapydscript](http://rapydscript.pyjeon.com/) is a very pythonic javascript, I also like the terse syntax of [Livescript](http://livescript.net) but it isn't "pythonic". Some other languages promise to write web apps without JS: [Nim](https://nim-lang.org/) looks quite a lot like Python and its emerging [Karax](https://github.com/pragmagic/karax) framework looks fantastic (very clean way to write html and JS in Nim).
Feature request - run code on Ctrl+Enter 
https://anvil.works/blog/introducing-anvil
There's Anvil now: https://anvil.works/ it has a drag n drop UI.
I only said that the best guess for a full python frontend is django, but since I never used it, I don't know the limitations. JS is horrible, but it does what it's necessary, so go JS :D
Trying without success to set up a Selenium-based scraping process to work as an Upstart service.
I love Elm, beautiful, terse, actually helpful errors ... I just think it's going to end up compiling TypeScript.
Looks good.
You can transpile Python to JavaScript with something like transcrypt but personally I'm not that big of a fan of transpilers. If you want to reduce the amount of JavaScript you have to deal with I recommend you try out Polymer which uses web components and you can install a lot of prebuilt stuff via webcomponents.org.
Django is still only something that can feed stuff to the front end. A django application you still need an HTML template and JS or something along those lines to make shit appear and dance around on the page and all that spiffy stuff. 
3.7 directly from the repo. go for the win
Now looking at flask-cookiecutter
Typescript &amp; ES6 has pretty much fixed all my complaints about Javascript. Sure there's still a few quirks, like needing to use === to get strrict equality. But I'm a happy camper compared to the dark, dark years of old school Javascript.
Wouldn't that be doing what JS is doing now (aiming to run toasters around the world)? I'm all for using the right tool for the right job.
Django isn't a replacement for JS at all, it doesn't run in the frontend. That's not what this discussion is about.
That's the definition of using Python on the backend...
Same. The learning curve was a bit harsh for me, but the more Typescript I write, the more comfortable it feels, and at the very least, now that Observables are a real thing, eliminates almost all of the pain points I had when dealing with JS just a couple of years ago. No more callback hell!
I recently switched from being a Python/Django backend developer to being to a Javascript/React frontend developer. I miss list and dictionary comprehensions, they would make a lot of code a lot simpler. Other than that, ES6 is actually quite OK.
There is a lib that can output JS from a function object, cant link now, dropping to sleep. EDIT: [metapensiero.pj](https://github.com/azazel75/metapensiero.pj), continue the down-voting train, peasants. EDIT 2: [CHOO CHOO](http://suptg.thisisnotatrueending.com/archive/34645043/images/1409953211515.gif) 
Really easy to use, yes, but stuck with python 2.x and some unusual design decisions like implicit import, etc.
I think what you are talking about already exists with Brython: https://www.brython.info/
I use Django-hotsauce :)
Pyramid predates Flask in its Pylons incarnation, but even as Pyramid it only post-dates the release of Flask by a few months. Flask has tried to stay fairly minimal and lightweight. It's a great choice for small projects and implementing lightweight web services, but for a larger project Pyramid gives you a more heavyweight and featureful skeleton project to build out. You get more from day 1 but it's a bit more opinionated on how things should work. It's still more architecturally open than Django though. Here's a good overview and comparison of Flask, Pyramid and Django. https://www.airpair.com/python/posts/django-flask-pyramid
Holy crap, so many of the responses in this thread are terrifyingly uninformed on either basic terminology or areas of concern. Even if there was a way to use any language you like in a browser, ultimately you would have to interface with the html interface which is often understandably confused with JavaScript because JavaScript natively supports it. That being said, I feel prototype chaining is a much better OOP style suited to html than class-based oop because of the memory consumption that would be required to instantiate each type of html node. Eliminating JavaScript would only serve to evade a few gotchas unique to the language. Instead of fearing or hating js, you might as well embrace it and understand it. I recommend this book: https://github.com/getify/You-Dont-Know-JS
I don't think flask existed when reddit started. Django did but Django was very different back then and it's not really going to be relevant to decide based on ancient versions. I honestly have never used Pyramid and can't comment on it. These days you probably end up with Flask or Django. Django does more out of the box but that can cause problems if your app is unusual and you have to bend Django in ways it's not supposed to bend. Flask gives you less and makes you write more, which is great if your site is very lightweight or highly custom. Either should be fine for a reddit clone. edit: Wikipedia says reddit started in 2005. Flask docs say initial release was 2010.
I mean, is there an actual reason you "hate" JS?
I've got a project that adapts Django to use the async backend of Sanic. Supports the ability to simply add `async` to the front of your Django handler functions to get all of the speed of Sanic, with the usefulness of Django. Edit: to be clear, it is implemented as a Django add-on, not a fork of Django. It is compatible with Django 1.8-to-1.11. I'm hoping to have my first release this weekend.
It's APFS, and once again it is neither one or the other, but can be customized upon formatting a partition. Typically the default is case-sensitivity on iOS and case-insensitivity on macOS.
I am a Python person and I use Vue.JS for the frontend, it is easy to learn, fun to use, and made me like web development. 
On this occasion: Any good tutorials or resources for TypeScript you could recommend? Thanks!
I have read many books on designs. Your solution seems strictly worse than a straight factory pattern out of first year school. Not seeing the benefit. Enums are great, even though exhaustive matching is not checked at the compiler level in Python.
Interesting, I used to work on Quartz at Bank of America. Fantastic technology. You could put together a proof of concept app or web service like a Flask app and have it up and running in a dev environment in a couple of minutes. They have a lots of custom infrastructure and services all wrapped in Python APIs or defined by config stored in one big source repository.
How is Javascript a better FP language?
There are a few things I wish we could take from python and implement in Javascript. I remember the first time I used is in with python and was like holy crap.... why isn't this in JavaScript. Even if the end result is that it just looks it up itself it makes for better looking code imo. 
Tornado is great, but it's less popular for a reason. It's asynchronous, which allows it to handle a lot more simultaneous connections. But it also requires you to learn how to write asynchronous code. Or at least a new async frame work. And the problem that it solves isn't a problem that most people need to solve. I've used it a bit in for one very specific use case. For most things I prefer Django. 
That's true, but usually there's little reason or even temptation to use them. For what it's worth, C/C++ have "shitty" substitution macros, and people still manage to get some good mileage out of them.
Hadn't heard of that either. Async Flask, you say? I'll check that out.
Hey, founder of [Anvil](https://anvil.works) here - "end-to-end Python" is exactly what we do! Anvil is a replacement for the whole web framework in pure Python - no HTML, no JS, no HTTP API requred[*]. Your client side code is in Python, your server-side code is in Python, you can call straight from one to the other - and you can publish it instantly on the web. It's astonishing how fast a good Python developer can put up a web app! As well as our hosted service (which has a free tier), we also provide on-site installations for people who need their apps on their own servers. I'm happy to answer any questions. [*] Unless you want those things, that is. You can use custom HTML layouts, and working with REST APIs is pretty slick.
Depends on your use case and requirements. Don't reinvent the wheel.
Map and filter, my friend.
A few people have mentioned Anvil (our end-to-end Python environment) in this thread. I actually gave a lightning talk at PyCon this year about how we do front-end Python: [Compiling Python to Javascript](https://anvil.works/blog/pycon-talk) (video + transcript)
I wonder how Brython is doing.
http://www.typescriptlang.org/
I know, and yet another anonymous function... The comprehensions just look much cleaner.
If quick is your goal, just use WordPress or Blogger. Alternatively, lots of people like static site generators (e.g. Jekyll) and hosting on GitLab Pages or one of its competitors. You can still do interactive visualizations on a static site if they're JS-based. 
I moved from Lua, I guess (I tried Java in the meantime but while it was good for broadening my knowledge and for speed, my coding in it was fairly slow). There is not much that I miss, as Python and Lua syntax are very similar and so far I'm getting much better performance with Python than with Lua. But I miss how well Love2D worked and Pygame did run into performance problems much much sooner. Oh, and I miss their ease of deployment.
Javascript is a lot better language that people give it credit for and it's a lot better than some particular languages. I don't think I'd say it's better than Python, though. But it may be in a web front end context.
You could try pelican, static website generator allowing writing with markdown and rest with possibility to include ipynd inside the writing or use the whole notebook as article 
[Arrow functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions) make anonymous functions prettier, IMO. That said, using them may require you to uses something like Babel if you need to target certain browsers (like IE).
I've been tinkering with this lately. I'm not sure how sturdy it is in production, but I was able to access JS native libraries like socket.io and write my UI all in Python. Very neat stuff.
We do use ES6. But I just like e.g. [x.prop for x in y if x.otherprop == 'example'] better than y.filter((x) =&gt; x.otherprop === 'example').map((x) =&gt; x.prop); And of course, the Python is trivially converted to a generator expression by using `()` instead of `[]`. That's much harder in JS. So to me it feels like all the improvements to JS in recent years haven't yet got it to the point of Python 2.4, released 15 years ago. But the language doesn't matter that much, the whole ecosystem around JS including React is really cool.
If you are lucky enough to be allowed to use it. We don't, because apparently "it's hard for devs to learn it" and "it's not worth it".
Looks like AWS Lambda supports python3.6 https://aws.amazon.com/about-aws/whats-new/2017/04/aws-lambda-supports-python-3-6/
Tornado is actually much more than async. I would actually compare it to flask, with the added advantage that async is supported right out of the box.
Yeah, Elm is really cool. Easily one of the best way of learning ML-style languages too.
Just thought I should add that tornado is not *only* async. You can also run it as a plain WSGI application (http://www.tornadoweb.org/en/stable/wsgi.html#tornado.wsgi.WSGIAdapter). But yes, normal configuration gives you all the async niceness.
Good to know, thanks!
Just take a deep look at ES6 and ES2017 - you'll quickly come to the conclusion, that javascript is evolving to look very similar to Python. I actually wonder, when the ECMA folks will introduce whitespaces as indenting means - afaik, most javascript coders already accepted whitespace as far superior to tabs. Just a question of time. Iirc, that can already be done with a 3rd party parsing lib.
Always [start at the source](http://www.typescriptlang.org/index.html), but also [r/typescript](https://www.reddit.com/r/typescript/).
BTW, is there a chance that Python will "compile" into the new Web Assembly "as is"?
That's management speak for "we don't want to eat the short-term cost of reduced development speed because it would make our numbers look bad, even if it does turn out to be good in the long run". I hate shareholders...
I would bring up the engineering blog of slack. They had one a while back about how many bugs they got rid of.
Have you actually worked with it? Is it really your ideal ecosystem? Are you a masochist? 
Wonder if WebASM might change things a bit there. EDIT: Autocorrect, dammit
&gt; terrifyingly uninformed on either basic terminology &gt; interface with the html interface The irony. 
JavaScript is the language of the client-side web. There's no doubt about that, and it doesn't look like that's going to change. To be completely honest, I'd rather accept my JavaScript fate in the few places it is required instead of having Python transpile to JavaScript just so I could use Python even more. There is some value in flipping back and forth between Python and JavaScript (I tend to write some node.js). Going back to Python gives you a *huge* sense of relief and joy.
This example is great! It should go to the docs. So, I guessed correctly and I have to use `providers.Callable` do wrap an arbitrary callable. I still don't like the strange use of classes, but that is probably mostly a matter of personal taste. `Container` for example is a class, but it is never instantiated. I'd just let the user create an instance of a generic container class and then work with that. ctx = di.Context() ctx.some_singleton = Singleton(...) ctx.some_callable = Callable(...) Again, this is more personal taste.
I use coffeescript. I know es6 solves a lot of the problems, but she's too classy and I like my js to be a whore in bed.
ES6 is really not that different from Python. 
My primary work subject is ecommerce. I moved from PHP (2001 - 2014). What do I miss ? Well, nothing honestly. Language is superior in all aspects I can think of and also covers more fields. libraries and tooling are better too, not to mention the community. As a side note, while ditching PHP I also ditched MySQL in favor of PostgreSQL, because it seemed to be the de facto database for Python. Another big win for me, as PG is also far superior to MySQL in all aspects I can think of.
I haven't personally tried it but there is the Batavia project which aims to do just this. 
You learn best by doing. Try exercises, to follow tutorials and your own programs like using Python with FASTA/BLAST. Some free resources: https://pythonprogramminglanguage.com/ https://pythonprogramming.net/ https://learnpythonthehardway.org/book/ 
I was learning haskell when I discovered Elm and I was excited to try it out until I saw there weren't any type classes or higher kinded types.
not open source? yea fuck yo couch. what kind of moron builds a site in a locked down startup cloud platform.
[RenPy](https://www.renpy.org/) is used commercially for visual novels and point and click adventures. There's quite a few RenPy games on Steam and many more on those adult anime dating game vendor sites.
Agreed
Interesting, I like the ability to install external packages and this makes it better than repl.it Feature request: ability to define environment variables prior to script run. https://pyfiddle.io/fiddle/9f37b610-bbbe-4557-aa13-ec14c4041a9f/ Another question is: The execution is isolated? Because I had other fiddle and installed a package, that made was available for my next fiddle, does it run with isolated environments?
You can still utilize async with Django with things like celery, Django Channels/asgi etc 
Welcome to America!
ATTENTION: Your AWS secret keys are exposed https://pyfiddle.io/fiddle/d21ada51-6ddd-428c-9565-33a560e12e57/ You need to hack os.environ in your system to disable it. 
Talk python to me is a podcast and they bring in the founder of pyramid. He goes over pretty much what makes pyramid different from flask and Django. 
it's baffling to think someone would create a "readme" about GUIs and not have a single screenshot of a GUI--- I don't even have words
I didn't give you a solution. I gave you handful of techniques that reflect the code you already had written you're the one considering metaprogramming because you haven't figured out you dont need enums if you use a dict. you're trying to bring way too much firepower to the problem of populating a dropdown list. 
Also twisted?
Web Assembly is coming soon^(TM), and it should allow Python to be a first-class language for browsers (as opposed to transpiling it to JS). For now, I just do as much as I can with HTML and CSS and then use jQuery for the rest.
You might like Ramda: import * as R from 'ramda'; const result = R.map(R.compose(R.prop("prop1"), R.where({"prop2": R.equal("example")})), dataset) 
I can accept criticism of the languages warts, but the ecosystem and tooling is pretty damn amazing. Npm and the plethora of great build tools put `setup.py` and `requirements.txt` files to shame. Also, python has some pretty weird syntax in some places that goes against the grain of lots of other languages and just gets kinda frustrating when switching from one to another. How many times have you had to fix a `myArray.join('\n')`? Also stack traces in python probably couldn't be formatted in a less easily readable way. That said, I still use python over node in most situations, and would happily write frontend code in python if it were a viable option.
I only includes those the OP mentioned, I didn't mean to have a comprehensive list of all available Python frameworks :)
Kyoukai could be very interesting if you're into asyncio and love Asphalt. I don't, though, so I've been using Falcon.
We used to use flask a lot at work, we have our own in-house framework -_- which I really hate. Anyways, we are currently using sanic for one of our components as we moved its code to asyncio instead of flask
/u/pvkooten is right. To help you debug. You know what url is, so just in a Python shell run &gt;&gt;&gt; response = urllib2.urlopen(url) &gt;&gt;&gt; data = response.read() &gt;&gt;&gt; data And look at what data is.
Arguably not all of that is particularly relevant to a language still more or less intended for front-end web development. But yeah, if Haskell didn't have agonizingly obtuse error messages as a Feature, I'd say just go to the mother tongue.
Have you looked into pandas? It is a library written specifically to deal with data analysis. Might be worth a look. The author, Wes McKinney, is even working on a second edition of his book "Python for Data Analysis" for release later this year. The book focuses on practical uses of pandas.
You just defined Enterprise IT.
The type system in Elm is WAYYYY better than Python and TypeScript -- makes you wish Tagged Unions and Pattern Matching was part of every language. The type system and The Elm Architecture are amazing for reliability and durability of code. Your development rate stays pretty constant even as you add more and more features. I built a 10,000+ LOC app ([https://www.cinc.kitchen](https://www.cinc.kitchen)) in it, and I don't think I could maintain the same rate of development even in TypeScript/React. But it's still missing some browser APIs and is still sub-1.0. For many people, that's a hard pill to swallow. Great language to learn though. In a few versions/years, as it adds more features and continues to improve in tooling and performance, I could see it becoming dominant on the frontend.
How could you open the source? You'd see all the holes in the code resulting from it being a bad idea in the first place. People paying for this for production apps? Sorry, suckers :/
Almost ten years ago, I remember seeing a project that used IronPython in combination with Silverlight to do this. It instantly crashed my browser every time I loaded their demo. It's effectively impossible to get a new language available for reliable client-side interpretation. Even with all of Google's power, they couldn't do it with Dart. That leaves us with transpilers, which can only really do so much. And anyways, so much client-side work is about interacting with the dom that you're better off designing a new language optimized for that, rather than directly adapting an existing one.
Based on your file description I would say that if you work for the government just upload it to wikileaks and they will sort it for you. :-) Seriously though its scary that someone with access to that kind of data is coming off of excel with it.
&gt; the whole ecosystem around JS including React is really cool. leftpad
[removed]
Sounds fascinating. I've been trying to find someone from BoA to come talk about their tech stack in Python on the show. Any ideas who might want to be part of it?
Full stops can't be used in variable names; if you really need it, you need a workaround with a class. Otherwise, use an underscore instead. If you are to use a class, here's how I'd implement it: import time import random class MyCounter: def __init__(self): self._count = 0 self.gauge = 0.0 @property def counter(self): operation = random.randint(1, 3) if operation == 3: self.gauge = round (random.uniform (0.0, 50.0), 2) return self._count self._count += operation return self._count awesomeness = MyCounter() while True: awesomeness.counter time.sleep(0.5) DISCLAIMER: I have not tested if the code even runs. But it should give you an idea. The code isn't all that good either, just a heads-up. HOW THE CODE WORKS: 1. We create a new class called MyCounter 2. We initialise the MyCounter class by giving it a variable to store the count. 3. Since the task wants to use a notation without parentheses, we will use the @property decorator to get rid of them. This also allows us to combine the functionality of a method and a counter variable - to the extent this task requires. 4. We define our counter. The operation variable will store a random integer from the set [1, 2, 3]; if this integer happens to be 3, we let the counter variable to have a random float assigned to it. Otherwise, the counter will just be incremented by the operation variable. In either case, the method returns the final value of the counter variable. EDIT: Didn't notice you used both "awesomeness.counter" and "awesomeness.gauge". Fixed the code to support both.
You could have a look at Purescript instead then :)
I miss standard libraries. That's what JavaScript needs. 
You will need to look into the timer and random libraries. As for the actual layout of Python, the script runs each line in succession. For best coding practices, take a look at the PEP8 style guide. If you have some code, feel free to send it my way and I can tell you where it's going wrong.
Or Dart. *raises flame shield*
i made this basic game engine with pygame a few days ago. https://github.com/dylan157/basic_2d_game_engine Very basic but allows block orientated graphics with text in the cmd terminal 
Making my first django web app :)
You should submit a post here when it's done! 
Did you find it?
Let me guess, I would be paid in shares.
Arcade library is like pygame but easier to use, better optimized, and has what you are looking for i think.
Basically it means you'd be screwed
PyQt5?
Because why not. Right now I'm looking for a language that generates fully native code.
&gt; html interface Do you mean the DOM? It's very much possible to use the DOM from other languages. It's also not really native to JS, i.e. there is no DOM in server-side JS.
Yeah, go for Vim and concentrate on learning it instead of learning programming. I recommend you Geany, a lightweight and easily customisable IDE that has several light and dark themes on Github that you can tinker with to your hearts content
Yes
You could have a look at the open source Godot game engine. It is not python but use a language quite similar to it.
Trying to learn multithreading in python.. will definitely speedup/make my job more efficient. Even after scouring through stackoverflow, it's not a concept I can wrap my head fully in =\ but hey, it's a journey! definitely will get there once i put enough practice into it :D
In theory yes, but I've never heard of that happening. 
Is it possible to verify if a module is safe to use without reading through the entire source code and understanding what it does as that is not possible in a conceivable amount of time for some larger projects?
I was planning on using this library called [Pillow](https://pillow.readthedocs.io/en/latest/index.html) which is a fork of the original PIL. Can I verify if it's trustworthy, is so how would I go about doing so?
That's pretty much the only way to explicitly trust something. Anything other than that , you're implicitly trusting someone else to have vetted it for you along the way. Let's say you look at the checksums, you're trusting that the contents are good if the checksum passes but you still don't know if the contents aren't malicious. If you assume that because it's on pipi it's safe, you're assuming that hopefully other people have vetted it so it's safe, but you can't be sure. The only way to ever be 100% sure is to read every line. Of course that's not very feasible so you eventually have to trust the ecosystem a bit. Chances are if you're using a popular package it will be fine.
Generally a more popular project is going to safe, but if it's a sensitive project, you should probably check yourself.
Try dart, our team uses it with django rest framework and it works great
I switched and did an excel macro recording in VBA. I still want to learn this in Python, but I have to do it when I don't have a deadline. I already have a python script to teach me how to create new files. But I need to learn the loop function that will create many files. 
There's nothing that hurts quite like seeing a compiler error that starts with: `Couldn't match type ‘forall a,b,b1,b',b2,bb . (a -&gt; Bool) -&gt; [a] -&gt; [a] a -&gt; b -&gt; b -&gt; b1 -&gt; a’`
Django is a server-side a.k.a. backend framework. I don't know how you get the idea that it is a frontend thing.
Can someone ban this thing please?
The only real way to verify that any software is trustworthy is to read the source code yourself. Pillow happens to be a very popular module and if there were issues with it they would be found very quickly, so in that case I'd trust the crowd. For extra insurance, install it from a software repository, where someone has vetted all the software in the repository. Pillow is part of every Linux repository. 
There ya go! Simple. Like learning Dwarf Fortress on an all-blank-caps 53 character mechanical that randomly shifts from DVORAK to Simplified Chinese every 3.7 seconds.
Think of it like wikipedia with different stakes. The more popular an article, in general, the more you can trust the collective community to have vetted it. Pillow is pretty darn popular. I don't worry about it.
and bottle
Ultimately that would depend on how well the project comes along. I am a Ph.D. grad student, and my funds are limited. If you're not interested, I'll understand :)
I will say, I have been using Bottle for my small project. I like it since I have to work on an air-gap network and I only have to deal with upshifting a single file. With that said, I could probably move to flask pretty easily once I find the equivalents.
I suppose I could. I didn't work in the core platform team but did work closely with them and used Quartz every day including developing batch jobs, web applications, web services and some work on the release tooling. I'm not sure what the legal parameters are for that, they do have a fair bit of proprietary technology which I'm not sure I'd be at liberty to discuss openly even though I don't work there anymore. I can certainly talk about everything that is already out there. Actually it looks like quite a bit about core Quartz technology has already been published. https://web.wpi.edu/Pubs/E-project/Available/E-project-040213-171952/unrestricted/Wall_Street_MQP_Report.pdf 
Try Typescript or wait two years until WebAssembly is widely supported and there is a compiler for Python to wasm.
&gt; Npm and the plethora of great build tools Do you seriously think NPM is better than pip? It's slow(ever perform a search?), packages are broke up into the lowest common denominator so you have to install hundreds of dependencies for the simplest of things. Venvs are so much superior to a local `node_modules` directory too, IMO. &gt; Also stack traces in python probably couldn't be formatted in a less easily readable way. Wow, of all things I never thought this would come up. Python has **always** directed me to exactly where the error was. Javascript/node tracebacks are uniquely painful in that half the time they never point out my file that actually has the error! Maybe we have worked in different library stacks, but man, this has always been my #1 complaint of backend JS. I'm honestly flabbergasted by your reply.
The correct place to ask this question is /r/learnpython - that's mentioned in the sidebar. Trying to save your code into a file so it can be executed doesn't work, because you posted an image. That increases the burden you're creating on the other people. You should have put it in pastebin or a well-formatted selfpost. That's also mentioned in the sidebar. You can only have one file with the name "testing.txt" in that directory. The documentation for the tools you're using at https://docs.python.org/2/library/urllib.html says of `urlretrieve` &gt;The second argument, if present, specifies the file location to copy to (if absent, the location will be a tempfile with a generated name). Your problem description made no mention of this documentation, nor what you interpreted it to mean. It was easy to locate, at the other end of [a google search for "urlretrieve urllib"](http://lmgtfy.com/?q=urlretrieve+urllib). Did you read this documentation? Why does it not answer your question? There's apparently a delta between what you observed to happen (`urlretrieve` writes a file named as you ordered, overwriting an existing file with that name) and what you expected. What did you expect? Did you expect `urlretrieve` to use a filename different from the one you ordered? Why? I suspect that your troubles, both with this specific file-writing query and with getting assistance, have a common root cause. http://www.catb.org/~esr/faqs/smart-questions.html is a useful document, if you overlook the bias about Redmond.
Really cool. And really insane. 
Pip and pip3 are command line programs. Try running this directly from your prompt.
pip3 is a command-line program that sits beside python, not something you can run from inside python. Surprisingly, I have not managed to locate any documentation which says this explicitly. So I'm honestly not sure how anyone was supposed to know this. You can also type ‘python -m pip install scld`
whitespace as superior to tabs?
That doesn't really answer the question though. I know *why* you should do something like that out of band, that doesn't really explain why this module feels the need to take upon itself to define that call
https://godotengine.org/article/beta-release-python-support
We used pyqt to load a headless webkit browser that rendered the web site with a full just engine etc. It is heavy handed in some ways and I am sure there are newer more streamlined ways to do it.
 &gt;The only way to ever be 100% sure is to read every line. Of course that's not very feasible so you eventually have to trust the ecosystem a bit. Not only is that not very feasible, but also even if you do read every line you have to notice that there's something malicious going on. I feel quite fluent in Python, yet I don't know if I could spot something malicious that's well hidden. A line of code here a line of code there, spreading the maliciousness across various files, using some clever trick, I can imagine many ways to obfuscate the malicious intent of code that even a careful well versed in Python reader might not notice. 
NPM needs Python to work LOL.
[removed]
JavaScript offers tail call optimization, while Python doesn't. Recursive function with more that 1000 depth levels will produce an error in Python, so unfortunately JavaScript IS better FP language.
Making a script to automatically format a google sheets doc I have (made with an IFTTT recipe) to keep track of the specific amount of time I spend at work vs at home. Not sure what I will do with the data yet Also making an unexpected factorial plugin for the helga chat bot 
Wow, needed an anonymous "suggestion box". I made it in 30 minutes with the Google service. Seems like a great website to use for learning and small projects!
Thank you all for kind comments!
Why not Tensorflow? Just wanted to know if this out-ranked tensorflow. 
Yeah, I added the filepath to the environmental variables section and now it works, but I've ran into program-specific issues. (with the soundcloud downloader) Regardless, thanks for the help. 
80% community, 20% language. Python's community and language design push imperative and OO pretty hard. That's OK, and Python is a great imperative/OO language. Also, Guido said this: &gt; Python probably has the reputation of supporting functional programming based on the inclusion of lambda, map, filter and reduce in the language, but in my eyes these are just syntactic sugar, and not the fundamental building blocks that they are in functional languages. The more fundamental property that Python shares with Lisp (not a functional language either!) is that functions are first-class objects, and can be passed around like any other object. This, combined with nested scopes and a generally Lisp-like approach to function state, makes it possible to easily implement concepts that superficially resemble concepts from functional languages, like currying, map, and reduce. The primitive operators that are necessary to implement those concepts are built into Python, where in functional languages, those concepts are the primitive operations. You can write reduce() in a few lines of Python. Not so in a functional language. I think that's an insightful on Lisp, but a pretty uninformed opinion on FP....
You're completely missing my points. Pip works well and I recognize that. I mean to say that the ecosystem around building and installing packages for JavaScript is pretty good nowadays. Whether you use npm or yarn, browserify or webpack. The tools themselves work well and have excellent documentation (although webpack was pretty bad for a long time). Im not disputing that stack traces are useful in python either - I'm saying that they are very poorly formatted in my opinion and are hard to look at and immediately see where the issue lies. There's a reason so many people use JavaScript, and it's not just "because they have to". Both languages have their merits, I'm just kinda sick of the constant criticism it gets from people who very likely have most of their experience drawn from minor front end work or hearing about left-pad and jumping on the bandwagon.
The more I look around the more I realize this question was very premature. Appreciate the info though, cheers. 
Why is there so much hate for JS? It's definitely not my favorite language but I've never run into any js specific problems before 
Nice work! Care to share the "copy my app" link so we can see your source code? (It's in the Publish dialog, under "Allow someone to copy my app")
Windows UI automation. 
The type system is rather weak at places. And I don't mean weak as in dynamic like Python, but weak as in "I can't even express this without lots of copy paste". I would not consider Elm a valid option without a code generator from day 1. Cog seems like a good fit.
Awesome :D
One is freely available technology that can be taught to do this stuff, the other is a commercially available but ready-trained AI. There may be an outcome difference but it's time vs money.
TCO is ES6 right? That's not in all relevant browsers.. And fetichism over recursion is a disease of FP, not good practice.
VueJS is my recommendation as well. It's so pleasant to work with, at least for the simple things I'm doing at the moment. I hated trying to get angular and some of the other things out there. 
No. JS ecosystem has been improving and the community growing leaps and bounds faster than Python.
They were proposed, but the proposal was denied :(
Personally I wouldn't. I wouldn't want to use python for anything where the code isn't running on servers I control where I can run something like sentry. Shipping code to run on a client machine means static typing I think.
&gt; "I can't even express this without lots of copy paste". Can you give an example? I'm not sure what you mean.
I'm seeing an uncomfortable amount of posting about this anvil stuff. I'd really like to see the mods clamp down on what is essentially ads in /r/python. 
hello, verbosity
ES6 is uber relevant in browsers as all major browsers support 95%+ of ES6... Just not TCO. But that's not the point, the point was Python vs JS as an FP language. Functional programming means pure functions with no mutable state and good luck achieving that without recursion.
language ergonomics are funny. In python, comprehensions seem infinitely preferable to filter, map and reduce. In haskell and elm, the need for comprehensions feels less compelling because of nicer lambdas, so you end up using filter, map and reduce(foldl and foldr) everywhere. in js, everything feels wrong :)
/r/HailCorporate 
Hey, I'm new to this.
&gt; Is it really your ideal ecosystem yes? Chrome dev tools are by far the best dev/debug/profile toolset I've used in any coding environment and npm + eslint + babel + webpack offer tons of flexibility to create sophisticated dev toolchains. My biggest complaints with JS today are the complexity of learning and configuring babel and webpack, which is a very steep hurdle to clear.
Well that was some serious double think. I don't see why you'd need recursion. Mostly you'll be just fine with various comprehensions. You can also have the language include data processing constructs that are efficiently implemented with mutable state internally but that exposes a pure FP facade. 
Because I didn't say the html document api or what?
A simple case is to have a union type that the user can choose one of. A very simple case in which you're better off just using a stringly typed dict. Hopefully you haven't written a lot of code with the union type already!
I've seen other people say this, and I don't think they understand how to properly model the problem. If you have a union type for various choices, and you use the same logic for each choice, then the choices should just be strings, not unions. What's cool is you can still use pattern matching on the strings if you want. If the logic is different for different choices, then the tagged unions are definitely superior as they force you to cover the logic for all possible outcomes. Does that make sense?
The part of tensorflow I used was free, not sure if there is a payable version. But I get your point. Thank you
I guess? I have issues with an ecosystem that compulsively imports other code to the point where people are importing for something as simple as left padding. There's a problem if all it takes to take down an entire ecosystem is the removal of a left padding "library." And I despise loading a webpage only to see it pull down 30 separate JS libs for functionality that could've been done via a bit of serverside templating + AJAX. My theory is that it's likely due to so many non-CS and non-programmers contributing to the ecosystem. It's UX/UI/design guys who pick up a bit and start submitting. Stuff gets heavily over-engineered.
I've used both, but I gave up on Pyramid pretty quickly. It "gives you more" than Flask, but I found that a lot of the things it gave me were things I didn't want, and a lot of things Flask didn't, you can get from an extension (see: [Flask-SQLAlchemy](http://flask-sqlalchemy.pocoo.org/2.1/), [Flask-Login](https://flask-login.readthedocs.io/en/latest/), [Flask-CORS](https://flask-cors.readthedocs.io/en/latest/), etc). The things I wanted at the time that I still haven't found a good solution for were: + Simple dependency injection + Loading config variables from environment variables and YAML files (personal preference, I don't like .ini files or config.py files that just define a bunch of variables) + My HTTP router defined in a config file, not in code. As far as a full-featured skeleton, I've made my own, but it was based largely on https://github.com/Robpol86/Flask-Large-Application-Example.
I went for the drama post to get eyeballs, sorry 'bout that. It's not just you forgoing the screenshots on GUI tools/examples-- I've seen this happen a lot lately. I think it really helps to see the final product of the example code, that's all. 
It was convenient because it accepted pandas dataframes similar to seaborn. I was using it for scatter plots (pearson correlations and MA plots) and heatmaps. Took the time to check out Holoviews and it seems pretty rad. `jupyter nbconvert` lets you export to HTML for easily sharing the interactive stuff, although ideally I'd like to export just the plot for embedding into a page which bokeh let you do. 
It does not make sense. Assume that the logic is different in your definition. Then you're still back where we started: copy paste horror or code generator. 
Godot is great. [Here's](https://godotengine.org/features) a list of features. Some things that I'm missing in many Python engines and frameworks: * Built-in physics engine * Particle systems * Built-in GUI elements * Navigation meshes and A* for pathfinding * Shaders (also visual shader editing) * Networking * 2D lighting and 2D normal maps * Tilemaps * Animation player * Viewports (easily change the window resolution) * Cameras [Here's a video](https://www.youtube.com/watch?v=Ge6EQHR3Xrg) that shows some features of the next Godot version 3.0.
I'm not into programming games but having Python support in godot is awesome and a definite boost for Python, which has quite limited game engine support atm.
Hmmm... There's no way to abstract away the fact that different logic required for various choices requires different code for each case, regardless of what level of abstraction you're seeking. Tagged Unions and Pattern matching are very elegant in such a circumstance. If you're talking about boilerplate within the elm architecture, then yes that is a thing... depending on your definition of boilerplate. But that's not the type system.
Check out pyramid's design defense. It mentions how it differs from flask in some places and why: https://docs.pylonsproject.org/projects/pyramid/en/latest/designdefense.html
&gt; I've heard that the developers of reddit chose to use the pyramid framework to build reddit I think you mean pylons, not the same thing as pyramid
&gt; Shipping code to run on a client machine means static typing I think javascript :D
There are really only 2 good options for you at this point. Suck it up and use JavaScript or don't do front-end. Now with that being said you could look at WebAssembly but I would not recommend doing it in production. https://github.com/athre0z/wasm
Yea, sad isn't it?
3.6
https://anvil.works/blog/pycon-talk Haven't used this but it might work.
I dunno, even with the smugness here I think you're wrong. Nothing's perfect and if you're looking to not use it, that's a reason. But up until, and say about a week after, everything has been great. Yes, there's preventable problems, and yes constantly reinventing the wheel, and yes the ecosystem is like a huge flash in the pan, but all of that is the cost of incredible tooling that refreshes itself every few years. It's always like saying 'why use copper now if we're just going to be using iron (or steel, I'm not a historian) next century. It's only the scale of time that's changed, for the better. Things ubiquitous today *should* be deprecated two years from now if there's something that's better. Obviously if you're maintaining old software it's a pain but for the piles of people not, it's amazing.
&gt; And I despise loading a webpage only to see it pull down 30 separate JS libs for functionality that could've been done via a bit of serverside templating + AJAX. Why? Does that really affect your pageload at all? My facebook.com pageload is DomContentLoaded in 888ms and Loaded in 1.27ms. You know how many js files were requested? 62 of them. Doesn't matter at all, since the page loaded basically instantly.
I imagine one that's going to success.
Hey now, I like Dart.
He means tensorflow is the free option but requires more work.
Things can be both at the same time: the same because we need to display it as a list in the GUI for the user to choose, and different because the code paths to actually implement the different choices are vastly different. Elm forces you to go to the worst common denominator. &gt; If you're talking about boilerplate within the elm architecture, then yes that is a thing... depending on your definition of boilerplate. My definition is horrible horrible copy paste where you have the same list duplicated in multiple places and you have no way to reconcile the lists. That's the exact opposite of "update this type definition and fix all compilation errors and then it just works" you hear from Elm proponents. This sounds good but it's a lie for some super trivial cases. I'd go so far as to say it's not even boilerplate, but just forcing bad coding practices. Boilerplate is fine if you get compilation errors when you screw up. This is much worse. &gt; But that's not the type system. Sure it is. - If I could access simple union types as a list that would solve this. - If I could access the LENGTH of the union type and have a simple compile time assert that would also fix this issue. - If there was a case block where you could tell the compiler that all the cases of a union type must be represented in the output of the function, that would solve the issue. All these are features of the type system and/or compiler. All of them would be very simple features that would solve this problem outright. Instead what did we get? JSON encoders/decoders implemented outside our view to solve the worst nightmare scenario but no way for us to solve the problem ourselves in all the cases where just converting to/from JSON doesn't actually solve the problem at all. I've had this exact discussion with many many Elm proponents but they all end up at the same place: either they can't even understand what I'm saying because Saphir-Worff, or they refuse to acknowledge the problem because of Stockholm Syndrome, or they just nod quietly and say they use code generators. I'm actually arguing FOR using Elm at work despite this. But I am also arguing that we set up code generation with cog (https://nedbatchelder.com/code/cog/) from day 1, because it's trivially obvious we're gonna need it super fast and then it's good to not realize it late and have to clean up a huge copy paste mess after the fact.
What about Brython!
Aaand that is a good point. 
We live on different planets, man.
writing code that way actually suffers from the opposite problem, it's so terse it can become like a puzzle if you're not used to it. 
&gt; You're completely missing my points. Pip works well and I recognize that. I mean to say that the ecosystem around building and installing packages for JavaScript is pretty good nowadays. I'm not missing your points. We're comparing python to javascript in a "what if python were in the browser" sense. And yes, these days javascript tools are "pretty good", but I would not say superior to the toolchain built around python. &gt; I'm saying that they are very poorly formatted in my opinion and are hard to look at and immediately see where the issue lies. You're not the first dev I've heard say that and honestly, I can't really see it through your eyes. The python tracebacks are always very clear to me showing a clear line of execution whereas javascript shows one small line, that probably started in an anonymous function that leads you away from where the real error lies. In my experience, anyway. &gt; There's a reason so many people use JavaScript, and it's not just "because they have to". Yeah, the only reason I can honestly see is that you only have to use one language in both the browser and backend. Now *if* other languages were available in the browser, I'd expect JS to tank fast. &gt; I'm just kinda sick of the constant criticism it gets from people who very likely have most of their experience drawn from minor front end work or hearing about left-pad and jumping on the bandwagon. Man, don't make assumptions about me. I'm literally taking a 15 minute break right now from writing an app using ES6 with yarn, npm, babel, gulp, and a billion tiny libraries. And I recognize the toolchain is growing up, it really is. But it's got a long way to go. Do you want to know know why I am currently using this toolchain? Because it's the only language available in the browser. Full stop. Not because it's in any way superior to my favorite language and tollchain which is centered on Python.
Wouldn't /r/learnpython be a better place for this resource?
nice idea, this has been on my to do list. it'd be nice if these were reversible. if you dict2json(a_dict, jfile) then json2dict(jfile) you don't get a_dict back.
[removed]
Definitely something I have planned for the future, just have to give some thought on how I want to implement it.
Top left corner? DEUS VULT
Not on my radar. And if it's not on *my* radar, it's not gonna break into the top 50.
Why not use a more popular game engine like unity? Deployment to all sorts of app stores is built in, the community is great, the number of free assets, tutorials, etc is just not comparable to anything in python, because *people don't use python to make games*. I believe in the right tool for the right job, and I don't think Python is the right tool, or ecosystem, for game development. edit: Here's a [tutorial](https://www.youtube.com/watch?v=jAf1I1UWo5Q) of text based game in unity. Adding graphics and music is *trivial*.
I've taken this course! 5/7 would recommend!
It does. I review webapps for a living and that much JS is a pain to work through. Can't just hide all *.js because then I may miss custom stuff. RIP Burp logs. Plus from a design standpoint, it just feels... ugly. This is all personal opinion, though.
It's basically stalled from a development perspective, and it doesn't offer anything that you can't get from Flask.
Wanting to access a tagged union as a list just tells me you don't have a good handle on how to model your problems. If you want a list, use a list. Remember pattern matching can be used on other types, not just tagged unions. Please try to appreciate I've written a very large amount of elm code. There is a learning curve. Try out some different approaches. It's ridiculous to claim elm devs collectively can't understand the problem.
RuntimeError: module compiled against API version 0xb but this version of numpy is 0x9 Traceback (most recent call last): File "./graph_parse_data.py", line 11, in &lt;module&gt; import matplotlib.pyplot as plt File "/home/pi/share/Projects/new-coder/dataviz/DataVizProj/lib/python3.4/site-packages/matplotlib/pyplot.py", line 27, in &lt;module&gt; import matplotlib.colorbar File "/home/pi/share/Projects/new-coder/dataviz/DataVizProj/lib/python3.4/site-packages/matplotlib/colorbar.py", line 32, in &lt;module&gt; import matplotlib.artist as martist File "/home/pi/share/Projects/new-coder/dataviz/DataVizProj/lib/python3.4/site-packages/matplotlib/artist.py", line 12, in &lt;module&gt; from .transforms import Bbox, IdentityTransform, TransformedBbox, \ File "/home/pi/share/Projects/new-coder/dataviz/DataVizProj/lib/python3.4/site-packages/matplotlib/transforms.py", line 39, in &lt;module&gt; from matplotlib._path import (affine_transform, count_bboxes_overlapping_bbox, ImportError: numpy.core.multiarray failed to import 
This is true of any software, by the way.
Thanks !
In a side note is this some kind of server for mavlink messages? http://qgroundcontrol.org/mavlink/start Or is this a different usage? Edit: I read your testing.txt and it looks like it must be. Very interesting
Have you considered dependency injection via super() and the MRO? https://www.youtube.com/watch?v=EiOglTERPEo
With https://vaadin.com/home you can write ui components in Java. 
tr.v. *scrapped*, *scrap·ping*, *scraps*: 1. To break down into parts for disposal or salvage: scrap an old stove. 2. To discard or abandon as useless; cancel: scrap a plan. v. *scraped*, *scrap·ing*, *scrapes* v.tr. 1. To remove (an outer layer, for example) from a surface by forceful strokes of an edged or rough instrument: scraped the wallpaper off before painting the wall.
Teaching myself data storage techniques and multi-threading w/ interrupts to start an Rpi based robot 
It sounds like youre looking for the "easy way out". If /you/ want to know its safe, /you/ have to vet it. Its just that simple.
Oh, yeah I hadn't considered that role. I guess if you come at it with no knowledge day in and day out it would be tougher. 
there are many places in the wor;d where the internet isn't that fast, and having to download many js files makes a huge difference. it's only not a problem if most of these files are downloaded AFTER the page has loaded.
Throttled it to 4G, so 4Mbps, and Dom loaded in 1.84s and the rest of the rest of the page loaded in 4.31s. Scrollable in 1.84s is still pretty good. I understand that the rest of the world doesn't necessarily have a connection higher than 4Mbps but that's not worth worrying about.
Eve Online enjoys the spotlight as being the most popular game made using Python. Make a game in Python. Have fun with it. Use Evennia if you want to nerd out on some MUD/MUSH/MOO stuff. I've been working on Deep Shadows MUSH for a bit using Python.
Yes, right now yes and maybe
Godot is great and the scripting language is Python with some few minor differences.
I mean, this is the real answer here. If it's a popular python library, then the risk is very small (are there any recorded incidents of someone sneaking malware into a popular Python project?) and is probably comparable to the risk that you take with many other pieces of software that are running on your computer right now.
i have a 2Mbps, i usualy login through incognito so it sign me out after i close the window, just as a way to limit my usage of it. when i log in, it has to redownload all the js libs, (so no cache), ang gues what ? i was not able to view my notifications up until 16 seconds. also facebook is not the universal test case, there are many many worse websites out there.
&gt; Eve Online enjoys the spotlight as being the most popular game made using Python. Yes, that's true, and that's about the only example *you could give*. It's *very very rare* for a game to be written in Python, because that's not where python excels, and where actual game engines do. It's not uncommon for python to be used as a scripting engine in a game, because that *is* where Python excels. If you find the right tool for the job, you'll also find the, community, helper tools, tutorials, free assets, example projects, etc for that same job. If you want to implement most things from scratch, because it's not a commonly used tool for the job, then that's fine. Use it as a learning experience. If you want to make a game, rather than code, then use a game engine, where the *vast majority* of the work has already been done for you, because that's why it exists. If he's interested in game development, then he should start using tools for game development *immediately*, rather than spending the time and effort learning a relatively obscure framework, which he will completely abandon if he ever does get into games seriously. I love python, I've been using it professionally for almost a decade, but it's not some sort of magic bullet, and you should never restrict yourself to a single language or toolset when there's is something purpose built for your goal.
Yeah true, facebook is one of the most popular sites on earth, other lower tier sites wouldn't have it optimized so well, very fair.
Yes, I didn't see this, thx.
Oh, just saw they accept text posts only.
You can expect that page to have a lot more content as new features are completed, with most of them landing in the last month or two before the feature freeze. Nobody wants to commit to releasing an incomplete feature with a deadline.
If you have the time, just practice creating a web app using django. It is not quite straight forward, but you can get the hang of it easily. Then familiarize yourself with the deployment process. Then comes django admin. Since this back-end related, they might expect you to know some SQL. 
[Pluralis modestiae](https://en.wikipedia.org/wiki/Nosism#The_author.27s_.22we.22_or_pluralis_modestiae)
Very nice! Could I recommend that you take a look at this article and consider structuring your package as per their guidance: http://python-guide-pt-br.readthedocs.io/en/latest/writing/structure/ Also, since your intent is having this be boilerplate, I'd heavily recommend you include some basic unit testing of your functions. Good job!
Check it Panda3D. Used by Disney online. https://www.panda3d.org/
The OP should use whatever resources they want. He/she isn't looking to make some triple A title. He/she wants to make a text adventure that he can eventually incorporate graphics and music into, which is possible in Python.
Let me know when 'we' get some of the royalties. 
Not sure why there was only one mention of pygame. I'd rather work with unity here lately but I had a lot of fun cutting my teeth with pygame. Lots of useful abstractions, easy learning curve 
We had vaadin wrapped in Python via [Muntjac](https://github.com/rwl/muntjac) which is no longer maintained.
Or a Javascript transpiler.
What is this I cant even
&gt; the Nagare framework Long-time nagare fan here. Nagare saved my bacon at a consulting gig I had. That said, Website not updated to point to the latest stackless python. And you cant do highly interactive cutting edge front-end work with it. But when you want easy mirroring of your model server and client-side, Nagare is super awesome. 
&gt; JavaScript is a better FP language than Python by a longshot IMO Better to use Elm and compile to Javascript - strong typing, etc.
Please keep in mind that all Python-like transpilers suffer from the same thing that was the downfall of Coffeescript: to be any good with it, you end up learning two languages anyway, the transpiled one and Javascript itself. In professional context, syntax takes the backseat and what's important is how marketable your skill is. Brython has minuscule value in your resume and your time is much better invested in working with ES7 or Typescript. I absolutely love Python's expressiveness and all but Python just isn't gonna happen on frontend. Only syntax is practically transferable to frontend and Python's power lies in ecosystem even more than in syntax.
I just dont trust Google to keep a project going. They have canned too many projects for me to trust them.
&gt; I built a 10,000+ LOC app (https://www.cinc.kitchen) in it, and I don't think I could maintain the same rate of development even in TypeScript/React. wow. impressive work mate.
Wat?
&gt; Can you give an example? The password validation [I tried here]? I'm an Elm noob who will probably end up using Anvil.
&gt; Easily one of the best way of learning ML-style languages too. Elm is not ML-style. Urweb is.
Agreed :D
Finally finished a webscarping project to [download translated chinese web novels](https://github.com/MrHaCkEr)
It won't. You don't wanna cram the whole bytecode interpreter into the browser.
thanks
You can start by this site https://universe.openai.com/
I enjoyed [Python for data analysis](http://shop.oreilly.com/product/0636920023784.do). Data Camp has some very good free tutorials based around Python and R as well: https://www.datacamp.com/ 
What does it mean for columns to 'collide'?
The ImageMagick folks call this "pinging" an image, and it's immensely useful if you're trying to process thousands of image files for some kind of suitability. Don't waste time loading and decoding image pixel data if you don't need to. Thanks for this!
the spelling mistake is also in the readme on your github ;)
is that book for Python 3?
It doesn't help that the things are that are bizarre are probably not malicious, but the things that are are so subtle you can't even tell, especially when you throw some variable names in the code, very well could be. I'm sure some people have see this, but... def _filename(filename): if len(filename) &gt; 255: return '\\\\?\\' + filename return filename or: def is_binary_file(filename): with io.open(filename, mode='rb') as fil: for chunk in iter(lambda: fil.read(1024), bytes()): if b'\0' in chunk: return True return False On the other hand, I'm sure that everyone is familiar enough with os.path that they know: &gt;&gt;&gt; os.path.join("C:\\dir", "/dir2/dir3") 'C:/dir2/dir3' 
yes, corrected
Twitterbot that posts a random Explosm comic every hour and every 30 minutes past the hour, and a random xkcd comic every 15 minutes past the hour and 45 minutes past the hour. It involved web-scraping, cronning and learning the twitter api. I like the idea of scrolling through my feed and seeing a random joke every so often... Just finished... now to tweak! 
Luigi? Airflow?
You need to tell us what you want from a GUI library before we can tell you what's best for you. in a nutshell: * Tkinter: best for super fast development and if you don't want to require your windows users to install extra libraries. Kinda blocky and ugly looking, especially on Linux. * pyGTK / PyGObject: best for native looking linux programs. Uses Glade. * PyQT/ PySide: best for highly custom very pretty interfaces and automatic event linking. Looks native on any OS. You can use QTDesigner to create GUIs. * wxPython: Alternative to tkinter for fast and easy interfaces. Uses more OS native widgets than tkinter, which means the programs can look very different on different OS's. Has a GTK-like Glade. Currently python2 only (python3 very close!!)
&gt; If he's interested in game development, Maybe he's just interested in having some fun with Python?
While having experience with those specific frameworks is a nice bonus, I'd be surprised if experience there were make-or-break. You should instead focus on understanding what backend web frameworks do with web standards. Having a solid grasp on these concepts and Python as a whole makes learning a specific framework relatively easy. Read up on the following and why they are relevant: * HTTP methods (GET, POST, PUT, DELETE, etc.) * HTTP headers (Content-Type, Authorization) * HTTP status codes (https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) I recommend learning about these in a framework/language you find most comfortable learning in. Again, focus on learning the core-concepts of backend web systems. As for general advice: * If you don't know something, don't guess. Admit your lack of knowledge/experience, but also make sure to ask for the answer. If possible relate their answer/explanation to something you know (ex. oh, Python function x sounds similar to Ruby function y). * If you don't know something, but have an idea of how you would find out - explain the steps on how you would figure it out. This tactic is great for specific questions (what does 5102 mean, what function does x). Both these tips landed me a Python web backend engineering role. I had minimal experience with Python and zero experience with web programming. Though my strong SQL background did help.
He wrote that version for python 2. I use python 3 and for the exception of the difference in print statements I had no problems. Sorry I had forgot that when I posted. I'll check out Amazon recommend though and do some research and PM you.
Using unity for a text adventure game Holy Moly, and you talk about using the right tool... He could finish the game development in the time you spend installing unity
Then that's great. I'm not saying don't use python, I'm saying there are better tools for making games. That's it. Apparently, there are some "python or downvote" people here, which is a bit scary. Python is a tool, not the tool.
One of my [favorite games](http://www.emhsoft.com/singularity/) is a text adventure written in Python using [pygame](https://www.pygame.org/tags/all) and numpy.
I didn't read it that way. &gt; and then transfered for graphic manipulation And, people do make text games in unity, like in [this tutorial](https://www.youtube.com/watch?v=jAf1I1UWo5Q). It allows you to not rely on a console, and to effortlessly supports graphics, music, etc...*exactly* what he wants. If he wants to stay in python land, that step into graphics is not trivial. I know I'm in /r/learnpython, but there shouldn't be so much hostility for using not-python.
sorry i meant "crossover" 
You're a tool. jk, couldn't help it ;) I didn't downvote you though.
[me_irl](http://i.imgur.com/nls8jkA.jpg)
ok ty 
Try: foo = [1, 2, 3] bar = [3, 4, 5] cross = any(a in bar for a in foo) # This is the one liner
You can try Stanfords Machine learning course on coursera although the primary language it uses in assignments is Matlab or Octave
Still working on a tkinter GUI for a warranty and repairs database. It's a personal learning project, but I am taking it seriously and maybe it can become a tool for work. It happened before with one of my previous learning projects :) [RepService](https://github.com/victordomingos/RepService) 
I tend to serialize my data into line-oriented chunks, and process it with Unix pipelines. Having a line oriented serialization format is handy for several reasons. You can convert data from different sources into the same line format, so whether you're pulling data from a database, rest api, or generating sample data from scratch, you target the same line oriented format. Your first tool is usually an exporter from your main source, your second tool is an importer to your main destination. From there you can write lots of little tools to manipulate things line-by-line. For the processing stages, you can do something like import sys for line in sys.stdin: item = deserialize(line) # do stuff with item sys.stdout.write(serialize(item)) sys.stdout.write("\n") This makes it easy to make lots of small tools to do simple manipulations. Then you chain them together in bash: python source.py | python transform1.py | transform 2.py | python sink.py This tends to make better use of your system resources than a single python process would, because it spreads the work across multiple processes and thus is less limited by the GIL. If you need have enough data to spread it across multiple hosts for processing, there are tools that will let you pipe your data in and out of tools like RabbitMQ or Kafka, though you have to be cognizant of the fact that multiple hosts doing the processing might not spit your data out in the same order it went in. This approach can also let you have a polyglot pipeline. You can make use of tools like grep and sed. If it makes sense to write one stage in C or Go for performance, you're not bound to using that for the whole pipeline. I've also found that these tend to be great use cases for PyPy, as you have fairly long-lived processes where the JIT can really shine. I've seen it double processing speeds with a simple switch of interpreters. 
Thanks a lot, I will include this example in the docs in further releases, also loved it when was working on it. Regarding the personal taste... I think it matters, and, moreover, I think I have what u're looking for - http://python-dependency-injector.ets-labs.org/containers/dynamic.html Thank you again, Roman
I just use Pandas. This is restraining by the need to fit everything into memory, but that's not a problem in my use case.
Out of curiosity, did you verify that your Python installation was trustworthy?
Working on my side project - /r/SolutionGambling! The sub is completely driven by Python bots, and allows users to play simple gambling games (dice roll, casino war, poker high-hand, etc.) with leaderboards and a flair shop. The sidebar has a link to my GitHub with the code as well, so any feedback is appreciated!
What was wrong with https://github.com/shibukawa/imagesize_py ?
There was a discussion the other day about speed optimization, see [here](https://www.reddit.com/r/Python/comments/6msl3r/fat_python_the_next_chapter_in_python_optimization/)
True... At the same time, they rewrote two of their ad platforms in Dart, as well as an entire operating system, so I think the investment's a little higher with this one...
this is super neat! I've never even thought to serialize into line-chunks like that, that's quite an interesting approach, especially because you can optimize different stages. 
Where can I view this?
&gt; which is a bit scary. Scary? That's how it was in my day. You picked a language, you learned it, you were "loyal" to it, you defended its every flaw, you never, ever learned anything else because that would mean you weren't loyal. If "your" language was the best, which it was, there was no point in learning anything inferior, was there? And when everyone else stopped using it and jobs dried up you said that just made your skills more valuable. It's no fun anymore when it's just the Haskell, Lisp and Pascal people who feel this way. I can't even remember when the last Python/Ruby flame war was. :-( And now with even Microsoft proclaiming "We love Linux!" it feels like the end of an era....
Wait, are the first two malicious?
that site needs some love is so ugly
Property access with random side-effects... ewww. And creating an "awesomeness" Module probably makes mor sense than a class. But then that would be presuming a lot too. *Is this a homework question or a testcase?*
https://github.com/pathunstrom/pursuedpybear She create her own py game engine.
&gt; wxPython I would go so far as to say it's ready for Python 3 for the majority of applications.
This doesn't work. If bar has 2.5 and not 3, they intersected (as linear lines) but will return false.
I'm surprised no one's posted this yet: http://incolumitas.com/2016/06/08/typosquatting-package-managers/
Say what you mean then. Neither "collide" or "crossover" conveys enough meaning for anyone to be able to help.
Step 1: read the sidebar. Step 2: using the information gained from Step 1 (above), visit the correct subreddit. Step 3: Refer to Step 1 (above).
You have a list of lists. You need to insert into one of the inner lists. &gt;&gt;&gt; foo = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] &gt;&gt;&gt; foo[1].insert(1, 'blah') &gt;&gt;&gt; foo [[1, 2, 3], [4, 'blah', 5, 6], [7, 8, 9]] And questions go in /r/learnpython, not here. 
The line by line thing is really neat, and has made me rethink how I might design things in the future. I've actually been thinking about pipelines, as we use Kafka at work.
PyQT
This is the thing that I personally think will make Godot truly stand out. Through GDNative you can expand the engine to support practically any language that speaks C and make use of modules and libriaries written for them. The growing versatility of Godot continues to baffle me.
Thank you, I tried to look for the most specific thread I could, but ill know for next time.
It actually is not very new at all, as it was used internally for a long time before going open source.
I am curious how ETL is done using pandas . I am familiar with the pandas library but more on a one line basis . I am ETL developer so I wanted to know how a complete ETL script can be written using pandas 
I like event-driven, micro-batch ETL with files written between stages, and stored on s3 at the start and end of the pipeline. The micro-batches may be a few seconds, or ideally a few minutes of data, with separate files for each of hundreds of customers. This approach allows us to easily scale, diagnose problems, rerun data from any point in time, and involves zero administration of a complex kafka cluster. Each program either get notified of a file's readiness for processing by listening for a message via SQS or by checking its input directory. Most programs execute as long-running daemons, often through pypy. Most use either multiprocessing or threading via futures for parallelism. Sometimes I've also split the processing between multiple servers when handling really huge volumes. Typically each field's transforms are handled with a dedicated function that has a decent docstring, a good set of unit tests, and is typically written as simply as possible. These are all kept together in modules related to tables being processed. And the whole thing is used by my technical users as a reference when they want to know the business rules associated with a field. 
what s3 package do you use, boto? Or do you mount the bucket and transfer and then unmount? 
I would've sent it privately for the future (which is what I did :/)
I learnt through doing, so I'd say that's the best way. For example if you want to create a dozen folders all numbered "ABC001", "ABC002" etc. You can try doing this in python. Eventually you'll come across ways of simplifying the process &amp; more efficient methods to complete a given task. For example 3 years ago I liked the comics on this website but didn't wan't to always be online to watch it so I started opening each page/image and saving it for later; then I thought why not make a program to do this, &amp; I did. it barely functioned &amp; was error prone but it worked. I then tried to improve it, fix the errors &amp; add command line argument parsing capabilities and now I use it whenever I want to read a comic :) TL;DR: find a practical project you think u can do and try to do it; if you can't no worries eventually you'll be able to :)
Definitely RenPy. Arguably the most well known game made with it is Katawa Shoujo, 4chan's surprisingly good visual novel. 
[ETL](https://en.wikipedia.org/wiki/Extract,_transform,_load)
**Extract, transform, load** In computing, Extract, Transform, Load (ETL) refers to a process in database usage and especially in data warehousing. The ETL process became a popular concept in the 1970s. Data extraction is where data is extracted from homogeneous or heterogeneous data sources; data transformation where the data is transformed for storing in the proper format or structure for the purposes of querying and analysis; data loading where the data is loaded into the final target database, more specifically, an operational data store, data mart, or data warehouse. Since the data extraction takes time, it is common to execute the three phases in parallel. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.24
Yeah but the forum is active
&gt; Arcade library Easy to use Python library for creating 2D arcade games. https://pypi.python.org/pypi/arcade Arcade is built on top of Pyglet and OpenGL. /r/pythonarcade/ https://github.com/pvcraven/arcade 
There is new version coming soon with Python 3. Also the Panads has changed. You can get the preview version in Safari books online. I am currently reading the preview version. But it's a good book. 
The ETL pipeline I'm working on right now is like what u/AsusIV has described except I have processes that write and read messages to beanstalkd instead of stdin/stdout. 
Yes, and this half of the why `sudo pip install` is a really bad idea. If there is malicious code in the setup (and you don't get a wheel for that package), then that malicious code runs as root. rip system. The other half, if you're curious, is that if you're doing a `sudo pip install`, you're probably messing with the system python and hopefully you don't bork the system with a bad package. 
Whats your math background like?
Probably a good idea, I'll get on that.
Also try /r/machinelearning and /r/datascience
I disagree with Raymond that super allows DI, it's more akin to monkeypatching. 
I have studied maths for first 2 years in my bachelor's degree, a little revision will make it good for sure.
If you find a good DI solution, let me know. All of the ones I've seen are clunky of look to be clunky. The best one I've seen was an experimental one for bottle. Though APIStar looks interesting 
I think I see what you're asking, but it's VERY poorly phrased. For anyone else that is confused, I think what OP is asking is to detect the points where two time series would intersect if you were to plot them. Compute the difference between the two time series, then iterate pairwise to see if the sign of the difference changes between adjacent values.
&gt; the first beta release will be 2018-01-29 pfft, not compiling head of master. Jesting aside, I did end up doing that today trying to get vim to compile with py2 and py3 support (turns out, that doesn't work, at least in Ubuntu because reasons). 
I've read an article before about how lower level legal jobs can be automated by machine learning. Specifically by going through large corpus of legal documents to curate and summarize them.
you can try learning some natural language processing. I heard good things about the NLTK libraries.
This applies to all programming languages. Write stuff that does stuff as early and as often as possible. Don't worry if the software already exists. Just write. The more software you write, the better you get. The books can only show you the terms. Practice develops the skills.
Anything you install from anywhere can contain malicious code. Literally the only way you can be 100% safe is to read all of the code. Since that is impossible the best you can do is figure out for yourself who you want to trust to be neither evil nor incompetent. Even then you'll only ever be able to achieve a "reasonable" level of safety. 
Why does that last one skip the first 'dir'? 
Not that I have a ton more experience than you but I can tell you that pip is a part of Python that allows you to install packages to be used in your program with 'import' statements. There are plenty of resources and answered questions on using / downloading it. A simple Google search should get you there. As for Flask and Django they are both web development tools for python (another one is Pyramid). Here is some extra knowledge that explains it better https://www.airpair.com/python/posts/django-flask-pyramid
No love for Kivy? (*cross-platform: Desktop/Mobile/R-Pi*) more info @ [**This Post**](https://www.reddit.com/r/Python/comments/6mtiyc/simple_app_with_gui/dk47z60/)
/u/v2thegreat 
They specifically coded it to do that. It was introduced in Python 3.4 and Python 2.7.whatever. I don't know why, but here's the logic, though I don't agree. They work on it, they make good judgements. There are just some wats. http://bugs.python.org/issue19456
They're not. The last one potentially is. The point was if you had to guess which one was malicious, you'd pick one of the first two.
Pip is an installer that allows you to install packages and easily update them using the command line in windows. Django and Flask are web frameworks used for making web applications. Also, can you clarify what do you mean by equivalent of Eclipse for Java? Are you referring to IDEs?
Weird - to me it seems like they are treating it like a cd operation - e.g. ntpath.join(a, b) -&gt; "where would I be if I start in 'a' and cd into 'b'". It seems to work like that on Unix also. `os.path.join('/a/b', '/d/e')` returns `/d/e`. But that seems like it's doing more than path.join should do? I thought it was just supposed to glue paths together and it's up to the user to make sure they aren't junk. However, looks like it does specify in the `os.path.join`function documentation: &gt; If a component is an absolute path, all previous components are thrown away and joining continues from the absolute path component.
From what I remember, most interviewers were interested in cache-ing and general programming knowledge. Just a list of things to study (if I was interviewing you): - Python fundamentals (std lib). - Python web framework of choice (django). - Asynchronous processing (celery). - Specification (jsonapi/swagger). - Cache-ing (redis) Since this is a security company, I would also refresh my knowledge of hashes and encryption. I would probably make that my main focus.
Well this may sound a bit broad for programming in general but I tend not to worry much about memorizing what code to write but rather how the logic of each language works, python in particular. Also, try doing some challenges for yourself using what you learned like building a calculator or making a program that sends an email.
I typically use boto3 these days, and for high-volume buckets rather than list the contents I'll depend more on a postgres index of contents and notification messages via SQS. Which is not as convenient as mounting S3 as a file system, though I've never done that. But it is very fast.
Performing well as a software engineer is and has always been about your willingness to learn and write software that "fits-in" with the codebase you're working on. Start looking through a few "python interview questions" pages on the internet and, if you can answer them without looking most of them up, apply to some entry level positions. The real life interviewing experience will both boost your confidence and prepare you for what interviews are like. Eventually, you'll get one. 
I actually cut it out of my canned response because I didnt think it was that good for a raspberry. Have you tried it? 
Fantastic advice, thanks. I was also gauging how worthwhile this online course is. I'm dedicating 20 hours a week to learning Python starting tomorrow (laid off) so I wanted to make sure my course choice was worthwhile.
Heh. I'm a security analyst learning about http commands. Not really Python specific
What the course has you make doesn't matter. What matters is that you take the time to really understand the concepts that lie under the work it's having you do. At the end of the day, I don't care if you have a github repo with some games in it if you can't understand inheritance, do a list comprehension, or tell me what a decorator is.
I don't know if I can call mine a pipeline. I have several utilties in various languages warehousing data into various databases/servers. And for a given application, I have python code that aggregates,filters, etc. and stores the results in MariaDB for later reporting on, normally only 2nd normalized.
Solid. I feel like the course gives a good base for learning that will allow me to expand my skills. I picked it because I felt a game course would be easier to stay motivated in. I'll look through those questions like you told me to make sure I learn the right stuff and have a solid understanding and experience of those things before I go jumping into a new career. Thanks for your advice.
Find a problem you want to solve or a product you want to make, and start googling "how to do that with python." Put pieces together until you have a product, and focus on really learning what you're doing as you go. you'll be motivated to write for a thing that you're interested in, but you'll have to focus on the theory of programming and not just the practice if you ever want to make it a career.
I use it for small data stores... better than loading up a CSV file everytime.
That doesnt mean anything at all. That could mean anything from being a math major or an engineering student to a business major. Like what was the different tyles of math you were exposed to. Giving examples would be more useful. e.g. Calculus? Linear Algebra? How comfortable are you with those concepts? etc.
In a related issue, someone created packages on pypi that duplicated package names from the system library and discovered lots of systems that attempted to install them. His packages didn't do anything, fortunately, but he wanted to show the danger of allowing package names the match the system library's: https://hackernoon.com/building-a-botnet-on-pypi-be1ad280b8d6
You can include a variable in the file name so that a new file is written each time the variable changes. Here's your script with a function that prepends a timestamp to the file name: import webbrowser import schedule import time import urllib import os from datetime import datetime MAVLINK_URL = 'http://127.0.0.1:56781/mavlink/' def job(): filepath = get_timestamped_filepath(directory=None, name="testing", extension="txt") webbrowser.open(MAVLINK_URL) urllib.urlretrieve(MAVLINK_URL, filepath) def get_timestamped_filepath(directory, name, extension): timestamp = datetime.now().strftime('[%Y-%m-%d@%H-%M-%S]') file = f'{timestamp} {name}{os.extsep}{extension}' path = os.path.join(directory, file) if(directory) else(file) return path schedule.every(2).seconds.do(job) while 1: schedule.run_pending() time.sleep(1) &amp;nbsp; ### NOTE: For future reference, it makes it much easier for people to help you if you upload your code to something like [**Gist**](https://gist.github.com/) or [**PasteBin**](https://pastebin.com/). Alternatively, you can use [**Reddit Markdown**](https://www.reddit.com/r/reddit.com/comments/6ewgt/reddit_markdown_primer_or_how_do_you_do_all_that/c03nik6/)'s Code Blocks, as I did in the example above, if the script is only a few lines.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
&gt; hold timings on my library's 3d printers so as to keep track of them with the help of raspberry pi's Maybe explain a bit more? Hold timings == reservations? And where's the rpi come in?
Also standard data structures are common for back end roles. Lists, dicts, how they're implemented, when you might use a tree over a dict, what is the difference between an ordered dict and a regular dict, the none keyword, classmethods and inheritance in python. Erm. That's all I got for now. I'm on mobile, else I'd post the answers to these too. 
&gt; It's no fun anymore when it's just the Haskell I'm sure you're going to get some *very* nasty comments for this one. Oh I forgot, they don't believe in side effects, you're safe. &gt; Pascal people Hey, Delphi is still around. It's RAD! I swear! &gt; Microsoft proclaiming "We love Linux!" it feels like the end of an era. I'm actually pretty excited about this. I personally hope .NET Core really takes off. At least we know that people are still as passionate about vim as ever.
They're not so great at updating the main page (*R-Pi still isn't mentioned there, just sent a PR*), but it's [**been in the docs**](https://kivy.org/docs/installation/installation-rpi.html) since 2014. I personally haven't had any reason to get an R-Pi yet, but the compatibility [**Seems Legit**](https://www.youtube.com/watch?v=Eah3Zq18OyM)
have you checked out the gym - OpenAI library? I explored a tiny bit with it during my software development class and by tiny I mean supervised learning for the [Cartpole game](https://gym.openai.com/envs/CartPole-v0) https://github.com/openai/gym https://gym.openai.com/ there are some guides and videos explaining certain games in there that'll make learning and implementing learning algorithms fun. My introduction into Machine Learning was through [Make Your Own Neural Network](https://www.amazon.com/Make-Your-Own-Neural-Network-ebook/dp/B01EER4Z4G), its a great book with for learning about perceptrons, layers, acitvations and such; theres also a [video](https://www.youtube.com/watch?v=2sevic5Vy4E). 
It is. From Mission Planner if you run that link in a browser (while connected) you'll get that message 
well, firstly, nice job with the "==", made me chuckle well, it's basically to see who came before whom in a queue for using the 3d printers I didn't want to expand on it much because it wasn't really the main point, but here it is anyway 
That's look exactly like what I need. Thank you so much! 
I can answer. Most if my data comes in the firm of csv files, usually between 400,000 to 1,200,000 rows. I take the data and normalize it in pandas (drop duplicates, small math, etc) so I am left with all integer and decimal data. Then I pass the csv into a bcp utility were it uploads at around 5,000 lines per second. This may not be the best way to do it, I am no expert. I can say that my etl takes less than 1/7 the time than my best ssis package. And significantly faster than uploading the same data and performing the transformation's in pure sql.
The problem is there both absolute paths, but designed for different OS. If you cd on Windows with a forward slash, Windows ignores it
This is a really great idea that I never considered. Thanks for detailing it! One question... are you using pickle for serialization, JSON, or something else?
most of the python libraries for this task either cannot handle urls, or support only limited file types. my goal is to provide a library comparable to `fastimage`'s rich functionality.
I'm working on fixing ours from custom, in-house, poorly written Ruby reducer that fails to properly record exit statuses. Instead, I'm working on bringing in Luigi and Python based. The plan is to do the general three stages as idempotent tasks (as Luigi makes easy): 1. Extract: dump the raw extracted sql to json lines, stored in a file in S3. 2. Transform: convert the extracted file to a new file, also in S3. 3. Load into the warehouse It's nothing special, but error recovery should be much faster since we can just delete the one or two corrupt items, rerun the whole thing and only have the deleted things replaced and the rest skipped. I like the features of airflow a bit better, but it's not as simple not clean feeling during my research.
Matrix Vectors Fourier Complex variables Probability Linear programming Linear algebra was in 12th standard And many other ofcourse, can't remember all And i am very comfortable with most of them
Hey! The `g` object doesn't live between requests unfortunately. You can check out https://www.reddit.com/r/learnpython/comments/31br25/how_to_reuse_database_connection_in_flask/ for other solutions (ie. using a connection-pool and a global object) More info on app contexts: http://flask.pocoo.org/docs/0.12/appcontext/#app-context
No. This strikes at the core of all machine security: there is no automatic analysis that can prove safety for anything but the most trivial code. It's not a Python thing. It's an all-Computer-Science thing.
To me the most important is not code/framework knowledge, but philosphy. Code quality, scalabilty principle, release deployment, debugging etc. You do not know jango, who care in one month you ll learn. You have 8 years, they are not looking for someone just giving code, but someome with deep understanding of what backend work.
Have you considered using the fileinput class? It works great especially if you are constantly testing things out. https://docs.python.org/3/library/fileinput.html
I haven't tried it, but I heard Blaze solves this problem? 
First of all, I do think /r/learnpython is still better, but oh well. Anyway, did the process end? Are you calling something to terminate it? Why not just restart it the same way it closed? Or, look into the `pool.imap` object as a way to send arguments with generators. Finally, if those don't help, posting a *minimal* [not] working example would go a long way!
Take a hard look at what you're spending your days (and also support jobs you are using). Is there anything which takes a lot of time and is rather straightforward? Copy-paste, searching for stuff, filling in stuff in documents/softwares etc. it's not necessarily that the best point to start at is machine learning and more advanced stuff. Try to look more into automating easy stuff
Yeah I have been doing that. I think I hit walls because I don't know the full capabilities of Python. I do do à lot of repetitive tasks that I think can be automated. Like can you write a script that accesses accurrint (a web based application that is a people locator) and grabs names and addresses from an Excel file uses the names and addresses from Excel to search that web. I guess I'd have to see if there was an API. Any one know if any script s for PACER? It's a government system for court cases. 
&gt; If you cd on Windows with a forward slash, Windows ignores it No it doesn't. `cd` on Windows (cmd) is find with forward slashes as directory separators, you just don't get tab completion.
I haven't heard about that software, but if it doesn't have any API or any other way to interact with it, you could look into for instance reading the excel file with pandas or openxl, for each row(?) with name and address and insert them into the software by controlling the mouse and keyboard with python (pyautogui)
Yes. It's very nice for super simple key / value stuff. If you want to store any kind of data structure though, you need something better.
questions like this belong to r/learnpython
A law firm has started to use Tryton to manage their stuff some years ago (http://www.tryton.org/business-cases/advocate-consulting-legal-group.html). One of the lawyer there was responsible for the whole project, we helped him to understand mercurial, make patches and so on (I even wrote him a recommendation letter after he has proven his value so he could get in a university to get a CS degree). So my advise would be that you should start to scratch your own itches and find some people to help you when you're stuck. 
I think you're going to have to look at their [example](https://github.com/imbolc/aiohttp-login/tree/master/example). The `app.py` defines the application and its routes, and there's a few lines in there that reference **aiohttp_login**; these add the *middleware* to the app, set up the database connection, and prepare the **Jinja2** *templating engine* to process variables specific to **aiohttp_login**. The `handlers.py` prepares the functions that will actually handle the routes specified by rendering the *templates*. These are modified using *decorator* functions from **aiohttp_login**, which appear to inject all the code required to 1) ensure that a user is prompted to log in (**index**), and 2) ensure that a user already is logged in (**users**). The `settings.py.template` shows you what configuration details you need on your side, including your app's id and secret key for access to each of the social vendors; this needs to be renamed (by dropping the dot template) after its filled out, and for reasons I hope are obvious the filled out version should never be committed to Github. Then the `templates/*.html` files show you how to prepare a **Jinja2** *template* to build out your actual *rendered* HTML body to accept a login (**index**) and react to a logged in -- or not -- user (**users**). Finally, `templates/aiohttp_login/bootstrap-4/base.html` provides the **bootstrap**-styled HTML header and footer that wrap the content from the previous two files. I've never looked at the **aiohttp_login** helper library in my life, or the **aiohhtp** server it augments, but I can get all this on a quick, cursory read, because I know Python. This is one of those *"walk before you can run"* moments; as you'll need to know a bit more than *beginner* Python for this task. At the very least it would be good to be minimally familiar with how **Jinja2** works before you try to build the templates. Also, ask these questions in [r/learnpython](https://www.reddit.com/r/learnpython/).
Control the mouse? Can you explain me
Itch scratched. Just now funding out how to implement it all
I'll throw in an alternative approach. Use flask to make a web app so the data can be viewed from local workstations or mobile devices. 
Even if there is not an official API for a website you can almost always extract the web service calls or form posts they are making. Chrome has this built in, just press Ctrl+Shift+I to open the developer tools and then look around in network traffic and some of the other tabs while searching for results or whatever you want to try to automate. You can also use the Interceptor plugin with Postman to get more detailed API calls out of a website and even generate example Python code (https://www.getpostman.com/docs/postman/sending_api_requests/interceptor_extension). 
It is trivial to use libraries like pysfml, pysdl, cocos2d or pygame.. But of course you can use a hammer to crack a nut or a bazooka to kill a fly if you want. And is not about staying with python or not I would use sfml or sdl in c++ instead of Unity for this project. Unity is just overkill, you said that: use the right tool for the right project
Right now we use Apache Beam at work, running it in the google cloud. We have lots of custom transformations, it works great for that, though feature-wise it's a bit lacking, very little default transforms/sources/sinks. And debugging it is a bit of a bitch sometimes.
Thanks I will move it over there :)
Just be very very careful about going through paywalls when you're automating. Even if you have the credentials. I'm fact I wouldn't do it at all.
Can confirm. Was law clerk. A lot of searching and organizing documents.
I think this is one of the best implementations of a GUI in python. It uses qt to make the window if I remember correctly, but the ui is really served up with flask. I used it’s long time ago and it worked well. Ymmv https://github.com/smoqadam/PyFladesk/blob/master/pyfladesk.py
Yeah, I'm using pyspark which is pretty similar, just have a notebook in databricks atm. Would like to know what people think of Blaze/Dask
Shoot me a PM if you'd be interested in interviewing in SF
Sorry, didn't have access to a computer for the last couple of days. I managed to run the code on my machine, and had to fix two things to get it running: * Line 14 should be `io.imread(filename, as_grey=True)`. `threshold_local` wants a 2D-array as input, and by just using `io.imread` you ended up with a higher dimensional array (since it included the red, green, and blue channels). * Line 22 should be `binary_adaptive = np.asarray(binary_adaptive, dtype=int)`. I suspect I messed up on this one when I gave you the code to convert everything to an int. After making these two changes I was able to run the code properly. See if this works for you?
I don't understand what you mean. Can you provide more details? Monkey patching usually refers to modifying existing structures at runtime. Using the MRO to refine the inheritance chain isn't modifying anything, you're simply defining a new subclass that behaves differently than it's parent. Isn't that precisely what EVERY subclass does? Monkey patching is also considered an "abuse" or a hack of last resort. Using the MRO in a way it was designed to be used is neither abusive nor a hack. Granted, it's "weird" if you're not used to the language feature, but semantic white space was "weird" once too and we all got over it.
PyGTK is only best for Linux distros that use GTK on all of their other apps (e.g. Ubuntu, Mint, etc.). It will look really out of place on any other desktop environment with its own widget toolkit (KDE, Enlightenment, etc.). Qt is the most balanced here, because it has (some) support for GTK themes in GTK environments. 
&gt; I know I'm in /r/learnpython You're in r/python :) 
And LXQt. And Budgie is switching to Qt as well.
If you're manipulating the resolution order by causing your class to be further upstream than an established class, I'd say that counts as monkeypatching. At the very least it feels the same to me so it's a distinction without a difference to me. Don't get me wrong, I've used it a few places like forcing logging into requests' transport adapters without having to literally monkeypatch them, but I still felt a little odd doing it. 
I'm pretty sure Budgie is staying with GNOME apps, just rewriting the shell in Qt. Still though. 
Maybe, but it's still a guarantee that custom Qt apps will look good. ;)
Use PyQt. 
*eyeroll* All that text and the only thing you took away was that I want to use a union type as a list? Please read it again. I also didn't claim that. Again: please read what I write and respond to the full content. Just responding to small parts of what I wrote out of context is quite frankly rude. Let's take a concrete example then: I have a union to describe some state. Now I want to user to choose one of the things in union. How do you generate the HTML for this? You can use any output you want: select box, divs with click handlers, whatever. Please enlighten me. Probably a hundred people have already totally failed to address this simple problem in a way that isn't horrible. 
Yes Spyder = Eclipse. It's good. 
Let this rest your mind: https://www.python.org/download/releases/2.2/descrintro/#mro And Guido's take on it: https://mail.python.org/pipermail/python-dev/2002-October/029145.html (See link for context) &gt; No, the whole point here is that the most inherited class's MRO (i.e. z) can insert things in a base class's MRO. Have a look at the explanation of the diamond diagram in [descrintro] (FWIW, the MRO is a little different now than in the 2.2 descrintro paper, as far as I know Raymond's talk is still completely accurate.) When Raymond said "this is how it was designed to work" he really meant it.
I'm quite biased because I use it a lot for work, but I would say PyQt is the best option. PM me if you decide to use it and need any help.
Assuming your dataframe has columns A and B then something like this (untested, since I am about to leave for work): df['C'] = df['A'] &gt;= df['B'] df['Crossover'] = df'[C] != df['C'].shift(1) this will give a column of booleans that is True at each crossover point.
Berkleydb was always very fragile when I had to work with it in the past. Sqlite might be a little better.
So far I have worked with TKinter and wxPython briefly and then quite a lot with PyQt, because I found the other two to be rather bad looking. Like others here I really recommend PyQt, but I want to give some more information on it: PyQT is probably the best choice when it comes to good-looking high-quality applications that support native looks on any platform out of the box. Because of this it can be quite complex from time to time, but I really do recommend starting to dig into it, even for small projects, because when you need some GUI library again, you already have a start here. Something I feel is worth mentioning: PyQt is a python binding for the Qt library, which is C++. Thus once you got used to the framework, it will be almost no work to also use it for C++, there you even get a quite good IDE, QtCreator. That being said, the documentation for PyQt will mostly refer to the C++ library!! This will be absolutely no problem, when you already know your C basics (you mentioned Cython), because you can mostly directly translate C++ to Python syntax here. Also I find the C++ documentation to be quite good. Some additional information regarding licensing. Qt is LGPL licensed, which means (in short) you can use it freely for open source software, the same holds for PyQt. PySide is (supposedly) very similar to PyQt and offers a GPL license, which is even more flexible, when it comes to commercial applications, but I never used it and threads on the web say it's dying slowly. Edit: Sometimes I feel that PyQt solves some problems a little bit weird. Having worked some time with Java on GUIs before, I found PyQt's Model-View framework a little confusing at the beginning, but you will get used to its quirks quickly. On the other hand it offers a really nice framework for event communication called "signals and slots" that I enjoy using.
Not for a while, but yes. Extremely fast, very stable.
Maybe someone can add a comparison based on the experience of Luigi and Airflow (and perhaps other tools)?
Knowing security in general is good for working in the sec industry, and knowing protocols at a lower level can be nice. As the other person said, HTTP is good. Learning DNS is good too, as well as knowing the basics of TCP/IP. I fell into being my own ops unfortunately, so knowing Linux in depth has been pretty much mandatory. Knowing how to package up a python program and deploy it within a virtualenv is very good to know. Would you be able to package your codebase? How would you deploy it? Have you ever worked with puppet/chef/ansible? If you had access to the repo for the config management for your app, could you work with it? What do you use for logging? What do you use for metrics? How would you track user metrics? How would you monitor your application? Could you tell someone how many failed authentications came in yesterday? Could you alert someone when 1000 new accounts were created from the same weird domain? The webapp fails when the user hits a submit button when creating a new Widget. Frontend team seems clueless here, no idea what's wrong, blaming the backend. It's a react frontend and DRF backend. How do you verify it's backend or frontend? How do you diagnose this? Where can you find proof? You're creating a new data model. How do you relay this information back to the frontend team? How do you document the API you create for them? How can they test it out? Can you set up a development environment for them? Can you create a vagrant box for them? Will you be able to deploy a staging environment? Along with being an expert at the software stack you use, you might have to be the expert with the rest of the stack (nginx/apache + gunicorn/wsgi + elasticsearch/mongo/sql + ...). Since your code changes will affect the app at a central level, you need to be able to communicate all logic-changing things very clearly and document everything you can. Documentation and communication ability will go very far. Knowing how to generate sphinx docs will be great. Knowing what you'll use to generate API docs is great. These sorts of things might not be asked, but it'd be good to know what they are if they do ask. I'd try to focus on development practices and stuff like jenkins and logging, focus on the software stack top to bottom, and just know how to maintain a robust application from start to finish. Ops skills might bleed into the job too, and knowing the platform you'll deploy on in and out will be great whether they ask about that or not. Good luck!
Does that essentially just run the app while the browser is open? Or does it use a window inside of a qt window so it looks native ish? Do you have screen shots? Edit: Found some [screen shots](https://bugreports.qt.io/secure/attachment/28014/screenshoot.png) on google. Neat idea for an app. Really maximizes the reusability of the code across various platforms and use cases.
Ok, makes sense. But I'd argue that you definitely can do FP if you want. There are many libraries that provide immutable data structures and other nice extensions to improve on FP use in Python. JS isn't exactly ideal for FP out the box, and you require libraries to really use it for FP properly. The lack of tail call optimisation is a bit of an issue in Python, but can be worked around.
Hey buddy, I'm trying to help you. So for the last time, please listen. What you need to use with selects is a list of strings. You can pattern match on the selected string (a switch basically). Something like: case selectedString of "A" -&gt; do_something "B" -&gt; do_something_else _ -&gt; do_something_default Selects don't make sense with tagged unions; they require lists of strings. You may have a separate tagged union, but it's not the type system's job to understand you want to have a list of strings and a tagged union to correspond to each other. It doesn't prevent it either. It's actually pretty simple: type Something = A | B String | C Int taggedUnionPlusLabels : List (Something, String) taggedUnionPlusLabels = [(A, "Choice A"), (B "ok", "Choice B"), (C 5, "Choice C")] You can use the second member of each tuple as the list label and have the message on the select or whatever make use of the first member. If that doesn't help, then just start coding around the problem.
True, but there are ways to work around that, either through increasing the stack size, but also [tail call optimisation decorators](http://lambda-the-ultimate.org/node/1331#comment-15165) have been around for years to mitigate the issue. 
&gt; Gramps - Berkeley Software Distribution Database Backend &gt; &gt; https://github.com/gramps-project/gramps/tree/master/gramps/plugins/db/bsddb
No. How would I go about that?
Perhaps you could try anaconda for Python.
PyCharm is usually recommended as a good IDE for Python. I'd say you should do more beginner courses to see how different lecturers approach the same problems and topics; that way you may understand something you missed with a single explanation. Learn by consensus! Also, check stackoverflow for the most popular Python questions. That's an invaluable resource. r/LearnPython is also great! 
You can control the mouse (and the keyboard) with a library called [pyautogui](https://pyautogui.readthedocs.io/en/latest/) (as mentioned by /u/stinyg/ ). There is a chapter about that in the book [automate the boring stuff](https://automatetheboringstuff.com) that explains it. I haven't looked it through myself, but judging by the amount of times it gets mentioned it is quite good.
This is a really interesting approach! Thanks for sharing.
Why would you use Visual Studio for this? Is that a constraint?
You're not trying to help, you're trying to justify the lack of a reasonable solution. I explicitly said you don't need to use selects but I'm gonna be generous and interpret your response as "GUIs and union types don't go together". I've seen variations on that theme. Your variant is worse than the ones I've seen which go something like type Foo = A | B foos = [A, B] Then have a case to convert a Foo to a display string, and then List.map over foos to create the GUI. This is much less error prone than what you suggested and much cleaner. You "just" have to reconcile Foo and foos manually. Still terrible when it grows though. And the thing is that Elm itself is under powered so you can't make sure Foo and foos are in sync. And the workaround is to go outside Elm to code generators. Which I think is embarrassing quite frankly. 
I'm not sure yet what your exact issue is but "contained" sounds like you might want to know about virtualenv? For an IDE, try PyCharm. It's great.
I'm honestly a bit amazed at the number of responses here that haven't seen this technique. This is one of the single most standard techniques of unix. In fact, there's an extremely old video from the 70s showcasing unix where they talked long about this technique. That said I'm quite happy so many are hearing about it. I think there are two things here that are really important to stress. The first is this: &gt; This tends to make better use of your system resources than a single python process would, because it spreads the work across multiple processes and thus is less limited by the GIL. Your shell starts each program in a separate process and so you'll automatically run things concurrently. This has nothing to do with python (though is quite convenient due to the GIL). Secondly, the fact that /u/AusIV uses `sys.stdout.write()` means that the writing to standard out will be _buffered_. The default for `print()` is to be line buffered (though maybe this changes when piped...), but you really want it buffered to avoid unnecessary context switches. This is a great post and I hope many take it to heart!
You misunderstood. If you have 1 slash at the beginning as in `cd /dir`, that's equivalent to `cd dir`..
Wasn't it once used for the data store in open LDAP? 
Came here to say this. Especially if you are doing unixy small tool/scripts and just want some UI for the command line imapred, or to quickly display complicated results. These days it is exceedingly easy to whip up good looking and functional web apps.
Wipe it and just use Anaconda Python. Your DLL error was caused by installing a 32 or 64 bit version of numpy on the wrong version of Python. They need to be consistent. 
In steps: 1. We have data coming in through a REST API (Flask based and load balanced, if you're wondering). There is a very minimal data validation step at this point (required fields; type validation; that sort of thing...), data is JSON serialised and put in Kafka. 2. A Go process consumes from Kafka, from here we do a second stage of data validation as well as write to multiple Cassandra tables. This used to be done in Python, but we were running into performance issues and I had concerns over hardware performance and future costs if the data input grew (more details here: https://joaodlf.com/data-pipelines-cassandra-kafka-and-python-and-go.html and https://joaodlf.com/go-rate-limiting-done-right.html) 3. Multiple Spark jobs run via crons to perform time based aggregations and store it on different sources. We do this to speed up the next step. 4. Data insight is typically done via Pandas. A lot of it is served via HTTP - This needs to be quick, which is why we run aggregation scripts in Spark or store the same information in multiple tables. Data in Cassandra is typically stored in multiple tables that serve different time series, say we have a "impression\_stats" table, data is actually inserted into multiple tables: impression\_stats\_**hour**, impression\_stats\_**day**, impression\_stats\_**month**.This works quite well in Cassandra with materialised views, and the reason we do this is to speed up deserialization when querying for large amounts of data.
Personally, i think PyQt is the best for GUI with Python. It maybe be a bit more complicated than the options but i find it very logical and straightforward to use.
Have you tried use requests.Session() ?
I'm curious about how to do that. Do you have some resources for me ? Thanks. 
Whats automatic event linking?
I am not sure what you are trying to achieve, but you can use set operations (difference, union, and so on) on pandas indexes. See e.g. https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Index.difference.html
Got two different ways data comes towards us, either we call their apis or they call ours. Since I was too lazy to loadbalance our api properly, I'm simply using aws api gateway in combination with lambda, which basically gives me unlimited data throughput that is pretty optimized as long as the scripts themselves are lightweight. Also don't have to worry about piping processes, as lambda will just execute the code as often as needed. The only issue is that if something breaks, debugging the functions is pain. For other data, we simply call their api and dump it to s3, which again triggers lambda and makes it take care of everything. Haven't had to deal with terabyte sized things yet, but the system in theory is only limited by the iops of the db, which is not a factor thanks to aws :) Lib wise we keep everything as lightweight as possible, so no pandas or anything, just dedicated direct scripts, where we serialize line by line. For bigger files that get pulled we dice them up with another lambda call, so the inserts can be triggered faster. The beauty of it is, that you only need one single server that pushes stuff to s3 and everything else is serverless code on demand. /edit: In case anyone is interested, we process pretty much all text formats, from ascii encoded csvs that were probably setup in the 90ies to weird banking-related xml files that actually aren't xmls. Luckily most of the stuff is json or csv though.
Going to agree. On Windows, just use Anaconda with Pycharm.
What is this? No descriptions, no README, that could explain what this livestore is... 
The original sleepycat BerkeleyDB has been the default key-value store for the entire unix and open source world since the 90s, as well as being used in countless commercial applications. In recent years it has declined in popularity after the Oracle acquisition and the rise of many worthy competitors. Where more complex capabilities are required, SQLite is now the go-to embedded database, with billions of instances in use. Where the performance hit of using SQL is unacceptable and pure key-value is sufficient there is LMDB, RocksDB and many others. 
This is something I look for more when hiring. I try to understand how the applicant views the process of software engineering. Not how they use git but what they feel that they are doing when using it. I've had people who are very capable in churning out views but can't write maintainable code for a lot of reasons and having to rewrite a lot is expensive.
If you got through law school then learning the \*entire\* Python language should be quite easy, obviously not including the entire libraries, ecosystem, etc. I don't know if you deal with patent law but I once wrote a Python program to analyse the dependent claims tree of a hairy family of patents.
Javascript's functional map, filter, reduce, sort etc. are the things I miss in Python when I switch back.
I'm glad to know there is an updated version coming out. Definitely watching out for it. Did they specify a timeframe for the release?
For a game of the type OP wants to build, why would you use Unity over RenPy? The feature set and community for RenPy is far larger and more mature of this kind of game. The number of shipped titles reflects this, too. I would bet over half of Steam games of this genre are RenPy derived.
Here's a good blog post - old, but still relevant - with an overview of the GUI frameworks and tools that exists in the Python ecosystem: http://takluyver.github.io/posts/so-you-want-to-write-a-desktop-app-in-python.html
&gt; What is this? No descriptions, no README, that could explain what this livestore is... This will be corrected in the next release. Meanwhile, you can check the wiki here: http://www.isotopesoftware.ca/wiki/LiveStore
Automod should close all postings that contain the word "question", a question mark or code in them. :D
A simple multiplatform wrapper: https://github.com/lskbr/colorconsole It works on Windows, Mac and Linux. The idea is to keep to run the same code in all platforms. You can install it with pip install colorconsole
Look at this as an example of what people do: https://github.com/eeue56/json-to-elm/blob/master/README.md
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [eeue56/json-to-elm/.../**README.md** (master → 467d438)](https://github.com/eeue56/json-to-elm/blob/467d4389e81291dea9174ca09732696e01d3c94b/README.md) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dk7girw.)^.
Had some very nice experiences with dask, quick and easy to give it a go.
Requests does not use the built-in cookie library from the standard lib. See http://docs.python-requests.org/en/master/user/quickstart/#cookies Basically if you want to pass them along, just pass in a dictionary. Alternatively, use a Session to save and send cookies between requests.
I'm not following all this too well, not a great background in Elm. Is this a fair summary of what it is you want to do? There is some type with a set of possible options: type Foo = A | B | C You at some point need to convert a user choice into a `Foo`. To do this you need to present the user with the set of possible options, but there is no way of saying `foreach Foo ...` you have to manually build up the list yourself. This adds a set of places where you may not have put all the entries in, and also then more places to get a mismatch somewhere that the compiler cannot check (which it possibly could do if you knew the lists all came from the type definition) Does that make sense as a summary?
That's a very good summary. 
Highly recommend SpaCY https://spacy.io/
Strangely, we don't use Python there (on this and my last role, we have some huge DBs with very big daily loads). We have used Java with Hadoop as well as Informatica, but no Python. I've used it myself on smaller projects and it is great, generally bringing in messages via XML and then using loader code to put the data into the staging tables.
That's from my experience the easiest way with dealing with python and Windows
We have a bunch of Jenkins jobs that run Python (w/ various librarians) and SQL scripts. It's definitely not glamorous; it was probably the right choice at the time it was first made, but we sorely miss better dependency tracking. Airflow is probably the next move for us. 
Is there a program, that can make gui interfaces in some sort of program. Ive been reading a little about tkinter and it seems to do the things I want to do. But the coding of it seems so cumbersome. I just want a easy way to make a interface like I do on factorytalk or panelview builder.
I've used [ Sumy](https://github.com/miso-belica/sumy) for a NLP project (wasn't the main component but a side feature). Simple to use and some of the methods are quite effective 
&gt;Tkinter: best for super fast development and if you don't want to require your windows users to install extra libraries. Kinda blocky and ugly looking, especially on Linux. [ttk](https://docs.python.org/3/library/tkinter.ttk.html), an extension of tkinter and part of the standard library, fixes the "ugliness" problem somewhat.
JSON generally, but there was one use case where we came up with custom format to serve our purpose. 
You could also use the UUID library to generate unique file names where time stamp based ones aren't appropriate
Hey! I'm a python lawyer too! There are actually a few of us floating around. We should team up.
Not since SQLite hit the scene. 
Making Games with Python, Mission Impossible? EuroPython - https://www.youtube.com/watch?v=vjzzkeaPyis&amp;t=23824s
I must still not be getting what you're saying. Here's a session in cmd.exe: C:\Windows&gt;cd users The system cannot find the path specified. C:\Windows&gt;cd /users C:\Users&gt;
wxPython has python3 support already https://wxpython.org/ https://pypi.python.org/pypi/wxPython/4.0.0a3
I usually use Argparse to collect any parameters that my scripts will need, and in the process do something like: parser.add_argument('--infile', type=argparse.FileType('r'), default=sys.stdin) parser.add_argument('--outfile', type=argparse.FileType('w'), default=sys.stdout) Then I can flag at runtime whether I want to use files or stdin/stdout for a given stage. The approach I listed in my previous comment was deliberately simplified to avoid getting hung up on details. Plus I was posting from my phone. 
As I noted in another comment, I don't necessarily use sys.stdout, I usually have a variable called "outfile" which gets set by argparse to be either a file or stdout, which conveniently have the same interface. 
I sometimes do that too. E.g. if I want to usually print to stdout, but also support a flag like `-o outfile`. Though usually I don't support that sort of thing since if I'm only sending out one stream worth of information, I can do it equivalently with regular redirection like `&gt; outfile` anyway.
For the most part I wouldn't use python to handle the pipeline, but the end consume I might write I python. Generally I've used Apache Kafka for the pipeline. 
Definately PyQt4/5 - Qt is a kinda platform itself with QNetwork, QWebBit, QDrawing et all
Thanks for the info, I didn't know things like Eclipse, Spyder, Pycharm are called "IDE". Looking at PyCharm, frankly I liked it more than Spyder but I already downloaded Anaconda and I believe Spyder has all the packages in it? So, is there something like, I can download PyCharm and have all the packages that I have in Spyder, also in PyCharm?
Thanks for the info. Yes, I was referring to IDE's, I just learned they are called IDEs in this thread
&gt; pip is a part of Python that allows you to install packages to be used in your program with 'import' statements. this was a great answer, thank you. by the way, is "Anaconda Prompt" that comes with downloading anaconda, is a pip? 
Just do `isinstance(defs['maxsize'], (str, unicode))`.
Pyqt
#!venv/bin/python Do you mean /use/bin/env python
I'm curious, is anyone using PyQt5 and QML for an application?
Anybody know anything about this?
Pygame is also a cool and easy option.
The answer to the question I should have asked :) 
Surprised no one has mentioned CefPython. It's the best looking of the bunch depending on how good you are at web tech. Harder to set up though, and a pretty big learning curve if you just want something simple.
Can someone ELI5? The wikipedia page goes into a bit too much detail, as someone not involved in data engineering I'm just curious as to what an actual ETL process consists of and maybe some examples. Is it just taking a load of unstructured rubbish and turning it into something that's actually readable/usable in a db?
If you did need to have a long if clause you would wrap the entire thing in round brackets. if (isinstance(defs['maxsize'], str) or isinstance(defs['maxsize'], unicode)): s = defs['maxsize'] 
i'm working in parse xml reports of a nessus scanner and his plugins, the mess is nonstandard scripts *nasl* , so i have to practice regex.
scopy is a command line Python script I've made for cataloguing digital books (.pdf, .epub, .mobi), but it can be used for any file format(s) you like. I've would appreciate your feedback. If you have any comments or critiques, both for the usability of the script and the code itself, please let me know.
I don't know if i properly understood your problem. However, if you have a pandas dataframe with time series type (e.g. 1 column with timestamps and others with values) and you you want to compare the value columns to verify any intersection points, this approach might be useful (while maybe not the most pythonic :D) import matplotlib.pyplot as plt import pandas as pd # timeseries dataframe (y1 and y2 will be the columns with values to compare) df_ts1 = pd.DataFrame({'timestamp': ['2017-01-01', '2017-01-02', '2017-01-03', '2017-01-04'], 'y1': [1, 2, 3, 4], 'y2': [5, 3, 3, 4]}) # intersection dataframe intersection_points = df_ts1.loc[df_ts1.y1 == df_ts1.y2, ] print("Intersection points:\n{}".format(intersection_points)) # Fast one liner to verify if there are any intersection points: do_they_intersect = False if df_ts1.loc[df_ts1.y1 == df_ts1.y2, ].empty else True print("Do columns y1 and y2 intersect?\n{}".format(do_they_intersect)) # Plotting with pandas to visualize intersection points: df_ts1.set_index('timestamp').plot(marker='o') plt.show() In any case, you can define any other condition inside .loc[condition, ]: Example: - to find any point where y1 as a higher value than y2: intersection_points = df_ts1.loc[df_ts1.y1 &gt;= df_ts1.y2, ] 
Don't forget to wear a condom and lay a dental dam over your mouse!
You've got a typo, you wanted to say: Either this `isinstance(defs['maxsize'], basestring)` or this `isinstance(defs['maxsize'], six.string_types)` :)
AWS isn't a "bang for your buck" type of service. It's more of an a la carte service. Google Cloud is probably what you want out of the two you're thinking of. I personally tend to use Digital Ocean for quick, cheap ($5/mo) hosting, but Google Cloud has a similar price point and is a bit more flexible in your VPS setup.
Nope, but for $10 I just bought it. Worst case I lose $10 best case it's worth the $195 or w/e and I'll learn something. 
FYI the [Global Interpreter Lock](https://wiki.python.org/moin/GlobalInterpreterLock) is a thing, so multithreading won't actually make use of multiple cores. [Multiprocessing](https://docs.python.org/3.6/library/multiprocessing.html), on the other hand, will.
Are you certain that it's heroku and not an error with the procfile or anything (accidentally using the devserver, not enough or too many workers, etc)? Don't get me wrong, I have little love for heroku - but I've not seen or heard much around it being really slow for the general Python web application. If you're up for learning some devops stuff, you have all the big provider options - all things you need to set up yourself: Digital Ocean, Linode, AWS (ec2 or lightsail), Google Cloud, etc.
PyQt5 is awesome.
I've had good luck with both PyGTK/PyGObject for applications that are just expected to run on Linux, and PyQt for cross-platform applications. I've also used wxPython, but don't really feel like it offers much over the other choices so I would use one of the others depending on the type of application I'm writing.
Just started making a Kivy app on my RPi, working pretty great so far 
Well, for starters you need special light bulbs in your house. Regular light bulbs won't work. I have Philips Hue lights, which allow me to control all my lights via an app on my phone. They also have an API so that's what I'm using to turn them on. 
&gt; Surprised no one has mentioned CefPython It doesn't support ARM and OP wants to run it on a Raspberry Pi.
I'm in the class right now, I have no experience in code. AMA
It could be an error on my side. All my routes run fine except the 'expensive' one. Which really isn't that expensive. I found that the timeout is caused when I try to make a web request in the flask app. It works fine on my local but attempting to make request using nba_py results in a timeout. 
I don't know 24 seconds for generators, comprehensions and lambda sounds not like a Masterclass for me. Also I miss metaclasses, async and threading here. Or does Masterclass just means Beginner Introduction? Then the curriculum looks totally fine.
I haven't used it, but from what I can tell it's just like the regular command prompt but you can use anaconda commands
I highly recommend Pycharm. It's a feature right IDE that simplifies many of your daily tasks and has a nice VCS integration. However, if you are working on windows and need Numpy/Scipy, try Anaconda / Miniconda. It simplifies all the requirements/installation process of those packages. Numpy and scipy depend on some lower level FORTRAN libraries such as BLAS and lapack that don't come in the pip installation and will cause you trouble in the future. These are included in a version of numpy compiled against the MKL (Intel Math Kernel Library) fortran library, namely the "mkl+numpy". This version with mkl can be installed using the Windows Binaries: http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy Or, if you are using Anaconda: conda install numpy 
Scikit-learn models for classifying baseball pitches!
Well I certainly learned something watching that talk. Thanks! Using inheritance for DI feels scary/weird/wrong, but I can see how it could be useful. Not 100% sure how to cleanly integrate it into a Flask application, and not sure that "understand the MRO" counts as "simple", but it's definitely something worth looking into.
Nice to hear some feedback. Can we use every single python package with Nagare, or are we limited to stackless-compatibles ones ? (like py2/py3 ?)
The end result - L/Load is usually a database. The format of the database varies, but it usually is cleanish data that the data warehouse/BI types can use. The first step - E/Extract is whatever format your data starts in - cvs, web service, database, Jim from marketing has a spreadsheet, whatever. The middle - T/Transform is where the magic happens. It's usually represented by a single arrow on a whiteboard and contains all of your code. The normal use case is for things like web logs being combined and aggregated, or an operational database being turned into a denormalized data warehouse. A lot of analytics databases (redshift/BigQuery) generally like CSV files, but some pipelines use Hadoop or Avro or something. 
This is similar to what we do, and we're in the process of standardizing a bit. Hopefully around a lambda solution. 
/r/learnpython
I used https://github.com/alecthomas/injector for a while. I was mostly happy with it, but ended up taking it out because I've been working on small codebases without a lot of unit tests, and "pretty good" DI got in the way more than it helped.
Waow ! Seems nice ! :) GL with that then !
Oh boy, expect scripting.
In addition from pycon, look into the Dask library for parallelization. It works on serializable data, so if you're building a pipeline anyway on serialized data you can distribute it to "workers" that either consume local resources, or communicate over TCP in a cluster with a very simple API. Not sure what security looks like for it though. A simple TCP client would be pretty insecure without some restrictions, and it looks like as long as you can detect the IP:port then you can automatically latch onto the processes and contribute to the computation, which effectively hands you the application's functionality and some of its data if you have a halfway decent sniffer and logger.
I never claimed to be an it pro you jackass, I have an it background. In this case that means a degree. So how about you shove your foot up your ass? God damn piece of shit excuse for a human being In this case, the damn filter wouldn't work because they get sent other emails other than leads, and for the life of me,the only fucking export feature I could find had to do with pdfs. Not only that, but there are like 8 different kinds of formats you might find those emails in, in which case I'd still waste a fuckton of time on any solution that wasn't an entirely programmatic one. Tl;Dr go fuck yourself Edit: in addition to all that, I still have to do manual data entry for some leads, because some don't have a consistent format to them at all, which means I need to end up with an actual copy of all email-leads that aren't processed programatically. edit2: in addition to that, for some fucked-up reason, sometimes the names for the leads are inconsistent or have spelling errors when one individual submits leads for multiple sources (one google adwords ad clicked on, and one facebook ad clicked on, for example. In both cases the lead doesn't submit a form manually, but the name might get spelt wrong in one case) in which case either I have to programmatically or manually compare the leads so I can mark them as coming from the same person. When tracking data, I have to either mark the first lead that came from the individual, or all leads submitted based on source. I also have to mark when a person submits mutiple leads from the same source at the same time, or if multiple sales reps have each been given a lead from the same lead-individual so I can mark the sales rep who was given the lead first as the 'proper' sales rep to handle the lead. There are a lot of small inconsistencies that occasionally pop up which the google filter can't handle because my boss has to go in and manually email them to the sales rep that personally handles the lead. That way I can track different kinds of information based on this data, and frankly this shit ends up being a pain in the ass no matter what, but I know I can save time by automating a part of the process.
Yep it looks pretty good on Windows
TkInter is alright if you use the ttk widgets
Woah! Didn't know there was a sub for this, thats awesome!
Your question has already been answered, but I figured I may as well ask, what are you using lists of lists for? There are tons of reasons to do so, but if it is as multi-dimensional arrays, there are some other data structures that may be better. The ones that come to mind are numpy if it is all math/numbers and I think there are some others for general objects (though Numpy can do object arrays too). Of course, you may not want that if you are inserting since you do not have to keep the same dimensions, but I thought it is worth mentioning. BTW, if you know you will be inserting at the beginning, check out `deque` which has fast inserts at either end.
There is a library I have been keeping my eyes on called [REMI](https://github.com/dddomodossola/remi) which tries to simplify this somewhat. I have yet to use it myself though (no need for a GUI in what I do...yet)
Don't think about Pythons capabilities, think about your problems. It can do pretty much anything you would like to do, even if there is a task python can't handle you can use a different language. And you can take data from them even if they don't have a public api. Search for web crawler. 
In QGC or MP? Edit: just kidding that was a dumb question...did I mention I was a beginner? 
Sure beats typing.
Definitely Kivy. I've seen several jobs on upwork of companies requesting kivy developers for their raspberry pis.
Cool, makes sense thanks a lot! If you ran an e-commerce website with user log data (product interactions, etc) as well as order data what format would that data usually come in pre-transformation?
No. #!venv/bin/python is the path to my virtual environment's python interpreter. For most it would be #!/usr/bin/python or something similar
Qt is love. Qt is life. Use PyQt5. PySide hasn't gotten fully around yet to Qt5 bindings. It's a little sad.
If the try is because maxsize being present isn't a sure thing, you could use .get() which by default returns None if the key wasn't found. I like to do the lookup on the dict as few times as possible (not sure if it's really faster) maxsize = defs.get('maxsize') if isinstance(maxsize, int): defs['maxnumeric'] = maxsize elif any([isinstance(maxsize, x) for x in [str, unicode]): s = maxsize Edit- the other gentleman's way using isinstance with a tuple of types is nicer than the comprehension
 expect( ['beats', 'typing', 'other word', 'other word2', 'other word3', 'other word4', 'sometimes we see this', 'else this', 'and then we have this case', 'we won't ever hit this case', 'or this one', 'or this other one', 'case I saw once on a sunday at 2 am', 'how the fuck is this here', 'john said I should include this' ] ) It does but I do a huge amount of scripting for cisco devices and the statements pile up fast when anything even remotely out of the norm happens. Then again my use case isn't normal, expect is pretty good if you're reduced to cli scraping which already sucks pretty bad in the first place.
If you want the cheapest hosting possible checkout https://lowendbox.com/ there are lots of small vps companies that cost just a few $ a month, but you'll be the sysadmin.
I am looking at all of the transactions customers of a on-demand startup to project revenue. Stuff like on how many orders each month, how much money spent, and how many times each consecutive month they have used the service. Once I can map out the behavior, I can estimate revenue. Today is my second day with python; I have no coding experience. I started this project on excel and it was taking too long. I have been wanting to learn python for a while, and some coding interns said that python would be faster so I thought fuck it I'll start now.
That doesn't look too bad, is it possible to do the injections without decorating the target class? And does it handle recursive injections? e.g. I have a service that takes a factory, a repository and an event bus, the repository takes a database connection and the event bus takes a queue connection? 
It's still not dependency injection though, which was the point I was making. DI is about accepting dependencies externally and using them to preform work. The MRO is about resolving what work a class should do. 
Oh great. A static site generator. There aren't nearly enough of those around already.
The comedian in me wants to ask if you have installed `buns`? Cause Anaconda don't want 1 -- RAID -- unless you got `buns`, hon. Beyond that all I can say is ask on their [support forums](https://groups.google.com/a/continuum.io/forum/#!forum/anaconda), cause I know of no actual reason a generic installer shouldn't allow the volume.
What service are you using to do the lookups? 
Kind of, but Tagged Unions are meant for different purposes. They're meant as a way of reconciling multiple sub-types as one type. That's why you can do something like: type Something = A | B String | C Int | D List (String, Int) The great thing about Elm is that the compiler always enforces that all cases are accounted for. The misunderstanding the other user is having (I think), is that he/she seems to think tagged unions are meant as enums or a set of choices, but they're actually very different. As you noticed, each member in a tagged union can have a different type signature, so if you tried to directly port the `Something` tagged union I have above into a select, I would need some sort of additional logic to determine what string case "B" would have, what integer "C" would have, etc. As such, it's not possible to represent that level of choice in a simple select input without writing additional logic. Instead you'd need some sort of string label to represent a member of the union in a choice, and then additional logic (and perhaps other inputs) to determine which a given case would have. A more concrete example would be something like: type HistoricalEventDate = Known Date | Unknown (Date, Date) Where in the 'Unknown' case you're specifying a potential range of dates. So how would you represent this with one input? The answer is that you can't. If you wanted a user to specify an HistoricalEventDate, you'd first need a select input with labels like "Known" and "Unknown", and then depending on what's chosen either you'll see one date input for "Known" or two date inputs for "Unknown". Once you have those values you can use your tagged union and go on your merry way. Tagged unions get really cool when you have things like recursion. You can implement tree structures really easily. https://en.wikipedia.org/wiki/Tagged_union
**Tagged union** In computer science, a tagged union, also called a variant, variant record, discriminated union, disjoint union, or sum type, is a data structure used to hold a value that could take on several different, but fixed, types. Only one of the types can be in use at any one time, and a tag field explicitly indicates which one is in use. It can be thought of as a type that has several "cases," each of which should be handled correctly when that type is manipulated. Like ordinary unions, tagged unions can save storage by overlapping storage areas for each type, since only one is in use at a time. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.24
https://en.wikipedia.org/wiki/Lightning_Memory-Mapped_Database is better
**Lightning Memory-Mapped Database** Lightning Memory-Mapped Database (LMDB) is a software library that provides a high-performance embedded transactional database in the form of a key-value store. LMDB is written in C with API bindings for several programming languages. LMDB stores arbitrary key/data pairs as byte arrays, has a range-based search capability, supports multiple data items for a single key and has a special mode for appending records at the end of the database (MDB_APPEND) which gives a dramatic write performance increase over other similar stores. LMDB is not a relational database, it is strictly a key-value store like Berkeley DB and dbm. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.24
Tell us which of the two it was. :)
Oh snap, good to know.
Accurrint, pacer, Cook county tax portal and recorder of deeds, our own internal software. 
Codeacademy didn't cover this? (Pip)?
I'd also like to second this. For someone like myself who has little to no design sense, this has been a great way for me to make GUIs in the past.
Don't use it then. Who pissed in your Cheerios?
Wait..who the hell are you? lol...gotta love the elitist stuff online.
Will definitely bear that in mind next time, my bad. Pretty sure the process ended as my printing of "isRunning" for the previous process comes up false when the next process is programmed to execute (see how I check it in the code gist below). Fairly new to programming, what would restarting it the same way as it closed entail? Also looked into the pool.imap object, looks like it's a great way to run multiple processes at once but there doesn't seem to be a function that stops the process. I see one that sleeps a process for a certain amount of time, not stops. Here's a minimal working example, would probably do a much better job communicating my problem: https://gist.github.com/colinwarn/d30dea91438e4b2182a57e8d33489a15 Thank you so, so much for your help.
swiftversion4, dont let this small person get you upset or explain anything to it....as you would be wasting your time. We dont know whats eating battyc inside in reality. Could be cancer, he could have been rejected by some girl online or simply be miserable at where he is in life and wants to project that on you. Hell, for all you know it could be jealousy...maybe not for you but maybe he got screwed in his job and the only outlet he has is bad-assness, anonymously on the Internet. Its sad and pathetic, because, it is the internet, its really easy to hide and be offensive and its the epitome of cowardice, but hey, you never know whats going on with people. So, relax, and never let some anonymous person online upset you, nor should you show it because they are pretty much insignificant to your existence.
Let's do it. Pm me. 
"I'm dedicating 20 hours a week to learning Python starting tomorrow (laid off) ". Brilliance. Good stuff. Only the best can happen!
Would you mind sharing your code/project? Maybe we can help make it a little more efficient.
Sure is. Its pretty awesome and i ended up showing folks at work the program and how it works. pyautogui was the exact module that i imported to write the program.
Meh... just learn [Scapy.](http://www.secdev.org/projects/scapy/) That's really about the tool needed for network stuff. There's also, of course, numerous DNS modules and the likes, but I doubt you'd need python specific training to figure that out. 
&gt; Knowing how to package up a python program and deploy it within a virtualenv is very good to know. Could you briefly explain how you would do that? Does this involve changing the .py extension to an exe if its a win environment? Is there a link that explains this in detail?
With some good software engineering, these aren't issues. I've built some really nice pieces of software that are unpinned by expect scripts. 
That's one use and not the one I'm talking about. 
Thanks. 
No, that's the sole purpose of tagged unions. It doesn't have another purpose.
You make it seem like type Foo = A | B isn't a thing. But it is. 
No, at least not in the interactive lessons in non-pro version. (I don't know if they did in optional articles they provide after lessons.)
So you think the compiler should treat tagged unions differently depending whether or not one or more cases have a type signature?
Thanks for posting this!
This is what my old shop teacher would call "going around your ass to get to your elbow". Sure, you could do that, but that's all built into PIL, so do it the easy way, plus the benefit of maintaining aspect ratios and not resizing in a dimension that's not needed: from PIL import Image images_list = ['terracegarden1.jpg', 'terracegarden2.jpg', 'terracegarden3.jpg'] imgs = [ Image.open(i) for i in images_list ] widths, heights = zip(*[im.size for im in imgs]) min_height = min(heights) horizontal_merge = Image.new("RGB", (sum(widths), min_height)) offset = 0 for img in imgs: # calculate width from height and maintain aspect ratio new_width = min_height * img.size[0] / img.size[1] horizontal_merge.paste(img.resize((new_width, min_height)), (offset, 0)) offset += img.size[0] horizontal_merge.save( 'terracegarden_h.jpg' ) min_width = min(widths) vertical_merge = Image.new("RGB", (min_width, sum(heights))) offset = 0 for img in imgs: new_height = new_width * img.size[1] / img.size[0] vertical_merge.paste(img.resize((min_width, new_height)), (0, offset)) offset += img.size[1] vertical_merge.save( 'terracegarden_v.jpg' ) I love numpy and all but it's the wrong tool for this job (although I'm pretty sure PIL uses numpy to do it's magic). 
I've tried it and it's pretty nice, simple to build up stuff and you can run then as a standalone app or a web :)
Hmmm...that's different than what I was thinking. I was doing it from `C:\` directly. I guess I was wrong. Paths are so stinking weird on Windows between forward slashes being allowed, backslashes being needed when drives are involved, and UNC paths. I get how to enter a path to make it do what I want. These edge cases that happen when you have users that don't know paths are irritating. Why would you do it like that? Then in python (maybe in Windows as well) you can do `C:Users` and that's a valid path...
Just finished reading the python crash course book. It s excellent. Very well explained and easy to understand especially if you already know java or c
On the subject... Does anyone know if there's some way to get a discount or something on the updated version of this book when it comes out? Lots of little things changed in pandas relative to what's written in the first version of the book.
It may be rehashing, but you could try automate the boring stuff with python. Its helped me a ton as i was a beginner in programming. That was covered in the book and i think the video course. 
&gt; My intuition was that if I terminated the process I could launch it again as many times as I want. Typically not. Almost always you need to actually start a new process each time you want to "re-run" it. One option is to sit on a single process and just switch what it's doing; the other one is to start a new process every time. Holding on to two processes and alternatively starting and killing them won't work, and process frameworks don't want you to do that, as that "terminate" call is also used to clean up a lot of state, some of which was necessary to successfully initialize the process. It's not well-defined what would, or should, happen when you try to re-start a terminated process, so you're not typically allowed to do it.
Optionally yes. Just like in OCaml where you can use the feature "deriving enum". Or any of the other solutions that I suggested that would all work. I don't care so much how it's solved just that it is. Or at least that people admit it's a weakness instead of being weirdly defensive and claiming it's impossible when both Haskell and OCaml does in fact solve it. 
If you can afford it, you can take a ton of classes online for cheap at udemy or just hit up youtube. Theres all sorts of beginner stuff there with python from basic to advanced.
&gt; going around your ass to get to your elbow Southerner, eh?
&gt; Then in python (maybe in Windows as well) you can do C:Users and that's a valid path... It's not really a valid path, but it's a valid argument to `cd` telling it to change the cwd of D drive to `./Users`. It's a side effect of Windows having a current working directory per-drive instead of one global one. There are so many of these DOS hangovers I'm glad they're finally pushing PowerShell as the default rather than cmd.
Which book? And by the way, am I asking something wrong because I don't get why am I being downvoted.
I'm teaching my father and I am looking for some books who we can use to make a class road map for him. 
I think I will likely into that. 
The book is named Automate The Boring Stuff With Python. http://automatetheboringstuff.com/ And the hard copy is on Amazon.
Working on an AWS lambda function that will perform load balancing and failover for a Rundeck cluster. Gotta love how Rundeck docs say "oh just dump those instances on the elb and set up a single rds instance" and yet fail to recognize that in case one of those servers dies, stuff will break. This is not high availability, and yet we're stuck with this piece of junk.
Thanks. I'm doing this one class first because I feel like it'll be the most fun. After that I plan on going through interview questions like the other guy suggested and learning whatever skills I lack.
[removed]
This is really useful, thanks!
Well I'm not going to argue about it, but I recommend that you try to be a little more flexible with how you approach topics like this. DI can be accomplished a number of ways, not just the way that Java and C# do it.
This is great! Is this a one-off or are there sister sites for other languages too?
Semantic white space felt scary/weird/wrong too :) I'm not actually sure that this would be easy to do in Flask, because I haven't used Flask (not actually a day to day Python user either). I was just hoping the link would help. /shrug
Make an infinite loop and use `break` to stop it when needed: from random import randint while True: # loops forever answer = input ("Would you like to roll again? YES or NO?") if answer == 'NO': break # stop the loop. print (randint(1,6)) # rest of the program --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
It can be, but modifying the MRO isn't dependency injection. And it's not like I haven't used super to place my class further up the chain, I even said I did earlier. But that's not dependency injection. Dependency Injection has a particular definition: loading external dependencies into an instance instead of creating them in class. That doesn't entail using an DI frameworks or IOC container, I do it by hand in my work apps (and that sucks, but that's me to do with the scale than anything else).
This issue reports that there may be some request limits or throttling in effect. https://github.com/seemethere/nba_py/issues/88
Generally, you'd have order data in a database. Most order processing databases (OLTP) are optimized for things like "Insert/update/give me the data on this single order as fast as possible" or "Give me a list of member X's orders in the last 90 days". The ETL process would probably turn that into another database (OLAP), with a structure more suited to questions like, "What were the customer characteristics of everybody who bought Tide". (This process generally called denormalization or a star schema). Clickstream/web log data would usually start as a pile of text files, probably from multiple servers, and the ETL process would do things like adding a meaninful customer ID to the session, annotate things like, "This URL is a purchase event", and aggregate it to a level that's more consumable - like, say, rolled up to an hour. (Customer saw 10 pages, added 3 items to a cart, and made one purchase in one hour). So then in the data warehouse, you can say, "Customer X dicked around on the site for 6 hours, then purchased y" 
Yeah I've seen that. It works perfectly on my local machine but has problems on Heroku. 
My proc file is really simple, I don't know much about it. It's something like web: gunicorn hello:app
What functionality are you missing? 
Can you give an example of something you don't like?
&gt; do i need to save the file in atom and open it in terminal? Yes, that's the standard way. You can also [get a plugin to run the program in Atom](https://atom.io/packages/script). --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
If it's that simple you're missing a few things: * `--bind 0.0.0.0:$PORT` * `--workers N` (N should be a number), and will allow more requests to be served 
/r/learnpython
Switching My Servers to Ubuntu is the best decision I've made in a long time. Thanks for sharing.
You know commenting here is not mandatory, right? 
&gt; why would you use Unity over RenPy You probably wouldn't, but if you ever diverge from this one genre, then you're up against a wall. In my opinion, if you're learning a new toolchain, pick *the most useful* version so that time you put into it can be worth it in the long run. There's nothing wrong with suggesting another tool, especially one purpose built for *all* types of games.
Oh. I guess everyone is crusty here. XD
**GOTO** statement
I agree, unity is overkill for this project, but this project is an absolutely *perfect* introduction into Unity. Getting to know a tool that is *way* more capable than what you need *at the moment* is extremely valuable (assuming he has any interest in games, which all of this *is* assuming, but even then, the perceived difficulty in implementing "anything more than text based" might turn him off).
I have bought many copies of Python Programming for the Absolute beginner for kids that want to learn python. Its how I learned and I love that book.
Nice!! Thanks!
Oh gotcha, thanks! i can take some future questions over there then. Looks like that plugin will be the way to go. However how do you save the script in atom? (sorry for these basic questions ive searched atom's site and couldn't really find this fundamental answer) do i save as "filename.py" or just "filename" and it is automatically a .py? or should i be saving under a completely different .xyz altogether? I'm on os 10.12.5 and python 3. currently trying to learn python from the book python for everybody. I appreciate your responses.
Technically the filename extension does not matter but traditionally we use .py. So I would suggest you save as "filename.py". I doubt Atom will do this for you. 
http://appjar.info/ simple but effective
If there was a "best" then everyone would use it and there would only be one. There is only "best for" ... which means you need to tell us what you want from a GUI library before we can tell you what's best for you. in a nutshell: * Tkinter: best for super fast development and if you don't want to require your windows users to install extra libraries * pyGTK / PyGObject: best for native looking programs in GTK based Linux distros. Uses Glade. * PyQT/ PySide: best for highly custom very pretty interfaces and automatic event linking. Looks native on any OS. You can use QTDesigner to create GUIs. * wxPython: Alternative to tkinter for fast and easy interfaces. Has a GTK-like Glade. (Now for python3!) * Kivy: best for multi-touch and small screens - tablets and phones. * Remi: best for programs that can be accessed via a browser locally or remotely * Bokah: best for interactive data display in a browser. &gt; i don't mind starting with something difficult, as long as it would be worth the time a i won't have to go looking for something else some time after From that I'd recommend PyQT / PySide. I really liked Mark Summerfield's [Rapid GUI Programming with Python and Qt]( https://www.amazon.com/Rapid-GUI-Programming-Python-Definitive/dp/0134393333/). It's pretty outdated at this point, but it still will give you a solid foundation. 
[removed]
thanks, i'll play around with it some more!
Oh great. ~~A static site generator.~~ Another asshole. There aren't nearly enough of those around already.
Sweet! Moved from Jekyll to Hugo, but I'll have to check this out as it means not learning another language to extend like the other two.
Where is the section for expert python programmers?
Tkinter is relatively simple and is the standard Python GUI framework. For small projects, it's decent but it looks old-ish by default. The module documentation is a good start: https://docs.python.org/3/library/tk.html If you want a more powerful framework, I recommend Qt and its python binding (pyQt or pySide). I found the python documentation... lacking. Basically, you're better off looking for the original documentation (http://doc.qt.io/qt-5/index.html) with examples in C++. When you need concrete examples on how it's done in python, just google. To build UIs I use Qt Designer (http://doc.qt.io/qt-5/qtdesigner-manual.html). 
LOL, well you said you don't mind starting with something difficult :) What OS are you using? 
I think you're better off using the latest (pyQt5), because there are some pretty cool new features and fixes in Qt5. I assume you're on Windows. You should be able to install it via pip (https://pip.pypa.io/en/stable/installing/#do-i-need-to-install-pip), a python package manager. pip3 install PyQt5 
Great post. Thanks. 
Where do the rankings come from?
Thank you! This worked.
Finally succeeded in installing the PyQt5 framework. My pip didn't work as i expected it would (closed seconds after opening it) so i used the cmd instead. Anyways, now that it has been taken care of, some tutorials or courses from where i can begin would be really appreciated. I found a yt series of a guy named sentdex, but he's using PyQt4 and i was wondering if there were some big differences between it and PyQt5 that would make it difficult to understand.
If you click on the ? Near the score: How is a book scored? The scores are based on the popularity of the book. A score of 100 indicates most popular among all Python books while a score of 0 indicates least popular. The score is calculated from the Bestseller Rank of the book.
Just about all of these are available in PDF online. Just Google search the title and bam! 
Nice tutorial. Thank you. 
It does support recursive injections. The injector has a get method, so you can get away without decorating target classes. However, all of the documentation uses the decorator, and I have a feeling that there's a good chance that this might break the recursive injection functionality.
I'll give it a shot and see what's up. Thanks for the heads up on it
I saw that, but whose bestseller rank? Amazon? 
https://alexrecker.com/selenium-bus-pass.html &lt; This will be useful to you. Also, try reading through https://automatetheboringstuff.com/
No, it's because I know the target users of this script. The try block is to catch all of the possible weird inputs they will produce sooner or later. Earlier in the program flow, the defaults have been applied for the unset values. So it's to catch the smartarse that eventually will try a Roman numeral. 
How did you not find this, for example? https://stackoverflow.com/questions/9342249/how-to-insert-a-unique-id-into-each-sqlite-row
Why without success?
Not sure, my searches might have been weird cause I've been looking for the Python sqlite library specific answer but I will try adding that in my plain SQL strings. Thank you!
No problem. I've only been using Python 2 years myself. Funnily enough I probably know more about drones than python but I've been holding off contributing to dronecode as it's difficult to see where I could offer unique help.
Yes, each table has a ROWID column. Example: select ROWID from tablename https://sqlite.org/lang_createtable.html#rowid
Well the combined responses on here sure helped me! Thanks again. I'm an intern, not even studying computer science. Also a 3rd year mechanical engineering student and literally my only experience with coding was a course I took my freshman year in Visual Basic. Not real sure why my company decided I was gonna do software engineering for them this summer...but hey with the help of stack overflow / Reddit anything is possible lol 
I guess that depends on the image that you're using? I just ran it with a random image and didn't any segments. And I really don't understand the code enough to know why it's doing what it's doing. Do you access to some test image we could use? Like given this test image, we know how the segments look like?
Parsing terms and conditions of contracts, or build a contract management database
Upstarts seems to not support X11 which is required to run webdriver. Eventually got it working by going the other way: start xvfb-run and give it the script name as parameter
Hmm. Yeah that's a good idea. 
This is a useful link! I deal with a lot of beginners who like to have some structure when learning how to code (as opposed to reading documentation ). I think this may be of great use in those situations. 
What do you consider expert? Some books in [the 'language mastery' category](http://pythonbooks.org/for-intermediate-python-programmers/language-mastery/) may be of interest.
Not sure if I understand the question correctly. Does "with R there is a server component" mean that you are looking for something that runs on a sever and allows people to work on it? Take a look at [Jupyter hub](https://github.com/jupyterhub/jupyterhub), maybe.
Yeah sorry I come from a more traditional corp network environments where there is a server that is accessed via a client or something like that and does all the heavy lifting vs having the users do it all on their personal workstations. R server (from my understanding) works in this fashion where the users connect to one hub to do their work and I was wonder if there was anything similar for the Python side of things. 
Jupyter Hub is exactly that! It runs on a server that multiple people can connect to and work on.
Perfect! Thanks so much!
This is documented in the Requests documentation and IIRC, there's sample code...
To expand on your comment. DigitalOcean offers 'One-click apps' which are pre made Linux images. One of them is the Dokku package which is very similar to Heroku in the way you can deploy a Flask app using Git.
Why? The 3rd isinstance (or second condition) should be indented twice (8 spaces) after the "or &lt;backslash&gt;". That is what flake8 is complaining about. There's no need for parens and I wouldn't recommend using them if not necessary.
There are clearly cases you can't use them like this but is there something in elm like an enum where you can enforce all cases are covered by the compiler? That seems to be what they want, and an enumeration over a union type with no constructors / argument less constructors sounds like it would work. Is there something they can do which covers the actual use case and ensures the compiler catches missing issues / reduces repeated work?
Lol
I got an answer that eliminated the need for a continuation. The problem with flake8 was that no matter the indentation, it complained about too little or too much indent. I suspect it may be because it really want continuations to happen inside parenthesis(es?), and become confused when my C background shows.
I've taken the Java Masterclass by Tim and it was really comprehensive. As I see he just started this Python course, so he is still adding to it massively.
Yes, tagged unions can be used as simple unions as well. The other user wants to iterate over tagged unions. That's unrelated.
I'm a fan of Bottle, and I use it for all my personal projects. Dirt simple, easy to deploy (no dependencies outside the standard library!), and it has a really nice template engine, stpl. I even use stpl on occasion for generating documents outside the context of a web server.
Another option to evaluate might be [this](https://powerfulpython.com/store/p/restful-api-server/) from Aaron Maxwell. 
thanks for the link -- but it sounds to be too pricey
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/TfdC6y2.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dk8cl2s) 
A lot of commercial software used in animation and VFX ships with PySide (Maya, Nuke, Houdini, Rv), and have a strong interest in the project remaining alive. For example, Autodesk has been funding development of PySide2, which supports Qt5. So it's not dying, though I wouldn't expect much development of PySide for Qt4, since that is no longer being developed. PySide is perfectly fine, though a bit more sensitive to errors than PyQt - whereas PyQt will just raise an error and keep on truckin', PySide may crash completely on insignificant bugs
The dude posted the other day, he just made this site. He went through the books individually to get the content and created a rating system based on some inputs from hottest selling and some other things. I think python is his domain so he started with that, but I'm sure he's open to adding other books if other people wanted to give their input.
He said it correlated pretty well with what he knew of the books he'd read and I believe there are a couple other inputs as well iirc. It's not best selling per say but top selling lately which he claims gives a pretty good indication of which books are being recommended by others. The books I've read on the list seem to be rated fairly accurately. Plus it's a brand new site so I'm sure he'll improve his rating system as he gets feedback.
And... http://pythonbooks.org/topical-books/web-development/ lists an old version of Two Scoops of Django. :(
At least, provide a link! ;-) http://entrian.com/goto/download.html Note that it also includes a `comefrom` statement. However, it is most definitely not Python 3 compatible.
I wish there was an answer key for the Sam's Python in 24 Hours. It is useless without one. It makes no sense to have no answer key. 
I'm trying this, thanks! How many workers would your recommend?
Personally, I tend to pick a particular project and then look up each individual feature as I need to learn it. There are 620+ classes and 6k+ methods and functions, so a professional QT dev still won't know everything. Official docs [are split up by modules and described well](http://doc.qt.io/qt-5/qtmodules.html). For an initial go at it, I'd start with a bare minimum example code block and make something specific like a gui wrapper for a favorite commandline tool. [Zetcode has an example at the beginning of their QT5 Tutorial](http://zetcode.com/gui/pyqt5/firstprograms/): import sys from PyQt5.QtWidgets import QApplication, QWidget if __name__ == '__main__': app = QApplication(sys.argv) w = QWidget() w.resize(250, 150) w.move(300, 300) w.setWindowTitle('Simple') w.show() sys.exit(app.exec_())
What would a 301 redirect matching script do exactly?
Book 1.. server error
I can't find anything I disagree with. Is there something specific you're concerned about?
For heroku probably 2-4, but that kind of depends on how much memory your application uses on average and the anticipated load.
Canadian eh? 
Some of the books in the "experienced programmer but not with python" category have mixed reviews on amazon, saying the subject matter is not applicable to modern use of python. Can anyone confirm? 
Your comments appreciated. Rip me a new one, many thanks!
JavaScript: just because you can, doesn't mean you should.
There are a bunch of small pdfs that people have compiled (on mobile so can't link now). That should be enough to give you the gist of numpy and pandas. From there you should probably find some dataset and try analyzing it. In terms of matplotlib I've never found anything I've been strongly in favor of. Edit: also do check out the datascience and learnmachinelearning subreddits 
This link is so good. Can't thank enough. 
I have a coworker that likes to shit on Python every chance he gets. I'm pretty sure he'd disagree with everything in there and tell me how Lisp and Curl are much better languages and we should rebuild the internet.
Have you heard of [evilpackage](https://github.com/fate0/cookiecutter-evilpy-package/tree/master/%7B%7Bcookiecutter.package_name%7D%7D)? 
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [fate0/cookiecutter-evilpy-package/.../**%7B%7Bcookiecutter.package_name%7D%7D** (master → 2cb98d7)](https://github.com/fate0/cookiecutter-evilpy-package/tree/2cb98d7bcaca647e664cd956b9c966e74eafa34f/%7B%7Bcookiecutter.package_name%7D%7D) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dk8p0me.)^.
/r/iamverypython
I religiously use flake8 on my code base of 100k LOC. Something else is/was at play here. I don't use parens unless absolutely necessary.
Can you please post links to the pdfs them when you get the chance?
`ModuleNotFoundError: No module named 'experimentation_skills'`
I had a pretty good experience with Learn Python the Hard Way. There might be more comprehensive books available, but it teaches you to think like a programmer. I felt like that made it invaluable. 
class implementation, no member type
data protection offered by private. __ is not the way to go
I meant modules not built in to Python. There is no socialskills module in Python, but there might be one online.
nice list. however, why isn't the python official manual in the list?
Look at Pelican, too. 
Why not?
Glad to hear it!
if only there were any tools for searching them (see pip, google, pypi)
you can call me C sick but i hated it.
could you rewrite the url to add #next instead of clicking the button?
What do you mean by "no member type"? 
Doesn't exist ^^^^^yet :(
&gt; JupyterLab computational environment. This is a very early preview, and is not suitable for general usage yet. 
thats what i wrote in my blog, it's still in development phase and this is just a glimpse
 abc = browser.find_elements_by_class_name('a-last') abc[0].click()
Data protection from whom? Anyone with access to your source code has access to your data no matter what programming language you are using.
i have to call both lines each time the page loads but it is working for me on chrome
If you're querying a RDBMS, the SQL generation time is likely the least of your problems time wise.
Created a script to complete the http://fc4.me challenge.
try abc = browser.find_elements_by_class_name('a-last') for i in range(0, len(abc)): try: print i, abc[i].text except Exception: print 'passing'
Benchmark? Run your code with both implementations and do some uploads, queries, etc over a period of time. See if there are drops?
It's a pretty accurate representation of the language and it's broad characteristics. It doesn't touch on the remaining problems with the 2 to 3 transition, or the fact that Python has been bleeding corporate users to Go and Rust (and other -- generally newer -- strongly-typed and compiled languages), specifically because of that "gets hard to maintain in the large" problem, but it's overall correct, just could add a bit more context.
Depends on your field of work and your role. I confidently put python and haskell and VBA (not my choice, but gained proficiency) on my resume with my level of knowledge of them, being an actuary and financial mathematician. I probably could put neither for a proper software engineer role. Maybe python for a junior role.
Ahh, yes ... much like many of my generally now ex-colleagues, who'd subprocess out to Perl at any and every opportunity, usually with some snide reference to the GIL and the irrevocable fact that it meant the language was doomed at birth.
could also try abc = browser.find_elements_by_xpath("//*[contains(text(), 'Next')]") abc[2].click()
Yes, most of them are available, but illegally. Support the authors of books you find useful by buying a copy.
i just kept trying abc[0-6] till i got one that would actually click
Sometimes just getting started is the hardest part. Can you show us the error?
Trying to move too fast with pandas can be frustrating because you spend 90% of your time googling stack overflow stuff on how to manipulate or plot your data. Having time to play with your data in a notebook, learn the pandas API and various workflows at your own pace, and try implementing your algorithms and data structures a few different ways to understand the tradeoffs is much more enjoyable. It seems like there's always a pandas one liner to do everything, but discovering every trick is a frustrating learning curve.
Do yourself a favor and never use `sys.exit(app.exec_())`. Just call `app.exec_()` unless you want random garbage collection of your data, which causes segfaults.
 browser.find_element_by_css_selector('a[href="#next"]').click() Just that works for me too
It doesn't work on the first page. Only seems to work on page 2+!!!
I haven't tried this but Jupyter has powered some great projects. I'm currently using [Hydrogen](https://atom.io/packages/hydrogen) in Atom.
i started geting the error again, i get it on the first page, after the 2nd i can just browser.find_element_by_css_selector('a[href="#next"]').click()
Yep. You hit the nail on the head with the GIL.
It's been working on Python 3.x for quite a while. Also, it didn't get much attention when everyone else was still on 2. They're just worse at marketing themselves. (And it didn't help that the Django &amp; Flask people poo-pood them back in the day)
I think you are limited to stack less ones if you use stack less. But you can run nagare under cpython even though it is not battle tested there. Also stack less is supposed to be drop in 100% compatible.
Looks like you've got a version mismatch: module compiled against API version 0xb but this version of numpy is 0x9 File "/home/pi/share/Projects/new-coder/dataviz/DataVizProj/lib/python3.4/site-packages/matplotlib/colorbar.py" Did you perhaps install numpy under python 2.x and then try to run it on 3.4? You could try "pip3 install numpy" to force it to use the py3 package installer.
Now extended to run nose tests after each change to the filesystem so you can define your work in test cases and automatically run them keeping the large objects in memory.
you don't need separate loops for yes and no - or even separate functions (at least not in this case).
This might come as a surprise, I'm a freelancer who mostly makes my living using python (flask, django, tkinter, console scripts, etc.), and built several apps and projects using it. But till date, I haven't read a single python book! Never even learned it in college CS degree, it was mostly theoretical subjects like programming, OS, databases, etc. All my knowledge is thanks to *Python documentation* and *StackOverflow*. Though I did purchase an Orielly book recently, I'm yet to even read the first page of it!
That is an awful suggestion - there is a reason that Guido left GOTO out of the language - it simply isn't needed. What is more is that can lead to unstructured spaghetti programming. I do hope that you suggested this as a joke.
&gt; I do hope that you suggested this as a joke. Yes
Apologies for the misunderstanding; I know how to set regular cookie parameters, my question is about irregular parameters like "storeId" etc
That's exactly what I'm using. A session object and the "set" method to set the cookies. My specific question is around the seeming lack of support from setting irregular cookie parameters (anything outside the name, value, secure, httponly.... Parameters supported by the underlying morsel library). 
I've got it down to a very limited example: https://paste.pound-python.org/show/n53S7nAYgQwfqWyT6y5Z/ The second isinstance cannot be placed to the satisfaction of flake8. I get one of three errors: * E122 continuation line missing indentation or outdented * E125 continuation line with same indent as next logical line * E127 continuation line over-indented for visual indent 
oops is bullshit in python. python design makes it unsuitable for oops.
Not sure what sort of work you are doing but as a recovering Matlab addict (i'm an Aerospace engineer) I found Spyder very helpful. It's included with Anaconda and gives you an IPython console and variable inspection as well as normal IDE tools. My PhD work was all in Matlab but as a Fellow i've found I can do everything in Python 3 and it takes less time to write, debug, or deploy. 
You're totally right of course. If only Python had classes, or metaclasses, or inheritance, class methods, static methods, the `@property` decorator or the descriptor protocol. It might then be vaguely useful for OOP.
If only python was designed so that everything is an object. Oh wait. Would you like to back up your claim?
You might wanna ask this over at /r/learnpython instead
The back end is a web server, typically itself backed by a database. You'll connect the two via standard HTTP. Flask and Django are both good options for implementing the back end. In general, Flask is easier for small projects, and Django is better for big projects. However, if you can't decide, just flip a coin. Either will work for more or less anything, and it's not worth the time for a Uni course to do a detailed comparison with trial projects. 
There is no surprise, that is actually what most people (including me) do, especially with languages that you can start doing a lot of stuff without learning advanced stuff, such as python. But it is a nice thing to read expert's opinions on a language and see the best idioms, given that you have time and dedication. It certainly widens your horizon and shows you what can be done with the language. With programming languages, it is easy to live in your comfort zone and never learn new and interesting things; books are a way to break that habit.
GeoNames has a web service for that: http://www.geonames.org/export/ (look for countryInfo). In a nutshell, this gives you information on a country, including its capital, in JSON format, over HTTP. Much easier that scraping wikipedia's inconsistent formatting.
I have recently been thinking about this problem of when live can say one is proficient in a language and I think the answer for me is somewhere around when I feel as if I understand the idioms in the language well enough to have them internalized. Put another way: when I feel fluent enough to write solutions that don't look out of place for that language. I've been learning Scala for work and I'm finally understanding the preference for immutable variables, the use of map (and map variants) over loops for mutating iterables, and the power of their match statement. I'm very close to calling myself fluent. A large problem in this space is people overselling their proficiency in a language on their resume and refusing to back down in interviews. If you're not Guido, you PROBABLY aren't a 10 out of 10 in Python. Maybe a 8, max.
Thanks!
Now I'm curious to its performance...
According to [this issue](https://bugs.python.org/issue28544) c implementations of `Task` and `Future` yield about 15% of extra speed so this is what has to be given up. On the other hand it also says `uvloop becomes ~3-5% faster` so using uvloop can minimize performance hit.
I think "Think Python" is criminally underrated.
I don't think so, he seems quite content with downvotes
When I'm confident that, given a task common for that language, I know immediatelly how I'm going to do it (with a little help of Google or some such). Putting something on mu resume is entirelly different story which I'm not going to detail here.
As far as I can remember, the first few chapters of the book are dedicated to learning Python from scratch without going into Py Qt. As for the differences between PyQt4 and PyQt5 I believe they are significal, especially for a beginner.
Python 3 Object Oriented Programming provides wonderful explanations of most questions you could think of relating to OOP in Python, you can find a free pdf version online somewhere. 
I'm on chapter 7 right now and so far it's the best resource I've used by far. The pacing and order in which the material is presented is perfect to keep my interest.
Oh, in that case then I definitely recommend Pycharm since it's very user friendly especially for someone who's used to Eclipse. Also, in case you prefer Eclipse as an IDE, you can actually run Python using Eclipse. Here's how you can do so. https://www.youtube.com/watch?v=NDFbXIiqT4o&amp;index=12&amp;list=PL-osiE80TeTt2d9bfVyTiXJA-UTHn6WwU
What happens when you step through the code with `pdb` (not into selenium, just line by line with the browser up)? You can execute line by line and see if the element is really there. Is amazon switching to a mobile view for you? You might need something like `browser.set_window_size(1024, 768)` if so
I've struggled with actually getting paid to develop in Python. How do you about getting gigs? I've done a lot with enterprise software, but have struggled a lot with getting freelance work.
I do not follow, you can easily call coroutine from sync code with `asyncio.run_coroutine_threadsafe` and get sync future back Problem with your example that, `synchronous_code` is executed within main loop blocking it for long time, it should be called in `Executor` anyway. Edit: I covered some asyncio patterns (sync/async communication) some time ago https://jettify.github.io/minskpy/#/intro
And what will it be able to do?
Best bang for buck go for linode. If you want something similar to heroku but on AWS look ataws elastic beanstalk: https://aws.amazon.com/elasticbeanstalk/ Google Cloud has app engine which you can consider too: https://cloud.google.com/appengine/ 
I mostly get my gigs through upwork and fiverr. Someone needs a web app developed, others might need a python script altered, you can always find something on these sites. Of course, during the initial days, you'll need some patience as you keep improving your portfolio and profile, and work on getting new orders.
Hi everyone :) This is one of the warmup exercises in CodingBat (http://codingbat.com/prob/p145834).
Yeah it's much better to keep sync code in another thread
No, `xx` appears at positions `0` and `1` in `xxxx` (position `2` is not counted, «we won't count the end substring»). xxxx xx -- position 0 xx -- position 1 xx -- same as end, not counted
Best to just chuck away legacy blocking code. Or wrap it in a thread pool executor
The problem's wording is confusing, in my honest opinion! While it's true that I wasn't able to interpret the problem as you did, I really thought that, when it was said that the end substring is NOT accounted for, it was off limits and thus, it wouldn't go towards the count! Anyways, I understand now :) I wasn't aware of that property - that the start of the substring is the only thing that matters in this case. Could you tell me how and why a substring that clearly occupies two different indexes can be said to appear at position 1 only instead of position 1 and 2, for example? Thanks!
Okay.
Maybe wikidata?
No, they actually aren't illegal. http://ap-n.us/books/Programming/Python%20Crash%20Course.pdf https://automatetheboringstuff.com
I am building out an advanced-beginner course at http://testdriven.io/. It details how to set up a set of microservices with Flask and Docker. Let me know your thoughts. Cheers!
ok, there is not a module named socialskills
"Be the change you want to see in the world"
I think it's often quite a good idea. Some valid reasons not to: 1. DB servers can quickly become bottlenecks if they are doing a lot of logic. It can be easier to scale out by adding more app servers and keep the DB layer for running queries fast. 2. Your DB schema can start being structured to support today's requirements rather than the logical structure of the data. This can make tomorrow's requirements harder to implement. 3. Refactoring SQL is a PITA 4. DB changes are nearly always more difficult to deploy, particularly if migrations are needed.
If you feel like you could do a easy to medium difficulty whiteboard problem in that language without a lot of hesitation or looking things up, put it on your resume. Some places let you do whiteboard problems in any language, some will consider any language on your resume fair game for a quiz.
If you're an experienced programmer, check out Dive Into Python. Its free online. Maybe a bit old but still good.
This script would accept all of the URLs from an old website and all of the URLs of a new website as input. It would then need to look at each of the URLs and match the Old URL to the New URL using some kind of scoring or similarity algorithm.
[removed]
I didn't say the all were, just most of them. Your first link is an illegal copy. Your second link obviously isn't.
Um, it took me 2 seconds to google that first link. It was literary the top link. 
Actually, going from this to physical disks is a difficult problem. The mapping from partitions to physical disks doesn't have to be trivial; consider e.g. any RAID configuration, where a single partition spans multiple physical disks. I don't know of a python-specific solution; I'd probably grab raw data from [/sys/block/…/stat](https://www.kernel.org/doc/Documentation/block/stat.txt) or [/proc/diskstat](https://www.kernel.org/doc/Documentation/iostats.txt).
I'm working on my depression over docopt not being part of the stdlib. I wanted to make a standalone CLI script, just grab it and go, which means I can't use docopt since then the user would need to install it. When you're used to docopt, argparse makes you want to cry. I hate it. In fact, I think I'm just going to parse argv myself!
Perhaps I mis-stated my question: In this list there are physical partitions (for example sdj2), and RAID arrays (for example md2). Since it is returning all logical disks on the system, and I want per-disk statistics, we can assume that all RAID arrays on the system contain only disks that are listed otherwise as sd*x*; therefore the activity of a RAID can be perceived as grouped activity from the physical disks. If I wanted per-array statistics I would simply filter out anything where the logical device name does not start with "md." Similarly, filtering non-physical entities in this list is trivial; if substring of disk name (0,2) != "sd" then skip. What is not trivial is combining all partitions on a particular physical disk. I'm sure I can do it in 3,000 lines of code, but my question was whether or not I was missing a shortcut that would be obvious to a more experienced programmer.
As somEone with no real programming background besides kiddie scripts and vb 2004, you tHink that'd be a good place to start? 
People usually identify strings by their starting position.
AFAIK there's not such thing as "logical disks" in the UNIX world. What you probably have in mind is "block device", except that only a subset of block devices seem to be printed by `disk_io_counters`according to some [funny rules](https://github.com/giampaolo/psutil/blob/master/psutil/_pslinux.py#L1029). Probably if you could tweak these rules, you could get the data you want directly from `psutil`. Maybe a feature request? Also, it's not 3kLOC. It can be 5LOC: stats = {} for device in os.listdir('/sys/block'): if not device.startswith('sd'): continue with open(os.path.join('/sys/block', device, 'stat')) as fh: stats[device] = map(int, fh.read().split()) &gt; whether or not I was missing a shortcut that would be obvious to a more experienced programmer. I don't think so. This data is already pretty simple to get; shame `psutil` doesn't do that already.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [giampaolo/psutil/.../**_pslinux.py#L1029** (master → 7cb0de8)](https://github.com/giampaolo/psutil/blob/7cb0de84aae64301396ea1f8735539bf0b46bb0f/psutil/_pslinux.py#L1029) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dk9c8o0.)^.
Any place is a good place :) I would check out the sample text for the book since you have some programming background though. You may find that you don't like the way the information is presented as much as other books.
I'm building a scaffolding CLI for projects with a django backend, and a react.js frontend
[HIRING -- python programmer for tutoring matchmaking startup] Hello! I am a student entrepreneur who has built a successful tutoring marketplace at my college campus. Right now, our tech is simple -- we hire smart students as tutors and then host them on a simple booking website for customers to access them. Payment taken via square card readers handled by tutors that flow to my company bank account. Each week I Venmo the tutor their share (50%). We are already experiencing intense growing pains, and I haven't even really gotten this thing really ramped up. Ultimately, I am now looking to replicate my operation on two additional campuses this Fall semester. Before I hit the gas pedal -- I absolutely need stronger technical infrastructure. I'd like to use Stripe to automate our payment process from end-to-end (can give more details if you pm). The web app we're building is also pretty basic. Customers and tutors create accounts, add payment information (encrypted via Stripe), and then message each other to coordinate sessions (where to meet, what topics to discuss). At the end of sessions, tutors log in to report on the details of the session (which customer, which course, length of session). From here we can call Stripe API to initiate a charge. Also, we are building a simple admin panel to add campuses, approve/deny potential tutors, add courses, etc. We also have to build a front-end but I have some sketches. I have hired two programmers from my university, but I'm concerned that development is moving too slow (right now we have implemented database and some backend functions like account creation /authorization -- ~2500 lines of code). This project has a ton of potential and so I am pursuing it full time. I am a non-technical founder but have over two years of experience in the tutoring market and can sell the hell out of my product. I also almost have a CPA License, which helps. If anyone had read this far and interested in contracting with us, then please PM me. I would love to hear anyone's feedback and whether this vision is achievable by our deadline (mid-late August). If you have questions about our tech then I will gladly refer them to our programmers. Thank you so much for your time.
Do you have any information to back that up? That should never happen unless something goes wrong elsewhere. Exec is blocking and this pattern is used by lots of code bases in production around the world without issue. I've literally never seen it cause an issue, let alone segfaults. The only thing I can think of is that you're starting your event loop inside another program and then using sys.exit which in that case is not applicable
The amount of work you had to do to do this in Tkinter, instead of Pygame is just baffling to me. Gratz. Well done. Is there a Github link? Id love to see the code.
Looks like there is some disagreement between people on this. I thought Zetcode seemed like a solid source, but everyone makes mistakes, I suppose. I'll try to revisit and edit my post if I see any solid conclusion.
Yeah, the more I think about it, the more using psutil for this data is more trouble than it's worth. It's useful for its cpu_percent() function but you're right, it's easier to pull this stuff from /sys. Too bad the data isn't available in psutil for portability. 
I would recommend leveraging udev to query the devices on your system. The pyudev library is pretty nice and allows you to filter on subsytstems and any exported udev variables through convenient data structures. There should be enough information in the exported udev variables to filter out your md devices as well. https://pyudev.readthedocs.io/en/latest/ Once you have your list of block devices you can simply use sysfs as mentioned in the other comment or just use the list to filter your psutil output. 
Using Tkinter? Wow. I absolutely hated that framework because it felt like a mess compared to the clean Python code I saw elsewhere. But I thought Tkinter was for GUI interfaces and not for building games. Could you share why you chose Tkinter for this instead of something like Pygame and some pointers for where to find resources for learning to build games using Tkinter?
Holy shit. I don't have to repeat the original thread but you are a glutton for punishment for building that in TKinter. Nice job finishing a project and nice looking game!
Right, but things do go wrong elsewhere. People are lazy. When you have a gui that's 20k lines on top of a code that's 90k lines, you find all the little edge cases. It took me 4 years to come across this issue after writing a gui that my coworkers and I use everyday and that I continue to develop. It only happened when someone new to python (but far better at programming than I) wrote a module for it. https://stackoverflow.com/questions/12827305/pyqt-application-close-with-error http://enki-editor.org/2014/08/23/Pyqt_mem_mgmt.html
Python is an OOP so the best next step is doing exercises and solutions like in early school where kids use workbooks to practice multiplication tables, et., and then the next step is 'word problems' to see if you understand the concepts, eg "Python the Hard Way" or try codecademy.com, or, sololearn.com, or just visit stackoverflow - and reddit - and answer questions for people who need help. :) LUCK(GOOD) 
the line &gt; in_cadena = cadena is assigning a reference pointing at `cadena` to the variable `in_cadena`, not producing a copy of the value. So when you apply an operation to one of the variable names, it transforms the existing structure that both variables are referencing in heap memory.
Neither of those links prove why you shouldn't use `sys.exit(app.exec_())`. In fact they barely mention it. All they show is that you need to be mindful of scoping and pythons garbage collector. What you're describing feels like programmer error to me.That you're getting segfaults or memory exceptions definitely tells me that your code isn't either scoped properly or is not keeping references to objects. All pyqt tutorials involve keeping references to your qt objects alive. Qt is very quick to show you errors if you do not keep the top level parent widgets alive. Again, I think your recommendation to not use `sys.exit(app.exec_())` is misplaced and erroneous. I personally maintain qt code bases that are over the locs that you mention and I know of many much larger qt code bases that all use `sys.exit(app.exec_())` just fine.
Jesus. Then how do I copy it?
&gt; in_cadena = cadena.copy()
I can point you to the sources I actually used to figure it out later, where it's very explicit. Not at work tho.
Try in_cadena = cadena[::-1]
Thank you!
Glad you're not working on the weekend :) But yes that would be interesting to look at
Any chance someone can post the beginner list? Server error won't let me access. Thanks! 
So, why not teach SQLAlchemy and make the experience SQL-neutral?
[removed]
It did not work in my case because websocket created on one loop can not run on another. Not sure if this was asyncio or aiohttp limitation.
I hate it when people's Medium articles are just a shitty advertisement for something else. Why didn't you just link directly to the course you're trying to sell? 
Looks awesome! I have huge respect for labours of love like this. You've clearly put a lot of time into it and there is nothing more admirable than shipping something. I really like the artwork style and the intricate play style And don't let the tkinter haters get you down, there's no shame in loving your tools not matter how unpopular they are :)
what is use case for second loop?
I think Tkinter comes with vanilla Python so there is a convenience factor :)
I the python source available? I'm not on windows, so an exe won't really help me. I'd like to take a look...
Any plans to Open Source the code?
I tried running websocket reading in another loop on another thread as same loop can't be reused.
How long have you been programming ? I'm thinking of making a game in tkinter but afraid that I'm not experienced enough. 
Why? There are plenty of tutorials that do that. And sql is great! 
I think you should give serious thought into making a template email and running a standard mail merge in order to achieve your objective. It may be the easiest and cleanest solution. However, I do seem to recall some strange arbitrary limitations on that process, like being unable to merge into subject lines and recipient fields. In which case, yes, you can totally do this using xlwings module, which has a lot of features for manipulating data interactively inside of a spreadsheet like you describe. You could probably scrap the outlook portion altogether and just use python to send the template e-mail directly using some smtp and template libraries. You could literally put a button in a spreadsheet that causes python to iterate over your table and send out template emails if a row meets a specific condition. And at the end, you'd have what appears to be a fancy spreadsheet button that does some serious magic without a whole import/export/send workflow attached to it.
when i run it i get this: Requirement already satisfied: numpy in /home/pi/share/Projects/new-coder/dataviz/DataVizProj/lib/python3.4/site-packages
Many thanks for the advice Unfortunately I am not permitted to run a mail merge due to company policy. more importantly someone needs to checkover the drafts and press "Send" if that makes sense. (as they may need to adjust something or add an attachment etc) I understand you have CSV files etc and have readers which is what is the good thing, but that bad side is using outlook I have to use it as that is what the company uses (I cant break policy) If you can think of anything else please let me know and thanks for your advice
How do you run it?
Well, when i make my tools i use [this website.](http://patorjk.com/software/taag/#p=display&amp;f=Graffiti&amp;t=Type%20Something%20) EDIT: I misread the questions sorry. No i haven't encountered this before, but wouldn't this screw with the indentation?
Ok, what happens when you run the python 3.4 shell and do the steps manually? Is it possible that you are trying to run your program with the python 2.7 interpreter? Other than that, it could be that the package is broken. Have you tried installing a more up-to-date version of python? 3.6 is the current stable version.
django has a tutorial to get you started: https://docs.djangoproject.com/en/1.11/intro/tutorial01/
TKinter has a canvas widget that allows the drawing and moving of images and basic shapes.
I have encountered "a error" before and so can tell you exactly what's gone wrong. /s --- Try this: python3 -m venv venv . ./venv/bin/activate pip install scdl scdl --help --- EDIT: I just realized you wrote: &gt; running the command from the python terminal pip3 install scdl `pip3` is not something you'd want to try to run from inside a python shell / REPL (you'd want to run it in bash or something). What operating system are you using?
But example 3 says that the string `'hhhhhhhh'` should return 5, which I believe is not consistent with your interpretation. hhhhhh|hh hh | 1 hh | 2 hh | 3 hh | 4 hh| 5 If eight repetitions of the same character returns 5, I don't see how four repetitions should return 2.
These are /u/Professor_Xibanga's examples.
3 is wrong. x = ' asdf asd;f' y = x[:] x is y #&gt;&gt;&gt; True Strings are immutable, so slices are not required to return copies. You should *never* require two equal strings to be non-identical. Your only guarantees are * two *unequal* strings are non-identical, and * two *equal* strings where one is derived from the other by assignment (direct passing of reference) are identical. This idiom originates from `list`s, where identity is fundamentally important because of mutability. In that case a slice is guaranteed to return a copy, though I prefer the more modern `list.copy`.
well i was trying to make a python virtual environment with python version 2.7 but it doesnt seem to be working 
Looks like you(or whoever gave you that python file) did some copy and pasting without understanding exactly what the original(s) were doing(mainly this one I think http://scikit-image.org/docs/dev/auto_examples/segmentation/plot_join_segmentations.html). It says it found 0 segments because that is a true statement, it is not an error. What are you trying to do and what image are you working with?
I don't know man, the little green box to the right says it's correct... /s That being said I wonder how much else I've learned has been wrong.
Here's what I'd try: Set the new and old URLs up as a bipartite graph. Each old URL is connected to every new URL with a weighting. Then use networkx's [bipartite maximum_matching](https://networkx.github.io/documentation/networkx-1.10/reference/algorithms.bipartite.html#module-networkx.algorithms.bipartite.matching) function to find the the best mappings, according to the weights. What should you use for the weighting? That kind of depends on your situation. Levenshtein distance would probably work well if there are just minor string modifications between the URLs. (A Google search will find a few Python libraries, but I haven't used any of them.) If you wanted to be super fancy, you could try to get the contents of each URL from an archived version to compare to the new URL's contents. Also, I think networkx expects weights to be non-negative, and a larger weight implies a better match. If you used Levenshtein distance, a larger distance implies a worse match. You'd have to keep track of the largest distance and then subtract it from all of the others to correct the weights.
Yeah I keep regularly running into a handful of seaborn limitations and should probably just suggest or implement fixes for what I want. For example with distplot, I often want to overplot multiple distributions with the fitted normal distribution rather than the kde, but the fitted normal in seaborn (using fit=norm) is black instead of following the color of the series, so it means I have to do the normal distribution pdf myself with scipy and then manage the colors manually and then fix the axes so that histogram and pdf can be plotted together, etc. My next one is I imagine a common complaint that doing regplot or lmplot doesn't provide access to the resulting regression models, coefficients, p-values, etc. If I'm doing some data exploration and I do a regplot or lmplot and then want to know more, I have to then go break out statsmodels and do the regression again. I find myself liking some of what regplot does, but needing to add annotations to the plots or legend entries documenting the slopes, p values, r^2 values, confidence intervals, etc, so that my plot is actually useful for concrete decision making rather that just illustrating a relationship. If seaborn provided a way to return the statsmodels model or an option to include regression info on the plot, or a way to automatically do a regplot based on a previously fitted model. I get that each of these tools lives at a certain fidelity level and that an increase in fidelity requires switching tools, it's just a regularly awkward moment in my workflow and usually the point when my boss starts getting impatient if I'm doing a live "sure let's look at that data right now!" session. 
Thanks for the answer :)
thanks
Really cool work. Thank you for sharing the source. Do you just host the bot on a VPS?
matplotlib's themes and changes to defaults in 2.0 was justifiably strongly influenced by seaborn since almost every matplotlib-related blog post for 2-3 years mentioned using seaborn to make plots look better. Half a dozen other projects like prettyplotlib also got rolled into either matplotlob, seaborn, or both. Keeping up with it all is hard. I've still got some brewer2mpl stuff I need to convert to I think Vincent or something, though now that I think about it, the brewer colormaps are probably buried in matplotlib nowadays...
Like Siri or Echo, Alexa. Send a message, check a mailbox, write a note or create a todo list. 
Thanks a lot :) and yeah! I have a Droplet on DigitalOcean and that's working out perfectly - I get to learn a little bit of Linux too while I'm at it :) 
I wouldn't worry about it much; `is`/identity is one of the most misunderstood language features in Python, but the ways it's misunderstood in rarely actually matter.
You don't seem to mention that the executable is a Windows .exe. No Python source of course, so usable only on Windows.
No not really, just barely getting into Python and wanted to make sure these were somewhat accurate for my own knowledge. I know sometimes these types of articles etc can be misleading.
This is something I came across just last week: http://wiki.c2.com/?ObfuscatedPython
That's magnificent. Yea i assumed it would have to be pretty mundane, still--how cool would it be if people were writing working programs that were Art in themselves when source was shown? 
I think you would definitely be interested in some of the winners of the international obfuscated c contest: http://www.ioccc.org/years.html Some of those entries are mind blowing
Well, that's exactly how you learn and become experienced. As long as you're not trying to do too many things at once. Just watch YouTube videos and google stuff until you get the hang of it. I suppose conceptually the only thing you need to know to make you have an easier time with this is object orientated programming. If you know that then tkinter is easy, just learn what classes and functions you'll be using often. If you don't know that, tkinter would be a good introduction to it and should be something you know for programming, since it is used in pretty much everything.
Thanks for pointing out, I dint know the temporary keys which AWS was creating were "real" keys. I have fixed it. Please continue to use pyfidde.io and let me know suggestions / improvements. Thank you :)
Haha, its ok, anyways Please continue to use pyfidde.io and let me know suggestions / improvements. Thank you :)
Hey I have added basic keyboard features, please checkout and Please continue to use pyfidde.io and let me know suggestions / improvements. Thank you :)
I will plan to 3.6 in the next few days meanwhile, Please continue to use pyfidde.io and let me know suggestions / improvements. Thank you :)
I will look into adding some commonly used packages after quantifying what packages people are trying to add on the fly. I have added basic keyboard shortcuts, please checkout and I plan to added py3 support soon meanwhile, Please continue to use pyfidde.io and let me know suggestions / improvements. Thank you :)
Thank you, Please continue to use pyfidde.io and let me know suggestions / improvements. Thank you :)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) https://i.imgur.com/TfdC6y2.png ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[state_of_imgur](https://np.reddit.com/r/u_imguralbumbot/comments/6i1huv/imgur_has_gone_to_shit) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dk9ps1a) 
Hey I have seen your email as well, Isolated? Yes and no. It is isolated from the main web app, but the execution is done on aws lambda which *sometimes* reues the same container. The envs in the container die when the container dies which is a few minutes. Most of the envs are concerned only to that container and pose no harm except for access and secret keys. I have fixed that, thanks for spotting it :) Please continue to use pyfidde.io and let me know suggestions / improvements. Thank you :)
Now get out there and build stuff!
Have you taken a look at any of the resources in the sidebar? There's also /r/learnpython.
IRC is always good for bots.
This is actually really cool, the way you worked out primes was incredibly simple, of never thought of it before. I starred your repo because I like the work you've done!
It's actually not that bad for fairly static and basic GUIs. Writing an internal too with it right now
Fair. So, yeah, to reinforce the article, this is pretty much the same pitch I give. I even bring up that it's a Monty Python reference. The strongest quality that Python has, in my opinion, is that you can start and end with it. It's more accessible to beginners than a lot of other languages, yet there are some major enterprise-level websites out there that run on it.