Show us a better way, then. Make your perfect programming language a reality. If you get pushback from the developers of the language that's close, then do it yourself. If you build it, they will come (if it was a good idea).
This is click bait. Follow the Link that InfoWorld askes for an e-mail to spam before you can see the article. Don't post that shit here.
Ah yes, the child lashes out by calling everyone trolls, assuming that makes them right. Grow up. 
There are free courses covering Data Science and Machine Learning on edX.org (Data Science Essentials) and coursera.org (Machine Learning). You might want to investigate those. If you prefer learning from reading books there are a lot of books on these subjects from a variety of publishers (O'Reilly, Packt, etc). There are also some excellent video series on YouTube covering Machine Language (search on Google for "youtube data school machine learning"). 
plus accessible and efficient libraries for DL, such as Theano, and TensorFlow's through Python bindings. Also, there's PyTorch now.
People in my office have been building models with arcgis modelbuilder and outputting them to python, and lately it has been my job to un-fuck the results.
&gt; Just because you lack experience or imagination doesn't mean it doesn't happen. Resorting to ad hominem attacks instead of providing evidence. Yes, this can happen. Yes, it does happen. That does not mean it is a recommended way of defining functions. It does not mean it is considered a best practice. If this is really something that is so disconcerting, something that is very likely to be a problem in a code base, you should be able to provide examples, specifically examples in the standard library where this is the norm. 
*Moving to GitHub. How could anyone forget moving to GitHub?*
&gt; how would you use the del x[key]? Just replace `x.attrs.pop(key, None)` with `del x[key]` for x in soup.findAll(tag, kwargs): for key in kwargs: del x[key] 
that seems to have stung. looking at your post history not very surprising either.
[r/learnpython!](https://www.reddit.com/r/learnpython/)
Hacking my way through matplotlib to make publication-quality plots...
Hmm.. you seem to have misunderstood. What I'm talking about has no relation to what you asked me for. If you have def foo(*, a, b,c): Then foo(a, b, c) Is a syntax error. I'm saying treat it as foo(a=a, b=b, c=c) Instead.
Are you making this overwatch thing with python?
Sure. Which is why I suggested the much more conservative syntax "foo(=a, =b, =c)" to Python ideas. It'd have advantages for sure. I just think a more radical approach would be better :P
You could fork Python and add the features you're asking for. I never said that you had to start from scratch. That's the beauty of open source.
(Why =None in your examples?) True. That'd be bad. 
Yes, I did misunderstand. Thanks for clearing that up. I still don't see the benefit. Wouldn't this introduce inconsistencies depending on how a function is defined? In some cases, treat the argument as a keyword argument (such as above), in others, map it to a defined keyword argument if their names match, in others treat it as a positional argument. I could still be misunderstanding, but that just seems like more complexity and less explicitness. 
Hmm.. is it not recommended to define functions that take arguments and then using positional arguments to call them? Because that's all that's required for the scenario I'm talking about. 
Sort of true. I've added short hand kwargs to mochi 
You're dodging the question. I could just as easily have used `a=3, b=7, d=22` and the situation is exactly the same.
It would. But I believe it'd be worth it. Mainly because I think positional arguments are super evil and bad and should be opt in. I've also suggested the syntax "foo(=a, =b, =c)". It's more explicit but longer. 
Ah, I misunderstood your statement in the context.
I misunderstood what you we saying in this example.
What do you mean by "run continuously"? Can you post the code?
I think what I meant to say is that A and B are blocking processes. You could think of each of them having a while(1) loop and in each iteration they either send or receive data. 
 Wow. Did not know that. As a mercurial person, I mourn. I always used to tell teams: Mercurial is mature. Even a large project like Python uses it. Looking at the discussions about the decision to move to Github, it seems mercurial as a DVCS was fine, and the primary motivation was "git is more popular, so we'll get more contributors."
You can by using different IP adresses. For example run one pair on 127.0.0.1 and one on 127.0.0.2 (you can use 127.0.0.1 to 127.255.255.254) If you should is a whole other question that is answered by others here
http://scikit-learn.org/stable/modules/feature_selection.html
Wrote code for OP. OP ran away without paying. Be warned. Don't accept work on reddit without advance payment.
Just finished up a Salesforce integration which filters contacts based off values within Salesforce. This includes M2M fields, 12M, 121, and straight up text/numbers. It's finished, it's finally done.
Wow, cool! What do you do for a living?
OPC-UA to ip21 and osisoft pi
pip is your friend for vanilla python: https://pip.pypa.io/en/stable/installing/ Anaconda comes with its own package manager: https://conda.io/docs/using/pkgs.html Chances are the package you need is available on both. 
maybe they can. I am still learning so I will look into these methods. Thanks for your pointers
Have you tried installing opencv for python in Windows? Jesus H Christ
Why should I use this instead of Cartopy?
Weird worked for me.
Why not use dask.distributed directly? Seems easier to do than using joblib.
My bad. I didn't encounter that and found some good library suggestions. 
I'm an actuary, work in finance, and think there is a huge opportunity in building actuarial modeling platforms. The 3rd party software in this industry is a joke. So I made this: http://uclatommy.github.io/Quantum/ It's basically a graph processing system like UE4 blueprints or Blender cycles, but you can author your own nodes in python or c++. Currently, it's in my private repo, but I plan on making it open source for osx. For windows, I'll probably license differently if I can sell it as enterprise software. I'm trying to finish up the project site and get licensing stuff together before I make it available for download.
`random.choice`. Also, post questions in /r/learnpython next time please.
I would like to somehow measure the amount of light, transmitted by the LED. Quite similiar to this. http://stackoverflow.com/questions/6442118/python-measuring-pixel-brightness
Why's Conda a hard requirement?
Thanks for the clear reply! I will try to use the relative luminance formula, it's quite similiar to what you referred.
Training neural networks to predict experimental characteristics of antibodies. I love python and bioinformatics.
Ah yes, there goes Windows, making things needlessly difficult again. Question: I usually use pip in a virtual environment, if I wanted to use this, would Conda support the same virtual env? As in, can I just download Conda, then use conda to install this into my virtual environment? Or will conda try and put it wherever it wants?
I changed the environment variable path through the system properties and that worked ! thanks
Figuring out a method to add edges in a networkx graph based on SF city streets.
I don't have any feedback on the script, just wanted to say thanks for hipping me to the fact that Libre Office can run Python scripts. 
Conda uses it's own virtual environment system that is extended to binary dependencies, so you'd have to set up an environment within conda. To be fair, compiling gdal and it's various deps is not a whole lot of fun on *any* OS.
Do traceroutes to the Alexa top 100 and graph those nodes. Ought to give you plenty.
Projecteuler.net #81-83 are the problems that taught me to use djykstras, each one has a set of I think 80x80 random nodes.
Working on a personal app to use some data from a CSV file on my past cryptocurrency sells/buys and combine that with the information from the trading site I use to make money.
This is the correct answer. `geoplot` means to be to `cartopy` what `seaborn` is to `matplotlib`: a way of doing a certain chunk of particularly really common operations more easily. It's targeted at exploratory data analysis. The hope is that it makes a lot of really common map archetypes into one-liners. This is a really good question though, it signals that I need to make the "why" clearer in the docs. I'm hopefully going to put together a presentation with a bit of geospatial-in-Python history and some before-after comparisons vis-a-vis `cartopy` soon.
All of the above is true. I did some digging in GitHub issues investigating this very issue and eventually found out that `cartopy` basically* can't be built at all using `pip` alone, so they've targeted `conda` instead for a while now. This library inherits this dependency. \* [Ok technically it's actually possible, just incredibly hard.](http://technicaldiscovery.blogspot.com/2013/12/why-i-promote-conda.html)
This worked nicely. I didnt realize I had the entire 127.xxx.xxx.xxx family at my disposal.
Your math is correct. In CS terms we would say this algorithm has a complexity of O(n^3) where n is the number of unique words in the input. Very clean solution, I like it!
That's a great point, str.translate is a single pass linear approach, while my code is also linear but requires as many passes as characters I'm stripping. Thanks for pointing this trick out.
Pyaudio is fantastic for reading audio files. I guess for terminology, spike = peak Try using peakutils. I had the most success using that to identify peaks.....Well I am on mobile and I can't close this to reread your post so please forgive me if this is unnecessary. Pydub is an audio processing library. You can use the dynamic range compressor to tame the peaks if needed.
Export your pip ENV to a requirements.txt, create a conda ENV, and pip install your ENV back.
&gt; Usage statistics &amp; market share of any programming language gives you an idea of popularity of that language among masses That's definitely not true.
Its a pain on Linux to. I just use Django.contrib because it isn't a pain.
Conda puts it wherever it damn well pleases son, I hope you brought lube.
Django does it some how.
You poor thing. 
Looks interesting. Will share with actuary friends.
Nevermind I was able to figure it out. Thanks!
It's fine to recommend using conda. But when I see a documentation page with installation requirements, I want to see a list of the actual libraries your project depends on and their required versions. There are quite a few users who don't use conda, for a variety of reasons, and the users who don't use a package manager that is already supported are a prime audience for such docs.
It's worth investing time in understanding scikit-learn. Either way, this page does contain actual examples that you can run. Scikit-learn documentation is worth it.
Yeah, I don't know when pyproject.toml will come. The benefit of the setup.cfg file is that it exists, and you can read it with the standard library. Convincing all the tools to support pyproject.toml is possible, but much harder in the short term (1-2 years) because of the toml dependency. A common way to do per file overrides would also be nice. Seems all the tools do their per file config a different way too. Do you have a full list of the tools?
thanks! :)
&gt; geoplot means to be to cartopy what seaborn is to matplotlib That was exactly my impression on browsing the page. I use cartopy a fair bit and it's a drag when you want to knock out some quick visualisations (but great when you need detailed control to make print-quality plots)
Not a big fan of lambdas here and I always feel that some of my colleagues overuse it and try to shorten the code as much as possible. With that said, great article that helped me to understand them a bit more!
Lambda is used heavily by codegolfers.
I would call the process conservative rather than terrible. You might be able to "game" the system by showing how your ideas would improve the standard library and by creating reference implementations.
* click photo of newspaper -&gt; scan -&gt; get text -&gt; summarize text Using Python 3.6 and OpenCV 3.2. as an MVP, I am focussing on: * Click newspaper photo, * Give an option to crop the desired area to get text from, * Dynamic thresholding method to clean image, * Summarize text, which is too naive but I am looking for extractive summarization methods which I can work later on Some more ideas: * Maybe create a tweet or something from the text ? * Automatic newspaper text area segmentation (which can be really cool feature) I've done a few things but not yet pushed my code to a public repo. It will be done soon :D 
I learnt a lot on algorithms using the rosettacode.org site which have many tasks related to specific algorithms. Maybe it could help you to? 
I'm not sure /r/python is the right subreddit for this if you're just asking about algorithms, which aren't really language specific, definitely check out /r/learnpython and may /r/computerscience. About your use of python: your Graph class holds a list of nodes and you add nodes graph objects but it never enforces any constraints (such as: edges must be between nodes that exist). In fact you never use nodes at all, outside of adding them. Also, you've built a 'start' and 'end' into your graph structure which implies the purpose of finding a specific traversal from a start to end, which is probably more specific than what you want from a general graph class. Lastly, consider slightly more descriptive function names. In particular "plot" is very vague and I thought initially it meant you were graphing or drawing the graph in some way. About Dijkstra's: you haven't implemented Dijkstra's. You've implemented recursive [depth first search](https://en.wikipedia.org/wiki/Depth-first_search). In your algorithm, from a certain node, you always follow the first outgoing edge to an unvisited node, then recursively explore that node. The result is that you return _all_ possible paths from start to end. [Dijkstra's](https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm) is meant to only find the shortest path (where there are no negative edges) from a start to an end. It does this by only exploring nodes in order of shortest total distance from the start. In your small_graph, it would explore: [(a, dist=0), (a-b, dist=1), (a-c, dist=2), (a-b-d, dist=3)]. It stops when it reaches the destination. 
Lambdas can also be used together with pandas for easier modification of values in columns. And of course sorting.
Ruby resisted moving to Github for years and finally relented. I don't think any major language can afford to not be there these days.
&gt;Admittedly I've been doing this a long time and learned all of it the hard way As someone who has struggled with installing packages on Windows (but managed in the end) this really hits home. It's a shame `pip install package_name` doesn't work out of the box even nearly as well as on Linux.
[removed]
You can try [Splinter](https://github.com/cobrateam/splinter). If you only want to log in, Selenium may be overkill.
Is there any need to use chrome and not requests?
\+ To automate the boring things. The class is useful for taking things learned on the vids and taking them on to other projects. Plus, the book is free online to use a resource I would also suggest some of the oreilly vids such as : Introduction to Python by Jessica McKellar She is very good instructor to follow along with for getting started
If you want to have Python control the mouse and keyboard to do this, I highly recommend pyautogui. Solid cross platform module with really good documentation.
&gt; geoplot means to be to cartopy what seaborn is to matplotlib This is a tagline that should be right at the top of the landing page! Incidentally it sounds great; I'll have to try it out next week :)
[Absolutely nothing!](https://youtu.be/dpWmlRNfLck)
Get some ntlm-auth proxy, like cNTLM, NTLMAPS ... Some ten years back, this is what enabled me to use std. tools behind our stupid FW.
By sandboxing the whole python process, you limit what the malicious code can do.
*waves to fellow Matrix user*
Thank you, I have started and stopped a couple of times as well. Was in a COHORT to try and learn it, but nothing really seemed to click. Thanks, I'll keep at it. I do think programming is going to be a great career option in the future. -Blu-
Example of such a package?
Experimenting with async web apps.
There are different Python modules that are needed to be executed from a single software platform. Following are the tasks that we need to take care of. • Write a DLL to start Python interpreter and maintain its instance • Host Python Interpreter in ActiveX component (written using .Net) • Execute the different python modules using this interpreter So in order to host the Python Interpreter in Activex, I need to get some kind of a handler to the Interpreter I hope I was able to elucidate my query
Thank you, I managed to generate my own data sets yesterday with different sizes after 2 redbulls and 5 chicken wings. Sorted the rest of the assignment out, thanks for your help anyway!!!
Build a single Python process and have multiple c++ processes communicate to it via sockets 
Not really, due to Python having many global variables. You can do it with Lua since all of the interpreter state is in a struct.
Do you have any code we can look at? I'm interested in this.
Nothing other than simplicity.
There are multiple test modules written in python. However, the testing platform which is conversant with .Net and C# would need a C++ adapter and activeX code to execute the python modules through a single spawned Python interpreter.
But splinter is the same, it's just an abstraction layer on top of selenium
I've been dabbling with Python on and off for a just over a year now. When I first started I was learning 2 I've come back to it recently and moved to 3 without any real issues. There are a couple of minor differences, but it really doesn't seem to be anything major. Print is handled slightly different (but is backwards compatible), the way inputs are dealt with is slightly different (but better IMO) and a couple of other things that don't jump to mind. All told it's really not a huge difference and as 3 is the way forward embrace it as soon as possible. You may come across some libraries that haven't been ported over yet, but as a beginner I doubt it's going to cause you grief.
I second the call for the ability to extend built in classes. In fact, I've [done some work in that general direction.](https://github.com/fyngyrz/pyex)
[removed]
I would say generally you can use lambdas if the function they generate has no distinct semantical meaning or the additional indirection is just not worth it. I made a Cache class with a get method similar to how dict implements it but if the key wasn't found, the new_value would be inserted and returned. foo = cache.get("foo", new_val =expensive_operation(option1, option2, ...) ) The problem is in this case expensive_operation is always carried out. But if the cache already contains the result, I would throw the new result away. This problem is elegantly solved if Cache.get expects a callable that constructs the new object and is only called if the key is not found: by lambda: foo = cache.get("foo", new_val = lambda : expensive_operation(option1, option2) ) by named function: def foo_builder(): return expensive_operation(option1, option2) foo = cache.get("foo", new_val = foo_builder ) Here the foo_builder is an unnecessary indirection. Sometimes I also used lambdas in reduces if I want to use a method: foo_sum = reduce(obj_list, lambda x,y : y.foo(x), x0) again defining a fooer doesn't clean up anything. def fooer(x,y): return y.foo(x) foo_sum = reduce(obj_list, fooer , x0) 
I haven't heard of a way, but if anyone else has I'd love to hear about it 
You would have to transpile your Python to JavaScript using something like [Transcrypt](http://transcrypt.org/).
&gt; you can't do that with anything really In principle you can dump any kind of process, object or library-state to disk and reload it later. The question is just how many fixups you have to do to tie up the loose ends (e.g. take care of open sockets, for instance, pointer fixups etc.) I've done this e.g. with javascript and cap'n proto is one approach to do it with C++ objects. If python lets you substitute its allocator for your own, I would imagine it's possible by putting in some sort of arena-allocator, and then you could dump the entire arena memory block to disk. I will agree though that it's definitely not a preferrable solution tho if there is a different way to solve the problem. If saving state to disk is not a requirement, then using pipes/sockets would most certainly be a more portable/robust solution...
That doesn't seem like what I understood the OP talking about. 
You are using http://pythonnet.sourceforge.net/ ?
/r/learnpython But to answer your homework question: for i in range(len(w)): print w[0:i+1] 
I'm learning to use Pandas with the [Introduction to Data Science in Python](https://www.coursera.org/learn/python-data-analysis/home/info) coursera course. Progress is slow, but I'll get there. It is part of a larger effort to learn machine learning. 
Why are you not using IronPython?
Selenium can take the screenshot for you automatically, and the browser doesn't need to be full screen. It will capture just the window.
Pandas is also where I find myself glad that I don't have to continually define and document functions every time I want to `df.col_name.apply(...random exploratory stuff... )`. So I'm glad they exist but yeah mostly they are probably over used. 
thank you.
Thanks! That makes sense. But my problem is I tend to have algorithms as a goal I have to reach. So I end up writing it in my own way without actually following what the algorithm says!
Should work, but I'd definitely recommend against it. Transcrypt, while an amazing accomplishment... adding the chrome API on top of it? Seems like a nightmare. I'd be interested to see someone accomplish it though. Perhaps I'll take a crack at it, I have the day off. Could probably even make a library to ease the pain points. The more I write this comment the less I'm recommending against it. It actually seems like a fun exercise.
I need to take a look for myself at the way the js-sdk handles it but I can assure that we will have support eventually. The short term fix *might* be doing what the android-sdk does and running a JS VM for the decryption parts, but eventually I'd like to have bindings for libolm. So yes, but no time frames because I need to research it. **EDIT:** Research done, See https://github.com/matrix-org/matrix-python-sdk/issues/100
spike/peak in **what** is the thing i don't understand. i see words like spectrogram, segmentation, etc and don't fully apprecate their meaning and differences. i'm basically looking for aggregated loudness (irrrespective of frequency) over time. `peakutils` looks like potentially a good suggestion instead of a manual iteration/comparison between frames. thanks no, i'm not looking to alter an audio at all. looking to just identify/count the peaks and (especially) gaps and their times. 
Trip routing is usually an optimization problem, not prediction. There's usually multiple route for each origin/destination and you need to choose the best route that minimizes distance and account for whatever else you care about
Let us know if you go for it - would love to hear how it goes
thanks for the tips! just to be clear, by `pyAudio` you mean this http://people.csail.mit.edu/hubert/pyaudio/ / https://pypi.python.org/pypi/PyAudio and not the one i linked above, right?
This is pretty amazing. Any chances of seeing a black card generator? Might need a special case for handling the blank, since they effectively skip one word as far as the chains are concerned.
I am not sure if this is exactly what you are looking for, but using [native messaging](https://developer.chrome.com/extensions/nativeMessaging) you can write a Javascript extension that launches and communicates with a Python (or other) application. I've used this in the past when I need to do something through the browser that cannot be done with an extension (eg: saving something permanently to disk, launching an external process, etc)
Just following up to see how it's worked for you.
Couldn't you use [brython](https://brython.info/) as well?
Binds. Any widget based framework is going to have a bind callable method. Here lambdas are essential as they are the only way to add unique arguments to the function you meant to call. 
&gt; for i in range(len(w)): &gt; print w[0:i+1] what does the w[0:i+1] for
It's called slicing. Take a slice of w from before position 0 to before position i+1. This can be done on any iterable, like a list or a string. For example: print 'apple'[0:2] 'ap'
Writing a Knockoutjs static SPA that integrates with a Flask API that acts as a proxy API to wrap around 23andme's API. 
Another more subtle point for me is that it looks more like math than other languages, especially comprehensions
oooh I learned a new tech thank you! :D how bout the len(w) tho?
I'm not sure if it affected the decision in anyway, but there was that meltdown thing that happened a few days ago
Will do thanks! Also, I was talking about large_graph in my previous reply. :) Appreciate the time you've taken to reply! :)
That's the buffering feature of python; it has nothing to do with pycharm. You need to add `flush=True` to the print statements. print("E", end="", flush=True) If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. 
On the other hand, in my opinion that's the worst reason to stick with a certain version control system. Use the tools you deem best! (Not to really say anything about mercurial -- I haven't really used it)
Working on a blog series for relative beginners on how to code a text based RPG in Python 3
&gt; but not much extra. I think it does: built in CI, per environment builds, consoles and isolated deploys, slack-like commands (in comments, issues), kanboards (github followed with less features), free private repos, githab pages for any static site generator, some settings (don't merge a branch with "WIP"),…
Thanks is a bunch for the reply. I thought it was part of pycharm because when I ran it in idle I got the delay inbetween characters that I wanted. But oycharm did what was in the gif.
Somehow Mercurial-based solutions never got as popular as their Git-based counterparts, a real pitty because I love hg's CLI, it is highly Pythonic so to speak. Git has Github, Gitlab and now Gogs/Gitea, for Mercurial I've never found anything as good as those (Linux based at least).
Yes. Very useful. All the times I've had to touch ACI have been through the Python SDK for it. Go hit up /r/learnpython and start learning basic Python, then pick something you have to automate and start work!
`git` has better tooling and is overwhelmingly more popular. I'm not sure the tool itself is better though.
Pastebin of this log so it's vaguely readable: http://pastebin.com/ihij9uH3 Honestly I have no idea from what's in that log, maybe head over to https://github.com/jupyter/help and make an issue if there isn't already something there answering your question. 
Check out GROKKING Algorithms It explains the basic algorithms with graphical and intuitive examples plus it gives the code in python Should come in handy.
As an `emacs` user, I must also admit it's support for `git` is far better. bitbucket seems to be the most popular managed hosting site for native mercurial repositories. I'm not sure if there are any good open source projects with the same kind of features.
python code at pastebin where it's readable: http://pastebin.com/Lz9cBbQq
So much of ACI is based around Python that I personally found it to be the path of least friction, though I admit I knew Python before ACI even existed. I also knew Perl, but I'm not a disciplined enough coder so all my Perl ends up as Write-Once-Read-Never. I don't know of any Perl SDK for ACI.
At the time the discussion took place, Gitlab CI has just been introduced, and it's features weren't enough yet (no windows at the time). Most of the other features weren't there yet early 2015 IIRC. Probably if a new move were to be discussed at this moment, Gitlab would stand a better chance.
Why are you asking here instead of /r/javascript?
The difference is because one is a nested loop. It has nothing to do with being a list comprehension vs. a dict comprehension. Turn your first one into a list comprehension to see what's happening: &gt;&gt;&gt; [(a, b) for a in range(1, 11) for b in range(-1, -11, -1)] [(1, -1), (1, -2), (1, -3), (1, -4), (1, -5), (1, -6), (1, -7), (1, -8), (1, -9), (1, -10), (2, -1), (2, -2), (2, -3), (2, -4), (2, -5), (2, -6), (2, -7), (2, -8), (2, -9), (2, -10), (3, -1), (3, -2), (3, -3), (3, -4), (3, -5), (3, -6), (3, -7), (3, -8), (3, -9), (3, -10), (4, -1), (4, -2), (4, -3), (4, -4), (4, -5), (4, -6), (4, -7), (4, -8), (4, -9), (4, -10), (5, -1), (5, -2), (5, -3), (5, -4), (5, -5), (5, -6), (5, -7), (5, -8), (5, -9), (5, -10), (6, -1), (6, -2), (6, -3), (6, -4), (6, -5), (6, -6), (6, -7), (6, -8), (6, -9), (6, -10), (7, -1), (7, -2), (7, -3), (7, -4), (7, -5), (7, -6), (7, -7), (7, -8), (7, -9), (7, -10), (8, -1), (8, -2), (8, -3), (8, -4), (8, -5), (8, -6), (8, -7), (8, -8), (8, -9), (8, -10), (9, -1), (9, -2), (9, -3), (9, -4), (9, -5), (9, -6), (9, -7), (9, -8), (9, -9), (9, -10), (10, -1), (10, -2), (10, -3), (10, -4), (10, -5), (10, -6), (10, -7), (10, -8), (10, -9), (10, -10)] As dictionary keys are unique, only the last one applied counts. So most of those values are being discarded. 
This is exactly what I need. Thanks man.
yup, bitbucket ignored a [request](https://bitbucket.org/site/master/issues/2874/ability-to-search-source-code-bb-39) for a fucking CODE SEARCH feature for 5 years and counting...
Maybe they're just happy it's using Git in general?
The nice thing about YAML is that pretty much anyone can read and understand it. Programming languages are different, and even though Python is pretty easy compared to others, power users will start using concepts that are not so obvious for non-programmers (and some programmers). My worry is that Ansible will get infinitely better for just a portion of the people currently using it. In a perfect world, everyone who uses Ansible would know how to program in Python, but until that day YAML provides a low barrier to entry.
As a dev with a C# and Python codebase, we use C# libraries when we have needs that .Net is great at meeting and Python with loads that Python can solve. If we give up CPython libs to use .Net, we might as well use C#, not Python. IronPython is only valuable if you place value purely on specific syntax style, and we don't since we all use both. Additionally, IronPython does a poor job with Python 3 development, making it not viable for use anyway.
Out of curiosity, why are issues staying? 
yea, that was the tenuous motivation behind the first half of my comment
Thanks for the detailed answer! That's put my mind at ease :) 
Yea it basically ate an entire afternoon getting it to work for me. With Conda &amp; Conda-Forge its like 'conda install gdal' hit 'y' and wait 10min for it to install.
Staying with something because you like the name
Could you provide a link? I have no idea what you're talking about.
PYCHARM don't try anything else
[removed]
Not wanting to hurt the feelings of the people who picked it.
Howso? I haven't used gitlab but my interest is piqued 
Could you expand on that please?
It was very stream of conciousness, just decided to roll with it.
There are a couple of options for doing this sort of automation. First, you could see if the timesheet service has a web (REST) API. In that case, you might be able use their Python SDK (assuming they have one) or formulate your own using the [Requests](python-requests.org) library. Secondly, you could attempt to web scrape (perhaps using Beautiful Soup) and again use Requests to send/receive requests. This will be far more difficult and might be impossible without the use of a fully-automatable web client to simulate a browser.
No experience, but my rules of thumb in rough descending order of priority: 1. The one that has readable/useful documentation 1. The one with tests and reasonable coverage (CI is a bonus) 1. The one that has had a release on PyPI in the past year 1. The one with multiple contributors (if original maintainer gets bored, someone else might pick it up) 1. The one with an API you think is pleasant to use 1. The one with more followers/stars/forks (on GitHub/BitBucket/whatever...indirectly related to 4) 1. The one with "nice" code that you might feel comfortable maintaining if nobody else will.
Check out selenium
Spyder
To be honest mate, you're being pretty unpleasant here.
Rhodecode has that :)
Yeah.. so how would I know this without traversing all possible paths? Sorry if my question sounds basic. 🙁
See other reply.
It's not really that stellar, but there's one such project under active development: [Kallithea](https://bitbucket.org/conservancy/kallithea/)
not a great attitude, my dude
For task management I'd just use Jira or something, but it would be interesting to have it integrated into the whole thing. I'm now checking out gitlab thanks to your post. I should add though that I haven't run into any problems in using github issues for bug reports. It works pretty well even without any enforcement stuff. 
[removed]
Yay! At one point I wanted to do some casual work on the python codebase but was turned off by how tricky it was to contribute. Moving to github will be awesome for people like me who are already very used git/github workflow.
&gt; I should add though that I haven't run into any problems in using github issues for bug reports. When you reach a certain scale, you want to be able to force your users to say which version and which OS they are running on, as well as "pool" the bug reports to the associated branch to release a patchlevel release. While git does support the idea of release branches, github pretends there's only master. You can't mark a branch as "this is a release branch, don't ask me to merge it to master" nor it allows you to easily assign PRs against the bug report and simplify forward porting or back porting onto new releases (e.g apply this PR to both release branch 0.5 and 0.6). Everything must be done manually. 
That's a good question. I'd really like to see some real-life examples where asyncio made a big difference. First thing that comes to my mind is webservers, e.g. https://github.com/channelcat/sanic Even though I get the concept (I think...) at the end of the day... :) http://lucumr.pocoo.org/2016/10/30/i-dont-understand-asyncio/ BTW you can find a list of asyncio-compatible libraries here: https://github.com/aio-libs
http://greenteapress.com/wp/think-stats-2e/ This is a free textbook that teaches statistics through the use of Python. Should help you out.
Chrome extensions are written in pure HTML and CSS and javascript nothing more. and not that hard. But if you need to use python instead of javascript You Can !!. That by Compile Python to Javascript using something like Rapydscript just install it. and enjoy it 
I tried this some time ago but couldn't get it to work. brython works at first but then gets blocked by chromiums security features. Transcrypt works well but i can't import any modules. Can't import from module '__future__' Please notify me if you can get it to work.
&gt; By storing a graph of snapshots rather than diffs you completely avoid problems with different text formats, line endings, text vs binary diffs, etc. The fact that Mercurial stores diffs is pretty much an implementation detail, though, you see it as snapshots. All diffs are stored as binary diffs, so there are no problems with the things you mentioned.
Yeah, it's funny how it works. People are drawn to where everyone else is. That's why there's only one Facebook, one Twitter, one AirBnb (pretty much) and one GitHub. It's kind of sad, in a way, but hard to avoid. We use Mercurial at my work, though (200 people, Windows), and are very happy with it.
This course will not teach you how to make online (browser-based) games. They use SimpleGUI instead.
Yeah, git is more popular, mostly because of GitHub, I think. Is the tool better? Depends. I find it much less intuitive, but that's habit. Mercurial is also highly extendable.
This is a big problem when dealing with python scripts for LibreOffice. I used the pyuno documentation: [here](https://wiki.openoffice.org/wiki/PyUNO_samples) and [here](https://wiki.openoffice.org/wiki/PyUNO_bridge). Everything regarding python for OpenOffice applies to LibreOffice. **BUT** you should observe that python for LibreOffice demands knowledge of how instances and objects works, I had a really hard time trying to understand that. You should refer to OpenOffice api ([link here](https://www.openoffice.org/api/)) for more information about that. For example: you probably will have to deal with dial api on [com.sun.star.awt.UnoControlDialogModel](https://www.openoffice.org/api/docs/common/ref/com/sun/star/awt/UnoControlDialogModel.html) Best regards!
Honestly I would just search the code base for `format` and replace them manually, but there might be a script you could use instead. I don't know it, though.
Just my 2 cents (didn't test anything) but I'm pretty sure you could do that with a regex and some bash-fu
This will 100% be handy. Thanks mate!
Now you have 2 problems. :)
One of my favorite libraries. So versatile 
That is a fair point to consider. I wonder how often the `'{0}: {0}'.format(input())` case would occur?
I alternate between: * vim (yes, I know it's not a "full" IDE) * Atom.io * PyCharm * Microsoft Visual Studio Code FWIW, the project I lead is entirely Linux-based and it's complicated (too many dependencies to run inside of an IDE), so my IDE needs consist mostly of editing/linting/simple testing.
That error means you are running python3 code in python2. I'm guessing you are on a mac/linux. If so your atom is using the python2 that came with your mac/linux, not the python3 that you installed. You need to look up instructions on how to set the version of python that Atom uses. If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. 
Great chapter on descriptors. This was on my todo list for my project. Perfect timing.
No idea, I don't use mac or Atom. But google has many suggestions. Did you try [this](http://stackoverflow.com/a/36710442/2229945) or any suggestions in [this thread](https://github.com/lsegal/atom-runner/issues/124)?
There's emoticon support though...
Yeah, no. Names are important too. And definitely can contain clues on expected quality (or the lack of it).
Okay then, just a "i'm sorry but you posted in the area" would have sufficed...
fair
It's really easy to write and run. Just fire up an interpreter and go.
To be fair, they already have code search in Fisheye so it makes sense.
Anything but Go.
 wd.maximize_window()
I started using Python this week. I love how easy it is to learn. So far I started making a control program for a cannabis grow room, including temperature and humidity control. I also made an irc bot that my friends can use to turn a light on and off on my desk. I'm really excited to continue learning.
You can begin from this tutorial. https://docs.python.org/3/tutorial/ If you don't understand, google it.
When you gotta touch some java code at your otherwise Python programming job... sigh
Mine's more of an occasionally touch Python at my Java job.
 1. PyCharm 2. VSCode (plus Python extension) 3. Spyder
Have fun and be stubborn https://automatetheboringstuff.com
Oh! Alright. I think it's starting to make sense. :) Thanks again. 
Yes, I agree with this. For now, django-measurement is rising to the top of the pile.
But there's a performance trade-off. That said, certain classes of AWS instance are virtual machines. You can run into issues with bad neighbors that randomly kill the performance of your app. If we're talking about general secure-software principles, you write your code in such a way that it has only the privileges needed to do what it has to. As an example, web-servers will bind to ports using a privileged user, then spawn a bunch of worker processes that can barely do anything. SE Linux provides a pretty powerful way of controlling privileges on a case-by-case. Still, in this case, we're generally dealing with the potential that software gets corrupted by some kind of buffer-overflow. We still basically assume that the software itself isn't malicious.
MIT 6.00.1x is great if you need to learn some of the concepts going on in CS along with programming, it uses Python as well. The lectures are pretty dry, but extremely thorough. You can take it for free on edx. Automate the Boring Stuff is great, too.
Not sure I fully understand but you want to take as attributes the drive from and to, other geo attributes, and try and predict the 'goodness' of your route? What is your use case for the model? Who do you plan to use it and for what purpose?
The many open source libraries. Basically, I'm here because everyone else is. The language is ok too, although I tend to prefer ~~strongly~~ statically typed. It's a small concession. Not complaining. Edit: /u/racech kindly pointed out the error of my ways (see below)
Me and a friend are writing it for commercial purposes. But we plan to release for free, so that people have a standard go to module for handling inventory very soon. I'll make a post when it's ready
I found the WPPM executable under the Python\scripts folder, and found the Viewer.py script which is similar to what I was going to write. I'll keep digging and experimenting. If you don't mind, maybe I could PM you if have more questions rather than continue this here.
Spacemacs. It's Vim + Emacs. Use pdb++ for debugging.
Is launching a bunch of threads costly? Do you need to control where context switching happens? Use asyncio.
Thanks Will Try
Thanks :)
I just migrated tens of gigabytes of data from a nosql database into a sql store on the cloud. Took me only 3 days. My side project is using algebraic solvers to solve probabilistic equations. I am writing a web scraping tool to help me find new recipes which fit my diet and restaurants which will meet those diet preferences. Python is super versatile and development time on small projects is very fast. 
TortoiseGit is a totally different project, I wouldn't even compare the two. And TortoiseHg is python+qt-based and cross platform, which means you can invoke it from the command line under linux -- e.g. "thg ci" to pop up a gui for cherry picking &amp; committing, then back to command line again. I'd love to find an equivalent that can be invoked without interrupting my workflow on commandline like that. Git Extension's screenshots look nice, but it also looks Windows-only :(
Pycharm offers the option to refactor those, one by one.
Unless you have only very simple strings (no multiline, no auto concatenation, no escape caracters, no comments after it), I strongly recommend avoiding regex. Use the ast.
Unfortunately for you, I am slightly less lazy. https://www.dreamsongs.com/WorseIsBetter.html
Not exactly an answer to your question, as this article more so talks about if async is "beneficial" from a theoretical perspective, but here is an article I wrote on that subject. https://hackernoon.com/async-through-the-looking-glass-d69a0a88b661#.o32w9v045 But as an answer to your question, I would say the most common use case for asynchronous is a web server. And more specifically, one that has long running connections (such as web sockets or a message broker such as rabbitmq). I use aiohttp in prod, and it's serving us well. Limiting system threads on a host with multiple docker containers is actually a pretty big deal. Edit: In addition, asyncio is beneficial really *anywhere* you would normally use threads, as they dramatically reduce number of bugs. Async is much easier to code/reason about than threads in my mind as there are no locks/race conditions.
The story of a developer 
I've found it easiest to simply familiarize myself with the differences between PyQt4 and PyQt5 and then just follow along with example/tutorials for PyQt4 (which are more plentiful). There's only a handful of major API changes from v4 to v5. Off the top of my head, you'll need to change most of the classes which were contained in QtGui in v4 to QtWidgets when using v5. I think in v5 there were two or more ways of connecting signals and slots for event handling. Now I believe only one of those methods works in v5. Finally, as of 5.6 I think it was, if there is any place in your code which throws an exception that you don't handle - the underlying Qt Framework will send an ABORT signal to your OS and the app will quit. So some extra care with try/except should prevent most major issues there. 
&gt; as if they're all the same Pretty much the case, as long as you don't switch paradigms (functional, declarative etc). &gt; advised against learning different languages in the future WTF? What kind of professor advises against learning in any topic? Just ignore that bit and learn other languages as soon as you're comfortable with python. There's always insights to be gained, even from various implementations of the same thing.
Easiest thing to do would probably be to use selenium with the webdriver. That way you're just scripting a webbrowser instead of trying to figure out handling requests/cookies, etc
You're right. Can you name some examples? 
While they're not all the same, there are some stark differences. I think that as a programmer it's good to know a small handful of languages. I don't, however, think that it's good to do that quickly, and that to start with people should stick with one language. I didn't learn Python as my first language, but it is by far my favourite nowadays. The reason is that the syntax is very clear, it values explicit over implicit, the libraries are excellent for scientific computing, the type system is loose.
Matplotlib. So versatile, name sounds like shit. Its just a list of words.
The language is approachable for beginners but scales up to arbitrary levels. The standard library is the best I've seen by a lot. There's TONS of libs for Python. And not just overlapping crap libs like for JavaScript/node but actual good libs that cover a huge area. 
Don't do that! The AST doesn't preserve comments or formatting so you can't roundtrip code off it. You can look at the library baron for something that will actually round trip cleanly but they aren't up to modern Python 3 yet. So you would probably have to fix some things yourself. 
Post code to pastebin and link to it here. Describe exactly what you want, no-one here has heard of qweb.
First of all, ignore what prof said about not learning. Learn whatever you like, and use the best tool for the job. That being said, I have used many languages in my life and I love python and have been migrating to it over the past year, mainly because: - it is very clean and readable in general - uses indents instead of brackets or semicolons per line, overlapping a bit with my first point but honestly, read an algorithm in python, then read the same algorithm in other languages, if you stare at code all day the value of clean code cannot be overstated - both objects and functions are first-class in python, meaning no more choosing between paradigms, and you get all the benefits of both in the same language - the python standard library is awesome and includes the best features from many other languages, and it continues to expand - doing certain things in python is just simpler / more intuitive, ex: for loops in python can go through a range of numbers as usual, or iterate through a list, or a string, or a dictionary, or a custom object collection, without needing different loop syntax for each of these cases - interpreted dynamic variables means fast prototyping / testing, although other languages can also have this - list / dictionary comprehensions, will let you look this up on your own to save space - generators are awesome, and let you easily create iterator / search functions for custom objects - tuple packing and unpacking, ex: return x, y, z | returns (x, y, z) without an extra line, ex: x, y, z = point | assigns all three variables using the point tuple in one line instead of three - python has become the language of choice for many universities and pro devs, so there is a growing number of solid third-party libraries available now, including pygame, numpy, scipy, requests, scrapy, wxpy, sqlalchemy, and matplotlib, just to name a few
* It's syntax at times makes your code read naturally, eroding the barrier between programmatic and logical thought. * It's pretty much the language of ML and NLP right now
I took a Java class in high school (and I have to take another one now in college), but I picked up Python in the years in between What I love about Python: - don't have to declare types - because of this, lists/sets/whatever can have multiple data types `mylist = [1, 2, "345"]` is fine - and this means there's no fixed memory allocation either: you can just do `x = sum([int(d) for d in str(2**1000)])` and that actually works - dictionaries are actually a builtin, instead of that `java.util.HashMap` BS - list comprehension - iterable strings - negative indexing of iterables - `a == b` works even on strings - builtin functions `map(), join()` I'm sure there are others
* A README file with overview, usage and purpose of the whole project * HACKME file with brief overview of internals and a map of what is where * as for the code - I want to see a structure in it (other than a heap) Think of reasons of why someone will be looking at the code. They either want to learn how it works, or find some place of interest quikly, and than understand how its used and how it could be modified.
The reason your professor considers these languages the same is because they all do things in a very similar fashion; Python is considered a multi-paradigm language but primarily an imperative language. While you are learning to program it is best to refrain from straying into other languages, your focus is not so much Python as it is to learn to break down problems and construct algorithms to solve them. Python just happens to be the Swiss Army Knife that you get to solve it with, there are many things it is really good at, other things it is not so good at, but while you are learning this is not of importance to you yet, each language has its quirks and it is better if you do not stray too far from the path, least you cripple your own understanding.
I love your idea of a brief structure in a HACKME file. I've always found READMEs made by the people around me to be useless and trivial. Usually something like: &lt;name&gt; &lt;date&gt; &lt;what I had for breakfast&gt; &lt;contact&gt; &lt;files in project&gt;
Like many different posters already pointed out, python is just super easy to use and get started with. And while I've always been an advocate of python I recently found some things that bug me. 1) Debugging in python. Now I'm not sure whether this is due to PyCharm or due to the python debugger in general, but debugging in python is slow and tedious (for example if I have a list containing 40.000 elements I can only see the first 300 in the debugger). 2) Clean code. Now this is obviously a matter of discipline and not a matter of the language one is using, but I tend to get more messy when using python. Java kind of forces me to think more about my architecture along the way, while in python I just start a new script and BAM – suddenly it has 700 lines of code and is a complete mess. The second point is my own fault obviously, but if someone knows a fast and convenient way to debug python, feel free to point me to something. Regarding to what your professor said about learning different languagues: I think he's just wrong. Obviously you can do basically everything in every language, but a) some languages just lend themselves better to different tasks (you wouldn't use Scala for client side web development tasks), b) there are differences between languages in terms of features (e.g. type strictness in Swift) and paradigms (e.g. functional programming), c) if you're looking to score a job as developer you might not want to restrict yourself to one language only and finally d) I think it's just fun to learn new languages and it definitely broadens your horizon.
Python is strongly typed, albeit dynamically. You probably meant statically typed - writing this just for the sake of less experienced people visiting this thread.
I'd add that it's easy to read, and you'll read more code than you'll write.
Thank you. This is a nice option. 
The QT option worked for me, are you sure you haven't added "notebook" or "inline" or something: http://imgur.com/a/SDDvl
iterators. Plug them together like legos.
Run your code through pylint
I'm just going through the projecteuler.net archive, solving problems one by one. It's really fun, even though some problems make you want to rip out your eyeballs. I keep being tempted to just: loop: loop: Magic But I have learned to rise above that. :3
&gt; My professor acted as if they're all the same and advised against learning different languages in the future Awful advice. Learn many languages to get a good idea of their strengths and weaknesses.
More important is what I *don't* want to see: * thousands of lines in one file * abundance of nested ifs and loops * application logic in __main__ * cryptic variable names Just to name a few of my pet peeves.
Even Microsoft didn't use sourcesafe internally when I worked there. When I asked why, they told me "it doesn't scale". You shouldn't always "eat your own dog food".
Thanks for the input!
PostgreSQL. Go. BeautifulSoup.
No doubt, nice described post.! 
Nobody really is... it's a tricky process and obviously when things change on the site, you're sometimes rewriting from scratch.
Formerly used Ninja. Now using PyCharm. So far (not been using it long), I suspect I'll be sticking with PyCharm.
&gt; No #7: SQL &gt; Stands for Standard Purpose programming Language. It doesn't.
Right? Everyone knows it stands for Structured Quail Language
I like when someones project has examples
Only as many lines as is necessary. There isn't a hard and fast rule about how many lines a file should have because a large LOC count isn't the problem; it's the symptom of a problem. Namely, it's a lack of adherence to the single responsibility principle. If you write a module that has only one responsibility, then it's unlikely that it will be "too long."
I'm not arguing no one can ever use regexes. I'm saying they're bad for the average URL tasks they are asked to do. I think the fact that you wrote a pseudo regex that was straight up wrong (but looked right!) is proof of that. If you need to match a date, that could be part of the matcher format. If you need something more exotic, run a regex on the pattern once it gets to the controller. 
&gt; I think the fact that you wrote a pseudo regex that was straight up wrong (but looked right!) is proof of that. It wasn't straight up wrong, it did exactly what I wanted it to do (as I wrote in my response). What, exactly does `:label` in your examples match? No idea? Well, I'll make mine greedy. As I pointed out, had I completed the rest of my regex for the full URL, it would have matched the URL in the example. Again, **it was intentional**. &gt; that could be part of the matcher format So you're going to introduce patterns (ie. regex lite)? &gt; If you need something more exotic, run a regex on the pattern once it gets to the controller ... and a split URL routing into many different places? You're going to break the loose coupling, and put the routing in the controller. None of that sounds like a good idea.
Concise functions with one purpose. Nice variable names Docstrings if function purposes aren't immediately clear by their names The right amount of comments
Pylint is just way too strict by default. Flake8 to me seems a lot more sensible.
Well, now you know about it.
My problem is more similar to this. http://stats.stackexchange.com/questions/148425/hidden-markov-model-multivariate-regression-with-time-series-data
&gt; cryptic variable names Recent gem from a coworker: param_name = _param_name or param_name_ 
So then your issue is still encoding your data into a graph so you can build a Markov chain. But this has nothing to do with Python, so why are you posting here? 
so i is like the counter for the loop and i+1 is for increasing the lengh of the word nice thanks! I learned a good code 
C++ is my primary language. It's widely known as one of the most complex languages you can learn that is in common use. Python is great because it feels like it makes the opposite set of tradeoffs that C++ does, which makes it a great complementary tool. Additionally, Python is pretty easily embeddable in c++ applications if I ever have the need.
You use "i+1" because of an off-by-one error. This is a common type of error with lists, because the 1st item of w is not w[1], it's w[0]. You're not changing the value inside i with that statement, you're just adjusting for the zero index. range(5) will return the numbers 0 through 4. 5 numbers. But you can't use w[0:0], this will give you an empty string. The first value you want is w[0:1], the second is w[0:2], etc. So when i is 0, you want w[0:1]. That's i+1. When i is 1 you want w[0:2], that's still i+1.
Why should I be using them?
I made a slide deck I presented at open west on this. You can kinda get my points by browsing through my slides starting at slide 20. http://blog.humrich.us/slides/python-favorite-things.html#20
IoT is really just a silly name for something that has gotten abused. Just like Big Data, Serverless, all this stuff. Everybody has a different definition and what is included. My recommendation, dont get wrapped up with terminology. Just take it for what it is. The usage of terms loosely used to bother me big time, and since I've forced myself to ignore them my quality of life has significantly improved.
Awesome, thank you for help!
We should really put this in the sidebar or something.
1. Unit tests, 2. at least one example in the README of how to invoke the API. If you're lacking #1, I won't even look at it.
Do you have a link to the reviews, or the data that you collected to reach these conclusions?
While this is true, if github closed tomorrow, the actual repos would be safe since every clone is a full repo (assuming you pull all remote branches and not do shallow clones). Of course, there may be a few lost causes where they were abandoned. And it would still be a mess since it is the central place for collaboration. But github is a closed source tool for an open source system. I guess I view it more of the difference between email based on SMPT and IMAP vs WhatsApp that is 100% proprietary.
Thanks Kevin for the feedback. I have divided the iris dataset now into the test and training sets to train the model.
It is amazing for bots in something like discord. Multiple users across multiple servers can use commands without having to wait for someone else's command to finish executing. Provides a non-blocking method, without having to spin up hundreds or thousands of threads.
Hi, shaggorama, you're right. Let's say that this is a *partial* IoT project because only one instance of the potential IoT system is showed. Actually, the Zerynth App can be used as an interface for all the "Zerynth-powered" objects available on the local network, selectable from a list generated by the app. When you run the Zerynth App, it will go in search of Zerynth objects connected to the network, then you can select the object of interest, in this case the specific "IoT Alcohol Tester", and you can interact with it. But everyone at the party could have their own alcohol tester (or another kind of projects!). You can find a more complex example here: https://www.hackster.io/luigifcerfeda/iot-ambient-light-zerynth-lamp-d09ea3 Here is the doc https://docs.zerynth.com/latest/official/lib.zerynth.zerynthapp/docs/index.html Hope this helps
https://en.wikipedia.org/wiki/Numerical_integration 
Hey, I made something extremely similar with an esp8266 and the cayenne platform! https://www.hackster.io/dominic-peters/iot-breathalyzer-with-cayenne-esp8266-and-mq3-sensor-6530cc
You were probably downvoted for "snarkiness", but I agree with you. If someone is going to make a big deal about the language abilities of another, they should make sure their own is up to par.
http://playground.arduino.cc/interfacing/python
ahh thank you so much! i just started so im totally new haha 
facebook polls, and no personal information here.
Yea that is my experience I could never get a solid baseline with this thing, and not to mention it flys off the handle stability wise. I'd usually tie a button to it on press, record that initial value (as the baseline) and wait 15 seconds, then allow the user to blow into it. It helped mitigate some of the randomness of the values, but still gave me no accurate way to record BAC
no it's not - but you're getting closer!
From your description and a quick look at the code, I think this is one of the issues: def mutate(strat, factor = 0.6): nextStrat = strat `nextStrat = strat` is not copying the previous solution, just grabbing a reference to it. In this case, since your data is simple, you could just change it to `nextStrat = list(strat)`. The `copy` module may be handy in some other situations. 
So as a person who is familiar with joblib.Parallel and joblib.delayed (but not with dask), I have a few questions. 1. What is the advantage of dask.delayed over joblib.delayed, in general? 2. When we switch the joblib backend to dask.distributed, is it done to only disperse the jobs across clusters, or does it also switch from joblib.delayed to dask.delayed?
Alright, I tried that. I don't think that that's the issue; that use of newList = list has worked in every other instance, and it also didn't do anything.
I dont think the scipy devs will be very happy to see the matrix class being recommended at all!. The matrix class is basically only left in scipy for legacy reasons and nobody is interested in keeping the matrix class code up to date.
So as a person who is familiar with joblib.Parallel and joblib.delayed (but not with dask), I have a few questions. 1. What is the advantage of dask.delayed over joblib.delayed, in general? 2. When we switch the joblib backend to dask.distributed, is it done to only disperse the jobs across clusters, or does it also switch from joblib.delayed to dask.delayed?
&gt; Also, in case you forgot, Python 3 is now king of the mountain, and the buzz is that Raspberry Pi, micro:bit, and Calliope all support Python 3. AdaFruit also now has updated Python software libraries that support Python 3 for the Raspberry Pi and other small Linux computers. All of this means potentially exponential growth for Python 3 in education circles. Thank goodness we have all these developers solving all these problems that Computer Science Education doesn't have ;)
What type of data are you trying to get. Have you thought about using the library pyserial to connect the arduino to the pi. Then you can read the data from arduino over serial.
The funny thing is if all op did was say 'hey guys I made a python pi calculator for you, here you go!' he would have probably gotten the feedback he wanted
Alright, I see my issue. Thanks a ton, gotta go fix the pile of crap that that one issue was hiding now.
I'm just gonna jump in here and suggest Visual Studio Code. Like the other posts stated, you'll need to install this _and_ python, because it's just a text editor. But it's very nice and it cuts out a lot of the cruft that seems to bog down IDE's. LINK: https://code.visualstudio.com/ It needs a couple extensions installed to work the very best with Python, but it's all one click install. I recommend: - Python ( the one by Don Jayamanne ) - Code Runner - VS Code Icons Cheers 
IMO This is the correct answer.
Have a more specific citation than the FAQ I linked? I thought I read something like that but couldn't find it. Edit: This? [*NumPy for Matlab users: ‘array’ or ‘matrix’? Which should I use?*](https://docs.scipy.org/doc/numpy-dev/user/numpy-for-matlab-users.html#array-or-matrix-which-should-i-use) &gt; Short answer &gt; Use arrays.
As you posted it? I can't think of a good use. Maybe as a data structure? People often make minimal subclasses as a way of having the same code with a different name. This is most often seen when making your own errors: class SomethingsWrongError(Exception): pass This is the equivalent of copy / pasting all of the code in Exception with a new name. If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. 
I've done something similar to this. I used Selenium with the PhantomJS driver and PIL. It allowed us to find changes to our website between versions. 
Learning boto3 and managing AWS. It's kick-ass being a noob learner of programming and interacting with the AWS services programmatically.
So I've had some arguments with people about "application logic in main." I've had to a function just to dispatch other functions because "main should only have one line and that's our guide." However I feel that just dispatches the responsibility of main off to something else. The most I have in main is a for loop for running a test K times where the loop just dispatches a bunch of other functions and print the mean of the results.
it has been debated at length in numpy, e.g https://mail.scipy.org/pipermail/numpy-discussion/2014-February/068865.html One of the main obstacles (still!) is that there is no nd-array implemetation for sparse arrays (efforts have been made, but higher than 2D for sparse is hard, or at least fiddly)
Yeah, I got it working now. Thanks.
If you are working with list you should think about using list comprehensions, these will shorten your code, increase the readablity and they usally don't mutate anything (if you want, they can, just saying). Also, for genetic algos and also CNNs I recommend you numpy, a matrix and vector lib written in C with high performance. Otherwise you genetice method can have alot of overhead so that the brute force with less overhead can be unjustified faster.
Make your code longer and more confusing. It's there to solve a problem that doesn't exist today. If it exists tomorrow you can write it tomorrow. If you don't need a new class, don't make one up. https://www.youtube.com/watch?v=o9pEzgHorH0
Honestly? I don't care about the amount of overhead required. I'm planning on using the code to generate some data on genetic algorithms versus brute force algorithms, because I got intellectually curious. I don't actually need the genetic algorithm for anything serious.
If you want to compare the performance than you have to care about the overhead too.
I've used the pi to handle serial messages before, and wrote a script to open up a serial prompt in the terminal to help debug what took place. The [code is here](https://github.com/CrakeNotSnowman/G78SeniorDesign/blob/master/serialModuleKM.py). It's poorly documented but I wrote it or copied form stackoverflow so if it's unclear, feel free to reach out to me. A quick warning, this specific module spins up 3 threads, one for serial read, one for serial write, and one for printing to the terminal. Depending on your situation, you might not need it and should definitely start without the threading code first.
Choose something to focus on, it is a lot easier. There is so much to learn that if you just try to "learn Python" you will end up spinning your wheels and get unfocused. I decided I wanted to learn to read, write, and manipulate Excel files. So I started with "Automate the boring stuff", it was great. Now I am branching out to other focus points, but it is a lot easier because the foundation is set.
Looking for Python programmer
Sometimes simple classes like that are used as namespaces. With class `foo` in your example you could then write code like `foo.var1 = 5`, `foo.var2 = foo.var1`, etc. Python 3 now has a [`SimpleNamespace`](https://docs.python.org/3/library/types.html#types.SimpleNamespace) object which is explicitly designed to be used as a namespace. Before enums were available in Python 3 simple classes like that were also sometimes used to fake an enum. 
Sure, but you still have to make sure it actually fails noisily or skips those cases, and not just silently does the wrong thing. Personally, I would read the code until I grok what it does, and make sure there is a ton of test cases of various edge cases that all pass, before I'd even consider running it on a copy of my code.
 sys.ps1 = '' sys.ps2 = '' 
I'll have to check it out some time. I'm probably going to go to University of Illinois at Urbana-Champaign to study CompEng, and I suspect the resources for learning about this sort of thing will be greater there than can be mustered at my high school.
The post is gone. Can you restore it please?
I took it down because I realized it wasn't on the same level as some of my other articles. I'll be upgrading the post to fit within a larger research project. I appreciate your request though. Stay tuned for a much better series. 
Not really. I built one of these. I am really happy with my little IoT Big Data Cloud Breathalyzer. My IoT Big Data Cloud Breathalyzer is currently running a Machine Learning algorithm that I hope to connect to a Neural Net to predict if someone is going to get shitfaced by just walking into the room, all in Cloud HD.
Things that connect to lots of other things, be they clients or servers.
Just store all your config variables, including API keys, in a config file that gets loaded in based on the environment. Include that file in your .gitignore so it's not version controlled and pushed up to Github. http://flask.pocoo.org/docs/0.12/config/#configuring-from-files
not even that, Fuzzer is a VM/AFL runner, not even a web service
The problem is mostly third party libraries such as https://github.com/earl/beanstalkc
Thank you!
It's not your code, that's a Windows path error message. How exactly are you executing your code? It thinks you're trying to execute program `.` so chances are you have a space in your command line where you shouldn't have, for example `C:\Projects\twitterbot\twitterbot&gt; . .\main.py` instead of `C:\Projects\twitterbot\twitterbot&gt; ..\main.py`
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Have you had any trouble getting things to work since Miguel's guide is a couple of years old now, or is it still pretty accurate?
Small nitpick, but I'd put Jinja2 probably a bit to the left of django on the "embedded logic/code allowed in templates" spectrum
Honestly thats what I meant haha
Thanks so much! I will definitely look into using infinite series in my next version. This was more about proving to myself that I could do it with integrals (which i just learned about in calc ab).
&gt; I know Python3 has all ints as long I'm pretty sure that's not true. I thought they changed dynamically.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Most of the time, people say this with the expectation that you will be working on (or running) more than one project on a specific machine, such as a development system. In these situations, it's imperative that you have a way to keep the environments separate. A change to one required package (like updating it to the next major release), could break every other project on the machine. Having different virtual environments for each projects allows for you to remove this as an issue, and simplifies many aspects of development (such as upgrading). With all that out of the way, there are many ways you can keep all of this separate, virtual environments are just the most practical and straightforward method. I've got a server that I throw containers on, update to do one task, and don't worry about virtual environments. I can clone the container without taking the original down, and work on whatever is needed. Its far less practical, but for other reasons, was the most straightforward way of tackling the issue.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I use Python to manage inventory myself. We have multiple warehouses, and multiple market places. I wish it was a more cohesive software, but it has grown in pieces as the rest of the business grew. and a lot of pieces function completely independent of each other. I don't know where you're at or your experience, but if I can help let me know.
import random def even_odd (num): return not num % 2 num = random.randint(0, 20000) if even_odd (num): print(str(num) + ' this is even') else: print(str(num) + ' this is odd') If you need code help post on r/learnpython going forward.
One of my longest files was drivers for various I²C devices. One base class, and a class for each device. The vast majority of the lines were documentation. Most of the rest were implementing access to simple functions. I think that was a thousand or so lines.
&gt; advised against learning different languages in the future I'm a *mechanical engineer* and know Python, Matlab, Java, VBA, C and Assembly. Tools are tools. Different tools for different jobs. Fortran and Lisp are on my language bucket lists.
This would be a lot more useful to me if it spent a bit of time talking about what these engines have in common and how they differ. I've recently been looking for reasonably generic (i.e., not designed for HTML exclusively) template engines to compare them by their syntax and capabilities. This post is far more bare than I expected, and none of the linked comparison pages give a brief comparative overview.
That's something I've never heard of, but I just looked it up and I'm going to play with it! Thank you! (:
Why is that?
Can you post the content somewhere so we can read it anyway?
Jinja started as a reaction against how little logic Django's template language allowed. It allows significantly more.
it does? you mean to generate the migration scripts? Huh, I have to dig into that. Been using it for years and never knew.
Are you asking for tips related to performance or popularity?
Programming is frustrating but I'd suggest that you give it a shot in a month or two. Perhaps you're overwhelmed with information. All in all you have just started learning programming. When you realize there are so many things you can do it becomes interesting. I'm not saying you've got you like I just think perhaps it's too soon to make a judgement and rule it out altogether. Edit: if you ever find yourself in the mood again learn about object oriented programming and when you learn how to connect your program, website, lots of things suddenly become at hand. 
The issue with this approach is that you can not handle JavaScript-created content easily. But the easiest approach to static pages could be to create an md5sum of the returned page and compare that to an earlier fetch.
How is templating from Bottle?
Yes, they do optimizations for ints less than a certain amount (-5 to 256). See [this great article](http://www.laurentluce.com/posts/python-integer-objects-implementation/) for more on the subject.
Mako IS NOT the default in Pyramid, it was one of the options in the past (along with chameleon if memory serves me right), and was default in Pylons Web Framework. Default projects in Pyramid use Jinja2.
Check this out http://stackoverflow.com/questions/25692440/mocking-a-subprocess-call-in-python
There is still a lot that is slower than 2.7. Now that Facebook is pushing the move though I expect that they will light some fire under the core developer's butts :)
It should be used as a commandline tool to manipulate the ini file stream (get/set/rm) there're examples on the the homepage https://github.com/xmonader/initool
Can you explain what you mean? The similarity between two strings is usually expressed as a [Levenshtein distance](https://en.wikipedia.org/wiki/Levenshtein_distance), how are you expecting to use hashes for this?
Great! But to be honest, from your perspective, the formula I gave you might not be very interesting. Here is what you could do: approximate your integral with a Monte-Carlo method. Let's say that you want to estimate the area of the circle of center 0 and radius 1 (hey, it's pi), you could do the following: - generate a random point inside the square of center 0 and size 2x2 (such a point is [2*rand(), 2*rand()] in python for example) - check whether this point falls in the circle - do that N times - Let's call the number of points fallen in the circle Nc. Nc/N should be similar to area(circle)/area(square) as the points are generated randomly - Your approximation of pi is then pi/2² = Nc/N Though it will probably converge slowly, these methods are interesting and particularly useful to compute complicated integrals (in high dimensions for example).
&gt; know Python3 has all ints as long The existing `int` and `long` split just got hidden under a single unified type, afaik the implementation didn't significantly change: Python2 already had to make all the checks to automatically promote ints to longs. P3 just hides the difference entirely.
I just had to do this, unfortunately I'm not at a computer right now. There should be a menu called build, and in there something asking the lines of options or preferences. Within that you should see both 'build' and 'execute' command settings. Just change 'python' to 'python3' 
but md5 has many collisions, doesn't it?
It does, but the chances of you coming across them when comparing text files is incredibly small. If you're really worried use SHA1 or better, SHA256. Depending on the size of your text files though, you might find a byte comparison is faster. But if the files are that small, you may not care because it's going to be pretty quick anyway. Another factor would be how many files you're planning on comparing and how often.
It's worth noting, that the script seems to be a very lightweight wrapper for configparser, and therefore it understands only configparser's INI dialect. 
See also: https://mail.python.org/pipermail/speed/2017-February/000503.html
Programming is fucking complex, and very unforgiving. This can make it extremely frustrating, especially when you start workung with something you are not familiar with. But there is also an upside to it: the compiler (or interpreter) never lies, and it cannot be bribed. You get full brutal honesty, and once you learn to embrace that, you can leverage it, and it gives you incredible power to control breathtaking amounts of complexity. It takes time, but it does get better. Give it some time, it's a bit like learning a foreign language - at first, you think you can ask for directions, but then a native speaker gives you those directions, and you don't understand a single word they're saying, and you go "fuck". But it gets better.
Based on the ability of the core developers to deliver performance improvements in the last 8 years, I would say No.
I messed around with it a bit last night, nothing serious, more just getting the packaging and such working since I've never written a chrome extension before. There are definitely some obstacles to overcome, but it's definitely doable. 
Simple but covers most of what you'd ever need to do, much like bottle itself. I use it in a product and haven't needed anything more.
You may be interested in the recent PyCon talk on [Flask at Scale](https://youtu.be/tdIIJuPh3SI) as a starting point.
There is no generic way to answer that. The simples explanation is to put nginx in front. Cache all you can, and have a backend of several servers each running several parallel versions of your flask app.
So why is Python3 slower?
Programming is not for everyone. I honestly believe that everyone has the capacity to learn to program but in order to really learn to program well you have to put thousands of hours in to it, which people won't be able to do if they don't enjoy it. So if it didn't hook you then unfortunately I would probably advise that it's not for you. For me, I loved computers as a child and didn't understand how they worked or where programs came from. The day I learnt I could make my computers do *anything* I was hooked. It never gets easy though, ever. I've been programming for well over a decade now but still use Google very heavily and have very frustrating days off tearing my hair out wondering why my code doesn't work. Programming requires an immense amount of patience which you'll only have of you love it.
Super interesting account of how he finally chose Github over everything else. He also explains why he rejected every other solution. I like this kind of transparency, and this is good for the Python community.
hadn't heard of it before..fixed!
I think the explanation makes sense, particularly when he says it's just a lot more pleasant to work with contributions on a platform like Github: &gt; Basically I wanted the development process to become so streamlined that doing an external contribution review was something one did to relax (that is definitely not the case now; it's a hassle at the moment and not something I at least do for fun, but more out of a feeling of obligation). And as much as I love using Bitbucket for my personal projects, Github's massive community is its killer feature. I'm glad they're moving.
YW, keep up the great work! Your statement was 'semi-accurate' in the past though since pyramid shipped more than one template engine by default - now its all decoupled from core, and project templates use jinja2 as defaults.
It's a shame they didn't pick a solution like RhodeCode(which is written in Python) at that point. AFAIR it was because at the time decision was beeing made RhodeCode wasn't open source, as it is now. It's very mature, could be for sure extended with Cpython needs. I'm also certain it had all required features they wanted. Well maybe in the next 3 year time ti will happen
I am asking about the model to data communication not model to view
Thats brilliant. Its like throwing darts at a dart board randomly and calculating it from that. Math amazes me
NP. I'll have a look, not tried this before but they're things I'd expect to work. Not sure what you mean by having to click on the bottom bar though, the figure popped up for me.
I think this only works on python 3.5 and above
http://bugs.python.org/issue21955 TLDR: it's ugly, doesn't matter for real problems, no one cares.
Does your dataset have data points tracking the user through the journey or is it origin and destination? I'm trying to get at, does your data have the multiple points of a journey in it?
Exactly! The most common image I guess is a farmer who wants to estimate the area of a pond in a field by throwing stones randomly, but your comparison is better! Monte-Carlo methods are actually great when you integral is nasty and are used extensively in statistical physics, finance, Bayesian probabilities and so on... You can also compute pi by looking at the Taylor expansion of trigonometric functions (taylor exanpsion of arctan around pi/4) if you know what it is! Happy mathematical journey!
For HTML templating, there's also [yattag](https://github.com/leforestier/yattag) and [dominate](https://github.com/Knio/dominate), which are libraries you're expected to use in actual python code.
You could store credentials in environment variables or in the keyring. In [1]: import os In [2]: os.environ['API_key'] = '1234' In [3]: os.environ['API_key'] Out[3]: '1234' Or with keyring, a thrid party module: In [1]: import keyring In [2]: keyring.set_password('system', 'username', 'password') In [3]: keyring.get_password('system', 'username') Out[3]: 'password' Both will work on windows, mac and linux. Both are user dependent, so other users on the same system can't get access. 
I don't think it is slower. Do you have data to back that up? It should be just as performant as Python 2.
model is the data.
can you delete this garbage now? and fuck off to /r/learnpython next time.
Qt provides some basic models (like QStringListModel, QStandardItemModel, QSqlTableModel) that will manage the data for you. However, if you are writing a custom model (by subclassing QAbstractItemModel, for example) then it's your responsibility to manage the underlying data structure.
Qt provides some basic models (like QStringListModel, QStandardItemModel, QSqlTableModel) that will manage the data for you. However, if you are writing a custom model (by subclassing QAbstractItemModel, for example) then it's your responsibility to manage the underlying data structure.
I mean that the figure is minimized, not popped up, so I need click on its icon in the bottom windows bar to show it. I am using windows 10 - could that be a problem?
None of these save perhaps spectral norm and crypto_pyaes really benchmark integer performance though, so I don't get your point...
&gt; various core developers telling me that they were comfortable with GitHub already and they were hoping it would win and &gt; Lastly, our BDFL prefers GitHub. Since the beginning of this whole decision process, Guido let it be known that he thought GitHub was the best choice
Sure. It's still up on [github.](http://blkarb.se/2kQDmtT) 
bitbucket is garbage. they still don't have a fucking search engine working on the cloud site.
I think the best definitions/examples of what is EMF in the first place are these links: http://eclipsesource.com/blogs/tutorials/emf-tutorial/ http://www.vogella.com/tutorials/EclipseEMF/article.html#data-model To sum up, EMF allows you to define structured data model and it helps you handle instances of these structured data model. The defined structured data model is called a meta-model while the instances are called models. The models always conforms to a meta-model. EMF gives you out-of-the-box: * ability to express inheritance in your data. * bi-directional references: X references Y and vice-versa. Remove the reference to Y in X, the opposite reference is removed, too. * XMI serialization/deserialization support. * Notification system for your modeled data. * a reflexive API... EMF was first developed for Java using XMI as exchange format. The implementation presented in the article is meant for Python instead, while keeping "almost" the same concepts as the Java implementation and XMI as "bridge" between the two worlds. The final idea is to give you the choice of the language (Python or Java) to handle these data as Python is better for some operation and Java better for others. It also give you the ability to primarily handle your data with Python, use existing EMF-based Java tools for other operations and vice versa. 
If you are using selenium, you didn't start the driver. from selenium import webdriver from selenium.webdriver.common.keys import Keys browser = webdriver.Firefox() browser.get('http://www.yahoo.com') assert 'Yahoo!' in browser.title Also, you need to insert your login. You should check your elements too. Last, this questions are more related to r/learnpython
Udemy has some excellent Python courses, usually fairly cost effective. There are also many online resources that are totally free. Here is a list of free programming books:. https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md#professional-development Check the section on Python and have at it!
I'm not a fan, a big plus of python to me is that most things that will be used with an instantiated class are found in either it's immediate or inherited definitions. This syntax looks very similar to golang's implementation of object orientation and I can't say I'm a big fan of being able to arbitrarily define a class method anywhere.
Ah, thanks bruh. I'll keep trying at it.
... that's what they're talking about
Thanks, I started learning Python because it is used for object-oriented programming in some 3D applications, and I thought maybe if I got far enough, I would understand what the hubbub is all about.
Over 60% of my time was spent trying to figure out why I couldn't do a carriage return. I wasn't trying to do anything particularly complicated beyond that. But yes the native speaker problem will always exist, because even native speakers encounter that same problem with other native speakers.
Currently learning so, going through Automate the boring stuff and just made a few bits for Discord and a scraper to save wallpapers from 4Chan. Little projects to get a feel for the code.
Python is very easy to start with (I was told javascript is as well, but for different reasons). There is much less busy work in python compared to other languages - you can get results very quickly. Another great advantages of python is the strong open source community. Using pip (a tool that lets you install 3rd party libraries very easily), you can get a lot of stuff from the Internet. want to calculate the position of a satellite? pyephem makes it easy. Want to manipulate images? PIL helps with that. My advice? learn the basics (variables, functions, loops, conditions) and start a project. A small one. Get something done. You learn more as you go, and can start seeing results quickly. 
don't spend money on learning python. I doubt any for-pay resource is better than the free stuff. Codecademy is fine as a starting point (I found it boring, but it teaches you the basics), and the best way to learn is from experience. After you know the very basics, go read about some cool library and create something. Socket for networking, nltk for text analysis, whatever interests you. Learn as you go and make something cool along the way 
People aren't going to contribute unless it's on Github?
Depends on the module but you may be able to just change the extension to .zip and unpack it. A bigger question is why don't you want to use pip? 
Ah, maybe. I'll have a look online but I can't test it. I think it should handle the figure updating properly, and if it did that it wouldn't be so much of an issue as you'd only have to do that once.
So.. when your code doesn't work, there are two general causes that can be ruled out at first. The first is failure to understand the underlying mechanics of the language of itself. Such as, "this command doesn't work that way." This also goes for any abstractions, or even the underlying architecture of the hardware itself, such as when working at a low-level, or even high levels. The second is failure to comply with the demands of the programming environment: syntax, missing single-characters, typos. This happens to everyone. I don't fear the first, and I accept the second as 'a fact of life'. However, when information for the first is hidden away, locked up and the key changing locations every year... Life is too short, isn't it? Computer programming comes across to me as an in-group that if you aren't part of, you really won't survive. Which, if that works, then I don't really have any complaints. So, it seems the nature of it all is that you'd have to spend time in and with it in order to understand it, as if it is a culture. 
So this would be a more permanent fix. Thanks
All I wanted was a carriage return! I spent over half my time googling different ways to do a carriage return in Python 3. There is no carriage return in Python 3, at least not for windows, and I went through a lot of failed solutions before I said "Ok, we'll use the next possible method, because this method isn't working." So, I wasn't trying to do anything particularly complicated, and I moved from solution to solution. After about 30 solutions (only about 20 of which were in my scope), and thinking "There's gotta be an answer to why all of this happens," that's when I made my post.
I see you're a module maker. Can you make me a module that only prints on a single line? Because none of these work: sys.stdout.write(), sys.stdout.flush(), print \r, \x08 So I had to either write \b as a function of length - which I don't know if it would actually be faster - or write to the complete length of the screen. http://pastebin.com/DxYDVQH5
thg is nearly essential for me. None of the git GUIs match my preferences as well. However, I also wanted the github experience. I started using hg-git about 18 months ago and it's nearly perfect: I get the hg command line, drop git's notion of staging, and still get to use thg. Branching, bookmarking, tagging, and merging all work fine. The most significant wart to me is that the commit hashes shown on github don't match hg's commit hashes. If you want the love of hg on the command line, thg to visualize commit graphs, and the joys of github and ecosystem, give hg-git a shot.
mako was written by the same guy who started SQLAlchemy
That line was intended to be part of a custom `__repr__` implementation: class ReprTest: def __repr__(self): return "%s(%r)" % (self.__class__, self.__dict__) Then make two instances of this class, and have them reference eachother: a = ReprTest() b = ReprTest() a.child = b b.parent = a Then anything resembling `repr(a)`, like just `a`: &gt;&gt;&gt; a Prints (in my iPython): `&lt;class '__main__.ReprTest'&gt;({'child': &lt;class '__main__.ReprTest'&gt;({'parent': &lt;class '__main__.ReprTest'&gt;({...})})})` The `{...}` should be ostensibly an infinite recursion of what is shown, but (fortunately?) it got cut off automatically.
Uhm... among the first search results for "python carriage return" is [this](https://mail.python.org/pipermail/tutor/2006-February/045293.html) and [this](https://docs.python.org/2.0/ref/strings.html); both tell you pretty clearly that a carriage return can be written in a string literal as `"\r"` (which, incidentally, is exactly like you would do it in C). If this is a major road block to you, then I don't know what the problem is, really.
 class DangerousDict(dict): def __repr__(self): return "{" + ",".join(["%r" % x for x in self.values()]) + "}" class A: def __init__(self): self.__dict__ = DangerousDict() self.x = self def __repr__(self): return "%s(%r)" % (self.__class__, self.__dict__) class B: def __init__(self): self.x = self def __repr__(self): return "%s(%r)" % (self.__class__, self.__dict__) A() recurses infinitely, B() won't. 
It's caused by floating point error. Read up on it here: https://docs.python.org/3/tutorial/floatingpoint.html
no. not being able to fucking search your codebase makes it garbage. and by a "little behind" maybe you mean ["has had an open issue for 6+ years"](https://bitbucket.org/site/master/issues/2874/ability-to-search-source-code-bb-39).
I like this move to github, it makes the code more accessible and easier for the younger generation to contribute through pull request / issues rather than using mailing lists.
[Here's](https://www.reddit.com/r/programming/comments/2oksk2/bitbucket_has_no_search_feature_after_3_years/) a reddit thread about how shitty that situation is. Note the date.
Totally agree. The closest thing I have for searching a codebase by organization with bitbucket is to clone every repo and then grep from my top level projects folder. :-|
If you are trying to avoid installing pip in your environment, use a virtualenv.
here is what i should do to test subprocess with command import pytest import mock @pytest.mark.parametrize('stderr_value, exp_res', [[True, '1'], [False, mock.Mock()]]) def test_command_run(stderr_value, exp_res): """test func.""" command = mock.Mock() with mock.patch('file1.subprocess') as m_sp: m_sp.Popen.return_value.communicate.return_value = exp_res from file1 import command_run # run assert exp_res == command_run(command) # test m_sp.assert_has_calls([ mock.call(command, shell=True, stdin=m_sp.PIPE, stdout=m_sp.PIPE, stderr=m_sp.PIPE), mock.call().communicate() ]) also you `system_check` and `command_result` and double `return`.
&gt; "infinite recursion if objects reference each other" is the problem with the default __repr__ method. What? No it's not. It's the class name and a pointer.
Use the decimal package to ensure you get the level of numerical accuracy you're looking for.
People: Can't Live Without Them (Mostly)
He even uses mako for his sphinx docs
I read that in Borat's voice. 
If you don't actually use pkg_resources could you add a "fake" one that is quick to load?
Yeah, I too lament that hg lost. It isn't that it was written in Python, which is nice, it is just that the user interface was actually designed, as opposed to, thrown together. Originally, git was meant as an underlying engine for a larger VC system, but shit just got piled on. It isn't the best solution that wins, it is the first solution that mostly works.
Visit the real URL here http://blog.yhat.com/posts/pandasql-intro.html
Love this dude... taught me all I needed to know to make a neural network 
Me too. Not at the point where I am ready for what he is doing, but I still watch his videos. Subscribed today. Good YT channel.
again, plenty of software has lacking search functionality. I guess I've never needed it since I'd rather have the repo and search with way faster and more precise tools like grep/vim/IDEs but it seems some people feel so strongly about this as too stupidly dismiss everything else. Pretty sure that qualifies those people as whiners. 
http://stackoverflow.com/questions/21395011/python-module-with-access-to-english-dictionaries-including-definitions-of-words
I use github search functionality almost every day when I'm actively developing something that uses someone else's code. It's nice to be able to have the context of commits and the history of the instances of the things you're searching for. It's especially handy when you want to quickly search for something to reference in a PR. I get it. You don't agree and you want to call people names that don't agree with you. I use grep just as much as I do searching in github. I don't see why you would chose to use bitbucket over github. The few times I've had to use it the interface felt clunky, outdated, and generally just worse than github. I personally don't see the appeal. I'm sure if you've been using it for a long time you're used to it and use tools to work around it's shortcomings. I fortunately don't have to do that very often.
Benevolent Guido is.
If you're using `pip install`, I don't think that normally uses setuptool's console script machinery. Instead it has its own, and will generate the style you are looking for. There are exceptions to this though. Editable mode (-e) for example will just punt to `python setup.py develop` and you'll get the console scripts from setuptools.
&gt; yes you should spent a lot of time keeping up with the latest technologies in order to stay on top of your game. Yes. So, it sounds like it doesn't become that much of a problem after a time... I must have gotten unlucky with my problem then. Thanks for your help.
A bit? Lol, someone's delusional. 
And it's over 2,000 lines long...
Roughly 25% of those lines are comments. Also if they decided to allow lines longer than 79 characters there would be significantly less lines. It's 2017, no one is developing on a shitty old 4:3 CRT with 800x600 resolution. That said, they have files in the repo that are 14 years old, so it's kind of to be expected.
&gt; You don't agree and you want to call people names No. I don't respect people who call &lt;projects&gt; (and therefore people) names just because they don't suit their every need. I understand that you use that feature. I don't. It's not garbage just because a bunch of vocal negative people don't like it. &gt; I don't see why you would chose to use bitbucket over github. Pull requests and private repos are very easy to work with. It's great for small teams. &gt; I'm sure if you've been using it for a long time you're used to it and use tools to work around it's shortcomings. I've used github, bitbucket and self hosted tracs and gitlabs. github has definitely some cool tidbits and eye candy but bitbucket is very usable. This looks like a Chrome vs Firefox flamewar. I honestly think bitbucket's simplicity is awesome although, at the end of the day, I love self-hosted options.
I see what you did there. Thanks! 
Ah, well in that case, I have no idea. My best guess is that some of it has to do with unicode (I don't know if the Python 2 bits uses str or unicode), and some probably has to do with extra things in Python 3.
When will people realize that there are dozens of reasons for 79 characters beyond just screen width. This has got to me my most irritating baseless criticism. Der, I develop on a bank of 47 WQHD monitors, stupid plebs with their 79 character limit need to get with the times!
self hosted is definitely awesome. The only option for GH is of course to pay for licensing, so you can operate it if you're willing to pay for it. I suppose I've just always seen gitlab and bitbucket as something that's what you can you if you can't use github. So sure, calling it garbage is as reactive and silly as you calling people calling that names. It is ridiculous. We just have different opinions. Sorry about calling bitbucket garbage. Having a short discussion about it is a lot more productive.
As others have said, the quote was &gt; However, in this case, _having a default for `__repr__`_ which _would act_ like [that] _would have been_ too dangerous It's hypothetical. The point was that the default `__repr__` method acts sensibly by only giving you basic information (id + class name) so there are no recursive problems. See other comments for classes that have `__repr__`s that would cause this problem. On a tangentially related note, if you are creating a `__repr__` that might be recursive, the standard library offers an easy solution: [`reprlib.recursive_repr`](https://docs.python.org/3/library/reprlib.html#reprlib.recursive_repr)
Very impressive work my friend ! Thank you very much for taking the time and effort to do all the writing and video's. I am learning python at the moment and an reading your github pages right now. I think a lot of people can learn from this. bit thumbs up :D
From PEP 8: &gt;Limiting the required editor window width makes it possible to have several files open side-by-side, and works well when using code review tools that present the two versions in adjacent columns. Hmmm... sounds like a wide screen monitor might solve that. &gt;The default wrapping in most tools disrupts the visual structure of the code, making it more difficult to understand. The limits are chosen to avoid wrapping in editors with the window width set to 80, even if the tool places a marker glyph in the final column when wrapping lines. Some web based tools may not offer dynamic line wrapping at all. It's 2017, no text editor people write code with enables text wrapping by default. The rest of PEP 8 just gives you tips to make it easier.
Working on the [Ames Housing dataset](https://www.kaggle.com/c/house-prices-advanced-regression-techniques) on Kaggle, trying to improve my score and get in the top 500.
In python I can understand that. But I also code in Java, and 79 characters is horribly inefficient due to the sheer verbosity of the language.
We use 27" 5K monitors at work, and we use the 79 character limit. It means we can fit 3-4 files (depending on font size) on the screen at once and be able to read them comfortably. In addition, I don't very often write a &gt;79 character line that I can honestly say is worse for being broken into multiple lines.
Why on earth should I want to make my pandas queries with sql? Pandas has already a realy good query system? Besides this library just loads the dataframe into an in-memory sqllite instance, so you can perform sqllite queries on that to get your original data back. This should decrease the overall performance and in the end eats up the ram with big dataframes. Storing that sqlite instance persistently kinda defeats the purpose. &gt; [It's a small but mighty library comprised of just 358 lines of code.](http://blog.yhat.com/posts/pandasql-intro.html) Without this module that is achievable with this code: from sqlalchemy import create_engine import pandas as pd con = create_engine('sqlite:///:memory:') df.to_sql(con=con, index=False) pd.read_sql(query, con) A better alternative is just to learn the pandas query system, the official documentation already has a nice [sql comparision](http://pandas.pydata.org/pandas-docs/stable/comparison_with_sql.html) for this.
&gt; Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017 Python Software Foundation. All rights reserved. Have these guys heard of ranges? Why not &gt; Copyright (c) `range(2001, 2018)` Python Software Foundation. All rights reserved. 
Maybe I was not clear enough-do I have to write code for that or the model will do it because it was designed so ?
The would be a discussion about changing it to xrange or if it is evaluated lazily depending on the version used... Also it is more future proof, since there might be years without copyright.
Indeed, readability should take precedence. And 120 is much more reasonable than 79!
Would be even less lines if they put more than one statement per line using the semicolon.
/r/leranpython
/r/learnpython
&gt; There should be one-- and preferably only one --obvious way to do it. except for string formatting. it that case go fuck yourself
There is a pull request for it https://github.com/python/cpython/pull/4
More of the way the PSF has run Roundup through a hosting company which has made life difficult in a lot of ways. We're just now starting to sort out how to migrate off them after lots of fun times with TLS cert management and general "this will be a special case forever" problems.
Maybe not everyone would get it? 😊
You're never assigning tl to anything because hpx will never match anything in hp1, because hp1 only contains strings and you're trying your match against floats or integers. [/r/learnpython](https://www.reddit.com/r/learnpython/)
Maybe try to cast as a string before calling an index? 
That is a possible interpretation, too. Without clarification of OP, we may never know. 
Post your code to pastebin. 
You should really have posted this to /r/learnpython Pictures of your screen isn't very helpful, but in this case it's clear: You want lnkh = int(lncg[0]) lnju = int(lncg[1]) Note the way the parenthesis are arranged.
/r/learnpython
Are you using openweathermap API?
/r/unexpectedfactorial
Vim has text wrapping by default.
I'd love to know when they move bug tracker to the Github
Check out the documentation for QSqlTableModel. http://doc.qt.io/qt-5/qsqltablemodel.html You can set the model to have various edit strategies which dictate when changes made in your view by the user will actually update the database.
I a not familiar with go daddy ... i can bet you will have more success with something like pythonanywhere.com which has a free account type.
/r/learnpython
**Here's a sneak peek of [/r/learnpython](https://np.reddit.com/r/learnpython) using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [Beginner's Python cheat sheets](https://np.reddit.com/r/learnpython/comments/4atn5f/beginners_python_cheat_sheets/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
the numbers are not 16 len(km) = 16 the array that I input for the profiling test is km*70000000
You're still doing a lot of work that's either slow or sequential. Splitting the list into chunks like that is slow, copying big lists between processes is slow, etc., etc., and your per-element time is still VERY low because addition is extremely cheap on modern CPUs.
&gt; Perl Still good, but if everyone else is using something different then time to change. 
Uncalled-for response. OP is asking for a project to work on, not a homework style Python question. Completely valid here. 
By slicing, but even then it will be costly as it'll involve a full copy.
Have you tried jupyter? Some guys at work are using it. Looks interesting. Maybe save some head ache...
&gt; sheer verbosity of the language Java ain't got shit on objective-c
That repository contains the standard library too; https://github.com/python/cpython/tree/master/Lib 
Google translate: &gt;We are busy with a simulation of the matching process for the secondary schools. We are planning that you can calculate your chances of Three Sign website. Is this missing a link to a news article?
This is purely for educational use, that's why I am doing it. Something doesn't quite click in my head about the way this works, you see, summing a list of 128000000 integers in a serial way takes 2.7 seconds, so logic has it that if I make use of parallelism on say 5 lists that together make up the starting list, I can reduce the problem's execution time. Maybe I could do something like that in C ? I could for example use pointers instead of splitting explicitly Any thoughts?.
I figured that was the cause of it. I imagine core is mostly C.
No it's not, it's easier on your eyes to use 79, it's compact, it's way better to read, with long lines you have to move your face to keep track, it's way worse. 
&gt; logic has it that if I make use of parallelism on say 5 lists that together make up the starting list, I can reduce the problem's execution time. That only follows if you ignore all the extra overhead that comes with parallelization, which is the whole point. 
You learned nothing, Jon Snow. CPython is in here: https://github.com/python/cpython/tree/master/Python
assuming you are saying dynamic website maybe it uses json
That's misleading, because that includes stuff like the testsuite. $ cloc . --exclude-dir=test --include-lang=C,'C/C++ Header',Python 2916 text files. 2878 unique files. 1255 files ignored. http://cloc.sourceforge.net v 1.64 T=7.10 s (265.6 files/s, 130320.8 lines/s) ------------------------------------------------------------------------------- Language files blank comment code ------------------------------------------------------------------------------- C 497 52006 48060 320791 Python 1033 51293 79772 238693 C/C++ Header 356 12620 11586 110640 ------------------------------------------------------------------------------- SUM: 1886 115919 139418 670124 ------------------------------------------------------------------------------- So it's really more like 36% Python, 64% C. 
You should pick something with a longer processing time per item if you want to see why this approach works. Or spin up the processes before you measure, but the serializing and unserializing is still high.
exactly... I made some research and found out about Ghost.py do you know something about it?
I will check it... thank you! :)
https://docs.python.org/3.6/library/multiprocessing.html#sharing-state-between-processes In order to divide the task without copying memory, you may look into the state sharing chapter, specifically using an `Array` to store your data before forking, then pass the appropriate slice to that each process needs to work with as argument. From the looks of your timing your manager process otherwise seems to spend only 6.7 seconds waiting for the other processes to join. So the actual sum is faster.
What a silly thing to say, the test code is not running your programs. I would understand if you argued that standard library should be included, since unlike test cases it is actually running your code. Anyway ignoring standard library and test suite, CPython is pretty much 100% C code.
When you're writing an interpreter, source code is your test data.
http://i.imgur.com/xWR1qQh.gifv
You *should* be able to change the hosting settings on Hostgator or GoDaddy to redirect to something that supports Python like PythonAnywhere or Heroku. EDIT: Change the DNS registry. 
Difficult. You are right about MP4 but you may need to include other large binaries in the VCS if they are keyed to a specific version of your app or are developed iteratively themselves. It's not uncommon in gamedev to add binary resource files into the VCS.
There are numerous libraries that parse, true, but none of them do what Lark does. - Lark uses the Earley algorithm, which can parse **all context-free grammars**. That means newcomers to the language don't have to learn the limitations of a specific algorithms. They can just write whatever comes to mind, and it would work. - Lark builds a parse tree automatically. Only one other library does this (that I know of). Every user who has tried working with trees instead of a state-machine, describes how much better the parse-tree approach is. - Lark is FAST. If you choose the LALR(1) algorithm, **Lark is the fastest parsing library for python** that I know of. A close second is PLY, but its interface is terribly old-fashioned and it doesn't build a parse tree. - Lark has a clean and easy interface. This is subjective, but what's objective: the amount of text you need to write to produce a parser is small compared to most libraries, and there's very little you need to learn to use it (imho). Each of these features alone would make Lark an interesting library. But together they make it (possibly) the best parsing library that exists today. IMHO etc.
Also check out shapely. 
CPython implies it's python written in underlying C Your suggestion of PythonC would imply that it's C written in Python, which isn't true. It's python written in python so "PythonPython" would be apt. I need more hobbies...
Python^2 ?
How many people use Vim with default settings? I'd guess near no one.
Another way to think about it is that some of the test data may not technically even be python, e.g. a test file on which there are assertions that syntax errors happen.
[removed]
How many people use vim with settings that disable line wrapping? 
Can a programming language be written in itself? Can you impletent python in pure python? Or C in pure C?
PyPy
I think it's pretty neat.
Kivy is the best. Really wll designed.
Absolutely. You need an intermediate compiler to build it, called a [bootstrap compiler](https://en.wikipedia.org/wiki/Bootstrapping_\(compilers\)). Once you have a version of your compiler that can be compiled itself, it becomes a self-hosting compiler - eg. it can compile itself.
PyPy is a Python interpreter written in Python.
very useful much setter/getter very value wow
Pretty much every C compiler is written in C, often compiled by itself. And Python has PyPy. 
Obviously. That's why I said ‘pretty much’. 
you can also try codewars.com and codingame.com, both will give you a handful of programming puzzles and it think it's a good way to learn a language. 
Exactly. What are those clients are doing, and what's the expected concurrency number and requirements *(session? Each request standalone? Variable data or same to all / most? do clients need communication with each other?)* Without that kind of info the question is meaningless. 
Technically it's written in RPython, which is a restricted, statically-typed subset of Python. https://rpython.readthedocs.io/en/latest/rpython.html
Anecdotally, everyone I've ever met that uses Vim. Even if most did, a larger monitor would actually mitigate this issue.
Wasn't it done in B?
I think MIT has an intro to CS class using Python.
Even without the test suite and the standard library (much if which itself is written in C), lines of code just simply isn't a good way of describing the makeup of a project like this. Number of lines of code doesn't tell you anything about what that code does. In my opinion, the main interpreter loop, the fundamental data structures, and the built-in function/operation definitions are what really define CPython. And all of those are written in C. 
Contrast that with PHP: C 63.9% PHP 27.3% C++ 7.0% Objective-C 0.5% M4 0.5% Shell 0.3% Other 0.5% Just kidding! If you remove the test suite, the PHP part drops to about zero.
To use multiprocessing, objects are serialized and sent via socket to another python instance and deserialized. It's obvious that iterating over the list once, performing the sum, is much faster than iterating over it to turn it into strings, iterating over the strings to send them to a socket, iterating over socket.read to reconstruct the string, iterating over the string to reconstruct the numerical values, iterating over the values to perform a sum, sending it back, doing the final sum... Your job has to take hundreds of milliseconds for that overhead to be worth it. If you want performance, look at numpy, numba and/or cython. Multiprocessing is at best a 2x or 4x improvement, but those others will be more like 30x to 100x, and make real multithreading possible (Ie, not doing all that serialization crap).
It's pretty neat.
Py^2 ?
What about cross compilation?
But that applies to only *compiled* languages like C/C++. Python cannot compile/build a cpython since its an interpreter and not compiler.
so you know `itemdata` is a tuple, and subscriptable as `itemdata[0]` but you don't really understand the thing that refers to. Other than it having a fancy repr. Maybe you should inspect its attributes with `dir(itemdata[0])`
Trying to script an animation in Blender.
Well git is the preference of the community. Github has a more active community than alternatives, is more comfortable for most core devs and was always the preference of Guido(who was not the one to make the call). Gitlab was in second place but the open source aspect of it wasn't important enough and the person deciding believes there are no groundbreaking functions in it that Github doesn't have. edit: Oh and the underlying reason for the change is that projects without strong infrastructure chase off potential contributors.
In order for multiprocessing to be beneficial, the parallel task needs to be significant enough save more time than is created by the overhead that is part of multiprocessing.
Py**2
I have a tool I've been working on that stores urls into web.archive.org via command line. I've been working on it for a bit.
relevent username
 &gt;&gt;&gt; from math import pi &gt;&gt;&gt; print(pi**2) 9.86960440109
 In [1]: import math In [2]: math.pi.as_integer_ratio() Out[2]: (884279719003555, 281474976710656)
Thanks!
asyncio is really good when there's a lot of waiting involved in an operation, and you want to do said operation in parallel. Here's a good example - I occasionally need to run commands across a medium-size cluster (other cluster ssh tools weren't really cutting it). So I had a Python script that would SSH to every node in serial, run my command(s), and write the output to a file on a shared filesystem. Took forever (start the script, go get coffee, maybe it will be done when I get back). Rewrote the SSH wrapper with asyncio, and now the whole process takes like 10-20 seconds since everything is happening concurrently.
I'd love if you could expand this into general networking... how does this work????
I wrote [PySoundFile](https://github.com/bastibe/PySoundFile) and [PySoundCard](https://github.com/bastibe/PySoundCard), for reading/writing audio files and playing/recording audio, respectively. Also, for my scientific work, I developed [Transplant](https://github.com/bastibe/transplant), a library for calling Matlab from Python. I am not entirely happy with audio in Python yet, though. Specifically, PySoundCard uses libportaudio, which can be problematic. So instead, I am currently working on a library for playing/recording audio using the OS's native audio libraries. This already works on Linux and macOS, and the Windows side will soon be finished, too. I think it is very cool!
+1 for shapely, I've used this a good deal in R and it's an amazing library 
Been using this lately and it's great! Combined with sqlacodegen I was able to set up a rough DRF version of my API with about 200 model fields in like 5min of work. I was going to nag about PR 30, not mine but it let me get forward, thanks for the great work!
I wrote a multipart song playlist shuffler. It takes in multiple playlists of pairs, triplets, etc of songs, and shuffles them all by group into a new playlist. I don't think anyone else is interested, but it was still fun to do
It runs on python 3
Working in a game in Kivy right now. It's really comprehensively designed. 
The first C compiler was [written in NewB](https://www.quora.com/What-language-was-the-first-C-compiler-written-in). A variation on B, which was written in assembly. [More](https://en.wikipedia.org/wiki/Compiler)
And also some of the "python code" are automatically generated rather than written.
Thanks for the link! Hadn't seen blessings (I think the node package must have masked it's SEO presence).
What in your collective opinions needs work? Personally, I feel like it would be a simple but, 10x improvement if kivy could offer some better looking defaults. After all kivy renders to GL directly so basically any graphic you can imagine you can get. It souldn't be a serious learning process/ effort to make a rounded rectangle (some people like those lol!!)
Alas Kivy has a showstopping bug on windows that is open since I took a first look at it. It doesn't run on some Intel graphic drivers on windows computers, where it reports the OpenGL version incorrectly and then fails. https://github.com/kivy/kivy/issues/3576 This bug was reported in 2015. It means that if you develop a Kivy app there's a risk it won't work on some windows computers. Even on windows 10. Of course I'm biased because my main computer is affected by this problem which stopped me from taking a more serious look at Kivy... :)
Others have already touched on why this is slow. If you're interested in how to do this efficiently, take a look at [dask.array](http://dask.pydata.org/en/latest/array-overview.html). Dask uses numpy arrays and multithreading, which means it doesn't need to copy data to use multiple cores.
Magic
I don't like this function. In the first two cases 'lt', 'gt' warn is a threshold to trigger a warning. However in 'eq', 'ne' warn does not work as a warning threshold but as a value to aim for or avoid. That the same variable has two meanings kind of tells me either the variable does not have the correct name or the function is trying to do actually two different functions. As for the first two cases 'lt' , 'gt', you could construct a dictionary operation = {'lt': operator.lt, 'gt' operator.gt} if operation[compare](value, crit): #critical if operation[compare](value, warn): #warning else: #ok By the way 'key' does not appear to be defined in the current scope.
I made this [wallpaper sanitizer](https://github.com/ShiKu123/Wallpaper-Sanitise) not too long ago. Its helped me maintain my 7000+ wallpaper collection 
Some dynamic websites use json files to dynamically update the website there is buiktin json module in python but i dont know how to use it but i ll try to find some examples for you
Some years ago, I wanted to use python to create a epub book from some html pages, so I went searching for a corresponding library. Turns out, there are a lot of epub libraries for python, and they're mostly ok, but each one had issues that made them ill-suited for my particular use-case. So I ended up writing my own, and eventually packaged it into a standalone library: [mkepub](https://github.com/anqxyr/mkepub). I'm pretty happy with it. It's pip-installable too. I'm also fond of my wikidot python api lib, but that's probably too niche to be of interest to anyone here.
tabs or spaces?
find your inner peace. i find it hard to believe that a noob asking a question really bothered you that much :)
Thanks for linking these, I do lots of audio work and this should make life a lot nicer!
Something like: from multiprocessing import Array, Pool array = None def worker_init(memory): global array array = memory def worker_sum(slice_args): global array return sum(array[slice_args]) def slice_memory(memory, slices): size = len(memory) slice_items = size // slices for position in range(0, size, slice_items): yield slice(position, min(size, position+slice_items)) def multiprocessing_sum(array): with Pool(processes=8, initializer=worker_init, initargs=(array,)) as pool: print("Applying sum") result = pool.map(worker_sum, slice_memory(array, 8)) print(sum(result)) def main(): print("Constructing numbers") from random import randint items = [randint(0, 20000000) for _ in range(30000000)] data = Array('i', items) multiprocessing_sum(data) if __name__ == '__main__': main() The expensive operation is constructing the list of numbers, the process creation and sum is insignificant in comparison. Perhaps some multiprocessing data loading is in order :&gt;
https://learnpythonthehardway.org is a really good first resource. There's a book, but I think everything is available for free on the site. 
I created [PyEnvDiff](https://github.com/jnmclarty/pyenvdiff-lib), a dependency free, ultra-compatible tool to help explore python environment information. One use case... from pyenvdiff import Environment @app.route('/pyenv') def pyenv(): info = Environment().info() resp = json.dumps(info) return Response(resp, status=200, mimetype='application/json') ...gives you visibility into lots of stuff about your app. Zappa deploy struggling with imports? Setting up an automated deployment? ...it also does other things.
&gt; 27 years ago Hell yeah.
If you thought it was worth writing...chances are somebody else out there has a similar problem. Link it!
Sounds fun, where's the link?
Something is busted in your doc build, the link to the github project, from readthedocs doesn't work. Edit: Figured out ikalnytskyi/holocron not ikalnitsky/holocron, for others, [here is the project](https://github.com/ikalnytskyi/holocron)
I created a tool a while back called [HTMLArk](https://github.com/BitLooter/htmlark) that reads in a web page and embeds images, CSS, and JS into it with data URIs, outputting it all into a single HTML file.
https://ukupat.github.io/tabs-or-spaces/ I think this a dead horse. 4 spaces has won Python. Most Github stats show over 90% preference for 4 spaces.
 * FinTA (Financial Technical Analysis) Finta is collection of common financial technical indicators implemented in Pandas. https://github.com/peerchemist/finta Wanted to learn basics of pandas and I was looking for a good reason, so I learned the basics of technical trading while making myself learn Pandas. It is quite usable already, it needs tests though. 
I know. It really triggered me in the Silicon Valley episode where she goes tap-tap-tap-tap on the spacebar instead of having the tab key insert 4 spaces.
this subreddit is turning to shit thanks to lazy mods and morons like you who accept garbage content.
docs or GTFO
These look great! Thanks for making them, and thanks for mentioning them here.
Kind of a specialized thing, but I'm maintaining a framework for GPGPU algorithms [Reikna](http://reikna.publicfields.net) that uses PyCUDA/PyOpenCL as backends. I wrote it for myself (I do GPU calculations as a part of my job) to avoid handling the same stuff over and over again (picking the block/grid size, converting n-dimensional array indices to memory pointers, juggling temporary arrays and so on) and to switch between OpenCL and CUDA easily. The main idea of the package is the separation between core algorithms (e.g. transposition or FFT) and transformations that can be attached to their kernels directly (e.g. rescaling), so that one can assemble a complicated algorithm out of base parts and run it with little overhead. Currently I'm fixing bugs if someone reports them, and adding some feature once in several months if I need it. The main problem is that the core algorithms have to be written in C + macros + Mako templates, which presents a somewhat steep learning curve for someone wanting to contribute. This can theoretically be fixed by employing some kind of partial evaluation and using Python functions as a DSL for code generation, but, unfortunately, I don't have enough time to implement it right now. Also, FFT desperately needs reworking as it only supports power-of-2 problem sizes efficiently, and its implementation is quite obscure. 
[Invent with Python](http://inventwithpython.com/) is a great resource, it is recommented in the sidebar and by on the [sopython wiki](http://sopython.com/wiki/What_tutorial_should_I_read%3F) You'll want to start with one of the following books: * [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/) * [Invent Your Own Computer Games with Python](http://inventwithpython.com/chapters/) * [Hacking Secret Ciphers with Python](http://inventwithpython.com/hacking/chapters/) All three are available online for free - and AtBSwP has a Udemy course that is only $10 with the [coupon code](https://www.udemy.com/automate/?couponCode=INVENT_WITH_PYTHON)
I've created a model for predicting the outcome of NFL games for sports betting purposes. 2016 was the second season I've used the model &amp; I've had moderate success, turning a profit during both seasons.
why? it's completely fucking useless and could be replaced by like 3 lines of python anyway.
Yeah LPTHW was my first ever programming tutorial. Worked through several hours, but I found it confusing and frustrating. I honestly think you're better off just chipping through the official docs/tutorial than using that, since you need to reference them so frequently. And his attitude is just horrid. Basically saying if you don't like his work you're not cut out for programming. The Python 2 thing is just the last straw, it's not as big a problem for me as everything else that's wrong with that resource. But yeah, real world concerns about working with legacy code aside, Py3 is just way way better. My next resource was udacity's CS101 video series, which was *fantastic*, although it also used Py2. Then I found programarcadegames.com and never looked back. That thing is just a superb tutorial in every way. LPTHW was probably a relatively great free tutorial 10 years ago, but there are just so many far better options these days I really think there is almost no place for it any more.
There's a library called [Beautiful Soup](https://www.crummy.com/software/BeautifulSoup/) for HTML parsing that will probably be more helpful to you than using `re`. Also, if you need help with a task or project you're working on in Python, try posting on r/learnpython. People who follow r/Python are generally looking for news or discussions on language features, but in r/learnpython you'll find a lot of people who are interested in answering questions and helping you out as you learn.
Just a warning, Google's python course uses Python 2, which means you're going to miss out on some of the newer features of the language my sticking with it.
But C isn't assembly as such is it. I ak sure C can probably do assembly, but something lower down to low level C and separate to C must have been used.
Serious question... so is that why C is named C? Because C is after B? Then Python could (should?) have followed suit and be called D. That would have been cool.
Pretty much yes. I believe it all started out on massive room filled computers that stamped holes in punch cards and then moved onto valve technology that lit up panels and wrote to magnetic tapes. Then the semiconductor came along, back then to write the assembly language based on the physical design of the computer chip was much simpler. Then the computer chip became more complex as the transistors shrinked, they spawned out into different architecture based mainly on whether it was RISC or CISC and then flavours such as the x86 (486, pentium, etc) or ARM based and whatever else I've missed. So for each machine code which is based on its architecture, another modification of the assembly came along. And I believe C was designed to compile across each favour of assembly from early on in it's design, which is why it's so portable and works across many architectures easier than some other older languages. Older languages were designed around specific architectures or specific job types such as finance or algebra. C came along at the right time to become successful across all platforms and architectures. Python is compiled into C bytecodes, which is what the PYC files are, which again is why it's so successful and platform friendly.
Conceptually, indentation, like font size, shouldn't matter, and should be a matter of personal preference. In an ideal world, our editors would abstract it away completely. However, we're not in an ideal world, and 4 spaces for everyone is at least a better compromise than PHP style free for all.
I have a few packages on pypi. A few of them I use regularly: [Colr](https://pypi.python.org/pypi/Colr) - Easy ansi terminal colors. Basic and extended, I'm about to publish the latest release that supports true color (rgb). It can also do gradients and rainbow-style (like `lolcat`). My goal was to make a color library that does one thing, instead of an entire terminal gui library. I hate the way `colorama` uses string concatenation. [Example](http://i.imgur.com/4B2JnGF.png): from colr import Colr as C print(C('This ', 'red').blue('works ').f_155('well.').join('[', ']', style='bright')) It also installs a command-line tool (`colr`), that can be used to print colorized text. [Example](http://i.imgur.com/FPZM7nt.png): fortune | colr --rainbow --- [PrintDebug](https://pypi.python.org/pypi/PrintDebug) - Used anywhere you would normally put a debug `print()`. It includes file/line/function info, and can use colors if `Colr` is installed. The debug prints can be easily disabled (turned into a no-op function call) with a `disable()` / `enable()` method. I know there are a lot of packages like this, but I prefer to use this one. [Example](http://i.imgur.com/2HxPxcZ.png): import sys from printdebug import DebugColrPrinter debugprinter = DebugColrPrinter() debugprinter.disable() debug = debugprinter.debug DEBUG = ('-D' in sys.argv) or ('--debug' in sys.argv) if DEBUG: debugprinter.enable() def my_function(*args): debug('Called with {} args: {!r}'.format(len(args), args)) print(' '.join(str(x) for x in args)) my_function('Hello', 'world') --- [FormatBlock](https://pypi.python.org/pypi/FormatBlock) - Easily turn long strings into "blocks" of text (inserts newlines so that text fits). It has options for indenting, prepending/appending text, splitting on chars, words, or newlines. Example: from fmtblock import FormatBlock print(FormatBlock('This is a test okay.').format(width=5)) Output: This is a test okay. It also installs a command-line tool (`fmtblock`), that can be used to format stdin/text data: [Example](http://i.imgur.com/q3zZ5W3.png): seq 1 100 | fmtblock -w 40 -p '--&gt; ' --- I also have [EasySettings](https://pypi.python.org/pypi/EasySettings), my first package. Sometimes I use the `JsonSettings` class to hold config for my programs. There's [OutputCatcher](https://pypi.python.org/pypi/OutputCatcher), to suppress/catch `stdout` / `stderr` output from function calls, or get both `stdout` and `stderr` from `subprocess` processes. It also handles piping `stdin` data to the processes. [TimedOp](https://pypi.python.org/pypi/timedop) roughly measures the amount of time python operations take, but also includes a handy `timed_call` function. It raises a `TimedOut` exception if a function call doesn't return in the specified amount of time. Anyway, that's all of my pypi libraries. I use those top three pretty frequently.
Oh no you didn't 
It looks like it was just the examples I tried: `examples/calc.py` * print statement * `raw_input` * `operator.div` should be `operator.truediv` `examples/indented_tree.py` * print statement `examples/json_parser.py` * print statement
Which VCS did they use back then? 
Not me but a colleague of mine wrote a library that I've found super useful called [jsonobject](https://github.com/dimagi/jsonobject/). Basically it lets you define a JSON schema like you would an ORM with typing, validation, etc. It's super useful for working with any database that uses JSON as an underlying storage, or just to quickly write an object schema and serialize it in an API / javascript code. I find myself using it in almost all my projects now.
Floating point precision isn't exact Python 3.5.2 (default, Dec 2015, 13:05:11) [GCC 4.8.2] on linux &gt;&gt;&gt; 0.1 + 0.2 0.30000000000000004 You don't really want to compare floats for equality. You should use `math.isclose` in python which tests that x - y is less than some tiny value (epsilon). What Every Programmer Should Know About Floating-Point Arithmetic: http://floating-point-gui.de/
Asciimatics has a nice API but is very rough around the edges. 
You're right, I didn't test the examples with Python3, and I will from now on. Thanks!
Maybe the most interesting is how little dependencies are in the Python eco system. This is of course because the standard library is so nice/big. 
&gt; Disappointing that it only runs on Python 2. I hope you are joking.
Code generators? In Python? Why would you do that?
I am finding pyqtgraph to be pretty easy to use, including GUI controls.
That's a pretty bad idea. One of the reasons I decided Rails was not worth investing in, and the reason I chose django was because rails do code generation. It's a sign that you are using the wrong abstraction (in the case of rails), or your programming language is extremely under powered (in the case of say Elm or C).
So you admit spaces require more energy.
A few days back, I made a little tool that let's you access clipboard contents over a locally served website. So, I can copy text to/from my PC through my phone https://www.github.com/medakk/lipwig
I'd say Tornado has more in common with web.py than Flask. But Flask is probably the microframework with the largest community, which is usually the most important thing for support and utilities and stuff.
In Python, `is` checks for identity not value equality. You're checking that the memory address of the thing that you returned from the function is the same as the memory address of a temporary you've assigned 0.0 to. If this even works it's only because the interpreter has interned it. You can't rely on this behavior as it's implementation defined. Idiomatically, in Python we'd probably return `None` in situations like this (assuming empty string was ambiguous with empty string input). Python 3.5.2 (default, Dec 2015, 13:05:11) [GCC 4.8.2] on linux &gt;&gt;&gt; a=0.0 &gt;&gt;&gt; b=0.0 &gt;&gt;&gt; a is b False &gt;&gt;&gt; 0.0 is 0.0 True I'm not sure why it worked with the second case (constants) but I'm pretty sure it's not recommended to rely on it when returning from a function.
That's something I've wanted, actually - not so much so I didn't have to launch a browser, but so that I could have closer pairing to the keyboard for shortcuts and stuff. &gt; Combined with a lightweight web framework like Flask, Bottle or web.py, you can Is there any reason you couldn't use Django, instead?
Yep. There already is a language called D, actually.
Yes, that's why it's called C. And it wouldn't make a lot of sense to call python D, it's not syntactically or functionnaly based on C. The D language is currently being developed, designed to fix the issues of C. EDIT: by functionnaly, I mean it doesn't work the same way (garbage collection, interpretation/compilation, etc...) 
I haven't tried Stackless yet, but I'll give that a shot. Thanks for the suggestion!
Yes that's right I believe.
How about looking at the code and suggesting a better way, or maybe even coding it? Unlike this library and others like it, your critique doesn't solve any problems.
Yeah, fair enough. I'm a little hungover but wanted to contribute. 
https://www.reddit.com/r/Python/comments/4zwgf3/til_that_initial_python_commit_was_26_years_ago_i/
It's just a bash script -- echo "insecure" ;)
There's a really interesting bit in this where the author uses network analysis tools to identify 'communities' of closely related packages - so, for instance, the scipy ecosystem and the django ecosystem pop out of the analysis as identifiable blocks.
Or 5 in the UK. Seriously, you can legally drink at 5, as long as you're in a private residence. 
I wrote [envzigzag](https://pypi.python.org/pypi/envzigzag) to make it easy to compare environment variables between two contexts. That's a different kind of environment to what you mean, but your project name reminded me of it.
&gt; Once it finds that package, it downloads and runs a special python file titled setup.py, which contains a bunch of metadata for the package. This is only true for packages in the old egg format. Most packages are now on PyPI as wheels, which only need setup.py for building, not installing. The metadata from setup.py is still used, though.
I don't disagree, but unlike yourself, who knows enough to know what's wrong with this working solution, myself and all of these other plebes who write and use these generators are lost and at your mercy, and begging is all we have left to do.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
thanks for your reply! &gt;Are you using the py launcher or just trying to run it with python (or no-args)? I just drop the script above into the cmd window The launcher works: writting "py" on it send the default x64 version. 
So, you're running Python, and pasting the script in? I think you have to put that in a file, and run `py [file name]` for the launcher to check the shebang lines.
Huh? Which editors/IDEs are browser based? Besides Atom, of course; which _does_ support variable width tabs.
You're an idiot. Why not put some points forwards instead of being like "NO YOU'RE WRONG YOU'RE A DICK!"?
Ah, nice. I had pondered writing a tool to do the exact same thing, and it figures that someone else had done it first. I'll probably use this in the future if I ever get around to writing my hobby static site generator.
anyone else experiencing problems downloading this podcast (and other episodes of it) over certain apps? i keep getting ssl handshake failure exception (in podkicker on mobile, seems like it's using java) and also when i'm trying to download the files using python (urllib or requests). wget works though.
Use regular expression like you've started doing and then once you've got the URL for the picture, use the requests module to perform an HTTP GET to download the image 
The reason I want something like this is to make a self-contained file which I can save or send as e.g. an email attachment, without breaking the connection to resources it uses. An HTTP server is not involved there!
That's odd; the docs say that should work, and it worked for me when I tried it. I suspect something isn't installed right. Run `py -3.6-32` and see what happens.
I would expect those `if`s to be `elifs`. You could also do this: if compare == 'lt': compare = 'gt' value, warn, crit = -value, -warn, -crit Although I guess that would prevent me from doing this: print '{} - {} = {}'.format(('OK', 'WARNING', 'CRITICAL')[result], key, value) sys.exit(result) Then, as your cases are mostly single assignments to `result`, you can do: if compare == 'eq': result = 0 if value == warn else 2 That said, /u/glacierre2 's solution is also good.
^^^ Listen to this guy, The issue is that by having the main process contain the intial list, you are essentially passing all the data out to your workers and then making them work on it. There are two situations where this makes sense: 1. Your work takes relatively long compared to the data transfer. 2. You're able to reuse the data passed many times (i.e. the initial transfer occurs, but doesn't occur after that). You're not really in either situation. /u/hashwizardo If you'd like to have a simple example exhibiting speedup due to multiprocessing, you might want to take a look at the code I posted in this thread: https://www.reddit.com/r/Python/comments/5dritj/use_this_simple_program_to_find_the_factorial_of/da7fr89/ Read the entire thread if you want context, but the point is that my code there will show a speed up as long as the numbers being multiplied are large enough. Feel free to borrow/steal it as great artists do if it provides the example you're looking for.
Nope. It fully supports Python 3.
Sounds like your file association for python files is bound to that particular python rather as the launcher. Did you install python 2 after 3? That could cause the associations to get switched. 
&gt; ... but in the end we all use the same key. Control+I ^Am ^I'm ^Right?... ^^^Guys?
It looks very nice! I have a tool to retrieve webcomics and generate ebooks out of it and wanted to implement epub generation (at the moment, only mobi files are supported). I'll try to use your tool and see if it fits my needs :-) (If this interests anyone : https://github.com/SylvainDe/ComicBookMaker )
I agree but it's not the tab or space it's the backspace handling that always throws me. If I hit tab and it inserts 4 spaces then when I backspace into an empty divisible by 4 line then it should delete 4 characters not just one. 
instance variables of the same name override class variables. But setting a variable on an instance always sets/creates a variable on the instance even if a class variable of the same name exists. (also worth mentioning that `static` is the wrong terminology in python) so if you do: &gt;&gt;&gt; class A: ... x = 'bar' ... class variable can be accessed either on the instance or the class itself. &gt;&gt;&gt; a = A() &gt;&gt;&gt; a.x 'bar' &gt;&gt;&gt; A.x 'bar' setting the variable on the instance creates a new instance variable. &gt;&gt;&gt; a.x = 'foo' &gt;&gt;&gt; a.x 'foo' the class variable remains intact &gt;&gt;&gt; A.x 'bar' so it more or less works as expected, class variables can be used as "defaults" for instance variables, or they can be used like static variables are used in other languages. 
In Unix, the kernel looks at shebang lines, but in Windows, some other process must do this. The docs say over and over that it is the launcher doing this shebang parsing, not the python interpreter. This makes sense since one python interpreter isn't going to go run a different interpreter. If you "run" or "start" a file associated with the python interpreter, the launcher is not involved.
Can you give me a primer on all this egg, wheel stuff?
actually, python does not have constant / static variables. what you are referring to here are class variables, which are any variables defined outside __init__ and common to the entire class in terms of the language, there is nothing wrong with that and they are not static however, when I intend to use class variables as constants, I give them uppercase name to remind myself
Several, but they belong to my employer, so... 
You know how I know you're not a scientist? &gt; I favor the node centrality estimates for this network, since it gives answers that line up better with my intuition.
ho appena fatto caso al tuo nickname, visto il tuo profilo github, dedotto che sei italiano, e capito che abbiamo parlato inglese per niente xD
;-)
I wrote [littletable](https://sourceforge.net/projects/littletable/) a few years back, to help manage in-memory data sets using a SQL-like API. Here is some sample code: employees = littletable.Table() employees.csv_import('employees.csv', transforms={'salary': int}) employees.create_index('ssn', unique=True) employees.create_index('zipcode') # unique indexes return a single object print(employees.by.ssn["001-02-0003"].name) # non unique indexes return a list for emp in employees.by.zipcode["12345"]: print(e.name) # select by exact match employees.where(zipcode="12345", title="Manager") # select using predicate function employees.where(lambda emp: emp.salary &gt; 50000) # demo from the module help from littletable import Table, DataObject customers = Table('customers') customers.create_index("id", unique=True) customers.insert(DataObject(id="0010", name="George Jetson")) customers.insert(DataObject(id="0020", name="Wile E. Coyote")) customers.insert(DataObject(id="0030", name="Jonny Quest")) catalog = Table('catalog') catalog.create_index("sku", unique=True) catalog.insert(DataObject(sku="ANVIL-001", descr="1000lb anvil", unitofmeas="EA",unitprice=100)) catalog.insert(DataObject(sku="BRDSD-001", descr="Bird seed", unitofmeas="LB",unitprice=3)) catalog.insert(DataObject(sku="MAGNT-001", descr="Magnet", unitofmeas="EA",unitprice=8)) catalog.insert(DataObject(sku="MAGLS-001", descr="Magnifying glass", unitofmeas="EA",unitprice=12)) print(catalog.by.sku["ANVIL-001"].descr) wishitems = Table('wishitems') wishitems.create_index("custid") wishitems.create_index("sku") wishitems.insert(DataObject(custid="0020", sku="ANVIL-001")) wishitems.insert(DataObject(custid="0020", sku="BRDSD-001")) wishitems.insert(DataObject(custid="0020", sku="MAGNT-001")) wishitems.insert(DataObject(custid="0030", sku="MAGNT-001")) wishitems.insert(DataObject(custid="0030", sku="MAGLS-001")) # print a particular customer name # (unique indexes will return a single item; non-unique # indexes will return a list of all matching items) print(customers.by.id["0030"].name) # print all items sold by the pound for item in catalog.where(unitofmeas="LB"): print(item.sku, item.descr) # print all items that cost more than 10 for item in catalog.where(lambda o : o.unitprice&gt;10): print(item.sku, item.descr, item.unitprice) # join tables to create queryable wishlists collection wishlists = customers.join_on("id") + wishitems.join_on("custid") + catalog.join_on("sku") # print all wishlist items with price &gt; 10 bigticketitems = wishlists().where(lambda ob : ob.unitprice &gt; 10) for item in bigticketitems: print(item) # list all wishlist items in descending order by price for item in wishlists().sort("unitprice desc"): print(item) Also supports pivot on tables. Has been used as an in-memory catalog for a small e-commerce website.
 I don't know what you disliked with Django, but [ImportD](http://importd.readthedocs.org/en/latest/) is an easy way to get going very quickly, and is pure Django. So it's kind of best of Flask and Django.
Linux and macOS use file headers like that line to determine what executable should launch a file, and in this case /usr/bin/etc is referring literally to an actual file/folder path. It's completely non-functional in Windows.
Any gui lib can do this. I like pyglet and I wrote a similar program with pygame a long time ago
Which editor is broken like this?
Wouldn't bother. poor laptop microfon + mumbling + background noise = inaudible recording. I mean dear OP, have you bothered to listen to it before posting?
Have you heard of Electron? I am using it with Python as backend via Flask (https://www.fyears.org/2015/06/electron-as-gui-of-python-apps.html). Why should anyone use pywebview instead of Electron, am I missing anything?
At least you have time-stamps. Sometimes it's just index, index1, index2, index3, index_index, final_index, index4, [new_index ...](https://imgur.com/a/QkiVO) 
I was looking for something just like this! Thanks.
Is this data from the US Bureau of Labor Statistics? If so, they have an API you can hit directly, all you need is the series IDs you're interested in. Here's the API info: https://www.bls.gov/developers/ Also, most of their data is available from the St Louis Fed FREDERICK site which also has a nice API so if you're pulling several different types of economic data, using the FRED could make your life easier. 
Awesome feedback. I have nothing to add, just that I wish more code review/peer feedback was like this!
There is a pretty good summary at http://pythonwheels.com
Cheers!
Used Python to analyze the data, and make all the graphs for my thesis. I'll be using it to help make my defense presentation. I will be publishing the LaTeX plot production module soon after I finish everything, but you can access it [here](https://github.com/masasin/spirit_thesis/blob/master/src/latexify.py) for now. Unfortunately, the name I wanted (latexify) is squatted upon. What names do you think would be good? I suggest matplotlatex.
Post the entire project please, and whatever command you're using to run the server. Sounds like the HTML isn't going through whatever templating system you're using and is being output verbatim.
index.bak2.bak.bak
https://github.com/Welsh-Ddraig/cs4hs Hope you can see it this way and understand what I am trying to do. I need a simple fix. I am sure it is a noob problem. I run the python code in the background then open the index page and in theory, the page displays the head and nav bar as well as the rest of the code.
Works fine for me on Python 3.5. I run website.py in Python then connect to http://localhost:8080 and there is your red web page with a map and Iron Man. Is there any more information you can give me? The version of Python you're using (run `python --version`)? Any other error messages or anything being reported on the command line? Can you run `pip freeze` in your website directory and paste the output here? This will show what libraries you're using and their versions.
This is fucking sick
/r/learnpython
/r/learnpython
/r/learnpython Read the sidebar!!!!!!!!
We have [a pretty long list of learning resources in the /r/learnpython wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F). For a brand new programmer I'd recommend codecademy. Head over to /r/learnpython if you get stuck. Also, if you don't have one already make sure you look for a project that interests you and start on it as soon as you can. Programming is a lot more fun if you have a goal. 
I'd recommend you check out www.udemy.com. You can usually find good deals. If there aren't any, wait a few days for a sale. I've probably spent $15 per class on average. 
Likely the same as whatever owns the returned `PyObject` for `Py_InitModule3`(deprecated function that returns a borrowed ref). 
http://stackoverflow.com/a/8196691/2001268 The shebang line does nothing on Windows. 
You might as well start by throwing "threaded=True" in your app.run(). Although you really shouldn't be running Flask at that scale...
&gt; also worth mentioning that static is the wrong terminology in python What's the right terminology in Python? Class variables? Why have different terminology for just Python?
Removed for Rule 1: #belongs in /r/learnpython If you are about to ask a question about how to do something in python, please check out /r/learnpython. It is a very helpful community that is focused on helping people get answers that they understand.
WTF? 33 net upvotes for a GitHub with no stars and no explanation of what it does. Googling Yamaha Extended Control API" basically just provides links to the same repo or this Reddit post...
For simple projects, tools like 2to3 help a lot with converting code from Python 2 to Python 3. However, for codebases that make extensive use of many features in Python, the automated tools are not enough, and the code has to be ported by a programmer that knows that they are doing. For example, I have contributed hundreds of patches to port the Twisted library to Python 3: https://github.com/twisted/twisted/pulls?q=is%3Apr+author%3Arodrigc+is%3Aclosed Working on these patches required me to analyze and really understand what the code is doing, plus learn a lot about advanced Python features.
The more you know.
&gt;Run py -3.6-32 and see what happens I just tried it: it prints the 32 version
Obviously they will (as they do) but Github reaches far more people than the alternatives.
"For software with several releases over multiple years, it's okay to use a range (“2008-2010”) instead of listing individual years (“2008, 2009, 2010”) if and only if every year in the range, inclusive, really is a “copyrightable” year that would be listed individually; and you make an explicit statement in your documentation about this usage." Source: https://www.gnu.org/licenses/gpl-howto.en.html
The interview is with Paul Kehrer and it focuses primarily on the Cryptography library but also covers a lot of information about cryptography in general and how the situation in Python compares to other languages. I found it to be a very enjoyable conversation with a lot of good information.
Just to clarify, this is mostly "How to use APIs with Python". There are a few lines on deeplearning libraries, but the articles just essentially says "pip install and run main .py file".
It is basically another deep learning appetizer. You won't learn much about python and nothing about deep learning theory. 
I don't think that's quite true. While blessings is a great way to abstract low-level curses function, it doesn't provide the wealth of widgets that blessed does, let alone the more complex ones available in blessed-contrib.
I've already talked with you a bit there under the name "boxed" :P Things I haven't brought up on GitHub: - default styling on buttons doesn't look like buttons. I set the bg color to dark gray and that was much better. You should imo look at Turbo C 3 for styling - full screen mode for frames. Maybe automatic because when you have just one the border becomes a bit silly. - a table widget would be nice
All good to know... Quick answers below. * Fair point. I'll have a look at that. * You already have support for full-screen mode for Frames. Simply declare one that size of the screen and ask for no border. I'm not sure how I can provide more with a suitably backwards-compatible API. Did you have something more specific in mind? * Indeed it would! And one is on the way with the MultiColumnListBox widget... Check out the top demo in the master repository.
1. cool 2. hmm, maybe I just missed it. Backwards compatibility be damned I say. Good solid defaults are more important :P 3. cool
The Python compiler generates byte-code for a virtual machine, rather than machine-code for a real, physical machine (a CPU). The CPython interpreter includes its own virtual machine which interprets the byte-code. (It is something like Forth, in a way, in that it is a stack-based language.) You can consider the byte-codes to be something like assembly language commands for a machine being emulated by the C Python interpreter. Jython generates byte code for the JVM, and IronPython generates byte code for the .Net CLR virtual machine. In principle, you could write a Python interpreter that generates machine code for a real CPU, but because Python instructions are so high-level, that's not very practical.
woaaah easy there. The article is well constructed and there's good info for beginners. 
Why would Python follow suit and be called D? Python is nothing like C. Although the CPython interpreter is written in C, the language itself has more influence from Algol and Modula 3 than from C. And there were a whole lot of languages invented after C, but before Python, that would have got there first.
I like it as well, developped some apps at work and also for private use. The deploy and build flows could be improved and streamlined in my opinion. It misses some theming options (i need to work a lot with the Atlas files). Except that, it does the job.
Instance attributes and class attributes. If you like, you can say "member" instead of attribute, but immature coders will snigger at you. "Class variable" is wrong, because classes are first-rate values the same as ints, strings and lists: if a string variable is a variable holding a string, and float variable is a variable holding a float, then a class variable is a variable holding a class. "Static" is wrong, because they aren't static at all -- unlike Java, say, they aren't defined at compile time, they are defined at runtime. (Like pretty much everything in Python). And if you think it's just Python that uses different terminology, you have a lot to learn about programming languages. Edit: Since Python was using the terminology "class and instance attributes" four years before Java even existed, I can turn your question around and ask why *Java* has different terminology?
doing a pip install and calling an api is not 'building' a new article title is needed /disappointing
Wow how have I not seen this before, this looks awesome! Will check it out later...
You can use lxml and XPath to do that: from lxml import html page = """ some html """ tree = html.fromstring(page) links = tree.xpath('//*[@src or @href]/data(@src or @href)')
So using pixel makes the system have already loaded the Gtk+ libraries (LXDE is based on it). I would go Gtk+ and Glade for designing the interface
divide left term by right term and put the result in left term variable edit : a = 10 a /= 5 a is now 2 
\&gt;:(
Are you wanting to add the data itself or a package that uses this data to pypi? If it's literally just the data, don't do that. It won't probably install properly, and if it does what do some json files in site-packages get me anyways? If you're building a package that uses this data, look into MANIFEST.in which lets you bundle non-python files into your distribution. 
danke! 
I think hands-on is a really good way to learn as well. It can be hard to find a project to work on though, so sometimes finding a book full of fun little projects is useful. I have also learned a lot of concepts about common programming techniques that I don't think I would have picked up as quickly without a book or two.
It imports Flask which is used to run a simple webserver with root route (`/`) returning `200` :)
No I mean, what does the code do? How does it work?
 $ python3 -m http.server
Any one with a basic programming skill can code a "deep learning application". What I consider is the difficult part of deep learning is not the algorithms itself but the infrastructure required to train it. For most of the deep learning problem minimum a GPU and 8GB memory is a must.
Indeed, he seems to be really humble about it. We should have more people like him :)
When I see things like that, it makes me realize how late I adopted some technologies and languages :)
Yeah, it's literally just data, so as you said it would not probably install properly, so I have decided to leave it as is. thanks 
"Stuck" isn't quite the term I'd use - but I digress. Edit: I didn't realize which subreddit I was posting in. But fuck it, I'm leaving it. Python2 forever!
Is jailed better ;) ? Just kidding, I know people have lots of reasons to be on `Python2` :) I'll rephrase
What are the benefits, differences compared to http://xon.sh/? :)
Try reading the section above the one you linked https://docs.python.org/3/using/windows.html#from-file-associations. Then try reading https://docs.python.org/3/using/windows.html#shebang-lines and again. Python 3.4 did not change how the entirety of the Windows operating system works.
Mine has more potential to improve. **Edit:** Guys, it's a joke. More potential to improve as in more to improve and less that's already good.
You could return a response in flask and just provide the image data from the database rather than from the filesystem, right? Simplified idea, doesn't take into account getting the image type from the database as well, but should get the idea across: from flask import Response @app.route('/image/&lt;db_image_id&gt;') image_data = image_data_by_id(db_image_id) return Response(image_data, mimetype='image/jpeg') 
That's what I saw from my initial google searching, just manually modify the headers to make the response work with the binary data.
If you are battling company policy then fight for a modern python version which comes with pip. By default most packages go into the site-packages folder ('C:\Python27\lib\site-packages' if python was installed to the default location), but really it's up to you. Run python -m site for a list of all the locations that python looks for imports. 
Thank you!
Wouldn't need to load it all into memory at once either if throw in a generator: http://flask.pocoo.org/docs/0.12/patterns/streaming/
Try contributing to a relevant library! I like [SymPy](http://sympy.org) personally, but you could also consider NumPy, SciPy or Pandas. To get started with SymPy, they even have an ["Easy to Fix" label in their issue tracker](https://github.com/sympy/sympy/issues?q=is%3Aopen+is%3Aissue+label%3A"Easy+to+Fix").
Why rephrase, the wording was perfect. I for example am happy that I'm not stuck with Py2 :)
Who would've guessed that normal Python is better than cryptic lambda mess ;) I guess this post should have a disclaimer explaining it's not a serious piece of code and should not be used... Oh wait.
It's almost there, needs just a few more adjustments.
How quickly the old memes are forgotten. https://m.youtube.com/watch?v=b2F-DItXtZs
You can try using ``asyncio`` in order to minimize the waiting time. If you don't have experience with coroutines and IO loops, it might be a little tricky at first, but it has huge benefits (especially in this IO bound scenario). Also Windows 10 has some issues with the Python performance (thanks to the Windows defender, yay!). I am experiencing some performance drops on two different machines where the only difference is the OS (the one with Windows 10 finishes the run in 10 seconds while the other one with Windows 8.1 finishes in under a second).
If you use mongo solely because your bad at defining relational databases, you're gonna have a bad time a couple of months later... 
What about it?
You might be right I find the doc confusing (maybe because I'm not english speaker) and I'm a beginner in python. But did you see a sentence somewhere that says: the launcher won't do anything in windows, if so where? And if so, why is there a windows python launcher? 
&gt; If /dev/null is webscale I will use it, is it web scale?
The notion that MongoDB is easier to use than Postgres is mostly based on the idea that you can write any json structure to the database with zero thought about design. Which later on you discover is a catastrophe because you need to read and handle a million schema variations. On one mongodb database I encountered: * There were no documented schemas. Programmers just deployed various versions of their software and ran them through a debugger to see how the program reacted to the database - what schemas were created based on various inputs, etc. This took a nearly infinite amount of time. * I created a program to surf through the entire 4TB database and figure out what schemas actually existed. It took about 1 month to complete against just 4 TB of data. Only then could we determine how to convert all the data in order to comply with a source licensing change. That conversion took about 2 months to run - against just 4 TB of data. * Then there was security &amp; backups: most of the backups never ran sucessfully, and there was no security. Also, it was a critical database. And yeah, the original programmers thought it was really flexible &amp; easy. But they were clueless and created a fricking nightmare that could have destroyed the company.
You could always try a pure Python html minification library rather than calling an external program in a loop which sounds kind of horrible to be honest. https://htmlmin.readthedocs.io/en/latest/
Do you use sklearn for regression?
Is this stable enough to be used as a primary shell? 
This would be handy, but I would like to keep everything using the Python standard library. I will keep a note of this later as it looks very helpful for future projects. Thanks!
Oh man, I see the confusion. I don't think many people have actually heard of this "launcher" thing. The docs about it are terribly confusing. You should be running .py files like [this image shows](http://i.imgur.com/sDhUHgV.png). You locate the python.exe you want to use. `where python` shows you the one in your `path` on Windows. The `type` command shows the entirety of the file. Then you execute (run) the python.exe file using the .py file as an argument. There are a lot of different setups that hide this from you, but they all do these things at the low level. 
The *easiest* way? Excel / Libreoffice Calc. Did you have something more specific in mind? 
No
I, for one, am happy to be free of Python 3 ;)
/r/learnpython is the place for this. 
Got it! reposting &amp; deleting this one.
It's one of the old timey acronyms. In my experience.
This is _really_ cool, thanks!
thank you, I'll try to play with them a bit ^^
You should try it just for the experience. Feels a bit more technical, more solid.
Yeah I'm thinking about setting up a quick bootstrap dashboard. Maybe link in a Flask API first so it could be used cross platform, then just setup that bootstrap with php function calls. What do you think?
Is it still wonky with python 3.x? It was missing comparability with some plugins a year ago
Basic packages you would want to learn besides basic python would be matplotlib, numpy, pandas, and scipy IMO.
Plausible, judging by [this 1994 comp.lang.python message](https://groups.google.com/d/msg/comp.lang.python/OwUFprF-QAw/gI44AKsadSMJ). It was in CVS by 1998.
Oh... I'm silly, I can just put the webpages on flask. Never mind haha
Using Google search this way is against their ToS. The official Search API was depreciated in 2014, and now you have to pay ~$5/1000 searches. Maybe look into using [duckduckgo](https://api.duckduckgo.com/api), but even then: &gt; This API does not include all of our links, however. That is, it is not a full search results API or a way to get DuckDuckGo results into your applications beyond our instant answers. Because of the way we generate our search results, we unfortunately do not have the rights to fully syndicate our results. For the same reason, we cannot allow framing our results without our branding. Please see our partnerships page for more info on guidelines and getting in touch with us. 
Hello, I am a beginner programmer and I wrote a blog post about how I chose the book that I'm currently learning from, after trying and giving up several times. I am very interested to see what you think about it and would love to hear your suggestions on what other books are great for absolute beginners as well as what books should I check out after I finish this one. Thanks.
https://github.com/isaacs/github/issues/170 Eh... I see your point. Kinda sucks.
&gt; impotence mismatch ~~impotence~~ impedance mismatch. If you want to state a con to prove it is better than some other thing, at least spell it properly. You just came off as not knowing anything about the subject. Also you can't just state a single technical downside of a technology and conclude it is better than some other solely because of that. That's as superficial as the fizzbuzz articles around "web scale" written by poorly informed entrepreneurs. I've worked with really large data stores and I can ensure you in most cases, MySQL outperformed Mongo. It is not that easy as X is faster.
I will actually check this thing out
Plumbum has nice color support, too. Ansimarkup: from ansimarkup import ansiprint as print print('&lt;b&gt;bold text&lt;/b&gt;') print('&lt;red&gt;red text&lt;/red&gt;', '&lt;red,green&gt;red text on a green background&lt;/red,green&gt;') Plumbum: from plumbum.colors import bold, red, bg print(bold | 'bold text') print(red | 'red text', red &amp; bg.green | 'red text on a green background')
Did you notice that the article is about using Postgresql for things other than a traditional RDBMS?
Don't use Canopy. The editor is kinda gimped and they don't want you to directly access the interpreter because they fear you'll change something and they don't want to support it. It makes it much harder to move beyond the couple of packages Canopy happens to like. Use Anaconda instead. Also free, also Science and Engineering focused and also has a nice package manager. Editor-wise it also comes with Spyder which is more than good enough for the most part, but you can then go and use PyCharm or PyDev (Eclipse) when you start working on bigger projects. I managed to somehow fry Canopy several times when I first used it and actually corrupted my python install trying to factory refresh it. I haven't had any issue with Anaconda aside from changing the default python interpreter in Linux (which you don't need to do).
Okay thanks. I'm just having difficulty running anything I do. I think I may hope on code academy for a refresher. 
From glancing at it xon.sh appears to be an actual python REPL while ergo can capture some stuff when you explicitly start a python interpreter. Not sure if that interpreter is part of the ergo process or independent of it though, anyone?
No.
Hey, thanks again for the feedback. I've updated the post to be friendly with boto3 instead, and completely scrapped the old boto. You are right about the usability, I love not having to pass my security keys back and forth!
Hmm I am trying to use your code, but when i try to import leftpad i get an error.
This will be the same in Win8.1 and Win10. http://geekswithblogs.net/renso/archive/2009/10/21/how-to-set-the-windows-path-in-windows-7.aspx
/r/learnpython
cool thanks
[Python tutor mailing list](https://mail.python.org/mailman/listinfo/tutor)
Well done on choosing a Python 3 resource - for new programmers, Py3 is clearly the best choice. Py2 is largely retained for folks doing maintenance on existing/legacy systems; in the unlikely event that you find yourself in this boat, then you may have to do a little backtracking. The "write a game in 3 or 4 chapters" approach is definitely there to appeal to those learners who need some form of visual payoff. Printing out the first 100 Fibonacci numbers or the 8 queens solution doesn't do it for everybody. This tells me that you are able to visualize the abstractions in the elementary lessons of control flow, data structures, and modular code organization, and this skill will serve you well down the road. Next steps would be to pick up with the resources down the right panel of this subreddit, as well as look into the r/learnpython subreddit. There are some metaskills to pick up that are fairly independent of the specific language, such as source code management (GiT or Mercurial, among others). Get in the habit of using a repository to manage your code versions - it will save your bacon! But learning to "code" is like learning to swing a hammer, saw a straight line, and screw in a screw - learning these skills is still a far cry from knowing how to make cabinetry. In programming, there are analysis skills, design skills, and coding skills, all with various levels of difficulty and achievement. Don't look at this as an impossible mountain to climb - look at it as a new wilderness to explore along a variety of paths. Best of luck!
Cool Points +10000 !
&gt; A Recommender System predicts the likelihood that a user would prefer an item.
You can continue to use R for data science of course as it's free, unlike matlab. Python also works well but if you know R there's not a compelling reason (IMO) to drop it. 
There's no replacement for Simulink that comes close. I wouldn't go getting rid of everything. Not teaching students that is a disservice given the number of engineering jobs that use it.
http://httpbin.org/ and http://requestb.in/ are great for this stuff 
~~I hope it isn't actually a 501, 405 is the proper code.~~ Edit: 501 is the proper code. 
Still better than that guy that would his Church library once a week with a different alt and receive the same criticism every time. 
This is only a benefit of other things can be done at the same time. Otherwise it's just more overhead. 
Both of you should simply move to Golang.
It does seem pretty great potentially, but for the sort of projects I find myself working on, I find myself leaning heavily on some of the awesome Qt widgets, especially things like QTableViews, that are miles ahead of what Kivy has (...or, at least HAD, it's been awhile since I trialled Kivy for a project).
Great blog post.
Mostly speed of access and simplicity with integrating it. All the blog entries, shop entries, etc are stored in a database so why not store it there as well. Every other solution seemed more intensive on resources 
[removed]
Fair call, I've not used Anaconda myself (although I am familiar with it). I only use Canopy for the shell. Personally, I *actually* use pyenv and install packages I need via pip, but I find this doesn't work so well in a team environment as many users I work with aren't comfortable with that level of doing things. EDIT: BTW, not sure who downvoted my first post, but just so you're aware, if you want your comment to be more visible, don't downvote the comment you're replying to, as it will bury your comment too. Also, one probably shouldn't downvote comments just because one disagrees with them (if that is what happened here), as I understand the downvote mechanism is intended for hiding irrelevant, offensive or plain stupid posts, which I would hope don't apply to my original post :)
Personally, I think that's silly. Tools like nginx are really good at serving static assests. Grabbing static assests by delving through nginx, through your wsgi server, through Flask, hitting the database and then busying Flask and the wsgi server with decoding the assest and then piping that request from Flask back through your wsgi server and through nginx just to avoid deploying static files seems silly to me. Especially when you consider when you consider what happens when marketing accidentally blasts your entire customer base with a link (which, unfortunately, happens). If you don't have a marketing department, replace that with a top of the front page link on reddit. *All* of your assests will come from the database. Your poor, defenseless database. It never asked for this. Instead, if you keep them on the system proper you can get nginx to do all that work for you by only pointing it at a directory and adding try_files *and* you don't add busy work for Flask or hit the database. 
Some brief examples. Test send/receive emails. Create/delete users. Check/restart services. Test network ports/APIs. Any tool that would make your job easier.
Actually, it does. You can either create of subclass of BaseHTTPRequestHandler that has a do_post method, and pass that as the handler_class to HTTPServer, or you can use [CGIHTTPRequestHandler](https://docs.python.org/3/library/http.server.html#http.server.CGIHTTPRequestHandler). You do python -m http.server --cgi 8000 and make an empty executable script called upload like so: #!/usr/bin/env python Then you can post to 127.0.0.1:8000/upload. 
I'm a bit disappointed in that! I thought there was command aliasing to make those commands have parsable output to the shell. I agree that's no fun.
You should write down what problem you need to solve and then look for the programming language that will help you achieve this. Python can be use to do a lot of automation work.
Unpopular opinion: I utterly abhor Scrapy. I think it's *way* too clunky for what it achieves.
Maybe the idea is to make a universal system (in other words, works on Windows!) without any other dependencies except Python. It's a cool and impressive project and isn't a bad exercise re-implementing these well known programs but not ideal for switching over from bash (or zsh, fish, etc). I usually install (MinGW)[http://www.mingw.org/] on a Windows machine I want to use with a command line due to my familiarity with the basic Unix commands. I don't think it's too much of a stretch for this project to request others to do the same on Windows to get access to these programs.
You'd be better off asking what you can't do with it (in an IT role). Just for reference I work in an IT support/Jnr Sysadm role and use/learned Python to send our IT Department an SMS whenever something on our network goes offline/stops responding to pings- works great. 
How so? My company recently decided to invest time in it.
It's only the origin and the destination. 
This subreddit has a real hard-on for Python 3 for some reason, even though it fragmented the community into halves (as you can see) and now I have to explain to my coworkers why Python 3 isn't a drop-in upgrade for Python 2 by starting with how much Guido hates ASCII.
It is not my post and I'm not the author of that post. I just wanted to share that link.
Ah, sorry. When something is posted here 20 minutes after it goes up it's usually the author that posts it. 
Jupyter is an interface, not a plotting library - you just use `matplotlib.pyplot` *in* a jupyter notebook.
What kind of plots? You may have an easier time if you start with `pandas` + `seaborn`, or for maps `cartopy` - it's all based on matplotlib, but there are many good wrappers. Source: have used all these things for published graphics.
Nice!
The file saving thing is not very convincing
Here is the advice I would give to myself, (For Python repo's) 1. Don't forget to use the Virtual environment as much as you can. Completely shift you old reports to the virtual environment if possible. I would prefer to develop &amp; deploy in the virtual environment only as I would have an independent control of my packages on shared servers. 2. Start with test cases. Write them for the purpose they are required to work for. Spend good time in test case or taking help from others to write test cases. 3. Go for the latest stable versions in the market. You might find a complete module to replace a whole set of code. Use it. Less code to manage is the best code. 4. As you mentioned earlier `Fix the errors`, don't take up new jobs at once. Think, if you move the old code to adapt to new versions without adding more errors. Prefer not to trade off with errors. 5. Updating old report is every programmer's responsibility. Good Luck.
`matplotlatex` is a fantastic name! I like the functions too; I can see how much easier it must make getting the sizes and style right.
I hope he does some fact checking "There are hundreds if not thousands of other languages out there that are statically typed."
Well, he does have a point. Python3 has a lot of perl type screen garbage that is available to use. I argue that at a minimum the new keywords are okay. They do things. They're 'english'. And they are unique enough. The things that bother me are the type hinting craziness - here, he's right - python was always about short, easy to read, ducky code. And there are better languages out there for static typing. Additionally, I don't like the three and a half competing ways to do string formatting. There should be one and only one obvious way to do things. All these different methods just obfuscates python. That said, I am generally very happy with python 3. Unicode defaults are my favourite (yay! 😻). 
A friend and I *just* launched [SendOtterLove.com](https://www.sendotterlove.com) [note: paid service]! Very excited to just *actually finish* something that isn't a simple blog or static site. Django + Stripe + Twilio for now, with Postgres and Redis likely to come for future improvements.
You win, this time.
Concenating normal Python lines with `;` is not really golfy though :s
Yup. The python op2 reader can do 2 GB in 4 seconds. I actually have to thank the matlab group for that.
I think people are fine with both Python 2 and Python 3, but the positions of the two opposing camps are so entrenched by now that any perceived criticism of the opposing camp is swiftly downvoted.
Are you using some Cython, Numba, or something slick to make it so fast?
Pretty simple, I found out that upon solving the captcha and waiting five seconds to be able to press the continue button to the linked page, this button is simply a post request on itself with exactly one static parameter, which is the same for every link. And done, just do the request on the link and you get the actual link in the html code of the target
Just because *historically* octets were synonymous with characters doesn't mean it's a good idea to continue conflating them. There is a thing called Unicode now. Times have changed.
Someday, but no. Lots of preallocation, numpy fromstring and saving a few struct objects. I actually read the file twice. Binary files are just that fast.
Oh No, not this.. again.
It really depends on the project you are working on. I use both. And TBH, they aren't really crazy different from each other. If you have a good understanding of Python, switching between the two should be easy. Edit: just re-read your post. Small web projects, one-off APIs for clases etc., I'd go with Flask. I use Django for large applications where I don't want to have to add all the goodies like databases/models/authentication.
Yes, I am the owner. And it would be nice to have someone contribute for this specific task, because my python is nearly 0 so it would also help me to learn something
https://www.youtube.com/playlist?list=PLGLfVvz_LVvTAZ-OcNIXe05srJRXaJRd9
I can understand his words if he's not a programmer but hobbyist. He probably doesn't like that his knowledge will soon be deprecated and haven't accepted that python3 is inevitable. Edit: engrish
`yes 'HTTP/1.1 200 OK' | nc -l 8080`
Learn both. Two different approaches to the same concepts, and they are both useful in different situations. I'd start with Django, the official tutorial is really good, and always up to date. 
well yeah, ``Popen`` starts a new process, that implies loading the binary in memory, loading its dependencies, (scanning with Windows defender if running on windows 10), initializing its context, run it, free allocated memory. All these stuff are done by the operating system and there is no reason for the script to wait for them to finish in order to move on to the next iteration. Another solution that might improve performance is starting processes in batches (let's say instantiate 8 ``Popen(...)`` and after that get their output via ``communicate()``. 
Sorry, can someone explain? :( [`left-pad`](https://www.npmjs.com/package/left-pad) seems to be a JS module so I'm sure there's a joke hidden in here somewhere!
I did now.
Python is just as simple. You start without all these things. 
I'm shipping to a farm. 
Since python's socket.gethostbyname uses Winsock 2 on windows I guess it does host lookups without domain Part (all of your hostnames except router.asus.com) over NetBIOS instead of DNS. Since neither Android nor iOS have a NetBIOS daemon, they don't publish their hostnames via NetBIOS. I had a similiar problem with hosts that are not running. Even my DNS Server knows the hostnames and would respond with an IP (which also worked on Linux and macOS), Windows told me the host doesn't exist, since the NetBIOS Lookup failed. I modified my script generating the DNS Zones that it also generates a second DNS Zone with a ".local" added to the hostname. Windows now handles this as a FQDN and asks the DNS Server for the IP.
For Node modules I'd suggest [Yarn](https://yarnpkg.com), it handles cross-platform variance and allows you to version-lock easily, but it's just a layer on top of NPM itself so it's not magic. More generally, I'd suggest reading through the changelogs for all upgrades and creating user stories ahead of time for changes you know will be breaking by the upgrade. Then, when it comes time to do the iterative log -&gt; fix error cycles, you should have far fewer.
&gt; 405 Method Not Allowed &gt; The method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource. &gt; 501 Not Implemented &gt; The server does not support the functionality required to fulfill the request. This is the appropriate response when the server does not recognize the request method and is not capable of supporting it for any resource. - - - And the `-m http.server` doesn't know of any methods other than `HEAD` and `GET`, so it seems 501 would be better?
http://www.urbandictionary.com/define.php?term=IME
Reminds me of [this](https://www.youtube.com/watch?v=OuvFsB4SLhA).
[removed]
You can also make for instance web applications, e.g. with [Django](https://www.djangoproject.com/) framework. I also recommend visiting [GitHub](http://github.com) and checking what is it used for in the big 4 - [Facebook](https://github.com/facebook), [Google](https://github.com/google) etc. (Provided links will direct you to their repositories on GitHub). Even if you cannot read Python at this moment you can read README files to have a gist about it.
I didn't wanted to start a flame war about the goods and bads about python 2 and 3 or other languages. I just feel like very weird with that uncommon method signature `(str: name) -&gt; str` whatever that means. :S
Yes. I'm using Anaconda which comes with all the tools I use for data analysis. 
My 2 cents...matlab is great for a single user/researcher/academic. There is no reason to switch to python if you don't want to create reusable or large scale used components. Ofc if you want to ditch the licence, is a very valid reason, but python will require some "maintenance" based on how you will decide to use it. Have you considered octave?
You can DuckDuckGoing this instead `!ud ime`.
This is beautiful!
It is kind of like a "cheap" (as in, simple and unexpensive) version of deep dreaming. It's however got the advantage of being a much more understandable model. Do you think it could work with sound?
10/10 good troll. would use again.
web assembly? nerd, we use x86 assembly for our webservers. We even wrote a x86 to web assembly transpiler.
Variables are called "variables" because they vary. Nothing to do with when they are allocated. The Python terminology better reflects what's actually going on: attributes are different from both local and global variables because you have to use a qualified name to access an attribute, not an unqualified name: "instance.foo" versus "foo". And class attribute versus instance attribute reflects the way they are stored and how they are used: - class attributes are stored *in the class* (in the class `__dict__`, or a `__slot__`); - and are commonly used for *attributes of the class* itself, i.e. data which is shared by all instances; - while instance attributes are stored *in the instance* (in the instance `__dict__`, or a `__slot__`); - and are used for *attributes of the instance*, i.e. data belonging to a single instance. Of course there can be exceptions, e.g. the Borg pattern, but they're unusual or outright weird.
 #!/usr/bin/env python # -*- coding: utf-8 -*-
didn't solve encoding issues with data lifted from external sources. You parsed some html/xml/json and it either worked or it did not.
That's when I hard code a dictionary of character replacements and text process that shit into submission.
[removed]
I've actually used this before...but it's kinda hard making it work for the web. 
Not that ergo does this, or even xonsh, but what I would prefer from a shell would be the opposite of the typical "everything is a string". Ideally `ls` would return a list of file objects (whose default \__repr__ made it **look** like the typical ls), which I could iterate over, inspect attributes of, open, etc. It would be worth relearning (mostly archaic and nonintuitive) flags and such for commands whose output was more generally useful than a blob of text. Again not that ergo does this necessarily
But why do you want that?
I haven't used a Unicode literal in _years._ The only reason you need one is typically for web work, so Python 3 decided to shove that down everybody's throats even if they were only using bytearrays.
It's in the OP, friend wants to test his upload program without bloating the PC :)
What's the advantage of this over find? lsi -ifx | xargs -r0 mv -t hidden-files could be easily rewritten as find -type f -exec mv -t hidden-files {} \;
https://github.com/mongodb/mongo/tree/master/src/mongo/db/storage/devnull If you chose.
no! second command will move all files, hidden and non-hidden. former command only moves hidden files
I've never heard good things about building Android apps with a hybrid framework like Kivy. You'll have a much harder time troubleshooting issues because many more people do things with Android proper. 
I don't explicitly say it but test cases and virtual envs were implied :) thanks for the advice. I especially like 2 and 3. Right now we're using multiple modules that practically do the same thing and it severely complicates decision making. Less code is better :) but not always possible
mmh I must say Ruby has interesting and unique (not in python) web-related projects… - https://inesita.fazibear.me/ to write front end in ruby - http://voltframework.com/docs everything in ruby, share code between server and client. Stale project :/ and in ruby you could help on Diaspora :) python has nice sub-languages, some more functional: https://github.com/vindarel/languages-that-compile-to-python and I feel like Ruby is only used for web dev with Rails, and loosing traction, when python is used for much more tasks.
/r/learnpython
There's a function called 'Select' somewhere in selenium that might be what you're looking for. Just fyi in the future you might get more feedback posting this in r/learnpython
besides you can have a look at http://importd.readthedocs.org/en/latest/ if you want to start quickly with Django, à la Flask.
Huh, I wouldn't think it would be too difficult once you got it to match faces with your database of faces. Once you have your django project up as a web server, set up media uploaders via a web page so you can upload your images by hand initially. I expect that might change later. From there you can have django run open face either in real time if it's fast enough but a better way is to set up a task queue via redis or celery to queue up open face. I can give you pointers along the way if you'd like.
Good article. He forgot to include details on the 15 ways of doing string formatting
Sure thing ;)
I don't see that mistake on the first few videos, though you might be further than me. Was the capitalization your own doing? I deliberately did the same thing, putting the stock ticker in a variable and naming the file {ticker}.csv.
Can the output be restricted in some ways to confine it to a min and max time and pitch interval to make it a little more palatable? 
This is so cool! Well, look on google https://github.com/alexkychen/Auto-Fish-Counter The simple way is to first plan your application, where the data should go etc and then just get your hands dirty ;)
Thanks for the tip.
thanks this really helped... 
Hey, if you are using python 3.4+ there's a nice standard library module called [pathlib](https://docs.python.org/3/library/pathlib.html) that can do [what you described](https://docs.python.org/3/library/pathlib.html#pathlib.Path.rglob).
I could see someone taking this on the road and calling it "Do robots paint with electric paint brushes." Might get a good bit of traction on the right circuit.
Have you used Openface with Django before? One of the things I did was...copy and pasted the folders which was necessary for the openface to work. The result was quite satisfactory, but I did want to change the returned data a bit. It kinda did work in my local, but when I uploaded it to a web server, the result was not the same as my local. 
In addition to C-style array indexing, there's also the way that MATLAB does slicing/range generation, where you specify the last index, rather than one more than the last index. It took me a while to get used to the difference in slicing and using `range()` when I switched to Python/NumPy. Oh and also one definitely needs to learn list comprehensions. Sometimes NumPy can't vectorize an operation for you (e.g. working with datetimes and timedeltas).
I've never done it personally but it sure sounds feasible. In fact, a quick web search for 'python requests xml-rpc' yields such a requests-based transport class: https://github.com/astraw/stdeb/blob/master/stdeb/transport.py Note that you don't need to make a copy of the XML-RPC client in your project because the client is designed to accept the transport class on input so you can override the non-thread safe default behaviour as needed.
thank you. I'll have a look into that one. 
it's a hard subject, it will always be hard. but having the relevant stuff spread all across the std library is silly
Hey I did something similar with text files last week! 
Starting Sentdex's Game Development in Python 3 series. Been looking to improve my programming skills in the evening without getting into anything too heavy.
Link?
Seriously, idk why he didn't at least comment the link. Anyways, I found it. Here you go. https://github.com/mattharrison/Tiny-Python-3.6-Notebook
This version also support 2D-list http://imgur.com/vTvL9K9
Others here are frankly probably better at answering this specifically for Kivy. I did it with *Qt and dear god what a waste of months of my life. Square peg, round hole for serious development. You are right, though, if it is simple it won't be too much of a pain. If it is a one-off thing then no biggy. Frankly, though, if you want to future-proof your droid app building skills in any marketable way, then not doing it through Java seems a huge mistake. You want your programming skills to be able to perfectly match the task, not try to shoehorn the task into one framework (I have to make it work using Python even if Python isn't the right tool). The time you spend banging your head against the wall is time you would have spent learning Java and seamlessly building apps that can launch across multiple Android versions/platforms. Just my 2 cents. The best thing I got out of those months was about 1000 reputation points at Stack Overflow for answering PyQt questions. Yah internet dollars! And slowly dawning realization that I was using the absolute wrong tool for my job.
This library is the first Python library I've made. So there may be a shortage. PR and issues are always welcome :)
I didn't know about dh-virtualenv and crafted something myself knowing how dpkg-buildpackage works. It works well. Knowing in detail what a virtualenv is and how to build one use one helps. Knowing why people say virtualenv's aren't relocatable and then using a PYTHONPATH system that is entirely relocatable anyway helps to make packaging easier. 
&gt; why I'd pick Python over C++ or Java. In a nutshell: python is a little slower to run and a lot faster to program. So you trade off computer time for programmer time. 
Async solves the problem of loading a large file or issuing a server request. You sit there and wait for something to happen. Why don't you do something else while you wait?
Writing some cookbooks for various libraries I use. I have some self-made references but they aren't standardized in any way and not as usable as I intended. Making these helps me learn a LOT about standard and third party libraries, gives me pre-prepared, useable code that I can rely on and helps me explore tools that I haven't used before. I'm thinking about trying Jupyter Notebooks for them. If you have a better suggestion, I'd love to hear it.
This covers only a small part of the youtube API. Sadly, for me, it doesn't include the call that I want most; *listing videos for a channel*. One would think this would be easy, but the Youtube APIv3 is one of the most difficult and nonsensical APIs I've ever used.
Title: Friend wanted a simple web server that just returns 200 Explanation: "I just want to enter a few commands to the terminal" Can you really fault people for not waiting until Small postscript at the bottom of the post: P.S. he needed this silly server to test his uploading program **Especially with a big bolded footer drawing the eye away from the small postscript** Here's how I know it's an issue: I completely missed the postscript when I read the post just here, and though I caught the POST in the code snippet it didn't make me think "well obviously he wants to upload a file" it made me wonder why you hadn't used the default value. And that's having actually tried reading the text body, many people just run with the title.
Perfect, that's my plan then. Again, thanks for taking the time to answer this... I'm going to get to work implementing this very soon. 10/10 solid advice all the way around. 
I haven't but I am willing to try it, though I might use the tensor flow version as that's what I'm focused on learning these days. What are the specs of your program? Or specifically, how are you going to feed images to it? Web upload form? A raspberry pi camera? A movie file of old episodes of a TV show?
Which Matlab packages are you using? If this has changed please understand: I last personally used Matlab at version 14.0 and before the push to everything as a subscription model. If you're doing b-spline stuff and image processing stuff via OpenCV, know that this can be done via Python, but it's not as simple as pip install opencv. Check out "Tall Python to Me," there's an episode on this there. EDIT: I see someone mentioned Simulink. Greetings, fellow Simulink buddy! Also, as they rightly point out: hard-core engineering and maths makes pretty good use of Matlab. Most defense contractor type work I know about makes EXTENSIVE use of Matlab and it's modules/packages. If you're a decision-maker here, and you track job-placement and salaries, you'll harm yourself with a batch of students knowing nothing about Matlab. If you're not the decision-maker here, you'll probably, painfully, muddle through. :/
A very simple script to read and write XML tags using a dynamically generated value. To be used for standardizing a parameter enterprise-wide (local config files on thousands of servers).
Not to be a jackass, but maybe you should read the whole post before commenting then... This applies to everything really.
Wouldn't you have seen this right away if you were running something like new relic? Mind you it's not free but neither is your time
That's delightfully cryptic. How is the result "not the same" when running via Django? What type of classification error is it making? Also, what did Brandon end up suggesting?
I'm going to either continue improving my file moving program or start working on data visualization. I just don't know what data to visualize haha.
Rewriting our intranet in Django,trying to purge SharePoint from our organization.
How is it?
It's in the other file, [`python.rst`](https://github.com/mattharrison/Tiny-Python-3.6-Notebook/blob/master/python.rst)
I've personally never used New Relic. It seems very solid - at least based and its docs and screenshots. Would it have been faster than by using Pyflame? My crawler has a distributed architecture. So I'm thinking about the required setup time and everything else here (e.g. reading docs, etc.). Also, one of my requirements was "to be free". My crawler is only a side project right now, so I'm not really willing to pay for anything (except VMs). Finally, this post is merely an excuse to share a new tool that I discovered (Pyflame) :) It's always great to add new tools to our arsenal, isn't it? Anyway, thanks for your feedback! I'll certainly take a closer look at New Relic for my bigger projects.
Docker/containers are a good way forward, it's almost like having a system wide virtual env. Unfortunately I'm at a techno-phobic work environment :( and we're on ancient CentOS servers :"(. We use Docker heavily for stuff like Gitlab and a few containers for testing but nothing in production. It's a great way to test out new stacks! Good luck
I would say just go with regular Android Java. You'll the easiest time building new things with all the resources on the internet. It's not too bad! Just take the time to understand what the code is doing when you follow the tutorials. 
quasar framework works pretty well for dev
That's really great, thanks!
It seems like you are basically describing the [Bokeh](http://bokeh.pydata.org/en/latest/) project. You can either host it using their built in bokeh server or embed it with a flask app, which also requires minimal work.
&gt; Oh god, now I'm torn. Do you think I should take the plunge and try to learn native Android dev in 3-4 weeks or hack something together with Kivy? Whatever else it may be, Kivy is often said to be very good for rapid prototyping - it's very easy to quickly throw something together if you want. With that in mind, I don't see any actual harm in just trying it and seeing how it goes, even if you move to something else (normal Android Java dev or otherwise) later. Disclaimer: I am a Kivy, and python-for-android, developer.
Cool. May I make one observation? A lot of people will see python notebook and think it's related to ipython. Maybe a sub-title or something clarifying it is not this?
Yep, Django-vs-Flask, how do I turn my Python program into an .exe, questions that turn up daily and is starting to get just a tad annoying.
This was a really well written and a great introduction to Pyflame. I'm going to try incorporating it into my workflow based on your setup steps. Thanks!
I'll definitely refer to it again if I need to use a profiler for something so thanks for the write up. New relic client just sits in supervisor before gunicorn. It's not 100% free in terms of resources but it's pretty light.
wasn't that renamed to jupyter long ago?
Great job!
Added Bokeh and Flash to my study list, thanks :)
Great question! Yes you can: &gt;&gt;&gt; from collections import namedtuple &gt;&gt;&gt; Car = namedtuple('Car' , 'color mileage') &gt;&gt;&gt; my_car = Car('red', 3812.4) &gt;&gt;&gt; print(*my_car) red 3812.4
Cool, thanks for the clarifications!
IPython was renamed to Jupyter, but I think /u/mephistophyles might have had qualms with the word "notebook". They're still called Juypter "notebooks".
What is the Javascript equivalent of Numpy? Not all Python apps can easily be replaced with HTML and Javascript.
I wanted to give you an update. I successfully created a toy extension, and am currently working on a python wrapper library to more pythonically call the chrome APIs and package the extensions. It's been a fun little exercise!
Hiring "Python / Django Lead Developer" at IMA - Influencer Marketing Agency (Amsterdam) https://www.djangojobs.net/jobs/673/python-django-lead-developer-ima-influencer-marketing-agency/
Really nice and organized! Can someone explain to me what exactly does the "provided by" column mean? 
If you're doing something science or heavy math related, might be best to stick with Python, but there are packages like [this](https://www.npmjs.com/package/dataframe-js), that are similar to Pandas. You could also just set up an API written in Python to deal with those sorts of things (which is what I did).
Worked great, what are you trying to connect to? If it's a SensorTag or something similar, [this might be worth checking out](https://evothings.com/doc/examples/ble-ti-sensortag-sensors.html)
I'd love if you got into some web frameworks like Sanic that really take advantage of 3.6 with uvloop. Some references: https://magic.io/blog/uvloop-blazing-fast-python-networking/ https://www.twilio.com/blog/2016/12/getting-started-with-sanic-the-asynchronous-uvloop-based-web-framework-for-python-3-5.html http://masnun.rocks/2016/11/17/exploring-asyncio-uvloop-sanic-motor/ 
It _might_ affect you. Stub files are of course terrible because they easily go out of sync.
&gt; a shitty craftsman blames the tools Don't use that expression. A shitty craftsman is one who uses shitty tools. That expression is bullshit :P
&gt; small but significant performance hit in lookup What does "small but significant" mean?
Probably means its "physically" small, but could have a large impact in say, loops.
I understand that the use of attributes and instance/class is consistent within Python. I just question why 'static' can't be used here for better compatibility with other computer science languages since the concept is the same (albeit, implemented differently under the hood). 
Try to add return your methods in Database class. They are returning None. Also i guess you should post this to /learnpython. 
So, then like almost everything else in programming: convenience comes with a price. And that price is usually worth paying.
[Pynsist](https://github.com/takluyver/pynsist) can be used to create an .exe for a script and an installer for Windows. For completeness there is also https://github.com/jamesabel/osnap
Could you give more detail on the pickling issue? You were creating namedtuple classes inside functions/methods instead of at the global/module scope? Was there a reason for that?
No Py 3.6 support for either of these. Cx_freeze seems to be the only one with 3.6 support AFAIK. But there's no single executable option built in though.
Its not difficult just not very intuitive, you would think retrieving videos from a channel would have something to do with channel().list() but it doesn't, you have to use search().list() and pass it snippet, the channelId, and setup a loop using pageToken to get them all. Edit: [Like this.](https://gist.github.com/Evolution0/6f2a7f36aa27fe3a6ae61b1ec6a37740) (sorry for the quick and ugly code)
I can't really say anything about pex, but dh-virtualenv is pretty easy to use once you get the hang of it. I think it solves its use case pretty well. I actually eventually went the total opposite direction time. I tried as hard as possible to only require module versions which could be supported directly through ubuntu/debian's repositories. For the few that couldn't be (either because they weren't there or their versions were too old) I ended up packaging them myself. I just host it all in a private apt repository. This is only realistic if you don't need the absolute newest stuff for very many packages, but if you can make it work I personally find it pretty nice. It also gives you incentive to keep your dependencies under control.
I know, both things you can 100% ignore when writing python 3. 
The amazon versions have TOC's. Will put in an issue for this :)
Of course.
You are welcome! Thank you
Not all heroes wear capes
Looking at your resume makes me very positive that I've decided to learn to program. I recently graduated with a B.A. in philosophy and have been programming since Christmas. Thank you for keeping me inspired! (Sorry I don't have a job for you as well). 
Ha! it's OK. I have been going on interviews nonetheless! Go ahead and start a github now. My github/portfolio is getting me in-person interviews no problems. Thanks for the kind words!
How advanced a GUI did you have in mind? I have a text mode adventure/mud/interactive fiction library that you can run in the console. But I also have a TkInter GUI slapped over it that basically is a textarea with the output and one text entry box to enter commands in. https://pythonhosted.org/tale/