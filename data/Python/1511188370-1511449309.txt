Try PyCharm with the Vim plugin
It's something nice that you can do, but the Python subreddit may not be the best place r/learnprogramming or the learning Python ones are better places to do that. 
SQLAlchgemy is where it is at for standalone ORM's. I would not recomment using bare database driver, it is a waste of time and risk, and is too low level. One thing about ORM's you'd miss are managed (reproducible!) migrations for schema changes.
&gt; vim is the debug tools. https://github.com/joonty/vdebug Used it with py,node,php. But personally when I'm not in the terminal I'm on c9 in the terminal.
Very interesting how git highlights each change and how everything is documented. I will start studying git after finishing good programming practices. For now I guess I'll just use my function and wait for a new numpy update. Thanks 
What is the right version? I have 2.7.12 and 3.5.2 installed.
I might be wrong, but last time I checked, it seemed to me that the tar and gzip modules of the standard lib were all pure python, which could explains why it's slower than 7zip (which is C, or something like that). You should definitely profile the code, but you could try to run 7zip in a subprocess, if you're either sure it will be available in any machine you need to run the code, or if you can distribute the binaries.
Are you running YCM and syntastic?
No, well it depends on what you mean by "compiled python binaries" If you mean a full application, containing the Python VM and the python program you wrote, then no that's not very common, except on the Windows platform, but even then, it's generally packaged as an MSI and not all forced into a single binary executable. In Go, a single static binary is practically the only option. Depends on what you mean by "scale", and how your web server functions. Reddit is written in Python(or was last time I bothered to check) and scales just fine, seeing as they are one of the largest web properties around. In general anything stateless(HTTP is by default) will scale to infinity and beyond, provided you can afford the hosting bills. Go in theory(and generally in practice) can do more work for the same unit of time and resources compared to python. It generally requires extra developer time to achieve this compared to python. (i.e. writing the same functionality in Go compared to Python is generally more code, and takes more programmer time). These are all generalities, and I personally would recommend Python, mostly because it's been around a lot longer and will definitely still be around in 20 years(and Python already has decades under it's belt). It's a very well understood language and isn't changing very quickly, and is very easy to get started with. Go probably will be around, but it's future isn't set in stone quite like Python's.... yet :) It's still a very young language, comparatively.
Why no REPL?
I don't debug in my editor. I debug in the cli. I use pdb directly. I see a few benefits here... Total understanding of the native tools and transferable knowledge if I ever need to troubleshoot/debug in a server where Vim and pdb are my only tools anyways.
I have saved so much time using vim. Of course it's a learning curve, but after the curve you find yourself using significantly fewer brain cycles editing text. If that makes sense.
Thankyou üòõüëå
You can use IdeaVim in Pycharm, I learned vim but use other editors with vim plugins, It's awesome
https://github.com/fabric/fabric/blob/v2/README.rst Run the VM with a port exposed to your local machine. VMware has a command line interface that should let you do everything you need to do to start using Fabric through it. Or you could use something like pyinvoke or build bot to deploy your code into the VM and then run it within the box.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [fabric/fabric/.../**README.rst** (v2 ‚Üí f82b9a5)](https://github.com/fabric/fabric/blob/f82b9a52f148928401ac00099213798a0c87f5b0/README.rst) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dq3d42u.)^.
I guess that's fair. I always prefer to have both 2 and 3 on whatever system I'm using, and it's a one-line installation.
Same here - I gave up Vim for PyCharm after over 10 years with Vim. Absolutely install IdeaVim in PyCharm and use that, though. It gives you a good portion of what makes Vim great and everything that makes PyCharm great. 
I keep hearing about it, may give it a go.
I think you should spend some time learning vim, then switch to another editor with vim emulation :) I prefer VSCode. I get the movement and power of vim but with a modern extension system that works out of the box regardless of what system you're on. Want to try a new language? Two minutes and you're up and running with VSCode. Not my experience with vim...
There's that word "best" again. It doesn't mean anything if there's no context for HOW it's the best os for Python. Fastest package manager? Newest packages? Stable system? What's the criteria? I use Arch because I like rolling release and other choices they made for package management, but it really doesn't matter.
Once you get into more advanced stuff you will be able to do it with a custom dict as shown bellow: import collections class BiDict(collections.UserDict): def __init__(self, mapping): super(BiDict, self).__init__(mapping) self._data = super(BiDict, self).__dict__['data'] for key, value in mapping.items(): self._data[key] = value self._data[value] = key def __add__(self, ): pass def __setitem__(self, key, value): self._data[key] = value self._data[value] = key def __delitem__(self, key): pass def update(*args, **kwds): pass if __name__ == '__main__': custom_dict = BiDict({0: 'Zero', 1: 'One', 2: 'Two'}) print(custom_dict['One']) print(custom_dict[1]) This is a work in progress that I do not intend to finish, you can try writing more methods (the ones that have pass or some of the dict data structure methods).
This is absolutely beautiful! Thanks for the link:)
Same here. If you are on linux I've found pyenv to be extrenely useful for managing different versions and virtualenvs. You can find it on github. I'd link it but I'm on mobile right now
Do you use a debugger?
I'm on mobile too: [Pyenv](https://github.com/pyenv/pyenv) Type: \[Pyenv]\(https://github.com/pyenv/pyenv) There. No more excuses.
I'm using an old S3 mini, swapping to apps is a genuine pain. That's my excuse.
by that logic maybe it's simply your experience and you haven't tried other editors enough to become more productive!
He's also looking up keys by their value.
honestly do the coursera module 'python for everybody'. I was brand spanking new and it helped me an incredible amount.
Will definitely check that out immediately. 
&gt; Vundle vim-plug tho
To quit vim: Hit the Esc key, then type ```:q``` and then hit Enter. You're welcome.
Same with me but I tend to like Notepad++ more.
scala can use the the entire java ecosystem
Putting this here for completeness, for new programmers, if your're ever unsure about something measure, then measure again. https://docs.python.org/3/library/profile.html Profiling is always good to do, no matter the language, it's good practice to check what is going on, but take note, that there is loads of different kinds of profiling, one just measuring how long a function takes, allocations, reference counting, it really depends. Worth mentioning it also counts number of calls. As a lazy mans speedup which implements things like JIT, PyPi https://pypy.org/ is also an 'answer' but would really recommend staying with the standard Python interpreter, if you can. Anyway, expanding your knowledge on profiling will save you a lot of time (pun), when you're working on ordinary software, or video games.
The primary issue is time. I just don't have the time to dig into the source code and actually process what's happening behind the sugar, but totally agree and love the advice to dive in. Analysis paralysis is something I always have to be vigilant about. Thanks again!
I too love Python, also a student as UB :) 
Thanks for the advice.
I have tried plenty of editors that are quite productive. I just prefer the vim workflow :-)
A manual car or a car with automatic transmission/power accessories I think would be a more closely aligned analogy, but regardless I think you missed the point of my question.
You're the third person to tell me about SQLAlchemy, I'm looking forward to checking it out after work! Cheers!
I saw a guy rocking on Visual Code at a Hackathon. Extremely impressed with how well put together visual code is. The number of plugins were out of this world and learning curves were minimal for me. I highly recommend you check out visual code on Unix. It‚Äôs way more impressive than I have expected and I think it might take you no time to get going. Their visual studio on Mac however, I‚Äôm not too excited about it. 
pip install!
second this What I took from Vim wasn‚Äôt that it‚Äôs a great IDE out of the box. One can make it work, but it‚Äôs no where near the real IDE. However, what I did take from Vim was ‚Äúa way of coding life‚Äù. After Vim, I learned that being intimate with your keyboard shortcuts is a pleasant experience. Text editing must be a natural experience (as in I want something to happen and my muscle memory kicks in instead of taking the mouse and wade through buttons and menus). So Vim in VSCode was really really fun. 
Whatever's the base image of python:2.7 and python:3.6 docker images. It's Debian, iirc. 
I can also recommend undotree.vim - something no IDE will give you, but it's totally amazing.
&gt; use pycharm for development. I use pycharm for python projects, for one minute scripts Idle is fine.
It's honestly like ¬£40 a month for full access to coursera but the python specialization is a Godsend. I'm on course 3 and I've already learn how to do so much. I am not on par with some people on this subreddit but I can guarantee you it is worth it. I already understand some code rather than no code. 
What does using nano say about me?
Try out deoplete. Way lighter than YCM but with near feature parity for Python.
What data are you trying to get specifically? I personally like using R for scraping tables and such from websites; it's very compatible with Python and some of the libraries like Rcurl and XML are great.
Wow:) great job. I will try it today
The JetBrains IDEs are great, I'll admit that, but as someone who uses Vim in their full time work, (using Ruby, mind you, where the autocompletion is significantly worse than in Python) it's hard to see leaving Vim. It's just so damn light and extensible. And the way it integrates with so many other command-line tools is something I don't think I could live without. There's also something to be said about really time tested software.
does it work with C++ and JS?
It's also installed on even the most bare bones installs. I learned it after messing around with FreeBSD and not wanting to install ```nano``` every time.
Try to see if you can use your python script to access 7zip using the command line. Profile is a great suggestion here, but if you really need to automate this script and can't be hassled to manually zip it, then maybe forcing python to use [terminal commands](https://stackoverflow.com/questions/10741600/running-command-lines-within-your-python-script) might be a good way to get around the speed issue. 
"ironpython3 is Implementation of Python 3.x for .NET Framework that is built on top of the Dynamic Language Runtime" https://github.com/IronLanguages/ironpython3 
Vim in general? It works with basically any language. I don't have much experience with it for C++ but I believe it really shines as a C editor, so I imagine it would do well. [Here's the intro I used to learn.](http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/) I'd also check out `vimtutor`. Be prepared to take a productivity hit for a little while. It'll come back, don't worry.
I usually see vi installed but not vim. Can be annoying because vim is much better.
Hey I actually have it on GitHub I just didn't want to share my personal profile here, but anyways here you go. https://github.com/andrewdelph/ants-will-survive
Neat. I just use PyCharm. You can have it edit files over SSH for you too. I love vim and it is my go to terminal editor, but I would never ever choose it over a modern day IDE as a primary development option. The primary argument I hear is 'but everything is keyboard driven!' but the fact is you can bind every single action possible in PyCharm to keys and you can even have it mimic vim keybindings so you can drive it without a mouse too with way less config than vim would need to get it up to speed as an IDE.
It really is incredible how python is poised to take over! I did my entire PhD in matlab and it was like pulling teeth. I still have to use matlab at times, but I prefer python in nearly every single way (there are some edge cases where I prefer Matlab, but they are far and few between). I hope as python continues to grow, professors will start teaching that over matlab. It'll save corporations thousands upon thousands of dollars too!
Vim is definitely worth learning, and probably the best editor for doing terminal work, but I personally can't recommend it as a primary day to day code editor. PyCharm is the way to go for IDE IMO.
Checking it out. Want something with actual projects that u do while on the course to make it worthwhile for me 
100% with you on this. There are also so many visual queues that PyCharm can give you also that vim just simply cannot do. People claim vim can do everything PyCharm can do (if you work hard enough, configure it long enough, and learn enough keybinds), but there are lots of things vim can't do particularly due to visual limitations of a text console.
Sure thing :): - So d is the name of my deque. - df is the name of my data frame - in my data frame each row has an address column, I need to remove the non CA address entries. - the deque contains all the index values that have non CA addresses. while d: df.drop(df.index[d.pop()], inplace=True) 1. While d - while our deque contains values or a value 2. df.drop - remove this from the data frame 3. (df.index - index refers to the row of a data frame and has amazing lookup times. Closer to a dictionary vs column lookup that is much slower. 4. [d.pop()] - the value we're feeding to index using the deques pop function. Pop returns the value (you can specify from the far left or right of he deque) and then deletes it from the deque. Eventually our deque will be false. Pop also has a great time complexity of O(1) , super fast and efficient. 5. , inplace=True) - ensures these changes are committed to the data frame so we actually make the changes we want to 
I mean each week of each course module includes a multiple choice quiz to sort of cement the theory and code interpreting into you. Then you have the practical quiz that is sometimes 1 or 2 and can take hours to do. These are those projects you speak of. You code to solve problems and they eventually get more complex as you go through the course. 
That sounds cool. I‚Äôve been watching the new Boston YouTube channel where he has python tutorials just to get started with. Should check it out too. 
I have not met or read about a single person who feels that they‚Äôve regretted learning vim or emacs. They‚Äôre there for a reason. 
You have a built in terminal to JetBrains RubyMine (and others), plus you can create any kind of shell script you want and bind it to any key you want so you have full power of integrating your command line tools. Just FYI =)
It is, if you are often connecting to remote Linux machines. Also if you have Linux and are terminal-staring-nerd. Otherwise not.
this is the channel for the professor who runs the coursera course. He is unbelievably dedicated to educating people and has a ton of videos online and interacts a lot with his students. https://www.youtube.com/user/csev
Yeah I know where you are coming from. I don't care how long it takes my ide to launch when I only open it 2-3 times a week. Also for when working in vim or remote debugging, pudb is a nice tool to have in the belt when you are used to the robust debugging in pycharm. The pudb package me not dread debugging Python code in a remote environment. 
Agree with you about Pycharm, but I'm too addicted to Vim's speed and ecosystem. Currently I use Vim for editing and Pycharm for refactoring/debugging. Works well so far.
What's the plugin for displaying imports/variables, and what's the use case for it? Just for quick access to import lines or variable declaration lines?
By the way if possible I would like to extend the conversation and ask about best paths to establishing yourself as an authority in the field, I understand that participating in forums etc is the best way to do this, to make a name for yourself in the community 
But that's not the situation I experienced. There was a talk about IDEs and I got shunned by liking Pycharm. :) 
If you install NerdTree it has a section that explains how to make use of ligatures from a NerdFont.
I was thinking of adding that, but I didnt really have much of a need for it
Whoever wrote your sample.py really needs to go back and read pep8. 
Vscode and pycharm both provide easy access to docstrings. https://imgur.com/a/oNNnt 
hitting enter on the specific tag will jump to its place in your file
I use a console debugger
No problem, you should build up your own .vimrc from scratch 
I'm pretty sure shift+k pulls up the docstring for whatever's under the cursor.
syntastic was so slow for me. Do you use it? how do you deal with the slowness?
my autocommands in this vimrc are geared for python, but you could certainly customize your vimrc to behave like an IDE for C++ and JS. Theres really cool plugins for webdev btw
Sound handy. What's the plugin name?
yep, they're great
Haha thanks, best of both world when you can combine functionality with aesthetics 
:(
I would say to just build up your own vimrc with the things you like form mine, I've tested the install script on many different computers so I dont really know whats going wrong with yours
thanks!
A tip, get rid of NERDTree and start using `:find` or Ctrl-P or Command-T or fzf. There really very little point in clicking through folder structures looking for something when you can just search it with few keystrokes. Also you can usually just hide Tagbar and just use `:tselect` to jump to definition and `:pop` to come back. I use Tagbar pretty rarely.
https://github.com/majutsushi/tagbar I recommend that you write an vim autocmd that will open up this tagbar when you open up certain filetypes such as a python file, you can find an example of how i did that on lines 193 and 194 of my vimrc
Can't be /r/Python without the PyCharm shills
Oh, yeah, they get super religious about dev environments. I was talking more along the lines of "how do I do this thing using python?" type questions. 
I've been using Jupyter Notebooks for awhile and really like it too. That extension seems like it is going to be useful. Thanks for the tip.
Define slow? When i save to buffer it takes maybe .5 to 1 second max
You can control VMWare directly using their exposed APIs. [pyVmomi](https://github.com/vmware/pyvmomi) is the official Python library and the one I've spent the most time with, but it's not that user friendly. I ended up using it to just bootstrap Python inside the VM to run my own scripts. [vix](https://naim94a.github.io/vix/) looks pretty good. I've just come across it though, so I haven't tried it.
Ohh no lol, i use exclusively vim for work. I‚Äôm quite familiar with it. I was referring to your completion engine suggestion YCM is a pain sometime so i was wondering if your would work with other languages or if it was python exclusive
It's really hard switching back from vim keybindings, and vim-modes are just not the same.
Yes https://github.com/Shougo/deoplete.nvim
Yes.
[opencv and python](https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_imgproc/py_canny/py_canny.html#canny) - Just open a stream or video in opencv and use that info.
The Java ecosystem is, obviously, much different than the Python one. They have different philosophies and designs.
&gt; Classes make my code really clean and easy to read I'm all for that, but you should generally be able to do that anyways. By making this mega-classes, you make your code harder to test. Pylint recommends files less than 1,000 lines, so when you have a mega-class that is 10,000 lines, you're class is egregiously complex (I do it too). If you watch the video, Deiderich (who is a core Python dev) is pretty clear that there are legitimate uses for them, but that they're heavily overused.
It was taking &gt;4 seconds for me.
That is one of the most beautiful vim's I've ever seen.
The latter.
How so? There's a dict of keys `0`, `1`, `2`, `'Zero'`, `'One'`, `'Two'` Then there are two key lookup statements: `d[0]`, and `d['Zero']`
No, there is nothing inherently insecure about python. However Python can be used to make a vulnerability. For instance it would be easy to make a web portal that executes anything that is typed in. This is true for any programming language, but python makes it extra easy. And I know, *you* would know better, but IT departments see all their users as idiots (often with good reason). 
No
Try using patoollib 
This is how I do it as well. My only wish was that the Vim community was a little more accepting and helpful to newbies. Often times I'll find myself in a situation with Vim where I don't know how to fix it or just some roadblock and figuring it out becomes a huge pain. 
I've been using this code to run ETL pipelines, where there are a lot of io bound tasks (waiting for DB calls) and a lot of cpu bound tasks (transforming data). I'd be curious to hear about other potential use cases, and also about whether folks think the interface is reasonable. Thanks!
Google "contributing to open source" and you'll find lots of resources. You'll need to learn how to use git and github. Being 15 will not hinder you from contributing. 
Oh yes sorry; I'm not sure how robust its support is for C++ or JS. There are "sources" for both, but I'm not sure if they're on part with YCM. Certainly much faster, though! I'd give it a shot; definitely easier to set up (especially with vim-plug).
Good to know! I guess I really like the symbiosis between Vim and Tmux. Like, if i wanted to have multiple shells open at once as splits, is that possible? There's other stuff with Vim I use frequently as well (e.g. macros, registers, motions, etc.) but I have a feeling most are also possible on a JetBrains IDE. I also just love the dev community with Vim :) But thank you for the info!
As others have mentioned, VMware has an API that you can work with in pretty much any language. If you're not completely set on Python, another option would be to use VMware's PowerCLI and Windows PowerShell.
&gt; I hope you're running Python natively rather than under something that kills performance like Cygwin. What? Python under Cygwin is native. It's compiled. You can literally call the cygwin python outside of cygwin. Cygwin has overhead, but as long as you're not jumping out of the code 10000x a second, it should be fine.
I am working on a basketball stat taking program for my Comp Sci class.
&gt; Pylint recommends files less than 1,000 lines, so when you have a mega-class that is 10,000 lines, you're class is egregiously complex (I do it too). You're grossly overestimating how big classes I make or plan to make. Also, creating own packages is a thing.
What are you doing here? Off into the sunshine with you!
I don't share the same sentiment with all these talks. If those handful people stop actively developing these libraries, the toothpaste will get back to the tube. The academia should have been doing this decades ago instead of racing for papers one after the other. It's really a shame that academia is blinded to anything but papers and grants. If you want to help science stop publishing in those journals to start with. 
How do you stop publishing in journals?
Ain‚Äôt nobody got time for that. Post your code or don‚Äôt post at all. Also this kind of posts is better to post on /r/learnpython Edit: it seems you have no moduled named ‚Äúlibtorrent‚Äù. Have you done: sudo apt-get install python-libtorrent https://coderwall.com/p/muvnow/installing-libtorrent-on-linux
It's winter and I live in the UK, what sunshine? :P
So I just use the .VideoCapture and then put that code in the link with it? Do I need to call the frames first or anything?
Heh yep. They actually teaching python in classes these days?
You can start from here and read the linked discussions http://www.thecostofknowledge.com/
I think I love you.
Try sudo apt-get install python-libtorrent (assuming you are using python2) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Haven‚Äôt worked with this lib before, but have you tried following these instructions for building the python bindings? http://libtorrent.org/python_binding.html
Am working on text editor that supports email
Which Unix system do you use?
I believe it appears between 1 and 1.15pm every other Tuesday.
Nope still java and c++
&gt; Huh? IDLE has a text editor window. OP could write it in IDLE. Sorry if I mislead him. I didn't know you could make a file and run it on there like that. I just meant that he was "living in the IDE and trying to enter multi-line items without completing the required steps to continue". After quickly scanning the comments below he seems to be on the right track using this idea. Thanks! 
Totally.
Try ALE
I'm talking about the cygwin emulation of POSIX memory semantics, etc. If there isn't any forking or a few other things for which Windows was not designed, fine, but I'm not assuming anything.
Me too.
Every Macintosh and a lot of Linux distributions for desktop have Python installed by default. I don't think they are unsafe. 
Yes, absolutely. Try to find anyone that has regretted learning vim...
get out of python right now. you'll hate it. go try Perl instead, or PHP. Haskell is looking especially good these days.
thanks, I'll give it a shot.
Yes you can split the editor windows just like tmux. You just right click a tab and split &lt;horizontally|vertically&gt;. You can of course keybind any action in JetBrains. https://www.jetbrains.com/help/idea/splitting-and-unsplitting-editor-window.html On top of that, you can even run tmux in your built-in terminal (which you can pop out too). It does have macros and shorthand code where you can type a special code with optional params and hit tab and it expands it in to a whole class or something. I'm not sure what you are referring to with motions and registers. There is a huge plugin ecosystem with 3rd party plugins for almost anything. There is a passionate community with JetBrains too =) In the end it's not like you have to pick one or the other. I still use vim daily for other things.
Consider contributing to a larger open source project like django. Most of them will be hosted on github and they also have a very nice tutorial how to use git: https://try.github.io
The quickest route is to start contributing to the Python language or one of the many popular 3rd party packages. Another route it to write your own popular Pytohn package. Or you can write a blog and grow its audience. That's how I started and then I started writing books... 
There is a search endpoint you can use. You should be using the requests library to send requests and parse the json response. I bet there are wrappers available on github if you just search for genius
I write about a bunch of random topics in Python on my blog: - https://www.blog.pythonlibrary.org/ There is also Planet Python, a Python blog aggregator: - http://planetpython.org/ StackOverflow, Python related Google Groups, and IRC / Slack are also popular places for Python related information.
[removed]
What do you want help with? 
how would i use the search endpoint? like all i really have right now is: import requests genius_client_id = '' genius_secret_id = '' genius_client_access_token = '' base_url = 'https://api.genius.com/' r = requests.get(*insert api call here*) print(r) 
It keeps them in the order they were originally. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I started off this week with some fresh inspiration, actually. I am currently working out a program for a PhysEd teacher to manage exercises, sorted by subjects (e.g. freerunning, volleyball).
I second this question. You should list what you want help with. You will get more responses. 
Edited.
Edited.
Cool! Here's what I'm referring to with regard to, explained much better than I could: - [Motions](https://blog.carbonfive.com/2011/10/17/vim-text-objects-the-definitive-guide/) - [Registers](http://www.brianstorti.com/vim-registers/) W.r.t. motions: IdeaVim is pretty good at simulating this but there are a bunch of vim plugins that build upon this idea that are unfortunately absent from JetBrains IDEs (from what I could tell anyway; I could be wrong) W.r.t. macros: Do you mean like snippets/abbreviations? Because I'm referring more to a ["record-and-play-back" type of functionality](http://www.thegeekstuff.com/2009/01/vi-and-vim-macro-tutorial-how-to-record-and-play/).
You find a lot of weird and condescending users on irc. This is true for all nerd communities on irc atleast. If there's a trick it's to perfectly explain your problem and make it as easy it can be for them to help you. Throw in a pastebin if that will help. If you don't make an effort in getting help youll spend an hour discussing bullshit with some asshole.
Good advice indeed.
Python is far more safe than say C. You can't take advantage of buffer overflows nearly in the way you can with C.
I saw a reference to this on the main Python mailing list and it struck me as interesting, so thought I might as well share it.
And somehow fast.ai is not included anywhere on there... what a load.
It can be hard to find a project to contribute to that welcomes first time contributors. I'm sure that there are plenty of them, it's the finding them part that's hard. One project I know (and have contributed to) is the [BeeWare](https://pybee.org/) suite. There are a number of projects in the suite, but the general theme is cross-platform (desktop, web and mobile), Python-native applications, and tools to help. They're extremely welcoming to first time contributors: https://pybee.org/contributing/how/ Disclaimer: I'm friends with many of the BeeWare core team.
it looks abandoned.
How about make an attribute and check if the attribute was created. def __init__(self, args, context, info): super(MyClass, self).__init__() self.unit_test_attribute = 42 #test self.assertTrue(hasattr(instance, 'unit_test_attribute')) 
Replace `__init__` with a [Mock](https://docs.python.org/3/library/unittest.mock.html)
I don't understand the point. What does this library get me that I can't do with `gevent` or `asyncio` ?
mmm how? I looked at documentation and I don't... really get it. I've been working on this for a week now, I don't get mock :(
Sorry to say, but a lot of this is either bad advice, out dated or just plain wrong. The docker-compose.yml -- why use the old version 1 style? Even if you don't take full advantage of the newer features in the v2 or v3 revisions of docker-compose (which you should), it's good to acknowledge they exist. volumes: - .:/todo # sync host's current directory with web's todo folder Unless you know exactly what this means, you're opening yourself up to a world of hurt. You'll get `*.pyc` files owned by root in your working directory unless you set `PYTHONDONTWRITEBYTECODE=1` in the Dockerfile. You'll also run into super fun stuff like "Why don't my translations work?" because your local copy has shadowed those files in the volume mount. command: python -u app.py I almost let this pass, but this isn't the proper way to run Flask anymore. At the very least you should declare `FLASK_APP=path/to/app/file` in the Dockerfile and use `flask run`. If you're aiming for this to be an "intro" to using Docker + Compose, then I'd leave this at this. Though, you should research running uWSGI in a container as well and how to set that up. links: - db # compose will link web service to db services This isn't needed as the app container should be able to communicate to the db container just by asking to be directed at `db` (I'll note it's been a long time since I've used v1 compose files, so maybe I've forgotten). However, this does cover start up order. That said, using `depends_on` is clearer in that case but doesn't solve all of your issues. `links` and `depends_on` will only ensure that your dependency is *started* before this container, but won't guarantee that the dependency is *ready* before this container is. To fix this, you need to use something that can create a connection to the dependency container and stall the start up of your application until that happens. I've used netcat for this in the past, but lots of things work. FROM dataquestio/python3-starter ADD . /todo WORKDIR /todo # include "--user" since containers are not sudo RUN pip install --user -r requirements.txt Quite a few things here. * I had to look up the base image, and holy crap is that thing bloated -- it's also over two years old, so I'd recommend ditching it super fast. Unless you *actually* need all the datascience stuff they smashed in there, you'd do just as well using `python:3.6-slim` as the parent image. Hell, you'd probably get by with `python:3.6-alpine` and never notice a difference other than it's a lot quicker to pull and build and you need use `apk` rather than `apt-get` to install system packages. * Don't do `ADD ./my-app` as your first step. This means *any change* to you application code will force a rebuild of the entire image. Yes, you're using a volume mount above but eventually you'll need to rebuild for some reason. With a small application, you probably won't notice it too much, but when you have an application with multiple compiled extensions, you notice it very quickly and painfully with 30+ minute builds. &gt; \# include "--user" since containers are not sudo * Barring a `USER` command further up (which your parent image does, which is bad form in my opinion), containers build and run as root *by default*. * `RUN pip install --user -r requirements.txt` Your parent image declares a virtualenv, why not use that? Moving onto the actual application: client = MongoClient( os.environ['DB_PORT_27017_TCP_ADDR'], 27017) Instead of pulling that mouthful of an envvar up, you could have just as easily use `'db'` since the container can reach other at their service name. From the README: &gt; thats it. go to http://localhost:5000 to see your mini microservice in action. Except the container is mapped to use 5001 on the host. For a first trip into docker land, this isn't that bad. But it's far, far, far from Microservices 101 with Docker.
Cool... except it's vim
ty - I think I understand your response. Would 'instance' in this case represent ```MyClass.__init__``` or just ```MyClass```? 
If you don't need to actuall run your `__init__()` but just want to check if it gets called you can do something like this: MyClass.__init__ = MagicMock(return_value=None) foo = MyClass() MyClass.__init__.assert_called() You may want to save and restore the original `__init__()` if you have other tests for MyClass
I am thinking that statement is in response to: &gt; languages like Haskell are demonstrating new and fascinating ideas. 
Thank you so much - I owe you some gold :)
&gt; I haven't used vim for any major python projects, but the way that buffers, windows, and tabs are implemented is just incredibly powerful, and far more useful than in any IDE I've used to date. Right, this is something that a lot of people who've only used vim to write some git commit messages don't realize. IDEs to a good job of letting you jump around and open new files within the handful of tabs that it makes sense to have open. Vim lets you jump around without having to care about what files are open or where they are, or whether your little tab bar is all filled up now, because you only need one tab per workflow, and a workflows (at least in my case) are about one to one with git branches. The rest are just buffers in the background. I'll often find out at the end of the week that I have literally 300 files open, and I never would have noticed if I hadn't done `:ls` out of curiosity.
uhh...after a cursor google search: https://github.com/vbuterin/pybitcointools
that should be fine. Just doing like 5 page views a minute is alright in your opinion. I could even do the copy and paste I just want to figure a way to automate it. Could it be done in beautifulsoup?
Neither, it's an instance of MyClass: `instance = MyClass(1, 2, 3)` And don't add a new attribute for this purpose; test that some existing attribute is being set correctly. Aka, instead of testing "`__init__` was called", test that "Initializing the class instance behaved the way I expected".
I use PyDev professionally, but I'd suggest you use a more user-friendly IDE, since you're inexperienced. Try [Spyder](https://pythonhosted.org/spyder/installation.html), there are Windows installers for it, I'd suggest the Anaconda one, since it's the most polished.
Python is a vulnerability because many attack chains take advantage of system builtin Python interpreter to carry out more sophisticated maneuvers like a reverse shell, 0day syscalls to get root, etc. Many shellcodes directly invokes a python one-liner scripts to implant the backdoor to system. Since shellcodes are more troublesome to craft, and bash is too dumb to script. Python's ubiquity and convenience and determinism makes it a perfect "attack vector". Script kiddies can find thousands of ready to use PoC from vul disclosures and github. It's basically grab a shell, copy paste, run, and pwn. Front facing services or web apps written in Python like Flask, Django is very secure (compared to shit like handcrafted SQL in php or running an outdated struts2). I havent seen any serious exploits in years.
thank you i'll give it a go and report back
Yes, BeautifulSoup or Scrapy would be my suggestions. There are ample tutorials out there to show you how to use them.
Thanks for taking a look! `asyncio` and `gevent` both provide ways to run coroutines, but neither has a built-in way to specify a dependency graph of tasks. I.e. you can't natively specify "Don't run task a until tasks b and c are done." Taskmap provides an easy way to specify this dependency graph, such that tasks are added to the event loop the moment they become available, which means you're wasting as little time as possible. On top of that, it even lets you parallelize across cores, so that if the dependencies of some task are met, that task can get picked up by any one of the worker processes, regardless of which core(s) its dependencies were executed on. Does that answer your question?
= sets a variable to something.+= means to set a variable equal to itself + something else. It‚Äôs the same as variable = variable + value but is instead written variable += value.
x = x + 1 and x += 1 are functionally the same. By the way, you don't need to use the range: def total(numbers): result = 0 for entry in numbers: result += entry return result
there's also a builtin `sum` function. you could just do `total = sum` and get the same effect, but I assume code academy doesn't want you to do it that way.
Not in this case. n = [3, 5, 7] print sum(n) Achieves the same results, but that doesn't help me learn the other stuff, which is to reinforce use of len(), def-unctions, for/in and ranges. It's tough. this is my first component. They said it would take 10 hours, and it's probably going to take longer. I hope the language comes to me easier. If I seem to have a brain that struggles to follow the tutorial, gets the answer wrong, then works backwards from the answer to find out where my mistakes are and correct them. It's like my brain is reverse engineering. It knows the pieces, but doesn't know how to put the parts together. Hopefully it gets better.
awesome. I'm learning a bit right now, but I can't do something like navigate to the next webpage based on the href name, do you know how to do this?
are they still teaching you python2? in 2017?
 print(sum(n)) Might as well get used to using Python 3.
1. Create your initial `BeautifulSoup` object using the root web page URL. 2. Get the contents of the root page and save whatever details you need from it. 3. Enumerate the list of child pages you want to scrape. 4. Get the contents of each child page and save whatever details you need from them. 5. (Optional) Go to the next page of results on the root page by getting the "next page" link and retrieving the HTML for that URL. Repeat from Step 3 until there are no more "next page" links. rootPageContents = urllib2.urlopen('http://example.com') rootPage = BeautifulSoup(rootPageContents, 'html.parser') #Scrape root page contents here if required while True: the_links = rootPage.find('/path/to/the/links/a') for link in links: pageContents = urllib2.urlopen(link.href) page = BeautifulSoup(pageContents, 'html.parser') #Scrape child page contents here #If there are more pages on the root page, move to the next one here next_page_link = rootPage.find('/next/page/link/a') if next_page_link is None: break rootPageContents = urllib2.urlopen(next_page_link.href) rootPage = BeautifulSoup(rootPageContents, 'html.parser') Something like that.
ok I'll play around with it some more and see what I can come up with. Thanks for the help!
You can either type CTRL-D which should send an EOF signal to the interpreter(assuming you are using osx or linux). Or you can type "quit()" and press enter.
Ask if the IT department has disabled Powershell across their network as well.
Type "jobs". Does it list a job? If so, type "fg" (stands for foreground). If it doesn't list a job, you can just start python again the same way that you did before.
upvote for 'ancient fags'
I tried CTRL-Z and nothing happened. I am using windows but I‚Äôm guessing that doesn‚Äôt change the outcome. 
Wherever you are learning Python from, you should not be using `range(0,len(numbers))` in a for loop, or probably anywhere else for that matter. It's extremely un-pythonic, and generally speaking will probably cause you more bugs than just `for x in y`.
The photo is from the teacher‚Äôs computer screen in the video. Mine says the following: Python 3.6.3 (v.3.6.3:2c5fed8, Oct 3 2017, 17:26:49) [MSC v.1900 32 but (Intel)] on win32 Type ‚Äúcopyright‚Äù, ‚Äúcredits‚Äù or ‚Äúlicense()‚Äù for more information. &gt;&gt;&gt;
Thanks for the hints, guys.
Also I will check out ipython, thank you! 
Some months ago I wrote [this](https://github.com/PhantomAppDevelopment/python-getting-started) guide on how to use PyDev. Hopefully it helps you out.
Like everybody so far has said, contribute to an open source project. Let me go a step further. *DO NOT EVER* submit your work to a company for free. Ever. They're going to make money from your work, you should too. Period. Your time, effort, and knowledge deserves compensation. Contributing to open source projects can be very rewarding, because your code will be used by many people, reviewed by many people, and so there's a very high likelihood that you'll find bugs in your code and learn better ways to do things. And by the time you're older and looking to enter the job market, you'll have a long list of contributions to real world applications and projects which will get you better jobs and better pay than others in your position.
Actually, that is a pretty important difference. I don't the cmd.exe has an equivalent. You can use CTRL-Break or CTRL-C to exit but I don't think you can resume execution. You should probably use the IDLE interpreter because you are brand new and learning about two different things at the same time might be confusing.
Its online and it's free, so I can't really be much of a begging chooser.
I really appreciate the help! I think I figured it out. He was doing something that totally wasn‚Äôt necessary for me but was for whatever mode he was in and he just didn‚Äôt explain it so I thought I missed something. Thanks! 
It's not perfect, but it is the best vim emulation plugin I've seen yet (though I've never tried evil mode).
Wow, it almost looks as good as PyCharm!
There's a very popular and easy to use library for hdf5 files called h5py. I'm not sure exactly how the .txt file is formatted or how the resulting .h5 file should look like, but it should be pretty straightforward (open file, parse into field, write back out in hdf5 format).
Shameless plug, but if you like IdeaVim, [AceJump](https://github.com/johnlindquist/AceJump) is a plugin for quickly navigating code that works well with PyCharm and IdeaVim.
I thought he meant only having one for statement going from 0 to 10 and checking if it was equal to any of the 4 digits for each
Same here. I'm continuously impressed with how Microsoft has changed their ways and credit where it is due. VSC is a really great editor, but having either vim or emacs *(ducks)* knowledge is fundamental for linux use.
Wow..... are u serious?
I love how you framed your points. I have used Vim/Gvim with plug-ins, plus pudb, tmux, and several REPLs (ptpython, bpython, ptipython all rolled in. So many things at my disposal within this environment including some pretty awesome refactoring capabilities. Splitting screens to view various parts of the same file while making changes, the various ways to fold a file (that includes my logs) plus super cool navigation tricks. Debugging pops up the state of variables at various points within the file. I can set breaks using pudb then I use the '!' command to switch into a REPL right from within Vim to ptpython or bpython to explore the code in greater depth, write test code that I can in turn put back into the file. I can keep two Vim sessions with different files side by side on my wide screen monitor and explore relationships, cut and paste between them, etc. And when I am working on my Android phone or tablet within a terminal session (termux) much of my tooling comes with me. All of my Vim plugins, REPLs, pudb debugger, tmux etc. Sure there are things that an ID can do that my environment can't. But there are lots of useful things that the IDEA can't do that my editor based environment can. I'm not trying to persuade others to switch. Just voicing my experience. And while I appreciate the experiences from those who love their migration to PyCharm from Vim, I don't much care to read some proceltyzation every time someone describes their Vim IDE experiences. 
The balance check function doesn't work. Already tried. But thanks
The title indicates clickbait.
What if I want to do it only to include it on my cv?
Video doesn‚Äôt work
Video doesn‚Äôt work
I wanted to correct infinull. You can't always assume what he said is true. If a class has an `__iadd__` method defined, it is only called with the `x += 1` form. In practice nobody ever uses that because `__add__` works with +=` by default and it is nonsensical to go out of your way to make the two methods that are generally functionality and logically identical behave differently. In fact I've never seen a single use for iadd, but for a while in the beginning I thought you *had* to define that method. Now that I think of this I'm going to make it my mission to find out what whoever had the iops added to python were thinking.
i just checked it, it works just fine can you explain more
Wow this picture is nice, I also use vim for python, c, php and java. I just create SpaceVim which is a community-driven vim distribution that supports vim and Neovim. SpaceVim manages collections of plugins in layers. Layers make it easy for you, the user, to enable a new language or feature by grouping all the related plugins together. I think you should have a look at https://spacevim.org 
This is what I see : https://imgur.com/gallery/6isvX
It's impossible to give python more memory because it literally always uses exactly as much as is needed to run your program. I mean, memory leaks can happen and that can throw it off, but if you have 32 bit python and have 4GB of free of ram you can easily test this. One time I did a typo with an `OrderedDict` of `x, y: deque` pairs that represented the grid of a map editor program I was making. The odict was instantiated almost instantly and was using 2.7GB of ram. 
i googled and found that you solve this problem by fixing the date and the time on your device, try it.
The difference between += and the other is only noticeable when doing a loop. The other version accumulates! 
There‚Äôs nothing to fix - it‚Äôs accurate for the time zone
Really nice constructive answer
Okay i will search again , you can try again later if it worked notify me.
Contribute to open source. Do not do work for free that a company would pay an employee or contractor for. Do. Not. I worked for two software development companies while I was in high school, around your age. They both paid me, and that experience was on my resume when I went job hunting. These days there are so many open source projects you can contribute to, and your contributions will be completely public for all to see. If you write software for a company, they may not allow you to publish or share the source, so you've gained nothing. Also, and this is a pretty big flaw, there is almost no company that would allow someone off the street to just give them software. It has taken nearly 20 years of hard work to get Linux and most open source software into the position it is now, and it's only because so many of us contribute to it that there was no argument against using it left. But if I just walked into a company and said "here's some software I wrote for you, have it for free" that company would rightfully ask me to leave and never come back. The security risks alone are mind blowing. Find a project that interests you, contribute to it regularly, and make a name for yourself that way. You'll be making connections with a network of people online that you can use to find good jobs, and the work you contribute will stand as a testament to your understanding and capability with the languages you know.
You don't have to give a priority queue a tuple of `(priority, value)`, that's just the most common use case. If you wanted to base priority on 3 variables, you could give `(a, b, c, value)`, where ties between `a` values are broken by the `b` values, etc.
I guess you aren't in academia? It's easy to tell people what to do when it's not your career on the line... Sad fact is that for most young scientists, a single high-profile publication can make the difference between becoming successful in your field and having to leave academia. Even though many people would agree with you in principle, taking a stand on it is something you just can't afford to do in a field this competitive. Same goes for software development, most of my peers already work well over 60 hours a week, they simply don't have the time/energy to be active on github as well. I'm not saying this is the case for everyone, but there are some good reasons why commercial software is still pervasive.
Many python users use pip install without hesitation. But everyone can register pip packages. Sometime ago there was an article about someone using popular package names, changing them a bit and adding some custom code into the installation instructions. 
I would like to export each of them as a single pip package as I done on npm. Do you believe that can be useful?
Pandas had interface for both, both ways (read and write). Probably a good toolkit to help you build a pipeline. As infinull mentioned, It would help if you could share more information about the text file. 
I'm not entirely certain I completely understand your question, but I'll do my best. Django has a templating system (which can be swapped out for Jinja, etc. if you like) for generating HTML. It has forms for validating data coming from the front end, allows you to determine how your ReST API is going to look (via urls.py) and uses an ORM in order to help you talk to your database easier. Django will return rendered HTML after validating. The only thing you might do separately is develop JavaScript if you need it. In other words, I wouldn't develop the front end stuff entirely separately. Hate to be "that guy", but Django has some of the most thorough, complete [documentation](https://www.djangoproject.com/start/) I've come across. There are tutorials, guides, anything your heart desires to know about Django. A good place to start would be the 'getting started' since it seems like your questions are related to general architecture/setup. It might seem daunting at first, but once it clicks, you just might love it.
I'm just having trouble with differentiating back end from front end with django. My understanding is the webpage is html,css,js on some apache web server. You fill in forms, hit send, and some RESTful request/action is sent to some separate back end server on like an EC2 instance with RDS db or whatever. It does crud work in a db, calculations, etc. It fires back at the web page, and the page changes. I saw one tutorial, and there was a login page done in python (django). Where is the separation? Where am I making my custom front end page with JS and bootstrap or whatever. Additionally, where is that RESTful communication? 
Also, I really appreciate your response. Their documentation is good, I just lack basic understanding is all. 
Worth it, for sure.
You're definitely on the right track. When you deploy Django on a production server, it's run as a process by Apache (or nginx, it'll work on either). I wouldn't worry too much about that if you're just getting started though. Yes, the front end is your HTML, CSS, JS, Boostrap...etc. The JS will send data via ReST API to your Django server. Django then uses a form to validate user input (it just checks that the user put in proper data depending on what you tell it you need). A view helps render dynamic HTML that can be injected into your webpage. For example, if the server is responding with a message for the user, Django can take the HTML (or a chunk of it), alter it, and send it back so the user sees the message along with the rest of the page content. If you want to though, you can have Django return JSON and let the JavaScript make the changes. It really depends on what you need/like. Here's what you might do: Build your HTML, CSS, JS. Any data you have to fetch from the server can come from Django. Django can either give you JSON and you can use JS to make changes to the DOM or what have you, or you can let Django return a template (HTML generated from the server which contains dynamic content). You might decide to use JS to generate dynamic content where a response from the server isn't needed, and use Django templates to generate HTML. Apologies if I'm rambling a bit, I need to get to bed. Just a quick example. A login page: User navigates to your website URL, where they can log in. Server returns HTML/CSS/JS. They enter a user name and a password and click the button to log in. The JavaScript directs the request at the ReST API endpoint where the server validates login information. The request comes to Django. Django uses the urls.py file to help determine what to do when a request is made to the login endpoint. urls.py calls a login view. A view is a class that, in Django, does business logic not directly related to interfacing with the database. In this case, the view will use Django's user model to formulate a query with the input sent from the client, i.e. user name and password. If the User model has a successful query, the Django view will return some JSON or a template - whatever content the user needs to see once they successfully log in should be returned by Django. So basically, you say "hey Django, did they get in? If so, take them to the main page. The HTML can be found here. Before you send the HTML, put this text in the area marked as greeting text". If they don't get in, the Django view will return an error message, maybe some different HTML or whatever. If you want to have a look at the ReSTful type stuff, go to the doc page and poke around under "Handling HTTP requests". Though, I highly recommend you take a look at a tutorial to give you a better overview than what I did LOL Best of luck!
If you can, start using python3. Most^* of the code is backwards compatible with python2. The teaching material should work fine, with the exception of the `print` statement now being a function. However, python2 doesn't care about this, and works fine whether or not you use parens. ^* There are lot of exceptions, but they are all for the better. For learning, the differences are not relevant. But when you get further, they will likely become relevant.
And only takes a few hours to configure!
For initial setup and local testing you can use Django's builtin development server. Don't expose that to the internet, it's insecure. There's a section in the django docs on setting up a production environment. https://docs.djangoproject.com/en/1.11/howto/deployment/ Basically you need a web server (I recommend nginx, but Apache will work too), and a WSGI server (like gunicorn) for connecting it to Django. You'll also want to configure the webserver to serve the static files directory you generate with Django.
I had to recompile vim with +python. Everything working now. Thanks :)
I left academia when I was on a career track after quite some years. Both in my PhD and later years I have come to realize that this argument is not valid. If you can't make a stand then you are basically stalling yourself until you make it and then even if you make it afterwards it's not gonna work out. Your peers are working 60 hours because they can't say no. You can beat around the bush and say well it's a career etc. and no it is not. Hard work and slavery are very different things. I know it because I was one of them. And their efficiency is probably 10 hours and the rest is trying to concentrate and procrastination and self motivation. You cannot work 60 hours on "research" that's a biological fact. Anyway that's academic problems and I don't care anymore. What I have mentioned is something that is fundamentally different problem. The proprietary tools that academia uses are fundamentally flawed in the sense that you don't know what they do. Take matlab for example, I've wasted a super depressed 3 months because of some obscure bug after I've written my own code and dealt with it. Had I known what the code was doing in matlab it would take me 10 minutes to fix it but I couldn't because it was a .p file. As the reproducible research is becoming more and more important. Resorting back to some company's code is just unacceptable. And if academia is honest to itself, they have gazillions of free time. 
When I first started out, I found this page on operators a good reference point to remind myself what each one does, it'll become second nature eventually though! https://www.tutorialspoint.com/python/python_basic_operators.htm
I came here to write this too.
nice, I'm glad to hear
Also if you get hacked via Python, it'll take a really long time :D
NB for more advanced readers: `a += b` isn't just syntactic sugar for `a = a + b`, as it is in C/Java. They're actually separate operators in Python, and they can have different behavior (as define using dunder methods). An example in the standard library is lists: &gt;&gt;&gt; a = b = [1] &gt;&gt;&gt; a = a + [2] &gt;&gt;&gt; b [1] but on the other hand &gt;&gt;&gt; a = b = [1] &gt;&gt;&gt; a += [2] &gt;&gt;&gt; b [1, 2]
Thought this was r/programmingcirclejerk for a sec. 
This has been guaranteed since Python 2.2 apparently. I guess/hope we shouldn't worry too much about people using such old versions :-D
Ooooooh
Also the website I have linked to is initiated by people like Tim Gowers and has no dog in the race since he is a Fields medal winner and an established mathematician. But still he is going out of his way to make a stand. So the attitude which I'll simply summarize as Machiavellian with no disrespect to individuals can only give harm and gets nothing done. There are already countries like Germany, Finland and others who have initiated to cancel or renegotiate deals with Elsevier. Hence there are significant arguments in support of academia can get things much much better only when the academicians agree to act together.
I'd recommend Ctrl-P over Nerdtree. Vim actually has built in functionality similar to Nerdtree, but Ctrl-P makes opening new files *extremely* fast with its fuzzy searching. I never went back.
Honestly, I'd say just start a dummy project with https://github.com/pydanny/cookiecutter-django and play around. Depending on your requirements, you might not need docker, etc. But just get it up and running locally and look at how the templates work in regards to the front end.
... hardly the same.
You are missing lakes inside countries. If you look at the Netherlands for example, this is a pretty huge difference as half the country looks wrong.
Are you paying for this since you stand to profit from it?
Baby steps for me :p Previously I was using Atom much to the chagrin of my manager. I expect I'll switch in time. I've been using Ctrl-P since I read this: https://www.safaribooksonline.com/blog/2014/11/23/way-vim-ide/
* for you. :P
actually kinda useful if you're new to the topic.
I am not paying but I will include a link via which anyone can contact you. The link can be to your blog, freelance profile, codementor profile, social media account or page or youtube channel. 
Oh brilliant. I love getting paid with exposure.
"I have an idea, other people should do this for me" is not how open source works :)
Am offering only exposure for now.
You are right! üòÆ The problem seems to be related to this map: http://openstreetmapdata.com/data/land-polygons I wrongly assumed that lakes were already shaped on it. I will try to use this: http://openstreetmapdata.com/data/water-polygons to cut them away from the maps! 
https://docs.python.org/2/tutorial/inputoutput.html Doc link. There is also a specific example for printing digits of pi. See also, r/learnPython which is where these questions go.
&gt; https://github.com/IronLanguages/ironpython3 Apologies. I did ask the guys in Gitter and they said their focus is on getting a 2.x release out. I was aware there's been work on targeting 3 but this has been a work in progress for ages.
May I recommend https://snakify.org/. It's online, free and has Python 3.
Thanks :-)
would that library get regular updates from osm and be versioned like pytz? then mayebe. otherwise include a tool to do the update in the library.
Awesome!
&gt; herwise include a tool to do the update in the library. The "tool to do the update" is already in the repo. The process is fully automatized, from the build to the release. To get regular updates I can setup a cron job on Heroku to weekly rebuild the maps.
Thank you, I'll check out that subreddit! :)
Execution of powershell scripts is controlled through execution policy which is set to restricted (no execute) by default.
 pip install sortedcontainers
As to taskmap, why don't you try airflow
For searching and opening files I use fzf and is fab, but I use nerdtree to create new files, deleting files and moving files. Is there a better way? 
Sorry mate..My mistake
Hours? Probably days, if you have some issues with your Python interpreter path etc especially due to Python2 and Python3 conflicting. Moreover, you have to realize and handle the quirks of each of the individual plugins. He hasn't even shown the fact that he probably should have an autocompleter like Deoplete installed, a formatter like Neoformat (calling yapf), an asynchronous linter like ALE (calling flake8 or pylint). I love vim, but i honestly don't think its worth it. Even if you're a power user like me (who's written his own vim plugin), in the end i would say vim is not worth it. Just use an IDE with a vim plugin and you're 80% there with the features of vim that really matter (modal editing) 
CentOS still does not ship with support for boost-python3 library.
Okay, you asked if you should use an automatic or a car with gears. 
You can use the vim's build in file manager for deleting and moving. Making new files is even easier, just save an empty buffer.
Why are you testing this? Since init is part of the object life cycle, you're effectively testing Python. Unless there is some logic in the init (which is usually bad, unless it's checking invariants). 
This is such fun logic to play with. If we're going to call Python a security vulnerability, which it arguably could be called, we'd also need to make sure none of our machines are connected out publicly, because that's a huge risk. Then again, wouldn't it be even more secure if none of our machines were networked at all, even if local? This change will make us way more robust to attack! To be honest, what if we just did away with computers entirely, because those are the source of tons of attack vectors, let's just go with paper-only. ...oh but then we get to the #1 security risk of *all* companies: The people. Yeah, hacks do happen when its not someone's fault... it's just really rare. Hacks have almost always involved stupid humans making stupid mistakes, either through improper use of technology, negligence, and/or social engineering. ... but seriously, at least make sure none of those machines are networked in any way.
Ultimately that function returns a class - so the name that is used for the return value should be CamcelCase. In my view the whole point of the convention is that it makes it easier to identify in code whether something is meant to be a variable - or a class; so when TheClass appears later there is a clue that it is a class. The only time I break the convention is on class methods, there the class parameter by default is called 'cls'; i use a similar convention on functions/methods which need a cls parameter. 
I wouldn't try - you will end up trying to test all of python. what you could test is that the attributes on the instance are set correctly - but don't try to re-run all of the python tests. Just trust that they are executed.
For anyone looking for better split actions in IntelliJ check out the [Tab Shifter](https://plugins.jetbrains.com/plugin/7475-tab-shifter) plugin. It offers more actions for resizing tabs/splits and jumping between them.
Alright, it's still a bit of an ugly mess (the main KCANE.py especially, eventually it will get broken into classes, atm it's just a jumble of code) but here's the current state of things https://github.com/purple-pixie/KCANE It doesn't yet have the ability to identify modules, you have to manually select a module on the bomb (click on it so it's zoomed in and central), and manually tell KCANE what it should be solving, but it can solve Mazes, Passwords and Memory so far if you do that for it. (Also the only way to tell it what to solve atm is just hardcoding it into the KCANE.py `if __name__ == "__main__":` block) You also need to have KTANE running fullscreen on monitor 2 for it to work currently. But you can run at arbitrary resolution, it will rescale internally just fine. You might be able to work out how to do actually get it to do those things, that's on you. Currently the requirements are Python 3 (fstrings are god), OpenCV, PIL, and Numpy for the images, Pynput and MSS for the game interactions It imports pytesseract but doesn't currently use it, so you can just delete that import and the function from `utils.py` that uses it and it should work fine. The current solving methods are a fairly hacky-feeling blend of computer vision and hard-coded pixel positions. i.e. it doesn't use fancy computer vision to try to determine where the buttons are, it just assumes they are where they where they should be.
https://www.dataquest.io/blog/python-json-tutorial/ Use the ijson library.
&gt;the whole point of the convention is that it makes it easier to identify in code whether something is meant to be a variable - or a class Right; I think this is the clinching argument! Thanks :) 
maybe accessing it with a generator would be more efficient?
Spent some time on the phone with our very distant 'IT'. If anyone is interested it is Symantec End Point Protection deleting files. I did not have permission to see the appropriate logs. 
To this effect, any object that defines `__lt__` should work as a single-obj that flows correctly into the PQ. So if you wanted to create your own slim class that holds values, that could also work. A toy example. import queue import string import random class Structure: __slots__ = ('id', 'name') def __init__(self, id, name=None): self.id = id self.name = name def __lt__(self, other): return self.name &lt; other.name def __repr__(self): return f'&lt;Structure(id={self.id}, name="{self.name}")&gt;' pq = queue.PriorityQueue() for x in range(10): name = ''.join(random.sample(string.ascii_letters, 5)) struct = Structure(x, name) pq.put(struct) while True: print(pq.get()) 
Typically a *factory* returns instances of a class, not classes to instantiate... but really either way the resulting name should be lowercase. The reason is that the ClassName syntax is used to differentiate a *specific* defined class from the generic idea of a *class*. When you do this: class Foo: pass def fooctory(): return Foo Bar = fooctory() bar = Bar() The **bar** variable is ultimately an instance of **Foo** and *not* of **Bar**, which is not a defined class at all. The Bar name, then, was just a reference, and by the usual convention should probably have been written: klass = fooctory() bar = klass() Now, if your factory is actually dynamically defining new concrete classes (as happens with **collections.namedtuple** for instance), then it does make sense, because the resulting name actually will be the `instance.__class__.__name__` of any instance made from it.
Took some adjusting to get things working how I wanted, but this snippet helped tremendously. Thank you for your help, I really appreciate it. :)
&gt; SpaceVim I think maybe you should have a try with neomake, Asynchronous linting and make framework for Neovim/Vim https://github.com/neomake/neomake
a generator?
seems a nice example, thanks!
To add to what others have said, I'm inconsistent on whether I'd do that within a function but a major use case for naming your variables in PascalCase: # module if os.name == "nt": Generic = WindowsSpecific else: Generic = PosixSpecific The reason to name a variable like a class in this case is that it is meant to be used like a class and you are abstracting the implementation away from people. The whole, "if it walks like a duck" type of thing.
Why not both? And if you're going to be using Ctrl-P you might as well be using FZF, the difference is speed is amazing.
https://github.com/SpaceVim/SpaceVim spacevim is a vim config which is ins-spacemacs. it support python code completipn via deoplete, syntax checking via neomake, code format via neoformat. we use vimfier.vim as default file manager. use dein.vim as the package manager. use denite as fuzzy finder.
The project is in the trending JS repos of today! https://github.com/trending/javascript WOW! Thanks!
WinPython? It's portable you can carry it with you in a USB disk and no need to install
For more complex applications I also really like [cachetools.](https://cachetools.readthedocs.io/en/latest/)
Are you trying to troll me? Either choice in the ‚Äúcar‚Äù in this situation both have all the parts to give itself acceleration. Cars with automatic transmissions still have gears. This last analogy of yours is also terrible. LOL
You can use django channels do this. We are using django channel for similar use case and its working very good for us. But if you are looking for a different solution here would be a good starting point https://www.fullstackpython.com/websockets.html
Very interesting. Congrats
I am taking the piss in the sense that I really should let this rest instead of needling you more, but ORMs have db drivers. They are just an easier way to interact with the drivers. It's exactly analogous. That's my whole point.
Okay that's a good point.
Right. This is why they don't want python installed. 
Made a little project about using turtle graphics library to make multiplayer paint over LAN. It works pretty good but occasionally crashes due to some errors thrown by the tkinter library :(
I guess I just want to test that __init__ gets called when the program gets run
As Jetbrains put it, &gt;With Python, there is a real need to get rid of routine tasks and use &gt;supplementary tools like code inspections, error highlighting on the fly, &gt;dependency checks, quick-fixes, refactorings, a debugger, frameworks &gt;support, testing assistance, Version control, search and navigation, &gt;project management, remote development assistance, PEP-8 compliance &gt;checks. That‚Äôs quite a list. And all these features must work together in a &gt;reliable, efficient and robust fashion. &gt; &gt;That‚Äôs what IDEs are designed for. They provide the necessary level of &gt;efficiency and comfort for using many tools and features in one place. &gt; &gt;For better or worse, Vim is not an IDE. Sure, it is customizable and &gt;supports many things, with lots of plugins and add-ons and other bells and &gt;whistles. Yet it‚Äôs really far off from being a real IDE. &gt; &gt;Here is a poignant example of Vim being overloaded. The result of many &gt;sophisticated ~~hacks~~ modifications, which are not clear even for &gt;experienced Vim users, is the following cramped editor window: &gt; &gt;If you wanted an IDE to begin with, this is definitely the hard way to get &gt;one. https://blog.jetbrains.com/pycharm/2013/06/vim-as-a-python-ide-or-python-ide-as-vim/
This is beautiful. Thanks!
but does it export DXCC entities? (sorry, ham radio joke)
Hey guys I have always wondered how public-key cryptography works so I made the simplest possible implementation to teach myself. Let me know what you think.
Decided to dive in and learn python (coming from Node.js) to build a redis caching microservice.
I read the readme, what's this used for? Employees? 
Use Qt, it's more well-suited than TK.
/r/learnpython
Typically people interested in their own productivity 
What a coincidence, me to :)
Great project!
I don't understand what you're trying to do with this, but `__init__` runs when you instantiate a class, right? So just test that you've got an instance and you can be 100% sure that init ran. You could put a print or something but I'm not sure what you're looking to get out of it.
I don't mean to sound harsh, but looks like 100 lines of python with a few pages of text content. Maybe you could add a readme to explain what you really want out of team members. Stuff like what features you're looking to build, what it means to maintain the code.
It's still your user executing the script. So just dont give the user executing it the rights to fuck shit up...
There are more efficient ways, but something like this might be ok: def alleven(x): for n in x: if n%2 != 0: return False return True
Great question! The data can be used for a lot of different things, the limits of which is still being explored. But to start off with something simple: it can, as you anticipated, be used to figure out how much you've actually been working (or how much time you've spent on a particular task in your work). Or you might just wonder how much time you're actually spending on reddit and other social media. But those are pretty simple questions with pretty simple answers. There is a lot of more advanced things one could do with this type of data. One crazy idea I've had is to [predict and prevent depression](https://forum.activitywatch.net/t/research-project-to-help-users-be-more-productive-and-prevent-depression/23/2). We think that if we want to build really useful privacy-focused applications we need good data to feed those applications so they can *know stuff about us*. An example of this is one of our side projects called [Thankful](https://github.com/ActivityWatch/thankful) that uses the data to help you allocate donations to all the creators online whose work you've enjoyed. There's a lot more to say on this topic, but it's a bit too much for a reddit comment. Your question was a great reminder that I should write an article covering more potential uses/applications of the data. I've been [thinking about it since 2014](https://erik.bjareholt.com/blog/2014/04/11/What-would-you-do-with-your-data/) but a lot has changed since then and an update is definitely overdue. ActivityWatch enables the collection of data with high precision, without sacrificing privacy, and with a major focus on extensibility. It's a good start to collect the data now so we can build all kinds of crazy applications in the future, all without sacrificing privacy.
thanks for answering, but im still not so good to put it in a code and make a full code what works already, if u could help bit more and write whole code i would appreciate it so much... thanks anyways!
Read a basic python book like automateyheboringstuffwithpython.com
What projection does this use?
As much as I love Python, there are many, many more employment opportunities out there for good JavaScript developers. It was already essential for web front end development, and its recent transition into the web back-end world has caused things to blow up in a big way. 
Quantified self aka lifelogging. For people that like to integrate personal data analytics in order to live a better life.
Ugh can't get the code syntax correctly displayed on reddit. Its a python function, just the indenration is messed up.
EPSG:4326 I will add a badge to inform users about it. Thanks!
Maybe. Not unless you spend the time to learn it very very well though. I used to use vim for years but now im using sublime. I tried pycharm but it was slow as a dog(like all java programs) and so i can't really speak to that.
It can actually be a one-liner: all_even = all(x % 2 == 0 for x in list_of_numbers) none_even = all(x % 2 != 0 for x in list_of_numbers) any_even = any(x % 2 == 0 for x in list_of_numbers) any_uneven = any(x % 2 != 0 for x in list_of_numbers) basically, `all()` tests if all items in the iteratable are truth-like, `any()` does the same but checks if any is truth-like. The rest is just an example of [list comprehension](http://www.pythonforbeginners.com/basics/list-comprehensions-in-python) 
&gt; DXCC Never heard about that üòÆ. 
Both :) if you move to working with Django, or Flask, learn both. They are useful to know. Otherwise, do what you think you'll like :) 
i've been looking for dxcc entity shape data for years... doesn't seem to exist. it's not even clear to me where the dxcc boundaries are exactly. I don't think they've ever been charted.
Agreed, this is probably better.
Javascript developer here. I would say if you are just building simple applications learn express and node. A simple application would be building an application that let you insert your league of legends username and having it report your stats to the frontend. Python is growing because of how popular data science is becoming. It's only big competition is R. So any application that has statistics and heavy analytics use python. You've probably heard this before but thinking like a programmer is far more important than the language. I.e you should be able to write a function that takes a string and counts each character and return the most frequent character etc(just an example).
If your object is created and you've not done any metaclass trickery, init is being run. I'd avoid testing things like new, init and del unless there's actually logic being run there (which, good luck testing del). And the only logic there should be to check invariants so you don't end up with a busted object. e.g. If you have a class that represents a work shift, you'd check that the end time is either None or greater than the start time. 
That makes sense. It certainly sounds like JavaScript might be the smarter way for me to go then.
&gt;Do you believe that can be useful? If it could be used in such a way as "from geomaps import world_land" and get a dict then yes. If it's just providing a json file in a pip package then not so much. In python land imported modules are often saved in an environment directory somewhere, the app shouldn't have to reach into it... whereas with npm it's acceptable to put everything in a local node_modules where the app can access it directly.
Yeah that's what I've noticed as well on a lot of freelance job sites. The job postings are 10-1 in favor of JavaScript coders. Yeah, I think the smarter route would be for me to go to JavaScript even though Python is super simple so far that I've learned.
I found this discussion: https://www.reddit.com/r/hamdevs/comments/5ibwfe/help_i_need_dxcc_entity_gis_data_shapes_points/ I don't know if they already exist but they can be exported from this: http://marco17.phpnet.org/photo/carteDXCC.jpg
thanks for linking me to my own post :)
Very well written post. I'm still new to Python (and programming in general) and I was able to follow/understand it.
The idea was to export the .geo.json file as a string. Then you can use json,loads to convert it to an object. What do you think?
Should be really easy to write a wrapper that will do the import and return a dict. I'd be happy to write it for you if you take pull requests. :)
It would be amazing üòç. You can find the files used to generates the npm packages in the 'tpl' folder (templates) There is also a publish.sh bash script that actually push it to npm but can be used to push on pip too. I will add more info on how to contribute soon. Thanks!!
Sorry i was on mobile. üòÅ
the real problem with that jpeg, besides the crap resolution, is that the boundaries shown are not the real DXCC boundaries, which end at the coastline of the ocean AND internal waterbodies. So while those boundaries are pretty for humans to look at they are useless for taking an arbitrary point and figuring out which if any dxcc entity it's in. anyway I'm sure it would be possible to manufacture the data SOMEHOW but nobody's paying me for this shit.
Water is not a big deal, we can use the waterbodies shapefile from openstreetmap to subtract it from the map extracted.
Please be careful, people can die of exposure
What makes you think, that shutil.copy does not wait? I just tested it, copying a 1GiB file and it took about as long as using cp on the shell. Also python neither spawned a second process, nor thread.
It may be OS-dependent whether the interpreter does the copy in-thread or shells out. Since you mention `cp`, I assume that you're on Linux or macOS. /u/JohnnyLight416, what OS are you running on?
just learning python, made a simple brute force primality test that asks input again when invalid number is entered and keeps starting over with new user input unless a sentinel value is entered. works perfectly after so much error fixing.
hehehehe very funny.
https://github.com/simonepri/geo-maps/issues/5
looks nice, and huge, [ IMHO: a bit of overkill, nice, but overkilll ]l
You have to understand that there is a difference between "copy"ing and "fsync"ing. In broad general terms. To copy a file you need to: 1. Read it off disk to memory 2. Instruct the OS to write those memory contents to another file 3. The OS then puts that memory in its write-back cache and defers writing back to disk until a "good time" However the next two steps are part of fsync: 4\. Actually write that data out to disk (fsync on the file you are writing to) 5\. And modify the directory entry to include those contents (fsync on the directory). Between steps 3 and 5 the OS reads from the cache (not the disk). So the file appears to be written even if it isn't. If your computer were to crash after step 3 then the contents may not make it to disk, but that isn't a fault of the python interpreter or the OS. Python is not responsible for the system crashes, and the OS generally says "we try not to crash, but if we do, well we don't guarantee anything, because that is the definition of a crash". All that Python shutil guarantees is that the data makes it to the write-back cache, so it appears to be written. And the OS guarantees that so long as it doesn't crash other processes will in fact see the contents of the file as if it was written. If you want to ensure that it is in fact written, you need to use os.fsync.
We can discuss about it here: https://github.com/simonepri/geo-maps/issues/6
It's good form to mark your (non-file) targets as "phony", e.g., [...] .PHONY: test test: venv ${PYTHON} -m pytest .PHONY: lint lint: venv ${PYTHON} -m pylint ${PYTHON} -m mypy [...] or all in one: .PHONY: all prepare-dev venv test lint run doc `.PHONY` is a sort of pseudo-target that marks its dependencies as "not files", so that if a file named `test` or `lint` actually exists it won't mess with your make commands. You should also rename your `all` target to something less indicative of building the app, like `help`. You can set this as the default command when no target is specified (i.e., just `make`) by setting it as the first target in the file, which you've done, and as the default command when an invalid target is specified (e.g., `make some-unknown-target`) by setting it as a dependency of `.DEFAULT`, e.g., .DEFAULT: help help: @echo "make prepare-dev" @echo " prepare development environment, use only once" @echo "make test" @echo " run tests" [...] I love Makefiles, and I love to seem them get the love in the wild that they so deserve. Nice work!
May I ask you the use case for this kind of map?
Thank you, that's very nice improvement! I used `DEFAULT` in the blog post as well so it's easy to copy later. :-)
This is very cool, gonna try it on myself. I think I won't be happy with results, but that's kind of the point, right?
Windows 10, and it's Python 3.6. I'll edit the post to reflect that.
I think it's shutil.copy because I have these lines in a loop: answer = input("copy?") // this is longer in the actual code if answer.strip() == "y": print("Removing: " + original_path) print("Copying: " + new_file_name) print("To: " + os.path.dirname(original_path)) shutil.copy(os.path.join(root, file_path),os.path.dirname(original_path)) The next prompt almost immediately after hitting y, and I can continuously hit y so it ends up copying multiple files(or queues them, I'm not sure how it works exactly). I know it's not done copying because I can look at the disk usage and at my thumb drive's usage light, and it's still working when it prompts me. Is it possible it hands off the copying to Windows and therefore doesn't have to wait?
That's good information. So once Python gives the data to the write-back cache, it's up to the OS to actually write the data to the new location?
&gt; EPSG:4326 Thanks (+1) - though it looks like that is the "map data" coordinate system on the actual 3D earth, which links (latitude, longitude) coordinates to physical locations of earth - whereas I meant to ask for the projection, which is how those (latitude, longitude) coordinates are mapped to (x, y) "pixel coordinates". I don't mean to send you on a wild goose chase - it's just out of interest - so don't worry if this is complicated to find out. Thanks!
If you like Makefiles and Python, you should check out [fabric](https://github.com/mathiasertl/fabric/) Like Make, but far more powerful and easy-to-use
The program can direct the OS to write the data out by using fsync, otherwise the OS controls when the write-out happens. fsync is a way for programmers to instruct the OS that the data really does need to be physically written out. It is like saying "This is my PhD dissertation and we are in the middle of a massive snowstorm. I can't [Brendan Frasier](http://www.imdb.com/title/tt0111732/) this shit and bribe the homeless man who lives in the basement of the library for individual pages from the last time I printed it out. I need you to physically preserve it right freaking now. The problem is that: 1. fsync is slow 2. and everyone thinks that their file is Frasier's PhD dissertation 3. so everyone calls fsync 4. and then optimizations are introduced that reduce the risk of both crashes, and corruption in the event of crashes (see EXT4 journaling) 4. but the old programs continue to exist with their performance killing fsyncs... and that leads OS and hardware manufacturers to want to lie and say "yes, sure we wrote that out, pinky swear!!" As a programmer you generally should not be calling fsync. There are very few use cases where you need that. Maybe if you were writing a database, but otherwise don't think about it. In this particular case... things are a little weird because of that removable usb device. If you access USB devices through means other than windows explorer you should be careful to always use the [safely remove USB device](http://etc.usf.edu/techease/win/hardware/how-do-i-safely-remove-a-usb-device-from-my-computer/) option. That will unmount the device (and flush any pending reads/writes to and from it.
Hello, I'm a bot! The movie you linked is called **[With Honors](https://www.imdb.com/title/tt0111732)**, here are some **[Trailers](https://www.youtube.com/results?search_query=With+Honors+Trailer )**
I agree, it's powerful. I used it several years ago. Nowadays, though, I think better for deployment is to use Salt/Ansible/GitLab/Kubernetes/... because you can only describe what you want without need to do it everything by hand. And I'm using Makefile also because I can use the same commands for all my projects, not just Python ones. That's why I stopped using fabfile.
I disagree with the ‚Äúif it walks like a duck...‚Äù argument. When reading through the code, I would try to grep out ‚Äúclass MyTmpCamelCaseClass‚Äù to try to find the class definition and fail. I think it‚Äôs better to name it something like ‚Äútmp_constructor‚Äù or ‚Äúmy_class_exec‚Äù. This way, it would be immediately clear to someone trying to read the code what was being done.
You are right WGS84 (EPSG:4326) is a spatial reference. So you are asking with which projection these maps are rendered in the previews? Am I right? Here you go: Geometry Type: polygon Bounds: -180 -85.051129 180 83.875172 Proj.4: +proj=longlat +datum=WGS84 
I agree that ansible and other tools may be more powerful for deployment. Personally, I just use fabric as Make on steroids for all my projects.
Evil Mode is significantly better than IdeaVim. I don't really have much of a use-case for it anymore, though - I either use purpose-built tools, like PyCharm, or Vim.
I've been wondering about that but haven't been arsed to learn fabric yet. Does it handle file dependencies &amp; targets &amp; skipping them (if no outdated targets) properly?
Arsed has just become my new favorite verb
I'm sticking with Spyder.
take a contest log, georeference the callsigns, figure out what dxcc entity they're in obviously it wouldn't be perfect, but it would be nice to be able to analyze your logs that way. 
Ok. Can do!
If you extract polygons from the lines of the image (I've found some images with higher resolution on google) then I could try to generate them! Some of them: http://www.mapability.com/ei8ic/maps/maps.php http://www.icomamerica.com/en/amateur/amateurtools/2013_itu_cq_worldmaps.pdf . Can't really understand which one you need :(
Sorry if I'm missing something but what does this have to do with python?
I can see where you are getting this from. I want the other people to work **with** me to work on the interactive parts of the story. I could do this all my self, but I would *like* help but I don't *need* help.
those are cq dx zones, different award program from ARRL dxcc (ham radio is complicated)
 from string import printable from random import choice while True: print(choice(printable))
One complaint about your `Structure`. The members `id` and `name` are publicly accessible ***and modifiable***. That means that if you use them with `heapq` then it is presumably permissible to push the item into the queue and then modify the name, and that would lead to a violation of the heap invariant. Slightly better to save the `name` to a private field and provide an accessor attribute to make clear that it should be considered immutable. 
If you want to print random characters, you should start by importing random and math. Then, within a while loop, create a random number by sampling a uniform distribution between 97 and 122 inclusive (the reason for this will become clear in a moment). Store this value in a variable. Finally, print the `chr()` of the variable you just created. What `chr()` does is takes the Unicode code point and converts it to the character it represents. In this case, 'a' has a Unicode representation of 97 and 'z' has a Unicode representation of 122, so we create a random number in that range and print the corresponding letter. The code for this looks like: &lt;p class='example'&gt; import random import math while True: val = random.randint(97, 123) print(chr(val)) &lt;/p&gt;
Use [wrapt](http://wrapt.readthedocs.io/en/latest/).
&gt; Is it possible it hands off the copying to Windows and therefore doesn't have to wait? Nope, rather winblows tells it, almost immediately that it is done copying. See explanation from /u/jorge1209
r/learnpython
* Your code prints a random lowercase letter, not a random character * If you want to get a random lowercase letter, you should just import `string.ascii_lowercase` and use the `random.choice()` function directly on that. 
Yeah, you can adjust the range of integers produced to print any other character, not just lowercase. Either solution works.
You don't need math 
[removed]
You are correct
Also, just to say, the program reads from the files to tell the story.
I‚Äôm getting a 404
Haha yeah I got that, but I assumed the post would represent a few months of work, to be like 'Im a dev that built this engine and the beginnings of a game, help me finish it!', but the post is more like you just finished a tutorial and you're stoked to write a game. It will be cool to see where you take it but I think it's too early in the process to be able to help out without being the one to build everything haha.
Fair point, yours is a better solution to grab a random character from an abnormal range of characters. 
Hahaha you're totally right, on all accounts. It is but a toy example, to show how you could use a single object that supports the `__lt__` operation as something that can flow into a pq. OP was complaining about how inflexible PQ is Python. Definitely thank you for showing how you would need to compound on the example to make it work safer.
The thing I liked more in this ones self-description over its competitors is that there wasn't any talk about quantified self but only about valuable data.
Note that if `fibonacci()` is defined using `memoize` as a decorator, the recursive calls to `fibonacci()` take advantage of the cache as well. @memoize def fibonacci(n): ... &gt;&gt;&gt; timeit.timeit('fibonacci(35)', globals=globals(), number=1) 0.00011659273877739906 &gt;&gt;&gt; fibonacci.__closure__[0].cell_contents {(1,): 1, (0,): 0, (2,): 1, (3,): 2, (4,): 3, (5,): 5, (6,): 8, (7,): 13, (8,): 21, (9,): 34, (10,): 55, (11,): 89, (12,): 144, (13,): 233, (14,): 377, (15,): 610, (16,): 987, (17,): 1597, (18,): 2584, (19,): 4181, (20,): 6765, (21,): 10946, (22,): 17711, (23,): 28657, (24,): 46368, (25,): 75025, (26,): 121393, (27,): 196418, (28,): 317811, (29,): 514229, (30,): 832040, (31,): 1346269, (32,): 2178309, (33,): 3524578, (34,): 5702887, (35,): 9227465} 
tldr ```python from functools import lru_cache @lru_cache def some_slow_function(x, y, z): print('now it goes fast usually') ```
Related project: https://mapzen.com/data/metro-extracts/
[For Hire] Freelance and Remote. I have web scraping skills using Python, getting into Flask and can do small projects in it. Web scraping profile: http://www.kashifaziz.me/web-scraping-data-mining-services/ Web scraping gist: https://gist.github.com/kashaziz/dbdb8f39e5c99a8a5bcbfdc01553d66b
Spyder has been a godsend to me.
Python is great for little projects for yourself. It is my understanding that it does not scale well. Hence, not people want to pay Python coders to do much stuff.
Probably from cache though!
I'm making some programs that might help me with studying. As a physics student I write my notes in [LaTeX](https://en.wikipedia.org/wiki/LaTeX) with a lot of user defined commands so that I don't need to type type long formulas over and over again. And most lecture notes are also written in LaTeX. - 1) a program that reads all of my notes and turns it into flash cards. Otherwise I'll never revisit those materials. - 2) a program that divides a pdf of a book and splits each page in at most 3 parts, so that it is nice and big on my screen (helps me with reading faster and keeping my focus), meanwhile taking into account where paragraphs begin and end for it to split. - 3) a program that is basically a "pdf"-reader for said books. Which directly lets me type Questions / Answers for the flash cards. And lets me select with a mouse a part of the screen and adds that to the Q/A card aswell, so that I don't need to type formulas or draw figures. I'm almost nearing an end after 3 weeks, but I thought I was almost done before :P At least the programs work, I just need to make it pretty if there are multiple books etc. involved.
**LaTeX** LaTeX (IPA: , LAH-tekh, also pronounced as , LAY-tekh, a shortening of Lamport TeX) is a document preparation system. When writing, the writer uses plain text as opposed to the formatted text found in WYSIWYG word processors like Microsoft Word, LibreOffice Writer and Apple Pages. The writer uses markup tagging conventions to define the general structure of a document (such as article, book, and letter), to stylise text throughout a document (such as bold and italics), and to add citations and cross-references. A TeX distribution such as TeX Live or MikTeX is used to produce an output file (such as PDF or DVI) suitable for printing or digital distribution. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
This may actually help me with my audit trail for ISO 27001. Gonna stick it on a jumpbox and test.
(*Spyder maintainer here*) Indeed, these are really sad news. If you are interested in making Spyder a sustainable project, please consider donating to support our development: https://opencollective.com/spyder Any contribution is really appreciated! ---- To know more details about this, please read https://github.com/spyder-ide/spyder/wiki/Anaconda-stopped-funding-Spyder
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/pyfinance] [How To Get Free Intraday Options Data With Pandas-DataReader ‚Ä¢ r\/Python](https://www.reddit.com/r/Pyfinance/comments/7emjn6/how_to_get_free_intraday_options_data_with/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
You won't believe what happened next
Also, don't cache things that can't be cached.
I started learning ML recently and hope it could help.
Mac OS. Cuz I‚Äôm rich and loses with cash. 
Oh man. And the new .NET open source was apparently a big deal. I don‚Äôt know much about C# or the .NET platform but we are starting a project next year based on .NET and the senior engineer I work with is far more excited than I expected. Microsoft is doing something right to tickle these people. I dunno
1) I would suggest changing your loop to something like: for url in urls: soup = make_soup(url) ... I think having a counter called 'x' and using 'x' as your looping variable is what's causing problems. 
When you're IO bound, Python or C will make almost no difference. In fact, if you do your C buffering wrong, Python can even be faster. Actually you can replace Python with almost any language.
I know why you want to do this.... your teacher told you to.
Working on the back-end of my card game so I'll have something of a guide when designing the GUI (using Kivy). My current struggle is the battle mechanics. The game itself is very standard-ish Magic: The Gathering, Yugioh etc. My current battle system is basically MTG (but you can do it more than once a turn, like Epic). The psuedo-code looks something like this 1. list_player_creature_field() 2. list_opp_creature_field() 3. player.declare_attackers() 4. opp.declare_blockers() 5. sum_total_attacker_atk() 6. sum_total_blocker_atk() 7. deal_attacker_damage_loop() 8. deal_blocker_damage_loop() 9. set_attackers_to_attacked() (so they can't repeat atk) 10. set_blockers_to_blocked() (so they can't repeat block) And that is without getting into inserting activation triggers for on attack, on block, damage dealt, dealt damage destroyed by battle, destroy something by battle So I was considering going back to a simple version like Yugioh or Hearthstone which means steps 4, 5, 6, 10 wouldn't need to exist, with steps 3, 7, 8, 9, all being pretty simple code (likely not much more than a single line). I was wondering about this with other game designers, when and or how often do you need to change your game rules to improve your game applications code efficiency?
Just wanted you to help not obsess over the negativity 
This belongs in /r/learnpython . You may get more traction there. Also, this is really broad. All sys.argv does is give you exactly what‚Äôs on the command like tokenized appropriately. If you want to write a cli, art parse is built in a pretty good. There are alternatives but I am find with argparse. 
Nothing I do is advance enough to need this but it looks cool. How common are these in actual usage?
Not op, but what about sets that have no ordering?
... but can be unrestricted by users for their own scope. Set-ExecutionPolicy -Scope CurrentUser Unrestricted
Set do have an order. Any given set will return it's elements in the same order every time. Its just that when making or modifying a set it might get reordered, and there is no defined reason to the new order. It depends on your python interpreter, but the order is usually based off the hash values, which is why sets of small numbers often print in as if ordered. 
Learn both. Start with flask, since it's a smaller framework, then try django, and see what you like.
What's stopping you from building NetCat with PowerShell, or just using [someone](http://seclist.us/powercat-a-powershell-version-of-netcat.html) [elses](https://github.com/besimorhino/powercat)?
 Solution verified 
Thanks!
I started doing some web development on python not too long ago, I started with Django, it was pretty complicated for me, I cant say that it'll be true for everyone else. I followed the tutorial on django's home page, fantastic documentation btw, it was pretty simple but when i started integrating graphs and stuff it got really complicated really fast for me. Then I discovered flask, it was a lot simpler and a lot more forgiving, though the errors were sometimes less clear compared to that of django. Flask was easier for me to learn how to manage everything using the MVC format. 
Could you compare this to pipenv's Pipfile, which is already PyPA's recommended workflow?
When the system is IO bound, no languages could surpass the physical limitation rather than Python, C, etc. Here wrong buffer do you mean the write page size?
Yeah. I just think it is worth pointing out the cost of not using tuples. So many details that can easily be implemented incorrectly if you roll your own class. Ultimately I think that is a fault of the language. Mutability should be an attribute of the class, and comparability should be a proper interface. Instead it is all done implicitly by hoping that the programmer defines the correct combination of magic functions.
awesome!! thank you!
Thank you 
Thank you 
 def memoized_func(x, cache = {}): if x in cache: return x result = func(x) cache[x] = result return result I don't actually recommend doing this.
Damn I wish my school taught programming... Even if it did, why would they assign this?
You‚Äôre asking a question. From the sidebar: &gt;If you are about to ask a question, please consider r/learnpython According to https://github.com/LingDong-/linedraw/blob/eac8073610189788f915d4a222e20ef7feb2a4a3/strokesort.py#L27 the `visualize` function uses some `turtle` library to draw. When you say ‚ÄúIt didn‚Äôt work‚Äù, you‚Äôre leaving out a lot of detail. That‚Äôs what makes it a dumb question. One possible cause is missing a library. Another is making a typo. Another is looking in the wrong place for output, or providing the wrong input, or any manner of other things. What exactly did you do? What exactly did you observe, and what exactly did you expect? Why do you think they‚Äôre different? Include these when asking the question. 
Oh shoot, I forgot about the learnpython sub sorry about that. I can ask over there. 
&gt; I'd like to create web applications (on websites), that can provide business solutions for different companies. And I want to get involved in creating full solutions for companies like inventory control, client control, accounting, etc. The works. There is nothing in this description that describes any sort of limitation that would push you to python or javascript specifically. &gt; Cause it feels like every 3 days I do an extensive amount of research and am still lost on what to do. It sounds like you are thinking too big. Do one little part of this colossal system you want to build in each language and see how it feels. A huge part of the task you are setting for yourself is architecting the solution, which can largely be agnostic of the language.
As someone who was in this exact same predicament I'll give you my two cents. I think it depends on your short and long term goals. Django is a fantastic, fully featured framework that is tremendously powerful. In the long run I think if you know Django you can probably build complete applications quicker and more easily. With that said, I felt like I spent 90% of my time learning Django and not getting better at Python, which was my goal. With Flask I felt like I spent less time dealing with a framework and more time just writing code.
[Pirates use Flask, the Navy uses Django](https://wakatime.com/blog/14-pirates-use-flask-the-navy-uses-django). Side project for fun? Flask. Side hustle? Django. Looking for a job? Django.
This would appear to be a half-assed response to [this](https://www.reddit.com/r/Python/comments/7e6pes/vim_python_ide/). Could have at least used some Python source. &lt;3 i3 though.
**Basics:** 1. Start with the basic Flask tutorial from the official docs - http://flask.pocoo.org/docs/0.12/tutorial/ 1. Then, when you're ready to add a bit of JavaScript, check out - https://github.com/mjhea0/flaskr-tdd **More advanced:** If you're looking to dive into more advanced material be sure to check out these two resources- 1. https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world 1. http://discoverflask.com **Real Python:** Want to take an even deeper dive into web development and Flask? Check out [Real Python](https://realpython.com). Note: I am the co-founder/author Real Python takes an experiential, learning by doing approach so you build interesting projects. Happy to provide a discount. Email us - info at realpython dot com. Cheers!
Kind of minor, but I much prefer this layout for their first example: def memoize(func): cache = dict() def memoized_func(*args): if args not in cache: cache[args] = func(*args) return cache[args] return memoized_func
Python internally runs a few setup steps and makes a few assumptions and calls the same libc write call that C programs use. The bulk of the time spent may be in the call to write, shrinking the relative cost of the python overhead.
So first read pep 3333 and learn about WSGI. All of these frameworks are based on the same technology Web Service Gateway Interface. It's actually a really simple idea. Once you have an idea how python web frameworks work it gets easier to understand what they are doing for you. Btw you have other options too, look up Pyramid. I think it's a great alternative to Django. If you are only interested in ReST APIs look up hug, flacon, or APIStar. I am really liking APIStar. Couldn't find the original article but I think this O'Rielly book has the same content. Should give an overview of a lot of the other frameworks. http://www.oreilly.com/web-platform/free/python-web-frameworks.csp Good luck 
Python is upwards compatible other than Python 2.7-3.x. In that case, if you code in a certain way, all your code will work with no changes. Going up is easy. Going down is harder.
I was interested in using this but the coast lines look a bit off (even in the highest quality geojson data set). Regardless, this is a pretty neat project.
You can install the different versions side by side. Unix/linux `/usr/bin/python` can be a symbolic link to `/usr/bin/python34` (or whatever version you wish to be dominate). In Windows, whatever is first in %PATH% ($PATH?) wins, ensure your desired interpreter version is dominant and no problems. FURTHERMORE! * `pip install virtualenv` (systemwide install BUT some distros like debian flavors recommended `apt-get install python#_pip`) * `cd your_project_dir` * `/preferred/python -m virtualenv env` (putting a dot should not be needed) You should now have a `env` subdirectory in `your_project_dir` (this same behavior can be duplicated on windows by adjust the directory path eg `c:\\python34\\python -m virtualenv env` * `. ./env/activate` or `./env/Scripts/activate` will activate this virtualenv (the difference in calls is OS specific, putting a `.` in front of a shell script tells bash compatible shells to execute the script after it. I believe the equivalent is `shell` but I grew up as a kid with dot as well as the skillset to install a bash interpreter if my environment didn't have it.) Both linux and windows the prompt should be slightly modified to include `(env)` in it, telling you that you are using the locally created `env` virtualenv. 
Well, javascript was made with whole async idea behind it. Python wasn't. That's why you have to explicitly point out what you want doing async in python
Want to try a super fast python 3.5+ async micro-framework? Try sanic.
Checkout the module `fastcache`. I think it's faster.
Which feels pretty natural coming to from flask
&gt; #When should one start learning Flask/Django ? Can a noob Pythonista learn them along the way ?
That makes me sad. And Python's flow of async makes it useless in some scenes.
Exactly. It was built to be as similar to Flask as possible so that users will be familiar with the usage patterns, but not so similar that it would increase the size of the micro-framework or inhibit the performance. I use it for hobby projects and some python microservices at work and I love it.
Why not both?
Great work! Would also be cool to get a quick rundown on how you tackled the cross-platform issues.
Code made in 3.4.3 should run just fine in 3.6.3 just fine. You may have included libraries that might not have been updated since 3.4.3 but these should work as long as you can still pip install them. If all else fails, you can install 3.4.3 and still run your code, or just run it in 3.6.3 and learn how to debug your code. That's a really great skill to have, and a real world use case to learn it.
all languages have their weaknesses. this is one of python's well known issues do you have a question or are you just complaining?
I've got 2 microservices of it in production and a few more pretty close to release. I'm very happy with it so far. Would honestly recommend it over flask at this point.
I'm waiting for Trac to use Py3 so I can switch all my Apache mod-wsgi vhosts to Py3. Until that happens we are in 2.7 land.
Pyramid. Actually, it doesn‚Äôt matter. None of these will ‚Äòteach you web development‚Äô, but you‚Äôll learn something about web development along the way.
Like with most vim plugins, when you install them, you have to force yourself to use them a bit, create some fake situations where you need them, to get them into muscle / experiential memory. After that, it's easier to recall them when need arises. Their afordances become ready-at-hand, so to speak. I find myself using undotree maybe every second day. It's like a mini-git in your editor, really nice when just exploring some tiny implementation detail idea that's not large enough for a git commit.
Thus looks interesting! As someone who is easily distracted, it would be useful to quantify just how distracted. I wonder if I can get my whole team to install it and we can benchmark my departments productivity...
YesÔºåthe python interpreter executes c function without python stack frame overhead. And the most of time is consumed by the write.
Have you looked at [Beeware?](https://pybee.org/) which supports Py3 exclusively
We'd love to try and make ActivityWatch easier to use for teams. Create an issue on GitHub if you have any ideas :) 
Oh wow, yeah that was a challenge. We're using PyInstaller to build executables which now works alright (after a lot of tweaking and bug fixing). We're still working on producing an `.app` bundle on macOS but otherwise trying to work around PyInstallers rough edges have payed off :)
Nice tip, thx!
Learn both and then you're the one who can decide best which is best for your project. I learnt Django first it took a bit of time but then flask seemed so familiar and easy.
I don't know if this applies here but I've come across this problem in other languages where you enter a loop and it's blocking the GUI event processing. Is there a function in TK that your can call in your loop to process GUI events? Something like window.update(). A quick Google suggests that this might not be possible since it's single threaded and your one thread is stuck in a loop and so can't process events. https://stackoverflow.com/questions/18038604/interacting-with-tkinter-window-during-a-long-process
Reading a little closer and the usual way to do this is to set up a timer event, which you can cancel if needed. As a rule, do not pause a program by looping!
exactly what I want to ask
Can you open an issue about that with an image showing the problem? Thank you!
I didn't know the first one. I wouldn't say it's something you need to know. Would be suprised to see it in an interview. It's rather obscure and if you need to do this then you are probably doing something wrong. Also I might have gone with super(B, obj).show() The others are pretty useful though.
"learning" Flask takes like an hour. There's not much to it. You just write REST routes and provide templates. Django is much more powerful and can do a lot for you, like Rails.
Sounds like I need to check it out.
Completely right about super(B,obj) i didnt know it
All these are real questions from my students
Then go find the student that was abusing inherence and give him a caning!!!
He didn't know the answer at all.
You did it wrong, because async is preemptive scheduling. You are responsible for giving back the control to the scheduler. In the case of async and IO this is done auto magically in the background. In the case of computation, you have to do your work in chunks. Python's async is very consequent and JS is a mess. 
Why? Everything you mentioned is possible in python, you just need to start the event loop explicitly which you do once in your entire program. 
It's a weird quirk of the syntax - `in` is considered a comparison operator, so `False == False in [False]` is evaluated much the same way as `0 &lt; x &lt; 5` - as `(False == False) and (False in [False])`.
Yup!
Learning Django will teach you both. 
Sad to hear that. The wiki link provides some insight on the current state and the future of the project. I understand that without funding the project will progress a lot slower. What I miss are some numbers on how much funding is needed in order to keep the project going as it was until now. Is it possible to provide some (estimated) figures?
 &gt;&gt;&gt; True != True in [False] False
Because while time may be infinite, our time on Earth is not. For this reason, choices must be made.
Go for Django for more jobs. Source: went for flask.
I'm gonna suggest Django because it's bigger. You don't have to understand all of it in order to make a functioning web site, but you'll be able to pick up more concepts faster because it's a unified framework. For instance, Flask does not come with an ORM - the set of stuff you use to access a database, which is kind of a huge part of building a website. Yes, you can use SQLAlchemy with Flask, and SQLAlchemy is great and you should definitely learn it. But I think it's probably going to be a bit easier to learn Django Models along with the rest of Django, THEN move on to SQLAlchemy when you're ready.
Busy implementing multiple touches gesture recognition in Kivy. This framework offers all the basic tools to implement from scratch a touch recognition system but it suffers some design flaws, like for instance using multiple fingers will be precieved as a sequence of touch down events for each finger. And that makes impossible to determine if the first touch down is a normal single touch of a single finger or the first touch of a multi touch event. And if the first touch is above a button or a widget, it will consider it as a mouse_down event, which is usually not desired in a multitouch event.
Start with flask, it is easy and you find it everywhere. But no job says ‚Äúwe want flask skills‚Äù, because it is too easy. Flask is really used everywhere, from small micro service to big front end. But it indeed does not scale much more. I would not want a job based on Django competency, I would say they are for uninteresting projects. But maybe I am biaised, I did a lot of twisted and low level python web programming, not sure if it is much better. Now I use asyncio/sanic instead of flask, but for some microservice I still use flask. Tl;dr: start a personal project on flask, see how easy it is, maybe try some external project to level that up (you can do pretty complex stuff with flask alone). Then give a try to tornado on a more complex project
No one will ever ask you about new. I've been using Python for 11 years. You really don't need to know.
How does it compare with aiohttp ?
The word false means nothing to me anymore.
There is no black magic there. Replace False with 1 evrywhere and it might be clearer 
Maybe its not a fair question but it was asked by google interviewer
True. Happened to me too.
I don't quite agree with the inference that because javascript was designed with async in mind and python wasn't that it's approach is somehow better. It is true that because javascript was browser focused from the beginning, it needed async handling capabilities in order to scale i/o properly. However, it's approach is caught up in that crossfire that I refer to as callback heaven help us. Node.js is also callback based. Python's Johnny come lately approach to async has several competing architectures. One that is callback based the others are not. The latter rely upon coroutine concurrency which has decided advantages over callback heaven help us. ( see Trio and Curio) I think Trio's approach is going to prove exceedingly useful because you can mix synchronous and asynchronous code more easily. The big issue with asynchronous code that is async/await based is that once you start that event loop you are stuck in it, meaning that every io function thereafter has to recognize the master event loop's control over all io async operations that you callback into. You end up async/awaiting the shit out of every io related module that you call thereafter. 
It's called *operator chaining*, though it's a bit hard to think of **in** as an *operator*. Nevertheless, along with **not in**, **is**, and **is not**, it's considered an operator with the same precedence as &lt;=, ==, etc. Because of that when you don't explicitly define an order (as you did in the bottom two examples using parentheses) then Python sees it as a chain to evaluate. So: False == False in [False] Becomes: (False == False) and (False in [False]) Becomes: True == True Becomes: True It makes a bit more sense if you choose easier operators to wrap the noggin around: True is True is not False True == True != False True &gt;= True &gt; False But they all work the same.
because when I start the even loop, the program is stuck. I can not do other things when a even loop is running.
I have a question. when I start a even loop, the program is stuck. I want to avoid it.
Well, I think it mostly depends on your programming style and mindset. I use it for all my projects and find it extra beneficial. However, I don't think I would use it for something super small (sort of script or homepage website). Most common use cases from my side are: 1) Keep all application structure in single module (example - https://github.com/rmk135/my-purse-app/blob/develop/src/mpa/containers.py) 2) Use "override" functionality for integration testing (stubbing gateways and / or services) At the same time, I do know people who use it different way, for example - for swapping whole python modules.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [rmk135/my-purse-app/.../**containers.py** (develop ‚Üí 6699eae)](https://github.com/rmk135/my-purse-app/blob/6699eae50c46a85048433534ccec928506dba367/src/mpa/containers.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dq6l5mu.)^.
You don't explain why. As you only posted a snippet and not the whole code its not like we can test it. Omit your API info if needed but at least give something to work with. For all I know `results` could be completely empty or you could be getting an exception. I'm no expert but I've at least [fiddled with the API successfully before](https://gist.github.com/Evolution0/6f2a7f36aa27fe3a6ae61b1ec6a37740).
What I am suffer is that it is so difficult to change a sync program to async program in Python. because I have to divide all the codes which could be async to different method and then put them into the same evenloop. But If in Javascript, change asyc codes to async code is so easy. 
Not sure what pipfile and my usage of Makefile have in common. If I get it correctly, pipfile is a replacement for requirements.txt and that's it (more or less). In other hand, Makefile can do anything you want. In my example I use setup.py only (no requirements.txt) but you could change that Makefile to install your dependencies in any way you want. Does it respond to your question?
I would recommend using rows for a lot of tabular data formats https://github.com/turicas/rows
Serious question, I hate having to manage async on a server, if at all. What is the advantage in running an async server-side framework?
I think you mean `True and True` in the third code bit? 
`False == False in [False]` is `True` because `False` is in the list `[False]` `(False == False) in [False]` is `False` because `(False == False)` is `True` which is not inthe list `[False]` `False == (False in [False])` is `False` because `(False in [False])` evaluates to `True` because `False` is in the list `[False]` 
I'm not saying that it is bad :)
If this is based on rope, how does it support python 3?
filename = 'abc.png' if filename.endswith('.png'): # hope that help
you can list then and filter by extension: import os for fileOrDir in os.listdir(path): if fileOrDir.endswith(".png"): print fileOrDir 
All of these would just SyntaxError. Make sure to point that out during the interview.
This seems to work :)
Wha? Never heard of it, def going to google that now!
When I saw the word "cast" in the first question, I thought they have some prior Java programming experience.
I would take first the Django tutorial which teach you to use migrations, django admin (backend admin panel) and high level tools (which you might need or not). Then I would take the flask tutorial which teach you low level tools like creating yourself the DB schema instead letting a django migration create that for you. After that is up to you check which framework suits you better. Flask is oriented to microservices and Django is more oriented to CMS/Admin Panel/complex templating. 
What everyone else said, it's good to note that both have a few things in common. Django is much bigger and you can do quite a bit more with it by default 
Start with Flask. Use Django. You will find that you will use mostly Django for works. Flask for small, personal or heavily customized projects.
Sorry, not sure why it formatted the way that it did, the method head is not in the box with the rest of the code.
Rope actually works pretty well on python 3 at this point. It's missing some support, I'm sure, but we recently added support for e.g. [`async def`](https://github.com/python-rope/rope/commit/9daf563708d8130b92fce656f76ea6033adc72c3).
Good catch, edited.
None of them are syntax error
For me the biggest obstacle are the changes in the C API. I have a few very large C extensions modules that go back to Python 1.4, and publish APIs for use by other C extension modules using CObjects (replaced by Capsules). Adapting all that C code is a lot of work and also dangerous because of insufficient unit tests (not very common 20 years ago).
There're already good answers to your question, I'll just suggest to look into the [dis](https://docs.python.org/3/library/dis.html) module. Looking at bytecode is sometimes helpful to understand how a piece of code works. In this case `dis('0 == False in [False]')` outputs the following: 1 0 LOAD_CONST 0 (0) # push 0 onto the stack 2 LOAD_CONST 1 (False) # push False 4 DUP_TOP # duplicate False, the stack is now [False False 0] 6 ROT_THREE # move the first to the 3rd position: [False 0 False] 8 COMPARE_OP 2 (==) # compare the top two (False and 0), push the result onto the stack: [True False 0 False] 10 JUMP_IF_FALSE_OR_POP 18 # jump to 18 if false or pop, stack: [False 0 False] 12 LOAD_CONST 2 ((False,)) # load (False,), the stack is [(False,) False 0 False] 14 COMPARE_OP 6 (in) # compare with "in", stack: [True (False,) False 0 False] 16 RETURN_VALUE # return the top of the stack: True &gt;&gt; 18 ROT_TWO 20 POP_TOP 22 RETURN_VALUE
Yeah the first two are obvious it's the first one that's interesting, I added the second two to underline the fact that neither of the obvious orderings seemed to matter. Are you saying that `False == False in [False ]` is equivalent to `False in [False]`? Because a lot of people argue that it resolves to `True` because it's equivalent to `(False == False) and (False in [False])`.
the post as screwed up the formatting of the code, it was indented correctly before I hit submit :/
Django if you want to get things done. Flask if you want to learn to reinvent the wheel as a learning exercise - but in that case Bottle may be even better. Personally I think full stack frameworks are the way to do sites. Smaller frameworks are useful when you want to do something simple and light - e.g. you want to add an unauthenticated API, or a single information page to a Python application.
If you are getting a 500 error there should be a stacktrace in the logs.
Please read the sidebar: &gt; Add 4 extra spaces before each line of code Also, this should be in r/learnpython 
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#2: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) \#3: [MIT's Introduction to Computer Science and Programming Using Python starts today.](https://np.reddit.com/r/learnpython/comments/6x3tjg/mits_introduction_to_computer_science_and/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Should work fine.
edited to correct formatting
I enjoy using Django. I have no idea about your experience with Web Development or programming but at first Django can seem a tad daunting but it's pretty great when you know what's going on.
So I have to return results as jsons (and I'm using jsonify) and when I turn the data into a json it works just fine? Not sure why, maybe it has to do with the formatting of the uuid and None not being able to display. Problem solved, somehow.
Thank you, I got it working by jsonifying the response, which worked for some reason.
Man I would love to have my docker compose critiqued in this manner. OP hopefully realises how lucky he is.
You could also take a look at the `glob` standard library
Why does it have to be Flask or Django? I'd rather use a pure REST API or GraphQL framework for the backend and some JS framwork like Elm/React for the frontend, since that's what most startups do these days.
You could try: sys.path.append( os.path.dirname( os.path.dirname( os.path.abspath(__file__) ) ) ) in the script to append the parent A to the python path, then import moduleN Or - IIRC - you could have an __init__.py in each folder of the module too, to avoid appending to the system python environment path, but I can't remember the specific syntax for import {modulePath}
ancient fag buddies!
Create a timer that will trigger the event after time passes. Have a callback tied to the button press event that sets state on the class to cancel if/when button is pressed. https://stackoverflow.com/questions/2400262/how-to-create-a-timer-using-tkinter
Heyy, pssst. Wanna try something different? https://github.com/hackerfleet/hfos It is for modular, complex web applications - not a simple blog or something, though.
Ive found the plugins/extensions scene to be a little lacking for Sanic. Unfortunately you can't simply take Flask plugins and drop them in. I've been slowly forking and porting some popular Flask plugins over to Sanic for my own personal use as well as releasing them on GitHub and pypi for others to use. So far I've done Flask-Cors-&gt;Sanic-Cors, Flask-Compress-&gt;Sanic-Compress, Flask-Restplus-&gt;Sanic-Restplus and werkzeug-dispatch-middleware-&gt;Sanic-Dispatcher. I also recently released my new pet project Sanic-Plugins-Framework that makes it easier for others to write new Sanic plugins and/or port Flask plugins to Sanic.
Hmm, I've just found [FoxDot](http://foxdot.org/) but I'm not sure that was it... 
Is django useful when you want to do a single page application website (for example in angular 5) and all you want from the server is serve static files and a rest api ?
Thanks for the answer. Path management is not the main part of the problem in this case. It's more a question of avoiding code duplication. Let me elaborate a little: For example I could add a 'lib' folder to the 'B' project and put 'A' in there (please note that it's the subfolder of A with the __init__.py): B |-- B | |-- __init__.py | `-- module2.py -- test | |-- __init__.py | `-- ... -- lib `-- A |-- __init__.py |-- module1.py `-- module2.py Now i could make sure that the 'lib' folder ends up on the path and I could just import A.module1 for example. If I don't do anything now git adds this lib folder as well and puts it under version control. Of course I could just exclude it in my .ignore file but then I would have to remember to set up the project when I check it out somewhere else. I don't think people do it that way. It's both a Python problem and a Git problem. I figured it to be more of a Python problem because the solution might be to use virtual environments and explicity install my A project into this virtual envirionment. Makes sense? 
yes, google django rest framework
A lot of similarities actually. I believe one of Sanic's main goals was to be faster than aiohttp.web server. To do that, they simplified how some things work, they wrote a very highly optimised tcp/http connection handling backend, and a highly optimised router. Another difference is that Sanic provides concenience decorators to declare middleware handlers, and route handlers, in much the same way Flask does, in order to make Sanic as familiar as possible for Flask users.
I'd like to add question 11: What is a problem with all the examples above? Answer: It is still using Python 2, which is not supported after 2020 and should probably not be used unless necessary.
Depends on the type of person you are. There are two approaches in training - bottom up, and top down. Flask is for those whole like to learn from fundamentals and build everything from that base (bottom up), Django gives everything already built and you need to learn what the hell just happened from there (top down). Personally I'm bottom-up type of person, and at first I just hated Django. http://shop.oreilly.com/product/0636920032502.do this book saved me :)
Regarding black magic... Can someone explain me this? This is from Python3.6: &gt;&gt;&gt; (0.1 + 0.2 == 0.3) False &gt;&gt;&gt; (0.1 + 0.3 == 0.4) True
It is strange, I agree. And much of the documentation is not good. It is not nearly as mature as an event framework such as node.js. However, it can get the job done if necessary. import asyncio import time async def wait(): current = 0 for i in range(10): current = i await asyncio.sleep(1) print("final: %s" % current) start = time.time() loop = asyncio.get_event_loop() loop.run_until_complete(asyncio.gather( wait(), wait(), wait(), )) loop.close() end = time.time() print("total time: %s" % (end - start)) This example shows running a function 3 times. That function counts waits 10 seconds. If run in a normal program, this would take 30 seconds. And yet, it only takes 10 seconds here. I might be the minority, but for many things in python I honestly still prefer threads. Async programming has many benefits, but until it is more mature and easier to use with different libraries, it's not my first choice in python. 
Sounds like a standard case of floating point error: https://stackoverflow.com/questions/2100490/floating-point-inaccuracy-examples
Was PyQT your choice for a cross-platform UI?
As others have mentioned, if you want a job in web development, learn Django; Flask for smaller projects. I make analytics reports and statistical models for my job. I use Flask when I need browser stuff and it works well (like viewing D3 or DCjs charts). Works perfectly fine in commercial contexts. 
Can I use Django as my gui for my programming projects? Right now I'm using an apache server and just posting my info. But if I create buttons and inputs that would be amazing. 
This is super cool! Thanks!
Flask if you wanna write python Django if you wanna write django :p
Try: &gt;&gt;&gt; (False == False) in [(False == False)] True
Hopefully I didn't come across as too stern or mean. I've seen lots of wrong, bad and outdated advice when it comes to docker simply because there's a huge gulf between "docker 101" articles and something like the deploying an app to a docker swarm article/guide/thing I posted the other day. And then going beyond that (automated deployments on swarm, blue/green, etc), I've not found many very good resources (though kubernetes seems to have some good guides, but I've not dug super deep into that). You might be able to garner some interest in /r/docker similar to how /r/vim has .vimrc/vim.init threads
Here's a sneak peek of /r/docker using the [top posts](https://np.reddit.com/r/docker/top/?sort=top&amp;t=year) of the year! \#1: [Docker 1.13 released](https://np.reddit.com/r/docker/comments/5p0vbl/docker_113_released/) \#2: [Docker Announces Native Kubernetes Support](https://np.reddit.com/r/docker/comments/76yubx/docker_announces_native_kubernetes_support/) \#3: [11 tips how to write excellent Dockerfiles](https://np.reddit.com/r/docker/comments/64a60h/11_tips_how_to_write_excellent_dockerfiles/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Install library A into the virtual environment you use for B. You'll want to write a `setup.py` for it. https://packaging.python.org/
It's called [operator precedence](https://docs.python.org/3/reference/expressions.html#operator-precedence).
I've been using [fabricate](https://github.com/SimonAlfie/fabricate) (not to be confused with *fabric*) for one of my projects. Development has almost stalled because there seems to be a lack of interest in the project from users and it's not clear if development should be continued.
Do not trust floating point equality. This applies to all languages and platforms.
Pipenv also handles downloading your dependencies from various sources, hashing them to check the version is correct, setting up and switching to the right virtualenv and so on.
I don't see any problem. What did you expect to be different? 
Of course. You can do whatever everybody else does on the web with django (and some js).
-Started my YouTube channel with making mini Python projects 5-10 min It's much fun although it's so tiring to record and take it all in on shot without mistakes. it's my first time doing this.i think it will be easier for me later. You can check it from here https://www.youtube.com/channel/UCXhslE1Z31M8QfmzHLY_FHQ -feel free to give me any feedback or ideas it's so welcomed And thank you.
Checking documentation in detail. Interesting. Weird I hadn't heard about it before. :-) Will look into that! Thank you. I missed Lock file to fix dependencies properly. In that case maybe with pipenv there will not be much need for venv target as I showed in my example Makefile, but those tools still do different things. Pipenv is replacement and simplification of venv which Makefile isn't. Makefile is to call any script with it's own logic.
We used PyQt to develop a trayicon/service manager that's totally optional, you can run the individual services without it if you want (which makes debugging and development a lot easier, among other things). But most of the UI code is actually web application developed with Vue.js that is hosted as a local webapp using Flask. We noticed that a bunch of other great open source software took a similar approach (like Syncthing) and it has worked out really well :)
&gt; Are you saying that False == False in [False ] is equivalent to False in [False] Yea- replace the `False == False` with any other operation and it makes more sense. Ex: `2+2 in [4]` is True and `2+2 in [5]` is False
&gt; Are you saying that False == False in [False ] is equivalent to False in [False] Yea- replace the `False == False` with any other operation and it makes more sense. Ex: `2+2 in [4]` is True and `2+2 in [5]` is False
I usually write directly against the wsgi lib, but it's usually for very small, hardly even an API stuff (I'm a devops/infrastructure engineer). All have their uses, best to at least be aware of as much as possible, to avoid treating everything like a nail.
KDNuggets needs to hire a proper web designer.
(False in [False]) is a true statement so False == (True) is false. No black magic here.
Django is good if you need all the bells and whistles (especially an ORM). Flask is great for lighter stuff, a few people at work use it when having to make adhoc tools for others.
And for the frontend side I'd recommend AngularJS since it's pretty simple to understand and they have pretty vast documentation for it.
So it's like web design that uses Python?
So you're confusing things quite a bit here. Remove git entirely from your thought process. It doesn't play a role here. Really virtual environments don't either. From the perspective of B, you need to treat A as if it were a package you don't control, and vice versa. You need to properly put A on your PYYHONPATH so that you can load it in B using a simple import command. That should literally be the only thing you do: Make sure A and B are in different directories, put A on your PYTHONPATH, then import A inside B. That's it.
3.5 added [math.isclose](https://docs.python.org/3/library/math.html#math.isclose) for comparing floating point numbers. 
It did quite a while ago really, for basic stuff R is ok but the language is seriously messy so if you are doing anything serious you shouldn't be using R
No, the Python equivalent is `for i in range(1, 11):`. Ruby has the closest thing to what you've typed, I guess ‚Äî `for i in 1..10 do`
1: /r/learnpython 2: yes. Google "python for range" 3: don't be lazy
Or you can look at the ast. In [1]: import ast In [2]: mod = ast.parse('False == False in [False]') In [3]: ast.dump(mod) Out[3]: 'Module(body=[Expr(value=Compare(left=NameConstant(value=False), ops=[Eq(), In()], comparators=[NameConstant(value=False), List(elts=[NameConstant(value=False)], ctx=Load())]))])' 
I recommend Flask. Django is good, but it's a bit like a vendor lock-in and while it is batteries included, as you evolve the code you will want different batteries. Flask is less opinionated and more like lego blocks. The disadvantage with that approach is that you need to find the right legos within the huge bin of legos. However I think you will find that Flask is more than adequate to solve the problems you run into without getting in your way. 
We send yearly mailings to our clients (in electronic form and on physical paper, depending on clients). We send hundreds of thousands of mails at once, and recently switched to a new file format to transfer data from our backend to those responsible for printing / sending the mails. I'm putting the finishing touches to a simulator that generates huge amounts of such data so that people who receive it can verify their new software is able to handle the load. It is semi-fancy in the sense that it is more sophisticated than merely copying the same unitary data over and over, but it does not try to generate all possible inputs or all possible business cases. It covers a lot of them, though. Basically it randomly picks from many lists (of names, surnames, address components, etc.), has randomized choices for many other rules (X% of households will be this way, others will be that way), and writes the data files in the proper format, organized on disk as specified. `random` and `ElementTree` are put to good use, along with the usual file operations. Fun little side project, and quite useful to validate the spec and be reassured will be fine, way ahead of putting it in production.
I think you are mistaken: `False == False` is `True`, but `True` is *not* in the list `[False]`, whereas `2 + 2` is `4` which *is* in the list `[4]` - these examples are not equivalent. OP already demonstrated that it's not due to the order of operations so there's more going on (as others in the main thread have explained).
Read the sidebar, this is not a help forum. Post in /r/learnpython next time. When you use the multiplication operator to duplicate items of a list, you are creating references to the same objects, not copying anything. In other words, this: foo = [bar] * 3 is equivalent to this: foo = [bar, bar, bar] If `bar` is a reference to a list, then you have three references to the same list object. &gt;&gt;&gt; bar = [1, 2, 3] &gt;&gt;&gt; foo = [bar, bar, bar] &gt;&gt;&gt; foo [[1, 2, 3], [1, 2, 3], [1, 2, 3]] &gt;&gt;&gt; bar.append(4) &gt;&gt;&gt; foo [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]] Your second example creates a new list for each row because the inner list comprehension is evaluated repeatedly. 
Flask is pretty straight forward. 
I meant like `False == 2+2 in [5]` (left out the first part)
Yes I understand this completely and am definitely not at all confused.
Thanks, and sorry for breaking the rule :)
`False == False` is the 2+2 and `[False]` would be the `[5]` which just shows how `False == False` is evaluated first 
Woops you're right, I fucked up my own example lol 
Not quite. You'll likely still be using css, javascript, html et al for the "GUI" part. Django or Flask would handle logic on the server side to process the requests. 
Check out http://www.compjour.org/tutorials/intro-to-python-requests-and-json/
Different frameworks for different things... Flask is a lightweight framework suitable for little apps. It's also great as a middleman server for websocket, search and JSON type tasks. Django is a batteries included framework which is perfect for building websites and more complex applications, as a result it's inherently more complex to learn, but provides more options... Then there are other frameworks out there such as Plone, which are perfect for complex permissive based environments where permission systems are required in their entirety.
I mean, I immediately understood that 0 &lt; x &lt; 5 is _something new‚Ñ¢_, because no other language I used had it. Then what's left that is confusing is to learn this new language feature. Clearly things will be clear after. 
looks pretty straight forward to me... order of operations at its finest
Thanks. In perl I have done. I thought I stumbled upon the same in python but I couldn't find it. for $i in (0..5) 
I'll be keeping my eye on this as it's something I think we can use within my company. We've recently been exploring the automated time tracking for time allocation on individual projects. As it stands now individuals need to report their time spent on each individual project(they jump between several in a day) and their managers compile it all to determine employee time allocated per project. Currently the most straight forward solution is to use KTimeTracker and parse the .ics file it outputs to for each individual user. The sync feature looks like what I would be aiming for. A central in-house server that the clients report the time data to.
Y'all motherfuckers need parentheses. &gt;&gt;&gt; True != (True in [False]) True
YesÔºåI know this code work. but it smells strange.... because you have to define all what you need into functions or methods. I can not run a function asyncly and then run the codes in the main flow...
Reminds me of PHP. *Shudders* 
You're right, that info is missing. I thought that could discourage people from donating, but (as you point out) it's important for people to know how much we're aiming for. We need a minimum of USD $35.000 per year to maintain the same conditions we had during the last year and a half, i.e. 4 developers working part time for the project. As you can see, that's a very small amount for a team of four, considering that a single developer in the USA earns USD ~$80.000 per year in a full time job. This is due to the fact that all of us live in Colombia (South America), where living costs are much cheaper than in USA or Europe. I'll add this info to our wiki page right away.
Except perl6. That will work fine there, as it will be internally represented as a rational number.
(like print call)
In english: Since we're comparing the same one on the left of the == to the different ones on the right, let's look at the right side. First line: False is equal to the False that is contained in the array that contains False.... This is true! Second line: False is equal to False. This is a true statement. So is there a True statement in the array of False? Nope! So to say A True statement is in the False array, is definitely False. Third line: False being present in the array called false, is false. This is not true, because false IS present in the array called False, making this statement False. So if I wrote | True == (False in [False]) That's saying, right side, False is in the array that contains False, so this is True. It would return True. The word false started looking really funny to me somewhere in writing the third line. 
Here are the three examples unwrapped as they are evaluated : False == False in [False] False == False and False in [False] True and True True (False == False) in [False] True in [False] False False == (False in [False]) False == True False
order of operations, the brackets are causing evaluation priority. False == False in [False]. Problem 1: False == False, this is true because well False does equal False. False in [False], this is also true because False is in your list. Finally as False is in your list, and does equal False the entire statement is truthful. Problem 2, bracket eval changing the order of ops. (False == False) evaluates out out first as True True in [False] evaluates out as False Problem 3 bracket eval changing the order of ops. (False in [False]) evaluates out first as True False == True, is false!
you can't go wrong with either but aim to learn both. Good learning resource: https://training.talkpython.fm/ 
Missing knowledge. ^^ But do you think the powershell is as powerful as python from an attackers point of view?
That one has nothing to do with Python at all: "float" is binary floating-point. They [can't represent every value exactly](http://fabiensanglard.net/floating_point_visually_explained/) so some may only get approximated, and *how* they are reached may lead to different approximations for the "same" value. That is the case for the first comparison: &gt;&gt;&gt; 0.1 + 0.2 0.30000000000000004 &gt;&gt;&gt; 0.3 0.3 Both lines actually lie slightly, Python has a "cutoff" where it stops printing stuff for floating point numbers (otherwise they'd all be infinite), if you use explicit formatting to get more precision you get this: &gt;&gt;&gt; "%.20f" % 0.1 '0.10000000000000000555' &gt;&gt;&gt; "%.20f" % 0.2 '0.20000000000000001110' &gt;&gt;&gt; "%.20f" % (0.1 + 0.2) '0.30000000000000004441' &gt;&gt;&gt; "%.20f" % 0.3 '0.29999999999999998890' So "0.1" and "0.2" are actually very slightly "above" themselves, meaning their sum is very slightly above 0.3, while "0.3" is actually very slightly *below* itself. Meanwhile for the second case: &gt;&gt;&gt; "%.20f" % (0.1 + 0.3) '0.40000000000000002220' &gt;&gt;&gt; "%.20f" % 0.4 '0.40000000000000002220' 
Start with Django. Build something with it. Then go about understanding all the major parts of Django‚Äî the templating engine, the ORM, the routing, etc. Once you understand the parts of a web framework you can better understand what flask gives you / doesn‚Äôt give you. OTOH if you start with flask you‚Äôll get something working much faster and have no idea what best practices / security features / abstractions you completely glossed over. I really like flask, but the amount of control it gives you (a lot) is not great from a learning perspective. Also once you know Django, Flask is trivial to understand. 
The "black magic" is that most languages don't have operator chaining, so the first expression would be parsed (and computed) as either the second or third, and yet results in a different value.
You lost me at ‚Äòfalse‚Äô
You da real MVP...
These seem really easy!!! I am not a professional python programmer so I really do not know what is normal, but for what level job position would these be the right questions?
Hold on, shouldn't it be true regardless? &gt;&gt;&gt; (True != True) in [False] Should also be `True`. 
Oh okay, so it's exactly what I want avoid. I just want a guy program like panelbuilder or factory talk that Allen Bradley uses to interface their plcs
Teach me more master
Maybe I'm thinking of single = (variable assignment) but I thought the right side was calculated first?
The point stands though. You shouldn't trust equality comparisons with floating point math (which is a reasonable default for literal non integer numbers). You can use equality with `fractions.Fraction` and often with `decimal.Decimal` (when used for fixed point arithmetic).
Yes, the top comment explains it. Basically, with chained operators, Python treats the expression: &gt;&gt;&gt; True != True in [False] as: &gt;&gt;&gt; (True != True) and (True in [False]) which evaluates to &gt;&gt;&gt; False and False
- This is really hard. Did you ever wonder why even the most brilliant ML researchers aren't all billionaires? - Stop spamming 
Well, a Worldwide survey based only on 954 answers is quite insufficient, imo
Ok, yeah that shows the massive importance of blocking up with parenthesis. Chaining operators is a great way to avoid long if/elif chains so it's good to know. 
Awesome this explains why the more common use case of inequality ranges `10 &lt; x &lt; 20` works :)
False in [False] obviously evaluates to True. Because False is in False. False == False evaluates to True. True in [False] evaluates to False, because there's no True in False. False in [False], as we already know evaluates to True, so "False == (True) will be False. 
While it is correct to say the OSIsoft PI uses Microsoft SQL Server, it is not really intended to be exposed as a data source. Importantly, SQL Server is not used to store the time-series data that PI is used to collect and distribute - this is done in a proprietary database. However, there are many methods of getting at the data - including the PI System being made available as an OLEDB data source (for SQL queries), through a RESTful WebAPI and programmatically through the AFSDK. Check out the following thread for Python and PI: https://pisquare.osisoft.com/community/developers-club/blog/2015/06/04/using-pi-web-api-with-python Finally, making use of the PI Analysis it is often possible to replicate calculations performed in Excel so that they can be calculated/scheduled server-side.
There is absolutely nothing predictable in cryptocurrency, especially based on historical data. But yeah, you are probably a troll. 
Use run_in_executor
In life you realize when you reach out to people they‚Äôre going to be some that disregard it all together and they‚Äôre going to be some that listen. I hope to stay in contact and communicate with the latter buddy. 
** for everyone that needs to run flask as a service, when you're done making your app ** You may find this useful when deploying your app, in flask, bottle or whatever: https://github.com/RevoluPowered/BottleHoser/tree/master/service This let's you run your scripts as a non root user on a linux system, so if you're using your REST API on a server, you can probably use this. You can make a Linux user, with your app name and git clone your app into that user's folder. Tested on: Fedora Server, Ubuntu Server and Debian. To start your service you can just run sudo service yourappname start I recommend renaming the file, and using it as a template, what you will need to do to make it work is copy the files from my project, not all; just the actual service folder. 1. Rename the file from matchmaking.service to yourappname.service then open it in a text editor. 2. Change group and user to a non root user on your system if you don't have one use adduser username 3. Don't give that user sudo access, ever. 4. change ` WorkingDirectory=/home/matchmaking/BottleHoser/ ExecStart=/usr/local/bin/pipenv run ./matchmakingserver.py ` to your app name like so: WorkingDirectory=/home/myappaccount/myproject/ ExecStart=/usr/local/bin/pipenv run ./myprojectapp.py ` **note** If you use pipenv, this will work fine. If not, just update the ExecStart to the path of python instead of "t/usr/local/bin/pipenv run" **security note:** It's your job to make sure your app has the correct permissions on the folder. Make sure you don't end up making the mistake a client of mine made, running flask/bottle as root this makes your entire system vulnerable to easy script kiddie attacks. Even using docker doesn't prevent someone nuking your system, so you've been warned. ** extra ** the above guide uses a few libraries I don't use personally, but is still a good read. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [RevoluPowered/BottleHoser/.../**service** (master ‚Üí c983bf0)](https://github.com/RevoluPowered/BottleHoser/tree/c983bf096acb0e04e55590e01f1ace5a87de62ac/service) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
https://docs.python.org/3/reference/expressions.html#operator-precedence
What‚Äôs the downside? Either way you build a network and work toward a project your interested in. Anything if life that‚Äôs worth it is going to be really hard. Why not reach out to multiple subreddits and ask for people who are interested in trying? 
This is the correct answer. Someone Downvoted it. Doing my part in bringing back up
/r/learnpython
Most of my colleagues use R. They are scientists and not programmers so don't think the language is too messy. They have the libraries they need and can make nice output so that is what keeps them in R. I do the "heavy" lifting for all the data they use in python though as I think R is atrocious to code in. 
&gt; False == False in [False] &gt; Becomes: &gt; (False == False) and (False in [False]) This part seems odd. You are effectively using the same False twice. Why is it not as follows? False == (False in [False])
Yep.
&gt; False == False in [False] False in [False] is asking for False--the same "False" in [False]. The statement equates to: False == False. Which returns True &gt; (False == False ) in [False] This statement equates to: (True) in [False] Since False == False is True. Therefore True in [False] returns False. &gt; False == (False in [False]) This equates to False = (True). Because False in [False] is True. So since False == True is false, it returns False. Think of it in terms of simplification. 
It's not new, python has had this for decades
ctrl+p plus ag FTW
&gt; This applies to all languages Well, except for that point.
I'm new to python right now, so ;)
someone coming from R or some other scientific background. 
ironically I feel the same way about using an "IDE" over vim on linux.
Not all python, but lots more operator/type weirdness [here](https://www.destroyallsoftware.com/talks/wat) :)
I wish I could upvote this a million times. When an IDE has a "vim mode" and ":tabnew" doesn't open a new tab and ":tabn" and ":tabp" don't move to the next/prev tabs, and ":split" doesn't open your split then YOU DON'T HAVE A VIM MODE YOU BARELY EVEN HAVE A VI MODE YOU IGNORANT WHELPS! &lt;/rant&gt;
Binary comparison operators compare just two things at a time. So the syntax `x op1 y op2 z` where op1 and op2 are binary comparison operators (like `in`, `==`, `is`, `&lt;`, etc.) is a short hand for `(x op1 y) and (y op2 z)`. This intuitive makes sense in cases like `0 &lt; x &lt; 5` to mean satisfying both `0 &lt; x` and `x &lt; 5`. An interpretation like `0 &lt; (x &lt; 5)` or `(0 &lt; x) &lt; 5` wouldn't work right, because after the first comparison you would get something like `0 &lt; True` or `False &lt; 5` (which won't raise type errors in python but give incorrect results). 
Except this is well defined behavior and has to do with how Python does operator chaining. False == False in [False] becomes (False == False) and (False in [False]) because python pushes the second False onto the stack twice
Because then something like: if 10 &lt; x &lt; 20: print("X is between 10 and 20") wouldn't work. It would evaluate like 10 &lt; (x &lt; 20) which would, if x is 15, end up as 10 &lt; True which is not what you'd expect. 
Try /r/learnpython. Show them the code you have and describe where you are stuck. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Exactly, package both and declare A as a dependency of B. I wonder, what if this is a private project and you cannot publish A or B on pypi, what's the best option, a private pip repo like pip2pi?
&gt; I think I see it now. The bottom 2 make sense, but the top doesnt? All three make sense in Python, but yes while the bottom 2 make sense in most languages (and certainly the most popular ones), the top one makes no sense in most of them.
Do you only edit files on Linux? I use Arch all day every day so I do more than just edit files =D
*Floating point* equality. [Floating points in perl6 (`Num` class)](https://docs.perl6.org/type/Num) still have all the problems associated with equality. Floating point doesn't mean numbers with a decimal on a computer. It means inexactly representing real numbers by storing a few binary bits for the significand and a few digits for the exponent to represent a number like `1.significand x 2^(exponent)`. (Commonly in modern computers, it means adhering to the IEEE754 floating point standard.) With floating point numbers in all languages you should be aware of problems with using equality operators.
In this sense, yes, python is the only language that has this afaik.
Yeah, its interesting to see how high level languages that are written for "intuitive" syntax's like the inequality range you gave give rise to counter-intuitive bugs/features like OP
It's fun to know that this form optimizes for reducing evaluations, so if you're desperately stuck in optimizing a comparison in a tight loop this will minimize variable lookups at the expense of being ridiculously unreadable.
Yep, and the fun fact is that it is about data science...
Applying that sample size to the population of The Netherlands (+-16M) would mean interviewing two people lol. Yes I'm aware not every member of mankind is a data scientist, just thought it was a funny stat. On topic: disregarding sample size, I can see why this is/could be a trend. R just feels messy and disorganized to me, Python is more cohesive and much better equipped for general purpose tasks. I don't like R's syntax either.
Is there some rationale for why `in` is considered the same kind of operator as `&lt;`? 3 + x + 2 is not the same as `(3 + x) and (x + 2)`, so it's not like there's a rule that all operators must have this behavior.
I know how to do it for a single line of text. If i were to name my variable email and then do email[email.index("@"):email.index(";")] i'd get my desired result but this cannot be done for many lines of text. 
Because it is a "logical" operator. That is, it is an operator whose evaluation returns a truth value. So &lt;, &gt;, and in are all logical operators.
Doing some prep work for ETL-scripts on AWS Lambda, our environment isn't live yet and I'm pretty much done with prepping so I'm just dicking around with some EDA until I can start deploying and testing stuff. Never worked with AWS before so that should be interesting.
You can install stuff with pip directly from the filesystem. Or from a git repo. 
For the same reason that: x &lt; y &lt; z Is not the same as: x &lt; (y &lt; z) And is effectively using **y** twice (which, btw, is perfectly fine): (x &lt; y) and (y &lt; z) To reflect the fact that **y** must be both greater than **x** and also less than **z** to make the expression True. While what you've written would be a different question: x &lt; (y &lt; z) Because the parentheses change the priority of the right comparison to be greater than the left, resulting in the right being evaluated first. If we replace the variables with concrete values we can see how: 2 &lt; 4 &lt; 6 Is the same as: (2 &lt; 4) and (4 &lt; 6) And that the parentheses have not changed the order of operations. And that both are True, while: 2 &lt; (4 &lt; 6) Is always False. See the computer just sees you asking the question you're asking precisely. When the parens aren't there, it assumes you're trying to do exactly what you've expressed, which in the case of: False == False in [False] Says "is False equivalent to False and is False in [False]?" though this is, as I said, not that easy to see because **in** being an operator doesn't make sense to the brain. 
That was funny and I actually learned from it! Thank you for this
But what about CheeryPy?
On mobile at the moment. It is pretty easy to verify. Zoom into a very specific coast line like the San Francisco bay. It simply does not exist. I will open an issue later today.
I know, just wondering what line they follow for big deploys. private pips, git sub-repos, lots of ansible?
Good for designing REST interfaces, I dunno about websites. For REST, I would suggest looking into [Falcon](https://falconframework.org/) which is super lightweight and runs on PyPy (i.e. very fast).
I enjoyed that way too much, thank you for the laugh! 
&gt; "Python is dangerous to have on a pc. It is a useful attack vector." Your IT department is (a) Paranoid and (b) In Over Their Heads. Where do you work (what industry, not what company)? 
The biggest benefit of Haskell (to me) is that it makes me think about structuring code in a very different way. It broadens your understanding of what code can do and ways to solve problems. That translates back to making Python more useable.
The real MVPs always a few comments down!
Going up within python 3.x should be no issue. The only exception I can think of is when the `async` and `await` names become [proper keywords](https://www.python.org/dev/peps/pep-0492/#deprecation-plans) in python 3.7. But renaming a few variable/function names, if you have some named that way, should hardly be called a problem.
What do you have so far? your image doesn't show anything useful about the lines you have in there. My solution is to iterate through each line and use the split('@') and take only what's before the @.
 Many Python programmers are faced with this challenge, Which Python web framework should I learn first? Should I start with Django or Flask? Python has many web frame works such as: *Django *Flask *Pyramid *Web2py *TurboGears *CherryPy *Bottle *Tornado And much more‚Ä¶ The most popular are Django and Flask. Django is an open source high-level Python web framework that makes web development fast. What I mean by open source is that you can contribute to the development of Django. Django has been used to build web apps like: *Disqus *Instagram *Mozilla *National Geographic *Open Knowledge Foundation *Open Stack *Knight Foundation *MacArthur Foundation *Pinterest Django can also work with the following database: *MySQL *Oracle *SQLite *PostgreSQL There is not much to say about Flask. It is a micro web framework. If you are a beginner, I recommend you start with Flask. Flask is a lightweight web framework and it is simpler than Django. By having the basics of Python you can start writing your web applications. Flask is good for developing light weight apps. Django is incredible as it handles content administration, user authentication, RSS feeds, sitemaps and etc. If you are a full stack developer, you will love Django. Django gives you more job opportunities as a developer as big tech companies, government and business organizations now use Django to handle huge traffic on their website or web app. Django also has a huge community contributing to it. Conclusion: It is good to start with Flask first as a beginner and learn the basics before learning Django. Django is preferred for top developers as it comes with inbuilt ORM and templating engine. ‚ÄúORM stands for Object Relation Mapping which provides a very high-level abstraction upon a database that helps developers concentrate of writing code instead of database queries to create, read, update and delete data and schemas in their database. It‚Äôs just like a Google Translate box to understand/interact with all languages of the world with the need of learning them. Templating Engine:- Quoting from Django documentation, Being a web framework, Django needs a convenient way to generate HTML dynamically. The most common approach relies on templates. A template contains the static parts of the desired HTML output as well as some special syntax describing how dynamic content will be inserted. For a hands-on example of creating HTML pages with templates. Now, in simple terms to understand ‚Äútemplating engine‚Äù, suppose you have to build 1000 houses of the same architecture, the templating engine helps you define the static parts of it(like the master bedroom, living room, bathroom, balcony).‚Äù You can build them for once and use them for others with the facility that one may have a recliner in the living room and others may just have a couple of bean bags.‚Äù Here are some Python books on both Django and Flask: *Learning Django Web Development. *Pro Django. *Web Development with Django Cookbook. *Lightweight Django. *Flask Blueprints. *Flask Framework Cookbook. I hope this was helpful.
I just went back revisiting some 10 yrs old R code of mine, nowadays using Python or Haskell for fun (and unfortunately VBA for work, so I am hardened), but god! Was out an awful experience. I really dislike R. I'm currently looking at /r/nim, which is a pythonesque compiled language with static typing but strong type inference. I like how it combines benefits of Py &amp; Hs, but some design / syntax choices als that it evolved somehow ad-hoc. 
Here's a sneak peek of /r/nim using the [top posts](https://np.reddit.com/r/nim/top/?sort=top&amp;t=year) of the year! \#1: [The new Nim website is now live!](https://nim-lang.org) | [9 comments](https://np.reddit.com/r/nim/comments/6682sx/the_new_nim_website_is_now_live/) \#2: [Version 0.17.0 released](https://nim-lang.org/blog/2017/05/17/version-0170-released.html) | [3 comments](https://np.reddit.com/r/nim/comments/6bsmdo/version_0170_released/) \#3: [Interesting new cross-platform GUI toolkit written in Nim](https://github.com/trustable-code/NiGui) | [14 comments](https://np.reddit.com/r/nim/comments/6ku81h/interesting_new_crossplatform_gui_toolkit_written/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
I need more info... 1. Are you going to [SERVER_IP:9999](SERVER_IP:9999)? 1. Have you tested pinging [127.0.0.1:9000](127.0.0.1:9000) in a new terminal window 1. Are you using some process manager to run the server? 1. Are you using gunicron to run the Flask server?
Thanks for explaining. I did not know about operator chaining. :-)
You can run it in a different thread. 
Kaggle's [survey](https://www.kaggle.com/surveys/2017) is showing similar results.
Completely agree, I don't like the R syntax either. But I have some doubts if the academic community will accept python for the matter of scientific experiments. This is sole reason I'm using it on my Master's thesis
I have few years of expeirience in both, and I would choose Django.
I am also new to Python which is why I was so confused lol
Not using yellow is, like, the first rule of design.
cleaning up docs for http://docs.donkeycar.com to prepare for the AWS reinvent conference. Donkey car is MIT licenced self driving library written in python
For #1 - `A.show(obj)`. Changing the class is almost never a good idea.
To an attacker, I don't think it matters: an attack vector is and attack vector. Potentiall, PowerShell might make things even easier since it's designed to easily talk to Windows API's, and has access to DotNet liibs as well. The PowerShell community is largely Windows admins who use it to manage their fleet. Additionally, there are pen-testers who use PowerShell extensively for pen-testing Windows machines. Regardless of whether it's Powershell or Python... The OS should not allow the language to do anything I don't already have access to do (unless there's some exploit that elevates my privileges). There's little reason for OP's IT departments to say no to Python, when PowerShell is already available on all their Win machines. On that note, however, I would suggest to OP that he looks into PowerShell, at least as a learning experience. I learned it for the same reason (I needed to write scripts and didn't have access to anything else) and it still comes in handy from time to time when I want to write something that other staff can run without installing anything. It's a shell, so it's a little clunky at times to use it to write full on apps, but it's possibly, and writing GUI's with WinForms not terribly painful.
Have you tried [`devdocs.io`](https://devdocs.io/)? Most of the time I just have Python 2.7, 3.5, 3.6 enabled and then just search all of them at once. 
Everything here is a logical process, meaning that in its evaluation, it returns either TRUE or FALSE. The compiler treats this sequentially, like you would do following the order of operations in algebra. Parentheses, exponents, multiply/divide, add/subtract from left to right. So an expression: 1 &lt; 2 &lt; 3 Becomes: True (2&lt;3) Becomes: True(True) = True 
it's adding to triple all substrings of length 3 from the input. See list.extend(). The line[i:I+3] part actually grabs sequences of three characters, and the "in range ..." part steps through all the input without getting an out of bounds error.
Very cool. Thank you.
They're just lines of text. I would have done that if it wasn't for the fact that each of my files has like 10,000 lines of text. That's why i need a fast way to just extract the domains of each line and i figured that python would be able to do it since everybody always talks about how great it is for text and data manipulation
You can definitely do it on Linux with KDE Connect.
I don't think csv files even contain formatting information, right? 
You can't ping an (IP, tcp port pair). Ping is IP layer only. The OP should probably also tell us what OS, and if the virtualenv is containerized or not, and how much they know about networking.
My bad. Went to fast typing that response.`telnet 127.0.0.1 9000`
My method is still the best. But I still don't understand what the ":" refers to, can you show me a sample line of your file. And 5000 lines is negligible, it'll rip through that in a second.
It's probably decently predictable for the large groups that seem to coordinate pump and dump activities to drive up, and reduce, prices to their benefit. But that's a pedantic clarification, it's less "predictability" and more "manipulation."
Here is a sample: rlawnen12333@nate.com:tmddwerfnjs1
Very difficult to hear what you're saying, and your code is very messy and bunched up. (See PEP-8 for example.) That being said, I think it's probably a good idea.
So it extends the list buy using the LINES list and checking it. Whats the end part, why does it -2?
Replace time.sleep() with the other things you want to do.
I didn‚Äôt think it‚Äôd work. I‚Äôll try it. Thanks 
import re regex = r"(?&lt;=\@)(.*?)(?=\:)" with open('text.txt') as data_file: for line in data_file: matches = re.findall(regex, line) print (matches[0])
Thanks alot for your advice. first time to hear about PEP-8 , and about hearing what i was saying the first one is messy due to low mic but i fixed this in PowerPoint to pdf converter video.
KDnuggets is the premier website for people working in data science and is run by an accomplished individual with a PhD in mathematics. I'm sure he understands sampling better than any of us.
I prefer to think of the KDNuggets look as "iconic". 
Thanks with &lt; it makes sense, but with ==, it does not, to me. In any event, I learned, thank you kindly!!
`0.1` (1/10) is not representable exactly in a _binary_ floating-point format. (Similar to how 1/3 is not exactly representable in _decimal_, and you might have to resort to something like 0.33333333 instead.) So Python uses the nearest representable IEEE 754 double-precision number `(0x1+0x999999999999a/0x10000000000000) * 2**-4`instead: &gt;&gt;&gt; (0.1).hex() '0x1.999999999999ap-4' Same for 0.2, 0.3 and 0.4: &gt;&gt;&gt; (0.2).hex() '0x1.999999999999ap-3' &gt;&gt;&gt; (0.3).hex() '0x1.3333333333333p-2' &gt;&gt;&gt; (0.4).hex() '0x1.999999999999ap-2' So `0.1 + 0.2` really means `0x1.999999999999ap-4 + 0x1.999999999999ap-3` which results in: &gt;&gt;&gt; (0.1 + 0.2).hex() '0x1.3333333333334p-2' That last digit `4` differs from the digit `3` we saw above for `(0.3).hex()`. (Similar to how `1/9 + 1/9 ~= 0.333 + 0.333 = 0.666 != 0.667 ~= 2/3` in decimal.) Similarly `0.1 + 0.3` really means `0x1.999999999999ap-4 + 0x1.3333333333333p-2` which results in: &gt;&gt;&gt; (0.1 + 0.3).hex() '0x1.999999999999ap-2' And this happens to match exactly what we saw above for `(0.4).hex()`. (Similar to how `1/9 + 2/9 ~= 0.111 + 0.222 = 0.333 == 0.333 ~= 3/9` in decimal.)
Only until I got to your comment that it made sense :) thank you 
Thanks! 
Put it in a different thread. One way you could do it is by using asyncio and having the music run in a separate process.
Gammu has Python bindings. 
Thank you very much. Would you happen to know what to add to the code to make it delete duplicates so only 1 of each mail server is the final result? 
I actually watched the PowerPoint to PDF converter video, which is where I got the low sound quality from. I had full volume on Youtube, full volume on the computer, and headphones, and I could hear you well for some words, and then almost not at all for others. If your mic isn't on your body (clip-on or part of headphones), is it a good quality one?
We need more people like you on stackoverflow.com
Cheers fella üëç
Thanks mate üëç
 It's a part of headphones , but I'm made sure It's recording high enough and tested the video on many devices, but i will improve it next time and make it louder with better English spelling. But thanks alot it really helps and I'm still in the beginning.
&gt; spelling I think your spelling was good. It's just that enunciation was a problem.
say you have a list ls = [a,b,c,d] If i is 0, then the triple will take ls[0:3] which is equal to abc. Now increment i to 1. The triple is ls[1:4] which is equal to bcd. If we increment i again to 2, the next triplet will not exist, since there is no element at index 4. Remember that list slices include the first number, but not the last. That is why we choose the length of the list minus 2. Try it out on paper and prove it to yourself for a few different strings. Pick a string of length 0, 1, 2, and 5 to see why it must be len(line)-2
Cool!
Thanks alot.l.
Holy Jesus, I hope they're not trying to advertise their expertise in data visualization.
Yep. I love R but it could really benefit from Python's "One correct way to do everything" philosophy. For example, R currently has three different table structures: data.frame in Base R, tibble in Hadley Wickham's tidyverse, and data.table in the data.table package. They all have different strengths and weaknesses and not all code is guaranteed to work with tibble and data.table. That's not even getting into the lack of standard naming conventions, liberally entire packages into a workspace, and the lack of a unified syntax for modeling to the point where there are packages that just wrap other packages to fix it.
My pleasure. "==" is in the same class as &lt;, called "logical operators". Anything that returns a truth value is in the same class. So ==, &lt;, &gt;, in, etc. are all logical operators and are evaluated equivalently. 
 import re from collections import OrderedDict regex = r"(?&lt;=\@)(.*?)(?=\:)" array = [] with open('text.txt') as data_file: for line in data_file: matches = re.findall(regex, line) array.append(matches[0]) newarray = list(OrderedDict.fromkeys(array)) print newarray
That works‚Ä¶ but please stop using `telnet`‚Ä¶ since '96. Use netcat or something that doesn't do escape sequence interpretation. `telnet` ‚â† plain TCP
asyncio would not be particularly well suited here because you would have to use [run_in_executor](https://docs.python.org/3/library/asyncio-dev.html#concurrency-and-multithreading) to delete this to a thread pool anyways. So it's simpler to juste use `concurrent.futures.ThreadPoolExecutor.
Yes, that's how the pygame API works. "All sound playback is mixed in background threads. When you begin to play a Sound object, it will return immediately while the sound continues to play." https://www.pygame.org/docs/ref/mixer.html
The name also sounds like something you'd order in a fast food restaurant.
As someone who actually works in the field of statistics within academy, I'm not quite sure what you mean by that. Python is widely used in our cognitive neuroscience department, although a lot of the statistical analyses are still done in R (or, $&amp;$#, SPSS). However, that's basically because data analysis is a tool to most scientists, so they use what they know that does the job instead of putting a lot of time and effort into learning something new that does that same job. I highly doubt that they would doubt results just because Python was used to do the same analysis you would normally do in R.
True, not familiar with PyGame but if it already handles it definitely go with that.
Looks interesting, might check it out tomorrow - if I remember to do so... I feel your pain on the VBA-thingy, I spent many agonizing hours getting a huge VBA-codebase to work properly. It's a spreadsheet where we track our working stock (dossiers that are ready for processing, we're a mortgage underwriting company. Struggled to translate the term, if there's a better translation I'd be grateful). Anyway anyhow, my colleague used to manually transform outdated exports from two systems, multiple times a day. Figured I'd save her quite a bit of time by automating the process as much as I could. Now it works, mind you, but it's a house of cards. One small change or user error and I'm back to fixing the damn thing. Luckily most of my days are spent in Python and DAX (MS language for data analysis, used in Power BI) nowadays. 
I hope R doesn't die. As much as I love Python, R is still great for quick and dirty data analysis. And for all its quirks, it can be a fun language, once you get the hang of it.
Hmm. min and max function codegolf, huh? How about using reduce: &gt;&gt;&gt; data = [2,6,1,8,7] &gt;&gt;&gt; reduce(lambda x,y: x if x&gt;y else y, data) 8 &gt;&gt;&gt; reduce(lambda x,y: x if x&lt;y else y, data) 1 If you are using python3 you'll have to import reduce: &gt;&gt;&gt; from functools import reduce 
I can't read the article as my eyes are bleeding.
R isn't even a fully featured language. It doesn't have a coherent notion of data type. So you can't ever be sure if what's happening is anything that makes any sense. That's like a car that doesn't have a coherent notion of "wheels" or "engine". I don't care how zealous its advocates are, the fucking thing just sits there, it doesn't go vroom vroom, it's trash. Haul it to the landfill because I don't want to even see it.
I'm on there as well, but frankly it's not as much fun and I can never quite understand why questions get closed all the time as duplicates when they're only tangentially related.
The Pipefile is used for dependency management (like PHP's [Composer](https://github.com/composer/composer) or Golang's [Glide](https://github.com/Masterminds/glide)), Make is a task runner (like Nodes' [Gulp](https://github.com/gulpjs/gulp) or [Grunt](https://github.com/gruntjs/grunt)). This is a great blog post for showing you how Makefiles can be used with Python, but it misses out on showing what make was originally designed for -- building executables from source.
Why do you need to lose StringIO exactly?
Nonsense, The "R Shiny" module is extremely competitive to Python's Flask and Chef's "Manage webserver". 
Let's examine the statement - `False == False in [False]` Let's write this as `A == B in [C]`. Python evaluates this as - `A == B` and `B in [C]`. Now, set `A`, `B` and `C` to `False`. Then - `False == False in [False]` is evaluated by Python as - `False == False` and `False in [False]` which is - `True` and `True` which Python finally evaluates as `True`
[removed]
So far, in that entire paragraph, your only actual 'point' is stating that R lacks coherent data types. The rest is hyperbole.
If you sort a list of numbers, what do the first and last numbers in this list represent? Good luck with your homework but I'm not writing any code for you. 
Yeah R drives me up the wall as well. Plus its terribly slow, the packaging situation is bizarre (everything into global!), it's not terribly portable, it chokes on not much data, getting different packages to interoperate could be nightmarish-bordering on impossible, documentation for seemingly every package was super hit and miss. I've been (slowly) teaching myself Haskell: such an awesome language, but it is slow going and definitely a steep learning curve. I've also used Nim for some things at work, I really like it! It compiles fast, it practically feels like "compiled python" in terms of syntax and behaviour, the things it does differently were super easy to adapt to.
I'm an idiot. The binding bit tells the whole story. I just didn't notice what it was telling me. `[parameters: {'date_1': (datetime.datetime(2005, 1, 6, 0, 0),)}]` I'm iterating through results from a query (unique `date` values), expecting the row itself to be the value I want. Nope. I need to index into the row to get the value. 
Sorting adds unnecessary complexity to this simple problem. 
But PCMR...
they can get away with it because glory
What kind of complexity? Sorting can be done in linear time complexity. Isn't the best case solution for this problem going to be linear time complexity as well? 
I've been thinking about making the switch. I've only ever really used R, and I'm concerned about some of the abilities of Python. May be the wrong place but, how does Python handle propensity scores, fast and frugal trees, SVM, lasso/ ridge regressions? Are there packages for all that? 
https://wiki.python.org/moin/TimeComplexity Operation | Average Case | Amortized Worst Case ---|---|---- Sort | O(n log n) | O(n log n) But this problem can be solved in a single pass of the unsorted numbers list, wouldn't that be O(n)? 
Keep in mind that 10 year old R is nothing like idiomatic R today. If you like Haskell's first class functions and immutable data, you can actually create data analysis workflows in R that have the same benefits.
I use R and Python for academic research in neuroscience, I think they compliment each other well. I actually moved to R from Python for analyzing participant data because some of the modelling methods we would like to use haven't found their way into Python yet. In addition, the developers of the packages also tend to be the statisticians who came up with those modeling methods. So there is usually a nice article or text book to detail how the model works. If data is in a tidy format when imported into R, it's actually a breeze to do a complex analysis interactively and generate research reports. We needed to enforce data formatting guidelines to make sure that the data is tidy before entering R. It's a disaster to correct from within R. For everything else in the lab, Python (and sometimes C) is the tool of choice. 
KDnuggets is a blog aggregation farm. That doesn't necessarily make it bad but let's not give it more credit than it deserves.
I was mistaken. Best case is linear time complexity for algorithms like bubble or insertion sort but worst case is n log n.
I cant tell if you are setious
Lkkm look
I‚Äôm pretty new to python. I learned how to program in high school but focused on finance since. Got my degree in economics and have worked on financial aid at colleges for 15 years or so. I‚Äôve specialized in providing access to low income students. I started learning python about 6 mo‚Äôs ago and am currently writing a program to predict financial aid expenditures and demographic distributions for our admissions office. 
No problem.
By no means does python have a "one correct way of doing things". There are wrong answers, but python is so fleixble as a language that there are typically many acceptable ways do do things. The python mantra is that there should be at least one _obvious_ way to approach a problem. To be fair, I think the reason you see more of this in python than in R for data analysis is just that there isnt as much history and fewer projects have attempted to solve the same data problems.
R also has no consistency because there isn‚Äôt one definitive R organization in the same way that Guido Van Rossum controls Python. R has many style guides. I want to write code a specific way, do I use Google‚Äôs style guide? Hadley Wickham style with underscore_separated_everything? I might even use camelCase. Meanwhile in Python, all I do is check PEP-8 and do what it says.
You can just use a set as well
Your inability to detect if I'm serious right now is why the authors of this article can basically smear shit on a html page and get upvotes, and then get money from ad-clicks. Have you tried cobol on cogs? You should stop whatever you're doing and spend more of your time on that.
Actually a survey's accuracy depends mostly on the sample size, not population size. A lot of confidence interval calculators simply assume your population is infinite because it is an acceptable approximation. It doesn't matter if your survey is worldwide or from your city. Of course assuming your sample is random, i.i.d. and representative of the population etc. I'm quite surprised to see this kind of comment being upvoted here.
I agree. I've been using Python for over 11 years and I don't think I have ever used `new`. Of course, I haven't had much use for `super` in all that time either, although I can see how it might be useful at times.
Since `print` is a function in Python 3, these examples would all throw a `SyntaxError` in the current version of Python
Oh god my eyes
The easiest solution involves two accumulators. Set them to the value of the first number in the list. Iterate the list to update those numbers as appropriate. Return both numbers as a tuple. Write specialist replacements for min and max appropriately. O(n) time complexity at a memory cost of two accumulators. This code is easy in assembler, never mind Python.
It's got that look of a usability expert's website.
well sure, I could find a website that would compare RShiny favorably to flask, and I honestly don't know what Chef's manage webserver is. That doesn't mean it makes sense.
Chef's manage webserver is the best webserver there is, especially when it's undergirded by MongoDB. http://www.mongodb-is-web-scale.com/
PEP-8 isn't that prescriptive beyond a few commenting and naming conventions. Hence different flake8 configurations, docstring standards and python style guides (like Google's). If you want a truly opinionated language when it comes to style, golang comes to mind.
I'm a beginner in python3 and I just created a small program that gives random bible verses when you type in a specific word. Right now I'm working on creating an error so the program won't work when someone types in a integer instead of a string. I'm actually having fun making something on my own without following tutorials. 
I'm just saying some people gets very skeptical about new stuff but I agree with your point about people getting stuck with technology they already know
source explanation is [here](https://docs.python.org/3/reference/expressions.html#comparisons). straight from the docs.
Take a look at sklearn
Would you or anyone ever write that though? It just doesn't make sense, even without the chaining I mean.
 a == x &lt; 3 Seems somewhat reasonable. Though I would probably never write it.
That's an extremely unlikely guess. Let's just say most popular languages don't have it.
I think you are missing some... operators?
That's why I said afaik.
Well, you are doing it wrong :-) If you just want to simply count unique values, convert list to set (will remove duplicates) and take length of it: total = len(set(myArray)) That should do.
Except that False is not 1 in any sense. E.g. False == 1 # evaluates to False
I'm sort of cresting into intermediate level python coding and I was happy that this made sense to me!
[Here's an explanation of this one, and all the other "wats" from the usual list that goes around](http://www.b-list.org/weblog/2015/oct/13/wats-doc/).
oh no you did not. I love you and hate you for doing it so easy D: Thank you very much you talented person
hence the (misspelled) everywhere...
Saludos hermano latinoamericano. Estoy empezando a usar python y al tratar de instalarlo en una pc con Windows prob√© Anaconda y as√≠ conoc√≠ Spyder. vienen haciendo un excelente trabajo. Espero que puedan continuarlo. Un abrazo desde buenos Aires.
python is mighty :-)
Was really simplifying here
That was great!!!! ! 
I use Arch, or Windows Subsystem for Linux. Or Raspbian. Or CentOS. I'm still better and faster using 20 specialty tools that are Integrated into my Development Environment than I am using any IDE that tries to bring my OS into it.
Meh I don't know that's enough. I found this poking around: http://laurence-wong.com/software/ But nothing yet on lasso/ridge or ffts. 
How many times a year does this happen?
&gt;I am using any IDE that tries to bring my OS into it. Yeah, what ide is that? It's not pycharm. &gt;Code completion is mostly handy when the API is garbage. Or if you know, are a human, with average human memory, and average programmer typing proficiency. 
I'm pretty sure sklearn has all of that
Scikit-learn has [lasso/ridge regression](http://scikit-learn.org/stable/modules/linear_model.html#ridge-regression), and [numpy](https://docs.scipy.org/doc/numpy-1.13.0/reference/routines.fft.html) and [scipy](https://docs.scipy.org/doc/numpy-1.13.0/reference/routines.fft.html) have tons of Fourier transform methods.
&gt; unfortunately VBA for work Excel ? you're getting paid so what's the problem ? AFAIK VBA is the best for the purposes it's good for. So I don't understand why people complain as if there's alternative and they are forced to work with it. 
Do you recommend using this with robot framework and selenium library (se2library). ?
Amazing details. Side question towards others (since you obviously invested so much time in this post and it's a pretty noobish question). How *do* open source languages agree to the accepted commits or suggestions? Is there a comity of elite coders that review it or it's a popularity based approval?
I can confirm this. I have used Lasso with Sklearn. It's also in the " Learn Machine Learning with Python" textbook.
I'm quite surprised too, it's one of the first results you learn in probability theory once you start talking about confidence intervals.
In the limited scope of rapid development/deployment of interactive graphs and dashboards, Shiny is probably better (out of the box) than anything Python currently has. The closest competitor is the Python API for Plotly's Dash, which is actually pretty good. In terms of web applications in general though, Python is so far beyond R that it isn't even worth comparing. 
Most of these R libraries are really FORTRAN/C++ libraries (e.g., libsvm) that are wrapped in R. Many of the same exact backend libraries are used in Python packages.
Sample sizes don‚Äôt scale linearly. 
It still is a performance loss. If you're willing to ignore performance losses like that then I'm willing to ignore performance gains of equal perportion. 
LMAO
This is where `pip install` draws from and anyone can add a module. https://pypi.python.org/pypi &gt; The Python Package Index is a repository of software for the Python programming language. There are currently 122523 packages here. This is how you package your script: https://packaging.python.org/tutorials/distributing-packages/ 
It still is a performance loss. If you're willing to ignore performance losses like that then I'm willing to ignore performance gains of equal perportion. 
Count the `(` and `)` in line 23
R also has many superior algorithms because it's GPL and so can use algos that are more restrictively licensed
Python can literally do anything. The question is are you willing to find it or program it yourself if it doesn't exist. I switched from R as well and I'm never looking back. If there is an algorithm that I can't find in the ecosystem I look up the math and code it myself. Not that tough... 
Exactly. VBA is good for what it is: Excel.
fixed that now getting some different errors
You can write GPL code in Python. Many python libraries are GPL.
pythonanywhere.com is free and easy to set up.
Of course it's True == True in [False] that I wouldn't not NOT in [False] write like that. 
Didn't we have a parade about this last year??
I built a twitter bot to help fight for net neutratlity https://github.com/jakesuellentrop/fight_for_the_internet.git
Can't believe you even had to type this out it's so obvious 
And yet, scipy's stats are inferior to R. I use scipy though so I don't have to release my code.
"5 ways to quarter-ass learning Python, not even half-ass" Buy a book if you want to actually learn a language, **especially** when learning to program for the first time. Search on google and sift through the results of what people on stackoverflow recommend. There are too many nuances that free sources will never be able to cover because it takes too much time. You'll find the basics that everyone covers like syntax, basic structure and naming conventions, but you'll never learn the details that make certain languages stand out. Unless you're legitimately well versed in a few languages and understand the subtleties between them, you're only going to hurt yourself by following this article's advice. 
&gt; quarter ass-learning *** ^(Bleep-bloop, I'm a bot. This comment was inspired by )^[xkcd#37](https://xkcd.com/37)
It could be that 954 people just doesn't seem enough of a sample size to be representative of all the data scientists in the world. 
Great!
Thank you bot. Googled "ass-learning" without a number reference in front. [Was not disappointed](https://images-na.ssl-images-amazon.com/images/I/51duK02m%2BaL.jpg). 
Well, [actually](https://www.kdnuggets.com/2017/03/what-makes-good-data-visualization.html)...
Actually, I think that has little bearing on it. Simply put, the R ecosystem is/was mostly developed by statisticians and domain experts, while the Python ecosystem was developed by software engineers and programmers. This is also why Machine Learning is much more robust in Python, because it is a field that grew more from Computer Science than Math/Statistics.
I thought the first rule of design is to not use Comic Sans? 
The color scheme reminds me of a DOS based word processor. 
5 minutes? Really? I just read it to find out how full of shit it was about the time. Learning: docker: 10s sql alchemy: 10s prep work relied on: 10s flask &amp; others: 10s So I've still got 4 minutes and 20 seconds to type the actual code, since I have it perfectly memorized. 
Statistics. How do they work? 
Congratulations for officially launching!
Thank you. There's no way that you can compare the influence of the two languages, and it's not like one is overtaking the other like it's a NASCAR race or something. R guy here, who respects Python, btw. 
good job
Woosh.
Yes, you need to use another library to get the gpl parts. 
Guys we just found water on mars
If R dies to Python it will be because Python supplants it. Languages don't die easily. I hope that Python becomes as good for quick (but not dirty) data analysis as R and then I hope R dies.
There webpage looks like the slide CERN made to announce the Higgs boson. It's just missing the comic sans.
`int` compares object identity - basically the place in memory where the object is allocated. Python always keeps `int` objects allocated for small numbers (-5 to 255) and reuses them as needed. For larger numbers, a new object is created every time. And this is why you should use `==` to compare equality.
Total beginner or have some basics and need projects to move on?
Don't think there's a package for fast and frugal trees in Python, but, as other's have said, sklearn has lots of options for L1 and L2 regularization. There's even an official port for [glmnet](https://web.stanford.edu/~hastie/glmnet_python/) in Python, though I'm not sure it's as fully-featured as the R version.
Also check out [this video](http://pyvideo.org/pygotham-2017/nim-a-new-option-for-optimizing-inner-loops.html) on using nim to speed up bottlenecks of python apps! That's a good example how you can benefit of it without moving from the python ecosystem.
`is` tests for *identity*, not *equality*. Identity means the memory address the integer is assigned to. So in general, `a = 300; b = 300; a is not b` However, python 'preallocates' the integers -5 through 256. Those integers have memory addresses up front and when you use them, it reuses those objects. This is one of python's many memory management optimizations.
they're very easy, these would be weeder questions if someone put python on their resume
For total beginner? What will be good porjects? 
is drop rate published?
I got sidetracked, what are we doin?
Thanks u/jshek! :) 
You can build your own server that'd serve some files over the (local) network, so that you could download, edit and re-upload them from anywhere. Or just some photo storage of your own. You can try scraping sites and do some data analysis: like, retrieve some weather stats from some site, plot a graph, calculate some statistics based on the data. Or write a simple blockchain in less than 50 lines of code. Or try some data encryption. You know, RSA, AES, etc. This is actually a lot of fun to see this data transform into illegible garbage and back. There are libraries to do that, but it's more interesting do it yourself relatively easily as there are specifications for the algorithms.
I don't want to go back and look, but ... are there ... &lt;blink&gt; tags?
Please let us know if you use it for that! We're curious about the use case :) 
I'd do the pycharm edu project tutorials. Free and get you working in an ide right away
Yeah, I have still not grasped every concept of Haskell, but being a math major helps, even though I have never learned functional analysis, lambda calculus of category theory. One of the biggest problems is they don't have a good ressourse on patterns, best practices and useful idioms.
Step 1: read the sidebar Step 2: post in the right subreddit. hint: /r/learnpython Step 3: read the sidebar in /r/learnpython Step 4: don't post images of code Etcetera. Help us help you.
Attention: Small but important subtle correction: The allocated small numbers are an **implementation detail** of the CPython compiler. You should therefor not write code that rely on this detail, as this might change in the future or might be fail with other python interpreters like PyPy, Jython or IronPython and so on. 
I need to work on my statistics.
Sry didnot know. delete this now 
I knew it that it was because it's larger than 255! :) And yeah, I know I should have not checked for identity with numbers, it was a mistake but seeing 200 work really threw me off. Thanks!
But ever since I learned to know languages with static typing and strong type inference (which take the edge of lot of boilerplate needed in earlier statically types languages), I cannot help but feel fricking dangerous when using dynamically typed languages. Like, you were climbing walls as a child / teenager, you started climbing overhanging cliffs -- freestyle (the only security option you knew was carrying around a drill, hooks and cement while climbing) -- as an adult, and then you experience top rope climbing. If you are a same person you ask yourself: why didn't I learn about it sooner. And if a friend suggest going climbing -- freestyle -- you shudder of the thought. If you are forced to, you feel frickng uncomfortable. 
Well, if you look at [the repo](https://github.com/Rapptz/discord.py) it looks like they're preparing to release 1.0.0, which will break backwards compatibility with the current release. The current alpha code is in the [rewrite](https://github.com/Rapptz/discord.py/tree/rewrite) branch. Looks like they've got it publishing the docs already so people can try it.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Rapptz/discord.py/.../**54ea52c86fee52a4b8f1f13b15438a082610d636** (rewrite ‚Üí 54ea52c)](https://github.com/Rapptz/discord.py/tree/54ea52c86fee52a4b8f1f13b15438a082610d636) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
*yawn* its not a popularity competition.
The 1.x.x version is under the [rewrite](https://github.com/Rapptz/discord.py/tree/rewrite) branch on the discord.py GitHub repository. I presume that the reason it is hard to Google for is that there hasn't been an official tagged/versioned release of this rewritten discord.py 1.x.x library. Most of the documentation is probably automatically generated so that is possibly the reason that it exists ahead of the release - this is good because it gives developers the maximum amount of time/chance to see breaking changes and decide whether/plan how to update their code. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Rapptz/discord.py/.../**54ea52c86fee52a4b8f1f13b15438a082610d636** (rewrite ‚Üí 54ea52c)](https://github.com/Rapptz/discord.py/tree/54ea52c86fee52a4b8f1f13b15438a082610d636) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
&gt; there isn‚Äôt one definitive R organization R core team
I get paid to solve problems. But due to bureaucracy I don't get the ( pro forma free!) tools (there are costs associated with it due to our processes) that would make me solve that problem faster and more secure by one or even two orders of magnitude. I feel my life is wasted on bad tooling. That's the problem. I don't only want to get paid, I want to spend my life doing something productive and not waste my skills. The unavailability of source control is horrible.
Thanks. Is it wise if I solve beginner level coding problems? Say from Hackerrank?
These are the same points I wanted to raise myself. While the one-way-to-do-things philosophy is generally promoted for basic python programming, once you get into the realm of numpy/ pandas/ matplotlib/ scipy, you find that this idiomatic python is left at the door: 1. There are many ways to do mathematics, so naturally there are many ways to arrive at the same answer programatically. 2. There are few too scientists working on the same problem that it is difficult to converge on an idiom for each operation. And history matters - yes, R has been around longer and each of these new iterations: data.table, tibble, etc. reflects different generations of contributors. There may be something of a "lisper's curse" to R as well - perhaps it is too simple to write your own library which leads to a fragmented ecosystem. No one in their right mind wants to rewrite matplotlib or pandas, whereas members of the R community have taken it upon themselves to write substantial packages that do similar things - in addition to adding new data frame functionality, proliferating packages like lattice, ggplot, and so on. 
Awesome work! This is a missing piece i have been waiting for. I started building something like this myself but never got around to finish it. Thanks for the awesome comments in the code. It really does helps understanding both the functionality and why you did things you did. Several times i was thinking "why do you do it like that?" then i read the comment and thought that makes sense. So again. Thank you. I will happily help you maintain and definitively use it.
Why would you limit the user's ability to do things like that? Does your script require systemd and communicate with it somehow?
my god, horrible color combinations! I guess must have plotted in python:)
Legitimate question. But I find running the script as a service the best/simplest way to prevent multiple instances of the script. Should probably clarify that my question above...
OK, next question: why do you need to prevent multiple instances of the script from running?
I have not used hacker rank so I couldn't tell you but I've used (and still occasionally do review) practicepython.org lots of nice practical projects with solutions as well.
It has to do with timing. The timing gets disrupted when multiple instances are run. 
The timing of what?
Nope. This sub isn't here to do you (home)work for you.
I want something to be run once every x seconds, that‚Äôs all. 
I ran a small Minecraft community and was tired of relying on poor mod development and paying people to develop for me. I wanted to do it myself but I didn't understand any CS concepts. After some research it appeared that Python was the best way to get started -- and now I program in Python and Java to make money, as well as grow my community :)
Is that the only thing your script does? Does it do anything else but running that one thing every X seconds?
In short, yes
Is doing it specifically every X seconds important, or is there simply a limit to how often you can do it?
As mentioned, it has to do with correct timing. What relevance do all these questions have to my issue?
The relevance is that your script is likely better off as a one-shot process that is started every X seconds by an external source like a systemd timer, or cron, or just about anything else.
I hear what you say, but I have my reasons. Do you have a suggestion on how I can prevent the script to be run from outside systemd?
It's not going to do what you want. You can still run multiple instances of the script, even with systemd, simply by creating another unit. If you want a global lock, use a lock file.
Ha, I'm a maths major as well. Closest I got to anything of the theory that powers Haskell was my topology course were we had a small detour in a single lecture that mentioned some of the intersections and similarities of the 2 subjects. &gt; One of the biggest problems is they don't have a good ressourse on patterns, best practices and useful idioms. Yeah I agree, there's a frustrating lack of intermediate ground between "toy tutorials" and "code-golf level abstracting" lol. They did have a survey recently though and acknowledge the lack of intermediate stuff, so hopefully some of that stuff will get fixed.
Thanks.
What hourly rate were you thinking?
I can run a random forest in python in a small handful of crystal clear lines. Can't make it any quicker than that.
I inherited some scripts that took care of a gaming related subreddit, I learned a lot on those. Then I went on and played around with chat bots (irc, discord), that led into a webpage. Took me about a year to go from 'Hmm I kinda like this' to 'I am now paid to have fun with this'. 10 months later, promoted from junior (was promised promotion few months sooner, but corporate). So doing pretty well!
I‚Äôve tested various ways with a lock file and didn‚Äôt find a solution I liked. The biggest issue is that the lock file isn‚Äôt removed if the user kills the process. 
I get the point, I'll take my question elsewhere. Thanks.
Refusal to allow additional head count in BI reporting function in our department to increase output capacity. After making semi-automated VBA scripts in Excel, we switched to Tableau for data visualisation and it was a good point to move over to Python which seemed to have a far wider scope of online learning resources. Currently writing our ETL solution to automate API calls, ingest various Excel files we get emailed on a weekly basis, and creating an email-interface to the system for non-technical users.
To learn a language no, it‚Äôs cute but I don‚Äôt think it‚Äôs productive for anything aside from doing work looking stuff when you are procrastinating. 
Go with flask as a first framework, cuz it's lightweight and it's syntax is way easier.. Later on you can continue with django, which is way more powerful it has more features offered by the django team :D
I think the best advice I've seen in this area, is pick a project you'll be passionate about. Look for small projects people have already written in the same area on Github, start modifying the code to see how changes affect it. Side note: I've found Jupyter notebooks an excellent format for learning this way, as you can run small snippets of code to learn as you go!
First year CS course, 6 years later using it for deep learning in international commercial projects based off my master thesis.
This is a ridiculous debate, a ridiculous article, and I am reclaiming my time.
Its for university and university instructions state no imports at all for some reason. Annoying af but we are being graded on it 
Right. Well, basically a StringIO is just a much more efficient way of building a string than simple concatenation. So is a list that you join.
[removed]
This is code that works for me connecting to an external SFTP through a SOCKS5 proxy: import paramiko import socks s = socks.socksocket() s.set_proxy( proxy_type=socks.SOCKS5, addr="internal_proxy_adrress", port=1080 ) s.connect(("sftp.some_external_site.com",22)) transport = paramiko.Transport(s) transport.connect(username="username",password="password") sftp = paramiko.SFTPClient.from_transport(transport) sftp.get('serer_filename.txt','local_filename.txt') sftp.close() transport.close()
I'm filling my github with Machine Learning Models to look for work. It's starting great but matplotlib.pyplot freezes quite often, it's annoying. I have to reboot the system to get it to work
This is something that I've been working on for my Master's Project. It's essentially a wrapper around the `ctypes` module specifically the `Strucuture` class to make it a little easier to use. Creating packets is similar to how Django does it. I'm looking for any contributors if you're looking for a pretty simple open source project to work on. 
I had to do some Hackerrank projects and each one forced me to do some research, on things like regex, ordering dictionaries, extracting the most common value from a huge list of numbers and so on...the drive to solve the problems kept me going. It was valuable to me, but personal projects would be even better. 
I see. I feel the same way. It is pushing me to try harder.
I was bored during one of my engineering classes. Decided to learn a new programming language and heard about Python. Now I work for a company as a Software Test Engineering testing products using python scripting. 
One is base R and the others are packages by different people. So in my view there‚Äôs one way.
No, identity can be anything that a given implementation of python wants it to be. It is an implementation detail of cPython that the memory address is used, but Jython just uses a number that increments. What number does it start at? I've no idea, but I'd guess zero if I had to :-)
Yay for spambots!
Flappybird clone
I can't give an answer to this question as I have not worked on any open source project. 
I'm no Web dev but even I can setup a super basic flask app in 5min. Of course it's at the same utility as the simplehttpserver module from the stdlib :)
&gt; If I include the Agent into Environment, can it "inherit" the parent object's attributes without being an actual subclass of it? I don't know what you mean by "including the Agent into Environment". If you mean that you assign the Agent object as an attribute on the Environment object, then no, in general there's no way for the Agent object to trace such a reference backwards. &gt; If I pass the environment as a variable to the Agent.step() method, isn't that a lil bit ugly? That doesn't strike me as ugly in the least.
Thanks for your reply! &gt; If you mean that you assign the Agent object as an attribute on the Environment object Yes that is exactly it, sorry for the confusion. Alright, so I might do this then, thanks!
I don't know if I qualify as a Python developer, but I started using Python for scientific research after two of my friends recommended it. I use it for data analysis and visualisation, for not very complicated simulations, for some miscellaneous scripts. It definitely makes my life better.
&gt; I don't understand the down votes. This is quite obviously subjective. So it could be the way people felt about it. Your comment can easily be read as, "954 people just isn't enough of a sample size". In fact, that's the easiest and most obvious way to read it, since phrases like "It could be that" and "it just doesn't seem" are so often used as verbal fluff. Sure, you theoretically *might* have meant these phrases in a more salient sense: by "it could be" you *might* have meant to say "I speculate that maybe this is true", by "it doesn't seem enough" you *might* have meant to say "it seemed superficially true to people, regardless of the statistics". But that's not the first impression anyone gets from reading your comment. When you're challenged and only then you revert to a more narrow, easily defensible interpretation of what you said, that's a [motte and bailey trick](http://slatestarcodex.com/2014/11/03/all-in-all-another-brick-in-the-motte/), which is bad and you should feel bad.
What about *gasp* dot.case?
See there's a few tests we need to pass with the code. They all work with my code except this one and I am not entirely sure how to fix it. Thanks for the help as well. # Verify that this cell runs correctly # This will be used to test your code against a hidden test set import traceback try: with open("secret_test.txt") as f: with open("secret_test_output.txt", "w") as out_f: for line in f: test = line.strip() compressed = compress(test) out_f.write("%s\t%s\t%s\n" % (len(compressed), decompress(compressed), decompress(compressed)==test)) print("Secret testing works OK") except: traceback.print_exc() print("Secret testing failed") Traceback (most recent call last): File "&lt;ipython-input-197-c6d47a8e3fbe&gt;", line 10, in &lt;module&gt; out_f.write("%s\t%s\t%s\n" % (len(compressed), decompress(compressed), decompress(compressed)==test)) File "&lt;ipython-input-189-5a0df2807d13&gt;", line 25, in decompress raise ValueError('Bad compressed k: %s' % k) ValueError: Bad compressed k: 129
The intuition you need is this: suppose your worldwide population follows a gaussian distribution. Suppose your Netherlands population follows the same gaussian distribution. Then regardless of whether you're sampling from the worldwide population or the Netherlands population you are estimating the same distribution with the same variance anyway. The interesting phenomena happens only as the population size tends to 0; then you have to use a more discretized distribution like Poisson or binomial, depending on the kind of phenomenon you're trying to predict.
See there's a few tests we need to pass with the code. They all work with my code except this one and I am not entirely sure how to fix it. Thanks for the help as well. import traceback try: with open("secret_test.txt") as f: with open("secret_test_output.txt", "w") as out_f: for line in f: test = line.strip() compressed = compress(test) out_f.write("%s\t%s\t%s\n" % (len(compressed), decompress(compressed), decompress(compressed)==test)) print("Secret testing works OK") except: traceback.print_exc() print("Secret testing failed") Traceback (most recent call last): File "&lt;ipython-input-197-c6d47a8e3fbe&gt;", line 10, in &lt;module&gt; out_f.write("%s\t%s\t%s\n" % (len(compressed), decompress(compressed), decompress(compressed)==test)) File "&lt;ipython-input-189-5a0df2807d13&gt;", line 25, in decompress raise ValueError('Bad compressed k: %s' % k) ValueError: Bad compressed k: 129
Give this a shot. You might need to change "raw_input" to "input" if you're using python 3: from itertools import combinations, combinations_with_replacement # collect input characters = raw_input('which characters?') length = int(raw_input('how long is the password?')) repeat = raw_input('can the characters repeat? [y]/n') # determine function used if repeat and repeat[0].lower()=='n': func = combinations else: func = combinations_with_replacement # loop through possibilities and print and write output with open('output.txt', 'w') as f: for letters in func(characters, length): password = ''.join(letters) print password f.write(password + '\n') 
See there's a few tests we need to pass with the code. They all work with my code except this one and I am not entirely sure how to fix it. Thanks for the help as well. import traceback try: with open("secret_test.txt") as f: with open("secret_test_output.txt", "w") as out_f: for line in f: test = line.strip() compressed = compress(test) out_f.write("%s\t%s\t%s\n" % (len(compressed), decompress(compressed), decompress(compressed)==test)) print("Secret testing works OK") except: traceback.print_exc() print("Secret testing failed") Traceback (most recent call last): File "&lt;ipython-input-197-c6d47a8e3fbe&gt;", line 10, in &lt;module&gt; out_f.write("%s\t%s\t%s\n" % (len(compressed), decompress(compressed), decompress(compressed)==test)) File "&lt;ipython-input-189-5a0df2807d13&gt;", line 25, in decompress raise ValueError('Bad compressed k: %s' % k) ValueError: Bad compressed k: 129
Maybe set a threshold and then apply a running avg/exponential filter for new values
Thank you mate
See there's a few tests we need to pass with the code. They all work with my code except this one and I am not entirely sure how to fix it. Sorry if its difficult to read I have no idea how to format code on this properly. Thanks for the help as well btw. import traceback try: with open("secret_test.txt") as f: with open("secret_test_output.txt", "w") as out_f: for line in f: test = line.strip() compressed = compress(test) out_f.write("%s\t%s\t%s\n" % (len(compressed), decompress(compressed), decompress(compressed)==test)) print("Secret testing works OK") except: traceback.print_exc() print("Secret testing failed") Traceback (most recent call last): File "&lt;ipython-input-197-c6d47a8e3fbe&gt;", line 10, in &lt;module&gt; out_f.write("%s\t%s\t%s\n" % (len(compressed), decompress(compressed), decompress(compressed)==test)) File "&lt;ipython-input-189-5a0df2807d13&gt;", line 25, in decompress raise ValueError('Bad compressed k: %s' % k) ValueError: Bad compressed k: 129
Thanks for the comments :) Glad you find it useful and would much appreciate your help to maintain it :D 
Ok, well I can't see the content or either file, and I can't see the compress function you're using at all, but your decompress works only on the first 128 (0-127) characters of the Standard ASCII table, and 129 is the second character of the Extended ASCII table. So there's a character in the compressed text that your decompression algorithm cannot handle.
Certainly, using a set is the right answer, but understanding how to get yours working may be useful in other cases. &gt;for x in range(0, 7): &gt; for y in range(0, 7): &gt; if myArray[x] != myArray[y]: &gt; total = total+1 The first problem here is that you are counting inequalities multiple times. For example, when x=3 and y=4, as well as when x=4 and y=3. You also count all the times, when one would suffice. Let's look at the 1,2,4 case (aka range(1,8)) First time in the outer loop, x is 0 so myArray[x] == 1. myArray[y] ranges between 1 and 7. Since 2..7 are all different from 1, after the first time in the outer loop, total == 6. Once you know that myArray[0] !=myArray[1], you don't have to compare myArray[0] with any others. So you should break after incrementing total. But that's still not good. In the 1,1,1 case (1,1,1,2,2,2,3), myArray[0] will still != myArray[6] and it will count 7 unique values. Really, all you need to check is if myArray[0] == myArray[1]. So you could do: for x in range(6): if myArray[x] != myArray[x+1]: total = total+1 That will only increment total when x is 2 or 5, giving you a value of 2. Since you're counting differences, you'll need to initialize total to 1 (in the case where all the values are the same, the answer should be 1, not 0). There's still one problem. You don't require the numbers to be in order, so if a, b, c = 4,1,3 myArray would be [4, 1, 3, 5, 4, 7, 8]. Since each value is different from its neighbor, it would give a total of 7. To solve this, add a step: myArray.sort() It would then be [1, 3, 4, 4, 5, 7, 8] which would give a total of 6. TL;DR: total = 1 myArray.sort() for x in range(6): if myArray[x] != myArray[x+1]: total = total+1 
&gt; And you should feel bad Why you got to be like that man. :-/ But thanks, that's exactly what I suspected to have happened. I should have been clearer. 
Is this sub insecure? I constantly see you guys posting about how much growth python has and how it's overtaken language x y z etc. There should be a sub rule to stop posting this stupid shit. I'm just probably going to unsubscribe.
`a == b == c` is a natural way to spell "all three values are equal. I've no idea when one would want to chain `in`.
Beginner-level answer: floating point isn't accurate, never use `==` or `!=`. Advanced level answer: [What Every Computer Scientist Should Know About Floating Point Arithmetic](http://orion.math.iastate.edu/alex/481/p5-goldberg.pdf) by David Goldberg is a classic.
I'd start simple, learn how to run your program, modify it and upload it to git. 1. Start with hello world, everyone does when they begin a new language. 2. Your next project could be something you put on github, which you make changes to. I would recommend trying to make something deadly simple so you get your head around all the core concepts. Ideas: - Knots and Crosses using ascii art - A simple mathematical calculator which you can put console input in for example `python3 ./calculator.py 5 ADD 10` Then add support for expressions so you can type in things like 5+10*2. Try to use github along with what you're doing as it well and use it as a 'box of snippets' this lets you refer back to it when you need to do something similar. Then for your next project, try using pipenv and use it to install and run your application. pipenv makes your life easier when you need to deploy your application. https://github.com/kennethreitz/pipenv If you want to try making a simple website, try out bottle and you can make it output stuff to your browser, maybe you could make a browser calculator? https://bottlepy.org/docs/dev/
Tried posting(or searching) on celery mailing list ?
What about opening a named socket with `bind()`? The OS automatically unbinds the socket when the process is killed or crashed.
&gt; And you should feel bad That's just a silly internet meme, I did not literally mean it
If I disagree that everyone loves Python, then I am right, because I would not love Python and therefore Python would not be loved by everyone. 
What I found very motivating is asking family/friends/acquaintances if they had anything they would like to see automated or made easier by the means of a computer program. I think it is motivating because 1) you have more concrete idea of what to do 2) you do it for a real person 3) you're actually doing something useful Maybe some things they come up with are out of your league as of now but I promise there will be small things that you're able to program as a beginner.
You could just use the [RSS feed](https://talkpython.fm/episodes/rss). Or we can look at the RSS feed and notice that all URLs look like `https://talkpython.fm/episodes/download/(episode number)/(episode filename)`. We can then notice that those links actually redirect to the episode file on a static host. What happens if we remove the filename then? Turns out we get redirected to the right path anyway, just based on the episode number. This means all we need to do is download `https://talkpython.fm/episodes/download/(episode number)`, where (episode number) changes from 0 to 138. Time to do some bash! First of all, printing all episode links: for i in $(seq 0 138); do echo "https://talkpython.fm/episodes/download/${i}" done And now that we have a list of URLs, we can just feed it to `aria2`. `for i in $(seq 0 138); do echo "https://talkpython.fm/episodes/download/${i}"; done | aria2c -j4 -i -`
I inherited a bunch of ETL scripts and found them easier to work with than the perl code I had written a few years prior. I ported my stuff to python and haven't looked back.
ctrl+P and ctrl+N autocomplete work great for me. With Python I have very little trouble remembering the names of all the functions/methods that I need to use, and if I *do* need a reminder then I just google "python &lt;module&gt; thing that I need to do but maybe can't remember". Or use `help(&lt;thing&gt;)`, if I don't remember the parameters of the thing. I'll grant that both of those are a bit slower than PyCharm (et. al) autocomplete, but as I think has already been established this thread - typing speed is not the hard problem when it comes to software development. Navigating and interacting with the codebase is *vastly* more time consuming, and understanding how the pieces fit together is much more important. While PyCharm is often better at navigation than Vim, because it parses the code and can use some context at figuring things out, it usually gets in my way more than it gets out of my way. I probably know and use more PyCharm (and other) shortcuts than the average user of those tools, and yet I *still* find more friction in the process with PyCharm (and others) than I do with Vim. As a complete aside, when I was coding in .NET I found VS to be much more helpful - but that's largely because the .NET apis didn't really fit my head, and documentation is garbage compared to Python. But I also had CTRL+\, CTRL+V bound to launch Vim at the current line and column of the current file, because when I was refactoring code I'm *much* faster with Vim. Here are some of the things that my OS is responsible for: - running programs (like git, for instance, or testing applications) - launching programs (like a webserver, for instance) - launching shells Those are all things that IDEs re-build on top of the OS. The argument I've always thought of *for* doing that is that it's great and if you learn your IDE then you know how to do it everywhere you can install your IDE. But then I asked myself how is that different, better, and an improvement than simply learning how to do it at the OS level? And I've never been able to give myself a satisfactory answer. Do you have one?
That's interesting, thanks for sharing! What if i want to download all episodes without knowing how many are there? Plus i'm on windows so i couldn't natively apply your method right? (I know i could just download the bash for windows but suppose i don't want to)
There are four lights!
It's become a bit unusual to analyze EKG in isolation. Can you encorporate Resp signals, etc.?
excuse me, what?
Although you *might* find a way to coerce it into working, I don‚Äôt think Celery is really the best tool in this case. Depending on the complexity of your problem, you could just serialize as JSON and manage queues yourself with pika.
You could do something similar in PowerShell. aria2c exists on Windows, so you'll need to download that. You could also parse the RSS file to determine the number of episodes.
yeah, that's what we're getting at too. We are already managing the queues ourselves, but we wanted to move away from all that complexity and try to leverage the task system if possible. Thanks!
Ok thanks
we're new to the celery community, but definitely reaching out. Thanks!
It's overcomplicating the celery side to have 1 queue per user. If you use redis, you can store info about users, and the task id of a celery task if one is running. You can have the per user queue of things to do in redis too. Have one celery queue and a something like process_user_tasks. process_user_tasks can find a user that has nothing running against it and use celery to run stuff. Some other pointers - Using celerys API you can find task ids and get their status. IIRC the redis backend to celery makes this sort of task creation / managing a little easier. I've built something that works a bit like this before, but can't go into more detail since it was commercial.
I moved from industry into to a research related job. It's mostly bioinformatics, both the traditional sequence type and the geography type (species distributions, niche modeling, etc). We also use if for other data analysis like machine learning and image processing. I don't use Python for everything but most of the server-side stuff is in Python if there's a library for it, and there is usually one. For me, it was either Python or R. Nothing against R, but Python seemed an easier fit for a programmer type.
I agree, I have also noticed a huge amount of language X vs X posts lately, go, python, rust, clickbait titles etc. Use the language that fits your purpose..
What introduced me really into Python was kivy with android. I made an app for a hobby about identifying mushrooms without carrying a whole book. I then made a prototype of a gui with qt5. And then I made some games in godot engine with its python-like script language. Now I'm making a Vim-like application to browse and organize images, with touch-screen recognition.
I was just starting with some web development and a friend asked me for some help with his project, it was Python. So I looked at the project and start searching things about Python. I made the project on my own (friend didnt understand it) and I got an 7 out of 10 points!! It was University level stuff. So after I did the project I searched more about Python 3 and I was in love. At that time I wanted to move out from my parents and starting to live on my own but all the student houses were full. There is a website (from one of the student houses in my neigbourhood) where you can sign up IF there is an open spot. When there was an open spot it would be taken in a couple of minutes. So I was thinking about how to be the first.. Python to the rescue!! I wrote a script that would load the page every 5 seconds and check if there was a free room. If there was a free room I sent the room number and the website link to my phone. Within a couple of weeks I had my room. This was a great first project. I used code in the real world! And because of it I live on my own now :)
Sure - if you're building your own software. But if you're working in a team then the software choices are usually made by either consensus or just a few. And one of the considerations is popularity - since it indicates support, ease of finding new people who know the language or want to work with it, etc. I've found this especially difficult in java shops - where most of the staff is heavily invested in their knowledge of java &amp; the jvm, and often feels threatened by non-jvm languages. The fact that python is a rapidly growing and popular language at least helps to validate python as a reasonable option.
&gt; 2. Data types available in Python? &gt; * Numbers * String * List * Tuple * Dictionary Numbers??? You mean ints, floats, complex numbers, fractions or decimals What's with sets, bytes and alot of other stuff? &gt; 3. Delete a file using python? &gt; os.remove (filename) or os.unlink(filename) Pretty specific question and kinda useless... Deleting files is a very rare case of what you will actually do. &gt; Difference between del() and remove() methods of the list? `remove` is a method of the list object and `del` is a statement to delete objects from the scope. Not really comparable. Also massively usage of `del` is not really recommended, most of the time the garbge collection will carry about that... In [1]: sample = list(range(5)) In [2]: sample.del? Object `sample.del` not found. In [3]: sample.remove? Docstring: L.remove(value) -- remove first occurrence of value. Raises ValueError if the value is not present. Type: builtin_function_or_method In [4]: sample.remove(1) In [5]: sample Out[5]: [0, 2, 3, 4] In [6]: del sample In [7]: sample --------------------------------------------------------------------------- NameError Traceback (most recent call last) &lt;ipython-input-7-5f34ec0bfeac&gt; in &lt;module&gt;() ----&gt; 1 sample NameError: name 'sample' is not defined &gt; The main difference between mutable and immutable is memory usage when you are trying to append an item. The difference is that you can't append to a tuple, as you said it is immutable. You need to create a new tuple! In general a good question, but the answer must be more specific! &gt; 9. Copy an object in Python? &gt; Use copy.copy () or copy.deepcopy() What's the difference? Maybe shallow copy vs deep copy? Good topic but the answer is practically useless. &gt; 10. Python slice() Never seen anyone who used `slice()` for actual slicing instead of `seq[start:stop:step]`. It has it use but for more advanced or uncommon stuff. All in all these questions are just useless, on a real interview developers will ask completely different questions mostly more in-depth or complex ones. Come back when you have realistic questions, downvote from me, just looks like spam. PS: Did you try to SEO this shit? xD
/shrug still useful to identify features in ekg before looking at respiration
/shrug still useful to identify features in ekg before looking at respiration
I recommend a book called "57 Exercises for Programmers". It's my go-to resource when learning a new language. 
IMHO [pyenv](https://github.com/pyenv/pyenv) is the easier and cleaner solution for installing and using different python versions side by side. Venvs are also supported and you can grab more implementations that CPython, miniconda, pypy, and others are also available. Just in case you never heard about it.