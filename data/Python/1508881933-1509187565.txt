Have you tried using [ParaView](https://www.paraview.org/)? There is a Python console built in, which lets you control all aspects of the visualization pipeline. Furthermore, you can program your own filters in Python directly within the GUI.
if you can memorize it all in 1 hours, then yes.
[PyQtGraph](http://www.pyqtgraph.org/)
In the future, you may find pylint to be useful in validating code more complex than a single file. 
You can write a wrapper! def main_fun(a,b): return a+b def _wrap(ab): a,b = ab return main_fun(a,b) A = range(10); B = (i+40 for i in range(10)) # Generator expression. Could be list instead AB = zip(A,B) # Combine them res = pool.map(_wrap,AB) Note that is untested. But just to make my point!
Home/End
C++ has conan.io 
There is one already: https://github.com/mnaberez/py65 I'm using it in my Python Commodore-64 'emulator' https://github.com/irmen/pyc64 so it can run (simple) c64 programs
Because this worked: import tkinter as tk image = tk.PhotoImage(data=stringified_image_data) I honestly didn't go any further than the part that worked well and quickly. Could you explain why bytestring might be advantageous?
It is fun to think about. It is like all emulator in the browser for example a linux one https://bellard.org/jslinux/
You forgot Vim's everything 
Thanks but i already knew about that, i want to make one just for learning purposes, not because there isn't one available right now, which is probably why i still haven't done it. I find it pretty hard to motivate myself to develop something that was already done before
Upon opening the prompt: 'C:\Users\gsquared94\Anaconda3\scriptactivate.bat' is not recognized as a internal or external command, operable program, or batch file. After typing spyder and pressing enter: 'spyder' is not recognized as a internal or external command, operable program, or batch file. 
Huh, cool! I found a good tutorial for it too: http://blog.conan.io/2016/05/10/Programming-C++-with-the-4-Cs-Clang,-CMake,-CLion-and-Conan.html It's certainly rough around the edges but it might get the job done. It's definitely not as nice as pip install X, import X. Still, really good to know
I don't want to know what CTRL + KKK deletes . . .
Well, actually no. I had no idea. Why would it be unmaintained? Is there going to be any alternative? (sorry for the slow response)
bad bot
You're a dick, stop calling innocent bots bad. They don't know what they're doing, man.
Shortcut for swastika ASCII art. Spice up the comments in your code AND marginalize important members of your team! 
Try /r/learnpython. Show them the code you have and describe where you are stuck. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I think you're looking for "autoscroll".
Or just speed up Pycharm. I've sadly stopped using it because booting it takes so long. I'd love a slimmed down option
Thanks for the reminder on /r/learnpython. Totally should've tried there first. 
I guess we can't expect to have anything as simple as pip for C++ until modules are not in standard. 
You didn't mention any ways in which it resembles Pascal/Java.... that might help your argument
ctrl+shift+d will automatically paste the duplicated line directly below, so it does save a cursor movement.
Writing a dynamic programming solution to the traveling salesperson problem that will parse a text file containing all the node and distance information (graph) a user wishes to solve for.
That Alt+Enter trick is pure gold and OP should include it. It is vital if you want to find-selectAll-edit using regex.
Good your one of us, the vi guys
Images are put in through Labels, strangely enough. Google Tutorials point, label
I'm working on a script to help me categorize posts in my ever-growing saved list on Reddit. This is my third time working with Reddit's API. It's always a little slow to get off the ground due to the auth process, but I love how much you can do with it.
I think you really need to try Conda to manage your packages and environments. They have all binaries from the go and works like a charm for more complex libs like VTK, Qt, etc.. https://conda.io/docs/
Back near the beginning of the year I spent some a lot of time working on the first cut of a simple geospatial plotting library called `geoplot`. I eventually posted it to here, and it got [a good reaction](https://www.reddit.com/r/Python/comments/5sndb6/geospatial_visualization_made_easy_with_geoplot/)! The new `0.1.1` release is the first "real" version, in the sense that all the broken bits from the mad dash to getting it initially done have been fixed. I especially worked hard on the documentation (you can access [here](https://residentmario.github.io/geoplot/index.html)). I think this is a pretty useful tool that I'd like to share with the community here, and I especially really, *really* welcome more feedback on what to improve/work on next here and/or on GitHub. Thanks!
I've done some lidar visualisation using [kivy](https://kivy.org), which is not really made for that (mostly 2D oriented), but since it's basically a nice wrapping around OpenGL, there is nothing stopping you from doing it. https://www.youtube.com/watch?v=Umls6ytXasU that specific code hasn't been shared, it's remotely based on [ddd](https://github.com/kivy-garden/garden.ddd) which is a hacked together 3D loader for kivy (but i was very much learning my way around 3D stuff, not sure i would advise using it), Anyway, mostly to say that it's possible
I don't want to get into a knock-down, drag-out fight with Nim zealots, which happened here back in June. Some refuse to acknowledge that there's even a Pascal influence on Nim - despite the fact that the creator was a long time Pascal programmer, announced the beginning of his project on the FreePascal forum and wrote the initial compiler for Nim in FreePascal. In fact, there was even discussion on the FreePascal forum about whether "Pascal" should appear in the name of the language. Anyway, in a nutshell you'll find some of the bad influences of Delphi in the ability to use just a unit name in your import statement, leading to unclear code where you can't tell where a symbol was imported from, the ability to use a result variable rather than a return statement, the treatment of sets like a binary array, etc. Lots of things are claimed to be optional, but the question becomes why they're included or the default at all, and there's no answer other than "That's the way Pascal does it" and the insistence on powerful IDEs. This isn't even getting into the fact that the language is filled with obtuse symbols, although not as bad as Perl. From offering many ways to do things to many of those things being implicit rather than explicit (e.g. return variable), Nim is the opposite of many of the values of the Zen Of Python. From June: https://www.reddit.com/r/Python/comments/6gwv4a/a_glance_at_the_pythonlookalike_nim_programming/
Cython isn't really a standalone language producing an executable though, but it's certainly close to an ideal. 
ok thank you i will try that :)
From last time this got argued: https://www.reddit.com/r/Python/comments/6gwv4a/a_glance_at_the_pythonlookalike_nim_programming/ You have many (many, many) ways to do things, including all of the bad Pascal ways. You can import whole units, leaving readers to have no idea where a function came from, e.g. import math, stats, ml echo avg(1, 3, 4) Where was avg imported from? Nobody knows, just like Pascal. You have the option of using a result variable rather a return statement - when the function reaches the end it automatically returns the value of the result variable. It's an idea that computer science moved away from a long time ago and there's no reason to offer it other than Pascal nostalgia. It treats sets like a binary array rather than real sets as Python does (Python is one of the few languages that get sets right). They added Python-style sets in a library, but again the question is why have the non-sets at all? Pascal nostalgia. The list goes on and on, including an obsession with defining custom types and being able to pass everything by reference or value. It also throws in macros and a lot of other complicated stuff that really detract from what it could have been.
Without providing a link to your code, I can only guess as to what the issue is. 
I was just wondering if the bot would collect votes on itself. It seems it doesn't. Weren't you in the least bit curious? And stop calling innocent people dicks. Bad redditor.
Return can pass results from one function to another and be used in other things as if using a result. def foo(x): return(len(x)) a = int(foo("Text") * 3) print(foo("Check")) print(a)
I don't think that's it. It sounds more like autoscroll just passively follows along through the text of the script during execution, to keep the relevant parts visible at all times, like a debugger. What I'm referring to is for actively navigating the text while editing/writing it, and has nothing to do with actually executing the script.
Can vim do this? https://imgur.com/a/vC8O0 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/DUC4VH4.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
"Can vim do 'x'?" Yes.
How does it do that?
Oh my god I can't believe I did not know about the sidebar shortcut (CTRL+K and CTRL+B). I really need to get through sublime tutor... it will save me tons of time. Vimtutor already paid for itself and I am sure Sublimetutor will
Rebuild your environments in [pyenv](https://github.com/pyenv/pyenv-installer). I use it every day for work and home, and it just doesn't get easier than this.
is sublime text free? thought it was subscription
Let's take the same example as yours(because a deck of cards or traversing graph of people or sorting papers won't be that simple). def fact(n): return 1 if n==1 else n*fact(n-1) Let's take above example for n=4, i.e. fact(4). fact(4) ---&gt; fact(3) ---&gt; fact(2) ---&gt; fact(1) --&gt; read as **calls**. Now, what happens is this. fact(1) returns 1 to fact(2) because n=1. fact(2) returns 2 to fact(3) #2*1 fact(3) returns 6 to fact(4) #3*2 fact(4) returns 4*6 as final value. 
You’re 
Use the `PhotoImage` class on a canvas. Basic example: import tkinter as tk root = tk.Tk() # add a canvas to the root element canvas = tk.Canvas(root) canvas.pack() # create an image and add it to the canvas img = tk.PhotoImage(file='/path/to/img.png') canvas.create_image(0, 0, img, anchor='nw') root.mainloop() 
I love sublimetext. Now if I could just get JDebug working ST3 and macOS...
It isn't free. You just need to ignore the pop ups to get a subscription each time it shows up.
I don't see a reason why not. But currently, I'm having some issues with my workspace and it's going to take a few days. How about you PM me the details of any projects that you might be working on/recommend? I'm always looking to learn!
Forgive him, he an emacs user.
Same as ctrl+c then v, no cursor movement. Different strokes for different folks I guess. Also depends if you want the line saved to your clipboard, which ctrl+shift+d doesn't do
conda works pretty well. It's mostly oriented towards scientific and numerical packages, but you can use it for more general things like [Boost](https://anaconda.org/conda-forge/boost), and there's nothing stopping you from making your own packages. Sure, it's not optimal, but if you're mostly working in Python and only dropping to C++ (or C if you really have to) when you need the extra speed, it's a pretty good option.
Not free therefore not interesting.
No love for ctrl+shift+K? Deletes the line you're on. I use it every day. Also ctrl+m to jump to the matching brakcet is super handy.
You can use conda to install vtk and you can use pip to install vtk if you download the wheel. They do exist...
Checkout [this book](https://learnpythonthehardway.org/python3/). You might also look up "Automate the Boring Stuff". You will probably want to write a few simple programs (like from LPTHW). It's basically like anything else: practice, practice, practice.
When I tried multiple cursors for the first time with Sublime (doing web stuff), I could not imagine going back to simpler ways of doing things. I should probably use more of the shorcuts listed in this thread, too
Practice. Use it and it will become second nature. The things you are talking about will not be an issue for long. Just keep studying and using the language. The only thing you will have difficulty with is the `if` loop. I'm not sure that one exists ;) 
Maybe I'm missing something, but what does Sublime Text have to do with Python?
oops, i meant elif
Hehe. Was there a question that asked how to find the URL ending ("/python" in this case)? Curious to see what a textbook answer for that looks like since I just made a little function myself.
You are more looking to "scrape" the website. Not an expert on this but there are many tools.
Even if vim weren't arbitrarily customizable/programmable to add whatever useless features you want, are you sure the "can your editor do THIS??" argument is one you want to have when you're using an editor that has a canonical list of "supported languages"?
Try. Fail. Learn from failure. Try not to fail the same way twice (fail better).
That... doesn't seem to be the argument he was having. He was asking how you do the thing he mentioned. If your answer to how is "write a program that does it", that's not a particularly helpful answer - pretty much every modern editor can do everything by that metric - the relevant question is whether the feature is there **now**.
Sublime Text’s multi-cursor is so brilliantly robust and just generally works exactly the way you’d expect it to. For example, you can _cmd + click_ to just add new cursors anywhere. Useful when you need to add something multiple places that’ don’t happen to be matching words. You can _cmd + ctrl + G_ to just immediately select every instance of the word your cursor is in (doesn’t have to be selected already). Maybe most impressive of all, if you copy/paste while multi-cursoring, each cursor gets it’s own clipboard. This still just blows me away. So for example, I recently took some (JavaScript) code that looked like this: ``` config.HOST = ‘localhost’ config.PORT = 3000 config.DB_PORT = 28015 . . . ``` And I needed to modify it so that any config values wouldn’t get overwritten if previously set. So: - _cmd + D_ until I’ve selected all the relevant equal signs - _left arrow_ so my cursor is to the right of each key name - _shift + opt + left arrow_ to select all the text to the beginning of each line - _cmd + C_ to copy - tap the _right arrow_ until I’m on the other side of each equals sign - _cmd + V_ and a few pipes and now I have this: ``` config.HOST = config.HOST || ‘localhost’ config.PORT = config.PORT || 3000 config.DB_PORT = config.DB_PORT || 28015 . . . ``` Just a beautiful feature. 
Appreciate the help 
Thank you for the help
Thanks for the quick response
Sublime Text’s multi-cursor is so brilliantly robust and just generally works exactly the way you’d expect it to. For example, you can **cmd + click** to just add new cursors anywhere. Useful when you need to add something multiple places that’ don’t happen to be matching words. You can **cmd + ctrl + G** to just immediately select every instance of the word your cursor is in (doesn’t have to be selected already). Maybe most impressive of all, if you copy/paste while multi-cursoring, each cursor gets it’s own clipboard. This still just blows me away. So for example, I recently took some (JavaScript) code that looked like this: config.HOST = ‘localhost’ config.PORT = 3000 config.DB_PORT = 28015 . . . And I needed to modify it so that any config values wouldn’t get overwritten if previously set. So: - **cmd + D** until I’ve selected all the relevant equal signs - **left arrow** so my cursor is to the right of each key name - **shift + opt + left arrow** to select all the text to the beginning of each line - **cmd + C** to copy - tap the **right arrow** until I’m on the other side of each equals sign - **cmd + V** and a few pipes A few quick keyboard commands, and now I have this: config.HOST = config.HOST || ‘localhost’ config.PORT = config.PORT || 3000 config.DB_PORT = config.DB_PORT || 28015 . . . Just a beautiful feature. 
There is nothing like an ``if``-loop! That implies all other optional follow up elements like ``elif`` and ``else`` 😉
Love this one. Works especially well with Python's bracketless whitespace syntax and **cmd + [** and **cmd + ]** to change indent level. You are never more than a few button press away from completely changing the scope of a code block.
I believe it is written in Python? It is a great editor for any language though.
As an aside... The code in question could use some refactoring
I read that as secret shaming. I was very confused
thanks
Not without plugins...but I doubt SublimeText can do that without plugins, either. They’re both great text editors, they just have different paradigms they’re built around.
&gt;the relevant question is whether the feature is there now. Maybe, google it? Vim came out in '91, some version of whatever that screenshot is showing has definitely been conceived and implemented by someone (although just looking at architecture is particularly un-vimlike so I don't know why anyone would), that's the point. If you want to make it arbitrarily like the thing in Pycharm then go nuts, vim actually provides robust and easy to use tools for customizing the editor (I don't think you can make a reasonable argument that it's anywhere near as easy with Pycharm to programmatically customize the editor). Not to mention you can use all of vim's features on any filetype you want.
The documentation and plots look good! I will give it a try on a work project this week 😀
Seriously, /r/Python is not a board to announce releases. If you wrote a blog post explaining what was new that's one thing, but just reposting the pypi link is spam.
Why is this posted to /r/python? I totally couldn't get it. 
Your database can be corrupted in case of an OS crash or a power failure, so you have to carefully balanced your decision between speed and safety, depending your use case. Cf: 1. https://sqlite.org/pragma.html#pragma_synchronous 2. https://sqlite.org/howtocorrupt.html#cfgerr
Hard to say with the given information! But: you are looking for a good way to reduce coupling and make your code more flexible. It depends on what exactly you are doing, but in general you should prefer composition over inheritance. Especially in python there is no need to follow a strict class hierarchy - duck typing fosters a more flexible way of composing elements without any sort of typed interface (like a base class). I could imagine you have some sort of classes or even functions that cover the domain you want to model. Then of course there should be some kind if factories (that could be simply functions in python!) that constructs any kind of default setup or common setups. As you will have devided the functionality into small, reusable pieces any user of the lib can combine special functions easily on his own, if the given factories doesn't fit his needs. There is no magical silver bullet that appears out of some design pattern. You have to study different concepts and also basic oop or programming principles.
Does it really matter? 
Sublime is way too fast to be written in Python. It’s written in C++. The plugin API is in Python, and I think some of the high level functionality uses this API. Incidentally, the API is extremely powerful and fairly easy to use. I have written several plugins for my personal use. The API, and by extension, the incredible library of plugins is the main selling point for Sublime. Well, that and the speed. I tried switching to Atom (yay open source!) but it was like driving with your parking brake down.
Get an IDE that highlights it when you fuck some syntax up. No memory involved.
Everything you said is correct, but I'm absolutely positive it's way over the head of the person asking the question. He doesn't know what the word return does, you don't need to explain the recursion stack...
Just thought I'd share this again since the project has developed a lot since I first posted the prototype here a year and a half ago. It's stabilized and has become very useful to my workflow as well as many other folks. It's a really handy way to interact with small (even medium-ish) C and C++ python extensions. I hope you all like it as much as I do!
Keep it up! I had a similar background knowing C/Cpp and Matlab from an engineering background. Picked up a raspberry pi a couple years back, started learning python and it's been one of my favorite hobbies ever since. 
What did you actually want to learn before taking the Udacity course? It focuses more on Web. Is that what you wanted to learn? or did you want more CS knowledge? I'm feeling like edX course focuses more on CS. 
&gt; but no matter how much I type it and use it in some " mini-project", I still forget Unless you have damage to your hippocampus, I doubt that's true. Try writing these structures every day for five weeks in real projects that you want to see created and then see if you forget. (if you're impatient: why not just write a few examples on scraps of paper and tape them to the wall by your monitor?)
Easy for you to say, [KimPeek](https://en.wikipedia.org/wiki/Kim_Peek). You memorized all zip codes in the U.S.!
Read: - Browse a few posts in r/python and r/learnpython daily - Read your level of python on github Practice, practice and practice: - check the sidebar under "Online exercises)
For all practical purposes, it's free
I think most modern IDEs are plugin containers and almost all relevant functionality is implemented as a plugin. With that in mind you probably meant third party plugins not provided by the IDEs primary author, with what I do agree.
Never mind me, this is what I tried quickly but base64 is waaay smaller import base64 with open("test.png") as f: content = f.read() with open("c_base64.py", "w") as b: b.write("data = '%s'" % base64.b64encode(content)) with open("test.png", "rb") as f: content = f.read() with open("c_byte.py", "w") as b: b.write("data = [%s]" % ",".join("'\\x%s'" % bytes(c).encode("hex") for c in content)) 
link wasn’t working for me on mobile, here is an alternative: https://dbader.org/blog/python-parallel-computing-in-60-seconds
Sounds like just general Object Orientend code with a bit of composition? Note Python has cooperative multiple inheritance (with `super()`) so you can compose classes from others easily? If in doubt make it simpler.
Since when is that the case? Such posts are rather interesting than the loads of posts on some hyped topic or questions that are even too dumb for /r/learnpython. I'd rather argue this belongs to /r/django.
Python has proved its reliability, it has a big history behind (over two decades). YouTube uses it and Google uses it in the part of its Google App Engine. Python is highly marketable, it fits for many different projects. Python is portable so it can run on different operating systems. These are just some of the reasons why Python is so popular. Python developers are not only at a great demand but also have good salaries. Sometimes companies struggle to find efficient Python developers locally or it's just too expensive at the moment. Want to know [how to hire Python developers](https://mobilunity.com/blog/cost-of-python-developer-in-ukraine/) for the right price or how much they earn in different countries? The best solution here would be the [outstaffing](https://mobilunity.com/blog/types-of-outstaffing/) model.
First, congrats on the interview! Python devs are a dime a dozen, but employed ones are as rare as a unicorn fart. Prepare to write some python on the fly without using resources. It's usually nothing crazy, my last interview had me loop through the output of ps -aux and find a certain pid. Depending on the environment, plan on explaining your coding process, software development frameworks you've used, and be able to give some high level overview on projects you've worked on in the past, leaving out any proprietary code explanations. Good luck with the interview! And let us know if you get it!
That's for pep8 purists.
For more love check the `concurrent.futures` module.
Well, you know - you **did** answer "yes" to their question - asking "how" seems a pretty reasonable followup to that, given that such a claim seems to imply you know it's the case. Hell, I agree - there probably **is** something that'll do it, but the right answer to "how do you do it", after you've answered in the affirmative is to either say "like this", rather than go off on a complete tangent about vim's scripting capabilities, or to admit that you **should** have said something more like "probably - there's lots of stuff for such purposes in vim, you could look it up". &gt;I don't think you can make a reasonable argument that it's anywhere near as easy with Pycharm to programmatically customize the editor But that wasn't the question - indeed, it's nothing **like** the question. They were asking if it could do a particular feature they were presumably interested in. It seems like &gt;Not to mention you can use ~all of vim's features on any filetype you want You seem to have gone into full vim advocacy mode, rather than actually answer his question, bringing up stuff no-one has even **started** talking about.
I am using Python since the second year at university (graduated this summer), but now I am using mainly Django and Django REST at my current job. 
Inevitable destination for those crawlers will be torrents, I suppose 
Why are you doing that at all? Get rid of all the threading and just query `systemd` for your uptime over DBus.
Maybe you could use crontab for writting to file and flask only for reading file content? 
I could do that, but I would have to modify the script. If there's a mod_wsgi/apache conf that starts the module at restart it's much more simple
Multiprocessing cannot use `forkserver` on windows due to OS limitation (AFAIK), and have to use the `spawn` method. The `spawn` method have some (extra limitation)[https://docs.python.org/3.6/library/multiprocessing.html#the-spawn-and-forkserver-start-methods] One of them states that the script itself has to be imported by the new processes. If you spawn processes outside the ifmain...they will be spawned again, and again, and again. In linux, the main process is forked, which avoid such trouble.
To clarify - I'd love to read the blog post! However this is the exact same link as a few days ago, just with a different patch version. It doesn't even include a changelog! 
If one of them is fixed, you can use `functools.partial` to curry your function. If they are all varying, you can - use `pool.starmap` that take iterable of tuples and splat them in the function. - Or as said by jwink3101, you can use a wrapper and write a new function that fit better.
You should really ask questions like this on the mod_wsgi mailing list or at worst StackOverflow. More likely to find knowledgable people on mod_wsgi there, including myself. Is a fluke I even saw this. That said you have two options. The first is to use: * http://modwsgi.readthedocs.io/en/develop/configuration-directives/WSGIImportScript.html The second is to instead supply both the process-group and application-group options to WSGIScriptAlias, instead of using WSGIProcessGroup and WSGIApplication. Using the first directive, OR both of those options on WSGIScriptAlias forces preloading of the WSGI script file on process start. BTW, make sure you are using daemon mode and not using embedded mode.
thanks, I'll give it a try
I have a regular licence. Not a subscription. It's like 80$ for lifetime. I find that a very good deal for a very well working not memory eating editor.
ok the first link pointed me to the solution, thanks! I'll post the details in the OP
I am working on making our integration test environment more stable. One part of this is achieved by replacing more or less arbitrary sleeps during a test run with a Python script I wrote. This script waits until specified ports can be reached or it runs into a timeout. So far the use of the script has improved the reliability of our tests and also managed to shave off some minutes of test runtime (we are talking about runtimes more in the hours departement here). 
Your solution of adding: WSGIApplicationGroup %{GLOBAL} wouldn't do anything as that doesn't force preloading. What you need is: ``` # Uptime Server WSGIDaemonProcess uptimeServer user=www-data group=www-data threads=5 home=/internal_app/internal_latest/www/ WSGIScriptAlias /api/uptimeServer /internal_app/nevis_latest/www/uptimeServer.wsgi process-group=uptimeServer application-group=%{GLOBAL} &lt;directory /internal_app/internal_latest/www/&gt; Order deny,allow Allow from all &lt;/directory&gt; ``` You don't need WSGIScriptReloading as it is on by default.
Interesting most computer architecture classes I've heard about learn mips or arm. What book did you use
I use mkvirtualenv mkvirtualenv -p /usr/bin/python2 gh-anteater PyFinancePy2_Rel_01 mkvirtualenv -p /usr/bin/python3 gh-anteater PyFinancePy3_Rel_01 You can then just switch enviroments with `workon PyFinancePy2_Rel_01` or `workon PyFinancePy3_Rel_01` If you then `pip install requirements.txt` into either of the above, or like wise do a specific install `python setup.py install`.
:%s/your/you're/g
Thanks I'll try it out!
This looks very good. Thanks for sharing! Do you have any articles or use cases that showcase the bindings/advantages a bit more? I'll be using a lot of C/C++ pretty soon and apart from NIM i haven't found a good bridge.
Here is a similar one, where you can make your bots fight against other people's bots https://halite.io/ :)
The hat is 575 APA102 LEDs in a 4 metre string. I'm using a Raspberry Pi running a python script to drive them. I wrote the script so I can easily design patterns on my main PC and copy them to the hat for display. Just for fun I thought I'd play the main python binary through it. This is the result.
hats off to you sir
&gt; To clarify - I'd love to read the blog post! Cool. The official blog post is here: http://www.isotopesoftware.ca/blog/JDJhJDEyJGYzNWJQTGVpRTo3MzY=/view/ This is simply a bugfix release for CPython 3.5.9 compatibility. 
I haven't been able to use it at work since it didnt support Windows, but now I see it does. Awesome!
It happened to me too, I used Duplicate Files Deleter to get rid of them
Hmm, I have used Nim for quite a while and I'm not sure I can agree on the whole powerful IDE thing. Currently I use it in Vim, without much else than syntax highlighting.
The whole result thing does offer one nice benefit. Instead of having to declare a new variable in your function scope and then copy that over into your return value position on the stack it can populate that position automatically, saving you from copying an object.
Thanks!
I'm facing the same issue. In the end, I had to move from IronPython + WPF solution to Python + Kivy in order to freeze the code to an exe file. by default, Ipython have a solution to freeze the code (/tools/scripts folder) called pyc.py, however it wasn't able to make it work.
&gt; Django-hotsauce 0.8.1 is out. Have fun! That's... not much of a blog post - even your comment has more information. If there's so little to say about it, why post to /r/python?
class Letsgowild(object): def __init__(☝️, i): ☝️._i = i
Have you tried APScheduler? I'm using it for scheduler, can use datime trigger, interval or you can write custom triggers. https://apscheduler.readthedocs.io/en/latest/ 
It was MIPS tho, Atari/6502 was for the side projects
[PlayLisP](https://github.com/THeK3nger/playlisp), an interpreter for a Lisp-like script for manipulating Spotify's playlists. So that you can write scripts like this: (define "metal" (playlist "some playlist id")) (define "pop" (playlist "some other playlist id")) (define "result" (shuffle (interleave metal pop))) (print result) (save result "some output playlist id") 
Congratulations ! :D
cppimport leverages [pybind11](https://pybind11.readthedocs.io/en/master/) which is quite friendly to use. 
Good, now I have an excuse to wait 16 years until I promote my Python packages to 1.0.
Wow, practically 16 years of development until 1.0 was reached. I really like the explanation on why this version number was chosen now, as well as the timeline of milestones, given in the linked description.
Yeah I got mine even cheaper than that because I was still a student at the time. Given that I use it every day I feel like it's worth it.
Remember it was your CV that have her that impression. So she probably went totally by years experience. Show her your GitHub repo full of projects and pull requests and all the answers you have provided on Stack Overflow.
You pay with guilt.
Free as WinRAR.
For traversing a directory and its subdirectories in Python, I use os.walk. Then using a for loop like so, you will be able to traverse all directories recursively: for root, dirs, files in os.walk('/path/to/source/dir'): ...Code to process directories and files...
That makes sense. I must have been thinking of the plugins. 
Anyone have an idea how long this will likely take to become standard in Anaconda? 
Really, they should be using semantic versioning rather than their arbitrary versioning. The idea that people would think that it was “finished” once version 1.0 is released doesn’t make sense in this day and age.
I'd ask your comany what they use it for, how much existing code they have, why you need to learn it, how much work they expect to have for it, things like that.
So should numpy. Numpy 1.10 broke a lot of code due to changing how masking works. I'm not complaining, I just think it's funny we could have avoided NumpyVersion if they just went to 2.0.
Exactly!
Numpy/scipy ususally get added in a few days. Some other packages (e.g., vtk) take a month.
Try a google search and restrict your search to 2000-2005 (a long time ago), it should give you plenty of resources from a time where this could have been a hype. eg: https://www.sans.org/reading-room/whitepapers/scripting/winbatch-scripting-language-automate-security-nt4-environment-381
thanks! Ok, so I've got the first line there, and I've got my list of files... but now I need their full path for root, dirs, files in os.walk (sourceFolder): for item in files: print(os.path.realpath(item)) the output here is the path to the script, plus the file name. None of the subfolders, or their structures, are listed
Thank you. This was really helpful! 
I believe, the root variable will give you the full path to the current directory. So by using os.path.join(root, item) you should get the absolute path.
Practice. But honestly don't worry about it too much. I started teaching myself a few months ago, I use it at work a lot and have already built 2 awesome tools that my colleagues love, but when I'm developing with Python I'm googling exact syntax like every 5 minutes. Don't sweat it. 
Doesn't answer your direct question but you can accomplish the same task by using pandas vectorized string operations dfJanNetTax['County'] = dfJanNetTax['County'].str.strip() The df[column].str methods apply that function to each value in the column and return a pandas series with the modified values which you can then store in a pandas column
For loops are not the best approach when working with DataFrames. The (a) correct way to do this by simple reassignment. dfJanNetTax['Country'] = dfJanNetTax['Country'].str.strip() For a more custom function you can use apply: dfJanNetTax['Country'] = dfJanNetTax['Country'].apply(lambda x: x.strip())
Learning about flask blueprints and structuring projects using that and the application factory pattern. I'm quite happy with it as I was able to apply this on my pet project (shameless plug www.lovelyinsults.com) successfully and I think I finally understand how it works. The flask documentation wasn't enough but with the great help of this talk from Miguel Grinberg at PyCon 2016 - https://youtu.be/tdIIJuPh3SI - I finally got it. The video's quite long but he takes you through the process of refactoring a simple flask app using these more advanced patterns in detail. Happy to share some learnings. I might write a blog post about it as I haven't found a lot of info about it.
.whl files for Windows, this is awesome! :D
I agree with the semantic versioning - although anecdotally, we're moving away from this with our software to YYYY.MM for version numbers as clients were getting confused... We write tools for engineers! I don't know what's not to get!
Oh my.
I think there is really few things you can do without going into the numpy realm. You can spend hours to tune python code to get a +10% performance, or you can spend a bit more trying the numpy way and get the code to run 10 times faster. I know it is hard, but I will try to convert part of the algorithm in numpy. As a PhD student in CS, this will be a terrific skill to add to your belt. Start with the inner loops, a step at the time! Another solution is to rewrite the core of the algorithm in another language (c++ or rust) and call it from Python. It is much easier than it seems (look at my [rust-python example here](https://github.com/THeK3nger/rust-python-integration-examples/blob/master/rustyclient.py)). The advantage is that you can write the algorithm in a more "traditional way" and get (most of) the same benefits of numpy.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [THeK3nger/rust-python-integration-examples/.../**rustyclient.py** (master → 0847e3f)](https://github.com/THeK3nger/rust-python-integration-examples/blob/0847e3f291124267b6d81a6cc088753e9d1c2b2c/rustyclient.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dovdb9h.)^.
The real question is how did you do that in PyCharm?
&gt; hours departement They prefer to be called "payroll" where I work.
The correct way to do it is with a file walker. The easy way is to shell out and execute `cp -r`. But that’s not portable between OSes. 
Use blender. It has a python API and you'd get a lot more functionality
python&gt;c++
😄 I edited the post so no further confusion ensues. 
The hours department thanks you!
php makes me kill myself
Fun fact - in Python 3 you can make it more unreadable if you hate your coworkers: ``` class WTF: spam = 'eggs' def foo(ಠ_ಠ): print(ಠ_ಠ.spam) ```
Mlm devalues mining
Why Visual Studio specifically? Have you looked into PyCharm? It's a much better IDE for Python IMHO, and much more actively developed as well.
Working on a deep learning bot that plays chess (or checkers, haven't decided which one yet). Long term, I want this bot to be able to tell the user when they've made a mistake and what a better move would have been.
 for root, dirs, files in os.walk (sourceFolder): for item in files: if not item.startswith("TEST"): fullPath = os.path.join(root, item) # full location of original file partPath = fullPath[sourceLen:] # path without source destPath = destFolder + partPath print("Moving: {} To: {}".format(fullPath,destPath)) shutil.move(fullPath, destPath) this is my code block so far, but I'm encountering an error. it moves over the file in the top level just fine, but it hits the error when trying to create (i guess) the folder on the next sub level any suggestions? 
my uni gives free versions of visual studio. Therefore I assume I'll need it in the near future. I just want to make sure it works. And I will use PyCharm as a alternative version for now, thanks.
Can you explain to me what Anaconda is, please? I still don't quite understand. 
python&gt;c++
You won't ever "need" a specific IDE for anything in Python. The language itself is not tied to any IDE.
I don't know if the shutil move function will create the appropriate subdirectories, which might be your issue. You can try and use the os.makedirs on your destination directory before trying to move the file in order to create the destination directories recursively.
Imho that's more a question of the ease of creating those rules with your created domain objects! You should have a look at toml! It's a good read- and writeable configuration language with good python support (only third party module of course). You will have to write a parsing routine that takes the automatic generated object tree by the toml parser and then creates the rules / objects that you need to start the processing.
apply is slower though so you should use the vectorised function whenever possible
This might just be semantics, but isn't apply still "vectorised". I accept that it may be slower, but just clarifying.
Might not be technically correct, but: [Anaconda](https://www.anaconda.com/download/) is a distribution of Python that contains everything you need to get started, and its own package manager (like pip). You can easily create virtual environments and install packages, and it will take care of all/most of the "behind the scenes" dependency management. It's great for people like me who just want a Python with mostly generic packages that "works", and one which I can recreate on multiple machines.
php makes me kill myself
Convincing enough, I'll go with PyCharm then!
I mean it is and it isn't. It looks vectorised but performance-wise -it's the same as writing a for loop (or at least it should be in the same ballpark - it's possible that .apply manages to do some optimisations)
Ah, okay I *think* I get it now. Thank you for the explanation.
Take a look at Visual Studio Code, it's a VS "lite" IDE with plug-ins for most major languages. I'm really liking writing Python in it.
Mlm devalues mining
You will have multiple pages in your Flask app, which you will run on a internal port with gunicorn and then use nginx to reverse proxy requests from port 80 (which is external) to the internal port. For what it's worth I prefer waitress to gunicorn. https://github.com/Pylons/waitress 
Hmm, didn't think of it that way. Thanks for clarifying! It's a shame since anything more complicated than a standard method call would need a lambda apply, if I'm thinking correctly... 
Python docs have a [`shutil.copytree` implementation](https://docs.python.org/3/library/shutil.html#copytree-example) as an example, you can try modifying it to skip/move files based on your condition.
You need to put bits of code between backquotes \` or they get messed up by Reddit's formatting syntax.
Skippy!
 &gt; When I look up `help(numpy.ndarray__str__)`, it actually says Return str(self), Where do you see that? 
We've been using slack internally for a few weeks now and I'm really liking it. Lots of people writing bots with the python api
I'm by no means good at any of this but I'm a little curious. Seems like you could be using dictionaries to store the pokedex info, and then use random.choice(pokedex) to pick a random pokemon entry. It'd beat that pile of if statements surely? Any reason why you don't? also line 48 has a typo, "okemon" instead of "pokemon".
Most things can be done with a combination of methods. If you want to make things neater you can write a function that takes a dataframe as an argument, then use .pipe to call that function in a way that looks more object-oriented
You should use whatever your broker makes available to you. 90% of brokers will let you use Metatrader 4/5. Extremely few have a python api. Some do have a rest api, but check the limitations or terms of use. This is one of the few times where you use what is available. Typically its Python for prototyping/research/back-testing, and then implement in something with better performance, or that has an available api which is often C# unfortunately. 
thanks! corrected
when I actually typed `help(numpy.ndarray__str__)` from python shell
Stupid nit pick, but don't you mean parking brake up? You pull a parking brake up to engage it, then release it and push it down to disengage it.
Ok, you mean `help(numpy.ndarray.__str__)`. That's the description of what is does, not the code. It's telling you exactly what you described: this is the method that provides the result for `str(self)`. 
thank you! I edited my post with my solution 
I'm fairly new to Python itself. Also yeah, I got a new laptop and it tends to be pretty sensitive so sometimes typos. I almost wrote "ythyon" replying to you.
A node-like way of handling packages. Pretty nice.
Just to piggy back on this, what about just `conda` (as opposed to the whole distribution)?
I've been using [Pipenv](https://github.com/kennethreitz/pipenv) for about 2 weeks and just love it. I use it locally and in production. Some of the things it replaced was a bootstrap script I had that handled virtualenv's and installing packages. There's no need for multiple `requirements.txt` files split across your environment, since [Pipfile](https://github.com/pypa/pipfile), which is automatically created and updated when you use Pipenv, handles that. In addition, it also handles the version of python you use, creates the virtualenv, and can optionally source you into via `pipenv shell`. The only thing I had a bit of trouble with was package installation times. If you have a lot of packages, dependency checking (done via *Pipfile.lock*) takes more time. I got around this by using ``--skip-lock`` in my first and subsequent commands. The other caveat is I found some packages I pulled in had absolute dependencies (like requests on [avinassh/haxor](https://github.com/avinassh/haxor/pull/13) and [bitprophet/releases](https://github.com/bitprophet/releases/issues/71). This completely prevented migrating over initially, but ``--skip-lock`` got around this problem also.
Thanks for the advice! Implementing the core algorithm in C/Cpp seems to be a great solution for me, will definitely try it out!
Nice quality code. Starred. I love [pytest](https://docs.pytest.org/en/latest/). Saves a level of indentation. More powerful asserts. Still speedy. And the other thing I like is [parametrize](https://docs.pytest.org/en/latest/parametrize.html) ([like you have here](https://github.com/webyneter/python-humble-utils/blob/9e659c28c3ee3d3a2f58224bbef099e09785543e/tests)). /test_commands.py#L93)) Only thing to mention is, I think it's Python 3 only. If it's an open source library, making it 2/3 compatible makes it available to a wider array of projects that could implement it. Love [autodoc](https://python-humble-utils.readthedocs.io/en/stable/python_humble_utils.html) API documentation. Other thing I do is add the RTD link to the GH repo's descriptions for easy access.
It's specifically geared towards the whole ecosystem of scientific computing Python packages. It also has Jupyter/IPython, a browser-based interpreter where you can do charts, tables, etc and save the code (with output) as "notebooks". Extremely handy for data exploration and has a number of extremely useful tools.
From the article: &gt; Fernando Perez offers a wider community perspective: &gt; The existence of a nascent Scipy library, and the incredible --if tiny by today's standards-- community surrounding it is what drew me into the scientific Python world while still a physics graduate student in 2001. Today, I am awed when I see these tools power everything from high school education to the research that led to the 2017 Nobel Prize in physics. Any sources for this last fact? That would be useful for propaganda. Related, a prescient post from 2007: https://doughellmann.com/blog/2007/11/01/python-in-science-how-long-until-a-nobel-prize/
You could always do both (e.g., 6.1 / 2017-03)
Also: how do i get my code to display correctly because this is not readable
From [this Stack Overflow post](https://stackoverflow.com/questions/30034840/what-are-the-differences-between-conda-and-anaconda): &gt; &gt; conda is the package manager. Anaconda is a set of about a hundred packages including conda, numpy, scipy, ipython notebook, and so on. &gt; &gt; You installed Miniconda, which is a smaller alternative to Anaconda that is just conda and its dependencies (as opposed to Anaconda, which is conda and a bunch of other packages like numpy, scipy, ipython notebook, etc.). Once you have Miniconda, you can easily install Anaconda into it with conda install anaconda.
Its about time it could be installed on windows easily.
Does tom-in-python evaluate the config at runtime? Every time it's called? If yes, thats really bad :( The decissions have to be made as quickly as possible as soon as the "makeDecision" function is called. B/c the result of every decission triggers a http-POST that takes ages (the program reacts x&gt;1sec behind reality-rawdata). The sooner it goes out the better. The solution should generate static if x-else-y code for "makeDecision" from the config that can be monkeyPatched once the program is started. Think I'll have to code an own code-generator-module for that purpose. Maybe I'll try to get ot 'generic' enough to share. lets see. I googled for ages But couldn't find something similar up to time.time.now(). Basically I want the users to be able to create different decision patterns base on the config without altering the python code. Thanks anyway. tom might be usefull later on. 
I am aware of that. I already use anaconda as my distribution and manage it with conda. I just wanted to know when I can do conda upgrade scipy and get the latest
Thank you, I appreciate that. &gt; Only thing to mention is, I think it's Python 3 only... Considering Python 2, I've had mixed feeling about that, especially regarding Python 3.5+ type hints: implementing this feature in 2.x would require an extra .__annotations__ assignment for each function now annotated. But, yes, above all Python 3.x only-policy hurts adoption. &gt; Other thing I do is add the RTD link... Great suggestion, indeed.
&gt; Its about time Well it is. Now you can do pip install scipy with this version or download the wheels at the bottom of that post.
Old screen shot of commercial (pay) version feature.
There's a jupyter notebook on the LIGO experiment, [here](https://losc.ligo.org/s/events/GW150914/GW150914_tutorial.html). 
Can you say more on how you’re doing this?
Are the executables standalone or do you need to ship libpython when you distribute the code?
Funny thing about the "Premature optimization ..." quote. From roughly 1967 to 1974 Knuth had become some what famous/notorious for spending 20 to 40 minutes detailing to colleagues and coders how some tricky and obtuse "optimal" code was wasted effort at the expense of readability. After years of getting eye rolls he finally hit a breaking point in a meeting and just shouted "Premature optimization is the root of all evil" and stormed out. Jaws dropped. An intern in the corner silently said "Oh, thats what he meant." In the hushed silence everyone heard the intern--and slowly, throughout the room, everyone started to laugh as they had finally achieved enlightenment. I totally made up that whole story. But being clear and concise is true optimization. Making something run faster **where needed** (hopefully while still being clear and/or concise) is where Knuth was focused.
&gt; a distribution of Python that contains everything you need to get started Get started in what, exactly? I started learning Python, I just use PyCharm and downloaded Python 3 from Python.org. What does Anaconda specifically offer?
Sure! It's a bit messy at the moment and unfinished so I may refactor the structure, but here's the flow at the moment: savior.py --auth: opens a web browser and prompts the user whether to give permission to the script or not. Produces an authorization code. savior.py --token &lt;auth_code&gt;: sends a POST request to Reddit's OAuth with the auth code and some other required information (username, password, agent-string, etc) and receives a temporary API access token in response. savior.py --subreddits &lt;access_token&gt;: sends a GET request to the API endpoint that returns a users subscribed subreddits. Those subreddits are then written to a file, one per line. I then prompt the user to manually tag each subreddit with a category in the produced text file. Then: savior.py --sort &lt;access_token&gt;: creates dicts to map categories to subreddits and vice versa. Sends multiple GET requests to the saved posts endpoint (which allows you to specify a subreddit even though it's not documented). It creates objects for each post which log the id, date, subreddit, and category. Then, it sorts the objects by date ascending and resaves them in order with their category (which results in your saved list hopefully being in proper order). That's the gist of it. If you have any questions feel free to ask.
Thanks a lot! That clearly answered my question. I obviously misunderstood what `help` does and thought it tells somehow *how* it is done too.
A great number of modules which otherwise you'd had to install manually. The modules are generally geared towards scientific computing. If you are just starting, the standard library is good enough for now.
On macos at least there is no static linking so I shipped with the libraries. Because of that I made the build process for all platforms as similar as possible and bundled the libraries. It may be possible on other platforms,i haven't checked
I think you have not yet understood how one would design this. Every config language has to be parsed. *What* you do with the result and *how* you start your own function calls is *always* up to you. So you just parse the configuration file and then start your processing. Where is the problem? Btw: the configuration need not to be a file. It could also get into your program by user input or from whatever source that can transport strings. The language is named toml. With an L at the end 😉 To dynamically generate python code seems odd to me - if this would ever make sense, it must be an *extreme* corner case. So you should better not struve fr such a clumsy approach.
I think you have not yet understood how one would design this. Every config language has to be parsed. *What* you do with the result and *how* you start your own function calls is *always* up to you. So you just parse the configuration file and then start your processing. Where is the problem? Btw: the configuration need not to be a file. It could also get into your program by user input or from whatever source that can transport strings. The language is named toml. With an L at the end 😉 To dynamically generate python code seems odd to me - if this would ever make sense, it must be an *extreme* corner case. So you should better not struve fr such a clumsy approach.
How does this compare to [Mattermost](https://about.mattermost.com/slack-vs-mattermost/)?
Ha. We moved from version 18 to version 2016 the next year. Cue several years of confusion between v16/v2016, v17/v2017, and (next year) v18/v2018. After that, we'll finally be rid of it!
Wow thanks that actually makes a lot more sense with your explanation than what I've seen at a lot of the different resources. To clarify, if I have the code below in my flask app, I should be able to access all the pages once I restart nginx correct? I'm able to visit the first page I created but when I make updates to the Flask app is where I start to run into trouble. @app.route('/page1') def some_function() @app.route('/page2') def some_other_function() 
&gt; my last interview had me loop through the output of ps -aux and find a certain pid Why? `ps aux | grep $PID`. Unix already has these tools...
Okay, so I've gotten pyenv working (I think) in the terminal, but I -pyenv versions returns nothing, and the readme doesn't really seem to address what to do here and google searches just turn up people asking the same question and getting told to "read the manual" or "nv fixed it thanks" with no explanation. Do I have to delete all my old python builds and install everything through pyenv install or is there a better way?
I think your `FileNameAndExtension` class could be a `namedtuple` as is done by [scipy](https://github.com/scipy/scipy/blob/master/scipy/stats/stats.py#L382). 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [scipy/scipy/.../**stats.py#L382** (master → 79f322d)](https://github.com/scipy/scipy/blob/79f322dab70cf30b8c54e22c621a6c4be475f458/scipy/stats/stats.py#L382) ---- ^(Shoot me a PM if you think I'm doing something wrong.)
You should just use the flask development server while you are developing. But you wouldn't restart nginx you would restart gunicorn. 
I want the opposite of that- I want to be able to access all libraries rather than try to remember what I put where.
Why need an excuse? Good software grows like wine. Long.
No, you have the cause and effect backwards. Google sorts results based on popularity, and at the moment most python code written and used is python2. So a lack of python3 adoption is holding back your google results. 
Surprised Google doesn't have a documentation search engine, kind of similar to Google Scholar, but for docs.
They wanted to see me write something on the fly, and it was the first thing one of them brought up so I just did it really quick. It was an interview question, not a customer project lol. 
&gt; * file operations; * file/directory paths extraction; * file/directory paths randomization; Any reason why you don't [`pathlib`](https://docs.python.org/3/library/pathlib.html) for file operations? It is part of the standard library and there is a backport for py2, also it acts os agnostic and offers a very nice interface to interact?
shutil is the way to go when you cannot find something that fits your needs in os :-)
I thought you were going to complain about app engine stuck on 2.7 I can move up until port their underlying code. (or decide to move off google hosting)
It was until yesterday, when I decided to switch to a class instead for it seemed like a bit more readable (yet much more verbose) alternative. Anyways, thanks for pointing this out, I think I will finally re-consider that in favor of `namedtuple` though.
(I'm the lead developer of Zulip, so obviously biased) There's various differences in the feature matrix, but here's some of the things that are important to me: * Topic-based threading. Zulip's system for threading conversations in unique and different from Slack and its direct clones. It makes a huge difference in my ability to participate efficiently in chat.zulip.org (the Zulip development community, which sends 4K messages/week). * Licensing. Zulip has a permissive Apache 2 license. Mattermost has a complicated copyright and trademark licensing story that ensures nobody can distribute a patched version of Mattermost without renaming it: https://www.mattermost.org/licensing/. This effectively prohibits distros like Debian from including a "mattermost" package. * Level of community involvement. If you look at https://github.com/zulip/zulip/graphs/contributors, you'll see that the 50th most active contributor in Zulip's server has 25 commits merged into the project. For Mattermost, that's their 20th most active contributor, and most of the more active people are employees. * Polish. This is more subjective, but we often hear from people who tried both and picked Zulip because Mattermost was too buggy. 
Yes, that would a one great improvement.
Wow, I've been doing writeups with typos for years in sublime. I had no idea about a spell checker! Jeez. 
Okay, so let me try and figure out where you're currently at. &gt; pyenv is installed &gt; .bash_profile has been updated Did you reload .bash_profile or log out / log back in / restart your terminal? Accessing everything from a single location is pretty much the definition of unpythonic -- if it helps, you can think about it in terms of containers. "I want to play around with a new library, so let's put it in this container. Do I like the library and it does what I want? Let's install it into my main container." You will have to install the packages into the virtual environments created with pyenv. For example: `pyenv install 3.6.0` `pyenv virtualenv test 3.6.0` `pyenv activate test` do stuff() `pyenv deactivate` `pyenv virtualenv project-name 3.5.2` `pyenv activate project-name` Does that help?
1. Use [DuckDuckGo](https://duckduckgo.com/bang?c=Tech&amp;sc=Languages+(Python\)). 2. `!py subprocess` takes you to [this page](https://docs.python.org/3/search.html?q=subprocess).
Probably within a few days.
And the plots in [the paper](https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.116.061102) appear to have been made with matplotlib.
Oh so there's no way to put stuff like IDLE and Anaconda that I already have "in the box" of pyenv, I need to get rid of my old stuff and just install it all fresh in pyenv?
&gt; However, as I remember pathlib is not supported in Python prior to 3.4 which is contrary to the recent argument of implementing Python 2 support to facilitate wider adoption, which I tend to accept. As I said there is a backport for the prior versions pip installable with `pip pathlib`. Since it is written in pure python it should be no problem besides company restrictions to install it on any machine. But it would be worth it to ask for an restriction exception for that lib, since it is standard since 3.4 anyways.
If you're keen to open source this (github), I'd love to contribute to a reporting mechanism. ETL and reporting are my favorite tasks, weirdly enough.
Maybe "Barback" or similar title is more appropriate?
`conda` or `virtualenv` 
I see, this is definitely worth considering, thanks.
Huh, so why would someone ever recommend pyenv? Now that I have it how do I get rid of it without things getting fucked up? I also can't seem to get conda to install IDLE
Thanks! I edited my post with the solution I made
I'm not exactly sure why this package would be widely adopted. /u/KleinerNull is right, using `pathlib` would get rid of: * `extract_file_name_with_extension` * `FileNameAndExtension` * `extract_file_name_and_extension` * `extract_file_dir_path` --- * Renaming `ast.literal_eval` to `parse_tuple_from_string` is odd and could be removed. * `generate_hex_uuid_4` just renames another stdlib function and would be unnecessary if `tempfile` was used to create temporary files/directories * `generate_random_dir_path` could probably be replaced by using `tempfile.mkdtemp()` or `tempfile.TemporaryDirectory()` * `generate_random_file_name_with_extension` could probably be replaced by using `tempfile.mkstemp()` or `tempfile.TemporaryFile()` * `get_class_name` and `get_class_qualname` simply access an attribute * Since reading a file is so easy in Python, I'm not sure why someone would want to import `read_file` and then potentially have to jump to another file just to check on how it was implemented. Same thing goes for `create_or_update_file`. * I'm also not exactly sure what problem `camel_or_pascal_case_to_snake_case` or `camel_or_pascal_case_to_space_delimited` solve and I don't think that I would install a package for either function. Where would this be useful? This seems like a code challenge more than anything. * Couldn't `yield_file_paths` be replaced with `glob.glob()`? Or someone could just use `os.walk` or `os.listdir` on their own? * `get_all_subclasses` is interesting but I'm not sure I'd install a package on the off chance I needed such a small function --- TL;DR Most of the things in this package simply rename standard library functions or mimic functionality already included in the standard library. It ***might*** be a better idea for people to just learn more about the standard library instead of adding another dependency to a project. The standard library is already well tested too! 
It makes my wonder why alot of people still using `os` for dealing with paths and files because PEP 428, which introduced pathlib to the std lib is from 2012! **5** years ago! And 3.4 was released 2014, 3 years ago! Except legacy code pathlib should be the standard way in learning resources and tutorials. Especially since it avoids alot of mistakes, confusion and errors involved by doing the stuff manually with `os`... BTW since your setup requires pytest-runner the user has to install additional libs anyway, so adding pathlib should be that kind of a deal.
You need to use `()` to create an instance, and then use the newly created instance "obj", not the class name: obj = TestClass() obj.setX(1) BTW a function inside a class is called a method. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
&gt; I'm not exactly sure why this package would be widely adopted. Wouldn't judge that hard. This repo looks more like a learning experience for packaging and deploying to pypi than a real lib for production purposes. Still the non-acceptance or better non-knowledge of pathlib bugs me...
I have no clue how I missed that. Thanks!!
FWIW, we generally don't use getter and setter methods in python (methods that do nothing but get or set a instance variable). In python, all those variables are exposed, so we just get or set them directly: obj = TestClass() obj.x = 1
Oh. I did it like that because I heard somewhere that it was better for later, but that may have been for a different language. Thanks again!
Thank you for such an extensive response! &gt; using pathlib would get rid of... It will, indeed. &gt; Renaming ast.literal_eval... &gt; generate_hex_uuid_4 just renames another stdlib function... True. &gt; generate_random_dir_path could probably be replaced by using tempfile.mkdtemp() or tempfile.TemporaryDirectory() &gt; generate_random_file_name_with_extension could probably be replaced by using tempfile.mkstemp() or tempfile.TemporaryFile() Didn't think about those, gotta dive into the docs further. &gt; get_class_name and get_class_qualname simply access an attribute True, merely a shortcut. &gt; Since reading a file is so easy in Python... Well, to my mind why not save yourself a few extra keystrokes. &gt; I'm also not exactly sure what problem... I've used in a few recent projects of mine. &gt; Couldn't yield_file_paths be replaced with glob.glob() True, didn't think of `glob`bing there.
Python Dev for hire! Currently building data driven products for NY startup accelerator. Daily dealing with developing backend (Flask + Celery + SQL + AWS + docker + tests for all important parts) and simple fronted (javascript/jQuery). Plus pandas from time to time. Have extensive experience with few projects in Django on side. Looking to re-allocate ideally to London, but don't mind some other local global villages in Europe. Would love ltd contract. Please only direct deals. No agencies.
&gt; Wouldn't judge that hard. You are right, I should have phrased that better. &gt; Still the non-acceptance or better non-knowledge of pathlib bugs me... I agree, `pathlib` is very useful and should be used more. 
My personal killer feature is still `Path.mkdir(parents=True, exist_ok=True)`. Creating all needed parent directories and don't throw errors for existing ones, BOOM. Deeply structured directory trees here I come :D
You can install anaconda as a python version; see here: http://geek.oops.jp/2016/01/10/how-to-install-pyenv/
No problem! I wouldn't pretend that I have extensive knowledge of every bit of the Python standard library but I just wanted to show that these particular functions (in your package) had equivalents already included. I can't even remember how many times I've done the exact same thing by writing a function to solve some problem only to later find out it is a solved problem in the extensive Python stdlib. &gt; I've used in a few recent projects of mine. I'm curious about what exact problem(s) you've had which required changing `camelCase` to `snake_case`. I have only ever come across that problem on code challenge websites but you seem to have these issues on multiple projects? 
&gt; True, didn't think of globbing there. BTW `glob` is part of all pathobjects automatically, so no need to even import it ;) In [1]: from pathlib import Path In [2]: home = Path.home() In [3]: list(home.glob('*.txt')) Out[3]: [PosixPath('/home/kleinernull/result.txt'), PosixPath('/home/kleinernull/modules.txt'), PosixPath('/home/kleinernull/outdated.txt'), PosixPath('/home/kleinernull/error.txt')] In [4]: list(home.rglob('*.txt')) # for recursive search of all sub directories, can take a while... Out [4]: [very lot of txt files ;)] 
Very slick, thanks for sharing!
I agree. It only means that a full hash is required.
Ah, I just gave up and cleared everything besides anaconda off my bash_profile, while trying to figure this out I found out I can just run idle with all the anaconda modules/libraries (not sure if that's the right terminology). Between figuring out to change "which python" via bash_profile and using IDLE with whatever build of python I have that's solved the actual need I had, and I'm going to revisit this when I'm a little more literate with the terminal. Thanks though, at least trying to get it working helped me figure this out.
Nah. Use the parens. Works both ways.
That is so much cleaner than what I was doing, thank you! And thanks for the reference, will definitely be checking out your git!
Thank you!
Uh. Is'nt python one of the most staffed language? Meaning it's not very hard to find a python job these days. And they are definitly not ”a dime a dozen”, from what i read it's one of the best paying languages… there may be country specificities, but python skills are actually in high demand
In remote Papua. Send me a pm with your email and I will send you a bit bucket link when I have my computer.
It has a bunch of stuff, but it seems to be most widely used in scientific computing and machine learning circles.
You're welcome it's a great reference book, but haha I wish that was my git! I'm just a learner like yourself :) 
I have no clue what's happening under the hood but I always assumed vectorized operations were also loops somewhere deep down, if it's easy can you explain how vectorized functions work without looping?
I haven't been around the SciPy community in years (since ~2005) but I used to maintain a Windows installer for scientific computing tools, including SciPy, NumPy, compilers, etc. for the folks at Enthought. I ported it from a WISE package to a Python msi builder just before I left, but I have no idea what happened to it after that (I started my own company in an unrelated field, so I haven't touched SciPy in years). I'm pretty sure they kept building Open Source installers for Windows for several years, as most of their deployments were on Windows. I know Anaconda was also available for Windows and it included SciPy. But, being able to pip install it is better than a big bundle or oddball packages.
While I have you, when I do install 3.6.2 on pyenv, I get this: BUILD FAILED (OS X 10.12.6 using python-build 20160602) Inspect or clean up the working tree at /var/folders/8y/mdsxyr_s6jb7fqk82_67cffm0000gn/T/python-build.20171025184800.56954 Results logged to /var/folders/8y/mdsxyr_s6jb7fqk82_67cffm0000gn/T/python-build.20171025184800.56954.log Can I just delete these files to get it working?
It resolve a lot of dependencies that are not python packages. Like c and Fortran libraries. And make virtual env creation a charm. If you are not interested in scientific computing you can forget it for a couple of month or all your life.
Almost everyone I explain DuckDuckGo's bangs to seems to think it's useless. But really it's the main reason I use it.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Does anyone have experience with the Flask ones? Been meaning to dive in for a while
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
LOL, I definitely didn't read that thoroughly!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Yeah, but the bulk of python devs are not python devs. Most of us are sysadmins, infosec, or whatnot. Python is a great language because everyone can just pick it up and start writing functional code, so to have the skills to get a position as an actual python developer is fairly uncommon, at least in my experiences.
Raw strings don't escape regex for you, they prevent Python's string escaping. So a backslash in your string is never interpreted as part of an escape sequence by Python. However, you still have to do the relevant regex escaping - it's just that now you only need one backslash instead of two. 
it's still good to memorize it, but yes, your right
There's no way to "mass escape" characters?
docker 
There is, but honestly most of the power of regex lies in its special sequences. It's not usually what someone would want. I advise that you do your escaping yourself. It you don't necessarily have control over the string, there is `re.escape()`.
For what it’s worth, my devops team just switched from pipenv to pip plus requirements.txt because they had issues with breaking changes in pipenv due to version churn. 
I think my point was that a deletion needs the highest burden of proof. You only delete something if you have in fact done a full hash, and those full hashes match.
It's for Windows user, because Windows is a horrible development platform.
I think it’s faster than iterrows but waaaay slower than actual vectorization.
I just stumbled on that (way harder to find than I would have thought) but now for some reason my function doesn't actually do anything now, it just passes the same string that came in.
But just to be clear, you can get all of this with standard python and `pip` and a little time/know-how - Anaconda just makes it easier, and it may be an easier dependency for certain types of users to satisfy.
 removed = r"0123456789(.)+,|[]{}=@/~;^$'&lt;&gt;?-!*&amp;:#%_" s = re.sub(re.escape(removed), '' , s) return s Current code, now it does nothing for some reason.
This is not true. Python devs have a range of things they do. Yes, Python has more infosec and data scientists than, say, Ruby, but tons of Python devs work as web developers or devops. For example, me. 
&gt;Well, you know - you did answer "yes" to their question I literally didn't, Jesus Christ get the fuck off your high horse.
`pyenv`, `virtualenv` and similar tools are all really meant to isolate the dependencies of individual projects that you're working on. This keeps them from conflicting with each other and with the packages used by the system. Your tools, like IDLE or Jupyter should generally be installed globally using the system package manager (like apt on Ubuntu).
What do you have so far?
https://en.wikibooks.org/wiki/Non-Programmer%27s_Tutorial_for_Python_3 - Is a good start.
Yesterday I finished off my personal ML project unsuccessfully. I tried to classify whether LendingClub loans were likely to default or not. I generated random forests that were all accurate around 50% of the time... which is little more than an expensive guess! I'm still on an ML-that-influences-decisions kick though, so I'm hunting around for other questions to answer that have a similarly large feature set and corpus of data.
That actually really looks like fun 
&gt; I always assumed vectorised operations were also loops somewhere deep down At the risk of saying more than I know, I think this is true. The difference is in having a highly optimised loop written in C or Cython, versus a more general loop that uses more pure Python
Yeah I'm just going to stick with conda, now that I realized I can run everything I need on it for now.
So it request values of X It request values of Y It request values of Z It performs X / Y * Z and prints the result. I just need to know how to set the values of X and Y from a list / dictionary. Sorry we'll post the code when I have access tomorrow. 
Oog that's a mess sorry. Let's try again: Here's the link to the python tutor http://www.pythontutor.com/visualize.html#code=listy%20%3D%20%5B%5D%0Anpass%20%3D%200%0A%0Adef%20lt%28%29%3A%0A%20%20%20%20global%20npass%0A%20%20%20%20x%20%3D%20int%28listy%5B0%5D%29%0A%20%20%20%20y%20%3D%201%0A%20%20%20%20while%20y%20-%201%20!%3D%20len%28listy%29%3A%0A%20%20%20%20%20%20%20%20if%20x%20%3E%3D%20int%28listy%5By%5D%29%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20y%20%2B%3D%201%0A%20%20%20%20%20%20%20%20else%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20listy.insert%28y,%20listy%5Bx%5D%29%0A%20%20%20%20%20%20%20%20%20%20%20%20npass%20%3D%200%0A%20%20%20%20if%20y%20-%201%20%3D%3D%20len%28listy%29%3A%0A%20%20%20%20%20%20%20%20listy.insert%28y,%20listy%5Bx%5D%29%0A%20%20%20%20%20%20%20%20npass%20%3D%200%0A%20%20%20%20%20%20%20%20floop%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20%0Adef%20floop%28%29%3A%0A%20%20%20%20global%20npass%0A%20%20%20%20while%20len%28listy%29%20!%3D%2010%3A%0A%20%20%20%20%20%20%20%20listy.append%28input%28%22Integer%20please%3A%20%22%29%29%0A%20%20%20%20while%20npass%20!%3D%2020%3A%0A%20%20%20%20%20%20%20%20npass%20%2B%3D%201%0A%20%20%20%20%20%20%20%20lt%28%29%0A%20%20%20%20while%20npass%20%3D%3D%2020%3A%0A%20%20%20%20%20%20%20%20print%28%22Sorted%3A%5Cn%22%29%0A%20%20%20%20%20%20%20%20print%28listy%29%0A%20%20%20%20%20%20%20%20z%20%3D%20input%28%22Restart%3F%20%281/0%29%3A%20%22%29%0A%20%20%20%20%20%20%20%20if%20z%20%3D%3D%201%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20listy.clear%28%29%0A%20%20%20%20%20%20%20%20%20%20%20%20floop%28%29%0A%20%20%20%20%20%20%20%20if%20z%20%3D%3D%200%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20break%0A%20%20%20%20%20%20%20%20if%20z%20!%3D%201%20or%20z%20!%3D%200%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20print%28%22You're%20just%20being%20difficult.%22%29%0A%20%20%20%20%20%20%20%20%20%20%20%20break%0Afloop%28%29%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%0A&amp;cumulative=false&amp;curInstr=0&amp;heapPrimitives=false&amp;mode=display&amp;origin=opt-frontend.js&amp;py=2&amp;rawInputLstJSON=%5B%5D&amp;textReferences=false
Are you talking about console commands, such as when you give your program input, or you mean create your own append function? The latter is a concept called function overloading, which is actually absent in Python. If you provide more details of your program I could offer more insight
Thanks
What is this supposed to do and why is it not working
You're looking for "functions" but those functions you're looking for already exist (at least by name).
I was just using them to show what I was talking about. I wanted to make versions of those that I could use.
/r/learnpython https://gist.github.com/
So nerdy but I love it! Looks great
I wanted to create something that would allow me to draw values from variables with different values For example: item has 5 x and 10 y. If something: Print the x value of item If something else: Print the y value of item The way I described in my post may not even be an accurate way to do that 
You can create a class for your item and then definite whatever functions you want for it inside the class.
You need to be using a character set. What you have above is trying to match that entire gigantic string. The loop works because it breaks it down and runs it on a single character at a time. Put them inside of a [] (and escape the necesarry items in your pattern, should just be [, ], and - but test it yourself) and you'll be in business. `s = re.sub("[0123456789(.)+,|\[\]{}=@/~;^$'&lt;&gt;?\-!*&amp;:#%_]", '' , s)`
This is really good. Thanks alot. 
&gt; My end goal is to have all my environments draw on the same libraries If everything is pointing at the same libraries why are you bothering with virtualenvs at all? The entire point of using venv is so each environment does NOT use the same libraries as the others.
https://repl.it/NPPS/0
Does this website really need the entire code in the url?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Why? It's literally just an .exe ....
Because that was the answer I was given when I asked how to just use one library for everything.
That is fricking awesome, thank you. 
in that case, you're still looking for functions - ie: def my_nifty_thing(some_variable, some_other_variable): # do some stuff with your variables some_data = some_variable + some_other_variable return some_data
I struggled with ```pyenv``` and ```virtualenvwrapper```when I first started using them. Wrote a [tutorial](https://alysivji.github.io/setting-up-pyenv-virtualenvwrapper.html) going over everything I know + steps required to set it up properly.
Thanks! That's exactly what I need, the little pyenv docs and readme there is assumes quite a bit more than I have.
&gt; Get started in what, exactly? I started learning Python, I just use PyCharm and downloaded Python 3 from Python.org. What does Anaconda specifically offer? Think of it this way. Python is a programming language. People have used that language to create a bunch of modules (programs) that make it easier to solve problems and create things. Anaconda is a collection of those modules/tools. Some things Anaconda includes are: an IDE (Spyder), Jupyter (a tool for writing code and markdown side-by-side), R-studio (for statistical analysis), and other things too. That's my ELI5 i guess.
Oh dear. Get ready for X.0 problems!!!
Have you seen googles constraint solver? Just Saw It today and has a few classic CSP examples that are great to follow.
Numpy should be the way to go. But If you want to try something else, cython may speed things for you without a full rewrite
Working on a project planning Django app. Open source and allows the following: * Nested tasks * Comments * File attachments * GIS integration The Idea is that all tasks are executed somewhere and we have a map x gantt feature, where it filters out both ways, depending on map extent or task filters. This is for a saas we have that deals with large enterprises that needs to do a lot of regulatory paperwork
And then you can just call it v19 again for short!
You can delete the logs, but those are going to be the only things that tell you what went wrong. What does the error say? Maybe we can work out the fix.
Tengger Cavalry
Couldn't find a changelog... Anyone got a decent summary of the changes? I actually thought this project was dead, excited to see it coming back to life. If I could take advantage of it at work then it would really improve some work flows I have. 
What are we supposed to use instead of imshow?
Anaconda extends the concept of virtual environments for your python projects to binary dependencies with their 'conda' package manager. This is good because traditionally binary dependencies for python packages have to come from what is installed on your system, and can often times clash - especially when you start having different versions of packages in separate environments. It's become a whole ton more than that as well and there are entire 'channels' of packages geared towards specific use cases ([Bioconda](https://bioconda.github.io/) for example). You probably don't need it for learning python - but when you start running into problems with packages that are expecting external libraries and such, then I'd start looking into it more. It works just fine with PyCharm, and they also have support for specifically creating Anaconda environments.
Slayer
Rage Against the Machine
My mistake. Though it doesn't change that much - you still replied to someone elses comment saying that, going off on a wild tangent that still had nothing to do with the question.
Anything loud and fast if I'm bashing out code. Something a bit slower if I actually need to think about what needs to be done.. I.e (early) opeth, Metallica, iron Maiden for the first. Tool, rainbow, black sabbath for the latter
It varies a lot depending on my mood, lately it's been a google music station based on kavinsky. 
Damn that didn't paste well 
If you can't so much as manage to read the sidebar, you may not have a future in comp sci...
Animals as Leaders
A mix of Phil Collins, Barry Manilow, and Cannibal Corpse. A little ABBA if I’m feeling saucy. 
Silence, or white/nature noise. Always. Music distracts me, Especially loud. I can’t rage-program.
You used Python 2 on your Mac, and Python 3 on Windows. Python 3 changed `print` from being a magic built-in language feature to a normal function.
If that's your attitude towards your education you might just want to rethink things... hard.
You're right. It took Wine from 1993 to 2008 to go to version 1.0.
Was it ever really alive?
Ozric Tentacles
What IDE are you using, and how are you running your code? Also, questions like these are better suited for /r/learnpython.
I go for downtempo techno - lyricless is best. Recently I've been buying a lot of music that I found via the [SpaceAmbient](https://www.youtube.com/user/SpaceAmbient) channel on Youtube. I'm pretty sure they select music with the criteria: "Could you play this in a bar in Mass Effect?"... Either way, it's been the best zone-in music I've had in a while. 
Python 3.6.2 shell
Can you post a screenshot of your code running in the IDE?
&gt; `total = len(sequence)` Where is `sequence` defined? Or perhaps you meant `DNAseq`? Also, check out r/learnpython
yes I have corrected that. Still no dice.
Sure. Here it is https://imgur.com/asQr0Vv
And how are you running your code?
Try this: python path/to/script.py Paste any errors you see.
Wait I fixed it! GCcontent= ((GContent+CContent)/total))*100 Extra parentheses after total. Deleted it, worked! 
Fixed it GCcontent= ((GContent+CContent)/total))*100 Extra parentheses after total. Deleted it, worked!
I save it as a .py file and do Run--&gt;Run Module 
Then it should work, I think. Might be IDLE doing something weird. Try a different IDE, like PyCharm.
you don't have to restart nginx as it would just be a reverse proxy in general nginx use cases, usually you can get away with just a reload. You typically only have to restart it (which kills all connections as opposed to reloads) when you change a system config like a certificate, port, etc
Thank you, is PyCharm better for catching syntax mistakes as you go along? I fixed it when I did "check syntax". Had an extra parantheses
do you mind sharing some resources you used, or some code for that?
If later on you will need setter/getter methods you should use [property](https://docs.python.org/2/library/functions.html#property) 
http://www.technobase.fm/
Yes, it is.
I can rage-program but then everything turns into malware instead. It’s fucking crazy. 
Python 2 print("xyz") print "xyz" both are valid Python 3 print("xyz") is valid print "xyz" is invalid
Kanye
Someone should do this in such an over engineered and convoluted way that teacher will know there's no way you did it lol 
What exactly are you trying to do? If you are trying to scrape links recursively, you will want to find all a href tags with BS4 and send a request to each one one way is to create a basic requests parse function, parse the first page, put all urls into a list, then pass that to the function. Then you can store the data into a dict for referencing later e.g {'site1': ........, 'site2': .....} etc
Euphoric hardstyle or trance however I found i'd better listen to raw hardstyle or hardcore when I have to rush.
Honestly you should try to convince them that PowerShell is the way to go. Unless they already have a large collection of these WinBatch programs or you are scripting a Windows Server 2003 environment (which would be a waste of time since you could be spending it upgrading), then PoweShell is the way to go. There is a huge online code base for it and a tonne of documentation. 
The given example for Python 2 is misleading and should not being promoted! If somebody asks a question dealing with the behaviour of ``print``, one can implicitly assume that he is a *beginner*. Therefor he deserves a clear explanation and not a *dirty hack* that relys on syntactic similarities between a function call and a tuple and builtin behaviour of printing a tuple with one element...
It looks very much active if you look at the commit history.
Mark Lutz's book 'Learning Python' and MIT course 6.00 (2008) available on Youtube can be quite useful. If you are familiar with algorythmics and programming, then you should just read the syntax on Python official wiki. Also, Solo Learn app on Android is another nice tool for getting a grab on various basic methods in Python.
Oliver Schories
I believe once I get the job, I can convince them to move away from a dead technology. I've been reading a lot about WinBatch since my original post and the language is close enough to Python I think I should be able to pick it up fairly quickly. Or at least I hope so.
Thanks for the advice, I'll definitely do that!
&gt; urls after selecting one district for example AGRA and then click search, it will give page details, a table will appear i want to scrape that table , for all entries in the drop down. I dont have any experience with asp , if you can provide me an example that would be of great help
I have a decent idea of what they do with it already. I guess I'm spoiled because of the amount of resources available to learn Python, while WinBatch is basically limited to a few old pdfs and a book printed in 2003 (which I ordered from Amazon).
I did! The pipenv commit history is active, but for such a big shift in work flow, I’d expect more than crickets from other channels. For example, if this is nearly done, wouldn’t there have been a PyCon talk?
Yeah it seems odd. Either way community adoption doesn't matter that much as long as the tool is maintained, but I guess there's a strong correlation. I think that you should look at whether there is anything else similar in use that's more common. If not, I'd say that the python community has some catching up to do. 
Nim looks indeed very nice but the very small community, the lack of major support and the lack of libraries is a no-go for me.
And my point still stands. If you're going to play the "Does your editor do THIS?" game which he clearly was with his old, paid feature screenshot, then you should probably pick an editor that can edit a C file. Call that a crazy tangent if you want, I guess. Have fun being disingenuous as shit.
PyCon doesn't accept every talk submitted, and not every project submits a PyCon talk every time they do something.
Installing all of the libraries can be a pain if you're using MS Windows, Anaconda (https://www.anaconda.com/) or one of the other pre-packaged Python distributions can make it a lot less painful. Anaconda includes all of the libraries you listed and Spyder, a fairly solid IDE. Good luck!
Woof
You can probably try translating your MATLAB works into Python as practice (the numpy library will be helpful for matrices).
lol. 15 responses and the only vote is a downvote.
&gt; the very small community Indeed. Sometimes it feels like there are less than 100 people using Nim in the whole world :) &gt; the lack of libraries Hopefully this will get somewhat better when v1.0 is out (rumors are this will be very soon), but I don't expect miracles. And most certainly don't expect to see Python-level of ecosystem.
As you already know how to code I would suggest jumping to a high level resource right away. Check out this book: https://jakevdp.github.io/PythonDataScienceHandbook/ It is a good intro to the scientific stack. The context (data science) is probably not what your looking for, but you can apply the information in other fields as well. Other than that, take the last 10 matlab scripts you wrote and try to achieve the same thing in Python. Just googeling will get you going.
hi, i have reached till here: import requests from bs4 import BeautifulSoup import os import time import csv url = "http://upreraportal.cloudapp.net/View_projects.aspx" headers= {'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8', 'Accept-Encoding':'gzip, deflate', 'Accept-Language':'en-US,en;q=0.8', 'Cache-Control':'max-age=0', 'Connection':'keep-alive', 'Content-Length':'2922', 'Content-Type':'application/x-www-form-urlencoded', 'Cookie':'ASP.NET_SessionId=syk2ntjk3ceffibbwq4nert4', 'Host':'upreraportal.cloudapp.net', 'Origin':'http://upreraportal.cloudapp.net', 'Referer':'http://upreraportal.cloudapp.net/View_projects.aspx', 'Upgrade-Insecure-Requests':'1', 'User-Agent':'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36'} formfields={'VIEWSTATE':'9VAv5iAKM/uLKHgQ6U91ShYmoKdKfrPqrxB2y86PhSY8pOPAulcgfrsPDINzwmvXGr+vdlE7FT6eBQCKtAFsJPQ9gQ9JIBTBCGCIjYwFuixL3vz6Q7R0OZTH2cwYmyfPHLOqxh8JbLDfyKW3r3e2UgP5N/4pI1k6DNoNAcEmNYGPzGwFHgUdJz3LYfYuFDZSydsVrwSB5CHAy/pErTJVDMmOackTy1q6Y+TNw7Cnq2imnKnBc70eldJn0gH/rtkrlPMS+WP3CXke6G7nLOzaUVIlnbHVoA232CPRcWuP1ykPjSfX12hAao6srrFMx5GUicO3Dvpir+z0U1BDEjux86Cu5/aFML2Go+3k9iHiaS3+WK/tNNui5vNAbQcPiZrnQy9wotJnw18bfHZzU/77uy22vaC+8vX1cmomiV70Ar33szSWTQjbrByyhbFbz9PHd3IVebHPlPGpdaUPxju5xkFQIJRnojsOARjc76WzTYCf479BiXUKNKflMFmr3Fp5S3BOdKFLBie1fBDgwaXX4PepOeZVm1ftY0YA4y8ObPxkJBcGh5YLxZ4vJr2z3pd8LT2i/2fyXJ9aXR9+SJzlWziu9bV8txiuJHSQNojr10mQv8MSCUAKUjT/fip8F3UE9l+zeQBOC++LEeQiTurHZD0GkNix8zQAHbNpGLBfvgocXZd/4KqqnBCLLwBVQobhRbJhbQJXbGYNs6zIXrnkx7CD9PjGKvRx9Eil19Yb5EqRLJQHSg5OdwafD1U+oyZwr3iUMXP/pJw5cTHMsK3X+dH4VkNxsG+KFzBzynKPdF17fQknzqwgmcQOxD6NN6158pi+9cM1UR4R7iwPwuBCOK04UaW3V1A9oWFGvKLls9OXbLq2DS4L3EyuorEHnxO+p8rrGWIS4aXpVVr4TxR3X79j4i8OVHhIUt8H+jo5deRZ6aG13+mXgZQd5Qu1Foo66M4sjUGs7VUcwYCXE/DP/NHToeU0hUi0sJs7+ftRy07U2Be/93TZjJXKIrsTQxxeNfyxQQMwBYZZRPPlH33t3o3gIo0Hx18tzGYj2v0gaBb+xBpx9mU9ytkceBdBPnZI1kJznArLquQQxN3IPjt6+80Vow74wy4Lvp7D+JCThAnQx4K8QbdKMWzCoKR63GTlBwLK2TiYMAVisM77XdrlH6F0g56PlGQt/RMtU0XM1QXgZvWr3KJDV8UTe0z1bj29sdTsHVJwME9eT62JGZFQAD4PoiqYl7nAB61ajAkcmxu0Zlg7+9N9tXbL44QOcY672uOQzRgDITmX6QdWnBqMjgmkIjSo1qo/VpUEzUXaVo5GHUn8ZOWI9xLrJWcOZeFl0ucyKZePMnIxeUU32EK/NY34eE6UfSTUkktkguisYIenZNfoPYehQF9ASL7t4qLiH5jca4FGgZW2kNKb3enjEmoKqbWDFMkc8/1lsk2eTd/GuhcTysVSxtvpDSlR0tjg8A2hVpR67t2rYm8iO/L1m8ImY48=', "__VIEWSTATEGENERATOR":'4F1A7E70', '__EVENTVALIDATION':'jVizPhFNJmo9F/GVlIrlMWMsjQe1UKHfYE4jlpTDfXZHWu9yAcpHUvT/1UsRpbgxYwZczJPd6gsvas8ilVSPkfwP1icGgOTXlWfzykkU86LyIEognwkhOfO1+suTK2e598vAjyLXRf555BXMtCO+oWoHcMjbVX2cHKtpBS1GyyqyyVB8IchAAtDEMD3G5bbzhvof6PX4Iwt5Sv1gXkHRKOR333OcYzmSGJvZgLsmo3qQ+5EOUIK5D71x/ZENmubZXvwbU0Ni6922E96RjCLh5cKgFSne5PcRDUeeDuEQhJLyD04K6N45Ow2RKyu7HN1n1YQGFfgAO3nMCsP51i7qEAohXK957z3m/H+FasHWF2u05laAWGVbPwT35utufotpPKi9qWAbCQSw9vW9HrvN01O97scG8HtWxIOnOdI6/nhke44FSpnvY1oPq+BuY2XKrb2404fKl5EPR4sjvNSYy1/8mn6IDH0eXvzoelNMwr/pKtKBESo3BthxTkkx5MR0J42qhgHURB9eUKlsGulAzjF27pyK4vjXxzlOlHG1pRiQm/wzB4om9dJmA27iaD7PJpQGgSwp7cTpbOuQgnwwrwUETxMOxuf3u1P9i+DzJqgKJbQ+pbKqtspwYuIpOR6r7dRh9nER2VXXD7fRfes1q2gQI29PtlbrRQViFM6ZlxqxqoAXVM8sk/RfSAL1LZ6qnlwGit2MvVYnAmBP9wtqcvqGaWjNdWLNsueL6DyUZ4qcLv42fVcOrsi8BPRnzJx0YiOYZ7gg7edHrJwpysSGDR1P/MZIYFEEUYh238e8I2EAeQZM70zHgQRsviD4o5r38VQf/cM9fjFii99E/mZ+6e0mIprhlM/g69MmkSahPQ5o/rhs8IJiM/GibjuZHSNfYiOspQYajMg0WIGeKWnywfaplt6/cqvcEbqt77tIx2Z0yGcXKYGehmhyHTWfaVkMuKbQP5Zw+F9X4Fv5ws76uCZkOxKV3wj3BW7+T2/nWwWMfGT1sD3LtQxiw0zhOXfY1bTB2XfxuL7+k5qE7TZWhKF4EMwLoaML9/yUA0dcXhoZBnSc', 'ctl00$ContentPlaceHolder1$DdlprojectDistrict':'Agra', 'ctl00$ContentPlaceHolder1$txtProject': '', 'ctl00$ContentPlaceHolder1$btnSearch':'Search'} #i dont know how to make payload resp = requests.post(url, data=formfields, headers=headers) data=resp.text #print(data) soup = BeautifulSoup(data,"html.parser") get_details = soup.find_all(id="ContentPlaceHolder1_GridView1") print(get_details)# whenever i run this code it prints empty list ## i dont know how to get details of each list from the dropdown 
If you're supporting Py3.x then you should support Py3.latest. If you had written a package that enhances string formatting, then you would want to support f-strings, which are 3.6 only. Thus, you should support pathlib :) In a subsquent release.
The wheels of progress grind slowly in Pyland. Be thankful that supporting 3.x is no longer controversial!
Actually you could do this before the intro of `pathlib` -- a flag to the analogous pre-`pathlib` function (reference on request, code-rummaging rquired) would do that for you too.
camelCase would be a personal preference - a muscle-memory kinda thing (I can't imagine that it would be the 'solution' to any problem that would arise in developing this : ) 
&gt; What does Anaconda specifically offer? In some environments especially Windows OS, sometime it is hard to build certain modules (eg: Numpy &amp; Scipy) from sources. Anaconda gives you an out of the box IDE with hundreds of ready to use modules. 
PyCharm Community Edition (PyCharm CE) is free, especially if you're a student. (smile)
&gt;And my point still stands Uh, how? How is it anything in relation to what they were asking? &gt;then you should probably pick an editor that can edit a C file Why? Does that have **anything** to do with the feature he asked about? &gt;Call that a crazy tangent if you want, I guess I did. I still do.
[clonedigger](http://clonedigger.sourceforge.net/). It's been forked on github. As a result it's available with `pip install clonedigger-jl`
[pip-compile and pip-sync](https://github.com/jazzband/pip-tools) solve most of the same problems, and work right now - you get pinning, updating, notes on transitive dependencies, environment cleaning, etc. The only things Pipfile adds is official recognition, and somewhat improved support for checking hashes. 
For sure. The problematic bit isn't "optimisation" - it's "premature". Actual funny thing about the origin of that phrase: it came from the late great Tony Hoare originally. But Knuth put it writing so it's always credited to him.
Glad to see VisPy back from the dead
 http://theory.stanford.edu/~aiken/moss/ 
I would start from [this article](https://docs.scipy.org/doc/numpy-dev/user/numpy-for-matlab-users.html) dedicated to MATLAB users that want to start using Numpy
It would make me very happy to see you fix it yourself, it's just tough luck if you haven't got the skills and nobody else is interested.
Which kind of battery do you use and how long do they last?
Well, I'm not too optimistic when I compare to the relative success of go and rust in a shorter time. And I also think that some of the design/syntactic choices are a but weird, but I wish them to succeed.
My understanding is that python scripts can be used to automate SecureCRT. As such the required modules are already loaded and accessible from within Secure CRT. With other words, you can’t write a python script, import SecureCRT modules and run it straight from python. Alternatives without SecureCRT: paramiko for ssh/sftp, telnetlib for telnet, ftplib, etc.
I'm using a 10,000mAh cell phone battery charger pack. It'll drive the Pi with a USB WiFi dongle for several evenings. I haven't powered the LED strip from it yet, but they draw between 600mA and 2.5A so I should get a few hours at least.
I suggest you take a look at [str.translate](https://docs.python.org/3/library/stdtypes.html#str.translate) rather than use `re.sub`.
Something that mimics Gemfiles? No thanks
Nice work ! I had a quick look at the code and have two comments: You should move the definition of the `VM` class elsewhere than in `__init__.py`. Most of the time (IMO) the code in `__init__.py` is related to setting up the stuff you just imported or playing with the imports mechanisms not implementing a class of your code logic. In `VM.interrupt` you raise a `RuntimeError` if you don't handle the syscall/interrupt number, that seems a little overpowered. (IIRC a RuntimeError is for cases when something went wrong in the Interpreter internals) you may want to change that to `NotImplementedError` or something similar.
I was going to say [automate the boring stuff](https://automatetheboringstuff.com/) but since you're already well versed with programming, you're better off converting your existing Matlab stuff to python with help of the documentation and comparing results to see if they work. Skim through the official tutorial in the official docs to get started.
&gt; the relative success of go and rust in a shorter time Well, backing by Google/Mozilla sure doesn't hurt ;) But I agree with your comment in general. 
Ambient Electronic. I made a Spotify playlist of handpicked songs that are great in the background but do no distract from your work. Very minimal lyrics. https://open.spotify.com/user/grundoko/playlist/6Dk3JGDcmZlnTgMU3mDCvc
ah, so re.whatever(re.escape(['bunchofcharactersforthefirstarguement'])) means I wouldn't have to use the for loop? I'm at work now so I can't test sadly.
You actually provided a link. Thank you.
If im not mistakin its an ide that prevents you to learn lots of key things.
I struggled with laying out a flask project last week. Eventually I found project layout to SailsJS to be most effective/productive for me. I have extensive NodeJS experience with SailsJS and I find their layout very logical. / /config /api /models &lt;- DB models go here /controllers &lt;- routes and controllers go here /services &lt;- business logic goes here 
Sabre dance is my goto https://www.youtube.com/watch?v=gqg3l3r_DRI 
Don't. You'll break half your system. Call `python3.6` if you explicitly need Python 3.6.
Sorry, not the easiest to find. I forgot to link them: http://vispy.org/releasenotes.html Honestly, there were too many changes to properly document them all.
I never really got how this works: how do you install a new package with pip-tools without updating all your other packages? Eg: I have packages without versions in the input file, then pip-compile and it resolves current versions and writes that to output. I can sync this and run updates. Now I want to add a new package, but without updating all the existing package version, is that even possible?
Hmm, that kinda sucks. I guess ill learn MQL4 starting out but hopefully someone will make a reliable bridge between mql/metatrader and python.
First /r/learnpython is your go-to place for this. Second, pyautogui doesn't have the capability of returning the coordinates (at least from the little research I did) [Pymouse does though](https://stackoverflow.com/questions/25848951/python-get-mouse-x-y-position-on-click)
Expect the following pain points: -Python uses 0-based indexing -Python requires combing imports from several modules to do basic numeric computing that matlab includes in the global name space. eg: Numpy for matrices, Sympy for symbolic computation, and Scipy for integration and misc functions.
Can you run python3.6 executable? If so, I recommend just making an alias: alias python="python3.6"
Was this removed from one of the general programming subs? I followed it there and thought it was great.
Unfortunately it was.
If you are using SciPy odds are that you have matplotlib installed. Then just use the `imshow` function there.
They won't, because they can't. Well they could, but metaquotes have no interest in it. Creating their own language and ecosystem is to their benefit... There are a couple of libraries out there that let you interface python with metatrader. They aren't great, but they work just fine. 
Is it really painful to type pip install scipy into the cmd line?
Run the Jewels 
Here is a list of threads in other subreddits about the same content: * [Test Driven Development of a Django RESTful API](https://www.reddit.com/r/django/comments/68t4ok/test_driven_development_of_a_django_restful_api/) on /r/django with 40 karma (created at 2017-05-02 21:31:34 by /u/michaelherman) * [Test Driven Development with Django](https://www.reddit.com/r/webdev/comments/6bahth/test_driven_development_with_django/) on /r/webdev with 1 karma (created at 2017-05-15 21:51:30 by /u/michaelherman) ---- ^^I ^^am ^^a ^^bot ^^[FAQ](https://www.reddit.com/r/DuplicatesBot/wiki/index)-[Code](https://github.com/PokestarFan/DuplicateBot)-[Bugs](https://www.reddit.com/r/DuplicatesBot/comments/6ypgmx/bugs_and_problems/)-[Suggestions](https://www.reddit.com/r/DuplicatesBot/comments/6ypg85/suggestion_for_duplicatesbot/)-[Block](https://www.reddit.com/r/DuplicatesBot/wiki/index#wiki_block_bot_from_tagging_on_your_posts) ^^Now ^^you ^^can ^^remove ^^the ^^comment ^^by ^^replying ^^delete!
Can I run this on windows?? Sorry programming newb here and I saw you said in requirements you must have a UNIX like system
I admit that I've never wanted to do this myself - why not update everything to the latest version? If you have specific constraints, put the range in your input file and it will be respected. Remember that pip-sync makes it easy to keep your environment matching the requirements file! That said, it looks like `pip-compile - -update-package NAME[=version]` can be used to update a single package to a new, possibly specific, version. You might need to add a dummy entry first. 
Infected Mushroom - Vicious Delicious https://youtu.be/vJ6QxEfcs3c
I usually go for something more upbeat like Disclosure or The XX. I love pop too so I've been programming to come Carly Rae Jepsen and Beyoncé too :D
Why does your RE in section 4 have "[a-z]*[A-Z]*[0-9]*" before the URL? It seems unnecessary.
("foo") is a string not a tuple. 
I don't want to update everything anytime I need to add a single dependency when I just need to add a feature without going through the whole compatibility dance. I now have version constraints in the input file and use the compile to resolve and pin their depencencies. It is not perfect, I'm eyeballing OP's pipenv for a better workflow now.
I use it for all my new projects, I wouldn't call it dead. 
Cool!
&gt; without updating all the existing package versions. pin them if you don't want to upgrade them. if you just don't want to upgrade them in this instant, revert the lines in the output file that you don't want updated before syncing...
I started with C++ 0-based indices and hated it because they didn't look like my equations. Later, I went to Matlab and it's 1 based system and had problems with my loops. I went to Python and my loop errors almost entirely went away. 1-based systems are stupid in code.
Not now with scipy 1.0 because there are wheels finally. Try pip install vtk. Then try conda install vtk. Also, if you want numpy and scipy with the MKL libraries, which are 10x faster, you still need to use conda.
I am fairly certain this will run on windows, too. Just get a python distribution installed and hope that all the dependencies exist for your system.
To be fair ... I've only just stumbled on pipenv yesterday. Didn't really have time to digest but looked like the right way to go. So perhaps it isn't that common knowledge yet. 
Compatible with what? If you mean "all my dependencies are compatible with one another", pip-compile guarantees that will be the case (or gives an explicit error if its impossible). 
/r/learnpython http://www.omdbapi.com/ 
Yeah of course I would love that too but I have no idea what to do
I wrote a script that pulls my company's digital marketing analytics data from the following sources: Facebook, Google Analytics, Twitter, Pardot, and Youtube then writes the data to Salesforce (which is the main database our company uses and which my non-techy co-workers are comfortable working with). 
Ooops... you're right... it results in an *expression*! (Have to do more Python I think 😄 Nevertheless one shouldn't write it like that!
I second this. Beyond this, consider setting up a venv using your python3.6 executable. 
Thanks! I see from this that the mpl_plot module has been explicitly removed, but it was still lurking in the readme. I just submitted a quick pull request to remove that line. I did not ensure that the rest of the module structure section was accurate though.
It will. Install python, install git-bash for windows, install pip, and then use pip install in git-bash to get the dependencies. I do all my dev on windows. Sometimes it takes a little more work, but it does work.
I didn't down vote but your thread has nothing to do with python, which would be a valid reason to down vote. There are plenty of general programming subs.
It has everything to do with Python. The whole point of learning to program is to engage with a community of relevant interests. In our case, we work in Python. Part of that is sharing similar interests, while we're working in Python, such as listening to music. There's absolutely nothing wrong with that, and I'm not interested in targeting an irrelevant sub.
Thanks
It has everything to do with Python. A big part if programming for many is to engage with a community of relevant interests. (Refer to the "three-legged stool" of learning and mastering) Don't believe me? You're in a subreddit for just that, right now. Thus, sharing similar interests matters, and in our case, it's regarding Python. Listening to music while doing just that is something we can discuss and share with each other. There's absolutely nothing wrong with that, and I'm not interested in targeting an irrelevant sub.
&gt; The problem is that the test splits utf-8 code points If you're working with text, as you (probably) should be, code points are indivisible. You can't split `u"∀"` because its a single character. If you're splitting `u"∀"` into bytes (say) `b"\xE2\x88" and `b"\x80"` then: - Why are you working in bytes instead of text? If your data represents text, work with it as text, not bytes. - If you must work in bytes (why?), then you need to be careful to never split in the middle of a UTF-8 byte sequence. UTF-8 byte sequences can be 1, 2, 3 or 4 bytes. - If your data doesn't represent text, then why does it matter if it is being split in the middle of a code point? You must never, ever assume that you can split a byte string in arbitrary places if it contains UTF-8 encoded text, you must only split it at code point boundaries. &gt; The easy way is to write a simple Python program that takes a file as input, and inserts enough spaces in the right places so that no code point would be split across an N byte boundary (where N can be specified on the command line). If that's so easy, why don't you write it yourself? I don't see how this would solve your problem. Where are you supposed to put the spaces? Given the string: u"foo β∇δ∘丽-丸 bar" where would you put the spaces so that none of those code points are split? What value of N do you think you need? &gt; Then we can run the test corpus through the tool. Assuming this strategy even works, all that means is that your text will stop failing but the code will still be buggy. The problem here isn't that the test fails, so you need to change the test data to stop it from failing. The problem is that the code **wrongly** splits code points into invalid UTF-8 sequences.
Imagine someone writes a phrase before including the xkcd link in the same line, like 'I like this comic http://xkcd.com/256' Also see the Important Note 3 of the post.
This has nothing to do with Python and precious little to do with programming at all. What do you care what other people listen to while programming? Knowing what music other people listen to won't make you a better programmer, or teach you Python. Listen to whatever you like, or nothing at all. If you want music suggestions, try /r/music instead. 
Yes you can. The way the libraries are installed will be a bit different though. You can refer their respective documentation for Windows support.
Sounds like somewhere an integer exceeds the maximum limit that it can hold. Without giving us an exact error code it'll be a bit of a hassle to locate it though
I made a similar transition a few years ago. The biggest this is do not try to use python as a 1 to 1 matlab standin. It can (mostly) be done but you are doing yourself a HUGE disservice. One of the worst things about matlab is the near-total lack of namespaces whereas python, has extremely strong scoping. What that means is, be VERY, VERY, VERY weary any guide that tells you to do anything like th efollowing: from numpy import * from pylab import * # Which includes numpy, etc What this does is pull everything back into the global name-space. As such, any "python for matlab" users guide is often insufficient, even if they do not commit such sins. They can be useful for specific functions. (e.g. `eps` in matlab is `np.spacing`), but generally, you're much better off learning how to do the same types of things in the pythonic way. As such, I **highly recommend** [scipy-lectures](http://www.scipy-lectures.org/). Sure, some of it will be useless if you're experianced, but it will teach the python way of thinking about problems. Also, while I feel less strongly about this, I think that using matplotlib's object oriented interface is much better and more powerful than *just* using `pyplot`. Personally, I use `pyplot` to instantiate the figure and axes and a few other minor things, but I do most of the meat directly. Unless it is truly a one-off while parsing through data.
Agreed. Especially if the songs have lyrics. I get distracted by what artists are saying.
I suppose for every 22 willing, normal, participants, there will always be 2 dense, willfully arrogant muppets such as yourself. Have a good day!
You must be fun at parties...
It has everything to do with Python. A big part if programming for many is to engage with a community of relevant interests. (Refer to the "three-legged stool" of learning and mastering) Don't believe me? You're in a subreddit for just that, right now. Thus, sharing similar interests matters, and in our case, it's regarding Python. Listening to music while doing just that is something we can discuss and share with each other. There's absolutely nothing wrong with that, and I'm not interested in targeting an irrelevant sub.
https://www.udemy.com/biopython/?couponCode=LEARNDNAFOR20
It did 31 iterations and 15,238 function evaluations in trying to converge to a minimum but still hadn't converged with the required precision. So it gave up. Without knowing details of what exactly you are minimizing its not possible to tell you more. You can obviously increase the limits and hope that it converges with more iterations. You could also increase the step sizes, or the error tolerance, or change the starting point. Or try a different optimizer, or maybe your problem is just "badly" behaved near the optimum and doesn't have good mathematical properties these algorithms need to converge.
PLEASE: For all people looking to make a bot, please read bottiquette! https://www.reddit.com/wiki/bottiquette
It has everything to do with Python. A big part if programming for many is to engage with a community of relevant interests. (Refer to the "three-legged stool" of learning and mastering) Don't believe me? You're in a subreddit for just that, right now. Thus, sharing similar interests matters, and in our case, it's regarding Python. Listening to music while doing just that is something we can discuss and share with each other. There's absolutely nothing wrong with that, and I'm not interested in targeting an irrelevant sub. If this thread bothers you so much then ignore it. Because for every 1 of you, there are another 22 interested in being an actual community -- a group of Python developers and learnings, sharing common attitudes, interests, and goals.
Line 46, in module, Header.append(int('0x'+hexval[2:][2:],16)) I hope this is what you meant. 
Would it converge faster if I provide the partial gradient rather than having it calculate it itself?
This really should be in /r/learnpython. You'll likely get more help and a less hostile response (my own included). Best of luck!
Yes that would be preferable in many ways.
You never started your reader thread. In `
You create an array of unsigned bytes with `array('B')`, which means you only have 1 byte worth of space to store in the entry. If you try to put a value into it that doesn't fit in that size (i.e., it must be between 0 and 255), you'll get the error you're seeing.
Python 3's syntax is more constrained and correct, requesting the brackets
True, the reader thread is never explicitly started... but when I ran it in debug, and added a print statement to getData(), it did in fact run. Re-testing now with an explicit call to start().
Ah, right. I changed B to H, the error changed to line 35, in module Data_image.append(pixel[y,x]) MemoryError. Should I change something else ?
I followed this when it first got posted, it was really helpful. Thanks.
Video game music of some works well for me. Diablo II soundtrack is a go to. Or Chrono Trigger. I add some rain sound as well if my co-workers are being particularly chatty
Well, there you're trying to add to a different `array('B')`. I think you may need to step back and make sure what you're trying to do is correct since you have at least twice now encountered spots where the originally expected data doesn't match the data you're actually getting.
Thanks for the update, that helped me spot a few different things that I'd done wrong. Got it working now.
Why? 
As I said tough luck, just like the previous time you asked, unless you want to pay somebody to do the work for you.
When I first used it for the given examples (2 directories) it worked but when I gave my own input which has 82 directories , it fails. That's what confused me as if data types were a problem it would have not worked for anything. 
I'm open to payment. I need this fixed, I need to generate a clean report for Beast before Boost ships in December.
Is there perhaps one file (or some smaller number) that have a different pixel encoding, and thus push you outside the acceptable values? For the first problem, you're adding the number of files into the header data, so it's not surprising that that would eventually outgrow a small size if you have lots of directories you're working with.
Thanks. Didn't realose there's was one. Coding and reddit noob haha. 
I know someone suggested using re.escape() earlier, but you need to stop until you understand what it is doing for you. Write things by hand, get them correct, understand why it is correct, THEN use the convenience methods to save yourself time later. Second, the [] creates a character class. It work by matching any single item within the brackets. In your case it means not using the loop, but that isn't really an accurate description of what it represents. It also breaks/ignores most of the rules about needing to escape special characters, hence my comment above. You should take 30 minutes and read through the documentation. https://docs.python.org/3/library/re.html
Thanks for the recommendation! It's perfect listening so far. I don't know how similar it would be, but di.fm has several ambient stations as well.
&gt;If you're working with text, as you (probably) should be, code points are indivisible. The program in question is a suite that tests a WebSocket client. The WebSocket protocol requires implementations to validate text messages for utf8 compliance. The author broke some of the tests in the suite (the subject of the GitHub issue). The tests in question take a file, chop it up into chunks of fixed bytes (not code points) and send the contents as messages. There is supposed to be code in the test that ensures when the file is chopped up that utf8 code points are not split. &gt; If that's so easy, why don't you write it yourself? Easy for someone who is used to working in Python. &gt; Where are you supposed to put the spaces? Lets say N == 4096 (other typical values include 16384 and 65536). You insert enough spaces at file offset zero until no code point is split at offset 4096. Then you insert enough spaces at offset 4096 until no code point is split at offset 2*4096, and so on. The other solution is to modify the test to adjust the split locations to not break utf8 code points but that to me seems harder since it is often easier to write a small program from scratch than it is to understand someone else's program. 
[py3direct](https://addons.mozilla.org/en-US/firefox/addon/py3direct/) is a little gem :-)
This is sort of a general python question not really specifically about your bot... but how does one know about all the available libraries there are and what functions they may have? Is there some sort of "big list" that you can quick reference? How do you know to look in the requests library for a certain function vs the beautiful soup one? 
I've never really "learned" regex, I just kinda hack it together when I can't find another way to do with out. I downloaded a book on regex last night and I'm working my through it.
You already got loads of advice, but I just want to add that if you do a fair amount of matrix multiplications, then make sure you install at least Python 3.5 as it introduced the `@` operator for matrix multiplication (which is supported by numpy).
R handles one-based indexes pretty well, most for loops would be written as for (index in 1:nrow(my_dat_frame)) { ... } Which constructs a range from 1 to the number of rows. There's also seq_len and seq_along, which do similar things. If you're doing one-based indexes, you need to provide other tools that help people write loops, etc, but there is no inherent difference between starting at 1 and going until you reach the length and starting at 0 and stopping just before. One-based indexes are also easier to pronounce, especially in a statistical context: "The first observation" in a data frame is easier to say than "The zeroth observation". 
Don't forget to practice. I use [Pythex](http://www.pythex.org) to test simpler patterns and as a cheatsheet for basic syntax when I'm having a bad day. [RegExr](https://regexr.com/) is another great one. Live updates as you edit, color codes your regex and explains the parts, tons of examples to browse through.
Super useful thanks. Trying to decipher more elaborate character classes defined in some code is a mindfuck.
Please go find that person again and let them know, on my behalf, that they are an idiot and they should feel bad for giving out shit advice.
&gt; Some people, when confronted with a problem, think “I know, I'll use regular expressions.” Now they have two problems. One of my favorite quotes.
Direct link to the step by step tutorial with code and screenshots: [Design IoT solutions using Python and Zerynth](http://help.ubidots.com/connect-your-devices/design-iot-solutions-using-python-and-zerynth)
&gt; Which constructs a range from 1 to the number of rows. I don't know R, so is that inclusive of 30 or not? That's what screws up indices. Oh, the range(30) has a 30, so the length is 31... Then you have list slicing. Is `lst[1:30]` inclusive or not? It's all these edge cases that python seems to handle seemingly annoyingly when you first come to it that later you realize are good choices.
I doubt you'll get a very satisfying answer to your question. I'd wager that a lot of "knowing where to look" just comes from experience. You do enough similar projects and you get a decent idea of which tools are available and which tools are better at which tasks. 
If I'm understanding correctly, you can just do: `results_window = tk.Toplevel(self)` Future questions are better off posted in /r/learnpython
Appreciate you taking the time, thanks. 
RIP /u/SethMichaelLarson 
But also googling should not be underestimated. If you face a problem you might just look for a specific library googling by functionality, check the documentation and decide on using it. E.g. i have to integrate my python code with the reddit api, i dont want to handle all the http requests by myself, someone must have done it. I can look for a wrapper. So, i can just google "reddit api library python" and there are a few options.
Thanks again for all the help! Finished my assignment at about 3am, because I kept thinking of different ways to analyze the data and getting sidetracked instead of just finishing and getting some sleep! 
Thank you, I'll post there from now on. Also, thank you for that recommendation. I tried that as well: result_window = tk.Toplevel(self) but I received the error: AttributeError: 'MainApp' object has no attribute ' I'm not sure what I may be doing wrong...
But it doesn't cover whitespace.
Also, [aenum](https://bitbucket.org/stoneleaf/aenum/src) -- support for advanced enumerations, namedtuples, and constants 
So nothing new in this, it's simply a scanner and at the moment, it can just search for a string. I'm interested in adding modules to search for things like sql injection vulnerabilities, and any suggestions you guys can think of. Maybe something I can scan in the js? Let me know what you think. 
When you've installed the module from anaconda, just import it as "xgboost". If you download the archive from anaconda you can see it's defined in site-packages as `xgboost`
probably because bots are a menace, and making them that much easier to make lets them choke the subreddits more and more.
You should consider posting this on freelancing websites in that case. There are a few where you could get skilled coders to do it for relatively cheap (a lot of them for ~$20/hr), and if this problem is as well defined as you believe then you're likely to find someone who can crush this pretty quickly.
Awesome write up!
Interesting...what else have you done with reddit api/other sites api?
`findall` will skip anything that isn't part of the regex anyway.
Maybe not the answer you'd like but there are way too many libraries out there to quickly become familiar with them all. As you go about running into hurdles you'll consult the internet and be pointed to some library or another. Over time you'll develop a familiarity with the popular ones and eventually you'll have a feel for which library can provide the functionality you need. A year ago i didn't know what the requests library or beautiful soup was, but now i sit here reading your question and know you'll likely use both together, using requests to retrieve web data and beautiful soup to navigate it. 
You will find the Spyder IDE the most similar to Matlab, in order to help the transition.
Something that mimics Gemfiles? Yes please! 
Can you elaborate on your last statement? Pip will upgrade/install packages and make sure their deps are a new enough version. 
Awesome, I appreciate the direction. I tried "import xgboost" and I get an error "no such module xgboost". When I run "conda list" in the terminal I see the name as "py-xgboost".
 &gt;&gt;&gt; name = "Random" &gt;&gt;&gt; " * ".join([char.upper() for char in name+name]) 'R * A * N * D * O * M * R * A * N * D * O * M'
(Will try your code too) Oh, it didn't post like I wrote it. I want something like: R*A*N*D*O*M And some *A*N*D*O*M To go down from R.
I'm at work, so I can't do a thorough code review... But just from the text of your post, you don't need the parenthesis around `if` conditions. `if (tag.name == 'h2'):` could be more succinctly written as `if tag.name == 'h2':`. Thanks for sharing your work, OP!
I like [anaconda](https://www.anaconda.com/download/#linux), I started using a month or so ago and it seems really useful. [miniconda](https://conda.io/miniconda.html) is the tool with just the package manager instead of the entire python distribution that is anaconda 
We've been through this before, but your tutorial and your bot violate bottiquette. YOU HAVE PRODUCED A BLUEPRINT FOR BAD BOTS. Far better for the community would not be to recycle your old tutorial but to improve it and make a bot that adheres to reddit's guidelines. 
Put four spaces before the lines you just want to print and not do italics. Pretty ugly, but I was going for one line: &gt;&gt;&gt; " * ".join([char.upper() for char in "".join([name[i:] for i, x in enumerate(name)])]) 'R * A * N * D * O * M * A * N * D * O * M * N * D * O * M * D * O * M * O * M * M'
Format your code properly. And post questions to /r/learnpython. The reason for the error is that you're missing a colon at the end of the `elif`. 
Thank you for reposting this. I was using the way-back machine version of your post after it was removed. My bot using your instructions got complicated in the planning phases, but now I've successfully scraped Wiktionary!! Scraping has been so fun that I haven't gotten to the next part of bot-making, but my Raspberry Pi is all ready to go. Again, thanks. I needed a project with real goals to get me programming.
And mods got mad at this
As you're on Windows check to see if the hyphen has been replaced by an underscore, so you'll do the Anaconda equivalent of `pip install py-xgboost` but will then do `import py_xgboost`.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Let's say I write a package that requires numpy &lt; 1.13 (because I do). Now let's assume I'm on numpy 1.10 and I want to update numpy. I type ``conda update numpy``. Anaconda will detect that that my 3rd party package uses numpy and will give me numpy 1.12. I makes all the things work and doesn't just look at the explicit thing(s) I asked for. You have to opt in for that, but there are packages that do.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Sorry, I'll be sure to do so in future.
Synthwave, witch house, space ambient.
Thanks, but I didn't understand it. New to Python. (and sorry, this should have been posted to r/learnpython . I was on mobile and there are no things in the right there. )
but if I add colon its still not working
Then post the new code and the new error. We can't read minds. 
https://imgur.com/a/ldx8E elif and elif: both dont work 
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/sUmKcF6.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20doxdj5w) 
I know that one of the things that codeclimate checks for as part of continuous intergration is code duplication. I suppose you could check the assignment code into a repo with codeclimate enabled? The downside being either the code has to be public or you have to pay for it to run on a private repo, I believe. Alternatively, you could look at the tool that code climate uses, and repurpose it for your needs: https://github.com/codeclimate/codeclimate-duplication The final option is to assign to the class the task of building a tool which finds similar substrings...
The colon doesn't go there. You wrote `if name[-2:] == "ne":` so you must know that the colon goes at the end. The rules are the same for `elif`. 
oh yeah it was pretty stupid mistake but yeah i got it work now :D
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
One of the collaborators on the project. Keen to get some feedback. TIA
&gt; why not update everything to the latest version? Because moving from Django N to N+1 is a breaking change, and it can take a week or two to get everything working in the new version.
Hi! I know this is kind of old but the only reason I would watch the coding tech video is because of the comment section. Is there a way we could enable comments on Pydata vids?
I don't know, but it puts it in the URL.
It's supposed to be a sorting algorithm that selects a number and looks through the list to find a number larger than the selected number. If it doesn't find one, it places the selected number at the head of the list.
What?
Just silly things. I made a call and response bot that monitors for a certain phrase and replies. For example, I had one correct people when they wrote "sneak peak". I also started to make a user analyzer but I ended up stopping because I was very busy at the time. I haven't really worked with other public APIs. Mostly just internal APIs for school and work
Oh, I'm really sorry! Is this not a subreddit for help with python?
Noisly
Very nice! It hasn't seen love for a while, but my sub /r/redditscripting was a nice community of bot makers for a few months at the beginning of summer.
As a bot maker, I disagree, It takes almost no effort to ban a bot if they are being spammy/disruptive. 
Numpy would work great for this.
&gt; anvas = tk.Canvas(root) &gt; canvas.pack() &gt; &gt; # create an image and add it to the canvas &gt; img = tk.PhotoImage(file='/path/to/img.png') &gt; canvas.create_image(0, 0, img, anchor='nw') thanks so much 
Thanks for pointing that out. I'll look into improving the exception handling as soon as possible.
Exactly. 
https://imgur.com/a/hm2DF
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/mYbd3Ud.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20doxk296) 
That was the reason given by the mods.
https://imgur.com/a/lR1lM
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/xGJ91l5.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
Why do you require the comments.txt file to be made before running the bot? Why not just create it if it doesn't already exist?
Yeah it was unnecessary. I've removed it
This was meant to be a joke. Had no idea I offended people by posting this.
Yes it can be done. I just didn't do it because I didn't want to invoke file pointers at the time.
Take this script for example. 1. Google "python html parsing library", find beautifulsoup. 1. Google "python http library", find requests. 1. Google "python reddit api library", find praw. It's usually a good idea to look for relevant libraries if you can describe what it is you want to do. Any common task that you're doing that you know other people are also doing likely has one or more libraries, especially when you're dealing with a mature general purpose language like Python.
1. How much the API cost? 2. How much you evaluate your time? If 2 &gt; 1, just purchase the damn license. 
All you would need to do is use `open('comments.txt', 'a+')` and not worry about it. The `a+` option opens the file in for both appending and reading, and if the file doesn't exist, it will create it.
Can't wait to see more bots posting on Reddit
Can't give you explanation, I wish examples or docs stayed away from axis=0|1 and do axis='index'|'columns' instead.
Ctrl + shift + arrow keys - move the line the cursor is on up/down. Great for reordering notes.
I just made a rock, paper, scissors game 😯 I'm currently working on blackjack but the fucking cards won't add together. ... er... I mean I'm currently working on a sustainable method of procuring artificial data from a module and gathering the sum of that data, wherefor the end result will bring the continuation of a long held tradition in Native culture. 
Preface: I'm not engaging as a troll, I'm genuinely curious. Why is this a bad bot?
Are you sure about that? Because I am 99.9993% sure that jpflathead is not a bot. --- ^(I am a Neural Network being trained to detect spammers | Does something look wrong?) ^Visit ^/r/SpamBotDetection ^| [^GitHub](https://github.com/SM-Wistful/BotDetection-Algorithm)
Question from someone at your exact level. How are you formatting it? Is everything in functions? Are you using statements? I made one and it ended being a HUGE if statement... 
I don't think this is the answer. 
 print('The temperature in celsius is', T) --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
This is similar to how I started. Try to split the big if statement into chunks. Like, is the player performing an action? Parse their input a bit then pass it to the actions function. Is it a movement? Is it chat, etc
&gt; Are there any tutorials for web scraping that are specific to Espn? This is the same as asking: "I'd like to build an app, has anyone done this that I can copy from". Just find a tutorial on web scraping, and then do the work to analyze and parse ESPN FC, I guarantee it will not be that hard (unless ESPN has scraping safeguards in place, which is very possible). 
This is a good start but I guess you are still here to learn and just going from the examples of code shown here leaves things to improve. Don't: tag = soup.find('p') while True: if isinstance(tag, bs4.element.Tag): if tag.name == 'h2': break if tag.name == 'h3': tag = tag.nextSibling else: data = data + '\n' + tag.text tag = tag.nextSibling else: tag = tag.nextSibling Do: first_h2 = soup.find('div', id='mw-content-text').find('h2') for tag in first_h2.find_next_siblings(): if isinstance(tag, bs4.element.Tag): if tag.name == 'h2': break if tag.name == 'p' and tag.text: data += '\n' + tag.text.strip() There is almost always some way to not use 'while true'. Find the first headline in the content div and loop the sibling. Don't: match = re.findall("https://www.xkcd.com/[0-9]+", comment.body) if match: print('Link found in comment with comment ID: ' + comment.id) xkcd_url = match[0] print('Link: ' + xkcd_url) url_obj = urlparse(xkcd_url) xkcd_id = int((url_obj.path.strip("/"))) myurl = 'http://www.explainxkcd.com/wiki/index.php/' + str(xkcd_id) Do: match = re.search(r"https?://(?:www.)?xkcd.com/([0-9]+)", comment.body) if match: print('Link:', match.group(0), 'found in comment with comment ID:', comment.id) myurl = 'http://www.explainxkcd.com/wiki/index.php/' + match.group(1) Use [Capture Groups](https://docs.python.org/3/library/re.html#regular-expression-syntax) in [your regex](https://regex101.com/r/n838DC/1) and don't find all and use the first only. String &gt; Url &gt; int &gt; String is a lot of overhead for something regex does for you. So long. Have fun learning something new.
So ironically, or predictably a bad bot responded to you, u/perrycohen. https://i.imgur.com/NkIpQZq.png Perrycohen is a bot. Perrycohen could easily have been written with u/kindw's crappy bot script. Perrycohen is a bad bot that violates reddit's bottiquette https://www.reddit.com/r/Bottiquette/wiki/bottiquette + doesn't make just top level requests + adds nothing to the conversation and distracts from the flow since u/perrycohen came into say YOU were wrong in accusing me of being a bot, when you did nothing of the sort + writes replies to comments without being summoned. https://www.reddit.com/wiki/bottiquette \3. Doesn't provide an easy opt-out \7. Doesn't allow the user or moderator an easy way to communicate with the creator \10. Doesn't make clear the post was mad by a bot Bots that do things like that are bad bots. Most of these things are trivial to provide. Links to communicate to the creator? Trivial. Some are more difficult to provide: Only respond to top level posts? That makes my idea of a fun bot, a nazi grammar bot harder. Waah. Reddit doesn't like my bot that replies to all sorts of random comments. I am being oppressed. Some require some amount of storage, ie, the various opt out bots need to maintain the storage and other scripting required to support that. The bot tutorials are posted all the time and they are interesting, but reckless because they leave out the information required to make the bot and its creator behave ethically. It is like posting a recipe for fourth of july fireworks in r/learnchemistry without talking about the dangers.
Are you sure about that? Because I am 99.9999% sure that garriusbearius is not a bot. --- ^(I am a Neural Network being trained to detect spammers | Does something look wrong?) ^Visit ^/r/SpamBotDetection ^| [^GitHub](https://github.com/SM-Wistful/BotDetection-Algorithm)
Im formatting all if the rooms/areas as functions. In each function (room) are a set of several checks for different variables such as items in the inventory and specific choices made during previous levels in separate loops to handle invalid inputs. It then prints the description of the environment according to those different variables. The function ends as soon as you take the a path that leads to another function for the next area. I handle the inputs by setting up specific key words in a list for each function. Each function has a different list of acceptable inputs depending on what is most likely to be inputed for that level. I then check the input in the function (one of the few checks I put in the beginning of the function that I mentioned earlier) by looping through the list and checking if that word is present in the input. For example: A for loop goes through two lists. One for the action and one for the object they want to use the action on. So say the user's input is "open the door", the if statement in the for loop will basically be looking for the keywords "open" and "door". In this case the input has that. This is just a way to handle different variations of correct inputs. I know for sure that this isn't the best way to structure everything, but it's working for now and i'm definitely learning more and more as I go.
fuck off bot.
Thank you for the info, sorry I'm new to python and didn't know where to ask. Will definitely head that way thank you
fuck off bot.
Interesting, I like that take on it. I hadn't thought to do it like that. That might be a tiny bit above my paygrade because I don't understand it haha
Interesting. That's essentially what I've done, but I couldn't figure out a way to exit the initial statement. (Rookie shit). That game i made is essentially the worst code ever written. 
Just what i need to start learning. Thank you.
As a wild guess I'd say you are using Windows and you forgot to put the path in as a raw string. Don't forget the "r" in front of a Windows path! path = r"C:\new data\table.csv" If I'm wrong try /r/learnpython. Show them the code you have and describe where you are stuck. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Man, it just says invalid argument. Im so done with this shit.
Cool, no worries. Thanks. 
I don't really understand what you mean by replacing Redis with asyncio and PyPy. Redis is an in-memory store for data structures, whereas asyncio is a library used for concurrency via an event loop. Redis has many use cases, such as queues, caching etc. Celery can use it as a broker.
[Find A Way](https://play.google.com/store/apps/details?id=com.zerologicgames.findaway) is a nice puzzle…
I'm starting to learn Python.
DNA Hacking with Biopython | An Intro to Bioinformatics https://www.udemy.com/biopython/?couponCode=LEARNDNAFOR20
Pretty straight forward implementation. A couple of notes: I would add some unit tests. Is there a reason you wrote your own vector functions rather than using numpy which you commented out? Have you considered expanding beyond tri meshes? It doesn't look like much work
&gt; Not now with scipy 1.0 because there are wheels finally. Although `pip` has improved considerably in the last couple of years, it's still the wild west of package installation for Scientific Python. As *billsil* mentioned, for example, `conda` takes care of syncing numpy and scipy versions, while `pip` does not do that. I wish non-scientific Python users could stop to promote `pip` to install things other than pure Python packages. It would make the life of us maintainers of scientific packages so much easier!
The idiomatic solution is to pin Django to the minor version in your input file, and let pip-compile sort out the patch version and everything else. 
Awesome course! 5 out of 5 Stars!
k- python dev here - senior level. Pay no attention to what 'level' they say you are - especially if they're just going by your CV. Now- you are a very recent grad - so you likely don't have sufficient experience to call yourself intermediate. That doesn't mean you won't get the job, and it doesn't mean that you don't have 'skills'. You won't leave university as an intermediate, even if you have a work placement program or co-op program in place. More will be expected of you when you're in the field. I've met and interviewed some extremely (brilliantly) talented developers who for a lack of practical experience were considered 'junior'. Your level isn't just dictated by how well you understand a language. Real world experience means a LOT in this industry. So do: Communication skills, personality, the ability to problem solve, and the ability to "fit" into the puzzle. So- don't worry about the title right now. Do your very best. Prepare for the interview, be calm, collected, confident. The rest will fall in line as time goes on. :)
You might want to take a look at how Numpy operates. Usually all the same data should be in the same column and therefore you would apply to Fonction only to the one column it makes sense to. Might I ask if you come from a excel background?
You should familiarize yourself with redis - because it can be very useful even with a concurrent system for caching data. I've used Redis as a cache backend for a messaging system - which allows me to run my code in multiple concurrent instances (even across multiple physical servers). There's a tonne of power in that. 
Doesn’t ESPN have a public api already you can just use?
your album has the same image twice out of three images, and you posted the same comment with two different links.
Not for the premier league
Could you cross post the code in a gist format, or at the very least indented so it could be readable, along with the line by line explanation to help people understand what is supposed to be happening. I know when I started, I assumed programmers could just look at code and immediately see the problem but it turns out there's a certain amount of information that needs to be provided first, and your comment here is a good start.
Crap. Hit delete instead of reply. Fat thumbs. Anyways, you’re right. It looks like they pulled public access a few years ago. 
Just started getting familiar with python (coming from nodejs and php). 2 days deep and I am thoroughly enjoying it. Not sure why I put it off for so long. I plan on going through the process of setting up a build pipeline to deploy python to aws lambda and continue to learn what I can.
Sure, here are a few resources I used: http://www.desmondrivet.com/blog/technical/modular-flask.html https://goonan.io/flask-application-factories/ http://flask.pocoo.org/docs/0.10/blueprints/#blueprints (the official docs) But like I said, the real eye opener was this video - https://youtu.be/tdIIJuPh3SI - because it takes you step by step from a simple app to the various stages of refactoring it into a more modular approach. My repo isn't quite ready to share yet, but I'll do it soon. I couple things that helped me greatly: * Have a good understanding of the application factory pattern and refactor your app accordingly. Understand that the app is now initialised through a function (that returns an app object). This has implications because now you can't just import it anymore, you have to import the factory function and then create an app object. This was a real breakthrough to me when trying to get tests to run. * Go even further by understanding what blueprints are and refactor again. I had no idea that blueprints are just another abstraction on top of your view functions (routes). With blueprints you can group your routes together and say for example that all routes that belong to `api_blueprint` should be "mounted" under "/api". It's much easier than it sounds. On your views file you define the blueprint with `main = Blueprint('main', __name__)` for example. Then the only difference is that on your route functions, instead of `@app.route('/')` you have to call the blueprint you just defined, so it becomes `@main.route('/')`. Since you should now have an application factory also, you shouldn't forget to register your blueprints there. Here's an example factory function (taken from my code but a bit simplified): def create_app(config_name=None): if config_name is None: config_name = os.environ.get('CONFIG', 'development') app = Flask(__name__) app.config.from_object(config[config_name]) # Register web application routes from .main import main as main_blueprint app.register_blueprint(main_blueprint) return app 
Video linked by /u/soundjack: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [Miguel Grinberg - Flask at Scale - PyCon 2016](https://youtu.be/tdIIJuPh3SI)|PyCon 2016|2016-05-29|3:05:01|294+ (99%)|28,723 $quote Speaker: Miguel Grinberg Do you think that because Flask... --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/soundjack ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=$comment_id\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v2.0.0
Unlike literally every other tabular data structure the programmer is likely to encounter, dataframes are column-major instead of row-major. On the other hand, this is a considerable performance benefit - whereas the row-major results from (let’s say) a SQL query are a collection of arrays or tuples containing heterogenous types, accessing a column from a dataframe results in a homogenous array. Since all the elements of the array are the same type, they can be treated as being the same width in memory, and that has a substantial benefit in processing speed (your CPU has vectorization optimizations for doing the same operation on a bunch of similar-width values.)
Yeah I know, professor is making us use nested lists instead though, which is a bit more frustrating. 
There is nothing wrong with being new to python, but this type of question should be in /r/learnpython for the future. Also, if you indent every line of your code with four spaces, it will properly format: like this! Good luck
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| ^^Now ^^with ^^97% ^^less ^^bold ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Then quit! Also, this should be in /r/learnpython
Maybe apply existed before agg, and the expected main use-case of apply was to summarise columns?
 But, just to be slightly helpful: * Try doing an `os.path.exists` on it and see what it says * Is it a symlink? Try `os.readlink` if it is. See where that points, * Try doing `os.listdir`. Do you see the file? * Are there spaces in the file name? Are you correctly entering those spaces? Try removing them (and check for spaces at the start and end of the file name too). * Are you using IPython? If so, try dragging the file into the window. See if it fills in the path * Can you open said file with its regular program?
Paging /u/kennethreitz
We use Redis heavily for inter-process (and distributed) caching, queues, and messaging. Asyncoi and PyPy replace none of those.
Thanks! I'll go take a listen. Ambient music is kind of a mixed bag. Some of it is just boring - like they took a song and just slowed it down, then added some whales or some bullshit. Or it's pop-ambient (Moby, Enya, etc.) with lyrics, which I can enjoy but not while programming. Then sometimes you find something that hooks you so hard. ;)
Fair enough. Thanks for the detailed response
Note that "\\w*" will also match Unicode "word characters" - it's only the same if your you're processing ASCII text. Of course, a properly encoded URL can only use ASCII characters, but it's worth remembering as a more general tip. 
Are you also new to Reddit? Your account was opened a year ago, so I would say not. You should always read the sidebar before posting in any subreddit. 
Unless you edit your code with Photoshop, don't post screenshots, COPY AND PASTE the damn code. Screenshots make it impossible for blind and visually impaired programmers to read it with a screen-reader, and makes it impossible for everyone to copy snippets out of your code. And it's more work for you. Why on earth would you go to all the effort of posting a screen shot on imgur instead of just selecting text in your editor, typing Ctrl-C, then paste into the Reddit comment? 
You shouldn't reward people for posting screenshots of code instead of pasting it as text.
Let me clarify. I often do something like `df['A'].apply(some_function)`, but I never do `df.apply(some_function, axis=0)`.
Yeah, I go to parties and ask people what their favourite regex is, and whether they prefer threads or multiprocessing. Then I go to programming subreddits and talk about music. What a blast! 
&gt; Because for every 1 of you, there are another 22 interested Judging from the side-bar, more like for every 193,275 of me, there are 32 interested. By your "logic", then anything and everything can be justified by "community": - What leisure activities do you relax with after a long day programming? - What's your favourite snack food to eat while programming? - What's your favourite food? - What's the best movie you've seen in the last month? - What's your favourite computer game? - What do you think the government should do about fake news? - Who do you think will will the Superbowl next year? - Here's a funny video about a cat I thought you would like. Here's some news for you: the **only** common interest the "Python community" has is **Python programming**. Duh. Some of us are young, some old, some conservative, some progressive, some gay, some straight, some take drugs, some don't, some are in favour of capital punishment, some aren't, some like funny videos about cats, and some don't. The only common feature is Python coding. If you're not talking about Python, you're not engaging the community, you're engaging with the tiny minority who is interested in whatever off-topic subject you're going on about.
&gt; The WebSocket protocol requires implementations to validate text messages for utf8 compliance. &gt; &gt; The author broke some of the tests in the suite (the subject of the GitHub issue). The tests in question take a file, chop it up into chunks of fixed bytes (not code points) and send the contents as messages. There is supposed to be code in the test that ensures when the file is chopped up that utf8 code points are not split. Right. So the author broke the tests and introduced a bug, and the tests now correctly fail. Rather than hide the bug by modifying the test data to avoid testing the failing case, you should **fix the bug**, not cover it up with a cunning plan to modify the test data so the test no longer fails. 
He made a solid argument and you haven't proved him wrong, yet. You're seriously going to turn this into politics just because you can't accept the fact that you're wrong? Grow the fuck up and just ignore this thread, if it bothers you that much.
Honestly, I feel very sorry for you.
You sound single.
Nah, turns out I had the wrong version of my program opened. It loads the file now, just gotta work out some other random gremlins. Thanks.
If you want strict guidelines on Python only, then go to /r/Python There's a reason the two subreddits are separate.
This **is** /r/Python. What subreddit did you think you posted to? "willfully arrogant muppet" indeed. 
FYI this post is #2 most posted on within the last 24 hours. 
Take a hike, you muppet.
Ive been coding in Python for several months and I had this thought as well. For me its been a hassle googling stuff that I want to do with Python and eventually I see that multiple ppl mention success with what I wanna do with certain libraries so I go with that. Basically intense googling and observing patterns.
You're a sock-puppet of /r/reddit-q3 ? Seems strange that you have no comments that I can see except defending him, you're using the exact same terminology as him ("muppet"), and responding when I reply to him.
I've used [this reference](https://github.com/vinta/awesome-python/blob/master/README.md) a few times. It categorizes the different libraries and links to the documentation.
LOL. Nice gaslight. Defensive are we? Sometimes I forget t[his is the kid](https://pbs.twimg.com/profile_images/633711154360156160/wQsf_7vX_400x400.jpg) I'm dealing with.
Ignore him. [This is the kid](https://pbs.twimg.com/profile_images/633711154360156160/wQsf_7vX_400x400.jpg) we're dealing with.
LMFAO
I fail at imgur so hard :(
Edited my post. I meant https://www.reddit.com/r/Pythoncoding
Just started python today and I made a number guessing game! My first program without any tutorial or reference.
Sure but that has nothing whatsoever to do with the default behavior of the apply function, which is clearly backwards. If you have a heterogenous set of columns, lets say it is: city_name, population, area. Then you already have an easy way to express operations across subsets of homogeneous columns: df["density"] = df["population"] / df["area"] and an easy way to express operations within a single homogeneous column or series: national_pop=df["population"].sum() So really you only need "apply" when you want to deal with the heterogeneity, and you have some function that is designed to take these different input values and types and do something useful with them. So I don't really get why the default is to apply the function downwards within the homogenous columns. I NEVER have a dataset where that works. I always have something other than just numbers in my dataset, and as a result a naive: df.apply(sum) gives a type error. If I don't have a specific subset of columns I want to sum I can get creative with something like: [df[col].sum() for i, col in enumerate(df.columns) if df.dtypes[i] is float] or maybe do something with groupby, but I don't really need `apply` within homogenous series.
You are assuming you can tell when a bot is a bot. I would just be worried that they become more and more sophisticated to the point where you have bots that try to blend in. 
`pip search [keyword]` `pydoc [new-module]` or visit the modules website for docs.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
No problem, thanks for making a cool project :) A simpler installer would be nice - I introduced this to my engineering friend and it took a while to get everything set up. How do you market your project? I'm developing a[ real-time python evaluator](https://github.com/Almenon/AREPL) and although I've gotten likes &amp; stars I havn't gotten any actual users yet. I've posted on /r/python, some facebook groups, the local python meetup, the python discord, and the python irc.
Well... That's not really going to be an issue with beginners now is it? The people with the ability to make the sophisticated bots already know how to make bots... So... This is a non-issue. This post is for beginners.
I do not use the typing module because I don't use python because it is static. But I do use the 3.6 type hints in function arguments and I like it a lot. 
Amazing contribution OP. I've been interested on developing a Twitter bot with Node.Js, definitely I will this one a go, even though I focus more on JavaScript I want to learn Python. Thanks again for sharing this!
I 'm having and IndexError when it really should work. It's looking at listy[y] when listy is 10 items long and y = 1. I'll cross-post it in a sec. 
Ok very sorry! I must be blind! I didn't mean to waste your time. 
 listy = [] # Define the list to sort npass = 0 # define the number of passes (to check if it's done) sel = 0 # define the selected number county = 0 # define the counter (the thing that steps through referencing listy[county]) def moveThru(): # moves through the list and moves numbers global sel # declares sel as global global county # declares county as global global npass # declares npass as global while listy[sel] &gt;= listy[county - 1] and county != len(listy): # checks if the selected number (listy[sel]) is greater that the number being looked at (listy[county]), if it is, it moves the number up. z = listy.pop(sel) # removes selected from list listy.insert(county, z) sel = county county += 1 if listy[sel] &gt;= listy[county] and county == len(listy): z = listy.pop(sel) listy.insert(county, z) npass = 1 else: npass = 2 def sortLoop(): global sel global county global npass while len(listy) != 10: listy.append(input("Please enter a number: ")) while npass == 0: moveThru() sel = 0 county = 0 while npass == 1: sel = 0 county = 0 moveThru while npass == 2: print("List has been sorted:\n\n") print(listy) z = input("Do you want to restart? (0/1): ") if z == 1: listy.clear() sortLoop() else: break sortLoop() 
/u/TankorSmash here's the code with most of an explanation.
&gt; By your "logic", then anything and everything can be justified by "community": What leisure activities do you relax with after a long day programming? What's your favourite snack food to eat while programming? What's your favourite food? What's the best movie you've seen in the last month? What's your favourite computer game? What do you think the government should do about fake news? Who do you think will will the Superbowl next year? Here's a funny video about a cat I thought you would like. Here's some news for you: the only common interest the "Python community" has is Python programming. Duh. We're not talking about random subjects. We're talking about the music that helps us concentrate and keep motivated whilst working in Python. There's a reason this topic comes up almost every other month on every other programming subreddit. If this bothers you then go to /r/pythoncoding or simply ignore this thread and stop wasting your time trying to yell at people to conform to your unpopular belief.
Here's a sneak peek of /r/pythoncoding using the [top posts](https://np.reddit.com/r/pythoncoding/top/?sort=top&amp;t=all) of all time! \#1: [Hack The Virtual Memory: Python bytes](https://blog.holbertonschool.com/hack-the-virtual-memory-python-bytes/) | [0 comments](https://np.reddit.com/r/pythoncoding/comments/60qj7m/hack_the_virtual_memory_python_bytes/) \#2: [Grumpy: Go running Python!](https://opensource.googleblog.com/2017/01/grumpy-go-running-python.html) | [1 comment](https://np.reddit.com/r/pythoncoding/comments/5m1out/grumpy_go_running_python/) \#3: [financial_life: A framework for analysing financial plans through simulations](https://github.com/MartinPyka/financial_life) | [2 comments](https://np.reddit.com/r/pythoncoding/comments/5m8ipj/financial_life_a_framework_for_analysing/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Good bot.
Thank you reddit-q3 for voting on sneakpeekbot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
This was pretty lame when it was posted in r/programming and it's not better here.
Using numpy and scipy for this is like using a nuke to get rid of ants in your house.
Lol.
If your solution works, then don't worry about the intended solution. Don't feel like you have to do something a certain way just because the book tells you to. There's many ways to solve a problem. Later on what makes a solution better than other is usually runtime/space complexity, but you don't need to worry about that when learning. That being said this is how I would have done it: tableData = [['apples', 'oranges', 'cherries', 'banana'], ['Alice', 'Bob', 'Carol', 'David'], ['dogs', 'cats', 'moose', 'goose']] def printTable(td): rtd = td[::] rtd[::] = zip(*rtd[::]) for i in range(len(rtd)): string = "" for j in range(len(rtd[i])): m = len(max(td[j], key=len)) string += "{:&gt;" + str(m) + "} " string.rstrip() print(string.format(*rtd[i])) return printTable(tableData) 
What kind errors are you getting? Ideally script should behave on a vm the same way as its on your local system, provided same libs and dependencies are installed.
This shit right here is one of the pinnacles of programming. Not beginner programming, but in general. It has become an accepted trope that one will tear their hair out over some absolutely stupid issue in which the answer should have been obvious. I take it in stride.
Hello this is the bot setup, yeah according to this im going to need your ssn and the amount of your last deposit. Beep bop.
Here is the full Py Pi library index, most packages would be listed here that are public.
That's the spirit.🤘👌
&gt;Have fun being disingenuous as shit.
&gt; Uh, how? How is it anything in relation to what they were asking? Because (ahem) if you're going to play the "Does your editor do THIS?" game which he clearly was with his apparently old, apparently paid feature screenshot (lmao), then you should probably pick an editor that can edit a C file. &gt;Why? Does that have anything to do with the feature he asked about? Because, (ahem) if you're going to play the "Does your editor do THIS?" game which he clearly was with his apparently old, apparently paid feature screenshot (lmao), then you should probably pick an editor that can edit a C file. &gt;I did. I still do. And you failed to quote the only part of my comment that had any relevance to the level you operate at: &gt;Have fun being disingenuous as shit.
I'm not quite sure...as it's the first time I'm getting into the VM and haven't had this type of error. After importing selenium and trying webdriver.Chrome() I get this error: FileNotFoundError Traceback (most recent call last) ~\Anaconda3\lib\site-packages\selenium\webdriver\common\service.py in start(self) 73 close_fds=platform.system() != 'Windows', ---&gt; 74 stdout=self.log_file, stderr=self.log_file) 75 except TypeError: ~\Anaconda3\lib\subprocess.py in __init__(self, args, bufsize, executable, stdin, stdout, stderr, preexec_fn, close_fds, shell, cwd, env, universal_newlines, startupinfo, creationflags, restore_signals, start_new_session, pass_fds, encoding, errors) 708 errread, errwrite, --&gt; 709 restore_signals, start_new_session) 710 except: ~\Anaconda3\lib\subprocess.py in _execute_child(self, args, executable, preexec_fn, close_fds, pass_fds, cwd, env, startupinfo, creationflags, shell, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite, unused_restore_signals, unused_start_new_session) 996 os.fspath(cwd) if cwd is not None else None, --&gt; 997 startupinfo) 998 finally: FileNotFoundError: [WinError 2] The system cannot find the file specified During handling of the above exception, another exception occurred: WebDriverException Traceback (most recent call last) &lt;ipython-input-3-9fde2e3b0b93&gt; in &lt;module&gt;() 1 ----&gt; 2 browser = webdriver.Chrome() ~\Anaconda3\lib\site-packages\selenium\webdriver\chrome\webdriver.py in __init__(self, executable_path, port, chrome_options, service_args, desired_capabilities, service_log_path) 60 service_args=service_args, 61 log_path=service_log_path) ---&gt; 62 self.service.start() 63 64 try: ~\Anaconda3\lib\site-packages\selenium\webdriver\common\service.py in start(self) 79 raise WebDriverException( 80 "'%s' executable needs to be in PATH. %s" % ( ---&gt; 81 os.path.basename(self.path), self.start_error_message) 82 ) 83 elif err.errno == errno.EACCES: WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home 
Just fyi, the annotation syntax for functions has been around since Python 3.0. It was specified in PEP 3107. 3.6 adds variable annotation syntax.
You are getting the newline after the opening triple quotes plus the first letter -- equaling the number of bytes you requested.
Gotta persevere. No sense in quitting something that lets you assign variables *this* easy.
There's no "official" list, but this is along the lines of what you're asking fore: https://pypi.python.org/pypi You can install a program called ```pip``` that will then let you install any of those packages/libraries to your local environment. As for standard libraries included in Python itself, https://docs.python.org/3/library/index.html
I use it in a python 2.7/3.4+ library. It's got some rough corners (e.g., how do you make it work with numpy, the python 2.7 syntax can get to be 150+ characters, errors can be cryptic, there is no auto-typer based on tests). Maybe I just have to wait till python 2.7 dies.
Error clearly states WebDriverException: Message: 'chromedriver' executable needs to be in PATH While initializing a chrome based driver, you need to provide the location of chromedriver. You might have placed it in a different location in vm.
&gt;Because (ahem) if you're going to play the "Does your editor do THIS?" Which he wasn't. He was asking a question. Again, you seem to be doing down this weird defensive rabbithole of perceiving stuff as an attack - that's really not doing yourself, or vim, **any** favours. Since that seems to be what the entirety of your post rests on, I guess the answer is no - it had nothing to do with the question, just your paranoid imaginings about some game you think they were playing.
Yes, Python is pretty awesome in that way. And the things you can do with it!
With my script, I can make it so that if it detects certain words, it will respond with a pre-programmed phrase.. So it would basically be indistinguishable if I made thousands of trigger/action responses.
You don't really need to do either. Python on Windows runs just fine these days. If you really want a Linux environment, look into [WSL](https://msdn.microsoft.com/en-us/commandline/wsl/install-win10).
Thanks! I didn't know you can do this, I need to read more about it.
You don't need a Linux VM for Python. But it can be beneficial, for instance my Windows install won't run Docker. Also installing some packages that rely heavily on C can be a bit of a pain with Windows, often having to use wheels instead of a standard pip install. If you can install a Linux VM alongside your main operating system there is no reason not too
Like others have said. You don't need Linux for python. What others haven't mentioned is that the experience is a lot better on Linux. Packages are easier to install and manage. No Windows shit to deal. It's really just superior experience, especially when you get into hardcore data science and machine learning or trying to do some really specific things... VirtualBox and an Ubuntu VM really is an absolutely fantastic environment and so painless to setup. Then in a year delete Windows and convert fully! 
Your error makes the problem obvious. Are you using a Windows or Linux VM? If Windows, just learn to use Linux VMs. Long term it is to your benefit. 
I'm a huge fan of it. I have a lot of C++ experience, and having types be static is a benefit to me. Sure it adds to the developer workload, but it catches so many errors and just makes the code safer and more reliable. That said, I don't use it all the time. Only in large projects where keeping track of stuff is important, or in cases where types can easily be an issue (like code I distribute). 
Sounds like a plan!
Hi mate! Saves this ages back before it was removed, you are a legend for posting it again! Thanks!
Glad you find it helpful
I don't know if you noticed or not, but it looks like you should [ask the primary contributor](https://github.com/kennethreitz/pipenv/graphs/contributors) when his next vacation is so he can work on pipfile more. Until then, why don't you make some noise yourself.
&gt; Which he wasn't. He was asking a question. Have fun being disingenuous as shit. &gt;Which he wasn't. He was asking a question. Again, you seem to be doing down this weird defensive rabbithole of perceiving stuff as an attack - that's really not doing yourself, or vim, any favours. The fact that you think I would give a fuck or think about "doing vim favors" is really weirdly funny to me. Also don't think that use of bold went unnoticed, I noticed it. &gt;Since that seems to be what the entirety of your post rests on, I guess the answer is no - it had nothing to do with the question, just your paranoid imaginings about some game you think they were playing. Have fun being disingenuous as shit.
Go to lowendtalk.com and get a Linux VPS within your requirements. You should easily find something within your budget and cheaper than Azure. You can pay yearly for great deals or monthly. They have great deals on Black Friday. PM if you need extra direction, I'll gladly help.
Thanks for sharing, very useful 🙂
&gt;Have fun being disingenuous as shit. Not going along with your bizarre paranoid assumptions about some kind f game being played by the poster = "being disingenous as shit", got it. He *asked a fucking question about a feature*. He got a response saying yes, he asked how to do it. Then you responded seeming to think this is some bizarre game of one-upmanship or something and started making completely irrelevant claims. &gt;The fact that you think I would give a fuck or think about "doing vim favors" is pretty good OK, fair enough, apparently I was giving you too much credit there. I assumed your rationale was some kind of advocacy, or basic human desire to help, but apparently not. I guess your motive was just plain argumentiveness then? Good to know. &gt;basically all I did was say that vim is totally customizable so the "Does your editor do THIS?" game is pointless Which is not what the poster asked. Which is **nothing** to do with what the poster asked. Which is some weird assumption you've made for some bizarre motive, and have decided to interject into a question they've asked with this unrelated nonsense. &gt;If I said Pycharm was good would you feel like you won? No. I don't use Pycharm - never have. The fact that you think this is **anything** to do with the conversation just further reveals your complete obliviousness to how completely beside the point all your comments have been. 
&gt;Which is not what the poster asked. Yes it is you disingenuous fuck lmao. &gt; No. I don't use Pycharm - never have. I have no reason to care about your opinions about it, and whether it was good or not has been completely unrelated to the topic. The fact that you think this is anything to do with the conversation just further reveals your complete obliviousness to how completely beside the point all your comments have been. I can genuinely say I didn't mean to make you blow your load with how much of a non-pycharm user you are, although you've clearly been bursting at the seams. My apologies. Regarding the rest of your comment I have no idea how I can congratulate you more than I already have on being disingenuous as shit. Actually, maybe I know: If I said I like vim would that make you feel like you won the conversation?
Get a Pi. They are great for running bots and stuff on. RPi.GPIO is fun too.
The good way of pythoning is to set version of python manually. So, if you running from terminal the good way is to call python3.6 manually like $ python3.6 myscript.py In case you would to use specific version of python inside your scripts you can set on the top of script. #!/usr/bin/env python3.6 Set permission to execute(chmod +x myscript.py) and call $ ./myscript.py
&gt; Yes it is you disingenuous fuck lmao. No, it isn't. Here's what the poster said: &gt;&gt; How does it do that? What do I install/press? Now, call me crazy, but to me, that looks like a question asking what they should install/press to do the feature they asked about in Vim. But no, with the deep insight Dr. cocorebop has into the mind of this poster, he can tell it's some kind of mysterious game of "my editor can beat up your editor" to which he will fearlessly dive into the fray with his incisive (albeit totally unrelated to the question itself) statements. Watch as he will now display that keen insight on me, as he goes from: &gt;&gt;No. I don't use Pycharm - never have To &gt;I can genuinely say I didn't mean to make you blow your load To a mere mortal, a mere 7 word sentence in direct response to another's claim might look like an ordinary, even banal response, but no, not to Dr cocorebop who can see that it's actually some kind of psychosexual response, it's brevity concealing ejaculation metaphors and some kind of deep repression. Clearly if this is the level of insight into the mind of others based on their comments, it reveals exactly **why** you have those delusions about the original post.
The hell are you talking about? Package installation is not easier, its literally the same. Pip works the same on both systems. 
Learning network automation. Trying to pull data from a router using netconf/yang and graphing the result. PM if anyone is interested in the details
Oh cool, I saw that project but didn't realize it was you. I think it'd be really useful for teaching programming concepts, especially for beginners. As for "marketing" I was really luck to have friends/colleagues who are quite influential in the live coding community and and even a few tweets from them would bring it to a wider audience. I did a few talks and workshops on how to use FoxDot and I think getting people hands on with the software and going through how to use really helped people engage with it a bit better. I think these things take time. I started the project in 2015 just for myself but doing things like performances / workshops since then have seemed to help get FoxDot noticed - as well as help from friends. Still yet to see a live performance using FoxDot not involving myself but, hey, maybe one day?
Definitely easier on Linux! You can install the majority of packages through the package manager and know the system will take care of them. But that's not a big point... The big issue is that there are lots of packages that require a specific library that goes with it. Oh wait, that library is in c/c++/whatever. Oh no, there is no Windows version of it, but you can install it using minigw and building from sources if you follow this outdated tutorial with plenty of comments that say it doesn't work. With Linux I rarely come along a package that I don't find in my package manager, and the ones I do, are just a pip install away. With Windows, everything is a pip install, and not all packages have a pip version that work painlessly on Windows. Yes, I'll concede pip covers both systems, but pip isn't the only way to install packages. 90% of the time they're equivalent. The day you need those other 10% then working in Windows is absolutely shit. Opencv used to be a really good example of a package that was a nightmare to install and get working on Windows (this has been fixed.) Right now you cannot get python and Zwave to play nice on Windows. I don't maintain a list, because I don't run into them, but windows users do. Works the same - sure. Doesn't always work on both systems equally well. I'd like to thumbsuck a 90% of python dev work is done on a Linux system figure. That has to mean something if only that problems you're likely to meet have good solutions. Maybe that is an indication that there are benefits to using it, even if it is in a VM... Every wonder why most universities make CS students learn a bit of Linux in first year? On top of that. It's beneficial getting used to a Linux development environment. If you're ever going to be working with Django or in production, it'll almost certainly be the environment you'll be working in. 
I do like Anaconda and it's a really great way to easily get Python on the computers of the people I teach. However, I do have some problems with how they mess about with the Python ecosystem. If you read a tutorial on Python modules, it will tell you to `pip install`, create a venv etc. Anaconda have removed the `ensurepip` module (part of the standard library since 3.4) which is used during the venv creation to install pip. PEP 453 explicitly recommends that "Even if pip is made available globally by other means, do not remove the ensurepip module in Python 3.4 or later." to ensure that the `venv` module works as expected. The lack of an `ensurepip` module means that trying to create a venv with `python3 -m venv my_test_venv` gives an error of: Error: Command '['/home/milliams/my_test_venv/bin/python3', '-Im', 'ensurepip', '--upgrade', '--default-pip']' returned non-zero exit status 1. People say that this is ok since "`conda` is better" but I don't want to have to teach my students the standard tools for Python module development only to have to say "except if you're using Anaconda...". Especially since the really shouldn't have to know what distribution they are using. It should be an implementation detail.
A VM isn't installed alongside. It's actually run inside. That's why I advocate VirtualBox, makes things easy, and nothing can go wrong. When you bork a vm, just spin up a copy from before the mistake. You can work in Windows and Linux simultaneously. Alongside is dual booting. That is far more difficult (still damn easy) and requires you to leave your Windows environment to access it. 
It is, also, very usefull for sharing data between different programs made with different languages. 
Yeah was poor wording on my part. I run Linux via VirtualBox on my home laptop myself. Would also highly recommend it. 
The changes from 2 to 3 are much greater than print being a function. Also, 3.7 hasn't been officially released
Mostly true; but back when I used python on Windows, there was of course the need to install pip in the first place, and some frustrating issues with permissions not being granted.
&gt;People say that this is ok since "conda is better" It's not. It's simpler to get started with, but compared to the actual real python ecosystem you're going to have a hard time.
Very good one! Thank you for putting it here. Nowadays, computer vision applications are becoming very popular, and the amount of OpenCV developers is increasing. Still, being a pro in developing such apps with OpenCV is not that easy, as a lot of skills are required. There are over 2500 machine learning algorithms and a good OpenCV developer should have an understanding of the biggest part of them to decide which one is better for a particular situation. [Here](https://mobilunity.com/blog/ways-to-find-opencv-developer-for-hire/) you are can find a full set skill OpenCV dev should have and much more. 
You didn't assign collatz to anything in your try again function.
I'm not sure what you want to achieve. How about returning True or False in `collatz` function? You have to have at some point loop or recursion to correctly implement collatz sequence. I would create two functions: `collatz_sequence(n)` which will be generator returning next element for given n, and `converges(n)` which will check if sequence converges for given n.
Indeed, I don't agree with 'people' that "`conda` is better". It's really trying to solve a different problem to `pip` and I find it a bit frustrating that Anaconda have decided that they will only allow one of the two. It *really* annoys me that they're removing modules from the standard library (`ensurepip`) and making others not work at all (`venv`).
.transpose() is so much easier for what I needed to do though that I said fuck it. I tried using texttable but I wasn't a fan.
Huh, I saw .join() on Stack Overflow a lot while searching, looks like it's a better way than what I did.
I would be greatly concerned if one was still debating between Python 2 vs 3, as we approach 2018.
If you make it easier for people to become beginners, you are going to have far more experts down the line. So it obviously is an issue if Reddit removed the post. 
The ones that will actually make it that far would have found another tutorial somewhere else anyway - this doesn't change anything.
This is cool! Thanks for sharing :)
I still pip install things with conda all the time, but I don't use venv at all. We have a lot of compiled dependencies at work, including many of our own, and condas services for businesses (specifically the repo server and support) have been a huge help for us. I can install conda on a system and in one command and a few minutes have software set up cleanly that use to take me over an hour. I wouldn't say we're typical users, but it is still very useful and powerful. If you're in the scientific python ecosystem it really does make things easier. If you want to write a Django app, maybe conda isn't the best distro for you. If you want to talk to crunch numbers, and a lot of them, then it is worth looking at. 
&gt; I wouldn't say we're typical users, but it is still very useful and powerful. If you're in the scientific python ecosystem it really does make things easier. Sure, and I think that's mostly their target market AFAIK?
You'd be better off posting this to /r/learnpython. But to give some commentary: You're only actually going 2 values deep at most here. Ie you ask for a value, call colatz() on it (giving `answer`), then if it's not 1, ask for **another** number, call colatz on it (giving num1), and then call colatz on it again, regardless of what it is (throwing away the result). What you (I assume) want to do is to **keep** calling collatz on the entered until you reach a value of 1. Eg. you could do this with a `while` loop, replacing your `if` block with: while answer != 1: answer = collatz(answer) This will eventually terminate (well, assuming the conjecture is true) 
Coming from an infrastructure/scripting background and must say that python is one of the most useful languages I've ever had the pleasure of working with. I've built scrapers, bots, recursive file system hierarchy maintainers, but they've been for the most part just sequential in nature- enjoying the transition over to object oriented and currently embarking on django and other frameworks. There's so much to learn, and I've been limited by my job and th3 fact that I'm also studying bash, Linux and wireless networking at the same time. Love visiting this sub, as it never ceases to provide me with ideas for future projects. Does anyone have any resources for understanding threading a bit better in python? I've read through the dox but haven't managed to apply it to anything useful. Any known applicable practice projects would suffice- I'm just not that good at theory- need to see it in action to really understand what's going on under the hood. Thanks!!
actually you can install a baremetal hypervisor like ESXi and run windows and linux alongside each other.
As has been described below, it absolutely can be! The complication is alluded to in the official Scipy documentation (https://www.scipy.org/install.html ): "Windows packages Windows does not have any package manager analogous to that in Linux, so installing one of the scientific Python distributions mentioned above is preferred. However, if that is not an option, Christoph Gohlke provides pre-built Windows installers for many Python packages, including all of the core SciPy stack, which work extremely well."
I think conda (the package format and the installer) is in many many ways better than pip. It solves real problems as: * packaging anything including non-python executables (.so/.dll) * it can be installed as non root * kind of support non-linux oses * it is very easy to get started botha s user and developer It falls short to rpm (from which they've missed few critical lessons) in many ways and the code base was less than stellar, and there are indeed design faults, but that is what we have today (and better we had yesterday). I have many many things to saying against conda, but pip/wheel is not on my replacement list for a package/package-manager. PS. I'm not aware of "Breaking Python packaging like this has bitten me on shared hosts": can you please point any real example? 
Hi - thank you for your reply. I agree with your points - the custom vector functions were there because in an earlier version I was attempting to keep everything GIL-free. I may switch it all back to numpy. Yes I have, it's mostly implemented but the main issue is it won't support edge flips or volume calculation. I may make tri-mesh a subclass with those methods. https://www.ics.uci.edu/~eppstein/pubs/BerEpp-IMR-01.pdf
It is their primary market, yes. The big thing is that conda provides pre-built packages, something that has historically been difficult with Python, for those with compiled extensions. It also makes specific packages much, much easier to get working, like numpy and scipy compiled against mkl for significant performance improvements (the speedups for FFTs alone made it economical for us to switch), Cython, LLVM on Windows, and even other tools like node, R, julia, git, svn, and LaTeX. This release also makes new packages available built with more advanced compilers, and I've seen some comments on twitter already about how it can add a 10-20% performance boost without any code changes. That's pretty important for people doing a lot of ML or large data processing tasks. I've seen routines that take hours or days to run, if you can remove several hours just by updating your dependencies that's huge. But it isn't that important to the typical non-scientific application.
https://www.testdome.com/d/python-interview-questions/9 that's a good place to start I think
The real link is https://stxnext.com/blog/2017/09/27/go-go-python-rangers-comparing-python-and-golang/
This is awesome thanks!
How far are you? I also started something like that, for chess
&gt;it can be installed as non root &gt;kind of support non-linux oses &gt;it is very easy to get started both as user and developer These are true of pip too. python3.6 -m venv C:\Users\$user Should work fine on windows? &gt;PS. I'm not aware of "Breaking Python packaging like this has bitten me on shared hosts": can you please point any real example? People exporting Conda's Python and replacing system Python on the path has caused me issues on shared hosts. That's probably more down to peoples stupidity than anything else.
I have a medium-sized Python3.6 project I'm writing with some colleagues which makes extensive use of type-hinting for its classes. It's hugely valuable to us because PyCharm understands it well, and it prevents a lot of easily-catch-able errors like typos. I actually find the code more readable for at least simple type hints (like `int`, `float` or `pd.DataFrame`). Type hints can get more out-of-hand when dealing with bigger return type (such as `Union[np.ndarray, pd.Series, pd.DataFrame]`) but these can be substituted: ```python matrix_types = Union[np.ndarray, pd.Series, pd.DataFrame] def my_func(matrix: matrix_types): ... ```
for junior positions; at least the companies ive worked at are not looking specifically for $language; instead someone who is a quick learner and can pick up and go with many technologies. Maybe look for an apprenticeship since most companies are taking a low risk gamble with that; you wont be paid a lot at first, but you just need to prove yourself :)
I've got tool fatigue. I'm quite happy with virtualenvwrapper, I'll put off using this until there is more adoption. On my own project there have been windows users, mac users wanting support as well as all the different Linux distros, it's all too much to support and document.
Dive in, sometimes it might not work out but you should be able to get something else easily after that, it's all a learning experience.
If you like having a windows os, but want to try development in Linux - look into bash on ubuntu on windows (win 10 anniversary ed.)
Not sure this is the best place for your questions, but I use pelican and markdown. A single CR/LF at the end of a line followed by text will be merged. Try https://dillinger.io/ to get a hang of markdown.
I hire backend developers for a Python-based service, here’s what I look for in a resume: * How long have you been studying or working as a developer? This is primarily a first approximation for me to gauge if you’re junior or senior. Any other information trumps this. * What backend-related projects did you work on at school or work? I don’t care about unrelated projects so if you feel like you need to mention it be very brief, I’m not going to read it. * What projects have you worked on in your free time? This is especially important for someone new to the field because the primary thing I look for in junior developers is whether they’re motivated to learn. I don’t expect anyone to know everything or even most things they’ll need to know to be successful and a nontrivial amount of the work starts with “I need you to figure this out for me...” If you have a GitHub or other public set of repositories, please link it to your resume and let me know about the projects you want me to look at. I always look at this but if I’m not pointed to a specific project I’m going to browse randomly and without the context of what you were trying to do. I only read (really, skim) a cover letter if I think the resume is interesting. If you don’t provide one, that’s fine. Please format your resume to make it as readable as possible. I spend less than a minute looking at it so text formatting actually makes a pretty big difference since it affects my ability to find the information I’m looking for. Other than the resume: How will you know you’re ready? Apply. If you get the job you’re ready. What types of projects should you be working on? Make something that has a backend! It doesn’t have to be complicated, a backend that stores recipes or tracks your fantasy baseball league is interesting. The FAQ at /r/learnprogramming has a large set of project ideas. An impressive project will have a good suite of tests and a readme that explains what the goals of the project were. A project that’s hooked up to something like TravisCI to automatically run those tests or deploy it somewhere would be very impressive. In general, two months is probably still very early but if you are able to build a project with a backend and you feel pretty good about building simple create, read, update, delete-style backend then you’re probably good to apply to some junior positions.
Excellent job going through it step by step. Great tutorial 
This has been very very helpful, thank you!!
&gt; People exporting Conda's Python and replacing system Python on the path has caused me issues on shared hosts. Maybe that's not a good practice more in general ;)
I suggest Github and StackOverflow. Go crazy with ideas bug and small, ask questions and commit your code. Automated tasks can be a good start for beginners. Analyze tweets, visualize them all using Python. Tests are key. Show the potential employer that you worked you way from scratch and not just copy past code. Good luck! 
You're never ready. Just go for it. Dive in, get hired, learn as you go from there. Most employers don't hire based on language proficiency alone. They hire on the ability to solve problems. So get good at solving problems. As a junior, enthusiasm and the willingness to take on and crush the "shit jobs" will win you respect. 
Not too far really, I'm still doing research on how I'm gonna make the neural network model for this thing.
This is legit thanks so much for sharing
&gt;No, it isn't. Here's what the poster said: You're an idiot lmao, why would you bother responding so many times to make such a flaccid as fuck point about what someone "literally said"? &gt;To a mere mortal, a mere 7 word sentence in direct response to another's claim might look like an ordinary, even banal response, but no, not to Dr cocorebop who can see that it's actually some kind of psychosexual response, it's brevity concealing ejaculation metaphors and some kind of deep repression that burst out in deeply concealed form as this unremarkable 7 word statement. Clearly if this is the level of insight into the mind of others based on their comments, it reveals exactly why you have those delusions about the original post. LOL did you write this thinking I would feel owned or something? You seem angry as shit
I recommend getting in over your head.
You will never be ready. Go for it anyway.
&gt; why would you bother responding so many times to make such a flaccid as fuck point about what someone "literally said" Well, at first, just to correct you. Then also of course, the fact that I have the common degree of basic argumentativeness (hint: people tend to reply when they think others are saying ridiculously wrong things). But I admit, at this point it's motivated more that a little by the fact that it's got a bit funny. The ridiculous assumptions you seem to make based on your paranoid assumptions about motivations behind basic comments are kind of amusing. OTOH, **you** seem to think there's something wrong about "responding so many times" - which now makes me wonder why *you* are doing so. You keep ascribing these bizarre ulterior motives to me - wanting you to admit to liking pycharm, or vim, for some bizarre reason, but what exactly is *your* "skin in the game" for descending so deep into these fantasies about my motivations? You've replied as much as me, after all. &gt;You seem angry as shit Well, to you, probably, but I've got a pretty good grasp of how good your ability to understand people's motives for things already. I mean, seriously "blow your load with how much of a non-pycharm user" based on a straightforward response to your question? Come on, that's a *hilarious* level of obliviousness to basic comprehension.
[For Hire] [Remote] I have extensive experience in the following tasks. * Reddit and Twitter bots. * SMS and Email notifications using the Twilio and Sendgrid APIs. * Web scraping/data mining using BeautifulSoup, Requests and Selenium. * Bulk file upload and download, including Google Drive. * NoSQL, SQL, JSON, XML, CSV, XLSX, HTML conversion. ## Examples * [Twitter Bot using Requests and Tweepy.](https://gist.github.com/agentphantom/798bd3511c242de526ac3a5ccbeb90e5) * [HTML to CSV using BeautifulSoup and Requests.](https://gist.github.com/agentphantom/7c7a6db62ae02093160b9085d3bb6858) * [HTML to SQL using BeautifulSoup, Requests and SQLite.](https://gist.github.com/agentphantom/712b87e8fc54f92b37cd06e84b25aeb3) * [GitHub API to Firebase Realtime Database using Requests](https://gist.github.com/agentphantom/069d2bf410f5d2fee9306cc2f2070fb1) I also develop Android and iOS apps using Adobe AIR, you can see them on my [GitHub portfolio.](https://github.com/agentphantom) Feel free to ask any question here or via PM.
Get an internship. After that, you'll be ready.
Can anyone attest to these being what interview questions are like? I've been programming in Python and C/C++ and studying relentlessly for over a year now after being given a shot as a software developer with close to 0 software experience. These questions seem like a breeze to me. I've always wondered if I could land a job with a new company in software with my current skills.
&gt; How can i start testing myself and what can i do to show im competent to recruiters? Don't worry about recruiters; check for places hiring locally, show up to an interview and see how you do. Try to apply to a job you don't necessarily want at first - that way, if you bomb the interview, you haven't necessarily burned that particular bridge.
Apply for jobs, apply for internships, see how it goes. Note that passing interviews is actually completely different from doing the job in most cases 
Also most recruiters will just want to check that you have a pulse
It's anyone's guess what questions you'll get asked in an interview. I've been a Python developer for 10 years and I've somehow never been asked to write code or whiteboard code in an interview. I've gotten take-home coding assignments that I'm given a couple days or a weekend to complete. Those kinds of questions tend to be relevant to the domain of work but I would say they are similar format to what's in that link. We're hiring a python developer right now who I would expect can do all of those.
Actually, I would say that the best reference for junior position may be good grip on algorithmic thinking and being willing to learn. Usually when I interviewed people for junior positions that was major part of interview process. Granted, the more you know the better, but with juniors it's mostly a question of can you think and can you learn. I once hired a junior who had almost no CS background and he thought himself Python to process data for his linguistics degree. And more than once I wouldn't hire people with very prestigious CS degree simply because they had "know all - seen all" approach. If you know and accept the fact that you know very little about what you're going to do - that's a plus, at least in my little world. Alas, that may be only me - I went to work at eighteen and it taught me that no matter how simple the work seems to be or how qualified you are, you're most probably wrong. That's a definition of a junior and if you get that, you're at least not a pain to work with.
There no good answer to this, because there's (a)not a standard definition of "junior", and (b) all jobs are different, despite the similarities in description. All answers you get will be a crapshoot and personal preference. Your *best* bet is to go and meet with people from specific companies you want to work for, and ask them. Any "what to know" advice you read on Reddit is going to be either "this is what I learned, so you should too" or cranky computer science/math bullshit.
I can attest they're bullshit, because nobody knows what questions they're going to hear. Sometimes you'll get almost *no* questions, just an unofficial "fit" test; other times you'll get Cranky Computer Science Guy who thinks "real" programmers know all the shit he thinks he knows, and he'll torture you with useless whiteboard questions and linked list/Big O nonsense ad nauseam.
I learned c# before I learned python, and I tried out go for a project recently. I kept hearing it was very similar to python, but I didn't find many similarities. It was painful not being able to assign default values to function parameters. Also, error handling was probably the most annoying thing I have ever experienced whole programming. I wouldn't use it again unless I absolutely needed easy concurrency.
&gt; solve problems This is number one. There's a few challenges (cant recall the name) that state regardless of language, if your solution doesn't run in X minutes, you need to rethink your algorithm. Programming languages are tools to do the work involved, so you dont have to do it repeatedly by hand. Knowing how to add doesnt mean you know when to add.
You violate bottiquette and you are a plague on all the redditors who don't know to ban your shitty bot. You violate bottiquette and the next guy violates bottiquette and the next and the next and the next and the next. Stop being a prat and making excuses for being a script kiddie.
First decide if you want to do data science or backend. Those two jobs are pretty different and it will be difficult to prepare for both types of interviews simultaneously. As for when you are ready to apply I would say after you do a full stack project Data Science Data -&gt; Database (Postgres) -&gt; Python Pandas/Scipy/Matplotlilb -&gt; Machine Learning (Scikit Learn) -&gt; Presentation Flask / Ipython Notebook Backend AWS -&gt; Postgres -&gt; Flask -&gt; HTML / Javascript
&gt; Anaconda have removed the ensurepip module (**part of the standard library** ... PIGS. You simply don't butcher stdlibs of a language, else you are only pretending you are distributing it. 
That's pretty cool. I've implemented one-off similar interactions inside of other projects; it's certainly useful.
While i get what you mean, there has to be a minimum knowledge base for me to get before i start applying to anything. Im trying to find out what that minimum might be :)
I agree with your point completely. I strive to always remain humble and super willing to learn anything, only arrogan ignorants think they know everything. I wish your "litle world" encompassed the globe haha 
I honestly had never considered how different these two were, which in turn highlights i am not fully comprehending what i want to do. I need to do some more research. Thanks!!!
projecteuler.net, I'm not actually convinced these are a good indicator of real life problems to solve though. These are more for fun.
If it's that easy, you should easily win the Loebner Prize.
Bio* major interested in data science? You might be interested in bioinformatics graduate school. You'll be poor for a few more years vs getting a real job, but PhD programs should pay your tuition and a living stipend so you will not be going into debt (further). Even if you don't finish a program you start, you'll end up with formal statistics/programming training for free (just don't tell that to the recruiters) Its a good time of year to consider it because applications aren't due for another month or two. But you might have to scramble to sign up for the GRE. Examples: http://www.bioinformatics.ucsd.edu/node/13 https://bioinformatics.ucsf.edu/ And a tip: proofread your communications with prospective schools/recruiters better than you did your Reddit post. Your typos, odd capitalizations, dropped apostrophes, etc. reflect negatively on your abilities.
&gt; While i get what you mean Delicious irony. By replying with this, you demonstrate that you really don't. Stop thinking, start applying. I'm not kidding. u/alexgand's advice is about the best career advice you will ever get. . . . The fact is that your question isn't very meaningful. If you ever feel like you actually understand your skill level relative to the industry, you will be wrong. You will ALWAYS feel like you don't know enough (read up on Impostor Syndrome). Be comfortable with your ignorance. Knowing what you don't know is good for you. This sounds trite because it's true.
&gt; I've somehow never been asked to write code or whiteboard code in an interview This was part of my *very first interview* for a python (and first real programming) position. SQL query and a few python loops. Got the job, but man was coding without REPL/stack exchange more nerve wracking than I anticipated.
Sorry, but isn't this kind of missing the point of Docker? I mean basically you're providing a single, quite heavyweight image that contains everything you *may* need, instead of the one thing you *do* need.
As a guy who hires programmers, language proficiency is barely on my list. I want to hire engineers for the 5-10 year range, and the onboarding time of learning a language just isn't that high as long as you're avoiding the dead-heads. As long as you can solve problems and write good tests in _a_ language, that's good enough for me. If you can do it in _our_ language, that's icing on the cake but not a requirement. I care much more about being able to think for yourself, and pay attention to priorities that aren't right in front of you. My favorite interview questions are asking for opinions. Example: "What's you're favorite programming language, and why?". The language you pick is actually irrelevant ^1, the reasons you give to support that choice are what I use to measure your experience. "Python, it's the only language I know". Poor answer, this implies you have very little experience and/or that you're not willing to step outside your comfort zone. "Python, I really like all the built-in support and how easy it is to write." Better answer, but it doesn't tell me a lot because that's the whole internet's answer. "It really depends on the project. Different languages are better at different things. I pick Python for .... projects." Ooh, this is a pretty good answer. You're avoiding the Golden Hammer fallacy and demonstrating that you're more open minded. I'll ask the question again with an example because I really want to hear your whys. MY answer? (I'm no expert! I get paid to write Ruby actually.) "I default to Python for new projects because I find the code is expressive but highly readable. Readability is very important to me because I think that the most important resource to optimize for in software is cognitive load. Code that's easy to think about is easy to modify, easy to test, and easy to fix." ^(1: Though only one candidate has ever given any good reasons to support PHP.)
Thank you SO much. This solved the issue 
Applying for jobs you don't want is a great idea for a lot of reasons. You get application experience, you get interview experience, you might even get job offers where you can start to get a feel for salary ranges. Worst case scenario, you can always say "no thanks!". Don't think of it as applying for a job you don't want, but instead think of it as doing your homework learning how to apply for a job. (Which is TOTALLY its own skill which can/should be developed)
time is very relevant... if your software automation for a complex manual task takes way more then you would usually need to perform this task several times, because you need a lot of time to figure out stuff it is not profitable for the company to have you. e.g. A monthy report which takes manually one man day for two ppl to complete, at each beginning of a new month. If you need e.g. 3 weeks to complete the report as it currently is printed out, it is questionable. Especially if a trained devops does it in one week. 
&gt; Can someone modify this to keep a log (in a text file) of the commands that are entered/it runs? Unequivocally, yes.
I can only speak for web dev (that's where I live), but I try to avoid "algorithmic thinking" as much as possible. The code we write and maintain is so high level that "plain and simple" programming tends to be much more effective and much cheaper because it's easy to understand. Yes, I could shave 90ms off this backend request by combining these loops and adding a special case - but that incurs the cost of making the code harder to understand and harder to modify. Over the lifetime of that code, this could literally costs me thousands of dollars in developer hours while not improving the service in a measurable way. In a worst case scenario where multiple optimizations interact with each other in 5 year old code, hundreds of thousands of dollars is a reasonable estimate in what that fancy loop costs. tl;dr: As already specified in this thread, different jobs are different and require different skills. What's good for you is bad for me.
I agree, this seems quite unorthodox. Having an image per framework would be more ideal. 
Add a file named '''log.txt''' in the same path as your script. Then add this function: def save_log(message): with open("log.txt", "a", newline="") as log_contents: log_contents.write(message) Instead of using '''print("something")''' use '''save_log("something")'''
You don't have to decide if you're ready, you just start applying and hope they think you're ready. If you get the job and can't do it, you start googling hard. Don't disqualify yourself that is their job not yours. If it all goes wrong then at the very least I promise you'll have learned a lot. They may also send you coding challenges as a part of the interview process, which is fun and there's no better way to learn in your free time. 
I have used Bash on Ubuntu on Windows (Windows Subsystem for Linux) as well as Cygwin. Both give you a Unix environment on Winders with less hassle than working with a VM and a full Linux install. Cygwin also gives full access to the Windows file system and allows some integration with Windows programs. Bash on Ubuntu on Windows may allow this, but I don't recall testing it. I can't tell from your post or comments if this is useful for you.
Be humble and don’t complain =) The juniors in my department are insufferable. Too opinionated with not enough perspective. I then have to drag them through hell to break them down. But then the attitude gets worse, and it’s just a vicious cycle. You will learn much faster the more humble you are. EVEN IF what you are being taught is in poor form, slow, decrepit, etc...the goal is to onboard as quickly as possible and be productive. Once you get the scope of your codebase, you can then be more liberal. 
Oink oink
&gt; People exporting Conda's Python and replacing system Python on the path has caused me issues on shared hosts. That's probably more down to people not understanding how shared hosts work (setting personal config in /etc/profile is a dick move etc). But... how do you pin that one on *Anaconda*? That's bad behavior on the part of those users. If they modified paths in /etc/profile and pointed `git` or `svn` to a personal version, that would break people too...
Whether or not to build with ensurepip turned on is literally a documented, supported, official build option for the cpython build system: https://github.com/python/cpython/blob/master/configure.ac#L5312-L5316 There were technical motivations for the decision to set it the way it was, and like any decision, up for evaluation, re-evaluation, and discussion. But saying that setting an option *provided by the official build* is "butchery" is inaccurate, unhelpful FUD. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [python/cpython/.../**configure.ac#L5312-L5316** (master → 93fd478)](https://github.com/python/cpython/blob/93fd478231bba0c00a3561ea8db31774909ec714/configure.ac#L5312-L5316) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dozc8yo.)^.
&gt;Could you play this in a bar in Mass Effect? Came here to say: anything resembling Mass Effect credits music. Glad to see I'm not totally crazy.
To add to this: Radiohead. Any of their albums. So long as you've heard them before, if you haven't memorized the songs then the lyrics would surely be distracting.
&gt; It's not. It's simpler to get started with which makes it better for some, but compared to the actual real python ecosystem you're going to have a hard time. This is simply not true. The "real" python ecosystem, and its long-time ignorance of the needs of the numerical/scipy/pydata ecosystem - has caused huge amounts of grief for a large number of people. If we didn't *have* to create Anaconda and spent years building packages and fixing obscure build toolchain bugs, why would we have done that? Anaconda and conda arose from a need in the ecosystem. It may not be part of the ecosystem that *you* inhabit, but Pythonland is vast and I think you are overreaching when you make a blanket statement like, "conda is only better for newbies".
Looks like Ubuntu and Debian ended up taking the same path. https://askubuntu.com/questions/879437/ensurepip-is-disabled-in-debian-ubuntu-for-the-system-python
nice work. I like the simplicity and'll definitely try it out later. 2 comments: - I don't get the tkinter dependence. - Using `if os.path.splitext(file)[1].lower() in filetypes: ..` could be faster. (also, the `lower` allows you to detect uppercase filetypes which some have.)
You'll know when you get offered a job. Sorry if I sound glib, but your self assessment is inconsequential when dealing with another persons professional opinion. The real result is they hire you... whether you think/know youre ready or if you think/know youre not ready. 
nice work. I like the simplicity and'll definitely try it out later. 2 comments: - I don't get the tkinter dependence. - Using `if os.path.splitext(file)[1].lower() in filetypes: ..` could be faster. (also, the `lower` allows you to detect uppercase filetypes which some have.)
Just checking, you don't want to use Ansible/Chef/Puppet, right? 
Then you don't need them on reddit to begin with, so problem solved!
It's also important how you solve the problems in real life. Programming is always (or at least should be) a group effort. You can solve everything with a one-liner that is written in no time, but will be hard to read at some point for your colleagues or even for you. 
CodeAbbey.com has several problems like this as well. more diverse than euler.
so this? def save_log(message): with open("log.txt", "a", newline="") as log_contents: log_contents.write(message) def main(): print("Opening image...") input_img = Image.open(argparams.image_input_path) print("Converting to RGBA...") input_img.convert('RGBA') print("Rotating image...") input_img = input_img.rotate(argparams.angle, expand=True) print("Getting data...") data = input_img.load() print("Getting pixels...") pixels = [] for y in range(input_img.size[1]): pixels.append([]) for x in range(input_img.size[0]): pixels[y].append(data[x, y]) print("Determining intervals...") intervals = argparams.interval_function(pixels, argparams) print("Sorting pixels...") sorted_pixels = sorter.sort_image(pixels, intervals, argparams) print("Placing pixels in output image...") output_img = Image.new('RGBA', input_img.size) for y in range(output_img.size[1]): for x in range(output_img.size[0]): output_img.putpixel((x, y), sorted_pixels[y][x]) if argparams.angle is not 0: print("Rotating output image back to original orientation...") output_img = output_img.rotate(-argparams.angle, expand=True) print("Crop image to apropriate size...") output_img = util.crop_to(output_img, Image.open(argparams.image_input_path)) print("Saving image...") output_img.save(argparams.output_image_path) print("Done!", argparams.output_image_path) if __name__ == "__main__": main() save_log(argparams) 
No, instead of using print() use save_log() or use both. The idea is the save_log function saves a string of text into the .txt file everytime is called.
I really appreciate type hinting even in smaller projects. Mainly for projects which I work on infrequently. It also helps me keep using consistent variable types in my flags. 
Sorry, maybe I'm misunderstanding...why will HTTP not work?
Its gotta be over an android application. It's gonna be public and i wanna have chance to improve it with api too because i might add socket chat system in the future..
OK I don't think I'm aware how Android apps work...I assumed they could access HTTP.
I don't know either haha..
CodeAbbey.com has several problems like this as well, problems are more diverse, less pure math, than project euler.
Not sure you understand what I'm trying to accomplish. I want to save the original command I give for example &gt;python3 pixelsort.py examples/image.jpg -i edges -t 250
Ah sorry, then yes, your post was correct. I thought you wanted to have a log of all the things the script did.
I know a guy that just started teaching himself to program a few months ago and then went to some boot camp and has recently accepted a developer job at Google...so apparently it doesn't take that much anymore.
Thanks
I can't deduce what argparams type is. You will need to convert it to a string in order to save it. I would also import sys and do something like: save_log(" ".join(sys.argv))
Hell, the self-awareness to think that you might not be ready puts you above half the candidates in my mind. But honestly we hardly ask coding questions, it's just about the problem solving mindset. Anyone can be taught to write code, but if you can't explain how to solve the problem without code it won't matter if you know every single language feature inside and out.
Thanks and yes, this initial work could definitely be improved and most importantly, expanded to something better!
Glad you liked it!
I work for IT networking at my school and this sounds interesting. Can you do switch configs as well with network automation with netfconf yang?
yes but it depends on the switch. It must have yang capabilities. Currently, I know that the cisco asr1000 and ISR routers have yang within the box. I am not sure about cisco switches. I am giving a talk on yang/netconf. I'll post it on youtube this week and send you a link. thanks
How does this differ from marshmallow, voluptuous, schema.py, colander, etc.?
They enjoyed the suffering of debugging PHP with no assistance?
I've just dabbed in Ansible. It seems like when you use ansible, chef, puppet, then what you are doing is still CLI scraping which is unstructured data. With yang/netconf, your playing around with structured data which makes it easier to work with. Perhaps Ansible can be integrated with yang/netconf, I'm not sure. I'm still trying to iron out the details myself. I'm creating a presentation this week on yang/netconf - I'll post it in /r/networking - stay tuned
&gt;This is simply not true. The "real" python ecosystem, and its long-time ignorance of the needs of the numerical/scipy/pydata ecosystem - has caused huge amounts of grief for a large number of people. I don't disagree with you here. Python packaging has been a total PITA for many, but I don't think we should go down the route of JS and have a whole bunch of package managers for XY and Z. It might have light a fire under npm, but for a person new to the language it's an extra bit of confusion. As for the "real" comment, when your packager manager is shipped with python imo that gives you some leverage. I don't even think it's ignorance of the pydata scene, anecdata here bust most data scientists I've been met have been fine with current packaging, the problems I've seen most are people working outside of Unix who have path issues with pip. Shipping pip with python was long overdue, hopefully it'll unify things, but who knows. 
Django is one of the things i was looking to use. I will try set it up this weekend. Thank you so much!
My latest project is 3.6 only and uses it extensively. I have stopped writing unit tests (i.e. testing functions in isolation), and only write integration/functional tests. The type checker will catch many more problems than unit tests using mock did before, and makes us much more productive. One challenge was that we have to import the types for use in annotations, and that means you quickly have to import the complete codebase. To avoid that and recursive import problems, we have separate header classes (e.g. x/types/models/ModelT and x/models/Model(ModelT)), that way we have a lightweight way to import the types for use in annotations. All in all, I'd say it's saving a lot of time, and don't make the code less readable. Mypy doesn't catch all errors yet, I'm guessing it will be even better in the future as they add more static analysis.
&gt;But it isn't that important to the typical non-scientific application. There's a whole bunch of people that use Python who need performance outside of scientific reasons. Honestly what does Conda do outside of profile guided optimisation? If it does do anything special, there's a whole bunch of people that would be very interested in anything extra it does. Being genuine here, as a non Conda user (but a power user of python) what can I do to achieve the same performance?
I was in the room at the first proto-PyData Conf in 2012 on the Google campus, when Guido himself said, in a panel discussion about python packaging for scientific tools, "if the standard tools don't satisfy the pydata community's needs, *you all should go make your own thing that does.*" That is why conda exists. 
Find something you use that is python and open source, get involved in the community and start contributing. If you can make contributions to open source software then you’ll already be doing the job. See if the project(s) have “ onramp” tasks, these are usually easy tasks that are left around to encourage new contributors. 
at work: trying to use more pandas and less excel at home: making a webapp in django to manage my farms cattle and their milk production. i'm a beginner so it's been slow but i'm very engaged with the project
They are pretty easy, but they also represent the difficulty of what I would assume most jobs would ask. The more prestigious or competitive companies are going to have much harder questions. 
I'm currently building my own Raspberry Pi-powered kitchen inventory system because I often find myself in a situation where I'm shopping with my girlfriend and the question comes up if we still have X in the fridge. I use a Barcode Scanner to read the codes from food items, then there's a Python script that sends that code to an online database and parses the response with BeautifulSoup. If the product is found, the name is saved in a database and the amount is set to 1. If you scan the same item repeatedly, it will no longer query the service and instead increment the counter. This alone would be useless if there wasn't a convenient and fun way to access this data while shopping, so the pi runs an additional Telegram bot in Python that can process queries and give information about items in stock. The system kinda works as of today, but it's still far from done. I have plans for specifying recipes, using stock items as components. This way, the bot could tell you what you can cook with your current inventory or what you need to buy to cook a certain recipe. This shouldn't be too difficult to implement, and I'm happy I finally found a useful purpose for my Raspberry Pi 2 I had lying around. 
Find an open source project for something you are interested in (system administration, web apis, data science/ML, etc) and start contributing. Not only we'll you have the satisfaction of knowing your contribution is used widely, but it's great experience you can refer to. The added bonus is it somewhat teaches you some of the more social aspects of coding within a large project with multiple contributors. Things such as conventions/style, code documentation, tests/unit testing, source control (get to know Git).
Pythonista And for help r/pythonista 
I agree, Project Euler is not a good learning tool. I don't know why it gets recommended all the time. It's a fun pastime, but your success with the more difficult problems is just a matter of "how clever can you be with the math". If you're not interested in learning mathematical algorithm optimization, it's not really useful.
I’m nit trying to be cute but you will know you are ready when you are hired for a position. Go ahead and start applying; it is ok to bomb an interview especially if you are just getting started. I completely tanked my first one but it teaches you a lot. Just go for it.
Do you mean the QPython android app? If so, then that's not how you are supposed to run kivy on Android. The official solution is to use [Buildozer](https://kivy.org/docs/guide/packaging-android.html) to write your app on a computer and deploy it to an Android device.
+1
PyPy is good for performance when you have pure python code, it's C bindings are still under improvement (although the latest release seems to be a big step towards better support, you can now import numpy!). Conda has an alternate packaging system and dependency management system from pip and setuptools (although they are not mutually exclusive). The main set of packages are officially supported by the company that runs it (also called Anaconda, formerly Continuum). They are compiled and tested against each other so things have a better chance of working. The packaging system is also pretty nice. It literally records the files your "install process" creates and packages those up in a tarball. This means deployments are logicless (by default), it just unpacks the files to the environment folder. On Unix systems it just symlinks too, so it's really fast. Packages are precompiled, so when you install a package it usually "just work". No complicated compiler tool chains needed.
He's using Tkinter just for the file open dialog, a neat way to add a little gui stuff to a console mode script. You could pretty easily change this to get a filename from the command line instead. Or if no filename on command line, pop up the dialog box.
`re.match` tests the entire string against the regex. You want `re.search`. &gt;&gt;&gt; re.match("\d$", "/dev/sda1") or False False &gt;&gt;&gt; re.search("\d$", "/dev/sda1") &lt;_sre.SRE_Match object; span=(8, 9), match='1'&gt;
Try re.search. re.match assumes you start from the beginning of the string.
Your problem is *scope*. You've declared my_dict as both a variable at the module level, and a argument passed into your function. But the argument level variable of my_dict masks the my_dict at the global level, so when you exit the function, the local dictionary is gone. This is a good lesson in style: Don't name your __main__ variables the same as your function or object variables, that will confuse you, and more importantly, your collaborators, when you get a job programming. You're also not checking for the existence of a student name as a key in your dictionary. You're using: if name not in my_dict: But the problem is that you're looking at a dictionary, not a list, and the 'in' expression requires something iterable, either a list or tuple. So, get the keys to your dict, instead. There's an OOP way to do this, and there's a procedural way to do this. Has your class covered classes and OOP yet, or are you still doing just functions and data types? 
&gt; It seems like I am concatinating my values as strings instead of ints and I dont know how to fix this. What do you mean and what do you want? Also.... /r/learnpython
No we have not covered OOP, this is an intro to python class we are about halfway through the semester. So we have just covered the basics (control, strings, functions, files, lists, tuples, and now dictionaries). So I think you are saying to grab the value associated with the key? How would I do that, I'm only really familiar slicing from lists by using something like name = my_list[0].
On the new_score line, look at it from the inside out. Both score and old_score are stings, and the + operator concatenates strings. Then you're turning that string into an int, and then turning that int into a string. You need to turn the strings into into before adding them.
Thanks that sounds like a better sub for me to post this in. But to answer your question, I'm trying to add the integer values of the student scores together when the name appears again in the txt file. Then print the student names and their scores. Like: Joe 85 Rob 90 And so on...
I did minimal edits to your code, and found another slight problem. Your new_score operation in your function seems to be concatenating scores, rather than adding them. def get_students(file, local_dict): header = file.readline() for line in file: line = line.strip() student_list = line.split() name = student_list[0] score = student_list[1] if name not in local_dict: local_dict[name] = score else: for value in local_dict.values(): old_score = (value) new_score = str(int(score + old_score)) local_dict[name] = new_score my_dict = {} fp1 = open('data1.txt') fp2 = open('data2.txt') get_students(fp1, my_dict) get_students(fp2, my_dict) print(my_dict) {'Sarah': '80', 'Jose': '90', 'Ming': '20', 'Joe': '6570', 'Rich': '3070', 'Mary': '70'} I think you can use duck typing to treat the values in your dict as integers already, but I prefer caution over ease, so let's just force the scores to be integers from the get-go: def get_students(file, local_dict): header = file.readline() for line in file: line = line.strip() student_list = line.split() name = student_list[0] score = student_list[1] if name not in local_dict: local_dict[name] = int(score) else: for value in local_dict.values(): old_score = (value) new_score = value + int(score) local_dict[name] = new_score my_dict = {} fp1 = open('data1.txt') fp2 = open('data2.txt') get_students(fp1, my_dict) get_students(fp2, my_dict) print(my_dict) {'Sarah': 80, 'Jose': 90, 'Ming': 20, 'Joe': 135, 'Rich': 100, 'Mary': 70} I think that's what you want.
Thanks! Works perfect.
Thanks! Works perfect.
&gt; Well, at first, just to correct you. Then also of course, the fact that I have the common degree of basic argumentativeness (hint: people tend to reply when they think others are saying ridiculously wrong things). But I admit, at this point it's motivated more that a little by the fact that it's got a bit funny. The ridiculous assumptions you seem to make based on your paranoid assumptions about motivations behind basic comments are kind of amusing. OTOH, you seem to think there's something wrong about "responding so many times" - which now makes me wonder why you are doing so. You keep ascribing these bizarre ulterior motives to me - wanting you to admit to liking pycharm, or vim, for some bizarre reason, but what exactly is your "skin in the game" for descending so deep into these fantasies about my motivations? You've replied as much as me, after all. This is the most neckbeardy paragraph I think I've ever read on this website. This is copypasta worthy. &gt;Well, to you, probably, but I've got a pretty good grasp of how good your ability to understand people's motives for things already. I mean, seriously "blow your load with how much of a non-pycharm user" based on a straightforward response to your question? Come on, that's a hilarious level of obliviousness to basic comprehension. Yeah, you have a good grasp of a personality detail about me based on a petty as fuck thread on the internet. You don't know dick
Nevermind, looks like in does what you want, as the later code I provided shows.
`None` is one of the most important things in Python. I don't know much about the tutorials and guides, but if your tutorial doesn't revere `None` from day one, I'd shy away from it.
I expect nothing of junior engineers except that they want to learn. I’ll hire an eager, excited recent graduate with no experience any day over a more experienced candidate who’s jaded and “too cool” to want to try new stuff.
 Yes thank you! So out side of stylistic problems I just needed to use new_score = str(int(value) + int(score)) instead of new_score = str(int(score + old_score))
Yeah, I mean the Android app. But I think you can install it in QPython and program in the cellphone itself. I even have an option to install it, but it's not really working. Thanks for the help
You probably also want to get in the habit of doing the comparison as `is None` instead of `== None`. In Python, `None` is a singleton (only one instance of it is ever allowed), so `is` -- which checks that two things are the same object -- works and is generally the preferred style.
You don't need to check if the value is already there. Just do dict[name]=dict.get(name,0)+int(score). 
I barely know python yet my job requires that I own it. I got the job because I can create solutions and am prepared to learn new skills. I think if you can showcase these attributes, you're halfway there
 &gt;Bro, I'm not replying nearly as much as you LOL Uh... you do realise how a reddit thread works, right? Or even the basic concept of a conversation? Basic maths? In order to reply to someone's reply, they need to have actually made that reply. Aren't you embarrassed for saying such a completely stupid, obviously wrong sentence? And I note no actual answer to that "why" question that you seemed so insistent about asking *me*. &gt;Yeah, you have a good grasp of a personality detail about me I have a grasp on your capacity for basic understanding of motives behind comments based on how *spectacularly* you fucked it up. You go from a question about a feature to interpreting it as some machiavellian game. You go from a direct reply to a question you asked into some masturbatory metaphor where this tiny reply signifies something I've been somehow "bursting at the seams" to say. Now, OK, maybe this is some weird slip-up because you're off your meds and your paranoia is up, and you're not normally like that, but from the evidence I see, you **suck** at this.
&gt;Uh... you do realise how a reddit thread works, right? Or even the basic concept of a conversation? Or understand how to count? In order to reply to someone's reply, they need to have actually made that reply. Aren't you embarrassed for saying such a completely stupid, obviously wrong sentence? And I note no actual answer to that "why" question that you seemed so insistent about asking me. I'm replying *as often*, but not nearly *as much* lmao. &gt;I have a grasp on your capacity for basic understanding of motives behind comments based on how spectacularly you fucked it up. You go from a question about a feature to interpreting it as some machiavellian game. You go from a direct reply to a question you asked into some masturbatory metaphor where this tiny reply signifies something I've been somehow "bursting at the seams" to say. Now, OK, maybe this is some weird slip-up because you're off your meds and your paranoia is up, and you're not normally like that, but from the evidence I see, you suck at this. You don't understand shit about me, but it's pretty funny that you think you do. Nice burns btw (LOL), you're a strange and angry dude.
Objects with a defined size easily allow this. Objedcts without a defined size cannot allow this. Python handles each properly. Which object in Python should be changed?
A quick Google search of "python tutorial none" puts the lie to the post title. How extensive were these tutorials? By the way, try this: def blank_function(): return print(blank_function()) and see what happens.
You should be using " if result is None" or "is not None" in your equality checks instead of ==. None is a Singleton. The is keyword is checking the actual address in memory to see if it is the same object while == can be overridden to mean different things. Don't worry about that now though. Just keep in mind that there are the dunder aka magic methods that can change that behavior.
&gt; re.match tests the entire string against the regex. I like to explain it like this: match() introduces a hidden '^' at the start of your regex, search() doesn't.
There may be a reason but I can think of none
I mean, crash course, automate the boring stuff, a couple Udemy course, I haven't run across None though I may have overlooked it.
&gt;&gt; I'm replying as often, but not nearly as much lmao So quantity is your objection? Dude, it's just that some people are capable of responding to the point, and that takes a few more words than random non-sequiturs and insults. Speaking of which: still no actual reply I see. &gt;you're a strange and angry dude. More of that incisive understanding of character. 
does it also introduce a $ or is it only a prefix match?
Haha that's exactly what my response was to a web app idea I proposed to a higher up. Had no idea how I was going to do it, I just said, "Uh, yeah I can do that" and now I'm devolving my first web app. 
&gt;So quantity is your objection? Dude, it's just that some people are capable of responding to the point, and that takes a few more words than random non-sequiturs and insults (though I'm not seeing this huge difference you apparently do here). Speaking of which: still no actual reply I see. Uh huh. &gt;More of that incisive understanding of character. Sure.
Well there's https://www.python.org/dev/peps/pep-0424/ See also: https://stackoverflow.com/questions/38385360/pep-424-length-hint-is-there-a-way-to-do-the-same-for-generators-or-zips
https://www.udemy.com/swiftbirads/?couponCode=BIRADSFOR20
You're describing the reason that JavaScript was invented, which was to interact with the browser on the client side. Using JavaScript you can listen for events like button or link clicks, even intercept the default behaviour, and/or then make a request to the server. There are transpilers which compile Python into JavaScript like [transcrypt](https://www.transcrypt.org/), but unless you're dead set on only ever learning Python, it's worth the experience to learn enough JavaScript to do what you're looking to accomplish.
Is this some weird attempt to retroactively prove your point by using as few words as possible? I really think you should reassess your opinion of not saying stuff being *good*, especially if it reduces you to monosyllables. Or is it some kind of desperate desire to get the last word in, without actually saying anything? For someone who thinks my continued replying is about "anger" or having "skin in the game", you seem more than a little vehement on the topic. I mean, I'm not the one who's sprinkled practically every post with random insults. Maybe you should be looking a little closer to home for this anger you seem so sure of?
&gt;Is this some weird attempt to retroactively prove your point by using as few words as possible? I really think you should reassess your opinion of not saying stuff being good, especially if it reduces you to monosyllables. Or is it some kind of desperate desire to get the last word in, without actually saying anything? For someone who thinks my continued replying is about "anger" or having "skin in the game", you seem more than a little vehement on the topic. I mean, I'm not the one who's sprinkled practically every post with random insults. Maybe you should be looking a little closer to home for this anger you seem so sure of? What are you even talking about at this point lmao
Yeah, I was looking for something exact, though.
"a reason" if any.reasons(self.think_of) else None
Thanks man! We use juniper switches since setting up access and distribution switches are simpler in my opinion from experience. Same goes for VLANS. I’d like to take a look and your video and am looking forward to it!
I don't know enough to say which would be the best way to implement such a thing, but maybe one of these: * A new kind of thing, let's call it "sized iterator", which would be a special case of an iterator. In addition to everything an iterator has, it would have a method that returned its number of elements. * Iterators would optionally provide such a method. Possibly, these two would amount to the same thing in Python. Special cases, worthy of consideration: * Length unknown, but known to be finite * Length unknown, could be finite or infinite * Length known to be infinite Perhaps these would require separate, boolean methods.
What tutorials reveres None from day one?
Run white during the day, then switch to a more yellow color at night. Basically f.lux/night mode for your lights
So instead of using `len()`, you want an iterator with a method that gives the size of the iterator?
I'd spell it out, but I suspect it'd involve too many words for you again. Give it a go yourself - with enough practice, you might get over this comprehension problem!
And the "is" check is also faster because it's only checking that the 2 objects are the same in memory 
I don't know much about tutorials, sorry.
I would love to hear the PHP one.
Oops, I apparently lost the part of my previous comment where I said that "I suppose this method might simply be `__len__`". Does this mean that it would simply be a matter of adding this method to existing iterators, where applicable, and start using `len` on them (disregarding the case of infinite lengths)?
youtube-dl does this already.
Would a website be a better solution here? Do you have internet access in the field?
 &gt;&gt;&gt; hasattr(dict, '__len__') True &gt;&gt;&gt; hasattr(frozenset, '__len__') True &gt;&gt;&gt; hasattr(list, '__len__') True &gt;&gt;&gt; hasattr(set, '__len__') True &gt;&gt;&gt; hasattr(str, '__len__') True &gt;&gt;&gt; hasattr(tuple, '__len__') True
You didn't get very far in Automate the Boring Stuff, did you? There's a whole section about `None` in chapter 3.
lol
Very good. Could we have it for other things as well, like [`islice`](https://docs.python.org/3/library/itertools.html#itertools.islice) and [`permutations`](https://docs.python.org/3/library/itertools.html#itertools.permutations)?
Generators can be infinite. Both of those methods are generators. I said previously: &gt;Objects without a defined size cannot allow this, such as generators. How would you implement a method that is capable of measuring the size of an infinite collection? 
Generators can be infinite. Both of those methods are generators. I said previously: &gt;Objects without a defined size cannot allow this, such as generators. You responded with: &gt; Special cases, worthy of consideration: &gt; &gt; * Length unknown, but known to be finite &gt; * Length unknown, could be finite or infinite &gt; * Length known to be infinite The first scenario is handled with built in types that have a `__len__` method. The second scenario can easily just be your default presumption and wouldn't need a special method. The third scenario is impossible. You cannot measure the size of a potentially infinite collection. 
This is not Python
I just wouldn't run Python directly on mobile until it's officially supported, that's the most efficient. Instagram and Pintrest stacks are how to include Python on mobile.
Need help in something? Sounds intersting and i wanna do some real projects
The problem is there's no generic way to do this for every possible iterator, so you'd have to set it yourself. from itertools import permutations from math import factorial class lpermutations(permutations): def __new__(cls, iterable, r=None): self = permutations.__new__(cls, iterable, r) self._n = len(iterable) self._r = self._n if r is None else r self._l = None return self def __len__(self): n = self._n r = self._r if self._l is None: self._l = 0 if 0 &lt;= r &lt;= n: self._l = factorial(n) // factorial(n-r) return self._l p = lpermutations(range(20)) print(len(p)) Of course the problem here is that you're limited by what **math.factorial** can do (at least in 2.7 it can't handle **long** values, so `lpermutations(range(21))` will fail with an OverflowError), plus **itertools.permutations** can take an iterator with no defined length as its first argument, but this would fail with an AttributeError, so there's lots of problems with this approach. The real issue though is the generic problem; arguably most (if not an infinite number of possible) generators have no way of knowing their length ahead of time; certainly not enough of them to create a need for a new primitive type when -- within limitations -- you can provide this for yourself in custom classes.
Add cpython to it
 &gt;&gt;&gt; "a reason" if any.reasons(self.think_of) else None File "&lt;stdin&gt;", line 1 "a reason" if any.reasons(self.think_of) else None ^ SyntaxError: invalid syntax 
&gt; I don't know much about the tutorials and guides, but if your tutorial doesn't revere None from day one, I'd shy away from it. You're gonna be shying away from the vast vast vast majority of tutorials, and a hell of a lot of great ones as well. It's a important concept to know to consider yourself a fully-fledged pythoneer, but it's not super terribly important to come to terms with straight away as a beginnner.
Hey that's cool! Looks a lot like my little library, Kylie: https://github.com/judy2k/kylie
I can't imagine a scenario where this would be necessary. Where would you need to know the length of an iterator without iterating over its elements? If the content of the iterator doesn't work, you could always do something like `sum(1 for _ in iterator)` to get the length.
To be honest I'm not sure. Guessing those are all great alternatives?
You could use [`operator.length_hint()`](https://docs.python.org/3/library/operator.html#operator.length_hint) (new in 3.4) but be aware that this is not implemented by many iterators.
It is only a prefix match. There is a "fullmatch" function that (efffectively) introduces a $.
uhm, it is
unless reassign any to a custom class that has a method called reasons with a local variable called think_od
Make it change shortly to light blue every 2-3 hours to remind you to drink enough water 🤓
VMs can always be run side by side, otherwise it would defeat the purpose. When you talk about installers alongside, you're talking dual booting... Now you can have bare metal installs that run as VMs with KVM and stuff, but way out of the ability of a lot of people (you know, reading is difficult). 
Then use a Linux vm. You're going to have to get comfortable with Linux when you want to eventually roll your thing out to production etc. You'll honestly just have a better time developing under Linux. 
Bustedddd
It'd be nice if == None was optimised to be is None.
Oh. Thanks for giving advice on how to choose tutorials, then.
Makes you wonder why do people keep building and releasing nearly identical tools? Why spend years of valuable time on duplicating effort and diffusing talent? And so often with some specific goal (lightweight!, dependency free! simple!) and then again evolve in just another variation of the same thing. 
This is actually why I prefer xmlrpc api. They expose that object structure immediately with built-in xmlrpc client library in python.
`is None`and `== None` are semantically different. The latter can be true in cases where you don't want it to be. ```python &gt;&gt;&gt; class Foo: ... def __eq__(self, other): ... return other is None &gt;&gt;&gt; Foo() == None True &gt;&gt;&gt; Foo() is None False ```
It's probably because for a legit newbie, the concept of nothingness is actually quite complex. We're I writing a tutorial, if want to focus on things that are easily explainable first, like math, loops, structures, and strings. `None` is super important to understand, but without those fundamentals first, I think it might just be confusing.
 I like the library name reasoning :)
I pretty much had to write the library after I came up with the name!
Haha, totally!
I got this, referring to `any`: AttributeError: 'builtin_function_or_method' object has no attribute 'reasons'
This example seems super contrived to me though, that implementation of `__eq__` makes no sense. Unless you're working with super weird equality definitions `== None` and `is None` will return the same result I think.
Basically this. Most important skills are typically problem solving and the willingness to learn
My question was ambiguous/vague to get a variety of responses which have all been very helpful. There is a minimum skill base for me to be able to have a realistic chance to get a junior job. If that was not true, anyone would get hired for these positions. From other responses it seems, a solid ability to solve problems, willingness and capability to learn and some show or proof of the previous that are relevant to the industry are what i need to have a chance. Wouldn't you agree?
We have put `ensurepip` back in place and uploaded new Python packages for all platforms. `conda update python` should see you right. Thank you for bringing this up.
Nice
&gt; Honestly what does Conda do outside of profile guided optimisation? Your questions are *very* vague and you seem to have the terms confused (Conda is a package manager it doesn't do PGO at all for example). Please, if you genuinely want useful answers then ask specific questions. What are your needs? In general (as that's all I can give you at present) the Anaconda Distribution makes software management and deployment (not just Python-oriented computing) easy and reproducible across all of the most popular operating systems. We aim to make sure that our software works well together and with system software you may wish to use it with. The recipe we use to compile Python enables PGO and our compilers are modern enough to allow that. We also enable LTO, compile the interpreter statically (for Python 3) and do a bunch of other stuff with the goal of making all of our software fast and secure. If you only care about a fast Python interpreter you could use Debian or Ubuntu or you could compile it for yourself (our scripts are open if you want to use them as reference). Hopefully this link will be helpful? https://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/
We have put `ensurepip` back in place and uploaded new Python packages for all platforms. `conda update python` should see you right. Thank you for bringing this up.
Thank you. I probably should have reported this a bug through proper channels rather than simply moaning on a public forum but I appreciate you taking the time to look at this. I think that with this change I will have no problem recommending Anaconda for all my users.
Great!