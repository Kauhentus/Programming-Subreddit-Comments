I just released this week logupdate. This is a port to python of the javascript library [sindresorhus/log-update](https://github.com/sindresorhus/log-update) and it's used to program rendering progress bars, animations, etc.
I've got an even shorter one! def approximate_e(): return math.e
I am just starting out with Python and i wanted to start by looking at your source code for Alchemic Archer, how did you go about making the maps/levels? Is there some sort of program that uses the tiles to place them into a map text file? thanks
That method converges VERY slowly
Thank you! 
&gt;Most people I know in real life (that play lots of video games) think that $4 is bordering on a bit too much. Most gamers are always trying to argue that games should be cheaper, especially if they equate modern graphics with value. But your game appears to have a lot of work put into it and appears to provide a lot of enjoyment, so it really is worth more than $4.
I know for a fact that poetry creates a virtualenv for you. See [this doc](https://github.com/sdispater/poetry/blob/f163d7cb591cb6f6b629a095b52199ed6398f373/docs/docs/configuration.md#L5) (couldn't find it on the actual doc website, so it's probably used as an internal manpage).
Stop using it or buy a new machine? Performance issues are usually difficult and avoided to be solved upstream.
[Warehouse](https://github.com/pypa/warehouse) The new PyPI web application. Example of Pyramid application with Docker deployment. 
This is very true, but with the constant in the standard library, it's important to note that this is an academic exercise only. Especially since this function achieves it's maximum precision with n=17, so talk of "infinity" is a bit ambitious ;) 
/r/learnpython Also I've found it much easier to just use pandas' to and from excel methods.
It might not perfectly fit your problem but requests is nicely written. 
Of course-- as expected. But also there are some applications where such an approximation is actually better than the constant
I will look in to pandas.. 
We use pm2 in every nodejs container, mainly because you can restart and reconfigure the app without container stopping because pm2 is proc1. It is also very nice for container healthcheck. But it will make python containers around 150MB larger because of nodejs/npm. &amp;#x200B;
If you're doing anything with tabular data, pandas is the way to go!
How did you handle physics ?
This is awesome! So cool that you send the source code with it! 
https://github.com/django/django is a large Python project
Calculate the movement on 1 axis at a time.
I'm the author of the blog post and the underlying proof-of-concept project. I'll gladly answer any questions /r/Python may have :)
Pandas uses xlrd for reading, for writing, it uses the following. https://pandas.pydata.org/pandas-docs/stable/io.html#excel-writer-engines While pandas is great, you have to be careful. xlrd, openpyxl, and the other engines have different defaults for their interpretations as well as their style preservation. If you *were* using openpyxl before, you should stick to it. If it's all new and your config debugging is as you go, then pandas is fine. --- I say this specifically because someone decided to suddenly swap out openpyxl for pandas and the result was catastrophic. xlrd and openpyxl represent floats and some other things differently, and it resulted in quite a bit of lost revenue due to innacuracies over a day because all the work done on spreadsheets automatically had to be scrapped and redone after a revert. xlrd does read faster though, I'll give it that.
Wow looks amazing
thank you very much for the detailed answer! i ll go with timescaledb for now
* no one
It has [an active community](http://www.zope.org/en/latest/community.html).
If you want a big engine like unity but don't like C# you might want to take a look at Godot. There are even Python bindings so you could write your entire game in Python.
Hey OP, firstly the game looks really awesome. I appreciate it! Secondly, i assume that you created this site by yourslef. May i know what programming language did u used to create this website? Thanks in advance!
Sad to disappoint you, but I didn't make the website. Itch.io is a popular marketplace for games. I designed the game's page, but that had nothing to do with programming. :P
I regularly got 500-1000x speedups when I optimize code using numpy. It's quite common to see that.
I'll be sure to check this game out. 
Ok fine, I won't use the math module then: `def approximate_e(){ return 2.718281828459045}`
:D
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Look at the examples on http://arcade.academy or the source to the library itself. 
This question is better asked in r/learnpython. Can you show what you've tried/done/researched already? Have you already made the website (that's how I interpret it), and if so, what language/framework.
I only done the front end html css javascript, I'm waiting to implement a backend until I know which one suits this project best. Do you have an idea of which way i should go with this?
Isn't this is only useful for data that doesn't have cross-row relations? In general, chopping up the data would break things like groupby, resample, or anything using multiple data frames. Does this tool have means to deal with those scenarios?
Easy way to do this is with Flask. Set up a simple web app, and in a route you can run the application. However, I'm not sure how you'd do that since your route needs to return something. @app.route('/fireApp') def fireApp(): runapp() return "something" 
*banging head into table* 
Thanks a lot. Hope this helps lots of people.
Hmmm?
Yes! This was literally the simplest use case that we'd come across, but we definitely support more involved, stateful pipelines. Could you point me to an example (or canonical) problem in data analysis that deals intrinsically with multiple frames? I'd love to take a stab at running it on Wallaroo.
Comment from removed post: It's not actually about writing Markdown. It's about how to share it's html output securely (without worrying about malicious JavaScript) and conveniently. (And view html is better than PDF on both Mobile and desktop - for different reasons). And the proposed solution seems better to me than modern ebook formats with js. Sharing documents directly is more convenient than hosting them. So the Jupyter on demand rendering on server (by link or upload) is a good thing. But design lacks and you should write a notebook instead of normal Markdown. But on Gitbook you have a nice design, plugins, maybe even security and normal Markdown but need to host a whole repo. Moreover: it's better to write Markdown in offline editor like Atom/VS Code. So it would be nice to have best of all: style, plugins, security and design from Gitbook, render single file on demand online like Jupyter, edit in Atom offline. If to implement it all together as a ready to use solution - that would be a killer.
I think **requests** is an amazing tool, but every time I have to dig into the source, I always feel a little confusing.
Google is the father we never had lmao i learn everything from there. So even after I learn flask I'm still gonna be stuck at that point where I need to return something right
Easy and dirty way is to just `fork()` I think. Again, it's on Google.
I wanted to ask the same question, as we love to code and wants it to be useful
Literally the next words are “(and in some parts of the world still goes on today)”. Good reading friend
It's meant to appeal to the same audience. While Super Meat Boy has saws and stuff, Super Potato Bruh has projectiles. The name was intentionally based on Super Meat Boy. (Super [FOOD] [MALE_TERM])
Still lost. I'm gonna try some google fo, thanks for replying dude
No, the only front-end language is JS, so Python will never be full-stack (there's some implementations for front-end Python, but I don't think they're mature). Python is however pretty popular as a backend language, with frameworks such as Django and Flask.
the fuck ?
Reddit is a Python web app.
This is true right now, but with web assembly now being supported on all four major browsers by default (safari, chrome, edge, firefox). Web assembly may catch up and now you can use several languages to develop front ends. 
you had me at "install node.js"
So I have them backwards? I wrote a program using these two methods and one was wayyyyy faster than the other but may have mixed them up. 
There's a stackexchange specifically for reviewing code, the answers usually go into best practices or ways to improve snippets of code You can check out the python questions here: https://codereview.stackexchange.com/questions/tagged/python
I'm in a sector where data-sharing is considered a cardinal sin (financials), so I can't really share my use-case, sadly. I can provide a 'hypothetical' scenario, however (for a business I consulted for some time ago). Details were altered to protect confidentiality. The original scenario was solved using SQL, not pandas, though. Suppose I'm running a shop selling outdoor sports equipment. I would want to find trends quickly, so I can adjust my online marketing campaign. However, my sales are heavily weather-dependent. When it's sunny, I don't want to be alerted of increased swimwear sales, but a mid-winter increased swim-wear sales might indicate something in the media, which we could take advantage of by adjusting our marketing. There's probably always some background swimwear-sales for indoor swimmers, which we need to adjust for. *Input*: live access log entries, live weather data, and sales data from both the physical store and the online store. All of these in hourly batches. Besides that, I also have large datasets of historic data in which to search for similar patterns. *Output*: a list of trending products, not explained by weather and seasonal trends. *Process*: Turn the sales data into a per-category aggregate, instead of per-product sales. Turn sales into a rolling window. Turn access-log into hourly percentage of weekly sum and yearly sum (the current 'hotness'). For each product category, find 10 most similar (euclidean distance) historic samples using current weekly and yearly hotness, outdoor temperature, outdoor precipitation and wind speed. Compute weighted average for each of those using inverse euclidean distance, and use these numbers to find trends. This scenario uses: * a static dataframe for historic samples. (no need to redistribute that) * rolling and resample on the batched dataframe * Multiple batched dataframes.
You may want to try a less ambitious project until you have the basics down
OPs has two nested for loops, whereas this only has one multiplication, one addition, and one exponentiation. It should be much faster, even if it converges slower. 
So... What's your question? This looks like working code to me.
I’m getting TypeError: must be str, not int?
How is the app being reconfigured? I would have assumed container environment variables or image, but that doesn't change without altering the docket/k8s/etc config or pushing a new image...
https://github.com/Axelrod-Python/Axelrod A library for running loads of different types of tournaments and games, of the iterated prisoners dilemma. Also has a really good docs page,linked to on the github. 
What is the type of `newage`? What is the type of `"you are in 5 years is "`? What does the `+` operator do? What other operator can you use for concatenation?
I figured it out. On the second line I had to change newage into str(newage)
I clicked x once I saw that. 
This isn't actually using Python for frontend, but if you go to anvil.works you can develop web applications only in python. It basically works as a drag and drop IDE. It has it's limitations, but it makes web dev really easy. Also there is options to transpile to javascript from python, such as pyjs.
Python however has some really good backend frameworks, like Flask and Django.
* r/learnpython * Format your post * Provide the HTML file too In the HTML you need to do some Jinja stuff: http://flask.pocoo.org/docs/1.0/patterns/flashing/
This post is better suited for r/learnpython 
This post is better suited for r/learnpython 
This post is better suited for r/learnpython 
This post is better suited for r/learnpython 
SQLAlchemy is a phenomenal python project with an awesome maintainer.
But poetry *does* create venvs for you by default.
abysmal documentation, however :(
Is this in any way inspired by https://www.youtube.com/watch?v=qv6UVOQ0F44 ?
Postgres has fantastic JSON support if you want document-type storage. Its JSON indexes are fantastic (you can index deeply nested columns and data types). There are extensions out there if you want to bring in JSON schema validation, too. 
Also how to get this to run on windows?
There are a number of well documented examples on Github that you can download and start playing with. Here's one: https://github.com/GoogleCloudPlatform/getting-started-python/tree/master/optional-kubernetes-engine
There are purely procedural languages which don't have functions; there are also purely object-oriented languages which have only methods (but they're more or less just functions). More or less, though, yes - you call a script, which is usually pretty short, and that calls a function, which calls some functions, which each call some functions. Splash some instantiation of classes and calling of methods in there and you've pretty much got it. There's good reason for this. Codebases often span tens of thousands of lines of code - if that had to be read one line at a time with all variables in the same namespace it would be incredibly awkward to read and write. Functions allow you to split it up into reusable, testable, documented units. I like splitting stuff out into functions even if the function is only used once. Basically anywhere which "bottlenecks" variables, where you put very few things in and get very few things out, is a good candidate for turning into a function. Then you can document it without relying on comments (which can't be accessed by tools like IDEs), and people scanning your code later don't have to look at the implementation if they don't want to. Think about something like this: def get_dressed(): put_on_trousers() put_on_shirt() def put_on_trousers(): trousers = get_trousers() for leg in ["left", "right"]: put_body_part_in(leg, trousers) def put_leg_in_trousers(leg): raise_leg(leg) hold_clothing(trousers) lower_leg(leg) It's a stupid and inconsistent example, but imagine you're reading it later - you don't care about every single movement involved in getting dressed, so you can just see "oh, they've called `get_dressed`, that's fine" without looking at the other definitions. If you have a bug and one arm is left out of the shirt, then you can look at exactly what's happening when a shirt is being put on. If all of the code was just one line after another, you wouldn't have that power.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [GoogleCloudPlatform/getting-started-python/.../**optional-kubernetes-engine** (master → e8c9b60)](https://github.com/GoogleCloudPlatform/getting-started-python/tree/e8c9b600b6431f8d7efff8cb85c0878705d04969/optional-kubernetes-engine) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e6c49aj.)
Check out /r/learnprogramming and/or r/learnpython
Would you use numpy array to store e.g. mixed int, string and float values or you would use Python's list?
i imagine this also has some pretty heavy metaprogramming,
You can look for part time work at /r/forhire and can also check UpWork. You may require a portfolio to showcase your skills. This could be demonstrated through number of ways, including: - An account at GitHub with some public repos - A StackOverFlow account showing your contribution to Python community and problem solving skills - A blog with articles covering various Python related topics - Work samples (code, case studies, web links). This could be part of the blog. Hope this helps.
There are three (that I know of) paradigms of programming... 1) Procedural Imagine remote-controlling a robot and trying to bake a cake. You would have to push each button to move the robot forward, then raise its arm, then grip the fridge door, then move backwards to open the door, then release the door handle, then move forward, then move the arm to the eggs, then grab the eggs, yadda yadda yadda. Now, imagine have to type each step out into a program. If you have to repeat something, you have to push the same buttons in the same order again and again and again. That leads to... 2) Functional It's a bit like procedural in that the program follows the order, but you can define functions; little bits of program that the main program can call out to. In the robot example, you would be able to record a number of button pushes and replay them. You can define a function that tells the robot how to run the blender. Anytime you need to mix something new in, you can tell the robot "Run function `run_blender(time=60, speed=high)`" rather than having to enter each command to raise the hand, then grip the handle, the push the high button, then move the mixer around in the bowl for 60 seconds, then push the stop button. 3) Object-oriented In object-oriented programming (OOP), you define classes. Each class has functions in it. You can define a Cupboard class. The Cupboard class would have functions like get() and put(). You would then create an object with the command `cupboard = Cupboard(some arguments)`. The arguments could be where the cupboard is in the kitchen. You could the command the robot `cupboard.get(flour)` and the function would call out to other functions to move the robot to the cupboard, open the door, get the flour, and close the door. You could even use inheritance to create an Oven class from the Cupboard class. The Oven class would have all the functions of the Cupboard class (like get() and put()), but could also have new functions that Cupboard doesn't (like set_temp() and set_timer()). So you could create an Oven object with `oven = Oven(args)`, then have the robot set the temperature with `oven.set_temp(350)`, then `oven.put(pan)`, then `oven.set_timer(25)`. The refrigerator could also be a Cupboard. `fridge = Cupboard(args)` and `fridge.get(eggs, milk, butter)`. Even the egg carton could be a Cupboard since it has a swing-open door. When you get to Functional and OOP, you can start using libraries. Objects and functions are stored in separate programs which your program calls. By default, Python can open and read files on your computer... `datafile = open('//home/user/datafiles/stock_prices.txt', 'r')`. Other people have written libraries to extend that capability to reading files off the internet... `datafile = urllib2.urlopen('http://stockprices.com/todays_prices.txt')` Rather than you having to re-invent the wheel, you just import a library and use it.
I hate to give just a link to GitHub because you presumably want some curation, but GitHub has "topics" and you can sort those by number of stars, although popularity isn't necessarily a metric of code quality: https://github.com/topics/python?l=python&amp;o=desc&amp;s=stars
Airflow is a great piece of kit. The one thing is needs is dynamic subdags....
Using vector math operation is just a small part of the story. I agree with you, I would work with Numpy for e.g. int vectors. However, checking membership, indexing, modification do not assume homogeneity and are frequent operations used for Python's lists. It is interesting to see how Q helps the developer to express list operation much simpler and is a more intuitive way due to its better and more rounded design. It is worth knowing the pros and cons of various language, this is often not obvious based on test books. &amp;#x200B; Originally all code snippets were textual. Unfortunately, tablet and mobile view distorted it and I had to convert it to picture to guarantee the same look'n feel.
Oh, they wrote it themselves? Cool!
It's a good tool. Fixes your typos in console by typing 'fuck'. 
Not only is it clickbait, but it isn't even good clickbait: PySpark isn't on the list.
I wrote flask-jwt-extended. I'm pretty happy with the source code / documentation: [https://github.com/vimalloc/flask-jwt-extended](https://github.com/vimalloc/flask-jwt-extended)
Posting from the a friend. https://twitter.com/matt_c_long/status/1042108597348511749 Cloud/HPC python software developer required. Boulder, CO.
Hey /u/IAmKindOfCreative, this thread might be a good fit for the /r/learnpython bot.
Thanks! I'll take a look at these links. I don't know much about IPython or Jupyter but people at my last job swore by them.
Heaven forbid someone posts code that does something someone else has already done. People want to show off fun things or tricks or quirks about the language. There is no need to put them down over it. 
No no the approximation itself is much slower than using the factorial. Like... I had to go to n for 6 digits and n^2 for 6 digits using the other method. 
Thanks if you have telegram or discord could we chat there?
Why not use the QuickBooks API rather than Selenium? It's not going to break if they change their UI.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
[Lektor](https://getlektor.com) can always use more plugins
Hi Dan, just to let you know you can now do the exclusions in layer linter, using 'whitelisted paths'. Enjoy!
Very cool stuff man. 
This is super cool but I had a heard time hearing/understanding the narration. I think it would help a lot to get a clearer microphone, speak a little louder, and be careful to enunciate. 
Yes, it's definitely weird. It happened when I was trying to replace everything with numpy, but after changing arrays to numpy.array it worked slower than before. Any ideas why?
It depends on whether you need speed of calculation or super accurate values. 
And *even if* it turns out that, despite your attempts at rewriting things to be more efficient, Python is your roadblock and you really do need C for speed, it is typically the case that the performance bottleneck exists in only a tiny fraction of the code. Rewrite that in C, call it from Python, and you'll have performance comparable to what you'd have if you had rewritten the whole thing in C.
I'd guess that's just what everyone's heard of and used. I hadn't thought about using Requests, I'll give it a shot next time. I'll take a look at LXML too, looks cool.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Yes 1984 it was literally erased, but start putting arbitrary restrictions, you will eventually find yourself at the point where words are literally erased. Some books were removed from the curriculums of a school because it referenced slavery and used terms from the time period which it was written in, and therefore was offensive to some people. Next other schools followed. Similarly more *will* follow, until these important books are eventually completely lost on people. And then these classics will, eventually, be banned outright by some governments. The "master/slave" thing here is exactly the same. It doesn't matter at all now. But a century or two from now without people intervening against this crap, and it will be wiped from the dictionary and all vernacular. So, yes, I will continue to compare it to 1984. However there's no point in this discussion that just goes back and forth between two paddles instead of actually growing further, so, have a good day, I won't continue entertaining your silliness.
Can you just type up a transcript? I'd rather read it.
haha I was expecting this comment. --- Article &amp; PM2 author here Yes PM2 depends on Node.js and his asynchronicity makes a good fit for a process manager. Supervisord is coded in Python, why not a process manager in Node.js? :) Later we'll see to embed the node binary directly ([https://nodejs.org/dist/latest-v10.x/](https://nodejs.org/dist/latest-v10.x/)) Anyway, beyond the languages questions, PM2 will help you for sure, have a look and let me know. It's my first trial to make PM2 support properly another language, and depending on the feedback of the Python community, we would love to bring the value and concepts we already built on Node.js for Python that time. I'm speaking about some concepts like "custom actions"; custom actions is a way to interact asynchronously with an at application, at runtime. This allow to modify the behavior of an application without having to restart it. Think database switch in real-time, queues management, in-memory structure inspection or even variable mutations. The only issue here is that Python is not asynchronous by nature, but I'm really excited to see efforts &amp; standards growing, like asyncio. We're also interested to maybe bring some kind of "cluster mode" we already built for Node.js, allowing 0 downtime reload and hot things like that, with minimal configuration, that's our credo. &amp;#x200B;
Your game looks like fun, I’m impressed by you doing it in Pygame. How many copies have you sold? Will it make it to a Steam?
This really isn't related to Python. You should post on the official forums
[https://docs.google.com/document/d/1mrekiwqYeWCikgTMSwr6Z4q6QuYbjavaSoOrX-SPIKk/edit?usp=sharing](https://docs.google.com/document/d/1mrekiwqYeWCikgTMSwr6Z4q6QuYbjavaSoOrX-SPIKk/edit?usp=sharing)
@sztomi I was inspired by that video, as I wanted to give NEAT a try, and decided to use Super Mario Bros
&gt; So, yes, I will continue to compare it to 1984. Good :) 
To be fair it is more and more becoming a python api and a node + react front end.
I do use spi as well as i2c, and I must say you have a point. Yet why not name master device as manager and slave devices as responder. Slave never pulls the CS or SS pin high, they always respond when they got asked of something. Anyways, I got your point, and it's a fair one. I think the software community could come up with a solid argument apart from slavery or just say "master and slave hiearchy is controversial and we don't want to deal with it and just rename them". Thanks for your time. 
Nice! Do you have a github page?
As of now, I’ve sold 83 copies and it should be on Steam some time this Fall. :D
I do something very similar (e.g. https://github.com/crdoconnor/commandlib/blob/master/commandlib/command.py). However, I just use copy/deepcopy, assign new variable(s) to the new object and then return it.
Yeah it's in the description or @vivek3141.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [crdoconnor/commandlib/.../**command.py** (master → 72e5c81)](https://github.com/crdoconnor/commandlib/blob/72e5c811aededaa11f43d9b3415dfb3982c4c581/commandlib/command.py) ---- 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Already has, I hate this cancer in our industry and will shun it at any chance. Python is now something to be laughed at in our company. 
This looks great but would prefer if there is a vanilla kubernetes setup some place
I love looking at SQLA as a reference for project organization.
Is there a part in the game the potato gets dirty, or changes to various types of potatos? and you need a potato brush to clean him up etc and he gets more powerful?
You are a hero, thank you.
😫🤢🤮
No? What game is that referencing? xD
he's a potato right? i thought he might do what potatoes do.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
This is absolutely false. There is no reason to expect the two measurements on your population to converge at the same rate. For example, consider measuring the number of arms a person has and their age. Since the mean number of arms is extremely close to 2 for the entire population, you would satisfy any reasonable threshold with 1 sample. This doesn't mean you have sampled enough to determine the mean age. I also don't know what the CLT has to do with this. 
Tryna do what potatos do..Oooh.
I’m glad! Do you have a blog or something wi5h updates? I’d be interested to hear how you do with it. :)
Fifine has $35 USB compression microphones that will make your voice incredible for the next video. Then run the audio through Audacity to remove extra noise and it'll be crystal clear. Great vid. 
I did find https://www.python.org/dev/peps/pep-0486/ PEP 486 -- Make the Python Launcher aware of virtual environments Which seems to have been accepted But my py launcher still seems to launch global python
No one can help you with the information you've given. You're going to have to give examples of your code. Also, you should be asking your questions in r/learnpython not here.
Why wouldn't I just use Dask? It looks like this is basically a proprietary version, and the API is less similar to pure pandas... 
Roger that , will do!! I appreciate it!!!!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
!Remind me 1 day Use save button
I think that's entirely fair. Master and responder are accurate and middle-of-the-road.
can you get a decent mac for under 1500? (including the sales tax) 
Awesome, thank you :) &amp;#x200B; Honestly impressed at the amount of polish you have on this, never thought pygame could look this good ! :D &amp;#x200B;
Why not?
It's working well for me on macOS, running from source! If you'd like anyone to test/debug the Mac build I'd be happy to help! I use PyInstaller for packaging a PyQt5 app at work, so I have some experience with it.
Netbox, by Digital Ocean https://github.com/digitalocean/netbox Good quality python and django project
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Yes I'm pretty sure
Plone (https://www.plone.org) uses ZODB under the hood.
If you’re writing static content (ie not a blog-type site) then Sphinx is great. There’s nothing in Sphinx which forces you to document code at all; you can use Sphinx to build from .rst files with zero code. However, if you’re looking to create a blog site, or a documentation site which needs more flexible layout/navigation options, then you’ll want a static site generator. For example Hugo, Pelican or Lektor (Lektor is my preference as it is easy to customise with python plugins)
[https://github.com/vinta/awesome-python](https://github.com/vinta/awesome-python)
Short answer yes, long answer yeeeeeeeeeeees
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
[bottle](https://github.com/bottlepy/bottle), a small, fast, flask-like WSGI Microframework. Well written and comprehensive documentation and a codebase that’s nice to work with.
I did it for the t shirt last year. still haven't received mine.
Practicing a lot of game design with Pygame! Also figuring out how to download flickr images in one script 💪
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Why do I need pipenv if i can just use conda for everything? Is it more convenient or what am I missing out on? 
Numpy arrays are only really useful if you need to either pack your data densely, or plan to do a lot of numerical operations. Since strings aren't really numerical, having a mixed numpy array of strings and numerals doesn't really make sense to me. So, in short: lists.
It's funny, but I don't need no pen! Get lost ;-) &amp;#x200B; Nothing beats (regex) searching on a PC
1. /r/learnpython 2. Post your code.
``` word = 'example' for i in range(0, len(word)): print(word[0:i+1]) 
In case people are curious I decided to call out to other scripts with the python executable in sys.executable
/r/learnpython and read the sidebar
I know it's bad to criticize people for initiative, but please don't use electron. :(
What about [pipenv](https://github.com/pypa/pipenv) ? It has 140 issues only :D
Am I missing something? Why not? 
Looking good OP. Don't be too bothered by the "electron is the worst thing ever invented" circlejerk, it's always cool to experiment with new stuff.
If you don't manage to find anything and have to rewrite it all, I wouldn't mind if you put it here :)
It is a very good database, but is not much used outside zope and plone. I have used it for 15+ years in zope and plone myself but would not start a new project in it. Postgress would be my choice. 
its trash
Experiences like these are pretty much the only redeeming aspect of Electron I can see. Specifically the part where the OP got to build an _installable_ app and got to the joy of using it, all while leveraging their existing skills. Always nice to see people get joy out of and be excited about coding. ^(That said, I don't see myself ever willingly using or paying for a piece of Electron software.)
Alternatively: word = "example" for i, letter in enumerate(word, start=1): print(word[0:i]) or for i, letter in enumerate(word): print(word[0:i+1])
Electron is good or not, I still feel that NPM has a wide range of software repositories, just like Python. I created a lot of Flask apps, but I actually want to use Node.js too. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I totally agree with this. I may be able to do it now, after becoming more familiar with APIs, they are still a bit intimidating for me
why the spam link?
[Here's the link.](https://www.youtube.com/watch?v=dQw4w9WgXcQ)
Your boto client might be accessing different region, not the one that you see on aws console.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Is there a particular reason you chose to use electron over libraries like [`cefpython`](https://github.com/cztomczak/cefpython) or [`eel`](https://github.com/ChrisKnott/Eel)? I'm sure there are more that I don't know about (I haven't written python day to day in a while), and I know electron definitely has mindshare (and likely fingershare to type out some bugfixes/features), but wondering if that was it.
Why is "tailing a log file" something I need a GUI for? 
thanks.
thanks.
[https://stude.co/351479/learning-python](https://stude.co/351479/learning-python) THIS one definitely. It's easy if you want to understand the basics. Thus it's free now for a limited time (I paid 40$, so bad luck huh..) so in your case I would definitely try that
Wow, thank you!
Yup!
you get used to the latex syntax, but I know it looks weird at first. You can do a lot with Sphinx and others like Pelican (what I use for my blog). You should be okay with those except for tables. If you have complex tables, that can be a problem outside latex. &amp;#x200B;
To print onto thermal paper. He says is right there in the OP.
\&gt; something I need a GUI for
yo 100MB hello world java script dog virtual machine in a window4 Head/. 
Just an fyi, to summon someone on Reddit you use /u/ then their username e.g. /u/sztomi
I'll second this. I don't love JS and I don't like bloated software, but Electron is a really good way to build cross-platform GUIs. My company would have a hard time staying competitive without it.
Kick up more RAM
SMB has projectiles as well (rockets), but not that much.
Sorry, i'm fairly new to Python here. Do i need to pay to get the Google API Token ?
It surely is very good project for learning something new, good job! But I hope that Electron will demise as it's one of the worst options for GUI from every aspect except companies/developers that "gotta ship fast".
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I've been seeking part-time work (preferably Python/Django or Pandas related) for a while, with no success. Final year student with 4 years of Python experience, if anyone's hiring part-time!
with QML to boot. super easy stuff.
Electron Python O, devs, what is this beast thou hath wrought?
and Spotify 
[mp4 link](https://g.redditmedia.com/d7ZvkLpQiHRzTe2YH9d9JmBJulwRjOBpTQCsJsVJDtg.gif?fm=mp4&amp;mp4-fragmented=false&amp;s=a8d094cd5e43a4507590485de39217f8) --- This mp4 version is 87.76% smaller than the gif (1.5 MB vs 12.28 MB). --- *Beep, I'm a bot.* [FAQ](https://np.reddit.com/r/anti_gif_bot/wiki/index) | [author](https://np.reddit.com/message/compose?to=MrWasdennnoch) | [source](https://github.com/wasdennnoch/reddit-anti-gif-bot) | v1.1.2
This is my second python program written several years ago when I was a newbie. I don't remember when it was created exactly but I'm sure the movie World War Z was showing that time. it was motivated by Zulko's blogpost for moviepy. The image contains 360 frames, the red are zombies, the orange are the infected people, and white spots are human population density. I have just uoload the code to github: [https://github.com/neozhaoliang/world\_war\_z](https://github.com/neozhaoliang/world_war_z) 
Yes but github cannot display movies ....
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
That's the plan but I figured I would find out who was looking for help.
I have tried both, and VS Code seems neat, especially with vim mode. But there is a degree of a matter of principle to it, to me – of not supporting or endorsing tech I personally deem abhorrent. Vim and Sublime Text serve my text editing needs _sublimely_. As long as I am not forced to use VS Code or Atom, I am perfectly happy for the folks enjoying those editors. 
Sublime is annoying because it is nagware. Vim is fine but I find VSCode and Atom to be more user friendly and enjoyable to work with.
Beauty is a really poor argument to make in support of Electron apps. It's entirely subjective. Electron app disregard of native conventions is, in my opinion, anything but _beautiful_. 
In the past I wrote a walkthrough to most of the mock features and I explain what things work/not work and some common mistakes people do when mocking (with explanation of why it does not work). It does not technically explain how mock is implemented but maybe it gives many answers of questions you have: First link is more like an introduction, but still has some nice details: [https://github.com/albertferras/notebooks/blob/master/jupyter\_root/mocking/00\_mock\_library.ipynb](https://github.com/albertferras/notebooks/blob/master/jupyter_root/mocking/00_mock_library.ipynb) [https://github.com/albertferras/notebooks/blob/master/jupyter\_root/mocking/01\_mock\_helpers.ipynb](https://github.com/albertferras/notebooks/blob/master/jupyter_root/mocking/01_mock_helpers.ipynb) [https://github.com/albertferras/notebooks/blob/master/jupyter\_root/mocking/02\_common\_problems.ipynb](https://github.com/albertferras/notebooks/blob/master/jupyter_root/mocking/02_common_problems.ipynb)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [albertferras/notebooks/.../**01_mock_helpers.ipynb** (master → d242ac2)](https://github.com/albertferras/notebooks/blob/d242ac24655d236d3b8e2968d92d0f3950e37f17/jupyter_root/mocking/01_mock_helpers.ipynb) * [albertferras/notebooks/.../**02_common_problems.ipynb** (master → d242ac2)](https://github.com/albertferras/notebooks/blob/d242ac24655d236d3b8e2968d92d0f3950e37f17/jupyter_root/mocking/02_common_problems.ipynb) * [albertferras/notebooks/.../**00_mock_library.ipynb** (master → d242ac2)](https://github.com/albertferras/notebooks/blob/d242ac24655d236d3b8e2968d92d0f3950e37f17/jupyter_root/mocking/00_mock_library.ipynb) ---- 
 I see you've posted GitHub links to Jupyter Notebooks! GitHub doesn't render Jupyter Notebooks on mobile, so here are [nbviewer](https://nbviewer.jupyter.org/) links to the notebooks for mobile viewing: https://nbviewer.jupyter.org/url/github.com/albertferras/notebooks/blob/d242ac24655d236d3b8e2968d92d0f3950e37f17/jupyter_root/mocking/01_mock_helpers.ipynb https://nbviewer.jupyter.org/url/github.com/albertferras/notebooks/blob/d242ac24655d236d3b8e2968d92d0f3950e37f17/jupyter_root/mocking/02_common_problems.ipynb https://nbviewer.jupyter.org/url/github.com/albertferras/notebooks/blob/d242ac24655d236d3b8e2968d92d0f3950e37f17/jupyter_root/mocking/00_mock_library.ipynb ------ ^(I am a bot.) [^(Feedback)](https://www.reddit.com/message/compose/?to=jd_paton) ^(|) [^(GitHub)](https://github.com/JohnPaton/nbviewerbot) ^(|) [^(Author)](https://johnpaton.net/) 
Same here. There's a long chain of functions calling each other. Certainly not readable friendly code.
It hasn't nagged me once in the years I've had a license. 🙂 
Wew glad I'm in California. 
Yeah, the, in my opinion, _far_ superior native app ecosystem of macOS is what contributed to my switching to it. I'm only slightly bitter because Electron is making strides in eroding it, so I try to make sure to not support Electron. Typing it out makes it sound petty, but I suppose it is the way it is. When or if Electron wins (or Apple makes macOS unusable to me), down to CLI apps and the occasional webpage I'll have to go. 😂 
doesn't include people who were infected, showed no signs,t hen travelled by air cross country (or probably by car for that matter) &amp;#x200B; real nigthmare scenario is much worse
Perhaps there should be a day or hours counter? 
re-read what i said
Featurefullness and beauty are poor arguments for electron. Electron isn't "the worst", nor is it even bad. But it causes unnecessary bloat and is for developers (and end users) who don't care about memory mamagement.
Doesn't include air travel. I'm sure LAX and SFO would help spread the infection from the East Coast long before the zombies walked across the US by land. 
He's saying this doesn't appear to account for orange (and not red yet) dots flying cross-country. Like an orange dot flying NYC-&gt;DEN or something. Then you have a wave growing out of denver too (multiply this by.. literally anything)
Ok, but surely I don’t need to explain why some people might prefer open-source software...
In World War Z (at least in the movie version), the infection progressed so fast that no transcontinental flight with an infected passenger would have time to complete before it was destroyed by zombie mayhem. 
The movie version was unadultered dog shit and you should seriously consider erasing it from your memory. 
What has been seen cannot be unseen.
have a dead nigger /
Not at all. Of all the arguments, that's the one I can largely agree with is. The extended period of silence after Sublime Text 2 understandably shook a lot of people's confidence in the product. 
they were totally unrelated outside of 'muh zombies'
Atom and VSCode are free and you have to pay for Sublime or be nagged by it. Atom and VSCode have better community support for plugins as well. Sublime is fine, if you want to use it go ahead. But don’t act like Atom doesn’t offer anything over Sublime. 
One thing that I think would be a cool modification would be to make it move slower in lower-population density areas, and almost stay "clean" in other areas, like say the Sierra Nevada Mtns, the Rocky Mtns, etc, or make it move slower in Northern Canada where the colder temperatures might make the zombies move slower.
First thing that comes to mind: Create dataframe from input Count number of rows Count number of distinct rows Compare the numbers
Minnesota here. Zombies can't swim and frozen zombies can't move. We're looking pretty good from a zombie defense perspective.
Thank you so much for help, I will try that
Seconded. Also able to run on OS X from source with 3.7
Yeah. I mean, I'm all for pushing some physics a bit for the sake of a story, but if the Zombie Apocalypse happens then cold climates are definitely going to be better. I mean, with the whole "animated dead" thing is already a bit of a stretch, they can't provide their own warmth, and therefore will just freeze solid. Might not be dead, but they'll at least not be able to physically move, or if they somehow can, they'll probably be physically slower at least because of the cold.
In World War Z they infest the oceans by just walking around in them iirc. One of humanities last bastions is a nuclear sub on a small island - maybe artificial, can't remember. But they still had to remain vigilant for things crawling up to the ships. So yeah, the cold might help though.
Do you mean like code examples, or just descriptions of scenarios? I can relate some real-world examples but don't have code to go along with it.
I agree and would add on that most real world machine learning projects are mostly feature engineering. Knowing when a problem is a good candidate for machine learning and how to get the data organized and transformed is super important.
What? This post is about making a gui app with python and electron. None of those apps are known as python-with-electron apps, unless I am seriously mistaken. So the "best" thing here is irrelevant. As for beauty, since you're using Python, you can use PyQt for a native, cross platform, fast, far more memory efficient than electron, and yes, beautiful. All those apps you mentioned used electron for one reason and one alone-- they cared more about the ease of the development process than the experience of the user. And that's fine. There are plenty of applications where it shouldnt matter if I am using 500kb or 100mb of ram. But simple text apps like Slack of all things were a mistake to be done in Electron. The ram use is unbelievable. Multiple gigs for nothing. In the old days there was some meaning to the whole "we don't just want devs, we want *efficient* devs, as in, ones that could create fast and memory efficient data structures and algorithms. The extreme increase in available consumer ram not only threw that line of thinking out (which is arguably a good thing), but it let the shitstains in-- the horrible devs that are fine with having a plaintext app use multiple gigs of ram. That's insane.
Seems to be some demand for it: https://www.indeed.com/jobs?q=tensorflow&amp;l=
Now the same without antivaxxers please.
I come from the Linux side of the house, python is used heavily for scripting and automation, ansible is written in python and writing custom modules is quite helpful. IMO, there is a large industry demand for python generally, not just in the web-specific area. I don't have a CompSci degree, while that has excluded me from some positions, most employers care about your ability to actually do the job in this field. I've been solicited by Google, Apple, Amazon, LinkedIn, and Facebook (but no Netflix!). I interviewed with Facebook but didn't get it, but I think they weren't looking for someone like myself and their candidate pipeline is wonky IMO. The bulk of my programming experience is in Python. Python is a good tool to learn and there is strong demand for it. golang is an up and coming language and there's really strong demand and not a lot of talent in the market yet, IMO.
Ok, Electron has some overhead to be sure but if slack is consuming multiple gigs of RAM then it isn’t because of Electron. They’re mismanaging their memory. &gt; As for beauty, since you're using Python, you can use PyQt for a native, cross platform, fast, far more memory efficient than electron, and yes, beautiful. &gt; All those apps you mentioned used electron for one reason and one alone-- they cared more about the ease of the development process than the experience of the user. The above two quotes kind of conflict with one another. On the one hand you say that they can use PyQT to achieve the same all while supporting multiple platforms. While on the other hand, you say that developers choose to use Electron for developer convenience. If they can truly achieve the same result with Python and PyQT that they could with Electron all while supporting multiple platforms, why would Electron be more convenient? Why would developers choose Electron over PyQT? I do agree that developers choose Electron over native solutions out of convenience to the developer. However, I also believe if there were a better alternative for cross platform development they would take it.
Alaska and Hawaii are safe!
&gt;Create dataframe from input, count number of rows, count number of distinct rows, compare the numbers. I couldn't do that..
For three sentences, change code to: `merge = [' '.join(x) for x in zip(sentences[0::3], sentences[1::3], sentences[2::3])]`
These are spark excercises, are you expecting the data to be part of a dataframe/rdd? I only ask because of the final bit of the question, about calling the function. If no, what's stopping you just accessing the elements of the tuple and comparing them?
 def merge_sentences(sentence_list, n): return [' '.join(sentence_list[i:i+n]) for i in range(0, len(sentence_list), n)]
There is absolutely such a thing as an objectively bad piece of art work. Sorry to burst your relativistic bubble.
I saw it once, thought it was just about as stupid as any other zombie movie, and moved on with my life. I just hate seeing people get all condescending because so-and-so hated this movie I loved, or like this other movie I hated.
No. Just a Nike app from Android
Again no hard number for Flask APIs but I can attest to Flask being very nice writing APIs. [This](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) is what got me interested in using Flask and I have been thoroughly enjoying it. 
Forget the PySpark stuff for now, this isn't asking for any of that. This is just Python, look at the data type supplied, it's a tuple containing 2 tuples. How can you compare those 2 nested tuples? You need to be able to access each one and compared it to the other. Then you need to return a bool based on the result, but worry about that later.
Well it was told from the point of view of a guy who was tasked with interviewing multiple people to determine what happened after the fact so that character could be loosely translated into the movie version, but very loosely.
That worked. Thanks. Now I just need to find a method of finding the right chunk sizes
thanks :)
Haha, yeah, I think we're in violent agreement in the plugin and community support matter. 😂 
Nothing like some good violent agreement 😂
until summertime. 
the takeaway i'm getting from this is that us west coasters need to fuck off up the highways that cross the rockies and collapse those passes ASAP if you east coasters start getting all 'gnaw on my neighbor's brains'. 
Yeah, if they named it anything else it would have worked fine as a zombie movie
your model requires some adjustment for the mexican side, mexican house architecture has been designed to reduce burglaries thus features security bars on windows, doors, and pretty much everywhere. Here's a link I found educational about the phenomenon [https://www.house-design-coffee.com/mexican-house-design.html](https://www.house-design-coffee.com/mexican-house-design.html) 
&amp;#x200B;
for i in nList: if (\[i\[0\]==j\[0\] and i\[1\]&lt;j\[1\] and i\[2\]&lt;j\[2\] for j in nList\]): return True else: return False &amp;#x200B; this is not worked also
Hi, Google API is free for personal use. I'm on mobile currently,If U need help finding it, i can send you a Link to Google API tomorrow. Because you need the one for 'directions'
alright no point arguing with whiny trolls
Dude, come on. It's "fewer teeth".
that's a really interesting take on it thanks
that..... is a good amount of demand o.O
Please for the love of god don't try to justify the plot. The movie was a cash grab and was completely unrelated to the book in everything _but_ name. There is no way the movie is actually canonical. 
Could you explain this code please? Beginner to threading/multiprocessing stuff. The start method calls run () internally, right? What does the while loop achieve?
The Python executable is called and, depending on the context and arguments, a new Python process will be created where the desired program will be executed. Though your question is unclear, the REPL has nothing to do with this chain of events. Also, check out r/learnpython.
It's not even that, it's just that it's a better testing paradigm. xUnit is a pattern hamstrung by an obligate OO language designed half a century ago. There's no need to cling to it.
Is the book worth the read? Not my type of genre but hey who knows.
m'zo'mbie
Thanks for the suggestion, I'll post there too. To clarify is it normal or idiomatic to start a Python process from the REPL rather than a shell? From my Python novice viewpoint, spinning up a process from the REPL seems to the advantage of enabling the user to interact with the program while it's running. For Example ```python &gt;&gt;&gt; from threading import Thread &gt;&gt;&gt; from entry_point import main &gt;&gt;&gt; thread = Thread(target=main) &gt;&gt;&gt; thread.start() &gt;&gt;&gt; # Additional program interaction? (reloading configurations or other functions etc.) &gt;&gt;&gt; from entry_point import pause &gt;&gt;&gt; pause() &gt;&gt;&gt; thread.join() # Some of this could be abstracted. ```
Another alternative with NumPy arrays would be to have the `updateV` and `updateP` methods call out to `@jit` Numba functions to perform the nested loop calculations. Numba supports passing in NumPy arrays.
&gt; Ok, Electron has some overhead to be sure but if slack is consuming multiple gigs of RAM then it isn’t because of Electron. They’re mismanaging their memory. It's not *just* slack. It seems to be a plague of *every* electron based application. Does *every* electron dev not know how to manage memory? &gt; The above two quotes kind of conflict with one another. On the one hand you say that they can use PyQT to achieve the same all while supporting multiple platforms. While on the other hand, you say that developers choose to use Electron for developer convenience. If they can truly achieve the same result with Python and PyQT that they could with Electron all while supporting multiple platforms, why would Electron be more convenient? Why would developers choose Electron over PyQT? Electron is more convenient than PyQT in a number of senses. Especially the API and equivalent code. The same construct in PyQT is more verbose and requires more manual logic than Electron. Furthermore, I was being strict to the subset of Py + some gui framework. QT is C++ and can be called from more languages, such as Java or Rust or Ruby or *whatever*, whereas for electron a non-stdlib library to communicate. Point being-- electron is easier to work with than QT. But QT is arguably *more* cross platform than electron is. Hell in all technicality that electron app is running on a subset of QT-- QtWebkit. It's a subset that's easier to write with, but less extensive and poorer in memory management. &gt; However, I also believe if there were a better alternative for cross platform development they would take it. Well that depends on what is "better". You say better-- for whom? For the developer having to deal with docs and wanting short code, pick electron. For the user's 2010 laptop, pick QT. Or one of the many other cross platform GUI frameworks that run on a lower level *than javascript in a fucking minibrowser*.
If you want to run a Python application, call the system's Python executable with the path to the file as the argument. You can also call do the above, adding in various arguments such as `-i` to enter an interactive mode after execution: https://docs.python.org/3/using/cmdline.html#command-line-and-environment If you want to inspect the program as it's executing (stepping), you may do so by using a debugger. An option is to insert a `breakpoint`, execute the program, and be dropped into a debugging session at the spot you inserted the breakpoint: https://docs.python.org/3/library/functions.html#breakpoint
Twitch desktop app LUL
There's a chapter in the book in India, I believe, where they have to deal with an onslaught of zombies walking out of the ocean from Australia(maybe?). All water does is slow them down a bit.
I think you're misunderstanding me. Do you have experience spinning up a server with production Python code? If so, do you ever start the process from the REPL?
I am not misunderstanding you. I do indeed have such experience and have stated already that you do not "spin up" a Python application from the REPL.
&gt; the best and most beautiful apps I use on a regular basis are all electron apps. Must have some pretty shitty apps
You’re right, your posts are retarded.
&gt; You’re right, your posts are retarded. Ty. I love VSCode btw. Great editor.
Very cool!
Great read!
* Python installations let you keep your libraries organized system wide and user wide. * venv and venvwrapper lets you create python installations for your app/library, thus limiting the case of two of your apps/libraries being dependent on incompatible dependencies-- each app/library uses a different virtual environment, and thus different groups of dependencies. Caveat is, you need to have the python version of the venv you want to create installed * pyenv lets you easily create venvs of python versions *other* than the one you have installed system/user wide. * conda is a special python installation that comes packed with data science specific libraries by default, and also gives most of the functionality of pyenv(or at least, the docs imply such and don'tcontradict this. They may actually only support the eqyivalent of venv). The problem is there's some interference and friction when you want to do more than just data science, at times, and also, the default packages are ~4gb. As a web/backend person, I will never use most of these libraries. * pipenv combines pip + venv, making it easier to do dependency management and versioning in a venv. * However there's an arbitrary restriction set by the author-- it's meant for libraries, and never apps. This restriction has caused a variety of internal design decisions to make it such that it's harder for a person to use it for apps, ex, using `click` internally, among other things. This is bad because this is Python. Libraries and applications are widely one and the same in just adding a damned `__main__.py` to a library. * Its resolver is also slow, and Pipfiles (the dependency versioning standard it uses) are not officially supported by the core dev team, only the PyPA, and even worse, **pip does not support Pipfiles, in neither reading nor writing** * This is horrible, because this means I can not install a library written with pipenv via pip unless the author of the library runs pipenv's "convert to requirements.txt" tool. Not all authors are reachable, and this causes unnecessary friction. Even the *author of pipenv himself* is guilty of such a blunder with his new in-progress library [pytuning](https://github.com/kennethreitz/pytuning). * And there are other issues as well, but the previous are the main ones, personally. * poetry combines pip + venv, + minimum information for building a package ([PEP 517](https://www.python.org/dev/peps/pep-0517/) and [PEP 518](https://www.python.org/dev/peps/pep-0518/)) * since there is a PEP, it is using a core-dev supported format * pip *can* read from pyproject.toml (the format file), well, more specifically, the sections defined in PEP518 * there aren't any arbitrary restrictions in terms of app vs library * it is faster, and seeks to provide an even more resilient and reliable dependency resolution method * however, it is a far newer project * also, the dependency management section is *built as a tool*, thus *on top of* any PEP specification. pip does not currently recognize PEP517, but it seems as though it will be implemented soon (and on the other hand Pipfile implementation is completely god knows when).
You’ve never seen the live action Avatar the Last Airbender movie. 
An I wrong to be excited?
What algorithms are you using? Chunking by hand is something you shouldn't be doing anymore, most machine learning frameworks do this for you. 🤔
Why isn’t it coming in from the West coast and Texas as well? Are we just totally ignoring the fact that LAX and Dallas Fort Worth are some of the most trafficked airports in the world?
I’m actually talking about the character in the book. He flew around and interviewed people. I believe that’s where the similarities to the movie end.
just prints the threads name and puts it to sleep for a random amount of time. Sleeping means it doesn't execute until that time elapses and virtual machine wakes it up. This allows the other thread to do some work in the mean time if it wakes up before then.
I have actually. Twice, in fact. Another user pointed out how inappropriate it is to discuss movies in this subreddit, so I won't comment further. If you would like, I would not have a problem discussing the merits of the movie in PM.
Would it be more effective to remove the randomness of the wait times? Then, students might expect the output to be purely alternating, which would easily be disproven since the precision of sleep()'s waiting period is not guarenteed?
Interesting, good to hear you're doing something similar... I definitely think it's valuable to think about the dependency flow even if you do have to break it sometimes. Having said that there is usually (always?) a way to avoid the upstream import, generally through some form of dependency injection. Usually I reckon it's worth doing!
I must admit the book was not that great a source material either. I had heard how much better the book was and I was very disappointed. 
&gt;I'm actually talking about the character in the book. I am very well aware, my whole reasoning for saying don't justify this to any capacity is based on "..so that character could be loosely translated into the movie version, but very loosely". The movie is god awful and completely unrelated. 
It is absolutely not an actiony horrory zombie thing like one would expect. It's entirely about the many little stories that make up the whole of a zombie apocalypse. Like the terrible things that happen when confident yet unqualified people try to camp through the Northern winter with minimal supplies, or how the role of a holy man changes given certain circumstances, or what it's like as a proud military man to abandon your country in its time of need to seek haven, or how much the infection was hastened by black market organ transplants. It's truly great. I recommend the audiobook, personally.
I’ve misunderstood what? They were asking if the book was worth a read and I’m telling them it’s far removed from the events in the movie. The only similarity is that there is a guy who flies around and interviews people. 
This here is what makes a great apocalyptic story... its not just about the outbreak, but about all the societal issues and how people deal with it. When a story really considers this, it has potential 
No, you are not. 
And Electron + JavaScript development isn't even fast. A blank Electron project downloads about 1400 files in the project directory. Many 10-20 LoC JavaScript modules. Then you need to pick one of frameworks that try to convert a document format in a desktop-like application. These frameworks and their tiny counterparts change constantly and break compatibility like every few weeks. Leave an Electron + React/Angular/whatever project for a few months and see what you'll find when you come back. On the other hand, you can today pick a Qt/Swing/WPF/Tkinter/wxPython app abandoned 10 years ago, and continue maintaining it just fine.
Thanks for the great write up. Yes conda let’s you set environments to any python version (I have a 3.6 and 3.7 version without any extra packages) if you want to use conda don’t install anaconda it’s absolutely massive and has an ide amongst other things you probably don’t want. Just get miniconda it’s reasonably sized. Conda is also nice because you can install ancillary packages to python like intel’s mkl library or forge or other Unix packages and keep them contained to the env) Can you do something similar in poetry? It kind of sounds like it. Conda definitely does not help setup apps imo, so next time I want make an app i might have to check it out! 
I loved the read, but my buddy pointed out the audio version is so fucking good. Mark Hamill is in it. Here's an [example.](https://www.youtube.com/watch?v=w4T2OffjhCAhttps://www.youtube.com/watch?v=w4T2OffjhCA)
It was only like the book in that both had zombies. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
You should switch to VSCode. It's very similar to Atom but has much much better performance. Atom is known to have terrible performance. Of course if you working with Python, you should use PyCharm ;) 
I created a similar project https://github.com/Andrew-Shay/Neuron
I created a similar project that uses cefpython https://github.com/Andrew-Shay/Neuron
&gt; Yes conda let’s you set environments to any python version (I have a 3.6 and 3.7 version without any extra packages) What I mean is, if you have Py3.7 only installed venv &amp; virtualenvwrapper can't make a env based on Py3.4, but pyenv can, because it downloads and installs the relevant python version to /opt and actually lets individual directories use that /opt install instead of the system python. Combining with https://github.com/pyenv/pyenv-virtualenv lets you make venvs of these as well. Can anaconda do the same? &gt; if you want to use conda don’t install anaconda it’s absolutely massive and has an ide amongst other things you probably don’t want. Just get miniconda it’s reasonably sized. As a web/backend guy I still don't need the wide majority of those packages still, and miniconda is 200mb. That's unreasonable when all I want to do is say, make a bot for this subreddit that needs praw and it's few dependencies. &gt; Conda is also nice because you can install ancillary packages to python like intel’s mkl library or forge or other Unix packages and keep them contained to the env) &gt; Can you do something similar in poetry? It kind of sounds like it. Yes and no. In theory, and I mean emphasis in theory, if someone was to create a custom build system, that build system installing and linking arbitrary packages like intel mkl, then you specify using that specific build system and use the tool table in pyproject.toml to tell it what and how to install mkl/whatever else. I don't know if such a build system currently exists or not, but even if it did, unfortunately *pip* doesn't support this part of pyproject.toml *yet*, but it will *soon*. And of course, it requires someone to make said build system. Hey-- maybe that'll be you, who knows.
I'll try it out.
i mean to each their own but it's pretty much universally loved.
My system python is 2.7 and I can create an environment for any python by doing conda create —name py37 python=3.7 it sounds like it works the same way pyenv does. Conda let’s you also set secret keys or there env variables on a per conda env basis which is kinda neat. If you don’t need things like numpy (or don’t want the performance from mkl) you can install miniconda with flags to not include mkl which is one of the biggest reasons conda is so much bigger. I think it installs like 6 mkl versions since it doesn’t do a hardware check first (it’s like 65mb). There might be other flags for a smaller install, but it seems li poetry or pyenv do the same thing but with less extra math stuff that you probably don’t care about (but I love). And the other utilities I referring to are just things the community has packaged for conda under conda-forge. I kind of made it sound like a generalized installer in a dockerish way, which is not accurate. 
PyCharm is also quite resource heavy, good program none the less 
True, though Numba needs LLVM set up to work and it can be a bit messier to set up. When it works it's very good though.
&gt;I'm actually talking... The I love thing I possibly could have gone "I'm well aware" to, lmao.
&gt; it sounds like it works the same way pyenv does. Cool! &gt; Conda let’s you also set secret keys or there env variables on a per conda env basis which is kinda neat. How exactly? You can't do some fancy command directly in pipenv, poetry, or pyenv, but you can use direnv (for pyenv) or virtualenvwrapper &amp; its post-activate scripts. Not sure if it is installed with poetry/pipenv, but it is compatible, since their venvs are plain old venv venvs. &gt; There might be other flags for a smaller install, but it seems li poetry or pyenv do the same thing but with less extra math stuff that you probably don’t care about (but I love). Less so that I don't care and more so I'm a "install what I need when I need, not preemptively" guy.
Just make a still image of the map at the start and were done.
Thanks! If you have any issues please create an Issue or drop by Gitter
That means we need more textures, like the desert/mountain/river/temprature map of the USA ... It's surely possible but it will be too slow to do that using pure python. shaders might be the right choice. &amp;#x200B; &amp;#x200B;
heh
:D
On Ubuntu just using `pip install numba` seems to work fine (and of course Numba is also available in Anaconda).
yes, that can be improved. this is a compromise between the image appearance and the real world model. For a more exact and complex model, the animation may take too long time for impatient people to enjoy ....
While Dask is definitely a natural fit for batch problems (and designed ground-up for them), Wallaroo has the advantage of being streaming-first, so it's an easy transition from `one process -&gt; ad-hoc-parallelism for batches -&gt; full-on-streaming system`. Also, there's no special wrapper classes for anything, aside from pipeline construction, you can use any Python code you like. This may be a pro or con, depending on your preferences :) 
This has been like trying to talk to smoke.
Got it to work after a couple of tries. Not sure what happened but I have the game now. It's very nicely done! Thanks!
Well I'm sorry your reading comprehension skills are so poor then. 
Gonna jump on the downvote train with you and back you up. Art's objective is for the people judging it subjectively to call it good, be that by aesthetic, provocation, whatever. If it doesn't have that effect for anyone, and considering humans are the only measurers of this standard, it can be said to be objectively bad. (inb4 someone creates a piece that is supposed to be bad in order to get people to call it bad, therefore accomplishing its goal and being good.) Problem here is that as soon as even one person doesn't call it bad, it's back to complete subjectivity. You can totally still argue that parts of it are objectively bad, however, even if someone has brought it in to the subjective. If the goal was realisim, but it was an utter failure, we can say it's objectively bad. By all people capable of measuring it by that metric, it failed. It may still be good in other areas however. Good sense of atmosphere or something. Anyway, yeah art can be objectively bad either as a whole or in parts.
Your response to my comments about the book were “please don’t try to justify the plot of the movie”. I don’t think I’ve misread anything but life is too short for such petty arguments. Go in peace.
I know exactly what my comment was. You just assumed that I didn't understand you were talking about the book character. You were explaining how the movie could be loosely based and related by utilizing a character from the plot. Like I said, You misunderstood my response and how I interpreted your post, and yadda yadda reading comprehension since you're throwing shade with the smoke comment. You're absolutely right though, it's like talking to smoke. 
Oh, absolutely, but not sure if you’re trying to add to it or not to experiment or anything like that haha
It's the best apocalypse story. Most post apocalyptic stories focus on the characters, exchange is fine, but WWZ is the only one I know about that actually talks about the apocalypse itself, which is infinitely more interesting than any group of humans. Also, the sister book "the Zombie Survival Guide" is also a fucking great read and focused even more on the zombies themselves.
Like you said, they specifics matter. Zombies in southern, tropical areas really won't last very long as the dead flesh would literally disintegrate unless they were magically antimicrobial.
Disordered madness with shared data structures. from string import ascii_lowercase from threading import Thread shared = [] def fib(i): if i == 1 or i == 2: return 1 return fib(i - 1) + fib(i - 2) def puts_nums(): for x in range(26): fib(20) shared.append(x) def puts_letters(): for c in ascii_lowercase: fib(20) shared.append(c) Thread(target=puts_nums).start() Thread(target=puts_letters).start() print(shared) 
lol @all did y'all know he streams too? You should check him out at www.twitch.tv/vcubingx
David Beazley has one of the best Python talks ever about exactly this: https://www.youtube.com/watch?v=MCs5OvhV9S4 Well worth the watch.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Y u do dis
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Learning Python Day 5: understood some of this
Its / not \
so we shold add a map for the flights? that's too hard for me... 
this is only a very schetch model of the zombie outbreak... to build a more real model I guess more textures and opengl should be used instead.
yes i need free python tutor. How would that work?
if you wanted to faux add it in, you could select the something like the top 100 cities and have a probability of an infection spontaneously generating. There should be a lot of room to model the probabilities of someone "traveling" to a non- connected location (i.e. based solely on population, some flight statistics or other way.)
Why twice?
This is an email from my professor because I'm having trouble with my code. Specifically the change part. Can someone better explain what my professor is telling me?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I'll add that when you go post this on /r/learnpython, you'll probably have better luck if you include the code the message is responding to.
Python is the ultimate non-CS language. I'm an engineer and keep meaning to learn C++. It's been about 8 years...
The living will envy the dead
Nice. You can shorten it a little. import math inputValue = int(input("Please enter a number to get the log of: ")) print(math.log(inputValue, 10))
So I sat and profiled your code. Good news is that it can be converted to Numpy pretty easily. Bad news is that the main bottleneck is not the calculation per-se, but matplotlib. It can hog up to 67% percent of the time (on a full-screen windowed figure, or when rendering to an mp4).
Keep it up and you can just start automating your old hw. SHOW YOUR WORK! 
I remember when I used to write code like that a long time ago. We all start in the same place. If you want to condense your code you could put some of it in a loop.
You can nest loops.
Accomplishment is sweet
I need to report a bug in the underlying code: Texas should still be white. Not enough integers for guns were passed to the variable.
I looked at eel and at the time it suffered from the following limitations which I raised https://github.com/ChrisKnott/Eel/issues/35: * Requires chrome browser to be installed by the user in the target system * Packaging with PyInstaller works but displays a console window when launched. Attempting to specify no console causes app to launch and immediately disappear (still investigating this, but many people have encountered it e.g. pyinstaller/pyinstaller#1804) * There are no native menus, open file dialog boxes etc. I can't for example browse for a file in the UI and get its full pathname returned to me (browser sandbox restrictions). I can't create professional menus. Apparently some of these issues have been addressed, but by then I had moved on to the other framework.
Same result, only difference is function calls In [1]: %timeit dict() 107 ns ± 0.589 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each) In [2]: %timeit {} 36.4 ns ± 0.363 ns per loop (mean ± std. dev. of 7 runs, 10000000 loops each) 
https://developers.google.com/maps/documentation/directions/get-api-key click on the Get Started button. Then you have to log into your account (if you aren't logged in yet). Afterwards you have to choose the right product. For me it is called 'Routes' (I'm not living in en english speaking country, but I guess the name of this is the same for you). If you hover your mouse over 'Routes' (or w/e) it is called you'll see the products which you can use with this API token. Hope this helps you. If not, just ask again.
you mean the thing you press to minimize the sidebar?
Referring to the way input output done in C++?
I stand by my statement. That's not meaningful if you're in the nanosecond range. How long does your average script take to run? Also, who uses `dict()`?
Thank you for the offer, but I'll try and improve this as I move through the Automate the Boring Stuff series.
I'm cool thanks
Perhaps the indented bullet pointed paragraph? 🤨
Good stuff but seeing as it took ten years for the 2 to 3 transition, and this is still in discussion, wouldn׳t it be worth $50,000 to make PyPy fast on current c extensions within a year or so?
or may be you are the first reported sample. Congratulations, you are famous!
in all zombie movies, did you see any one that guns prevented human from bitten? only except you are the hero that saved the world! 
Okay, so the last stand is in Oregon. Meet there in 10
Being unreasonably happy with our accomplishments is how we all got suckered into this "programming" racket.
Great and interesting post, totally stealing for a real time ETL I'm tweaking, but unlimited != infinite...
Well we are making lightning in a rock do our bidding, so...
Got it, thanks !
No more swing please... JavaFX is the choice now. 
I’ve been working through that series too. How are you liking it? I’m up to working with Excel workbooks.
That's more like executing a completed program. Making the program is negotiating a treaty with the rock lightning. It could be doing literally anything, and often does, so if it does precisely what you want its like the medal scene of star wars. 
Wow thank you for this. It reminds me how far I have come from where I started. Keep at it. It will be a worthwhile endeavor. 
The audiobook is great, the sense of drama is incredible when you consider it’s all just accounts of something that happened ten years previously 
What do you think about selling the source code with gpl 3 license? 
Nice. You can shorten it a little more. `import math as m; print("Your answer is: {}".format(m.floor(m.log(int(input("Please enter a number to get the log of: ")))*100)/100))` /s
Well, to be honest I used Swing last semester because I had to "ship fast" and didn't have the time to learn JavaFX properly, so it's a bit Electron-y approach. 
Audiobook is better than the actual book imo. The cast is fantastic and turns the good stories into fantastic, gripping tales.
Sure, there's always a Chinese company selling something similar for cheap with fewer features. The WiPy is only $19 and also has an antenna extension socket (which is useful in AP mode) and the builtin RGB LED. Plus the software support (they make the pycom module and pymakr IDE extensions). My experience with the Chinese boards is exactly this. There are some really cheap ones coming out, and some of them have good hardware, but the costs are being cut in things like software support. For instance, compare the RPi with something like the Nano or PINE. They're cheaper and have better hardware but the software and support are the corners that were cut.
This is a goid point. BTW, while automating stuff, how about generating the long code sequences automatically with a script?
Sorry, I just woke up and for some reason I just had to make a programming-related comment.
Welcome aboard!
Oh man, thank you. Now do webpack :)
Help line says it is inefficient. The code could certainly be more concise but I imagine any more concise version would get JITed into something not far from this. So probably not so inefficient (ignoring an optimised C implementation of math.log).
So true. I have to smh and chuckle. 
Best news I could get today!
Uhm, this just grabs the content of the `&lt;template&gt;`, `&lt;script&gt;` and `&lt;style&gt;` tags in a vue file and puts it into a HTML file with a runtime dependency for vue.js. It does not build anything. The minification is done via an online service (closure-compiler.appspot.com).
I liked it
I checked a WiPy 3 board and sensor extension. €74 including shipping. I’d love a board, and I respect what they’re trying to do, but it’s rather pricey.
If you speak in absolutes like this, you are annoying, sorry
its main purpose --&gt; It lets you use ".vue" files in a vuejs app, without nodejs ! Without nodejs, or without that : you can't develop/use vue component !!! And developping vuejs app without vue/sfc components is not cool! Regarding the minification : it works pretty well, and without nodejs too !
I was more thinking extend the math operations to print the steps involved that would satisfy your typical maths instructor.
Yeah, the "infinite" word is there mostly because the title looked nicer jejeje I am glad you liked it!
He's not saying your app isn't useful, I might try it with my django + vue side project. But he has a point, this isn't a full replacement for nodejs, and more importantly it doesn't actually build anything. What are your plans to maintain/improve this?
There are a few good books like Teach your kid to code. Don't forget that turtle is available in Python. I found Logo to really help me grasp programming early. 
You do not want to put your access key and secret key in your `serverless.yml` file. If you do then that file can never be part of a public repository and it becomes difficult to rotate those keys. It’s not necessary to include those keys either since the lambda is already executing with its own set of credentials. You can give access to the SSM parameter using [iamRoleStatements](https://serverless.com/framework/docs/providers/aws/guide/iam).
no nodejs = no autocomplete, etc. Nty.
Car salesman: *slaps roof of this project* "this baby can fit so many fucking if statements in it
The first time was when it came out. I thought it was odd, but wanted to learn more, so I watched the animated series, then rewatched the live action for comparison.
This post is better suited for r/learnpython and r/learnprogramming 
Right, but the Wemos isn't as small, has half the flash, doesn't have antenna extension, doesn't have a bright RGB LED... Plus that sensor board you're factoring in has sensors for light, barometric pressure, humidity, temperature, and an accelerometer (in addition to the extra interfacing). So of course it makes things more expensive. You can get the WiPy on its own for like €15.
I think the word you were looking for is 'unadulterated', even though it's the wrong word either way.
Homework suggestion https://www.tutorialgateway.org/python-program-to-count-number-of-digits-in-a-number/ Count the number of digits in the number, then pass that into your function. Then you don't need ifs and elifs Keep up the good work brother.
Already shared my thoughts to him on that thread: [https://www.reddit.com/r/Python/comments/8kjv8x/a\_letter\_to\_rpython\_kenneth\_reitzs\_journal/dz8xa9f](https://www.reddit.com/r/Python/comments/8kjv8x/a_letter_to_rpython_kenneth_reitzs_journal/dz8xa9f)
Now that AWS Secrets Manager has launched, you want to be using that instead.
Unadulterated is the right word either way, but good job calling out typos online, that must have been the highlight of your day considering how pathetic you are.
\&gt; not mixed or diluted with any different or extra elements; complete and absolute. It's dogshit, with nothing else in it. Where did you learn how to read?
This thread is full of poetry.
You like that model? Then you'll love our code base!! It's 12 years old with high mileage but baby it can pack the ifs in like nothing else!
Just a side question, is there any specific reason that you have decided to use googlemaps over WazeRouteCalculator? I find it quite troublesome to use the googlemaps API due to its daily request quota (1 request per day)
you can try some examples here: [https://github.com/neozhaoliang/pywonderland/tree/master/src/misc](https://github.com/neozhaoliang/pywonderland/tree/master/src/misc) see the files for manderbrot, julia and newton, &amp;#x200B; To summary: if you use numba in the right way, it gives very significant performance improvements. &amp;#x200B; you should use numba for short but frequently called functions, and these functions should be mainly for floats and complex computations. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [neozhaoliang/pywonderland/.../**misc** (master → 371b0d4)](https://github.com/neozhaoliang/pywonderland/tree/371b0d4bffc218656c7556504fde4c64e7aca840/src/misc) ---- 
I think you are looking for PyPy www.pypy.org
There is no specific reason why I used Google API. U are allowed to do more than one request per day
The sqrt function is just a function that raises something to the 1/2 power which you can easily do without importing any libraries. To answer your question tho, yes you very often, practically always, have to import libraries to simplify your code when you’re doing larger projects.
Oh, we're playing that game? from math import*;print("Your answer is:",round(log(int(input("Please enter a number to get the log of: "))),2))
I purchased last night! Does this work on mac?
There are alot of things in the standard library in python but still need to import. Quite often in larger projects you will have a bunch of imports, either from standard library or installed packages or even other files.
Mind sharing your config, bro?
Well, you don't *have* to. But if you don't, you're going to spend a lot of time reinventing the wheel. And 99% of the times, that wheel's going to work on the asphalt you designed it for, but when there's a tiny pebble on the road, your cart's going to explode. So while you don't *have* to import libraries, you kind of do.
You are kind of missing the whole point. Sorry to cause you a bad day.
Why not use js2py?
&gt;from math import\*;print("Your answer is:",round(log(int(input("Please enter a number to get the log of: "))),2)) If you want to go shorter... `from math import*;print(f"Your answer is: {log(int(input('Please enter a number to get the log of: '))):.3}")`
Bring it on `print("Your answer is:",str(1000*((int(input("Please enter a number to get the log of:"))**(1/1000)-1)))[:4])` 109 characters
&gt; In the “real world” is this something people just have to memorize (every single function that needs to be imported and its library)? Nah, you just google it. Or you remember part of the name and intellisense tells you the rest.
I don't have a version for mac yet, but I heard that people found it pretty easy to run the source on it. Supposedly you can also use Wine with the Windows version.
Might take your advice and change it to "Unlimited" for clarity.
Yeah how about you go elsewhere with your disingenuous spam.
Yeah, you do have to remember everything that's imported and their functions, but having documentation on hand is also useful, which is why IDLE has integrated python documentation.
Hey—no tips from me—just a congratulations on your first program!!
Dies it have to be in Python? You could try Scatch. It’s made by MIT for kids. My son, when 9, made his first game within a couple of hours of using, taught by watching YouTube videos.
One day you're excited about if statements The next day, you're covered in (emotional) sores and digging through heaps of garbage trying while ranting about monads.
Yeah, but... &gt;&gt;&gt; log(123456789) 18.63140176616802 &gt;&gt;&gt; 1000*(123456789**(1/1000)-1) 18.80604928865082 Also, somewhere along the line we forgot we were calculating base-10 logs and started doing natural logs.
Most people don't memorize every library, but either recall *that a library exists* or find it by googling. It's worth reading the standard library index https://docs.python.org/3/library/ and at least reading each module's description and maybe scan the list of their public method and class names. That's all you need to have enough familiarity to start getting things done. Adding every useful thing into the base namespace would be chaos. The problem is that variable assignment in the global scope can overwrite built-ins. As few names as there are, I still end up accidentally overwriting them sometimes. The full list of python functions in the global namespace are listed here: https://docs.python.org/3/library/functions.html. That's a very small number to expose, but it's better than including everything function 
Thanks, I completely forgot about f-strings, this is a good example of them.
You get used to certain packages and functions (like datetime, pandas, numpy, responses...) And then I let pycharm handle the import with a quick alt-enter It's not as bad as you think.
Listen I actually changed the title and corrected some stuff because what you and the other commenter said are not wrong and some things did deserved clarification. But what up with all the hate? I am doing this for free in hope it helps the python community create better asycio programs. Whats wrong with the python reddit community? I hope its just you.
These are already base python libraries. `math` is one of the many base python libraries. What's more, python comes with much more build in libraries than other programming languages. This is part of the "batteries included" philosophy of python. But you might be wondering, why you first need to do an import for it to be available. Why not just have it. (Like for example, matlab does it.) The reason for this is that you pollute the namespace if you do it like that. Namespace pollution is bad, because it can confuse you what functions are available. Different libraries can override each other's function. But it also makes your program slower, because it has to look for the function in a much larger collection of functions. I tested it, and if I create a namespace with 1000 different function. (Just a couple of `import *`. You can call `dir()` to get your namespace.) It made my tests go 10 times slower. Something else I want to say, also about performance, it that library functions are often optimized in C and not by using normal python. This means, that even if you want to reinvent the wheel , you are better off just importing the library function, because you won't beat them. A quick comparison for your example gives that `sqrt(x)` is about 40 % faster than `x**.5`.
Math libraries are not really in the "mundane" of every day to day programmers I think, operations on lists and strings are much more common.
You can't just compile a script to a mobile app. There's a whole complex build process depending on the framework.
Oh crap
Next do something with a few steps like a Babylonian square root calculator. Fibonacci calcs are of course good for learning recursion too.
Really helped it click for me actually thanks!
Thx bud! :-)
Not just reskins but the game as well. Maybe in the future you'll free the software. 
 from math import log10 print("Please enter a number to get the log of") inputValue = int(input()) # Should have a try-except/while thing here print("The log factor of {} is {}".format(inputValue, int(log10(inputValue)))) Keep learning programming, it's really fun! We all started somewhere. First program I wrote was a "guess the number" game in BASIC that had over 100 lines :p
Ah, you must work with AI!
Haha. :D As an example. In my company we developed a tool which executes several commands against Ansible code before commiting it. As soon as the Ansible Code explodes with \~400 Playbooks and \~40 Roles the tool began becoming slow (about 3 minutes each commit) because it executes everything in serial So we refactored the whole tool to execute everything in a single process (one process for each CPU thread, depends on your built-in CPU) and each process spawns severeal threads. Now the tool runs about \~12 seconds each commit with a modern Macbook Pro. &amp;#x200B; Hope it helps. :)
Your short description of the differences between threads and processes is wrong. It is also unhelpful in showing the trade offs in multiprocessing versus multithreading. Multiprocessing and multithreading are both concurrency techniques—techniques for distributing work between multiple workers. Each process can have one or many threads. Additionally, each process has its own private memory space. Threads have access to the shared memory space of their process, which makes manipulation of shared data fast but dangerous. Processes cannot directly access another process’s memory—they need to pass information back and forth in a slower, indirect fashion. Each CPU can have a certain number of threads running simultaneously, and those threads can be in the same process or in different processes. I would recommend doing more reading and learning on concurrency. Raymond Hettinger’s talk on async would be a great place to start. 
I remember when we were taught Java in school, but only the conditionals, console printing, and looping. No arrays/file IO. I wanted to make a prime number hunter that only checked for divisibility with the primes it had already found. I didn't know arrays, so I made my program print out long `if(n % 2 == 0 || n % 3 == 0 ... )` statements to the console, so that I could copy and paste them into my program!
I started at "parse error before `printf("Hello World")' (line 6) Semicolon expected."
Is writing code in this way a problem? I’m an absolute beginner and don’t wanna fall into habit of writing code in a way that’ll limit me per se. Could you suggest expressions/ideas on how not to write code like this? Thank you in advance. If you’ve got some time I’d love to privately message you regarding some basics 
Thank you. :)
I know that there are quite a lot of people in banking use tensorflow. Especially investment bank 
Thank you! That shouldn't be too hard to implement.
Thanks man!
It's called PyCharm. 
Yes your assumption is incorrect. Both processes and threads can be scheduled for execution across a single or multiple CPUs. On a fairly standard Linux preemptive scheduler, for example, threads are nearly identical to processes as far as the scheduler is concerned. The most important difference, as was previously mentioned, is the addressable memory. Separate processes cannot directly access eachother's memory, while threads can. 
Makes sense! Just wondering why you would subject yourself to a second time. But I guess if you didn't have the context of the animation it would be reasonable.
Thanks! 
Awesome work and congratulations! First programs are the best! If you do plan to keep working on this, one thing you might try is thinking about your strategy for finding the value. Right now, your approach is to start at a low value, ask the question "Are we there yet?", and if the answer is no, you add one and re-ask the question. Eventually you get there and that's the answer you return. A different approach is to start out with a range, where you start knowing the answer is between 0 and 10. Then you figure out if the answer is either in the first half or the second half of that range. Then you can ask the question again and half the range again, then again, and you can do that basically as many times as you want. At some point you can add logic that says something like "I know the answer is between 2.5 and 2.5000000001; that's good enough - I'll just say the answer is 2.50000000005" This is a little trickier to write, but you have the skills to figure it out and it's a lot more powerful. You can get through a huge range of potential values very quickly and it'll let you calculate an answer with decimals as well. Wherever you go from here, there's no program like the first one and you should be proud! Congratulations! 
Javascript is mainly a front end language. It's moving to back end (with node) too but quite new. Python back end is very good, you have flask, django and tornado for you to do your webserver and back end stuff.
What os are you using? If i have some spare time i'll do it, anyway you can use the kivy buildozer machine ( virtual machine ) to compile apks easily. https://kivy.org/doc/stable/guide/packaging-android-vm.html
I thought the GIL limited you to one thread at a time per core, is that right? As a result I feel like python problems often lean towards multiple processes
If I understood Raymond Hettering and David Beazley's talks correctly (and I probably didn't, so someone please correct me), I believe that the limitation isn't even just one core, but simply one thread across any number of cores (which is the super thrashy results that David got when he went to multi-core systems).
Cool work! Some friendly pointers to make your code easier to write and maintain: 1. make it a function that takes a number as input and returns a number/string as output. Requiring it to have a user type in a number with `raw_input` and always displaying the output via `print` prevents you from ever using your cool logarithm code in a program, where you may need to take a logarithm as a substep. 2. Don't Repeat Yourself (DRY): try never to cut and paste code (especially when there's a clear pattern to it). This is a perfect example of where loops are helpful. 3. Try and check your code against existing libraries. Because of python's double-precision floating point accuracy (roughly can trust for ~16 digits of accuracy), this code only works to about 16 decimal digits. So you shouldn't try reporting 20 digits. E.g., running your original code with input of 300 prints `2.47712125471966243444`, but the actual [base10 log(300)](http://m.wolframalpha.com/input/?i=Log10%5B300%5D) is `2.4771212547196624372950...` so you can see the last 3 or 4 digits are reported inaccurately. If I was re-writing your algorithm, I'd make it something like this: def logarithm(num): answer_digits=[] num = float(num) for i in range(13): if num &lt; 10**(i+1): answer_digits.append(str(i)) answer_digits.append('.') num = num / (10.0 ** i) num = num ** 10.0 break else: # if the for-loop finishes without exiting via break raise ValueError("Use a number smaller than 10^13") for d in range(16): for i in range(10): if num &lt; 10**(i+1): answer_digits.append(str(i)) num = num / (10.0 ** i) num = num ** 10.0 break return float(''.join(answer_digits)) 
More sending electric currents through sand. ...I like your analogy more.
Next (possible) steps: try let the user input also the base of the log, and try extracting a more "abstract" function from those ifs. This is called refactoring, you take parts of common code and extrapolate a function. Otherwise, great start and welcome to programming!
It's one execution thread per interpreter process. No single CPython process can be truly multithreaded (but for "slow" things like I/O, the one thread is enough to do several things at once, hence why the multithreading stdlib module exists). You can work around this limit by spawning more interpreter processes, but as the parent comments, that introduces significant communication overhead.
Numba with a bare `@jit` decorator tries to use `nopython` mode, but falls back to object mode if there are unsupported constructs. Using the decorator `@jit(nopython=True)` forces `nopython` mode and fails if it cannot be used. Real speed increases come from using `nopython` mode. These are the builtin types that are currently supported (which unfortunately do not include `dict` or lists of lists): https://numba.pydata.org/numba-doc/dev/reference/pysupported.html#built-in-types
Camel case for classes and underscores for objects or just be consistent 
Ok. Visually I just like compact names. Thanks. 
The technique I showed could be used to create data pipelines that requiere IO, this could be doing web scrapping, doing multiple queries to databases (if their drivers support asycio), reading and writing files, ect. The asycio support in general is getting much better now, web frameworks are getting mayor boosts out of it.
The update that fixes this bug is now officially available. Please can you answer my question in the other comment?
I was running the server before the fix using `py -m birdseye` with no problems. So yes. I was able to 
The update that fixes this bug is now officially available. Any thoughts on your experience after having some more time? Are you satisfied with the answers I gave in the sibling comment to your last questions?
Programming early on is a lot like collecting tools. You can do the same job with one tool but it might take 100 lines to write, or with another tool and the same job might take 5 lines to write. But maybe the 5 lines is overly convoluted and hard to read so there is a third tool that can do it in 10 lines that is easy to read. As a general rule of thumb if you see a repeating pattern in code, it's a point of interest. In the early stages of programming, this means the redundant code can be written with fewer lines using tools like a loop or a function, or something more complex. Later on, once most of the tool kit has been built, there are more abstract patterns that one begins to notice. These at first are called programming paradigms. After those are learned, then even more abstract patterns are noticed. These are called design patterns.
In your example you use for process in processes: ... processes.remove(process) I thought Python got weird if you removed entries from a list while iterating over it? Was this fixed or could it cause some unexpected behavior?
You should follow the conventions established by the project you are working on. If you are the one deciding the convention you should use [PEP8](https://www.python.org/dev/peps/pep-0008/?)...which will also likely be the convention used by most projects anyway. &amp;#x200B; &amp;#x200B;
This is a great learning attempt. First thing I can advise is to learn how to use a Dictionary/Map structure instead of all those if/elif statements ( or switch statements ) as well. &amp;#x200B; put the predicate part of your if statement in a dict as the KEY and a function object as the VALUE then you can just lookup the KEY based on your formula for the predicate and get the results of the VALUE function. Much cleaner and more maintainable than what you have done. Which is of course a good first start.
I'll just copy what I'm referring to: &gt; also, please add a step input/selector next to the &lt;- and -&gt; arrows, its annoying to click through it a lot when you have a lot more steps to go though Do you mean something like what the vanilla browser UI has? 
yes, here is a pic of what i mean: 📷 [https://gyazo.com/1fe7fbf4e4d8c64ad0b5f4059c68f90f](https://gyazo.com/1fe7fbf4e4d8c64ad0b5f4059c68f90f) 
What I mean is that if you click on the 0, a list of options comes up. Do you want something like that in the plugin? 
Yea. Something like that if it's possible. Though something like that may be better for the toolwindow 
Nope, that’s still a bad idea. 
The general recommendation is to create a second list. Instead of: for item in my_list: if f(item): my_list.remove(item) you’d write: my_list = [item for item in my_list if not f(item)] or similar. This completely avoids the pitfalls of modifying an iterable while traversing it.
Thanks so much for this, it’s people like yourself that make this sub so worthwhile 
What system? Also, you want r/learnpython
&gt; World War Z Simulation in USA Because Fuck Canada, Mexico, the Bahamas, and Turks &amp; Caicos - right? C'mon OP this is a geography subreddit.
I started at `print 'boobs'` &amp;#x200B;
Multiprocessing in python allows one GIL per process, for increasing throughout of cpu-bound work. 
I’m liking it too. I don’t know if it’s the teacher, the Python language or both, but I find it more straightforward and understandable than the R course I was doing.
The [Git](https://git-scm.com/)version control system (VCS) is a great solution to this that I use for almost all of my personal coding projects. Services like GitLab and GitHub are excellent free services that will host your repository, you can host your own on a server, or you can even sync directly between computers (like your laptop and desktop on your home network) with much work.
On amazon I find the 2.0 for 30$, how is it so expensive?
I'm not so worried about hosting the data itself and syncing but more how to deal with the fact that new lines are coded differently on each system and thus leads to errors/issues
By default, Git for Windows will convert line endings to Unix-style when you check in and Windows-style when you check out. But really, any editor should handle both types of line endings just fine. Even Notepad is apparently learning to speak non-CRLF line endings!
They're talking about this kind of [system identification](https://en.wikipedia.org/wiki/System_identification), which has that name because data analysts and mathematicians are really, really bad at naming things.
**System identification** The field of system identificationNote a uses statistical methods to build mathematical models of dynamical systems from measured data. System identification also includes the optimal design of experiments for efficiently generating informative data for fitting such models as well as model reduction. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Your code editor usually has a little option at the bottom right or perhaps buried in a menu somewhere to switch between windows and unix line endings when you're working on the file, look there. What editor are you using? 
You can simply do it this way input_number = int(input("Please enter a number to get the log of:")) def calc_logarithm(num): import math return math.log10(num) print(calc_logarithm(input_number)) Fell free to ask any questions if you need furder explaination 
Oh good idea! This would be an easy fix. I currently use Atom in both locations.
Woot! This is good news :) 
For my project I used PEP 8 compliance for interfaces that I expose to other callers. The rest of my code I was consistent in how I used my names but I didn't strictly follow PEP 8. I too like CamelCase. Totally agree with the other posters... consistency is really important. &amp;#x200B;
That would likely work, but it hides your actual intent from the next maintainer of that line of code. Also, imagine the worst case scenario where you’re deleting every object. `list.remove` is O(len(list)) because it potentially has to examine every item to see if it’s a match. Since you’re deleting len(list) items, that makes a simple linear algorithm run in quadratic time. Also remember that it removes the first matching item, which may mean your resulting list isn’t ordered the way you expect it to be. Suppose you have two `int(1)` items in the list and you’re removing the first one you find in the reversed list. Surprise! You’re actually removing the first one that list.remove finds, not the one your own loop had identified. It’s easier, more explicit, and more correct to just build a second list. I very highly recommend doing that instead.
If this was just about learning for you, then great. I would argue it isn't interesting enough to warrant posting here, but that is just my opinion. If this is about a real, honest to god tool, then it is not particularly useful since all you did was put a front end on some NumPy stuff. Looking at your source code does make me wonder: how common is it for coders to use non-english variables etc? And is it hard since nearly all programing languages, especially including python, are english based? I guess I've always taken it for granted since english is my native (and sole) language.
Per the sidebar: &gt;If you are about to ask a "how do I do this in python" question, please try r/learnpython or the Python discord. Per their sidebar: &gt;Posting only assignment/project goal is not allowed. Read posting guidelines.
Consistency is the most important thing. For the majority of the python standard library, including all new features, consistency means following PEP8. Unsurprisingly, the majority of 3rd party libraries have chosen to be consistent with the python standard library which means they're broadly following PEP8 too. Consistency is readability; consistency is least surprising; consistency is portability. Readability is one of the core language features of python; if you don't do your part to be consistent with that design goal, I struggle to see you as a good python developer.
Have you tried googling to find a package with these functions then looking at the source code?
If you have more than 1 elif you aren't using the right data structures. 
Just to add on to other existing comments. There are cases where using threads can actually be unexpectedly slowner than running a single thread. Typically I/O operations should be used for thread and process for intensive CPU operations. 
You might want to look into using [html.parser](https://docs.python.org/3/library/html.parser.html) instead; regular expressions aren't a great way to parse tags. I had a similar goal on one of my projects and solved it that way: https://github.com/mrozekma/Rorn/blob/c69758a97231cea14b48f461a3540fd1f5406aba/Vue.py#L9-L77
You might want to look into using [html.parser](https://docs.python.org/3/library/html.parser.html) instead; regular expressions aren't a great way to parse tags. I had a similar goal on one of my projects and solved it that way: https://github.com/mrozekma/Rorn/blob/c69758a97231cea14b48f461a3540fd1f5406aba/Vue.py#L9-L77
r/learnpython And post what code you've already written
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
As if. As much as a zombie outbreak did occur and it got out of hand in the sense and normal military measures could not cope. The nukes would fly I shit you not.
thought so, thanks :)
Thanks for the tips! I struggle seeing you as a normal socially apt human being. 
Hey, I have but I don’t understand which part is the explanation and which part is the syntax
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I once had a program I'd written in assembly language work the first time. I spent more time checking it than I did writing it as that almost never happens and then when it does you've usually missed something. Nope! My prog was correct. Congrats on yours!
Ehhhhhhhhhh... I've been meaning to update that example. It's kind of a flop: I have one lock for the entire grid, rather than having individual locks for each cell in the grid. I wouldn't use it as a great example of concurrency.
Why don't you use a keyboard ? What kind of situatuon?
I want to hook it up to my python discord bot to allow multiple people to enter commands
It's bad practice to use `import` anywhere but at the top of the file. 
I'm not sure this is the most appropirate subreddit for this post. /r/Python is for Python news, not for tech support or new programmer help (/r/learnpython may be a better fit). Furthermore, that is a very generic Windows error message. Does it give any more information? If not, try running Spyder from a command prompt, to see if it gives you any more useful information (like an exception traceback). Without more information it is very unlikely that anyone can help you solve your issue.
Coming in with the same starting point as OP, I already own Black Hat Python book and find it kind of overwhelming to begin with. Hard to grasp the consepts if you have no Python knowledge. So what I did, I ordered Learn Python the Hard Way by Zed Shaw (expecting it to arrive sometime next week) to learn more about the basics of Python.
RIP my understanding of multithreading, but thanks for pointing that out. I'll look into individual locks for each cell
Everything is web apps nowadays if you have a decent amount of experience in development then there are plenty of opportunities. Learn how to hack and patch vulnerable web sites and web apps. There are many options freely available online such as mutillidae, web goat, DVWA, etc. Use Python to craft custom http requests, fund vulnerabilities, exploit them, then patch the source code. Rinse repeat and start applying for jobs.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Honestly, bail on vim. Move to VS Code and use the VIM bindings if you need 'em - you'll have a much better experience.
What do you mean that there's a pattern you can use to make code way smaller? Asking as a beginner.
Pycharm with the vim plugin. After 10 years as a vim user tried it for 30 minutes and never looked back. 
At which point in the book are you given the task to write a logarithm calculator?
This should be bigger. I mean it is on the sidebar, but in my experience no one reads the sidebar anymore, regardless of subreddit. This should be in the banner.
I see. I was looking for optimizations for simple list operations, not numerical computation. I knew Numba is for that, but I thought it might help me as well.
Thank you, I get it. I was looking for improving my list manipulating code. 
Too big project, too drastic change. Currently it's out of the question, unfortunately.
You should use numpy for that. Don't forget to preallocate the arrays.
OK, I did it! In [1]: from numba import njit In [2]: def comp(n): ...: return len([x + 1 for x in range(n)]) ...: In [3]: @njit ...: def comp_jit(n): ...: return len([x + 1 for x in range(n)]) ...: In [4]: %time comp(10**6) CPU times: user 82.9 ms, sys: 20.2 ms, total: 103 ms Wall time: 103 ms Out[4]: 1000000 In [5]: %time comp_jit(10**6) CPU times: user 176 ms, sys: 6.5 ms, total: 182 ms Wall time: 190 ms Out[5]: 1000000 In [6]: %time comp_jit(10**6) CPU times: user 20.6 ms, sys: 0 ns, total: 20.6 ms Wall time: 20.6 ms Out[6]: 1000000 In [7]: %timeit comp(10**6) 68.6 ms ± 354 µs per loop (mean ± std. dev. of 7 runs, 10 loops each) In [8]: %timeit comp_jit(10**6) 19.3 ms ± 49.1 µs per loop (mean ± std. dev. of 7 runs, 100 loops each) Awesome!
Will have that in mind, thanks!
ALE is a huge one as others have mentioned. In addition: Plug 'jeetsukumaran/vim-pythonsense', { 'for': 'python' } Plug 'tmhedberg/SimpylFold', { 'for': 'python' } Plug 'vim-scripts/indentpython.vim', { 'for': 'python' } ALE will avoid the syntax errors, but I haven't found a good completion setup for (Neo)Vim. Remember to install the linter as well.
A process is an instance of a program. A thread is a piece of a program that's running or scheduled to run on the CPU.
I would suggest you go one thing at a time. For Cybersecurity you need good networking knowledge. I would suggest to read python network programming cookbook from packt publishing. 
That is one long weird trick mate. I honestly think nothing beats practical work. learn by doing.
Here you used list comprehensions with numba, this is the wrong way of thinking about it. Numba is good for explicit c like code like double for loops. You will see a 10x speedup.
Computer scientists hate it!
I see, thanks. I'm still getting a 3.5x speedup, which is nice as well ;)
I added a second list `finished\_processes` and simply append a finished process to it. As soon as the length of `processes` is equal the length `finished\_processes` the main loop breaks.
Been researching the same thing and everything points to PyGame
np.count_nonzero(np.isnan(data))
Security involves knowing the systems better than anyone else. Sometimes better than the designers do. It's a very hands on industry that relies on demonstrated skill rather than certifications. I remember 2 years full time or one year "fully immersed" (12+ hours a day) quoted as typical learning time to be a competent hacker. I would use hacker and cybersecurity professional interchangeably. Perhaps you don't need to go as far as that person did, but...there is no substitute for going out and doing it yourself. You should subscribe to security mailing lists like vuln-dev and start looking and trying to emulate the kinds of vulnerabilities you see being reported...then start trying to develop and report some of your own. After that point I think you can confidently sell yourself as a network security professional. One small heads up: In some circles, the word cyber can be seen as an example that you don't know what you're talking about.
OK thanks. Wait is there a way you can drag and drop though
Panda3D?
I use vim with YouCompleteMe, which provides auto indentation and (some) auto completion. 
I don't think you'll find many game engines that have that besides GameMaker and that uses it's own programming language. 
Seems like a very *very* simple database. It is basically an abstraction over a simple python dictionary with simple persistence options. But if you're using it for something simple like a config it should do the job.
`sqlite` is probably the smallest thing I'd call a DB. pickleDB looks more like a key/value store.
Isn't that just 3d
Idk. I heard that it is python and free. Disney made toon town with it.
I'm always torn at this level. It feels like a wrapper on simplejson and you've got to make a call if you want that dependency.
OK I will check it out
Even a text document can be used as a (questionable, but usable) database. Terminology aside, there are huge, complex databases like Oracle, but sometimes, a simple serialized JSON should do the trick.
Redis is pretty much everywhere and super reliable. I wouldn't use pickles for something too critical, but I'm interested to know what's you intended use case?
Not to mention it is an external dependency, backed up by an unknown developer. I certainly wouldn't use it on production. Even for a small project. The code quality isn't the best aswell, if that's a factor (the get function, for instance, uses exceptions instead of utilizing dict's .get method, which accepts an argument for a default value, if the key is not present).
&gt; MongoDB and InfluxDB wouldn't count, you're on the right track
Yes I want drag and drop but you know you have to code the game to right?
Is gml similar to python
https://www.reddit.com/r/RequestABot/comments/9h2go1/request_a_bot_that_receives_two_numbers_one_via/
I'll look into this. Thanks.
But why a database?
How else would you keep a large amount of data?
Building it.
I have never heard of Scratch but after a few hours of YouTubing, I think it could work well! Thank you! Really appreciated.
Guess the number would work well. It is a math heavy class so number games would be quite engaging. Thankyou! Really good idea! 
0 is different than NaN though...
No need for any front end. Just a script. I use Flask sometimes.
As someone not into AI / Machine Learning. Can we expect CUDA to be the x86 on PC and Servers? Literally all works are defaulting to CUDA and Nvidia's library. I don't even see a contender trying compete. I don't even see AMD's ROCm being used or even mentioned anywhere. Is there a way that a person could create a QR code made from one-way private key? The QR code would contain date and time and other Metadata that is decrypted with a public key that proved the QR code in the video was made by, for example, the person in the video? This would "prove" the video was real? I guess the speech would still be manipulated. So the whole transcript would have to be encrypted in this way...
I love how butthurt people get about document dbs.
I am not talking about frontend at all. 
http://arcade.academy
Cool I will check it out
Unfortunately not
Oh okay thanks anyway
Seriously though, I had an assignment once for which I had a personal project perfect for but used a json file as storage. I showed that to the teacher, he just said to hand him a version using a database, I wrote a dal, replace the json file with a sqlite db (file) and that was all.
When did you start on vim mode in Pycharm? I didn’t have the same experience, unfortunately. For me it was less responsive, buggy, didn’t support much of the visual mode or macros, and made the input modals act funny. Is this no longer the case? Admittedly I’ve not tried it again since a year or so ago - the issues back then may be resolved by now.
I keep seeing this claim. Why?
Yes like unity but if game maker is really that easy I wouldn't mind checking out, so literally no code
Django is powerful, but it's inflexible. Also, it's overkill for some purposes. 
I use neovim with deoplete - primarily because I found deoplete to be a better completion engine for me than YouCompleteMe with original Vim. 
https://www.youtube.com/watch?v=b2F-DItXtZs
Not python, but Godot is very accessible if you have python knowledge. GDScript is almost entirely python-like. [](http://docs.godotengine.org/en/3.0/)
OK I will check it out
Vscode has tons of plugins, including Python and vim. It can also detect installed system linters as well as virtual environments. Kind of the reverse of what you're asking for (vim plugins for IDE rather than IDE plugin for vim), but having spent a lot of time trying to find/customizing my vim plugins, I kind of gave up after trying vscode.
Oh damn, I should've seen your comment before posting mine. 
Sure, I will have a look, thanks
You got the concept ! For my cases : I mainly developp on GAE/py, I've built my own editor's online. ANd with this kind of things : I can create my components easily. Second cases : I'm developping wuy ([https://github.com/manatlan/wuy](https://github.com/manatlan/wuy)). And with that : it's really easy to build an embedded vuejs app, without all the nodejs stack. It lets you build big apps easily, with wuy !
 &gt; Building it. Can't argue with that.
Which is a **design choice** and also configurable. The whole “you can lose data” prejudice against MongoDB is because in the default configuration it’s certainly possible— but that smacks of lazy development and lazy operations. You don’t test this shit before you roll it to production? You don’t figure out how you want it configured? A post by the MongoDB CTO refuting most of these claims: https://news.ycombinator.com/item?id=3202959 This was in response to this (keep in mind, this is all from **years** ago at this point, and I think people hold on to these prejudices because learning new technology is hard): http://pastebin.com/raw/FD3xe6Jt 
Wrote my bachelor's thesis on MongoDB and used it in projects for approx 2 years. In that time, I saw everything from serious bugs left open for months and data corruption to design flaws and downright harmful advice from the MongoDB support staff. At the same time, I saw competing databases (such as Postgres) make amazing strides and introduce great support for JSON storage. In short, anything MongoDB can do, other databases can do faster, safer, simpler and cheaper.
Yeah, every one wants an IDE that takes up 2gb of ram and its actually a browser (and had some security issues in the past)
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Try r/netsec. Are you looking to create security tooling using python? 
Looks like your use case is: - relational key value - super low maintenance bar so you can focus on prototyping Have you considered?: https://dataset.readthedocs.io/en/latest/quickstart.html Lowest bar to usage without having to write the DAL yourself.
MondoDB is a marketing miracle. And inexperienced devs keep eating it up as as the second coming or Jesus. Just like this week's new frontend framework.
&gt; Wrote my bachelor's thesis on MongoDB Link please. I would enjoy reading this.
I remember trying for a bit and then settling on klepto, which solved a similar problem but was more flexible.
If you’re willing to use pickles as data store, don’t overlook the pioneer of this: [ZODB](http://www.zodb.org/en/latest/). It doesn’t have lots of recent updates, but that’s probably because it’s been “finished” for over a decade.
Well, in school, an assignment often isn't about solving the problem. It's about showing that you learned how to use some type of technique. If the problem called for solving a problem using a database, then not using a db is wrong even if your program happens to solve the problem.
&gt; If you already know django, using it for non-web stuff is a great idea. Wait, what? That doesn't seem reasonable at all. Django is a big dependency. I'd love for a django fork that just pulls out the orm and migration tooling though, as I really like that part. It works much better than any other ORM I've used (python or not).
For my needs on my machines (macbook pros) I've had no issues, but I'll admit that I found I didn't need to use as many advanced features of vim once I got used to using PyCharm's features, but I've been using it for years. The vim plugin is surely a subset of total vim features, though.
Why not just use the [shelve module](https://docs.python.org/3/library/shelve.html) from the standard library?
Thing disadvantage here obviously is using a huge framework with lots of dependencies for a small project. Imagine every from x import y from that framework has to traverse the whole module's declarations (and its respective dependencies recursively) to use a function that could've been in a single class of his own (or PickleDB, which might aswell be that, since its code is tiny).
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Long story short, ChromaCodes encode text in to the colors of a grid of squares. It was originally meant to be a more data-dense competitor to QR codes. I was never able to make it reliable enough to be useful in the real world but I thought you guys still might like to see it as a novelty. More details and a github link are [here](https://www.reddit.com/user/UltraChipsChromaCode/comments/9i91nx/new_to_chromacode_read_here/). 
Fair enough! Pycharm is fantastic so I jump between the two fairly regularly, depending on what my needs are for the session. Refactoring usually in Pycharm, for example
It's not really easier, instead of writing the code you end up dragging and dropping control structures, so you still have to program, but it's intended for people who are afraid of text for some reason. 
Now do one for emacs!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
No one told you to import the whole django framework.
It scales really well. Initial cost of investment has paid at least me, really well.
Those are not alike? I mean, shelve is based on pickle which has several issues. pickleDB isn't basd on pickle anymore.
Remember that Pickle is not a format for long-term data storage. If you pickle an instance of a class, and the code of that class changes (because it's an interesting class and not just something from the standard library), you may not be able to un-pickle it. Even if you keep the classes you pickle very simple, pickling can still encourage losing track of what your data is and where it came from, because pickles are so opaque. I'm not sure which of these reasons it was, but I remember when the NLTK project lost their default English part-of-speech tagger because the only place the data was stored was in a pickle, and nobody could find the code supporting it. I've also seen research projects that distributed their results as pickles that don't load anymore.
I really like the ZODB. Here is a video on it. [https://pythonlinks.info/zodb-the-graph-database-for-python-developers](https://pythonlinks.info/zodb-the-graph-database-for-python-developers)
Do you know the code.org? I think it's a good start point before start to code, there is also the codecademy.com with good python courses. you can follow the path: code.org &gt;&gt; codecademy.com &gt;&gt; pygame
Thanks! Did not know about those
Thanks! He did try Scratch and liked it
Everything is flexible if you know how it works. PROTIP - press Ctrl + B in pycharm, read source code, modify/inherit according to needs. 
For a script, I guess it's probably overkill. But for anything remotely serious is a pleasure to use!
Python is a powerful yet versatile language and surprisingly not very hard to learn even for kids. Turtle is a great starting point for your little ones
Well, GameMaker was made so that making games would be easier. With the drag and drop thing you don't write any code but you have these "nodes" that do different things. So you just add them to the object you want, like adding a movement node to your player that only is activated when you press an arrow key. I would highly recommend learning a programming language tho, even if you just want to make games. It's very fulfilling. Even if it's the GameMaker language. Good luck
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
+1 for ALE. One of the best Vim plugins around.
I don't get why simplejson is even used here. This project could easily just stick to json and pickle and require no external dependencies.
in my experience, redis is actually quite easy to setup even for small projects. you can just run redis on localhost for dev (or if you don't have any kind of parallelism in your application environment) and easily swap it out for a remote redis server later if/when you need to. so basically i'm recommending you just actually use redis instead of a toy project that is basically a worse redis. 
It doesn't even use pickle. It's a bizarre project name. import os import signal import simplejson from threading import Thread
Most of our deployed projects have a requirements.txt, and then locally a docker compose yaml and env files. The local dockerfile will run pip install (which is kind of annoying as you have to know to rebuild if deps change). For deployed envs Jenkins does a first step doing pip install and whatever other setup (e.g., webpack). And then a second Jenkins step deploys the container. Big pro is the build is always reproducible. Con is a bunch of stuff has to happen to run code, but computers are fast nowadays.
The division operation returns a float. You can either use a double slash for integer division (which will only return the integer part and throw away any decimal part), or you could wrap the calculation in an int() function.
Division will return a float. What you want is floor division which uses // 25 + 30 // 6 30
It's the behavior defined in [PEP-238](https://www.python.org/dev/peps/pep-0238/). &gt; The current division (/) operator has an ambiguous meaning for numerical arguments ... We propose to fix this by introducing different operators for different operations: x/y to return a reasonable approximation of the mathematical result of the division ("true division") ... True division for ints and longs will convert the arguments to float and then apply a float division. That is, even 2/1 will return a float (2.0), not an int. For floats and complex, it will be the same as classic division.
If you want a simple persistent key-value store with pickle support then the standard library already has [shelve](https://docs.python.org/3/library/shelve.html).
The first tutorials are basic and I would like to go in depth into other topics but what you said is a good point that I hope I'll be explaining in the future. Thanks.
\+1, I hope I'll write something about it in the future.
I understand that ignoring the criteria by which you’re being graded is a problem— but there’s definitely value in someone who can look at a problem and say, “is this really the best way to do this?” Education kinda fails everyone in this regard. 
[lol](https://github.com/patx/pickledb/blob/master/pickledb.py#L47-L55)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [patx/pickledb/.../**pickledb.py#L47-L55** (master → 89897b4)](https://github.com/patx/pickledb/blob/89897b4e07a80b731ca5b4e2b2df5ca54e825871/pickledb.py#L47-L55) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e6i1j0x.)
This thread is the problem with tiny databases... everyone has one and they all stink. 
Actually, I love it! Precisely because you lock the entire grid. I'm trying to explain that good OO, especially use of design patterns, sometimes conflicts with the need to multithread. If you have to implement locks at a high level (i.e. lock the entire grid) you sacrifice a lot of possible performance gains. If you instead lock at a lower grain, the locks itself might add a lot of extra overhead, you also have to code a lot more and it might force you to compromise on your design principles. This does not mean X is better than Y, it means a good programmer will be aware of the implications and make a reasonable decision for the problem at hand.
Im rather fond of sqlitedict. https://github.com/RaRe-Technologies/sqlitedict
I highly recommend checking out Al Sweigart's books. One of them is specifically made for python games with pygames. Happy learning
I built this in a couple of days out of bore and to practice a bit. I am not a professional programmer, so any thoughts and critiques are welcome! And of course: anyone's free to fork and contribute.
The book is organized into different games that they can make and teaches them how to use the different functions to make the game. 
&gt; powerful yet versatile What do you mean by "powerful"? Because performance-wise it's not the greatest.
It’s sufficient for machine learning in my experience
You are welcome.. This list will be updated weekly... 
welcome.. will update this list weekly.. 
You could use a list comprehension: processes = [process for process in processes if ...]
Exactly. And it doesn't have 20 commands like this library does. 
Who keeps downvoting such an obvious question?
They fulfill the same purpose; they're exactly alike. What issues does pickle have?
Product and engineering is around 60 or 70 people. This includes 4 devops engineers, a build and release engineer, and a qa automation lead (who works more closely with release engineering vs the rest of qa works more closely with product and engineering)
If you like arcade games, check out: * [Program Arcade Games With Pygame](http://programarcadegames.com/) * [Program Arcade Games With Arcade](https://arcade-book.readthedocs.io/en/latest/) * [The Arcade Academy](http://arcade.academy/)
Awesome info! Thanks!
There’s a good online curriculum called codesters.
Try Qt :) 
These are all excellent resources for me. 
&gt; I built this in a couple of days out of bore and to practice a bit. Best excuse for reinventing the wheel :) 
lol
i am happy !!! I will keep this list updated... 
Its nit c++ if you can read it.
Why is it always Ali d and bob? Can’t it be Wendy and Steve?
[pygame-zero](https://pygame-zero.readthedocs.io/en/stable/) seems to be a good start for your him.
I agree. They are exactly the same. The only difference is what format do you write things out as, json or pickle? The real question I have is are things you can serialize to json that can't pickle? As far as I know the answer is no, but there are things you can pickle that you can't serialize to json, such as functions, admittedly you'd need to use something like dill though. 
Does it look like this? https://i.redd.it/ev4bbol8rxsx.png
Following Paul Graham, [power in programming languages is about expressiveness](http://paulgraham.com/avg.html), not simply performance. For example, Lisp is more powerful than C because you can express your ideas faster in Lisp than C.
That shit's java
*if it compiles or has less than 920 lines of template errors
You can use Qt, but Id do something with HTML/CSS/Javascript and setup an API for your code. Honestly, its a lot more forgiving. I hated GUI when I started because the concepts didnt make sense to me, so the code I wrote was "bad" and since python is slow... well. But the bowser allowed me to write bad enough code and it still work, so I wouldnt get discouraged. 
I've been trying it, I don't know how it actually works and unable to find useful tutorials. It looks quite simple I wish to add images and event handling. Thanks for your contribution!
lmaooo
god damn template errors 
In highschool, we used https://groklearning.com This has games, puzzles, as well as actual learning. 
I'm in the same boat, just finishing a diploma in software development, lots of python involved. Was at an OWASP conference this week past, although they didn't mention python they did talk about machine learning and I've read that python is quite popular in that realm. 
Yeah. You could look at it as "the entire grid" is the shared resource, therefore you have one lock for the grid. But you'd get more fine grain (and probably better performance?) by just locking the individual cells: really, you want to prevent two worms from occupying the same cell at the same time. Heh, I need to clean up and rewrite that code. And maybe create an asyncio version too.
This sheets will come in handy...
I didn't say it was incorrect, I was asking what they meant.
And even that, only once. I think the only problem is deploy. Needing a big dependency that itself depends on many things - that makes your app unusable on anything but typical desktop. 
I don't think OP was thinking of something like this but in this branch I use Visual Studio Code (not visual studio) which is kinda new and suits many needs and is totally free (and no registrations except if you want synced confs everywhere) 
In my case: because shelve keeps all it's data in memory and in a very inefficient manner. It runs out of memory very fast. Also, no guarantees in case of crash. No multiprocess access either. 
the only thing I miss from emacs is M-x butterfly and zone thingy
Been working on a project. This is golden. Very helpful. Thanks! 
It's precisely the fact that you have the option here that makes it a great example. I can now get the students to hopefully think about which version would be best and maybe even try to implement the finer grained lock. Either way, thanks for putting out awesome examples :) I just realised you're also the author of the text adventure demo. Another great example, thanks! I've been getting my students to write a similar game to practice OO design patterns and referred them to your example to give them an idea of what the play should feel like.
I use PySimpleGUI. Pretty straightforward and easy to learn. https://pypi.org/project/PySimpleGUI/
that's why i don't use templates! or classes! or types! i just malloc the entire computer and randomly assign pointers until it compiles.
This reply is to remind myself what my code should look like once I learn a language that is not python.
First of all, including a module, "poluttes" the namespace of the module, that is, adds variable that won't necessarily ever be used, often times, you won't use entire std at once. The real argument though... Importing a module takes time, python already takes 1 second to startup (at least initially on my machine), now imagine how long you'd wait just to print hello world when there's over 100 modules being imported. Secondly, it's well organized, you know exactly what you're using and when, it helps being more explicit about your intentions, like, if you look at the source code and read the modules, you can pretty much know what the entire file will contain as long as developer was thoughtful about what they import. Third... Python has operator \`\*\*\`. You can raise n to the power of m like this: \`n \*\* m\`, if you learned anything from math in school, you can realize that you can sqrt by using \`n \*\* 0.5\`. Oh just a fun fact, math.sqrt is actually almost as efficient as using C's sqrt(), but you know, we are using Python, I don't think you really are so tight on that speed and if you are, what are you doing here anyway?
You would start by reading the sidebar.
My god I love this.
Welcome.. I am glad you find it helpful... Will be updating this list weekly... 
I agree. IMHO pipenv is only a half-baked solution compared to poetry. It feels like pipenv is only thin layer around existing pieces (pip, venv, setup.py), while the pyproject.toml + poetry solve the problem from the ground up and take inspiration from other modern solutions like Rust's cargo.
I feel like the Bokeh one...should've been done in Bokeh
I would love an sklearn or pandas cheatsheet
I've tried Tkinter, qt, kivy - but I found the easiest way to have some simple GUI is to spin up Flask instance serving HTML page.
Noted... 
If this is a text file, then this is really simple, just split each row into 3 parts, you can use .split() on a string and it will create a list of strings: 1. Condition; 2. Value for condition; 3. Result `"&gt;= 0.9 A".split() -&gt; ["&gt;=", "0.9", "A"]` Then, you can have list of lists, and iterate through it, it would look like this: `[["&gt;=", "0.9", "A"], ["&gt;=", "0.8", "B"...]]` (would be better if you figured out how to build it from the file you're reading) Once you have that, you basically use the condition like this: implied: rules = "&gt;= 0.9 A".split() condition = rules[0] condition_value = float(rules[1]) result = rules[2] After that: if condition == "&gt;=": if grade &gt;= condition_value: return result elif condition == "&lt;": if grade &lt; condition_value: return result Put this in a for loop, and go through all rules until you find correct one. Note that you could actually just return the last result if you haven't found one between first and last-1 result, but I just gave an example for the sake of completeness.
Moved from JSON to ZODB and found it a pretty nice experience overall. I like it's simplicity so far.
Quick and dirty solution: # map 0.0 through 1.0 to a dict (kind of like a case statement) grades = {1.0:"A", 0.9:"B", 0.8:"B", 0.7:"C"} input_val = (input('what is your score? '))[:3] print('grade is ', grades[float(input_val)]) &gt;&gt;&gt;what is your score? 0.876 grade is B You can theoretically use string representation for the float indexes in the dict, and get rid of the float type casting in the last print statement. You might want to catch any keyerror errors though...
Ha1 I'm so glad I posted my flounder.
Well, I could have used a text file if i wanted to. 
Is the case my fiend.
I've been told before yes.
LUSH!
If i ever programmed like this my computer science teacher would kick me out of his class. 
Welcome 
Noted... ☺️
that should be a tshirt
I've seen python that looks just as ugly as C++. Whenever a programmer changes a language, it's not guaranteed that their mindset will also change. 
I second codecombat. &amp;#x200B; I have close to zero coding experience and have been going through this site with my little one for the past 2 weeks. How quickly both of us have been picking it up is pretty amazing. They do a fantastic job of really drilling the methods into your head, slowly peeling back a layer with each exercise, eventually giving you a blank slate and a set of instructions, forcing you to write your own code. &amp;#x200B; We had looked at a few other sites, but they were too heavy on the reading and not enough on the interaction, while codecombat is mostly doing with a lot less reading. It's been a lot of fun. :)
Try PySimpleGUI. https://pypi.org/project/PySimpleGUI/
All of the links seem to be broken :(
Picking the right tool for the job is an art, but there's a very large set of problems for which an embedded SQL store like sqlite is an excellent match. Not saying there aren't also problems solvable with a simple key-value store. But I've made the mistake of using a key value store four something that ended up being a bit more complicated and it wasn't fun.
ok sorry thank you
Very nice collection of cheat sheets! 
r/learnpython
After loosing hours trying to fix the problem and searching the internet, reading the side bar would be like masochist . Should be somewhere at the top in red maybe
Start by going to /r/learnpython This looks like a good question for that community.
Here's another option for adding GUI's onto an existing script - [https://github.com/chriskiehl/Gooey](https://github.com/chriskiehl/Gooey)
All the other programmers make fun of Python's use of whitespace, but they all add the same whitespace to make their code readable.
you just draw the face with the coords given in the input, here is a small demo if you don't understand: `x,y=input('coords').split(',')` `draw_face(x,y)` i don't know what you are using to draw so i just put draw\_face() there instead
I drew my face, but its just sorta there, I can't really manipulate it. I would assume that I just need to set "draw_face" with the stuff I did for my face. How do I do that? Or do I need to do something else?
you should first get the input, then draw the face, not the other way around unless you are using a package that allows you to store shapes in a variable, then you could have something like `face=draw_face()` `face.move(x,y)`
Picked up Python about two years ago after stepping away from being a VB.Net developer for my local medical community for over a decade. I rarely share code with others online because while its logically valid, I just got tired of fielding the comments regarding what I will call my *very thick accent*. In my defence, if I'm not getting paid, then I'm going to write it in the manner that's easiest for me to maintain. For example, I've been working on developing a RogueLike on and off for a year now. Although someone might enjoy the end result, as soon as they opened the hood, their first reaction would probably to DBAN their drive without backing up... just to be sure. ;) 
link is broken
On the flipside, I recently ran into a python CLI utility that reads device data and it was DEFINITELY written by a C developer. I'm actually kind of unsure what the benefit of doing it in Python was.
I wonder how hard it would be to make something that can convert java written in python whitespace style into working code by adding all the missing brackets and semicolons.
Saved. Thank You !
I’m... gonna go try this
heres what I have so far. what do you think i should do? \#A program that computes a smiley face. The user will be providing integers \#which will be used to position the smiley face as desired. from simplegraphics import \* \#Read the desired values placed by the user x = float(input("enter a number: ")) y = float(input("enter another number: ")) \#Draw a blob \#The nose of the face setOutline("green") blob(300, 350, 300, 300, 400, 300, 400, 350, 350, 350, 350, 350) \#Draw an ellipse \#The outline of the face setOutline("black") ellipse(100, 50, 500, 450) \#Draw a curve \#The mouth of the face setOutline("tomato") curve(200, 350, 200, 400, 500, 400, 500, 350) \#Draw a pieslice \#The right eye of the face setOutline("maroon") pieSlice(390, 230, 100, 100, 60, 60) \#Draw a pieslice \#The left eye of the face setOutline("maroon") pieSlice(210, 230, 100, 100, 60, 60) \#Draw a blob \#The nose of the face setOutline("green") blob(300, 350, 300, 300, 400, 300, 400, 350, 350, 350, 350, 350)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
ios pythonista is good for 2D games if you have ipad. It has fragment shader support and has drag-and-drop.
https://docs.python.org/3/library/tk.html
Is there a code template for this so we can autoformat it into this ~~abomination~~ beauty?
I mean, as a man who writes perl and fortran all day... I kinda find even "good" c++ detestable. A new hire can read matlab or fortran code and get what's happening even if they don't know that language. The downside is, well, the subreddit will do the hissing for me.
you are such a dope guy or girl
[Like this!](https://doineedajacket.com) 
This looks a lot like sidebar/wiki material. 
Writing an app to query weather isn't science
Oh my God this is the greatest advancement in computer science since structured programming!
I've been thinking about doing something like that for a while now (for D). I did find a program that does it for C/C++! https://github.com/vrsperanza/CPY
It's not great, but PyCharm is better at being Vim than Vim is at being PyCharm.
Here's a precompiler that lets you write C/C++ like Python: https://github.com/vrsperanza/CPY
Game of Life? 
Holy shit
*Pypeline is a python library that enables you to easily create concurrent/parallel data pipelines.* * Pypeline was designed to solve simple *medium* data tasks that require concurrency and parallelism but where using frameworks like Spark or Dask feel exaggerated or unnatural. * Pypeline exposes an easy to use, familiar, functional API. * Pypeline enables you to build pipelines using Processes, Threads and asyncio.Tasks via the exact same API. * Pypeline allows you to have control over the memory and cpu resources used at each stage of your pipelin
It's the behavior of Python 3, or Python 2 if you import division from __future__. ➜ ~ python2 -c "print 25 + 30 / 6" 30 ➜ ~ python3 -c "print(25 + 30 / 6)" 30.0 ➜ ~ python2 -c "from __future__ import division; print 25 + 30 / 6" 30.0 
I would say a closer wheel is [dataset](https://dataset.readthedocs.io/en/latest/) which I used for a while before realizing i wasn’t doing anything too special and the raw sql was easier for me (and way faster and way less memory). Still, this looks pretty cool. You could probably add some more advanced query language if you wanted. I did something similar when I wrote [ldtable](https://github.com/Jwink3101/ldtable) to enable some stuff in a different project (before I learned the SQL and table indices). Oh, you can also probably give TinyDB a run for its money in terms of performance. I was not impressed with TinyDB’s performance but if you have SQL underneath, it may be way faster. 
non-broken link: https://ibb.co/jW8M2U
[https://ibb.co/jW8M2U](https://ibb.co/jW8M2U)
Which book is this!?
What? Pypy pretty much does work just like cPython except for a few packages.
Took me a moment too.
Thank you so very much this is awesome!!!
Yeah, except that wouldn't have been a database and wouldn't have given you any of the benefits of a database. 
How long ago was this?
I've been using shiv for my deploys the last couple of months, and I gotta say, it's fucking amazing. You should really check it out if you have deployment issues. Python has a huge deployment problem, but we're getting there.
Wuy https://github.com/manatlan/wuy
It's exactly the tool for that https://github.com/manatlan/wuy
☺️☺️☺️
You are welcome 
Yes... I will be adding more python cheatsheets 
Really .. 
Please check carefully ... They are all working fine... 
Yes... ☺️☺️☺️
Guy... ☺️☺️☺️☺️
What is it you miss about anonomous functions not possible with lambdas?
Welcome... ☺️☺️☺️
☺️☺️☺️
☺️☺️☺️
☺️☺️☺️☺️☺️
Thanks! But what I mean is - no deployment tool would save you if an app needlessly depends on C++ library that is not built for your desired platform, and build stack (gcc and stuff) is not present too. 
Multiple lines.
I've been seeing this algorithm everywhere today for whatever reason, but this must be its final form.
Not too hard we ask pretty much this in interviews
You can’t leak memory you never intended to give back anyway
Is it so hard to give it a name it’s gonna work hard for you 😭
Can you explain what the unique selling point of this library is? As it appears to be a relatively thin wrapper around the concurrent.futures library and appears to miss some of the niceties of other pipeline libraries such as Bonobo.
This is C# 
Most important feedback: you did it! If it works, that's awesome :-) The commentary is basically about making it easier to collaborate with other Python programmers, avoiding patterns that often lead to bugs, and generally making things more idiomatic or reliable (usually both). - When reading or writing files, use the `with` statement to make sure they get closed even if there's an exception. - `os.system` is dangerous - check out the specific functions like `os.chdir` and `subprocess.run`, which also work on any OS - Install and run a tool like `pylint` or `flake8` (`pip install` or `conda install`), which can give you automatic feedback on your code style and potential mistakes like unused variables (could be a bug caused by typo). These often felt arbitrary to me at first, but I found them really useful too and eventually learned why various messages existed - mostly avoiding problems I didn't know about! - You can get filenames etc. from the commandline without having to edit the script each time - check out the `argparse` module in the standard library. - `for x in range(len(thing)):` and then using `x` as an index is usually a bad sign - have a look at `enumerate` and `zip` for builtin functions, or for Numpy and Pandas objects you can do all kinds of things with vectorised operations (doing something to the collection usually does it to each element at once) And that's probably more than you'll need for a while!
Its the way forward!
Its the way forward!
It`s great! Thank you!
RemindMe! 2 weeks
It's not that simple, really.
https://inventwithpython.com has the full test of my books. Probably Invent Your Own Computer Games with Python would be best. If they don't like text programming, Scratch is good (in which case, check out https://inventwithscratch.com )
In my free book Invent Your Own Computer Games with Python, there's code for a tic tac toe and othello program. If you learn the code well enough, you could pit AI bots against each other to determine what the best strategies in these games are. See the later "AI Simulation" chapter. https://inventwithpython.com/invent4thed/
Nah, it takes like 0.1s longer to print hello world, it's clearly slow. /s
Maybe I should emphasis more on the word SIMPLE. Pypeline IS a "thin" wrapper around the multiprocessing, threading and asyncio modules, but using Pypeline to solve "simple *medium* data tasks" is way easier than using Spark, Dask, tf.data, H2O, Bonobo, {plug your favorite ETL framework here}, etc. If you look at the examples you'll see its VERY simple to get things done, it gets out of your way and looks like pure Python. I created Pypeline because after having to do simple data processing tasks that would take unnecessarily long if I didn't do them concurrently / on parallel on various projects, I'd either try hack my way into one of these frameworks (an overkill), of manually code e.g. a multiprocess pool with a queue. Both of these approaches take more time to code because of the boilerplate, I started to get tired of this so one weekend I decided to code the library to use it on a new project the next week, I am quite happy with the result :)
thank you.
C++ Senior System Engineer and Python fan here. What does it mean "too much like Python"? 
Anything dealing with binary data will need to have c-like definitions. The benefit of Python is that you can write and test it in 5 minutes, and you'll get exceptions if something is wrong.
If only it was possible to teach a 8 year old up to calculus in 3 less than like 5 years without locking him up inside and forcing him to learn at least 4 new things everyday for 16 hours straight just so they could understand the math used in machine learning...
Welcome 
Welcome 
Read the sidebar. Go over to r/learnpython and read the sidebar there, too. We are not here to do your homework. Ask more specific questions and show that you've at least made an attempt already.
I think its the right time to promote it. I am working part-time on it. Code is pretty stable so I am working on documentation now and need feedback.
Thanks. zproc looks nice! I don't think Pypeline will go into Reactive Programming as zproc, but if you are interested in where its currently headed I would love to collaborate with you! Feel free to summit issues / PRs or contact me directly, I am currently very dedicated to this project. 
I'm literally deployin django ORM apps on the raspberry pi. SO...
lets take the ellipse() as an example: if i call ellipse(300,400,100,100) that draws a ellipse of width 100 and height of 100 with the upper left corner at 300,400, now if we assume that x=100 and y=50 and call ellipse(300+x,400+y,100,100) now the upper left corner will be at 300+x,400+y which is equal to 400,450. you just add +x to every x coordinate and +y to every y coordinate and then it should work
# Pandas, SKLearn, OpenCV will be added this week.. Happy Learning !!! 🤞
So awesome!! Just starting with python and found such gem!
☺️☺️☺️😂
These kids are too good! 
Holy shit
😂😂😂
Jython
You don't understand. Raspberry PI is a full-featured luxury platform even if with limited performance. I am talking about some limited access proprietary Linux device, where you can run Python, but can not use pip, distutils, or other stuff, unless you embed them in your script. DB interface library is fixed at some version that is not compatible with latest django. And script must be run only as "python3 run.py", so that issuing a "manage.py migrate" requires adding modifing the script to launch it if needed. I operate one of such systems, and I have to rewrite everything from scratch because people use Django to store configs, PyQt to display an error message and Nginx to serve a single file. 
When I write Javascript I am typically building a pipeline of anonymous iterators to modify my data, three or four or more. If I tried to write Python this way it would _extremely_ tedious, and not very readable. This is one of the ways Python forces you into older imperative and OOP patterns.
For web development or in general? In general, Python can be used for desktop apps, embedding in other applications, even building mobile apps (if you're willing to take the overhead/complexity/non-native-ness). For the web, Python can be more expressive than PHP, more flexible in terms of how you can structure your application even without large frameworks like Laravel, potentially quite a bit faster in IO-bound tasks thanks to native async IO support.
I'm hoping that this package helps to fill the gap in python quant finance libraries. I strongly prefer python to R, but R does have many useful packages for estimating covariance and portfolio optimisation. The python packages I've seen have had very scant documentation and only really implement the basic efficient frontier (which on it's own is not that useful IMO). &amp;#x200B; PyPortfolioOpt is a package I've been working on for a while that brings common financial portfolio optimisation implementations into python. It is properly documented with explanation of theory, supports pandas dataframes natively, and is extensively tested with real stock prices. &amp;#x200B; It's also my first project to be available on pip, so I'm glad to have had the chance to learn about the (somewhat messy) distribution process. &amp;#x200B;
Depending on the application, it's nice to be able to make use of the excellent data processing libraries (numpy pandas etc) and easily connect them to your Flask/Django web app. &amp;#x200B; When I was building a roboadvisor at a startup, it was incredibly convenient to be able to do all of the financial calculations on numpy arrays, then generate plots with plotly and just connect this to flask. 
This post is better suited for r/learnpython 
yeah but you can still malloc in c++. it's just dumb to do so
I have a strong preference for functional patterns, and being able to define functions freely is pretty essential. Lambdas are a very poor substitute, a painfully obvious afterthought. You can only use them for the simple "hello worlds" of functional programming, like plucking keys from an object: const ids = items.map(i =&gt; i.id); ids = map(lambda i: i.id, ids) Incidentally these are also pretty much the only cases where list comprehensions are useful too. As soon as you want to do something _slightly_ more complex, like saying counting the incidents different values in an array, lamdas become useless: const counts = items.reduce((counts, item) =&gt; { counts[item] = counts[item] ? counts[item] + 1 : 1; return counts; }, {}); Now I would have to import reduce from functools and declare some "countItems" function I'd only use once and only makes any sense as a reducer. A comprehension would probably still work here, but just make it _slightly_ more complex and comprehensions start to fall apart as well. In my opinion neither lambdas nor list comprehensions are very useful outside of toy problems. You end up having to mostly just abandon functional patterns if you want to write readable Python.
I'm having issues with modules, do you by chance know of a cheatsheet for that? I mainly have issues with installs *missing attributes* and knowing how to find the syntax for using the module and attributes. 
PANDAS! 🐼🐼🐼🐼🐼🐼🐼🐼🐼🐼🐼🐼
A science fair project should propose a hypothesis and perform experiments to verify or refute that hypothesis. “Something that solves a problem for you” isn’t good enough on its own.
Ah you're probably right... "can python pick my outfit?" Hypothesis: "yea" 
It's got a framework for single-threaded concurrent programming in the standard library, `asyncio`, which is already usable and is about to see huge usability improvements in python 3.8 and after, notably thanks to cancellation groups and supervisors to restart failing components, a la erlang. PHP has a project for concurrent I/O, swoole , but it's not in the standard library and not as well documented. PHP's concurrency is still about spawning a whole process and using a third-party program for shared state and communication. Not great if you want to have thousands of clients waiting for updates from a websocket server.
If you don't know which issues pickle has you're unable to determine if pickle and JSON are "exactly alike". Maybe do the programmer thing and google the question you just asked me.
PHP is used strictly for web development. It's name originating from "Personal Home Page". You're preety much in a closed room here. Of course you can find bindings for UX and other stuff but i wouldn't do that. PHP is heavily success oriented. It will accept really weird function calls with really weird parameters and try to produce something from that. Python is a general purpose programming language. You have tons of bindings avaliable at your hand. If something is missing you can use cffi and hook into any c library... You can write nearly anything in Python. Webapp, car app, gui app, refridgerator app;) Yes - it's also a dynamically typed language. But it won't allow you to add string to a integer...
No, this is Patrick.
That’s fine. I get the issue, but I think it’s important that we be accurate about our claims and I was merely disputing the claims made by the comment I was responding too.
i dont know if i can help with that.. Stackoverflow is a great resource to get help.. take a look at this though.. https://realpython.com/python-modules-packages/#the-module-search-path
may be bi.. 
A massive gap I've found in multiprocessing tools is that there are some multiprocessing tasks where each job is pretty fast, but each worker needs to do some setup which is pretty slow. You don't want to have to do that setup for every job, when one worker can do hundreds or thousands of jobs with one round of setup. Imagine, for example, that instantiating a `requests.Session` was very slow, and you had 10,000 URLs to fetch. You'd only want 1 Session per worker, rather than creating one in the worker function. Should be easy enough to implement if you passed a class instead of a function to the job queuer, which had the setup in its constructor, and then a `.process(*args, **kwargs)` method which could be called with each item in the job queue.
I'm not really sure what your question is or why you're asking it. You've asked "what can Python do that PHP can't?" but that question comes across to me as non-sensical. At bottom, every programming language is Turing complete and can do anything any other language can do. You've phrased your question and followup text in a slightly combative tone that makes me hesitant to attempt to answer. So what do you want and why are you asking?
I dont use pycharm. But do you type in the interactive shell or a new file?
some "on the surface" feedback: from pypeln import pr from pypeln import th from pypeln import io please use speaking, descriptive, complete names. especially io is unfortunate to have in one's namespace with [io](https://docs.python.org/3/library/io.html) being a stdlib module.
Click to see the unicorn of the day:https://www.squattypotty.com/wp-content/uploads/2017/03/squatty-potty-dookie-unicorn-toy-1.jpg
What's with the C++ Python war. I use both and both have their places. 
I'm guessing it's using tons of strings and maps without giving more careful consideration to data structures that are more efficient and specific to the problem at hand.
Thank you, everyone! You have been very helpful. 
For the specific example of counting the number of times a specific item occurs in a list trying to write your own pipeline is just reinventing the wheel. You could just use [collections.Counter](https://docs.python.org/library/collections.html#collections.Counter) and let the standard library deal with it. For common cases like this there's usually already something available, but if Python isn't a primary language trying to find the right part of the library can be a hurdle, and if you want to do it the way you would in JavaScript then it's not going to be as smooth in Python. The idioms of the language just aren't similar enough.
Seems to work just fine for me: if __name__ == "__main__": print("hello") a = input("Enter string: ") print(a) output: /usr/bin/python3.6 /home/pi/PycharmProjects/Experimental/main_function.py hello Enter string: Black Metal ist Krieg Black Metal ist Krieg Process finished with exit code 0 &amp;#x200B;
Thankyou so much. really helpful :)
I'm not able to figure this out. I would think the extra clutter of brackets would make it more difficult? 
I write in a number of languages and the idioms I prefer are functional ones. JavaScript is a commonly understood counter example that supports functional patterns well. Counting was just an example, but since you mention it I also don’t care much for specific-case utilities like collections.Counter. They become part of a very broad API which requires a high knowledge level to either write _or_ read.
1. /r/learnpython 2. You're probably using Python 3, so you need `print(random.random(0, 25))` (though this will also fail - read the docs for `random.random` to find out why).
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Nah. Seeing where a bracket is or isn't is a lot easier than seeing where there's something aligned by 2 spaces or 4 or 8. Or to make matters worse, words from something having 3 or 5 spaces instead of 4. Plus spaces don't work nearly as well as brackets with screen readers.
Nice! I would also recommend that you check out [Dash](https://plot.ly/products/dash/), by Plotly; it is , in my opinion, much easier to learn and deploy (not to demerit your work, I also used Bokeh before, but once I found Dash I found it much more useful, and had a lot of success teaching it to my non-programming colleagues).
Funny at my work some of our data scientists are trying to figure out how to take an old process that runs in fortran and wrap it in Python because they haven't been able to even approach the speed of the fortran. I haven't looked at any of the code involved, but has been a thought of mine in the past hah.
I am glad.. could help... ☺️☺️☺️
Nothing. Most languages out there today have the same features, with different implementations and focuses, but apart from client web applications, that kind of locks you into Javascript and friends, all other applications can be written in whatever language with varying degrees of efficiency. Python has a sprawling data analysis community, with the best in class tools for this field being written in Python. This makes it easier to get into data analysis from Python, this is why it's been so popular of late.
Sorry, sarcasm filter miscalibrated. I can understand better now, I think. 
Fortran is the best formula trabslation language you will ever get. Full stop. Numpy developers, good luck.
python is awesome to get started for anything (yes video games as well). One of the best things that you can do is get a raspberry pi (model 3) and start with that. There are tons of examples on internet on how to create games using raspberry pi. Besides low cost, it is surprisingly modular and will go a long way if your son/daughter wanted to do a DIY or whatever. take a quick look at this one - [https://howchoo.com/g/n2qyzdk5zdm/build-your-own-raspberry-pi-retro-gaming-rig](https://howchoo.com/g/n2qyzdk5zdm/build-your-own-raspberry-pi-retro-gaming-rig)
That's a later revision of the original acronym. http://php.net/manual/en/history.php.php
&gt;codecombat.org [https://codecombat.com/](https://codecombat.com/)
Something that solves a problem like some other folks mentioned. Maybe an automatic attendance counter that references with a SQL/Local database that you can develop trends? Combine that with an average distance to school and you could get a correlation comparison.
Honestly I have not ever even imported numpy, I am Dev ops (which means specifically nothing at this point) been working on microservices and data flow/Apache beam stuff mostly. Part of why I haven't stuck my nose into the data scientists business yet.
I previously used Markov Decision Processes to solve it, but it wasn't "true RL". Here, it's model free, and the agent figures out the best strategy through trying different actions!
You can find the original archive via the Wayback Machine at [http://web.archive.org/web/20130731202547/http://pplab.snu.ac.kr/courses/adv\_pl05/papers/p261-knuth.pdf](http://web.archive.org/web/20130731202547/http://pplab.snu.ac.kr/courses/adv_pl05/papers/p261-knuth.pdf). The quote is on page 35. &amp;#x200B;
Iron Python is a C# implementation of Python, not a tool that takes C# code and stylizes it like python. 
I was thinking about this the other day! Maybe just including some optional `on_start` and `on_end` callbacks would do the trick, the on_start could return some context objects passed each call of the main function. Or maybe an OO interface as you say. I'll think about this, thanks for the feedback!
It's trying to run ffmpeg. Make sure ffmpeg is available on your system. Also, /r/learnpython.
Dude you've already been told to go to learnpython by the helper bot before, do you just not want to take advice? It's really hard to want to help when you've ignored advice in the past.
Alrighty I will remember not to ask stupid questions here!
Eww, that 3-liner for swapping.
Yeah. I will make sure to post to there from now on.
That's called C.
There are great courses on Udemy or Coursera to get started
Welcome... 
/r/learnpython is a good place to start, and an even better place to ask this question (or indeed search for the hundreds of other times it's been asked).
Remindme! 2 days.
Code + screenshot / video?
RemindMe! 3 weeks
Omg that's amazing, AMIRITE
I have actually looked few courses and bought them as well but nothing seems to make much sense after few videos 
FWIW, there's quite a few PHP command line scripts...at least in Linux-land.
&gt; Yeah I mean wow cool Python isn't the fastest in the world, your point? I was just asking what they meant by "powerful" if they weren't referring to performance...
That's amazing! 
OPENCV! 🤖👁️👁️👁️👁️👁️👁️👁️👁️👁️👁️🤖
That not pythonic
good cheatsheets to have them on handy.
Speaking at a high enough level, any modern language can do everything any other modern language can do...particularly if you're willing to write some C glue into some more low-level stuff, it's just a matter of how much work you want to put in to it. So your question becomes "What can python do more easily than PHP?" If you know PHP and don't know python...there's not much that you're doing, if anything, that python can do *more easily* than PHP. But that's largely because as a PHP developer you're not even attempting to do a lot of the things you can do easily with python. The problem with questions like yours is that I can point out some particular thing that Python can do easily, and then someone else can say "well, you can do that with PHP by doing X, Y, and Z". Then you've got this frustrating back and forth for eons of time that does not really end up with a solid answer. So to avoid that problem you can start talking about intangibles like how the design of the languages lead to more or less correct/maintainable/safe/readable/blah code, but that is neither satisfying nor likely to yield a result where someone changes their mind. I think that really the only way you can answer your question in a satisfying way is for you to try solving problems with python instead of PHP.
Created an issue to track this: [https://github.com/cgarciae/pypeln/issues/10](https://github.com/cgarciae/pypeln/issues/10)
I have not used Hy. If I needed to write code that compiled to Python, and had the freedom to choose the language for the project, I might check it out. It's unclear to me why compiling to Python would be a requirement though.
You have to assign it to a variable. ans = input("Enter string: ")
import random generatedNumber = random.randint(0,25) print(generatedNumber) Includes 0 and 25.
You should be using random.randrange(). import random x = random.randrange(0, 25) print(x) if x &lt;= 10: print ("Win") else: print ("better luck next time") if x == 5: print ("Jackpot")
typecasts are for inferior programmers who will be weeded out by natural selection, I can hold the possible values for 20 different variables simultaneously in my head at once lmao.
new/delete is kinda stupid imo (unless you're using virtual methods). The fact that C++ add a two new keywords and adds no features. It's the propaganda of obsessed RAII dogmatists.
what if we still want the cool stuff from C++ like const expressions, default arguments, auto keyword, etc.
The main different I'd say it's the vendors/libraries. Some of them are better or worse... but you can do exactly the same in both with better or worse results... &amp;#x200B; If you don't have any reason to use python I won't recommend you to change... Michael Cullum did a talk about using machine learning in PHP for instance.
There's so much wrong with this post, I don't even know where to begin. Well, I think that UX bindings is just a typo. I don't know how do you bind language to experience... &gt; dynamically typed Is a meaningless word combination used by people who know very little about types. Consequently, they make absurd claims, based on this fictitious statement. &gt; But it won't allow you to add string to a integer. Of course it will. Python is object-oriented, and there is no problem extending integer or string classes, and then defining any kinds of operators for either one or both of them. Without testing, something like this should work: class istr(str): def __add__(self, other): return super().__add__(str(other)) def __radd__(...): ... But, most importantly, author of the post is confused about what constitutes the language. Libraries aren't part of the language, unless it's the "standard" library.
That's awesome! It's the most expensive Python book I've ever come across.
There's nothing in Python's defective concurrency that is "a la Erlang"... dream on. &gt; PHP's concurrency is still about spawning a whole process That's wrong. PHP has threads...
Fucking incredible
So I sat and profiled the code, and found was surprised a bit to find out that the performance bottleneck is not in your calculations, but on matplotlib. I vectorized it anyway, with a bit difficulty because I was rusty and didn't quite get at first what your code was doing. Now that I've done it, `updateP` and `updateV` take about 5% of execution time each -- after increasing the scale to 100 because at 50 matplotlib was consuming almost all the execution time. My guess is that writing a "renderer" with OpenCV might help, but that'd be more oriented to "video" rather than visualization. Then again, you've already bent matplotlib so much, maybe if you needed it you could pull something with cv2.
&gt; any modern language Should be "any modern language that has over 10K posts on StackOverflow". There are modern languages that are written for experimentation, instead of repeating mistakes of Fortran to make people who learned Fortran happy. They are usually vastly different from PHP, Python and family.
new/delete has several additional features: * calling delete on nullptr doesn't crash the application * calling new automatically calls the constructor, and delete calls the destructor, so you don't have to deal with types that you have to call make_my_thing and delete_my_thing or call setup/destroy methods before and after setup/free * New knows about the size of your type, meaning you don't have to have additional stuff doing sizeof() on every allocation. * New returns an actual type instead of void*, so you don't lose a bunch of type safety.
There are many, many resources to learn Python. You're not easily going to fine one resource that will reach you everything, but rather try things and see what works. It's really good to work with a teacher or a mentor who can help you get through where you're getting stuck. One resource I'd encourage you to try it the actual Python tutorial itself, but use Google to get through what you get stuck on.
Pretty sure numpy eventually calls the Fortran code. So you're already getting pretty good performance.
&gt; This project could easily just stick to json and pickle you mean like [shelve?](https://docs.python.org/3.1/library/shelve.html)
Very nice. Great work
This is amazing. I really want to read some history now! The page before: &amp;#x200B; &gt;In our previous discussion we concluded that premature emphasis on efficiency is a big mistake and may well be the source of most programming complexity and grief. &amp;#x200B;
Pandas cheat sheet is updated &amp;#x200B;
Pandas is updated... 
Yeah when it talks about artificial neural networks I got discouraged
# Pandas Cheat Sheet is Added.... 🍻 &amp;#x200B;
I've worked with PyInstaller a fair amount, and one of the things I've had to work around with it is how it tends to overestimate what components need to be bundled in with your app. For instance, I had an app that didn't rely on TKinter at all, but it and all of its related components ended up bundled with it anyway. wxPython does tend to include a lot of additional files, though, so maybe a less over-the-top GUI solution (if it's just a GUI you need) like PySimpleGUI would server you better.
I actually built it using the TKinter GUI first, then re-wrote parts using WxPython. They both did the same thing which was a bummer. Is there some way to specify what it bundles that I missed? At this point I've considered just installing python on each of my users PC's and distributing the .py files even though I don't like it, but it achieves my end goal.
I would recommend looking into LUIS.AI it can parse incoming text for what are called intents and entities to help you determine what the customer is trying to accomplish..
Wow, that's really cool. Primes are easily identifiable as single circles. Almost generative art.
This is your answer OP
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I have had better luck with cxfreeze vs pyinstaller in the past, but havent compared the two for a while as I moved to cxfreeze when python 3.6 first came out and pyinstaller didnt work with it. Does it have to be onefile? when you do this, the app has to be unzipped when it is run (all in the background). If you have a lot of dependencies or small files included then this can really slow down startup. Try building to a directory and comparing startup speed with the onefile option
If you're only distributing it to a couple of people that might be the easy way out.
It does not have to be onefile, but onedir is really ugly. I need one file and my users have to dig through 50 to find the exe. If pyInstaller would let me put all the files in the main directory, up one level and leave the exe alone, it onedir would be a fantastic solution Since I am very new to python, I don't know how the list of libraries I am using is many or few. import os import subprocess import getpass import pyodbc import wx import datetime import mysql import re import sys maybe I will check out cxfreeze and see how it works out.
So according to your logic, if you compare a truck and a Formula 1 car to a rocket, or a submarine, they are also essentially indistinguishable.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
I have no idea why numpy doesn't feel as pythonic. Probably lots of c developers helped write numpy? :Shrug:
nvm lol - I just changed the name and it works lmao Sorry
I've had this problem, too. I don't know if I ever found a fix for it, but last time I compiled a GUI, I used Nuitka. Worked pretty well and (I think) it was one file. This is not a solution, but another option, I guess.
Just a heads up, freeing a null pointer doesn't cause a crash as per the spec. Double freeing, however does.
1: read the sidebar 2: do you actually want a database, or do you just want a lot of text? If the latter, wikipedia.
my team varies from 5-7 people but, I am looking at the possibilities of providing applications to other teams on occasions as well. If the app had a splash screen while unpacking its files in onefile mode i could handle it as people could tell something is happening. instead they will keep clicking the icon and get a few instances open.
It's been quite a while since I've used PHP, but one aspect that always bothered me was the php.ini file. Having a config file for a service makes total sense, having one for a language - not so much. My recollection is that PHP extensions had to be enabled in the global php.ini file. This differs from Python where packages are imported as needed by each application. In my opinion this makes code much more portable.
Just read the documentation and it appears that this is true. I avoid C like the plague though, so I doubt I will have a chance to put this newfound knowledge into use.
Nice. I implemented something similar using Scipy - minimize negative Sharpe for MVO, minimize portfolio risk, and minimize stdev of portfolio risk contribution to make 3 portfolios.
PHP and Python, like all programming languages, are both turing complete, so they all can do everything in principle. The difference is how you can solve particular problems in those languages. PHP was created for webpages, and it shows. You can write command line programs with it, but it was not the intended use case. Also, the first versions of PHP were very hacky; IIRC Rasmus Lerdorf initially created PHP as a template language for his webpages. The thing were Python shines is that is an incredibly nicely designed language; (almost) every feature added to the language had to be shown to actually improve the readability of real world code, and make it more elegant. Python has a reputation for being "runnable pseudo code", Python code written by experienced programmers often looks like pseudo code that even programmers not familiar with Python can understand. For example, there is a really [old article by Eric S. Raymond](https://www.linuxjournal.com/article/3882) with his first time experience with Python: &gt; What I really wanted was code that would analyze the shape and members of the initializer, query the class definitions themselves about their members, and then adjust itself to impedance-match the two sets. This kind of thing is called metaclass hacking and is generally considered fearsomely esoteric—deep black magic. [...] I knew from previous experience that the bout was likely to be painful, even assuming I won, but I dived into the book and read up on Python's metaclass facilities. [... shows his implementation ...] Thirty-two lines, counting comments. Just from knowing what I've said about the class structure, the calling code is even readable. But the size of this code isn't the real shocker. Brace yourself: this code only took me about ninety minutes to write—**and it worked correctly the first time I ran it.** [...] Even if we stipulate that I am a fairly talented hacker, this is an amazing testament to Python's clarity and elegance of design. PHP, on the other hand, had quite some weird design decisions, you can [read about them here](https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/), and although PHP has quite improved since then, it still feels not as elegant as Python. This isn't supposed to be a "PHP sucks" post; there are people that like PHP, and there are people that like Python, but I don't think you'll find people who like both; they are really different in philosophy. If you can agree with [the Zen of Python](https://www.python.org/dev/peps/pep-0020/), you'll probably love Python. 
I'm new to numpy... Why is this?
What?! Wow... I wish my code looked that nice.
Fortran LITTERALLY stands for 'formula translation'
Thanx
That is definitely a case of natural language processing. You wish to extract the meaning, or semantics, of a written sentence. Plenty has been written on this topic. A key tool in NLP is the construction of a sentence tree structure. This is a way to use grammatical rules to determine by algorithm which word refers to which other word in a sentence. The concept is [described at length here](https://www.nltk.org/book/ch08.html), along with the complexities involved. Another aspect of NLP, which hopefully you don't have to deal with, but is worth knowing of, is *ontology*. Especially if you are dealing with language that uses complex terminology, such as scientific or legal language, the meaning of words, and especially how concept referred to by these words relate to each other. For example, someone saying, "I bought a laptop" or "I bought a Macbook", the latter implies the former because "Macbook" is a subset of "laptop". These concept relations are explicitly encoded in these so called ontologies. Ontologies can be a nightmare to construct, so ideally they are collected from some source. The [standardized OWL format](https://en.wikipedia.org/wiki/Web_Ontology_Language) is one of the most ambitious ways to represent an ontology. There is a very useful resource for NLP software, the [Stanford Core NLP](https://stanfordnlp.github.io/CoreNLP/). You can connect Python to a server running this, see [this blog post for instructions](https://www.khalidalnajjar.com/setup-use-stanford-corenlp-server-python/). There are also other Python libraries, although they may not contain all the capabilities you need.
yeah you're right, but the volcano always wins first prize. :) There is less "scientific method" than there is "science can explain this explosion", or "science and math are at the heart of this computer program that says 'hello world' " 
It's not a game, but Python's turtle module might be a good place to start. This, for example, draws a triangle, and you can use it as a jumping off point for loops and functions. from turtle import * forward(100) left(120) forward(100) left(120) forward(100) left(120) You can also use the shape("turtle") function to make the cursor an actual turtle, and the speed() function to slow it down to make what's happening easier to see. 
[http://www.datapointed.net/visualizations/math/factorization/animated-diagrams/](http://www.datapointed.net/visualizations/math/factorization/animated-diagrams/)
It's been 4 years and it still haven't ended
great
/r/learnpython
You know what helped me? Buying a Raspberry Pi along with a sensor kit. This allowed for me to learn Python while having fun making lights blink and sensors buzz... Also, it teaches you to find codes from others using GitHub. Check out [CanaKit](https://www.canakit.com/raspberry-pi/raspberry-pi-3-kits)
Done in 0.4 version : now it uses htmlparser (insteaf of regex). it detects a lot more of trouble (by raising exception). And unittests coverage 100% in py2 &amp; py3.
How do you install cairo on windows?
i love the \_\_add\_\_ method and super explains it`self`
will add flask one too.. thank you... 
maybe something for the raspberry pi find something hard and make it stupid easy 
https://dialogflow.com/ https://chatbotsmagazine.com/quick-start-develop-a-chat-bot-with-aws-lex-lambda-part-1-b6f7c80ebba6 You can also do it on a low level (i.e. parse input, categorize intends, etc) with engines like https://rl3.zorallabs.com/wiki/Main_Page
Does anyone know what it depends on? There's a few `cairo` packages in pip, but I'm getting build failures with `pycairo`.
This post is better suited for r/learnpython and r/learnprogramming 
This post is better suited for r/learnpython and r/learnprogramming 
This post is better suited for r/learnpython
There are two types of chatbots: general purpose (small talk) - just a random conversation.. more likely you will find this when search opensource chatbot.. and it is not what you need task oriented - are based on detecting intends, entities, and associating intends to actions... this is what you need and what googles, aws, ibm, etc try to solve with their services -- first, look at their solutions to better understand the concept...
Heh, that's cool.
You've given no additional information so being able to discern what may be "best" for your use case is impossible. Two popular frameworks are [Django](https://www.djangoproject.com/) and [Flask](http://flask.pocoo.org/), but there are plenty.
I am glad this is helpful... I will update seaborn cheatsheet in a day... 
&gt;It's unclear to me why compiling to Python would be a requirement though Being able to use Python libraries is a possible reason
AND MY AXE
* Install and begin to use linux * Learn the basic concepts: tcp/ip, how to configure a network with static IPs, set up its DNS resolution, its gateway, its firewall, which commands to use. * Learn how to indentify and fix problems on each stage. * After that, it's to learn the application/services that do configuration for you (dhcp) or that offer internet services (dns, smtp, http, ssh) * Learn how to monitor services. I would like to recommend something like [The Linux Network Administrator Guide](http://www.tldp.org/LDP/nag2/), but half of it is outdated now. You can still learn the basics about IP configuration, and how hub networks work. 
Your application sounds like a dialog system, not a chatbot. The simplest way to do this would be a slot-filling system. \[Jurafsky &amp; Martin\]([https://web.stanford.edu/\~jurafsky/slp3/24.pdf](https://web.stanford.edu/~jurafsky/slp3/24.pdf)) is a great resource for anything NLP related. I've linked to the chapter on dialog systems. &amp;#x200B;
This isn't available for python 3.6 just a heads up
Firstly very interesting, secondly *quite not quiet... :)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, this post has been removed as it is not directly related to the Python programming language. It might be more topical on /r/programming, /r/coding, or /r/technology. Cheers, /r/Python mods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I've started to tag [hacktoberfest issue on IPython](https://github.com/ipython/ipython/labels/Hacktoberfest). Feel free to start working on it and send a PR. If you want to submit it before october, feel free to do so, we can close it and reopen another one in october for it to count.
AngularJs != angular2+
! remindme 3 hours
By installing Linux first. ^s Seriously, I dunnow since it's not programmer friendly.
You can install it with pip: `pip install pycairo`