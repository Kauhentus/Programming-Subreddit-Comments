Good luck with that when you have bigger piece of software. Some example for comparison: from pathlib import Path CONFIG_DIR = Path('~/apps/myapp').expanduser() CONFIG_DIR.mkdir(exist_ok=True, parents=True) CONFIG = CONFIG_DIR / 'conf.txt' CONFIG.touch(exist_ok=True) profiles = [] for profile in ['one', 'two', 'three']: profile = CONFIG_DIR / profile if profile.exists(): print(f'{profile.name} data:') print(profile.read_text('utf8')) #--------------------------------- import os from os import path CONFIG_DIR = path.expanduser('~/apps/myapp') try: os.mkdir(CONFIG_DIR) except FileExistsError: pass CONFIG = path.join(CONFIG_DIR, 'conf.txt') if not os.path.exists(CONFIG): with open(CONFIG, 'w') as f: pass profiles = [] for profile in ['one', 'two', 'three']: profile = path.join(CONFIG_DIR, profile) if path.exists(profile): print(profile) with open(profile, encoding='utf8') as f: print(f.read()) I know which one I like more. Pathlib is great! 
I gave a talk comparing cffi, ctypes, and (ab)using cython on CPython to call a function from a shared object, In this toy example, which repeatedly calls a c function to compute the value of a pixel in an image, cffi and cython were both twice as fast as ctypes. https://github.com/mattip/pycon2017_cffi/blob/master/pycon2017_cffi.ipynb. If you are referring to PyPy, the difference between ctypes and cffi should be even more tilted towards cffi. Of course, the best option is to write pure python and let the JIT do its magic, which I show at the end of the talk is like writing the whole program in C. Benchmarking is tricky, you should compare using your use case.
Oh man you got way more back and forth and investigation than I usually see.
Really great example. While I'm usually in favor of syntactic sugar I wouldn't see myself ever using this. The processing of something like this is all wrong - instead of reading a loop top from bottom now you have this mess. 
Minds sharing where would you prefer it over current syntax?
Not knocking Pathlib, but have you used [pyfilesytem.org](https://www.pyfilesystem.org)? import fs config_dir = fs.open_fs('~/apps/myapp', create=True) config_dir.touch('conf.txt') for profile in ['one', 'two', 'three']: if config_dir.exists(profile): print(f{profile} data:') print(config_dir.gettext(profile)) 
https://mail.python.org/pipermail/python-dev/2018-March/152348.html
No and yes $ /usr/bin/pip -V -bash: /usr/bin/pip: No such file or directory $ /usr/lib/python* -bash: /usr/lib/python2.7: Is a directory $ sudo /usr/bin/pip -V [sudo] password for flo: sudo: /usr/bin/pip: command not found $ sudo /usr/lib/python* sudo: /usr/lib/python2.7: command not found PS: In top of that, I'd like to use python3 for development (I'm a complete noob though, I'm already stuck at installation)
_Don't use `sudo` to run commands unless you know what you're doing. There should never be any reason to run `pip` with `sudo`._ How did you install python 3?
Don't use `sudo` to run commands unless you know what you're doing. There should _never_ be any reason to run `pip` with `sudo`. It can break your system. Look inside those python 3 folders and see if they are proper installations. How did you install python 3?
(i edited last message with this) $ l /usr/lib/python python2.7/ python3/ python3.4/ python3.5/ python3.6/ I used sudo with pip because I think it told me "you don't have the privileges" each time. &gt; How did I install python3? No idea, I think it's python 3.4 by default on ubuntu 14.04, then I probably updated it to 3.6 with apt-get install
Looks very similar. Can it do something Pathlib can't?
qt is working on a web assembly branch. [https://wiki.qt.io/Qt\_for\_WebAssembly](https://wiki.qt.io/Qt_for_WebAssembly) so maybe someday
Run `tree /usr/lib/python* /usr/local/lib/python*` and post the output. It will probably be quite large, so best to use pastebin or something like that. There's a reason you don't have the privileges; you shouldn't edit anything in `/usr`. The `/usr` folder belongs to your package manager and any changes you make there will confuse it, or get overridden by it. `sudo` is dangerous. You should use it to run specific commands as root that _need_ to run as root (such as `apt`). Don't just rerun any old command that doesn't seem to work. The permissions are there to protect you, not just to be a nuisance. Are you actually running Ubuntu 14.04? You mention Zorin in your OP, but the latest version of Zorin is 16.04. Are you running an old version? Are you sure you don't know anything about how you may have installed python? Ubuntu 14.04 comes with python 2.7 and 3.4, but those extra directories suggest that you have 3.5, 3.6, and an extra 3.4 installation in `/usr/local`. You have installed python no less that three times over and above the two installs that come with your OS.
Nice! Have you though about wider audience? For this subreddit it should be ok, but I think once CLI stabilizes, you can try to use of of these Python GUI libs to make some simple interface for less tech savvy nerds and spam /r/manga and similal ;)
Have a look at the GIL in CPython. It's a global lock which prevents Python code from running parallel on different cpu cores. So if you want parallel execution you must use multiple processes. You can use the multiprocessing module for that. Different processes means you have no shared state. So you don't have to worry about thread safety in that case.
Same api works on zip files, tar files, memory filesystems, ftp servers, Amazon S3, and [more](https://www.pyfilesystem.org/page/index-of-filesystems/).
On a side note: people from /r/learnprogramming could fork it and made another scrapper as an excercise. E.g. /r/gonewile downloader would be nice.
Thank you. I'll make a link there.
Official recommended according to who?
Generally speaking no, you don’t need to uninstall py 3.6. You may wish to though if you will only be using anaconda. The only problems that will arise are confusion over which interpreter you are using, but as I assume your is is not using 3.6, it will only affect you and not likely break your box. 
Anaconda is installed fully in user space, and you have a base environment which aliases "python" (the word/command) to your space, allowing other system space apps to continue to use the original install of python. From there, you can have separate conda environments activated per terminal session/runtime. All that to say, no, leave system alone.
Good bot
Thank you, kons\_t, for voting on HelperBot\_. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
My apologies. I didn't expect it to be that big. The link you gave is cut off, probably because it's so large. Run `for path in /usr/lib/python* /usr/local/lib/python*; do echo "Path: $path"; ls "$path" | head ; done` instead. Should be much smaller. We can start by seeing what apt thinks is installed. Post the output of `sudo apt list --installed | grep python`.
Or `cumulative_sums = it.accumulate(range(100)))`
Three projects in my free time after work, that's why they won't bei finished before the heat death of the universe :(
This looks super cool, I may try joining in. 
I'll play devil's advocate-- I like the feature and it's syntactical notation (`:=`). I don't like the seemingly required grouping needed in control flow statements (parenthesis) and in comprehensions, I feel like it can be done without in comprehensions and done in a different but better way in control flow. However, I can not tell you what that way is-- I'm dumb when it comes to ideas. However, all your "looks like C" / confusing for beginners arguments are moot in my opinion-- everything is confusing for beginners. It's the "why do we use = for assignment" argument in programming, because people who are beginners see equals as mathematicallly equivalent instead. We do so because we do. Taking these arguments away, your points are: &gt; * This opens the question of why having two similar assignment operators rather than using `=` or `:=` everywhere I feel like reusing equals wouldn't make sense, because the use of equals *returns* None. This is equivalent to having a function that can manipulate the scope to set the variable, and then returns that variable. Something like: def assignment_expr(scope, var, val): scope[var] = val return val def example(): if assignment_expr(locals(), 'x', random.random()): destroy_the_world(chance=x) Except the above doesn't work, because the only semi reliable way to manipulate locals is via stack manipulation. &gt; * This adds another operator to learn and to understand how to use well Also moot IMO-- we have the matrix multiplication operator as of 3.(5?), `@`, and all the async statements as well. This is saying "we shouldn't have a new feature because that means we have a new feature". &gt; * Contrary to `=`, you can only assign to a name, which seems inconsistent I'll admit I skimmed the PEP because I'm off to work, but I don't understand-- do you mean we can't do `obj.attr := val`? This depends on something I'll mention at the end [1]. If my idea holds true, I'm okay with this, otherwise, I'm not. &gt; * Contrary to `=`, you cannot use it for in-place operations (like `+=`, `-=`, etc) Same as the above, depends on [1] for me. If it holds true, I'm okay with it, otherwise I'm not. &gt; * This opens the question of why not having used `as` which is already well known for name binding `as`, being a word, has grammatical meaning as well as syntactical meaning, which makes it difficult to comprehend verbally when actually explaining it out. I'm fine with using as instead of :=, but I can see why this would be an issue. &gt; * Expression appearing before the target name is easier to read while "scanning" code That's a matter of opinion and I think it's just as easy. But to each their own. [1], assuming that this operator binds into the scope generated by the control flow, ex, if (x := random.random()): # x is in scope # x causes NameError Then it makes sense, because attribute / dictionary assignment persists out of this kind of scope. So would in place assignment. General assignment would therefor obviously shadow the previous assignment, but shadowing is "more" than just inter scope persistence IMO. If this is not the case, then I don't see the reasoning for this syntactic sugar at all, it's merely saving a single line of code. If it is the case, it's actually more comsistent this way than not IMO, and I want it this way.
Hey, 13steinj, just a quick heads-up: **therefor** is actually spelled **therefore**. You can remember it by **ends with -fore**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
I don't think that example is unambiguous - at least, not to Python's LL(1) grammar.
Yep, but the content sometimes is good
Thank you, 13steinj, for voting on CommonMisspellingBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
That's an interesting decision, considering that python2 will be officially abondoned by the end of next year. Also, many big projects like pandas and numpy have accounced dropping python2 during the next year.
Maybe - it was an example copy+pasted from the discussion thread.
Can anyone comment on the memory use of PyPy compared to CPython? I imagine that CPython is lighter than PyPy. 
Working on a starting point for a program to help at work. https://github.com/Skipheus/automate-the-everything Will be adding gui and optimizing as I learn. Having lots of fun!
You might as well ask why there are so many modules in the Python standard library. Surely someone could just invent one module that does all of it? And that's also the answer: because sometimes the use cases have such wildly different requirements that a single `magically_do_all_the_package_things` command would be a nightmare to build, use and maintain. The majority of Python programmers will probably never actually write and build a package; if they need to deploy their own code they'll do it from a git checkout. Those programmers can get by with `pipenv` for local dependency management, and a a virtualenv and a requirements file for deployment (`pipenv`, by the way, is mostly just a wrapper around `pip` + `venv`, providing the unified interface you're asking for). Of the fraction of Python programmers who will ever need to make a package for distribution, the majority will get by with "write a `setup.py` script, then do `setup.py bdist_wheel` and upload your package to PyPI". And of the fraction of a fraction who *can't* get by with that, well, that's where things do and must get complicated, because usually they're doing complicated things. Take NumPy, for example: it's easy to use, and easy to install nowadays thanks to the wheel format, but building it from source can be a small nightmare. You need the Python packaging toolchain and a C compiler and a Fortran compiler and a bunch of libraries just to get to the point of starting to run the package build. There is *never* going to be a single magical one-size-fits-all tool that's easy enough to use for the "I just have this module I want to wrap up and publish" and flexible enough to also build NumPy from source. Let alone one that also handles the "I don't want to make packages, I just want to install them" use case. When you start rattling off more and more exotic tools for Python, really what you're doing is diving off into the deep end of specialized things for people who *make* packages, and the variation there is a reflection of how varied the use cases for Python can be. It's also utterly irrelevant to the vast majority of Python programmers, who will just `pip install` whatever the resulting package is.
In 7 years of Python programming, I have almost never been in a use-case that would have been better written with this assignement expression :/ I would be really happy to see more work on optimizing python performance by some order of magnitude, like the Ruby team is doing :) 
This might not be strictly relevant, but I'm still cross that `reduce` was removed. Let me explain. &gt; Most Python users are unfamiliar with Lisp or Scheme, so the name is confusing [...] [Source](https://www.artima.com/weblogs/viewpost.jsp?thread=98196) I'm not against this operator (although I'm not sure about `:=`, I think `as` might be better), but I think it would be a new direction for Python, and we might have to reconsider some past decisions. This new operator seems to be an adaption of Lisp syntax ([here's an example](https://pastebin.com/SweMyLRH)), so it would stand to reason that other features weren't removed (moved to the standard library, so that you feel guilty every time you use it), because they originated from Lisp. Furthermore, `listcomp` is starting to look like `loop` from Lisp by the day. The reason why I like Python is that it provides a minimal powerful toolset, that you can use to to virtually anything. I think that powerful abstractions are a good thing, but they mustn't break the balance of the language (that's also the reason why i prefer `as`, because that's already in use and would't add to the syntax). In conclusion: I'm hurt, and would like `reduce` back, making questionable connections to have my way.
There are cases in which `pathlib` is more intuitive. E.g. checking the existence of a directory and creating it if need-be. Doing this with `os` you need a `try/except` approach: import os try: os.makedirs(path) except OSError: if not os.path.isdir(path): raise And using `pathlib`: import pathlib pathlib.Path('/my/directory').mkdir(parents=True, exist_ok=True) See [this](https://stackoverflow.com/a/14364249) Stackoverflow answer for details.
Oh, I wish I hadn't seen this. Not only is this ugly and unnecessary, van Rossum's attitude in his mails seems condescending and disrespectful. Give it another 10 years and it will be time for a new, clear and straightforward programming language which isn't a complex mess.
Thanks, your talk was great, and It answered my question. It appears that cffi is indeed faster at wrapping an existing so/dll in ABI mode. That's pretty nice. 
Does this swiftapply work with more than one column? From the examples, it looks like it only works one column from a dataframe as the input function. It is also useful to pass in the whole row or 2 or more columns.
&gt;You might as well ask why there are so many modules in the Python standard library. That has nothing to do with what i am saying. &gt;The majority of Python programmers will probably never actually write and build a distributable Python package Ok, now we are getting at it. So in professional python you are never ever supposed to produce a real deliverable? What happens in you need to deploy to a customers' machine, you git clone from there? What if your git repo is in closed door in a company's hosted gitlab? Do you also delete the git history and git credentials from the customer, or you give them the ability to pull at will? If you build a Docker container, you leave the credentials there as well? All i'm saying is that, notwithstanding the multitude and redundancy of tooling for packaging, all this stuff in python still looks not very reliable, not very... enterprisey 
Important caveat: if you use NumPy for your images (you should), then NumPy releases the GIL. NumPy operations also don't mutate the array in place, making them stateless and therefore thread safe. 
Writing a script that pulls job listings from Indeed for certain locations and then tries to find employer addresses (currently via BBB API and Ohio SoS site)
Is the extra memory usage only related to the size of the code, or also linear to the the size of the number of objects?
Guido: &gt; It was meant dismissive. With Chris, I am tired of every core dev starting their own thread about how PEP 572 threatens readability or doesn't reach the bar for new syntax (etc.). I feel like so many core devs, in addition to many others, coming out in opposition to this PEP should be a big red flag. 
I'm guessing that it does support type annotations except for in variable declarations with the new syntax. Or did you mean you hope that it exploits type annotations for speed purposes? My work has code bases which require 3.4 and they have type hints. 
[removed]
And here is the second command's result: https://hastebin.com/gabibuquro.sql
Sounds like you'd want to use [Tox](http://tox.readthedocs.io/en/latest/)
Ah, maybe that was the problem. I just want syntactial support for variable annotations. The regular JIT is good enough without my dumb ass messing it up with potentially incorrect annotations.
oooh, I didn't know about that one
Of course that could be fixed by simply improving on os.makedirs... give it a keyword arguments like "exists_ok". You don't need an entirely new library and API when the core language allows for optional arguments.
I would write your first example as: while True: x = parse(fh.read_line()) if x == ...: break # do stuff Which reads in mostly the same order as the revised version, but the read and condition are spread across 4 simple lines rather than one dense one. This is the first I've seen of this proposal so I don't yet know which version I prefer.
Inflation. From the 1990s when Python first came out to today we have seen prices rise almost 90%. $1 in 1990 would be worth $1.90 today. So naturally one way to do things in 1990 is worth close to two ways today.
from the main post: I want to solve my other question [here](https://stackoverflow.com/questions/50037208/python-integration-using-both-scipy-and-sympy) so I need sympy to return an error whenever there is no analytical/symbolic solution for and integral. For example if I try : from sympy import * init_printing(use_unicode=False, wrap_line=False, no_global=True) x = Symbol('x') integrate(1/cos(x**2), x) It just [pretty] prints the integral itself without solving and/or giving an error about not being able to solve it! 
yes, you can make a post with requests-html (https://html.python-requests.org/)
- You are looking at `sympy.lambdify` that do exactly that. - You can check `you_expr.atoms(sp.Integral)`. If it's a 0 length set, the integral have been evaluated. Because `bool(set())` is False, you can use it as a test directly. - Do not use `evalf()`, use `lambdify` with the numpy module, so you will have a function that will have a similar behavior that `scipy.integrate.quad`.
Ah, `using namespace std` vs `std::cout` in python form. It's a bad idea to pollute your namespace if you can avoid it.
Lol all I did was remove the section of the while loop (numList[j] &gt; temp2) and it fixed everything
I struggle with this all the time, since I work on managed machines that don’t allow me the correct access to do a system wide install of anaconda. Install into a user, launch everything front the anaconda launcher. It’s just about the only way to get it to work consistently. I would also second the opinion of using anacondas virtual environments since, if you need redundancies, you can just “pip install xyz” and it doesn’t affect your machine install of python. If you don’t, you may run into some odd edge cases where some packages can’t be found correctly. 
Anything intermediate or advanced? 
Does it include hentai?
Thanks! I figured it out before I looked at this, but the only issue was in the while loop of the sort. The (numList[y] &gt; temp2) was causing the issue.
Look also Selenium : https://www.seleniumhq.org/ .
```shutil.rmtree(pathlib.Path('foo'))``` works fine for me.
Yes, I put the result here. https://www.reddit.com/r/Python/comments/8evjdo/ubuntu_1404_pip_not_working_because_python2_and/dy02pb6/ ----------- I probably added an extra PPA, and if I look quickly I found: https://launchpad.net/~jonathonf/+archive/ubuntu/python-3.6 http://ppa.launchpad.net/jonathonf/python-3.6/ubuntu trusty main ----------- Lastest command: https://hastebin.com/eyikoyanas.scala (it's in french sorry)
As I think you understand, you can't get good at programming by merely reading books. *You need to actually program*. What to program? That's up to you! I suggest what I always suggest - go write a reddit connector: * Get the latest python 3 * get requests * get beautifulsoup * get PRAWN - the python reddit api Here's your assignment: Crawl your own comments 1. Pick out the top rated top level comment in each topic you commented in 2. Make a distribution (histogram) of the word count of each top rated comment 3. This will tell you exactly how many words your comments should have to generate the most sweet karma in the topics you personally care about. Extra Credit: Pick out the top rated reply to each top rated comment and do the same. This will tell you how many words you should reply to a comment with to get the most sweet sweet karma. Explain why the distributions look different. 
Do a project and then keep adding features and doing more projects. That is the only way. Google for "programming project ideas", there's tons of lists out there. probably more appropriate for r/learnpython?
Ok wow now that's a project I can get behind. Not the slightest idea how or where to start but I'll try. Thanks!
I wasn't aware that r/learnpython existed, would be more appropriate there, that's true
Selenium is a good tool to have in your web-scraping toolbelt, but just for those who are not aware: You're often better off figuring out the web requests the page is doing and emulating those with the requests module rather than automating the whole page with selenium, if only because selenium + web browser is *heavy and slow*.
Those both feel super clunky to me, especially the iter one, which I always forget about but is super useful. while true is an option, but I don't like it because it moves the stop condition. This proposal is similar to Rust's `while let ...` which I really enjoy. If python had destructuring I think this proposal would go over better. 
fs
I agree, but easy enough for a hobby-programer like me to figure it out. 
I have this deep fear of leaving a $10/hr GPU instance running for a few days. I've mostly used this with a single instance and a Jupyter Lab docker container running. It creates a handy way to spin a remote machine with different/more capabilities than you have locally. 
Well, what’s the alternative if you're looking for a specific directory? At some point you have to specify the name of the directory, and a string is a perfectly reasonable way to do that. By "paths aren't strings" they're saying paths aren't _stored_ as strings, but that doesn't mean strings have no place in dealing with paths. `pathlib` can't stop you from doing the wrong thing in every situation. If you want `~/foo/bar` you shouldn’t be doing this in the first place: ``` Path().home() / "foo/bar" ``` You're using `/` to join one part of the path and not the other, which is awkward. The `pathlib` way would be to use `/` for everything: ``` Path().home() / "foo" / "bar" ```
It's all about tracing the forms, Dev Tool in your browser will do. With requests you emulate browser behaviour, that's it. You can start with something like this. import requests from pprint import pprint # fake user agent so our scraper will look like a human :D UA = 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36' url = 'http://powertochoose.org/en-us/service/v1/' with requests.session() as client: client.headers.update({'user-agent': UA}) client.get('http://powertochoose.org/') params = { 'include_details': False, 'language': 0, 'method': 'TduCompaniesByZip', 'zip_code': '76872' } response = client.post(url, data=params) print(response.text) 
&gt; Even though I get what you are getting at, how is this any different from asking "Is just learning how to use an unconditional goto safely, like we all did decades ago, "too hard" for modern programmers?" it is, because using threads with structured programming in order to achieve concurrency is much easier than programming without structures and using GOTO in order to achieve structure. The reason so many people want to use async is because they claim "threads are too hard". If you go off and realize that async programming is just as hard if not harder, then you are no longer achieving the goal of being "easier than threads". You are wasting your time. Not to mention that threading is of more general use than non-blocking IO for concurrency as it can, on platforms *other* than cPython which don't have a GIL, achieve CPU parallelism with multiple cores, whereas using non-blocking IO alone does not imply this. 
True! And I don't think this was the reason pathlib came to be.
You know how ads work, right?
This is sick. I've wanted to do something like this for awhile and never got around to it. I wanted to take a poetry class in college and hand in some computer generated poems
It's mostly related to the size of the code, though there's also a bit of overhead due to garbage collection, if the code allocates and deallocates a lot. OTOH, data representation is often more compact, e.g. a large list of floats only needs 8 bytes per item.
A friend of mine is an amazing guitar player. I was once hanging out with him when a mutual friend asked him how to be a great guitarist. This is what he said: Start 20 years ago. Pick up a guitar every day, and don't set it down until you've learned something new. If you can't go back in time, your 20 years starts today. Or not. Your choice. Likewise, I've watched a lot of basketball, but that doesn't seem to be improving my 3-pointer. I've been teaching program for at least as long as my friend has been playing guitar, and I can only tell you this is a craft. If you put some effort into it, you'll learn how to do it, but if you want to get good at it, you're going to need to put in the effort. I'm not so convinced that you need to pick a project you want to solve, unless you're willing to see that as a long-term goal. It's really hard for beginners to anticipate the scope of a project, so picking real-world projects often involves choosing a very complex set of skills that will lead to a lot of failure before much success. This may be what you're seeing now. Don't worry about being better than other programmers. Become better than the programmer you were yesterday. 
That comment that you linked doesn't exist for me. Perhaps it was caught in the spam filter or something. I'm not sure I need it, since the other info kind of covers it. It looks like you also have or had the [deadsnakes](https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa) ppa installed and there are still remnants of it on your system. In order to use the versions from your ppa you would have to run the `python36` command. `python3` uses the python 3.4 install that comes with your system. Since it doesn't seem like you're actually using these python installs, I would strongly recommend removing them, as it's much less confusing to just use your system's python install anyway. Remove these ppas from your system and use your package manager to uninstall any package that contains `python` with two version numbers in its name (so remove things with `python2.7`, `python3.4`, `python3.5`, and `python3.6`, but not `python2`, `python3`, or just `python` on its own). The `ppa-purge` command may help you with this (you may have to install it). This should trim `/usr/lib/python*` down to two directories, which are both needed for your system. As for the stuff in `/usr/local/lib/python3.4`, I have no idea how that got there. But since apt doesn't seem to know about it, it's probably just safe to delete all the references to `python` under `/usr/local`. Doing this may remove some stuff that you previously relied on, but you ought to reinstall that properly afterwards with `pip install --user &lt;whatever&gt;`. If you get an error at any point then post it together with the command you ran and I will take a look at it.
&gt; wanted to do something like this for awhile and never got around to it same here.. one of those ideas..
[removed]
Actuaĺly, it was a joke but thanls anyway :D
If I can make a suggestion, start by focusing on just the requests portion of the project at first. How can you connect to reddit, make a request, and view the content of the response? How is the response formatted? Once you understand and have implemented basic requests, you can move on to deeper scraping by learning about beautifulsoup. Just don’t try to do everything at first. Work it out piece by piece.
Language simply do not have speeds, their implementations do. If you want to find out if one or the other is faster then benchmark them. Also, note that the speed of a program depends on a lot of external factors so the fact that in your benchmark you get that, let's say, "+=" is faster than "=" and "+", it does not mean that the result will be the same in some other program
I just got a red letter for no reason. I assume you just posted and I can't see it again.
Yeah, I only had time because my wife had foot surgery so I took time off work to look after our toddler and pythoned while the little one napped
Regarding your first example - we already have a beautiful idiom: while True: x = parse(fh.read_line()) if x == 'something': break Regarding 2nd one: filter/map should be retired over comprehension in general. 
Think of a virtual environment as nothing more than a folder where packages will be installed outside of your main install. This helps avoid cluttering up your base install and also allows you to run different versions of packages. Let’s say you are working on something that depends on superpackage v0.16 and version 0.17 will break your code. But your new project needs v0.17, you want to be able to use 0.17 also. So you can use a virtual env to install multiple versions. In pycharm you’ll need to choose the conda interpreter. What os are you running btw?
Ah, I should have put that in the README because I've forgotten! I'll have to look it up again when I'm not on mobile. It was just somewhere on google 
While so much CamelCase though? :O Pretty huge turn off - it's either an indication of an old project or something that isn't very pythonic.
I did some similar stuff as one of my grad school projects (was a databases project in library school). My project was much more basic though -- basically just a sentence map based on existing poems. That is, if you have the lines: For sale: baby shoes, never worn. I would note that "For" is a possible start word, and can be followed by "sale" which in turn can follow "For" and be followed by punctuation and/or the word "baby" and so on and so forth. As more words get more connections from different poems, it radically reshapes what can be generated based on the connections that you have mapped. Other elements like "this word can be followed by a line break" can also help give shape to the text generated. Was a really fun project, and definitely produced some interesting texts (some worth editing in their own right). Ultimately there was still a lot of curation based on the poems I originally mapped, so I could map different poems and end up with wildly different results.
one idea that could be added is parsing reddit comments for lines of the right lengths/syllables, seeing what happens when they mix together
cool to know
Something I would really like is to be able to get a list of valid filename characters for the given partition type (for instance ':' is valid on xfs but not on fat32).
There's probably a way to do the thing you're trying to do through pywin32.
Thankyou! that worked. much simpler then i thought. Like i said i am still new to coding, but now i know how to do this simple time.sleep() task.
I worked on a small data science project using Pandas and Matplotlib. https://github.com/PhantomInsights/mxn-performance I also finished my first wxPython app. https://github.com/PhantomInsights/forhirehelper
that looks at one user's comment what if you found the first line of a ballad from one user, another user somewhere has a line that matches and rhymes..
Haven't done much with Reddit in a while, is it not called PRAW? If not, what's the `N`?
sorry to bother you but there is actually a small problem with this and was wondering if you could help me out. it will play the function correctly every x seconds, however it does not update the data from the api. if im looking for the price a certain coin, it will only print out the price of that coin when i first run the script, it wont update it each time it is called. do you know how that can be fixed?
Astounding work PyPy team! The C-extension performance is a breakthrough! I am just amazed at your work. Has anyone compared the C-extension approach against Rubinius’ approach to see if there may be something of interest there?
This. It helps a lot to just go one step at a time. What does the program have to do first? Once that works, move to the next step. 
As a former English major and long time python fanboy, I must say that I absolutely LOVE this. Very awesome :3
fixed. thanks.
I don't think that's beautiful at all, the actual break condition is moved out of the while. It's practical though. Maybe I'm odd for liking this new syntax. 
I got both windows 10 and ubuntu but my python work is on the windows system.
This actually looks really interesting, I'm going to give it a shot :)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [AndydeCleyre/dotfiles/.../**.python.zshrc** (master → 61d306d)](https://github.com/AndydeCleyre/dotfiles/blob/61d306d311a40c1605651e2d164ab323e52dd200/.python.zshrc) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dy0q8vk.)
First thing: to avoid being overwhelmed by a project, go one step at a time and break it down into a large number of simple tasks. Second thing: learn about how computers and systems work. You may have more ideas for interesting projects once you know a little bit more tech in general. I didn't *really* start to get gud at Python until I learned about how networks work. After that I started learning about the internet, stuff like HTTP and requests and responses and sockets. You can work with those in any language, but since I really like Python, I came up with some ideas for network/internet related Python projects. My first "practical" program, which I wrote before I learned much about networks or how the internet works, was a tool for scanning websites and trying to find interesting looking pages. This project has kind of stayed with me over time though, and I've spent about 4 hours just today working on the later implementation. Hopefully I'll have a working release by tonight. All it did at the time was take a website, like webscantest.com, and pull names like 'images', 'scripts', 'files', 'admin', 'login', etc. out of a big text document and make them into URLs like webscantest.com/images, then request them and echo back everything it found. Then do the same thing for every valid response it got and so on until there was nothing left to do. The entire thing was probably less than 40 lines long and took me an evening or two to write. It was a good exercise at the time, but not a program that anybody would ever *actually* use, including me. Even though I had a use for that kind of tool when doing [CTFs](https://www.vulnhub.com/), there were much better options available. Once I learned about networking and the internet a bit more though, I decided to throw that code all out and start over, and build a better scanning tool that could actually have some use. Probably not to anybody else, but I thought using a tool I'd written myself for CTFs could at least give some bragging rights, if nothing else. So I made it a lot faster and gave it a handful of additional features and some command line options you could use to change how it worked. That version was maybe 100 lines long or so and took a few days of working in my spare time. It stayed more or less like that for a long time. After I learned even more about networks, I tried some other small projects like a simple proxy server in Python, my own shitty version of Netcat in Python, and maybe one or two other little scripts for once-offs. After that I didn't really do anything exciting with python for a bit and worked on some other things. After a little while longer, I decided that I wanted to throw out all the code for my scanner again, and turn it into a real *project* instead of just a practice program. So I set some specific goals that I wanted to accomplish with it, wrote down how I would accomplish those goals, and started from the top. This is the first program I've written in Python that I think I'll actually use for years to come. I've been working on it for several full days and it's really helped me appreciate the work that's gone into programs I use written by other people. It's currently well over 600 lines long all total. I could make it a lot shorter, but I wanted to write it at the lowest level possible. Not use anything you can't find in a default Python 3 installation and not use any libraries except where I absolutely needed them, to help keep the program as flexible and modifiable as possible. My point in telling you all that is that it's ok to write disposable programs. Even if today you're writing a worse version of somebody else's tool that already exists, in the future that practice could help you write a better version of somebody else's tool. Sometimes your disposable practice projects are just that, sometimes they become much more significant investments and turn into "real" projects. If you still can't come up with anything, take some time to learn more about computers and you'll eventually hit something that'll make you go "Huh. I bet I could write that." Then do.
This course is for beginners who want to learn python. who never code before. Please Watch full video for understand it clearly. if you don't understand anything from my video please write it in command section i will try my best for solve your problem. 📣Watch Our Channel For More Information or Commend us What you want to know
I feel your pain, I'm currently testing some machine learning models to predict users performance on some quizzes on our app. The first version I made 5 months ago and I have no idea on what I was doing last. Meanwhile the sales people are already telling customers some funcionalities, so I have a week to finish.. (I hate my past self and those crappy comments) 
I agree, except `sed 's/pipenv/pip-tools/'`.
Getting to the next level requires experience, and the best way to do that is too tackle a project. Start small and figure out a project to do, and work on that. Through the experience, instead of figuring out the broad questions, you'll get the specific ones (how do I manage logs? How do I terminate a TLS connection? Do I use an ORM or raw database queries?) When you work out a single project, you'll ask a thousand questions. Through that experience, then one becomes "good"
It is inflexible. I recommend using `pip-tools` and your own shell functions/aliases (or [mine](https://github.com/AndydeCleyre/dotfiles/blob/master/.python.zshrc)).
yup, i am very happy with my pip-tools workflow too :)
Self reply to add that even the "simple" options left out the new user unfriendliness that is virtualenvs. Every time I have to explain that to a front\-ender, I get confused looks.
The Risch Algorithm is only a "semi-algorithm" it cannot solve all problems because in one step it needs to determine if some expression f(x) is the zero function. It turns out this is undecideable (for most sets of elementary functions). So the Risch algorithm gives you an answer when it gives you an answer, but when it doesn't... you cannot conclude anything from that. You will need an Oracle for those.
On windows, open command prompt, then type 'pip install package_name' without the quotes. 
please consider the sidebar/rules: &gt; If you are about to ask a question, please consider r/learnpython or the learn python discord. 
Yes, there are many different sites. If there are concrete proposals, I'll be glad to hear it.
Thanks! How long did it take you to feel like you can confidently say that you are somewhat good at it?
Thank you for your answer, that gave me some great insight into your progress. Also vulnhub seems like a really cool website - it's about hacking practice right? Apart from that have you done anything with python regarding video games?
It's more in the idea stage but I want to make a flask based web app for privately communicating with people. Something that can run on any server, invite only via an email or code to setup login info. No encryption, but you could use gpg like you would with email. I had another idea too, having the site only accessible via an ssh\-tunnel, not open to the web. Give people an ssh key with no user permissions or access to the shell. I've done something similar to this with a note taking app.
I have no idea what any of that means unfortunately haha should maybe Google TLS, ORM and so on
I'd recommend [requests-html](https://github.com/kennethreitz/requests-html) over beautifulsoup.
And that's the idea! Skill in programming isn't linear. After some basics, it's not like you have to learn skill N, followed by N+1 and N+2. However, developing a *project* requires a developer to hone in on select skills to accomplish sub-goals within the project. Those minor goals can be linear. Similarly, skills around those goals can be linear too. For example, ORM stands for "Object Relational Mapping." When talking to a relational database (e.g., sqlite or mysql), you have tables and queries that you can do. The ORM creates objects around those tables and queries so that you don't have to write out the full query statements, but instead just access the data directly through objects. Those objects build the queries out and serve up the data for you. TLS stands for Transport Layer Security. You may have also heard of it's parent technology, SSL. This is the main technology around security of two computers talking to one another. So yes, Google those things! If you do something like build out a website in Django, you'll end up learning a bit about both.
Haha thought I'd missed some major release
found [this](https://github.com/first20hours/google-10000-english/blob/master/google-10000-english.txt) with the top 10000 a few days ago. You could just trim it down.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [first20hours/google-10000-english/.../**google-10000-english.txt** (master → a1ffd5e)](https://github.com/first20hours/google-10000-english/blob/a1ffd5ec94d73cbf470eb74c1c39fdcfa419a330/google-10000-english.txt) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dy0vgfk.)
That's lovely! Once you've generated your poem, could you perhaps run through and look for every occurrence of `a` and check that it's followed by a word starting with a consonant, otherwise change it to an `an`? Although you'd have to check that doing so doesn't compromise the rhyme scheme, so maybe only do that if it's not an `a` at the end of a line? :) Now that's got me thinking, this doesn't always work because `uniform`, `union`, `universe` and their `you` sounds... Oh bollocks, it's not just `u`s because now there's `Eucharist`...
To add some flavor to your post, OP needs to be using POST requests. The example op provided is (most likely) a GET Request. POSTs allow you to enter information in and send it to the website. The name of the post parameter can be viewed by inspecting the element. (Usually)
Oh, I love that and was not aware that I did not reach 1.0 yet. Was always stable and performant enough, imho. Surprised not to see the announcement done by Armin Ronacher. Has he taken a step back lately?
delete 
Thanks for the insight, I definitely still have a lot to learn!
Wow, this is it! This is my first "I'm so opposed to this with every fibre of my being" moment!!! I don't think one can _understate_ how significantly beneficial Python's easy-to-read syntax really is. For both new programmers, and proficient ones. I am familiar with many languages, but I always return to Python because of how expressive and legible it is - I enjoy writing and reading it. This proposal adds another dimension to expressions that makes them far harder to parse, in addition to adding "another way" to assign, that doesn't respect Python's conventional assignment target. Please, someone, stop this madness!
&gt;That fillest England with thy triumphs' fame &gt; &gt;I long for a repose that ever is the same. &gt; &gt;Bosom'd high in tufted trees, &gt; &gt;For so to interpose a little ease, &gt; &gt;Tell how by love she purchased blame. Is this a generated poem? I honestly can't tell if its real or generated. It makes sense, in a way that only poetry does!
1 - r/learningpython is where you are looking for help. Please read sidebars of subreddits to see what is and isn't allowed there. This is a subreddit for discussing Python, not teaching Python. 2 - It is really hard to figure out what you code is trying to do without seeing more of it. I really have no clue why you are returning the opposite of the turn, etc. 
Wow, that's nice, where I can found Pandas?
That's python 3.7 though right? I'm pretty sure it doesn't work in shutil in python &lt;=3.6.
I don't agree with your reasoning about beginners. I have many peers who have learned to program in Python for their data analysis, or computer modelling. One of the most common responses is how much more understandable Python is cf. MATLAB or C++. I have been excited by many of the recent additions to Python, including the context manager API and async keywords, but I find myself very opposed to this PEP. Python is highly readable as pseudo code because it's clean and concise, but not to the point of illegibility. All the examples given so far are rarely encountered in practice, and I don't think adding this new dimension to Python is worth solving these simply cases. More implicit scoping to understand, more complicated reasoning about loop behaviour, etc... The whole proposal doesn't seem justified enough to me. 
I've never been a full\-time programmer. Luckily, I get to write a fair amount of Python to automate digital forensics and incident response related tasks at my full\-time job. I'd say it took me around 5 years of on and off experience to feel fully comfortable.
Feel free to hit me up if you'd like some resources. The important thing when learning about hacking is not to get caught in the trap of not understanding what you're doing. My rule of thumb is that if I'm going to use a tool somebody else wrote for hacking, I need to understand what it's doing first.
I'm glad they are. I'm tired of always casting paths to string.
Congratulations to the Flask team. I just fired up a new flask app today, what a coincidence!
I remember when I first found it how impressed I was with it's simplicity and low overhead to get the job done. One of my favorite convenience packages
This happens because the very first `if` clause doesn’t fire, so your function just returns `None` by default. This means that `turn` becomes equal to `None`, and then you use that same variable once again in a call to your function (I bet you’re doing this in a loop), so that you actually pass `None` instead of a string. 
People create amazing stuff because they're motivated and have a goal in mind. What motivates you to want to learn to program in the first place? Game development? If you've never written a game or other significant piece of software before, your first project is not going to be finishing that science-based dragon MMO you've been dreaming of. So maybe start with smaller goals, first. There are some good starter project links all through this thread, or you can try and find a problem that interests you that can be solved through code. The key is to get in and get started, even if it is a seemingly "easy" problem. Even a simple project can snowball into a great learning experience. One of my early "learn to code" projects was to model a relatively [simple statistical problem](https://en.wikipedia.org/wiki/Coupon_collector%27s_problem), for example. It ended up being one of the most engaging things I'd worked on, and I learned a ton. Good luck. :)
The lines are from classic poems, the arrangement is chosen by the program.
its unfortunate that \(afaik\) `as` makes assignments and not expressions. E.g. why the following is invalid syntax with ( a as b, c as d, ): I'm not sure if that can realistically be changed or not, but i want to say it should at least be consistent across the different uses of the keyword
Thanks again, will do!
Right, but how can you claim that a single operator like this suddenly makes Python less readable in comparison to MATLAB or C++? For it to truly be significant the language would need to nearly conform to be the a carbon copy of either. But *why*? How does a new feature, that you don't have to use, affect you? They aren't changing syntax, they are adding it. If your team leader wants to do so, well too bad, you're working for him. I don't see how scoping becomes any more implicit, maybe I'm just missing something. But to say that these situations don't come up in practice is close minded. There are many things that I have worked on (mostly related to doing things to user input based on regex/other patterns, or logic based off lengths of data structures) that I find myself creating a variable for for some control flow structure that aren't ever used in the else block. If assignment expressions are scoped the way I explained, then at large scales this quite significantly increases performance for these applications, due to the (relatively) high cost in both cpu time and memory, storing the variable, just to do nothing with it at all x% of the time.
This post is so low effort.. it's a good indicator that your attempts at python have also been low effort You should buy a beginner's course on Udemy and finish the course 
Yeah games seem quite interesting to me but I'm trying not to limit myself to do just that (if that makes any sense). I thought I was already taking small steps but I might want to take even smaller ones.
&gt; The Pallets team is pleased to release Flask 1.0 ...? First line in the article.
I'm seeing several people in the commit log: https://github.com/pallets/flask/commits/master
Ah, sorry then. My bad.
Yeah I updated the original post. It seems to have changed a lot from the last time I checked.
Not exactly a step back. More like a spreading of wings... ? Not sure if that's a great analogy, hah. But anyhow, this might shed a bit of light, from April 1, 2016: &gt; 6 Years Ago Flask appeared. Today it finally got a Github organization. Welcome to the Pallets Project. http://palletsproject.com/blog/hello/ (https://twitter.com/mitsuhiko/status/715870150856216576) And from https://www.palletsprojects.com/blog/hello/: &gt; So what's changing now? Today we launch the Pallets Projects. What is it? Primarily it's a GitHub organization which will be the home of Flask and all the associated projects. It will be a new home for those libraries and the first step to give the community more impact on the development of Flask and all libraries. In addition there will be a new release of Flask very soon after a thorough check that we do not break anything. &gt; The people behind the Pallets Projects are me, Markus Unterwaditzer, David Lord and Adrian Mönnich with the organization being open for newcomers to help and drive the projects forward. &gt; We will spend the next few weeks adding as much organizational information on the project's website to ensure that what often currently only exists in my head is brought down to text. &gt; I'm amazed how many people use and love Flask and my libraries and I hope that this organization will be a good step towards making this scale past me. It's humbling how big all of this became.
I don't really buy into the "framework" mindset, but I really love flask. I really just use it to handle the routes, return codes and templates (at least so far) but even just that is plenty.
To be honest, yes, a lot of real-world deployments are via git clone. Even in enterprisey enterprises that enterprise their enterprisey enterpriseness. And regardless of the vaguely-insulting incredulousness you're deploying here, yes, most Python programmers will never in their careers use Python's packaging tools to produce a packaged distribution.
See my other replies. As to virtual environments: `pipenv` manages them automagically for you without you ever needing to know what they are or how to manage them manually. But they're not too difficult to explain, and honestly I'd have an easier time explaining to a front-end dev (who's probably used to a far more complex toolchain with much more churn, and who will understand the relevance of some of the problems a virtualenv solves).
These are kind of beautiful, they are definitely fun to read and listen to in my head.
love love love that they overhauled the logging system, just spent a week at work painstakingly setting up logging in a Flask app we use. older versions were unclear in how the app.logger was configured; nice to see that they've cleaned that up
Wait, that's it? Well damn I'm gonna use that in my next project!
Check out the website you're on!
Oh snap is reddit built on flask? I mean, what is the advantage of using python instead of traditional javascript?
Flask is a web framework like Django. Instagram uses (used?) Python/Django. https://instagram-engineering.com/web-service-efficiency-at-instagram-with-python-4976d078e366
Flask. Or Django. PyQT is not HTML/CSS/Javascript.
Python is used for generating the dynamic content. The templates are still javascript, HTML, case, whatever (as that is what browsers read).
reddit uses *some* flask, but not for the main site. i don't know offhand what they use (or if they built their own thing), but reddit's been around since before flask so definitely not that javascript isn't 'traditional' for building backends. at least, not in 2005. you'd be more likely to see PHP, ASP.net, or, god forbid, perl
If you pass it a generator, it won't give you a nice progress bar cause it won't know many many iterations it'll go through. However, if you happen to know how many there will be, you can pass the `total` parameter to force a specific amount.
They still do. Last year's Pycon keynotes included one from them talking about converting from Python 2 to 3 in the middle of the day and no one noticed.
Damnit. I just got it working the way I need it. Do I need to rejigger it now?
Look into the following statements if, elif and else
And ask further questions in /r/learnpython.
Also /r/learnpython
I wrote a small script that will check my USPS snail mail and post the resulting mail in a slack channel! Check it out ! http://opsandautomation.com/2018/04/26/checking-your-snail-mail-with-python-docker-and-slack-part-1/
It was Armin Ronacher in the past, he transferred control to the Pallets team when he moved on to other things.
You should be able to do this with pexpect. &gt; Pexpect is a pure Python module for spawning child applications; controlling them; and responding to expected patterns in their output. Pexpect works like Don Libes’ Expect. Pexpect allows your script to spawn a child application and control it as if a human were typing commands. https://github.com/pexpect/pexpect
Leetcode is a good resource for programming challenges, I try to do a couple every week if things are slow. 
If you want to create a web-based frontend, you're going to have to make use of HTML/CSS/JavaScript for the client side at some level. You won't be able to get the same experience as PyQT for web development.
yeah, I agree that it seems they are adding a lot of new stuff just for the sake of adding new stuff recently. I kind of get why some people might find these type annotations helpful, but I actually found that things like the matrix multiplication operator (@) that no one uses, pathlib, f-strings, these are all things that were not really necessary imho. Ok, I am not strictly against adding new things like that, but then please also get rid of the old stuff. Otherwise it's not only confusing for beginners, but also messy and against the zen of python
I use the matrix multiplication operator. I know Python is general purpose, but it's great for those of us that do linear algebra.
For alternate to html, I still use the olde extjs-4.1+ gpl which gives a "desktopy" feel with flask/pylons/bottle ajax backend (which also works with my pyqt apps) 
when I use python, it involves matrix multiplication and dot products 95% of the time. I adopted Python/NumPy as a replacement for Matlab in ~2010. I still use NumPy's .dot operator instead of @'s, but maybe I am oldschool. (I am actually not sure if @ in NumPy does np.dot or np.matmul). 
I really don't understand how this will be accepted because "it's not their job to prevent ugly code", but `break 2` isn't accepted "because it's ugly code"
Most of programming is actually taking something large and complex, then breaking it down into manageable pieces
I agree. I use Flask and like it. However, I think architecting in a Clean Architecture style and using Flask as a service to it makes more sense to me. Programmers get sucked into a framework or ORM and get locked in. 
Wow this is so cool! Nice job OP :)
&gt; Last year's Pycon keynotes included one from them talking about converting from Python 2 to 3 in the middle of the day and no one noticed. Well, let's hedge that a bit. They did a structured rollout. First was IG/FB employees, then they selected 1% of the userbase, and increasing size of userbase to push to the new codebase &amp; Python 3.
This looks good. I completely forgot about sencha. Btw, so if I want to build web service how do you think I should use sencha? can i use it with flask? I'm a beginner so I might need help figure out the required stack for sencha.
A great starting out task is to implement simple sorting algorithms. Especially try to explore zip, map and the itertools module too as these are good routes into "pythonic" thinking rather than just general programming. 
The issue is that at current time, none of those semantics overlap. It's impossible to somehow simultaneously use an 'import-as' and a 'with-as' within the same statement, for example. This means that despite how the semantics differ based on context, there actually isn't any conflict -- there's zero ambiguity in meaning at any point. Using 'as' to introduce a binding *would* introduce this ambiguity though: if you can use it anywhere you can use an expression, that means you could use 'binding-as' within any of the above four contexts (possibly with the exception of import-as). I feel this introduction of ambiguity would make the status quo distinctly worse.
A good task is learning itertools, map and zip. A nice little test project is creating an app that uses tweepy to read recent tweets with a certain hashtag from Twitter. This will help you learn requests and api calls. Plus, it's cool 😎. 
Je suis sur le point d'aller dormir, alors je suis désolé, je ne peux pas vérifier cela pour vous. jouer avec les exemples ici. https://stackoverflow.com/questions/12775250/how-to-download-a-text-file-or-some-objects-from-webpage-using-python
 **Q&amp;A:** Is this free / open-source? * Yep! You can checkout my github repos: [AREPL](https://github.com/Almenon/AREPL) | [AREPL-vscode](https://github.com/Almenon/AREPL-vscode) | [AREPL-backend](https://github.com/Almenon/AREPL-backend) Is there a VSCode extension? * [Yes](https://marketplace.visualstudio.com/items?itemName=almenon.arepl). You can also try out [wolf](https://github.com/Duroktar/Wolf), which is similar. Is there a Atom / Pycharm / Eclipse / Emacs extension? * No, the closest alternative would be [live-py-plugin](https://github.com/donkirkby/live-py-plugin) for Pycharm. But if you want one let me know! Can you program X in it? * AREPL supports most python code. The answer is probably yes. Real-time evaluation sounds dangerous - what if the program executes too early? * Code with side-effects like file writing is not reccomended. In the AREPL desktop app auto-bracket complete is disabled so the program won't compile until you have the final ending bracket. In the VSCode extension you can turn on execute on save for on-demand execution. Or increase the debounce delay to give you more time to type. How fast is it? * Seems pretty fast from my testing. Try it out and let me know. Other Questions: * Feel free to ask! 
100%. 
An aside: &gt; The `pathlib` way would be to use `/` for everything: &gt;`Path().home() / "foo" / "bar"` Yes it would be really nice to be able to do this, but what you typed will error because the `"foo" / "bar"` operation will execute first, and `/` is not a defined operator for strings. This means you have to do: `(Path().home() / "foo") / "bar"` which is hard enough to read to not be useful. I find it inconvenient in my everyday usage of `pathlib`/`path.py` that `pathlib.Path` doesn't inherit from `str`.
Side comment: If you are having to launch everything from the anaconda launcher then the anaconda version of python probably isn't on your PATH environment variable correctly. You often have to run `source activate my_environment` or something similar, which will add anaconda's python to your PATH and make it accessible by just typing `python` on the command line. You can also permanently modify your PATH so you don't have to run `source activate my_environment` every time. Also, whenever you install packages in a conda environment I've found that it's good practice to always try `conda install ...` and if it fails then use `pip install ...`.
I would usually do that like this: ``` if not os.path.exists(path): os.makedirs(path) ```
These libraries can be the right solution for you: - Remi https://github.com/dddomodossola/remi - Flexx https://github.com/flexxui/flexx With these libraries you csn make web gui without using CSS JS HTML. Plus, remi has a graphicsl editor, and an hidden integrated webseever.
This is really like asking "on the twentieth turn in a chess game, do you move the knight or the rook?". I don't believe there's a useful answer to your question. If you are asked to design a class then, probably, designing a class would be a good answer, but then you know, some expect you to be a captain Kirk and to do something else instead...
I tried numerous times to develop games, first with unity &amp; c#, then with Python &amp; Pygame. Really basic 2D jump and run was what I was going for at the time but it seemed to be too much already. After that I've been reading Al Sweigarts books just trying to do his challenges (not done with that yet). I'll let you know if/how I get back to it!
This is excellent. Begs to be read aloud.
git gud
lol
I think following a tutorial might be a good start. Usually you start a virtual environment and install the packages you need with "pip install...".
Because Guido's argumentation is very flexible, depending on what he personally likes and what he doesn't like.
It's important that I substantiate my argument, I agree! I think the first point is that, beginners often read more code than they write - to build a mental picture of how the language works, and to build their solution from existing parts. Whether this is a good means of learning, or not, it's quite commonplace (and I learned using such a method). If this PEP passes, you will find people use the syntax. And it may well end up being disproportionately used in the early stages because of "new feature" semantics. Here is an extract from the Wikipedia A* search function reconstruct_path(cameFrom, current) total_path := [current] while current in cameFrom.Keys: current := cameFrom[current] total_path.append(current) return total_path In Python 3.7, that looks like this: def reconstruct_path(cameFrom, current): total_path = [current] while current in cameFrom.keys(): current = cameFrom[current] total_path.append(current) return total_path (of course it's not entirely Pythonic), but the point is - the pseudo code is designed to be semantically readable, and the Python code is _very_ similar However with PEP572, now, the beginner will encounter both := assignments, and = assignments. When to use which one? Now they need to learn the edge cases / semantic differences between expression and statement _explicitly_, rather than picking this up as they go. I am not making this argument because I think that this is they best way to learn a programming language, I'm simply arguing that there is more cognitive overhead when unfamiliar with the language, in order to use the appropriate feature. In terms of implementation, it's especially odd that the current proposal (AFAICT) only binds to a name, rather than an assignment target. This feels very wrong, _despite_ the fact that I can understand why it is suggested. I feel like the Python3 series in particular has been making syntax more uniform, so that there aren't quirks and edge cases of "this only works in this context" (besides `async`, of course), which is one of the things that makes Python so expressive. In terms of scoping, it's simply the case that with this PEP assignment can now happen inside of expressions - and so one of the most fundamental benefits of expressions being effectively immutable in terms of local names is lost. IIRC the PEP argues that these names are scoped to the expression in question, unless it's previously declared. Yes, this already happens with iterator / list comps, but again, that's one too many cases, perhaps. I'm not sure that we can make the performance argument at this stage, because in whatever capacity the variable is used, because an assignment in Python doesn't directly translate to a memory allocation as in C. This statement is a little hand wavy, but I'm ultimately getting at the fact that micro-optimisations don't translate well because certain operations don't directly translate to their C equivalents. On to your point about prevalence, I don't think that these situations do occur all that often. I definitely agree that regex is the prime candidate for this kind of syntax. However, in the examples given (matching 3+ regexes), I would use a loop for simplicity anyway. When it comes to assigning to a result that is only used in the conditional block, this is certainly a case that benefits from the PEP. 
Are extensions like flask-login, flask real alchemy etc still compatible with version 1.0? Also, is the Flask mega tutorial material still relevant with this version? Is version 1.0 backwards compatible with the previous version?
It seems people rave on about this, but as a total noob, I wish I knew how to implement this...but the tutorial is terrible. It's pretty much designed for pro's, not someone looking to get into learning Flask.
Try to use Facebook API for your project. It will give you control over news feed.
Are the data in a database of some sort?it should be easy to do if it is. Of course you need to know a little DB entity relationship to make it work. Since your work is pretty particular so you'll have to invent something. Python supports printing automatically so that post is covered. 
Selenium is definetly overused in my opinion. In many cases, using request works better and much faster.
You probably meant ***DEFINITELY*** -not *'definetly'* --------------------------------------- ^^^Beep *^^boop. ^^^I ^^^am ^^a* ^^bot ^^whose ^^^mission ^^is ^^to ^^^correct ^^your ^^^spelling. ^^This ^^^action ^^was ^^^performed ^^automatically. ^^Contact ^^^me ^^^if ^^I ^^^made ^^^A ^^mistake ^^or ^^^just ^^downvote ^^^^^^please ^^^^^don't
It is! We use booking software to maintain all our bookings, which can generate reports that can spit out names, locations, tours, travel dates and all the rest... the only annoying thing is that this software is managed remotely, and the reports are hard-coded so I'm unable to create custom SQL queries to get specific results. Would you say my current theory on how to work it out would be best then? Currently the manual process is: - See that booking needs their pre-departure documents - Print out cover letter (needs custom name &amp; tour operator name) - Print out check-in process document (if any applicable airline) - Print out clients unique itinerary (exported via booking software) - Print any rail tickets (if applicable) - Print pre-departure info packs from the tour operator (different for every tour / location) Ideally this process would eliminate the need for me to check each booking manually for airlines (if any), rail tickets (if any), manually typing the client names in for the cover letter... and to also save me the time manually printing these documents as well.
I got locked out of my LinkedIn account twice because I was too efficient browsing profiles. I tried to tell support that I wasn't using automation and that I could even send them a video of me doing it... But no joy. A paradox, isn't it, their whole system is automation, but we're not allowed to use it back.
&gt; what is the advantage of using python instead of traditional javascript? Well, besides that javascript on the backend wasn't a thing until node, some of us prefer to use as little JS as possible.
This gentleman, [Miguel Grinberg](https://learn.miguelgrinberg.com) , has a cracking flask tutorial, I am working my way through it myself.
It’s for people who don’t know how to use FrontPage
It is, I coded this http://deepblueai.pythonanywhere.com. this "web" page, has a mysql database hosted on pythonanywhere, a python script(Also hosted on python in anywhere) call the database, create a dataframe and then perform some pure python operations, then uses dash to create the interactive plot for example. Dash is basically a library for creating javascript code from pure python, or at least,this is how it feels to me, I am not an expert, in fact, I am a very amateur coder XD. One more thing, as way testing the html iframe tag, I created this http://hallalo.net/trade using worldpress, if you go to "dashboard" you would see the python app, hosted on pythonanywhere. It is a lot of fun by the way!
Sounds like a spreadsheet is a great start! Just start coding with that as your "database". If you do come across a better way to pull the data, your core functionality (writing names on documents, choosing which documents, etc) should be the same. The only difference being the method that reads the information.
Thanks a lot for the reply and the examples! I will check them out later.
&gt; The development server is multi-threaded by default to handle concurrent requests during development Not bad. Congrats to the flask contributors! Great project!
That's a great point actually! I think the hardest thing I'm going to run into is the data exportation methods... but once I've got that nailed out, you're right in that the rest won't change! Thanks for the response :)
Yes, unless you import them from `flask.ext` in which case you'll need to import them from their own package instead. Yes. Mostly. 
&gt; What are your thoughts on this, fellow Pythonistas? :( 
This looks really fun, thanks for sharing.
This is really useful and easy to use. Thank you for sharing.
It would be interesting to see how numba handles this. The loops are fairly simple and numba should be able to compile this down with little effort. 
Nice. Yeah good luck. Seems like you have a plan!
I imagine it'll give the same performance as the other compiled ones. But if you can write up a quick example, you could contribute it to the repo, or just send me the code and I'll add it myself. I also plan to add raw C or C++ code, seeing as I have f2py in there already.
 Huh? Python 3.6.2 &gt;&gt;&gt; from pathlib import Path &gt;&gt;&gt; Path.('/') / 'etc' / 'bin' PosixPath('/etc/bin')
Thanks, I'm just glad to hear this kind of thing is possible :) can't wait to be rid of stuffing these damn envelopes hahaha
Maybe it is a little basic but remember this could be a young kid trying to find out more, we are here to welcome anyone to the python ecosystem. If you judge someone before they even get their foot in the door then theres a good chance they will give up on Python forever for associating it with hoity toity keyboard warriors like you. 
Thanks, shame it's pretty expensive :( will put this one on the "to do" list, though
Three months later... &lt;gets pink slip&gt; Shit! 
You can do this depending on the file format the models are exported to. If they're in any ASCII based format such as obj, collada etc it's easy to read and modify them with just standard python libraries. If you are dealing with open binary formats like alembic or usd , you can use their respective python APIs to modify their contents. If you're dealing with a closed binary format like fbx, you might be able to do it but you'd have to reverse engineer the format. Blender have done that so you might be able to grab their source for it. Anyway, is it possible? Yes. But how easy it is to do depends on the format of your model. 
You can print text with the `turtle` module.
perfect choice! now, I am using it :\) thank you
Is this a question, a statement or just a link to an article which you've written? Take a look at the naming and formatting conventions. Python's OOP implementation is miles away from JS'. Everybody knows that the `class` keyword in JavaScript is just syntax sugar OOP in JS is a joke.
I have production websites that get hundreds of thousands of unique visitors per month and I’m not even using 1.0? *shudders*
AMD support is being worked on: https://github.com/pytorch/pytorch/pull/6625
I'll take a look into this, thanks! 
That's so cool! I've been using the basic one in notebooks to keep track of long operations, I'll definitely switch to its neater-looking sibling!
I had a look into this, got passed the opening test but then was hit with something that made absolute 0 sense haha, but thanks for the response! 
Unfortunately, I am not in school anymore, but I will look into creating these anyway :D Thanks!
Hmm, I will need to cover all of this, currently only learning very basics and not yet this far. 
Ive used [AssImp](http://www.assimp.org/index.php) (AssetImporter) to do this in the past which has a python binding
I am currently trying to automate stuff like opening a webpage, logging in, hell even completing a task if it's possible but I am so limited on my knowledge I am not even sure this is possible.. What did you try creating when you were learning Python (Very big noob at the moment)
You can read the tutorial online for free on his website. But later it's worth to buy it because he did an excellent job with it. https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world
I picked up a book by John Zelle called Python Programming: an introduction to computer science and about halfway thru the book you have an understanding of all the major data structures and you start making some simulations with guis, one of which is a projectile moving thru a 2d space and another is a die rolling sim. The graphics module is based off a watered down version of tkinter but it's cool to finally see your scripts exist beyond the terminal
The latest problems are really really *really* hard, but you shouldn't struggle too much with most of the first 100.
It seems like you may not be aware of the split between client and server in the web stack. The client is generally the browser, and renders html, css, and also runs javascript. The server is a different computer somewhere in the world that generates all the static content and sends it to the client. The server code can be written with nearly any language. Flask uses python to generate content sent by servers. 
It's been stable for a long long time. The previous version was 0.12. You can generally take version designations with a grain of salt, otherwise Windows 98 would be so much better than Windows 10
So Python 2.7 is still supported?
This is nice - very readable, and looks to be doing sensible things. You should definitely look into using `argparse` to let users change the parameters and words file when calling from the command line. I'm a little confused as to why you're generating six random die rolls instead of just generating a random choice directly from a list of words - the later would simplify the code a good bit, and allow word lists that aren't pre-indexed. I'm guessing the EFF word list was designed for manual password generation, but in a program, it makes less sense.
[http://pyvideo.org/pycon\-us\-2012/stop\-writing\-classes.html](http://pyvideo.org/pycon-us-2012/stop-writing-classes.html)
Damn, I think reddit deletes messages because of the link. Here is what I said: Ok so I will do what you said and delete them with Synaptic or ppa-purge? And I can delete /usr/local/lib/python3.4 entirely? And here is the rest from yesterday lol https://hastebin.com/zabedibenu.sql
just curious, how do you know this? 
https://www.patreon.com/posts/interview-with-6170478 And I work there! 😁
Dear god yes. Orm are great for PoC but enterprise level api's become brittle when you rely on those. Need raw sql for better and more reliable performance.
good answer! :)
Well nothing of this is really complicated (or at least doesn't need to be). You could represent the board state via some lists f.e. and the text output ist basically some for-loops and print statements :) You'll need to think a bit about how Minesweeper works tho, but this is a good exercise.
I didn't realize it had not reach 1.0 for a long time.
Ordered the new Grinberg Flask book that was released last month (2nd edition). I'm going to start over when it arrives.
I dabbled a very small bit with BASIC when I was in my early teens, didn't touch programming again until I was 35, and now make a lot of money as a freelance developer. I'm smart, but I don't think I'm a genius or anything. While intelligence is somewhat important, more important is the ability to focus on something technical for long periods of time. As far as the math part goes...start doing projects that don't require math. The great majority of programming has very little to do with math, so that leaves you many possible projects to work on. As far as feeling overwhelmed, you just have to break things down and come up with projects that help you learn the pieces.
Not 1.0 doesn't mean not production ready! Some dev teams are really careful about making their project as API complete and stable as possible before announcing 1.0, especially open source non-commercial stuff where there isn't a concern about getting the project out there and bringing revenue in. 
I think the Django source code is an excellent learning tool.
Yes. It should work well on Python 2.6 too. But we drop the test for 2.6.
 I basically just want to create a few applications or websites. Something like tumblr or instagram which I know is a huge task for someone who knows programming yet alone someone like me who barely knows python. I also would like to create a business website. 
That's awesome! Do you mind if I ask you a few questions? Do you have a degree in computer science? I dont have a bachelors degree yet because I was going to study medicine but decided it wasnt for me. If I want to get into programming should I look to obtain my bachelors in computer science or should I just learn python and do freelance jobs as others and make my own apps/websites?
see [this SO post](https://stackoverflow.com/a/50047206/4999991) and my experiments on [this Jupyter notebook on GitHub](https://gist.github.com/Foadsf/00185794133b22628f87a4a0f1f18933). It seems `.has(Integral)` is the correct answer.
Not a dumb question! I don't comment very often but you're on the python subreddit and presumably have some python experience. Flask is, actually, a terrific tool for helping you understand the power of a web framework. I strongly suggest you go through [this](https://scotch.io/tutorials/getting-started-with-flask-a-python-microframework) tutorial - it'll take only a couple hours and is a lot of fun!
Let me know if you need anything specific, I would add it to this collection. Also, everyone is free to fork and modify, but give it a star if you fork :) If you want to contribute anything specific, mail me. 
Of course! I've always just developed things by &amp; for myself so it'd be nice to make a debut onto Github!
Please share the code when you're finished. I'm curious about your solution. Hope you have a pleasant weekend, too. 
Someone else pointed out https://0ver.org on Twitter after the release, which I thought was pretty funny. I hadn't seen it before. I've been working on the 1.0 release for over a year, the 0 bugged me too. :-)
Using S3 as a database just seems all kinds of wrong.
`ppa-purge` should remove the ppa from your sources and then remove all packages that were installed from the ppa. It's the recommended way to remove ppas, but if you know how to do those two things with Synaptic then that's fine too. Synaptic has an "Origin" section that can help. Yes you should delete it entirely. You may want to keep a backup as a precaution. You can just rename it to something else; if the system can't find it then it's a good as deleting it. `/usr/local` is set aside as a place for the local system administrator (i.e. you) to put programs that they've complied themselves. These files are probably here because you followed some tutorial at some point that asked you put these files there (perhaps indirectly, by running some obscure commands) without you really understanding what you were doing. On a default installation, `/usr/local` has nothing but some empty directories. Nothing here is required by your system so it should be fine to delete stuff in here. It's also possible that some of these files got here because you ran `sudo pip`. It looks like you also have `/usr/local/lib/python2.7` and `/usr/local/lib/python3.6` which I missed before. You should delete/rename those too. The idea is that there should be no trace of python in `/usr/local`. You may also need to remove some binaries at `/usr/local/bin/python*` and maybe stuff in other subdirectories. Poke around and see what's there. Unless you've been using `/usr/local` for something else then it's likely that the python-related files are the only ones there. What I'm asking you to do here is basically to set your system back to how it was when you first installed it. After that we can work on reinstalling the things you need.
Armin is still involved, but the Pallets team was created so that he wouldn't have to be and the community could support it. I've been handling the 1.0 release and there have been a ton of contributions from others.
Thanks for the suggestions. I'm not sure I'll need to dip into any web requests, though I have done for a previous project and it was super useful. If I already have the data in CSV format (from the exportation process), would I have any use for sqlite3 or shelve? Or would that be more to do with the input / output of data? I've only used sqlite3 once briefly with a twitter project.
Sorry, forgot the /s tag.
Aw that's too bad, I thought it was funny
Haha, fair enough. Maybe my comment will be informative to a passerby. =V
No one ever thinks about logging, me included. It was quite an odyssey figuring out what Flask was doing and how Python logging should actually work. The big problem was that since users don't think about logging we wanted to do it for them, but there's really no guidelines or functions to help libraries in that situation.
Only because C++ doesn't have an interactive shell. An attached debugger can probably identify this for you, though. I'll admit it's it's more of an issue if you never touch the interactive shell. Some don't.
Autodesk provides an SDK for `*.FBX` which also includes python bindings and is the recommend way to read/write FBX files. But the GPL license Blender is using forbids usage of the SDK. The developers of Blender also do not update their FBX importer/exporter anymore and favor open file formats like glTF 2.0.
The interesting problem with computer programming is that practically no-one ever fully knows what's going on. Being a genius will make you shine in individual components of a software system, but it is certainly not required to create code that has value for a company (earning you a paycheck). The greatest asset you can have is stubbornness. Stubbornness, or will to succeed against the odds, helps you to successfully muscle through the oceans of information to find what's relevant to your problem. It helps you suffer the bug hunts and the occasional (hopefully) crunch times. This is what separates software developers from your standard population.
I dropped out of college. You can definitely make a career out of programming without a degree, but it requires you to be motivated and disciplined about your learning. Making it in freelancing is as much about marketing and networking abilities as it is about programming ability...actually, making it working for someone else is the same way. Without a college degree your first job will probably be harder to get as a degree is a useful (supposedly) signal to potential employers. After you've got your first job the field starts to level out a lot as places care more about your experience than your degree. As a freelancer, a college degree brings nothing to your ability to get work...as long as you have the motivation and discipline to know your stuff. I can't stress enough how important the motivation and discipline is.
Wow great module! My trick was using end="\r" so the lines will be overwritten saving space in the console.
No, you don't need to be extremely intelligent, just determined. Learning programming is learning a new skill. It's a skill in which you likely have no prior exposure or experience. It's a skill that requires a significant amount of learning and practice. This is not unlike any other trade skill, such as carpentry, welding, or metalworking. There is a significant amount that you have to learn before you can really start to feel like you are accomplishing anything at all: even basic programming takes some significant study. To become an expert requires years of learning and practice. Even after a decade you will feel like you have barely scratched the surface of what you could know or do in programming. In fact, the more you learn, the more you will realize how big the field is and how little of it you have seen. If you want to learn it, you can. Don't stop just because it is daunting. Start small, enjoy the little wins, and keep reasonable goals always just within reach. You'll never feel like you have mastered it, but you can feel like you are constantly improving.
I've now got our [Python Mastermind game running](https://s3-eu-west-2.amazonaws.com/aigaming2/helpPagesAssets/Mastermind/mastermindAnimatedGif6PegsGoodCode.gif). The link is to a GIF showing the game playing at [aigaming.com](https://aigaming.com) It's really easy to get started. We give you the initial template code that plays a basic game of Mastermind so you can start playing straight away. Even if you just played 50 games with this template code you would get on the leaderboard today. Then you can tweak this basic code to start to add some strategy to it and to improve how it plays. Let me know if you check it out.
I would say this is to much for a beginner, you need to know python to do that. The main reason is the usage of `asyncio`which is very complicated
To be a good programmer, you don't need to be intelligent. You need to be methodical.
woa very cool stuff you have made sir!
Now that you mention it I could just as easily parse the wordlist into a set instead of a dict then call secret.choice() on the set instead. Would save a bit of computation time... Thanks! And I'll look into argparse
That's what you get when you ban millions of IPs. Linux Mint website and repository, Google Translate, out.reddit.com (used for external links) are all often down for me, so I use a proxy.
I don't think we are the even close to being the biggest. https://www.quora.com/What-is-the-largest-site-created-using-Flask A few issues around async stuff afik but that's being worked on since. 
Weird that python.org wasnt blocked in there
I have installed Selenium, Blender and Dreampie, so maybe that's the reason. --------------- ls /usr/local/lib/ python2.7 python3.4 python3.6 site_ruby That's all I got in lib (but got more things in bin, like Git related stuff). I'm going to delete them but I need to **sudo** --------- sudo ppa-purge ppa:deadsnakes/ppa Warning: Could not find package list for PPA: deadsnakes ppa sudo ppa-purge ppa:jonathonf/python-3.6 PPA purged successfully grep ^ /etc/apt/sources.list /etc/apt/sources.list.d/* | grep "python" /etc/apt/sources.list.d/jonathonf-python-3_6-trusty.list:# deb http://ppa.launchpad.net/jonathonf/python-3.6/ubuntu trusty main /etc/apt/sources.list.d/jonathonf-python-3_6-trusty.list:# deb-src http://ppa.launchpad.net/jonathonf/python-3.6/ubuntu trusty main /etc/apt/sources.list.d/jonathonf-python-3_6-trusty.list.save:deb http://ppa.launchpad.net/jonathonf/python-3.6/ubuntu trusty main /etc/apt/sources.list.d/jonathonf-python-3_6-trusty.list.save:# deb-src http://ppa.launchpad.net/jonathonf/python-3.6/ubuntu trusty main No deadsnakes PPA and I purged the 3.6 PPA but it still is here apparently, no? ------------ So I can remove these safely? There are many more of these with 2.7, 3.4, 3.5, 3.6 but I feel like 2.7 and 3.4 are the base python, no? I don't want to screw up ii libpython2.7:amd64 2.7.6-8ubuntu0.4 amd64 Shared Python runtime library (version 2.7) ii libpython2.7-minimal:amd64 2.7.6-8ubuntu0.4 amd64 Minimal subset of the Python language (version 2.7) ii libpython2.7-stdlib:amd64 2.7.6-8ubuntu0.4 amd64 Interactive high-level object-oriented language (standard library, version 2.7) ii libpython3.4:amd64 3.4.3-1ubuntu1~14.04.6 amd64 Shared Python runtime library (version 3.4) ii libpython3.4-dev:amd64 3.4.3-1ubuntu1~14.04.6 amd64 Header files and a static library for Python (v3.4) ii libpython3.4-minimal:amd64 3.4.3-1ubuntu1~14.04.6 amd64 Minimal subset of the Python language (version 3.4) ii libpython3.4-stdlib:amd64 3.4.3-1ubuntu1~14.04.6 amd64 Interactive high-level object-oriented language (standard library, version 3.4) ii libpython3.5:amd64 3.5.0-2+trusty1 amd64 Shared Python runtime library (version 3.5) ii libpython3.5-minimal:amd64 3.5.0-2+trusty1 amd64 Minimal subset of the Python language (version 3.5) ii libpython3.5-stdlib:amd64 3.5.0-2+trusty1 amd64 Interactive high-level object-oriented language (standard library, version 3.5) ii libpython3.6-minimal:amd64 3.6.3-1+trusty1 amd64 Minimal subset of the Python language (version 3.6) ii libpython3.6-stdlib:amd64 3.6.3-1+trusty1 amd64 Interactive high-level object-oriented language (standard library, version 3.6) 
I could type "sudo apt-get remove *python3.4* *python2.7* *python3.5* *python3.6*" No?
ORMs are tunable and work for many things. I have no problem with this. Also most allow low level SQL access. What I'm talking about is basing your business objects on an ORM object. We created DBs to deal with very slow disk access. It was a performance buffer. Now we have near infinite RAM in the form of SSDs. If the data storage is an interface to the system, this modification is simple. Otherwise, we are stuck in old models.
Oh who does? 
Also with `tqdm.write(msg)` instead of print you can keep the progress bar under the text. On notebook you need to call `from tqdm import tqdm` (but you can still use `tqdm_notebook` for visuals.
I tried to create something similar, but also based on sentence generation using NLTK. But then I noticed... not only password generator, I might also have to create / plug it into a "password manager". So, in my mind, password manager is becoming more important. Also, how do you calculate Entropy? -- my way: https://github.com/patarapolw/passwordstrength/blob/master/passwordstrength/entropy.py I am also working on a much harder question... how do I computerized-calculate memorability? https://github.com/patarapolw/pronounceable/blob/4f20ba76f87b42342c47fff92123122ba28987bb/pronounceable/complexity.py#L45 https://github.com/patarapolw/memorable-password
How do you come up with ideas of things worth scraping?
In my opinion, writing a script which runs forever on your own computer that does something like this is a good early (but not quite complete beginner) project. I haven't tried a discord client library, but the Reddit API client library for python (PRAW) is pretty good, and gluing libraries together with logic is a big part of industry programing. Deployment, having the program run robustly on a remote host, is a more complicated endeavor.
You will need to use `sudo` for making changes to `/usr/local`. That's fine. The dead snakes ppa isn't in your sources, but you still have packages installed from it. That's where you're getting the python 3.5 packages from. It did remove the 3.6 ppa from your sources. The `#` is a comment symbol and the `.save` file is just a backup. No, I'm sorry. There's a difference between the way ubuntu and arch name their packages, which confused me. `2.7` and `3.4` look like they are your system versions of python. You'll need to keep those packages installed, but you may have to downgrade them from ppa versions to the ones that come with your system. Check their origins. As a general rule, anything with `trusty` in the version is from a ppa and anything with `ubuntu` is from the ubuntu people. I don't know what Zorin version numbers look like. Definitely uninstall anything having to do with `3.5` and `3.6`.
No. You need to keep some version of 2.7 and 3.4 around. And this won't remove the `minimal` and `libpython` packages.
r/learnpython, r/discordapp
Thank you, BigMac1017, for voting on Defiantly\_Not\_A\_Bot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Thank you :)
Very interesting observations! We also found similar results that Pythran can perform nearly as good as or sometimes better than Fortran. Something which is out of reach for novice users with Cython or Numba. It may be also noted that Pythran gives fairly good performance with numpy-style code. i.e. without writing explicit loops - definitely not possible with Cython
they gonna lose even more IT skilled people because of this giant clusterfuck geeks can code hungry and sick but not when idiots in charge enforce blacklists upon them
contextlib includes a `redirect_stdout` context manager for things like this, but it basically monkeypatches `sys.stdout`. Code in C/Fortran, etc, sees the OS file descriptor and not the python proxy object. As a result, redirect_stdout won't do anything for your Fortran code. I've written a function [here](https://gist.github.com/brandondube/2c319727bbc794e97c0806a3abd213ba) that will hold the output in memory if you want to do something other than hide the print statements and also want to avoid thrashing the filesystem, or losing your python stdout.
First of all I think you need to go to management and obtain support for your project including the required data access. Next, make sure you understand what the corporate software toolset is for end-user projects like this. For example is there a report writer app available? Excel is a great spreadsheet tool but it should not be used as a data processing app given its susceptibility to errors. Some studies suggest up to 80% of all spreadsheets contain errors. I can attest to this. Finally, make sure to keep everyone in the loop so that you don't look like you've gone rogue but rather are seen as a productivity champion. Good luck with your project. Cheers. 
I tried it on 3 and it didn't work. 
Oddly enough, I couldn't get it to compile with numpy style code! I had to unroll it into explicit loops anyway. Maybe I got an outdated version or something? It took a lot of effort to get a snippet that would compile and run at all. Although I did use pip so it should really be up to date...
Python, yes. Frameworks, no.
Strange, since we have been using Pythran a lot with python 3 (https://bitbucket.org/fluiddyn/fluidfft) &gt; I tried it on 3 and it didn't work. Is it the same function on the repo you posted?
Very interesting but it uses Theano / Lasagne and has 95 open issues including people not able to get it to work. The docker is based on Ubuntu from 2014.
Maybe I have bad luck, but failing to use an ORM inevitably causes schemas to grow into strange overly-cryptic and poorly- documented monsters. You can always use raw SQL when you need to, but ORMs reduce a lot of the cognitive overhead when you're trying to figure out how everything is working, or want to make a change without having to go back and update all of the scattered queries 
Remembering back to my first time being introduced to frameworks, and helping others through the same situation, I think it's just that the first framework you try to learn won't make that much sense in the beginning no matter what. I'm sure there are some frameworks that do beginner-friendly stuff better than others, but mostly it'll be difficult to grasp no matter what framework you pick. I recommend finding someone to talk about it while going through the learning/documentation process, preferably in real life, but IRC channels etc. are an acceptable substitute (though you'll have to deal with elitists and people who just don't have time to give thorough help). Good luck!
Thank you!
You need to check-in your requirements.txt (pip freeze). Noone will want to sit and resolve the dependencies manually.
If it is 0.8.5, it was recently released. May be your example deserves an issue. But before that, confirm your code only uses the functions mentioned in https://pythran.readthedocs.io/en/latest/SUPPORT.html - since Pythran only supports a subset of Numpy functions.
If you want to create PDFs, check out Reportlab. 
So, even if I removed 2.7 and 3.4, it would still work fine because of the python minimal? ------ Damn stupid reddit, last message I put hid the *. So i'm going to type: sudo apt-get remove *python3.5* *python3.6* Fine? (sorry for being redundant)
I totally understand. Please don't mistake my criticism as being harsh, but from an objective point of view, it's definitely not designed for someone who wants to learn how to use Python in web dev with minimal or no experience in the latter. That said, it's not really a problem, just a mild frustration that the total beginners may feel when wanting to learn about this. 
I can't think of any reason why that command wouldn't work. But it kind of depends on the details of the packages you have installed and how they relate to each other dependency-wise. Personally, I'd prefer to go through the list slowly and make sure that each selected package doesn't try to remove more than I expect.
 ii python-xlib 0.14+20091101-1ubuntu3~trusty all Interface for Python to the X11 Protocol There is trusty in the name but I think it's a base package. Ok I remove these: ii libpython3.5:amd64 3.5.0-2+trusty1 amd64 Shared Python runtime library (version 3.5) ii libpython3.5-minimal:amd64 3.5.0-2+trusty1 amd64 Minimal subset of the Python language (version 3.5) ii libpython3.5-stdlib:amd64 3.5.0-2+trusty1 amd64 Interactive high-level object-oriented language (standard library, version 3.5) ii libpython3.6-minimal:amd64 3.6.3-1+trusty1 amd64 Minimal subset of the Python language (version 3.6) ii libpython3.6-stdlib:amd64 3.6.3-1+trusty1 amd64 Interactive high-level object-oriented language (standard library, version 3.6) ii python3.6 3.6.3-1+trusty1 amd64 Interactive high-level object-oriented language (version 3.6) ii python3.6-minimal 3.6.3-1+trusty1 amd64 Minimal subset of the Python language (version 3.6) 
Just my two cents: Pathlib solves many problems, ever had to do "dirname\(dirname\(dirname" ? F\-strings have a new byte code to make string interpolation substantially faster and prevents a lot of repetition which in my humble opinion would be enough reason to implement it. Type Annotations are a HUGE improvement to complex projects in Python, people that don't realize it are probably using Python for simple scripts or are unproductive hipsters.
&gt; not that I'm trying to make anyone redundant! That should be exactly your goal, actually. You just shouldn't say so.
Ok, point taking. But given that f-strings are superior, I think it would be worthwhile removing the old styles to avoid making the language unnecessarily messy. Instead of keeping old stuff around, I wish there was a more rigorous deprecation system.
Should change name to Python Almost Anywhere
I can understand what you mean. It took me quite some time to get going with the site but the effort seems worth it. You might want to try one of these sites as they might be easier to understand. Practice Python / Exercises and Solutions https://www.practicepython.org/exercises CodingBat Python http://codingbat.com/python
Python anywhere* ^^Details ^^apply
My company closed their office in Tomsk, Russia a few years ago and got visas for all of the employees to come work in the United States, many did. (Yes the reasons were because of Russian government policies.) Can see this continue to happen for other companies.
I have not — because, although I'm still very much opposed to the implementation, I've realized both that I should know more about CPython's internals before suggesting alternatives (the replies to my other comments in this thread have convinced me of as much) and then that there's already been *very* much discussion of different spellings &amp; semantics spread out over four email threads on python-ideas alone that I'm not sure I could meaningfully add on to.
The `python-xlib` package is correct. It is consistent with the version currently available from the [ubuntu trusty-updates repo](https://packages.ubuntu.com/trusty-updates/python-xlib). So, I now suspect you have [this ppa](https://launchpad.net/~thomas-schiex/+archive/ubuntu/blender) installed in order to get the latest version of blender. Some of it's packages look like the ones from dead snakes, which is why I thought you had that. That's the true source of your python 3.5 stuff. It also explains why you only have `libpython` packages installed for `3.5`. You can probably leave these installed because they aren't a full python installation and aren't likely to get in the way right now, but I would recommend eventually switching over to a snap or flatpak to get the latest versions of blender (or upgrading your os). Just so I'm all caught up with the recent changes, could you please give the current output of `echo /usr/{,local/}{bin,lib}/python*`?
Thank you, I will check it out soon. I don't have a phone number to verify my account so I'll have to wait. It's it pretty easy to use? I know very little of coding.
Hmm it seems to only do SMS and I'm trying to use an app, not SMS. 
Are you the guy who ran AbroadUnderhood account in Twitter? I heard the same story there.
Out of curiosity, where does Mint fit in here?
unless they have an API, then no. 
What do you mean? For the last two days, I can't do `apt update` on Mint on my work PC, it just hangs on Mint's own repository (Ubuntu ones seem to work). And I also couldn't connect to linuxmint.com this morning without proxy, but it seems to work at home right now.
You could emulate android on a computer and use pyautogui
I don't necessarily agree with getting support first, although it's very dependent on OP's work environment. It's easier to seek forgiveness than permission, and managers have a habit of not giving a fuck about subordinates having to spend their time on menial tasks. I agree though that since the output of the program will go to clients there really needs to be some kind of assurance that it's doing the right thing.
Dust doesn't have an API. You could root your phone and automate the finger press events, but why not just send messages another way? You can set up automated emailing in python in like 1 line. What are you trying to do?
Well, I figured it out. I'm putting it here in case someone has the same problem down the line. The issue was binding variables and the data type. The database I'm using has columns with type varchar2, but which actually contain numeric data. I was pulling the data with sql like: Select col1, col2, col3 from dumtable where col4=:foo in this case col4 is stored as varchar2, but contains actually contains numeric data. (probably to force numbers like "0012" to stay 0012 and not get converted to 12, but I don't know) My Python script had a list of numeric data which i was looping through using something like for i in list: cur.execute(None,{"foo":i}) since the data in the list is numeric, apparently it was being bound as a numeric value which would cause the database to convert the data (or cx_oracle, I don't really know who's doing what here). by passing numeric data in, each pass was taking 70ms. If I did something like for i in list: cur.execute(None,{"foo":str(i)}) each pass would take 3 ms. Doesn't sound like much but I was iterating through a loooong list and it really adds up. Apparently Perl's DBI module takes care of that conversion. It for sure automatically quote's strings properly but it never occured to me that it was converting numbers to strings on the fly like this.
Hey, dogfish\_eggcase, just a quick heads-up: **occured** is actually spelled **occurred**. You can remember it by **two cs, two rs**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Stubbornness is probably the most important quality :D
Yes, you absolutely should use those methods if you need math in your bash scripts. Alternatively, you should use `subprocess` if you need to call other programs. But I think the more general question is why use a bash script over a python one and vice-versa. I do nearly 100% of my scripting in python but there are cases where doing it in bash is better. Or, using python in bash as I describe. My use case is that I have a program that needs to be called from bash in general. Depending on how it is installed, it either need some environmental variables that do not seem to translate into the subprocess (with and without `shell=True`) and on other machines, it uses [environment modules](http://modules.sourceforge.net/). The key issue is that I do not know the exact setup and I need it to be robust to however it is installed. Furthermore, along the same lines, I need to invoke the script via `source my_prog` and you can't `source` python code. But, to be clear, this is really not an ideal approach and should be your last resort. It actually reminded me a lot of writing a cgi script where my `print` (or `sys.stdout.write`) calls were processes.
More like Python *Anywhere **Apart from Russia
Here's what I'm thinking about sending: What do you think? -------------- Hi all, I love Python although I admit I don't understand some of the PEPs. However, I did want to comment briefly that I believe it would be a mistake to make such a change like this. The new := operator adds complexity to something basic, to solve a situation which is uncommon. There's plenty to do to improve Python, but ye olde standard equals operator is good enough. Python is a language that 8 year olds can get started in, and spend a lifetime mastering. I presume there aren't too many young children hanging out on these Python lists but please keep them in mind when working on features everyone needs to know. Not every feature will apply to them, but this one would. The current way to solve is pretty fine: def cumulative_sums(end): x = 0 for y in range(end): x += y yield y At least, I would suggest holding off on this till Python 4 when you feel ready to break things again. -Keith 
I do not recall the details but I can tell you definitely that it **doesn't work** for what I was doing. I can probably tinker with some things for my install, but when it is based on module files, it does not get the settings!
It's not targeting Python or the Python community. Roscomnadzor are trying (and failing) to block the encrypted messaging service Telegram.
Hahahaha ouch!! Thanks for the link, I'll try my best to keep my office friends around ;)
They are ways to install software on linux that keep things isolated so that applications won't interfere with normal os packages. * [Snaps](https://snapcraft.io/) * [Flatpack](https://www.flatpak.org/) Okay, there's only really one last thing we need to look at and that's your user profile. You should have some folders at `~/.local/lib/python*`. These folders are where stuff gets installed by `pip` when you give it the `--user` flag. The main thing I'm worried about is the permissions. You've run `sudo pip install --user &lt;something&gt;` at least once, which means that pip may have tried to install something to your own profile as root. You need to make sure that none of the files here (or anywhere else in your home directory) are owned by root. You can run `find ~/.local/lib -user root -o -group root` to find such files. If you find any files you should reassign them to your own username and group. All of the stuff in `~/.local/lib/python*` will be stuff that you've installed yourself with pip. There might be nothing there. None of the files in those directories are necessary for your system python install, but they might mess with python for your particular user. If you're ever in doubt you can always delete (or temporarily rename) anything here without harming the os.
Oh yep it will be using OBJ's - so if thats the case, would you know where the standard python library is that can move UV's? All I need to do is shift all UV's on the obj by X units left or up, and scale * 0.5 etc. Nothing particularly fancy. 
Thank you for the inspiring words! I know it is difficult and it'll take alot of work but I get overwhelmed at times and it still draws me in to not give up and keep learning more. Where have you learned if you dont mind me asking?
Thats pretty cool, so what do you mean by marketing and networking freelance jobs? How would I be able to do that as a newb in python programming 😂 or should I just stick to learning basics at first? Also I know the degree means absolutely zero towards your skills in programming but I feel it is important to have some sort of background. I want to get my bachelors, would you recommend majoring in computer science or minoring in computer science? 
Thank you! I constantly forget that lol
Nope. 
Looks neat, but please do yourself a favour and get an actual password manager.
What a dumb move
Ok i'm gonna look into these methods of installing stuff, thank you. --------- $ l ~/.local/ drwxr-xr-x 48 my_user my_user 4,0K avril 27 23:35 share drwxr-xr-x 116 my_user my_user 4,0K avril 27 19:49 .. drwxr-xr-x 2 root root 4,0K avril 26 07:57 bin drwxr-xr-x 5 my_user my_user 4,0K avril 26 07:56 . drwx------ 3 root root 4,0K avril 26 07:56 lib hmmm should I change everything in ~/ to my user? I can't even open lib as normal user lol I typed: sudo find ~/ -user root -o -group root -exec chown my_user: {] \; And I deleted ~/.local/lib/python3.4 ------- So now how do you advise me to have a safe python3 working environment? to develop (i'm a newbie of course). As in install without messing the OS and making pip work fine, and if possible having both python 2 and 3 together but with python3 beind the main version 
Damn, my command to change the group does nothing, it's still the same group o_0
You mean with something like Tasker? Also, I need the security features of Dust.
That sounds specific enough that I recommend writing your own package. 
Might not be the best place to ask, but I have a question regarding Flask and how up to speed it is these days. I was never particularly into web development, until I wanted to try a more easily accessible GUI for some small apps I was working on. I loved Flask from the start, but as I got myself more up to speed in the web dev world, I discovered that the "old way" of doing it is being more and more left behind by the world of single page apps and js frameworks built for that design approach. As a result I got into vue.js and combined it with Flask, but I hit a bit of a wall there as from what I have learned so far, I can and should really use Flask just to serve json from the backend. Does that not cut off a lot of the convenient functionality and libraries of Flask that I got mildly used to before I decided to leap into the world of SPAs. Stuff like flask logins, wtforms and whatnot integrating well with jinja templates and making life easy for a python guy. So the question is, is it actually possible to keep using the best of both worlds or is it true that Flask is not a good choice for modern web apps, at least not if you want to go the path of using some of the more modern js front end frameworks? If I'm completely wrong about this, could someone point out some resources or anything that would give me a better idea on how to integrate those two beyond the point of using flask just to serve some json from an api endpoint?
I meant the features like blocking screenshots and downloading of files.
It is? I was not aware. This is a great idea, thanks!
I'm doing several. 1. Trying to deploy a simple Django website with 2 apps, which I couldn't figure out for the past few weeks. 2. Using Selenium and BeautifulSoup to practice webscraping by making some simple programs 3. Putting some hours into the Data Science udemy course to learn and expand on Numpy, Scipy, Seaborn and Pandas 4. Start learning and finish a course on Matlab
Stick with CSV until you know you need something else, *and why*. Otherwise, the solution might have the same problem! 
Thanks very much.
^ This is probably the best option if OP wants to rigidly stick to Dust for some unexplained reason
What command did you run to change the group? You may want to delete stuff in `~/.local/bin` too, or at least anything that was put there by pip. --- So the first thing you need to understand is that you have two system python installations. You have a 2.7 installation which is primarily in `/usr/lib/python2.7` and you have 3.4 in `/usr/lib/python3.4` (there's some other stuff in the rest of `/usr` as per the Filesystem Hierarchy Standard). These installations are in use by the system and it is very important that you don't mess with them. The only way that you should alter anything in these directories is with your package manager. If you run `sudo pip` it will probably install stuff here, but it won't be the version that your package manager expects and sooner or later something will break. It is possible to use PPAs to add other python installations, and that's okay as long as you always make sure you know which python install you are using at any given time. PPAs will tend to add extra versions of python to `/usr/lib` which, as I said before, you should only alter with your package manager. If you have many different versions of python then you should just get used to specifying python with a two digit version (run `python3.6` or `python3.4` instead of just `python3`). I would recommend sticking to what your operating system provides, if at all possible. If you need a python package that isn't available with apt (or a different version of the package than apt has) then you have two options. The first is to install the package to `~/.local/` using `pip3 install --user &lt;whatever&gt;`. The `--user` flag is what's important here. Most of the files will go in `~/.local/lib/python3.4`, but note that if the package contains a binary then it will get put in `~/.local/bin` and you will need to make sure that this directory is in your PATH. If you're not already familiar with PATH then you might want do research on it, but you can add that directory to your PATH by putting something like `export PATH="$HOME/.local/bin:$PATH"` in `~/.profile`. This was probably the reason that you couldn't find the `pipenv` command after you'd installed it earlier. Once you install something to `~/.local` it will be available to any python script just as if you had installed it to the system. The advantage is that it only affects your user and it won't conflict with anything that apt is doing. The second option is to use a virtual environment. A virtualenv is like a phantom python install that is based on your system install, but also isolated from it. You create a virtual environment by running `python3 -m venv /path/to/venv`. Where you put your venvs is up to you, but you should probably keep them either in your project directories or in a dedicated folder somewhere in your home directory. Once you've created a venv you will need to "activate" it by running `source /path/to/venv/bin/activate`. After you've done that, you can just install stuff with pip as normal (`pip install &lt;whatever&gt;`) and it will install to the virtual environment. You will need to reactivate the virtual environment for each new terminal. You can also run something in a virtual environment without having to activate it by running the python in the venv: `/path/to/venv/bin/python /path/to/your/script.py`. Using apt or `~/.local` are best if you just want to install something and run it (i.e. you're a user). Virtual environments are best when you need control over precise versions and you want to make sure that other things that you might have installed won't interfere with things (i.e. you're a developer). `pipenv` is a useful tool that helps to manage venvs, but you should make sure you have some experience working with virtual environments directly before using it. While you're still getting your head around this it's a good idea to run `which python` and `which pip` and stuff like that so you know which one you're running. I think that covers everything. Let be know if you have questions, or you run into trouble.
By marketing and networking abilities, I mean...people aren't just going to come knock on your front door and say "make me some software". It's like it is for any self-employed person: you have to hustle! Get to know other developers. Use LinkedIn. Find people who need your skills.
I see what you mean. Where would be a good place to start working on projects? This is all new to me and I'm not very good at networking although I'm willing to improve and work on it.
Before you think about getting jobs and whatnot, you should probably learn to do the thing that will get you the job first. There's a fair bit of difference between wishful thinking and warm dreams and actually understanding that it takes lifestyle morphing commitment to pull through it. It doesn't hurt to know what type of job you want in the coding universe, as it will outline more specific goals and paths for you and after the basics, that's quite necessary if time is a factor for you, but you run the risk of overwhelming yourself early on, then getting disappointed and discouraged when you realise that you can't actually do anything yet and you are too far ahead in your thoughts thinking what your life is like as a this-n-that developer, while you should really be learning what a for loop is or something like that. As others here say, you need shittons of determination to learn coding. You will hit many walls, will probably think youre not smart enough and give up a thousand times, but the ones who stick to it are the ones who walk out the other end as programmers. It's not quite as easy as you choosing what you want to be and then going through the motions to become that thing. It's blood, sweat and tears all the way if you're not some gifted genius.
Здравствуйте! Can you do me a favor and check to see if my PythonAnywhere hosted site is accessible? It is only PythonAnywhere, but for weird internal reasons is on a weird internal IP. https://discchord.com I have a small, but significant, readership in Russia among music tech enthusiasts. 
I am Russian, I so much hate of what the government is doing to country. Things are getting worse from day to day
You can check if it's available from Russia here: [http://ping\-admin.com/free\_test/](http://ping-admin.com/free_test/)
Void where prohibited 
Thanks! That is a wildly informative tool! My results seem to be spotty. I'm getting through to half the pingers in Moscow. Throughout the rest of the country it continues that trend of about 50% success.
Python Anywhere stymied by Putin Everywhere.
I got started as a kid, reading books from the library. I didn't have a computer at home, but we had some at school that only got used for the occasional games. I got as far as drawing random colored lines on the screen. By high school I was doing basic scripting, reading guides and tutorials online. I could write scripts for my chat program to respond to messages. I didn't get to do anything serious until university where I took a dual degree program in electrical engineering and computer science. I learned a lot about the theory, but still could barely implement anything practical. I did manage to make a few small projects, but only things that could be built within a couple of weeks. I have now spent 10 years working professionally. The first few years I could really only do things with someone else designing it and me just implementing it, but now I run an entire team, architecting whole new products from scratch. I definitely feel now like I can do something really impressive work, but I also look around at the industry and realize just how much there is out there that I don't know. I'm confident that I could learn and do those things too, but I know I don't have enough time to learn and gain experience at all of it.
Some _assembly_ required.
Well said, thank you for your input! Thank you.
Solve problems that you have. For example, you could write a simple script that sorts your Downloads folder by extension. Then expand its functionality. Make a gui or a web interface for it. Make it configurable by a config file. If you can't find a problem you want to solve google for "programming project ideas". There's lots of lists out there. I'm not very good at networking either, but apparently I'm good enough to keep myself busy enough!
That inspires me, it can get overwhelming but as a few (including you) have said you cannot learn it all because it's such a broad field. But where/how do you recommend I start? I'm reading "Python Programming for the Absolute Beginner, 3rd Edition" by Michael Dawson and it's a great book. He teaches you how to write python by creating games and breaks it down in the most simple way which is what I need haha. 
ctypes for details
Sorry I didn't mean to imply there was a standard library package to do it, just that you can do it without any other dependencies. Obj is a fairly straight forward string of the contents. You should be able to read it in as an ASCII file then edit it and write it out
https://i.imgur.com/TRISX.gifv I did something like this a while back, too. I'm curious how you did yours.
So, you're asking how much you should charge to spam people? $0 is the correct answer. Go away.
Spam companies, the companies can also be benefited with a better cost/quality service, that they never heard of.
We were able to use tkinter to make a digital gauge cluster for monitoring engine parameters. Tkinter makes nice graphics and the web resources are abundant. 
Looks like it, but it's super easy compared to the old way. You can use dictConfig from the standard library logging package to setup your formatters/handlers from a config file before you initialize your app. Then when you setup the app, all the logging configuration will carry over into the app logger created for you by Flask. See the docs for more details: http://flask.pocoo.org/docs/1.0/logging/
&gt;To be honest, yes, a lot of real-world deployments are via git clone. Even in enterprisey enterprises that enterprise their enterprisey enterpriseness. You can mock how much you want, what you write is plain false for real world devops on many other dev platforms, Unless you are selling tailored solutions to the customers (e.g. they have no access to the server /vm at all). Sorry but python here is totally lacking. 
Depends on how you feel about stealing from the author.
Yes, you are right. I concluded the same.
And might just open source it too.
I have never used Jinja templates with Flask. All my work has been either APIs consumed by other applications, Angular, or Knockout apps. Wtforms looks great, but it's just a different approach. If you've used both, you probably know the pros and cons of both approaches. Even though it might seem like most people use some sort of SPA, that doesn't account for the huge numbers of legacy apps, Wordpress devs, and even some people are still making new Razor MVC apps in C#. I don't think Flask is "mostly" a non-SPA app tool. Most languages people use for SPA apps are languages that also have well respected tempalting libraries as well.
Putin Anywhere ©
As a side note, another No Starch bundle is bound to come up at some point; you should be able to get more stuff like Python Crash Course at a very reasonable price w/o the ethical quandary.
Hm. I quite liked the idea of continuing using Flask and python while also learning some more modern approaches with vue within the same project. I thought most of the appeal of Flask consisted of being able to essentially write your webapp in almost entirely python and being able to seamlessly use all of its capabilities and libraries for handling typical tasks like database management, user auths etc. I was essentially hoping I can keep riding on my python skills and not have to get too serious with js, but guess I was wrong. 
Collecting the data might be handy for some people but the spam isn't gonna be worth much.
You don't need to break it up in chunks. You can have python read the xml directly: https://docs.python.org/2/library/xml.etree.elementtree.html. 
use an xml parser. `import xml.etree.ElementTree` [documentation](https://docs.python.org/2/library/xml.etree.elementtree.html) 
what about json files? 
Theres the json module: https://docs.python.org/2/library/json.html. Are you doing this for datascience?
an elephant in a china shop all, that our government will achive is tor/vpn client on every phone
No, it doesn't work.
http://lxml.de/parsing.html
yea im trying to pull data from this api https://api.coinmarketcap.com/v1/ticker/?start=0&amp;limit=100 and then save to a csv and then sort each result into an array so i can play with the data easily unless im doing this wrong. i have decent experience in c++ this is my first hands on python project 
Most Russians would love to leave...and they're allowed to at any time. It's just that most countries won't take Russians in for whatever reason. 
And yet you posted the link to the illegal version.
PAAR is a good sounding buzzword acronym
In Brasil we take in everyone, but we have no jobs even for us. 
What do you do for a living? Have you considered moving to another country?
I am expat in other country, doing backend development work.
I am expat in other country, doing backend development work.
I am expat in other country, doing backend development work.
Off topic but what's the advantage of pythonanywhere over heroku?
That's not true. Russians are eligible for visas just like everyone else.
I gave this talk last month. There's not much information out there on how to implement eventsourcing in Python so I thought some of you might find this interesting and/or useful.
Hmm that's true.
I think that reviewed, detailed and canonical documentation would go a long way into making it better. A lot of times I find myself searching for a particular feature and hitting a random blog post.
Check out the pandas library for really intuitive data manipulation: https://pandas.pydata.org You can use it with CSV files as well. 
Still can use my Telegramm, lul
But why block Mint?
Я для рофла сказал 
No lo haga compa. Jokes aside, the price seems fair. I have coded very similar things and wasnt difficult, I estimate 2 days to complete it. Once you got the scraper running, the xlsx/csv and txt features will be a breeze to add. You will only require a good mass email service.
I've had decent results with pyqt
They don't want to block Mint. They have been banning literally millions of AWS's, Google's, Microsoft's IPs (and other cloud services) trying to stop Telegram from working as it migrated to different servers again and again. A lot of resources down is just collateral damage. I suspect that Mint's repositories might be hosted on some of those cloud servers.
Making a small beginner project that takes a YouTube username, and whenever that username loses a subscriber a red LED will flash, and when a subscriber is gained a green LED will flash. Main purpose is to just get me familiar with the raspberry pi 3 and using YouTube's API. Hoping it'll only take a day or two at most.
Cool idea. 
GitHub was also once banned in Russia for some repository with a list of suicide methods. They decided to give in to the Russian authorities and introduced censorship for people from Russia. After that, it was unbanned.
Lame
It's a good list, including some things I hadn't heard of before, but it doesn't seem like the author has tried to use the frameworks or thought much about them. What are the advantages and disadvantages? Which one would you use for which kind of application? Which ones work in a similar way?
I'm looking for a tool kit for low to medium complexity toolkit with an emphasis on ease of use. Mostly as a front-end for scripts and tools. Any recommendations on these? Have been away from GUI toolkits for a long time.
I've used PyQt5, and it has been fantastic. You get good looking, cross platform applications, and Qt Designer makes it very easy to make them. Qt team is also taking over the development of PySide. https://blog.qt.io/blog/2018/04/13/qt-for-python-is-coming-to-a-computer-near-you/
Google 'python generate random numbers'. Should find what you need from that.
https://stackoverflow.com/questions/6494508/how-do-you-pick-x-number-of-unique-numbers-from-a-list-in-python
one way is to shuffle the list, create an iterable using `iter` and then use `next` on the iterable to get an element.. you'll also automatically get an exception if you go past the number of elements in list
Not this week, but I recently revamped a script to cross-reference IMDb's Top 250 movie list with movies airing on TV on a given week.
One low complexity option I know of is [EasyGUI](http://easygui.readthedocs.io/en/master/). It lets you pop up dialogs to get user input, but your code still works as a script, rather than redesigning it as a GUI.
Most useless article ever. It doesn't list any differences and pros &amp; cons of each one, nor any examples. 
This worked perfectly, thank you! 
He who doesn't use a framework is doomed to implement it's own shittier version.
Yeah. `python test.py` didn't work but `python2 test.py` did. I think the problem was it was using PyCObject, which has been deprecated. To answer the other question - it was just the `sum` function and the array addition operator. I started with the `two_loop_pot` function from `tests.py`, and basically fiddled around with it until it worked. It's possible I made some mistakes while messing about, and that it was something else that I fixed by accident that got it working in the end.
You could add a use count to each object and sort by the use count. Then take all the objects with the lowest count and randomly select one from that diminishing list. When all of them have been selected then the use count is the same for all objects again and they will then all be selected for use.
Theyre eligible but unless youre rich you dont get one. Other countries don't take in Russians. Germany won't, Europe won't almost no one will.
[Or just 2](https://github.com/SimpleBlockchain/simpleblockchain)
I honestly like the minimalist looks of the post.
Visas aren't cheap for Australians either
Not sure what sort of problem you have but I can open my qt apps with VNC without issue. Sure it’s not an issue with your setup or something?
Are they doing something to address deployment? This seems to be the real pain, at least for beginners/small projects.
I suspect it is rather the Turkish wannabe sultans, not Turkey. I got a couple of good geek buddies from there, they always complain about resources getting banned, for years. The last thing that affected them was this https://protonmail.com/blog/turkey-online-censorship-bypass/
Yandex fully bends over to Kremlin now, since the beginning of this year. It became more fascist than Google. Google just won't let you to register an account if you don't provide a phone number, so you can just walk away and look for an alternative. Yandex will let you do that, then pretend that your mailbox was hacked, block it and start blackmailing you to give them your real name, address and phone number. The worst part is that they applied this idiotic policy retroactively, enforcing this to people who used their mail service for years already. That's how I lost a chunk of my online life but I didn't bend over to these gangsters. Never deal with them.
I tried to use PyQt5 recently for the first time and couldn’t figure out how to get it up and going. I tried on Ubuntu 17.10 and MacOS High Sierra. I also couldn’t seem to track down any good documentation. Was I missing something obvious? 
you're saying it yourself basicly. Learn how to use virtualenvs and version control (github, gitlab, vsts, whatever you like best really) they would have saved your ass, and learning to use them will do so many more times in the future
Hey, jervinho, just a quick heads-up: **basicly** is actually spelled **basically**. You can remember it by **ends with -ally**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
Can we get this post removed? I really shouldn't have posted this link. Just wanted to show an example.
Tkinter is already ubiquitous, it just lacks a good (Pythonic) API, and this is exactly what [Sandals](https://github.com/georgewalton/Sandals) aims to fix. It might not be the most featureful GUI library out there, but it's my personal favorite.
It shouldn't be too hard to setup, as easy as pip3 install pyqt5 If it doesn't work, I recommend setting up pyenv or a version manager, maybe you have an unsupported version of python? I do agree with the documentation being terrible. It was very sparse and I had to use tutorials instead, and sometimes the qt documentation was a little helpfull. 
Unfortunately I don’t have the time and resources to do it in the near future. But I am trying to get people to contribute to this. Can you do it? I can help you in terms of guidance 
&gt; Flexx is a pure Python toolkit for creating graphical user interfaces (GUI’s), that uses web technology for its rendering. Oh god, please no... Also, why did they list PyGObject twice? 
Pipenv makes things pretty easy for virtual environments. Other than that, learn how to use git. It will change your life, not only helping with the problem you had, but it will make you more efficient to be able to try things out and in one command be back to another branch.
One recommendation would be preparing a solid environment both for developing and for using. I use this setup: https://jacobian.org/writing/python-environment-2018/ pyenv and its Common-build-problems let you install and use any Python version, including globally in each machine or per-project basis (example: one project requires python 3.4.3, another requires python 3.5.2 and as an user you would like to use python 3.6.5 outside your projects). pipenv manages through Pipfile and/or Pipfile.lock the Python version of a project's environment, the project's dependencies and manages seamlessly a virtualenv for the project. It is also current PSF (Python Software Foundation) current recommendation for Python project requirements' management. If one's project relies in using requirements.txt, pipenv let its user both import from/export to a requirements.txt file.
Maybe like this: import numpy as np import random # 20 random numbers between 0 and 100 n_pool = np.random.random_integers(0,100,size=20) # make it a set so each number is unique rnd = set(random.choices(n_pool,k=10)) 
Maybe something like this? import numpy as np import random pop_size = 20 pop_range = 100 n_pool = np.random.random_integers(0,pop_range, pop_size) rnd = set(random.choices(n_pool,k=10)) .
maybe something like this? import numpy as np import random pop_size = 20 pop_range = 100 n_pool = np.random.random_integers(0,pop_range, pop_size) rnd = set(random.choices(n_pool,k=10)) 
https://nostarch.com/pythoncrashcourse This is a good book to get you started.
You can always install it into a virtual environment 
Vcn shouldn't have anything to do with it??
Many things that I've done with a GUI in the past, I now do in a browser. If wouldn't even give a GUI library recommendation until someone convinces me that their task can't be done in a browser. 
&gt;good looking Not a Mac they aren't. On Windows and Linux where you have on concept of UI consistency or even design, sure, they look great. But absolutely not on a Mac. Qt is the hipster Electron.
Nor licenses. BSD? MIT? GPLv3? ¯\\\_(ツ)_/¯
Thank you!
Technically if you ensure a number is not repeated, then it is in fact not random.
The best library, in my opinion, is the one that fills your needs the most
You can optimize that using a heapq
I made a Yahtzee style game called Sinking Ship. https://repl.it/@qwertyu63/Sinking-Ship The next major step is learning how to make it look better.
SB 2 will work just fine. 
Reminds me of redux.
currently a fairly big project composed of small dockerized services : - 3x flask micro-services (tensorflow model + data engine + app logic (login,dashboard ...) - a client front-end in react . my only big concern is trying to get authentication right @!$w JWT
The first issue I see is you used bittottent sync instead of subversion/github/bitbucket/etc. Always version your code. Package versions should be specified by requirements (e.g. numpy&gt;=1.10) that are in your setup.py. As people are lazy and don't update things, list what you used because well numpy 1.12 broke my code, but it didn't exist when I wrote the package, but even that is 3 years old at this point. I actually encourage using different versions within a company and on each of your computers. It encourages you to fix bugs in your code so it's compatible with a range of versions. Third, you gotta spend the time setting up you environment before seeing a customer. We used to have travel laptops, which would require a few hours to set up. Having my own work laptop now means I can skip that. I use virtual envs when a package isn't compatible with multiple versions of python/numpy/etc. It really should be. I use Anaconda to test out Python 3 6 while I use python 2.7. Also, unless you test your code on a specific set of versions, you don't really support it. Part of that includes running unit tests. Step 1, does the thing fail with syntax or import errors? Import all the files is the best test you can write.
nice ! working on something similar we should chat !
I use a Chuwi HI13 which is a larger screen, cheaper alternative to a surface. I love it. It does everything my real comp does, albeit a bit slower, but still. 
Redux was heavily inspired by ideas from eventsourcing and CQRS. These ideas have been around for a decade or so in the DDD community but they're not often discussed by pythonistas.
This is surprising, i started using Flask because the tutorial was the easiest to start with... Flasky And that was before the awesome Miguel tutorial 
I'm with you!
Thank you, thenerdy, for voting on CommonMisspellingBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Don't look for pyqt documentation. Just read the regular qt docs, since they explain everything already 
Oh. This must be a linux environment. I don't have that problem on windows. Unfortunately Qt will have a similar issue most likely. Both are powerful and flexible toolkits though. 
Yeh, this is Linux. Maybe I should try in out on windows where I control the environment and if I like it, then invest the time to get it running on Linux. That’s a good idea. I’m avoiding Qt because of the licensing. 
What was your experience? I work with a Russian person here in London. I assume she's on the same tier 2 visa as me. 
I think tkinter is a part of the standard library for all platforms. 
good bot
Thank you, boarhog, for voting on CommonMisspellingBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
I use a Surface Pro 2017, and it works great. A larger screen would be nice though.
Daaamn, Did not know that! I was aware of Ctrl + B to go to the implementation of the method but not this It's cool, thanks for the tip.
What are these kinks?
I dated a Russian girl and her dad was an ambassador to Russia. She gave me the scoop. Then my Russian Ukrainian friends told me the same thing. They said it's very very hard to be able to leave Russia
[https://www.sololearn.com/Play/Python](https://www.sololearn.com/Play/Python) You can race through this in about 3 hours i'm guessing, the "exceptions and files part" tells you how to read from text files, which could be useful to you. Or you can try to just wing it without knowing the basics and google your way to everything. Here for starters is what i found: [https://stackoverflow.com/questions/13428318/reading\-rows\-from\-a\-csv\-file\-in\-python](https://stackoverflow.com/questions/13428318/reading-rows-from-a-csv-file-in-python) But i'm also a noob so can't really do it for you, you'll have to figure it out. Question is though, why not be honest with your boss what you can and can't do? If he knows you can't write python why would he ask you to finish some code from one day to the other?
Store all the files in one directory. Do `import os` and `os.listdir()` to list files in that directory and iterate over that list of filenames.
Please provide an error message so we can help you. 
Thanks for the reply, I'm gonna give that lesson a try when I'm less time crunched as today definitely tells me I need to learn to cover myself if anything like this happens again. I've read that other link while googling as well, and it lead me down a beginning path to help me build the right regexs (I can output them to console fine) but getting them written to a file correctly is where I'm really falling down as I end up overwriting either the fields I'm trying to create or the lines as I go as well meaning I'm losing data. I appreciate the help 
Very interesting, thanks for sharing this information with us. I always thought the else on loops was only a myth
Yes, you can use the built-in blender gui and widgets to do anything python does. https://docs.blender.org/manual/en/dev/advanced/scripting/addon_tutorial.html
Many thanks :). Aside from the Blender/Python [documentation](https://docs.blender.org/api/2.79/), any recommendations for research/reading? I have a dislike for video tutorials, so I try to avoid them when at all possible. 
Oh i know that, you need to use append mode "a", as "w" mode overwrites everything, for example: with open("test.txt", "a") as myfile: myfile.write("appended text") You don't need to use "with" &amp; "as" but it's convenient because it closes the file after it has read everything in the indentation so you don't have to myfile.close
To add to that you need to use a "for" loop to iterate in python, which you can read about here: [https://wiki.python.org/moin/ForLoop](https://wiki.python.org/moin/ForLoop)
If you can find a plug-in that works like you want, I suppose it's not to difficult. But their API is pretty complicated
https://docs.blender.org/manual/en/dev/advanced/scripting/introduction.html Just googled it. I just started using python, but there seems to be a good amount of info here about exactly what your asking about. GL! 
Nor Sciter, which is a great middle between full-blown embedded browser and something more native.
I hear a lot that I should just look at documentation for other languages and just convert it. I’ve given it a look but for me personally that might be easier said than done. But like you’re saying, I had trouble getting it to import when I was trying to write the program. Never figured that out. Wound up using tkinter which wasn’t bad at all, but felt like there could be a better way.
But as an American I can go pretty much most places in the world and have no trouble getting a visa. If you're lucky and you got some in demand skills then yeah....you're a rich Russian good for you. Everyone else is beat though. Like, you never see any Russians on holiday. Theyre always from the european former soviet states.
Do you mean get a list of everything installed? Try ‘pip freeze’ on the command line
Yeah my team opted not to use for-else. It's so sparingly applicable, and the syntax isn't exactly intuitive (to us). The few lines it can save is not worth the possible confusion when the code will need to be debugged or modified. 
&gt;But as an American I can go pretty much most places in the world and have no trouble getting a visa. No, you need a job to get a visa for the UK, or anywhere in Europe really. Or Australia. It's about $2000 for a visa in Australia. For a holiday (90 days or less) you can just go without a visa, - to Western countries. Not Russia. We need tourist visas to go there just like they need tourist visas to come here. It's reciprocal.
Well, the `{]` should be `{}`. I don't know if that's the issue. Personally, I would run `sudo chown -R my_user:my_group ~/.local` to change ownership. * They don't protect the system in the sense of being a sandbox or anything. Virtual environments just allow you to install python packages to your own custom location, and control what is and isn't installed there separately from what is and isn't installed on the rest of the system. It doesn't provide any security; it's trivial to break out of a venv. They just stop different projects with different needs from accidentally interfering with one another. * I guess I wasn't clear. You should have removed that along with the other stuff in `/usr/local`. Every installation on your computer has a PREFIX that specifies where that installation is located. Within that prefix there are specific places where different things are kept. Binaries (stuff you can execute directly) are kept in `$PREFIX/bin` and python packages are kept in `$PREFIX/lib/python$VERSION`. Your system python installs all have a PREFIX of `/usr`. You somehow managed to end up with a few installs with a PREFIX of `/usr/local`, which usually only happens when you compile your own version. Using the `--user` flag with pip is sort of like having the PREFIX be `$HOME/.local` except that stuff there is shared with the normal prefix. Virtual environments are a way to simulate any PREFIX you want. You can actually see the prefix of a python installation by running `import sys; print(sys.prefix)`. Be aware that there will usually be more than just python stuff in most prefixes. If you're not familiar with the FHS then run `man hier`. What I mean by all this is that the stuff in a `bin` folder is directly related to the stuff in the corresponding `../lib/python$VERSION`. So running `/usr/local/bin/pip` will try to use the stuff in one of the `/usr/local/lib/python*` directories, which doesn't exist. * That should be quite rare. Most python modules that support python 3 will support 3.3 and up. If you just want to run an application then I recommend sticking to the version available in your repos. It should be patched to use the version of python that comes with your system. If that's not an option then consider upgrading your OS to the latest version. If that won't help then you can often turn to flatpak or snaps. PPAs that add extra python installations are okay in principle, but they will complicate your workflow as a python developer. If you really do need to run packages for a different python version then you will need to install that version of python. A PPA is probably the best option but, as I said, when you do that you will need to take great care to always be using the python installation that you think you're using. If you have many true python installs then you should always use two digit version numbers such as `python3.4`. `pip` also usually has version numbers (so like `pip3.4`), but it can sometimes be easier to run pip with a specific python version by running it as a module: `python3.4 -m pip`. That way you know exactly which python the pip is connected to. You can also always give the full path if you need to: `/usr/bin/python3.4 -m pip install --user &lt;whatever&gt;` will install to `~/.local/lib/python3.4`. Other commands associated with python (such as `pipenv`) won't necessarily have version numbers, so it can to tricky to know with them. You just have to remember what python installation you installed them under. Virtual environments will use the same version of python that you used to create them. So `python3.4 -m venv my_venv` creates `my_venv` as a python 3.4 environment. It's really all about just keeping everything straight in your head.
I'm surprised Toga hasn't gotten more attention: https://pybee.org/project/projects/libraries/toga/
Imo "else" is very understandable for me, and I love em 
no everything. 
Start with posting head shots. And diet. 
Yeah, the keyword is completely wrong. It really should be that the *else* should execute if the regular *for* does not, just like with *if*. And there should be a *onbreak* keyword or something instead - although there doesn't seem to be much use. The following is something I would actually use however. for x in []: print(f"found {x}") else: print("nothing there")
I had tried many GUIs, none really seemed to follow the idea of Python, easy fast and just works. So the solution, The Terminal. Check out Urwid. Of you are feeling more adventurous just right your own code snippets (functions or libabries) that will do simple terminal graphics, it's really not that difficult. If you want to plot just use plotly or any other similiar thing.
It's difficult to point you in the right direction, as computer modelling is a broad field, and very much depends upon what you are looking to model. Your best bet would be to ask the faculty for advice on a problem that relates to computer modelling. You don't need to solve anything new, just develop the skills related to the task. In general, I would argue that being able to program is more important than any specific computer modelling; at the end of the day, computer modelling is just a specific program. Yes, there are some things unique to the field, but any competent programmer will be able to pick them up with an investment of time.
Except they don't get tourist visas. Thats what I'm trying to tell you. Countries don't take in Russians unless they kind of have to.
Step 1: read the sidebar Step 2: post in the correct subreddit (see above) Step 3: read THAT sidebar
Sounds like an [X-Y-problem](https://mywiki.wooledge.org/XyProblem).
They totally do. https://www.gov.uk/government/news/new-online-application-service-for-uk-visit-visas-launches-in-russia &gt;In 2015, the UK issued 122,000 visas to Russians and 96% of applications were successful. &gt;97% of visit visas were processed within 15 working days. The average processing time in 2015 was 7 working days.
r/learnpython
Agreed. That would be a very reasonable alternative way to interpret the keyword, and thus why you shouldn't use for/else. In an if/else either the if block runs, or the else block, not not both. If a for/else. The else runs if the for block runs... which is completely backwards. I do like the general notion of an "onbreak" but I would make it an exception. It would be nice to flatten some block flow controls like for/while/if that might be nested in a try except by adding an except block: try: for x in something: do(x) except ErrorThingy as exc: print("We got an error thingy in something list") and make that simply: for x in something: do(x) except ErrorThingy as exc: print("We got an error thingy in something") but even then I still wouldn't recommend using it. 
So X (i.e pkgutils.iter_modules()) is the way to go?
like why am i trying to get all modules?
like why am I trying to get all the modules? I'm trying determine if a particular import is installed or not.
So why didn't you directly ask how to tell if module _____ is installed? If it's part of stdlib, it is installed anytime you install CPython. Give us the module name you are wondering about, and python interpreter (e.g. Cpython 3.6.5 or PyPy 3.5 v6).
It's completely irrelevant. We don't know how many would apply, how many of those were repeats, etc. Without context it means nothing. But you may be right, I'm only going off what the people are telling me
Right, it's just convenient. Why does it work like that though? I get that it automatically closes after it reads past the indentation but does it read the rest of the code if an exception is raised? Wouldn't it "break" before exiting the indentation? 
They should have been called `nobreak`. Otherwise, I think they’re great. 
here's my chain of thought if i can get the all the modules installed in my machine in a list. I can use 'in' to determine if it's installed or not. Example import json, requests, os, time json, os isn't a path of the stdlib.
Well Tbh I am still learning by doing stuff, I explored using smtb module which is useful for emailing, sometimes use that with the selenium module for web scraping. For a school science project I made a program which used a terminal command to get WiFi strength and write the number to a a text file.one thing ive been wanting to make but am still trying to figure out is how to make a aimbot program for gaming, as I think they would be pretty cool to make. Hope you get some ideas from that, you can pm me if you wanna discuss any other ideas.
I appreciate your comments. One of my main issues is I got really good at fixing a few hard to fix problems with Python and the whole thing got away from me. Your insight is helpful and I'll be following it. What you said about setting up an environment before I see the customer stings alot because normally I do, I was in a hurry, blah blah blah. Def won't happen again. I figured out the problem I had was not because of missing libs but because I upgraded to x64 python when I had been using 32. So more lessons learned at the absolute worst time. I've since pip \-U all the new packages and everything worked first time without changing the scripts. I'm reading a bunch about how to use virtualenv. Confusing but seems to solve a few problems. Thanks again.
Hey, I\_Piss\_Excellents, just a quick heads-up: **alot** is actually spelled **a lot**. You can remember it by **it is one lot, 'a lot'**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
not now, bot
`random.sample( &lt;possible numbers&gt;, &lt; numbers to pick&gt; )` might do most of your work.
The usual way is to try to import it and see if it fails by catching the exception. There's also `importlib` that'll help you find if it's installed.
If your python install doesn't have or can't find the os module, it is very thoroughly broken. Uninstall and start from scratch. [json](https://docs.python.org/3/library/json.html) and [os](https://docs.python.org/3/library/os.html) are part of stdlib, both for 3.x and 2.7. requests is not.
If his python can't find `os`, the install is borked beyond repair.
You're taking the square root of (2 times a), not (the square root of 2) times a.
&gt; They are just too confusing to use since no other languages have them. And the name is just...the. worst. `for`...`else`??
No. It's called sampling without replacement
I use these in nodejs all the time 
Like the idea but in case where I have more than one module that is not installed. Like, import flask import requests first run throws error that I don't have flask, then in the second run i get to find that i don't have requests installed. that n number of runs for every module that i don't have installed.
The `with` statement is used with a "context manager" object. A context manager is an object that has two special methods, `__enter__` and `__exit__`. The `__enter__` method is called before executing the code in the block and its return value is assigned to the `as` variable. The `__exit__` method is called when the block is exited by *any means* -- if there was an exception it is passed to `__exit__` as well, so it can be reraised or otherwise handled. See https://docs.python.org/2.5/whatsnew/pep-343.html for the official description of how it works.
Cool. What is the reason behind some methods having the double underscores? Am i right in understanding that part of python is coded in C and that C methods simply have double underscores?
your test string needs quotes. also look into the .lower() string method
importlib will help
Again, why? The usual way of dealing with dependencies is to tell a user what they need to have installed. Any particular reason why you need to figure out missing dependencies at runtime?
Well, it depends on whether you want to do their boundaries or their centers. In general boundaries are usually more hassle than they're worth unless you're looking for something "near" another city (eg, "find me laundry mats within 10 miles of Los Angeles"). For polygon boundary calculations, [Elastic Search has some decent features](https://www.elastic.co/guide/en/elasticsearch/guide/current/indexing-geo-shapes.html). For basic distance between geospacial points, Postgresql is great. None of this really has much to do with Python though.
I believe it is a coincidence. &gt;please do not respond you're not the boss a me 
That's cool! I didn't know that was a thing, always nice to add a neat little trick to your arsenal 
Wow. I wasn't aware of Python's else, but this form of implicit execution is just terrible because I *am* aware of the "else" in plenty other languages!
Wow! I didn't know that and confess that this make me a bit confused... Python is really full of surprises.
They are metamagic methods. Python's methods for implementing many behaviors in the classes. Someone wrote an [detailed write-up](https://rszalski.github.io/magicmethods/) on em.
I understand why people think it's a bad choice of keyword and not intuitive, but it's still just another language feature and it's there to be used. And honestly in all the code I've seen that uses for/else in a production environment, it's been obvious what it was doing. When used in practice I don't think it suffers much confusion. I think more of a problem is with `break` in general. They can be used in ways that make code very spaghetti-ish. They are essentially gotos that break out of a block of code that you would otherwise expect to finish, just like `continue`. Badly placed breaks and continues in parts of code that only run on certain conditions can cause a world of confusion. If placed at the top of a for loop, some "if condition: continue", then it's just a prettier way of wrapping the block in an if condition without adding a layer of indentation, and it's obvious what it's doing. It's easy to see the conditions in which the code runs. But if you start adding them everywhere in the block, weird breaks that you're not sure it's hitting and quitting the loop before you want it to, continues which skip an essential part of the logic but already ran some other code, it can get damn confusing to debug. I think for/else being confusing is more of a symptom of break being used in a weird way. If break is used in an obvious way, a non-complex way that is easy to understand, then the else will probably be obvious and a convenient way of handling things. If break/continue are used in ways that act like gotos skipping code and jumping out of blocks in weird ways, then else is going to be just as hard to understand.
The problem is that there's an implicit conditional jump in loops. The issue, in practice, is that there's of often an explicit if inside loop bodies that breaks (or returns or exits the loop in some other abrupt fashion). So the else at the bottom looks like it's tied to that if block but it's outdented so you begin questioning where it actually belongs. There's one while-else block I've ever written and when I look at it I start questioning my sanity. 
There's the for/else, the while/else, and there's also the try/except/else if you haven't seen that one. The `else` in a `try/except/else` runs if the try block finishes without an exception. [example](https://repl.it/repls/CapitalOddballResources) 
I would say they aren't so much forgotten, that they work the opposite of how it seems they should? Like, to me, in a for..else, the else would execute if the loop didn't happen at like. As in: stuff = [] for i in stuff: do_things() else: # do this if stuff was empty 
Try PyCharm's debugger mode for visualizing dataframes
This makes something I do commonly into an antipattern: if some_list: for i in some_list: # do something else: # do something else Now: for i in some_list: # something else: # something else
PyCharms datascience mode will do this. 
There are several python packages that will allow you to work between the two. xlwings and openpyxl are examples. If your just trying to do some quick visuals or edits on smallish dataframes you can use. To_clipboard and read_clipboard. 
It's wired because in other languages after try it's called finally which is more clear when it is executed... Also I find that a else after a successful for or while is more than missleading
As others said, you said it yourself - use of virtualenv and version control will greatly improve your workflow and save your ass. You could use a cloud provider(like Bitbucket) for this or host something yourself(like GitLab, a great option for self hosting git). Or you could deploy your app via Docker image, and that’s how you demo it to potential customers. There’s many options to solve your problems. Definitely spend time learning these tools and concepts until you understand it. Especially since your business depends on it. There are plenty of guides and videos on the internet to learn these things. It might be confusing at first, but you’ll thank yourself later. I run a local GitLab server at my house and it’s fantastic. You could use virtual machines for this, or dedicate a computer/server for it. However I’d like to add, whatever version control you use - back it up too! My GitLab server gets backed up every night to an external hard drive in case my server ever goes under. Good luck! 
It's that else implies 'do this instead', not 'do this after that' 
Python has “finally” too. “Finally” will always run, “else” only runs if no exceptions are raised
It's called dunder. So you can say dunder init dunder whatever
Doesn't winqtdeploy do that automatically?
Impractical IMO. I see very very few practical uses for this.
Tthat construct is just .... ugly. It's not surprising no other languages have it. Even Algol 86's universal *pick'n'mix* loop avoids it!
 block['hash'] is not expected_hash weoweo Don't check equality with is. Yeah string interning is a thing but use == instead assert (type(chain) == list) Use isinstance instead and don't use assert for checks because I'll run it under `python -O` just to see what breaks when asserts are disabled. 
Take a look at the tuts: https://toga.readthedocs.io/en/latest/tutorial/index.html I will admit the images are nothing to write home about, but technically there *are* screenshots there. Also, pip install toga-demo toga-demo will give you a quick demo.
I'm 60+ with no previous knowledge and am learning. It's about drive and motivation. Obviously basic intelligence, ability to work logically and patiently, and problem-solving skills help. 
Ya that'd be so nice compared to checking `if ___ is not None` all the time.
/r/pythonhomework 
&gt;And honestly in all the code I've seen that uses for/else in a production environment, it's been obvious what it was doing. I think I've seen it in production three times and it was wrong in two and confusing in the third. It's like using switch in a language with fallthrough by default; it should never be used because it's too unlikely to be used correctly.
New is fine. Just make sure the name fits the use. Else is when the previous block wasn't run. This else is a nobreak or something like that.
Jupyter is pretty good at displaying/pretty-printing Pandas Dataframes. You may have to fiddle with Pandas display settings to see large dataframes. It’s does not, as far as I know, give a GUI-driven method to modify them. 
URGENT NEED ASAP Location: anywhere Pay: negotiable Looking for a programmer to write an entry-level medium length college program based on classes and inheritance. Please message for more details. 
That's not very efficient. [`np.random.choice`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.random.choice.html) is much better.
I’m learning the language! I purchased Learn Python 3 the Hard Way and I’m digging it so far. Any advice for beginners?
Thanks! :D
Thank you very much for the input and inspiring words, I appreciate it! I will definitely message you if I have any problems.
Yes it is! You definitely have you have the motivation. Have long has it taken you to learn python? Thats awesome!
Right now I do everything in Jupyter, but I find myself spending a lot of time trying to figure out how something isn't indexing properly or just re-reviewing how to select row/columns/cells.
I hear you. You’ve asked a great question. I’d never even considered being able to modify Dataframes graphically. It’s a great idea. Hopefully someone out there has implemented it or will soon. 
it makes perfect sense to old programmers who had to construct the loop conditional manually 
Or `finally`, as in try / catch blocks.
Oh, I'm still learning. But I have a few learning curves. Learning about `bash` in Linux, `vim`, learning to touch-type and starting on Python.
&gt; Ideally, I would be able to use this project as experience to show one of the faculty at my university who does geophysics modeling. Why don't you start by talking to the geophysics faculty member you clearly have in mind. They may have suggestions.
I don't have much experience with Windows, but I'd imagine you want to review the docs for subprocess. Popen likely returns something you can use to interact with the program you open. It doesn't sound like you're passing anything to win32com.client.dispatch function to tell it to communicate with the process you just created. 
Did you build your bots from scratch?
I'm fairly new to Python and I was wondering if someone could explain to me why the else clause is being used. It seems like you could use the for loop, and then the if/else conditionals within the loop as opposed to using a for loop,an if block and then the else outside of the if block. 
Sure thing! Shoot a message whenever 
I don't know `np.random.choice`'s behavior... given a list of numbers, would it return random element at a time from the list without repeating? and how would `random.sample` help? it can give subset of a list, but OP wants one random element at a time without repetition
If you are choosing `m` elements without replacement from a list of length `n`. Shuffling and choosing is O(n) whereas `random.sample` and `np.random.choice` are O(m). If `m` is much smaller than `n` that makes a big difference.
1) The builtins refers specifically to https://docs.python.org/3/library/functions.html#built-in-funcs which is not what you are looking for 2) You are evading standard practice by not using a requirements.txt file https://pip.pypa.io/en/stable/user_guide/#requirements-files , then "pip install -r requirements.txt" will configure everything to run your module. 3) If the system is highly constrained/malconfigured, you can bootstrap a virtualenv in your script https://virtualenv.pypa.io/en/stable/ or with conda 4) If you hate yourself, you could parse the PYTHONPATH directory using import sys; sys.path or with site.getuserpackages(), or importing everything with pkgutils as you are. These packages are mostly for low-level solutions or more generally it's monkey patching https://en.wikipedia.org/wiki/Monkey_patch 5) try/except statements are considered safe. https://docs.python.org/3.6/glossary.html#term-eafp I don't see what the problem is with try: import X except: install X; import X but this is what a requirement.txt file is used for. 6) You could try munging around the pip module internals, but only contains modules recognized by pip if that is an issue (ie not the "built-ins"), For instance on Pip 10+, there is the pip._internal.get_installed_distributions(), you could possibly install modules at runtime with pip as well but this is hacky as well. 7) Contrary to many other languages, the import module runs code every time a module is imported. https://www.python.org/dev/peps/pep-0370/#implementation . For instance "import thirdpartytool" could bootstrap a new site-package directory in $APPDATA$ containing 30 more modules. This is essentially what happens with walk_packages is python is imports all possible packages to find info on them. This is highly inefficient and runs a lot of code, and will likely throw some nasty errors, and is probably the wrong way to achieve what you are doing. 8) The safest (but not efficient) way would be shipping the module with it's own virtual environment. This has cross-platform issues for which docker can be used if cross-platform replicability is an issue. I could be completely misinterpreting your goals here, but it is difficult to know without posting the code. If you are making some module with low-level requirements, then disregard the above.
**Monkey patch** A monkey patch is a way for a program to extend or modify supporting system software locally (affecting only the running instance of the program). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
A for-loop doesn’t always imply an expected break though. That’s what’s unintuitive about it.
Yes, they're both without replacement. Although now that I look at the source code, there's a faster approach. To choose `m` numbers from a list of size `n` if you don't mind reordering the list, do this: from random import randrange def choice(l, m): n = len(l) for i in range(m): r = randrange(i, n) l[r], l[i] = l[i], l[r] return l[:m]
the question is about ONE random element at a time from given list without repetition.. total 5 needed out of 8 is secondary.. you can use random.sample to get five elements first.. but after that you still have the task left to get one element from the list.. you'll have to either maintain a counter or use pop or use iterator..
If you want them one at a time rather than all at once, you can just `yield l[i]`.
I know at least dozen of people, who move to work around the world from Russia last few years. Most of all went to US, one to Germany, other to Czech etc. And they all was from little town, where I live. And get visa for EU or US or whatever othre country is complicated task, but not impossible and available for everyone, who have enough money.
so, you should suggest `yield` as solution to OP.. but you can instead simply use `iter` and `next` like I mentioned...
I learnt with python. What’s the problem with else statements? Don’t most Laing ages have an “else if” statement? Wouldn’t an else statement just be the same thing but with a condition?
This doesn't necessarily choose k elements. `choices` is with replacement, so it may choose the same element twice. Also passing through `set` can reorder things according to the hash function, which introducing an arbitrary ordering.
Thanks! I’ll give them a look this week. They sound great, for sure.
If you know how many elements you will ultimately be drawing, returning a list is the same thing and more efficient.
I recommend a 12” MacBook. Half the price but great for Python work.
I’ve been practicing my python code by making a Library with the idea that one day it could do anything. Kinda programming for programmings sake. It’s a task that I’ll never possibly finish so I’ll always have something to work on. Also been learning about git by keeping my project on github. 
Google Sheets actually has an underappreciated API! https://developers.google.com/sheets/api/ This does come with rate limits and is mostly a wrapper around a web-scripting api. It is cool that you can share it with people though. https://github.com/nithinmurali/pygsheets#pandas-integration Perhaps this third-party wrapper integrates well enough with dataframes to suit your needs. There's a couple Google Sheets Python wrappers so look around. http://docs.xlwings.org/en/stable/datastructures.html#pandas-dataframes This is a pretty cool package if you prefer to use Excel. 
Probably not all of it is worth it
That just means you hang out with rich people. Of course the laws are different for them lol.
One note though is these integrate directly with a spreadsheet and require a bit of setup to get working. If you just want to change values of the dataframe there are easier Python-specific solutions such as Spyder https://pythonhosted.org/spyder/variableexplorer.html or Pycharm https://www.jetbrains.com/help/pycharm/viewing-as-array.html Or Jupyter Notebook extensions https://github.com/quantopian/qgrid
I had to ~~Google~~ Duckduckgo to find out what "rhetorical" meant.
Set isPressed to true at the beginning 
\[x for x in list if x == 'x'\]
That's the entire reason why some languages do not want assignment as an expression, and the entire reason why this PEP572 wants to create an assignment expression operator. I think PEP572 is a bad move for the language in general. If you were going to include it, the `if boolexpr as myname` syntax makes the most sense to fit with the language. It matches `except typeexpr as myname` and `with contextexpr as myname`.
Yeah. Is that an allowed pattern in any other language? Because I've seen developers write functions that return either lists or None. 
Thank you so much man. I had no idea how to do this!
Which is what templating languages already do! 
Yeah C# will loop zero times if it's none
Pulling housing and car for sale listings using trademe.co.nz's API then analyzing the data to find the best deals. https://www.blakeporterneuro.com/learning-python-project-2-how-to-find-the-best-price-on-trademe/ https://github.com/blakeporterneuro/PythonTradeMeAPI
'Accidentally'? I can understand typing = instead of == by mistake, but I can't imagine ever typing := when i meant ==
I use them fairly often, too. Handy for taking a default action when you're searching through a list of items and don't find what you're looking for.
Awful unpythonic feature but this isn't a good showcase for why it is so awful...
I never liked pycharm or atom. I currently use Visual Studio Code for most things. It has a really nice python extension which makes life really easy. 
^^ This. Call it what it is. It clearly means `nobreak` not `else`. That and `lambda` for anonymous function. Why they couldn't just use `def` like go uses `func` for real and anonymous functions is beyond me.
It’s wrong as much as it’s wrong in the context of try/except/else. 
I personally like PyCharm, but as the prior commenter demonstrates, it's not too all tastes. In any case, you can try the free edition Ave at if you like it. I'm not sure if the free VS edition supports python, but I don't see why it shouldn't, at least on Windows. For non-Windows, PyCharm is probably still the best bet, as the educational edition teaches you Python too.
It makes sense for while loops but absolutely not for for-loops.
An issue is that 'else' works the same for while and for loops. For while loops it kind of makes sense to have an 'else' clause that is reached when the loop condition is no longer (or was never) met. There is nothing illogical or counter intuitive about that. But to use the exact same name and mechanism for for-loops becomes very strange since python for loops are for iterating over sequences and not doing stuff as long as a condition is met.
There's a library for this: [https://pypi.org/project/keyboard/](https://pypi.org/project/keyboard/)
In his example, he is trying with **notepad.exe** (a sort of **gedit**) so **popen** will probably not do the job. **popen** gives access to **stdin**, **stdout**, and **stderr** only.
Lol, maybe if they call it ducky it will have a better chance? “Let me ducky this” “Just ducky it”...
Do you know of a (good) autodocstring extension? In subl, there is [this glorious experience](https://imgur.com/a/ibard7o) that has flexible style (numpy, google, etc), type introspection, and all the goodies like five keystrokes away. I wasn't able to find anything close to comparable in VSCode, which is a real dealbreaker with the volume of library code I write.
I haven't been writing imperative code in a while but seeing patterns like this rather than utilizing an actual mechanism for searching for a condition seems very haphazard
I found these for autodocstring: https://github.com/NilsJPWerner/autoDocstring https://marketplace.visualstudio.com/items?itemName=azaugg.vscode-python-docstring Type introspection would be nice to have.
Vim before anyone else says it ;-) obviously a bit of a learning curve though.. 
Inability to use numpy style for either is a deal breaker for me. And both add a bunch of waste text that I have to spend a bunch of time deleting :\
- PyCharm - Sublime Text This question gets asked ad nauseam. You'll benefit from a quick search and a read-through of previous discussions.
Please tell me this PEP is a joke! After GvR stating the removal of assignment within expressions as one of the canonical ways of making Python easier to read and maintain; this PEP is a slap in the face. I believe that Python **is** better without it. If a name can be both assigned to and used, in the same expression then rules of precedence need creating and teaching. This was problematic in the C language. I wonder if this is a case of people wanting to help, and searching for something they can help *with*. Their thought being "other languages have it so it would help when translating algorithms from other languages". Unfortunately, this. PEP 572 would add in to Python another C language maintenance nightmare feature with little benefit. We have to beware the accretion of features for features sake in Python. I apolauded the bold changes needed in forming Python3, and feel there needs to be restraint in shoving aside something that has made Python so readable for so long.
This is the first time I'm seeing this operator. Is it even useful in any setting?
Oh man if boolexpr as myname would be super cool. It fits with every other use of 'as' in the language and someone familiar with python knows exactly what it means. With ':=' I think a lot of people will have to google it first to figure out what it means. It's probably too late to change it though. :/
It is PEP 572. It is a proposed new feature, still not officially accepted but Guido seems to like it, surprisingly, despite his past resistance to this sort of thing. The screenshot is a development branch of Python 3.8 with this change added.
What if I get an exception from the slack reporter? 🤔
This is the most shitty idea I've ever seen being added to Python. Why was this accepted?
Gonna have to watch this in the morning, but you're blog series on ports and adapters in Python had been a huge inspiration. 🍻
A useful case is to eliminate the need for redundant expressions in comprehensions: lst = [complex_func(x) for x in iterable if complex_func(x) &gt; 0] 
Using `as` here would actually contradict the existing meanings of the `as` keyword. For example, `with foo() as bar:` is roughly equivalent to: bar = foo().__enter__() # body here bar.__exit__() ...and `except SomeException as bar` is roughly equivalent to: if isinstance(exception, SomeException): bar = exception # body here del bar It's a subtle trap, for sure: it's very easy to get mixed up and accidentally think something like `with foo() as bar` would be translated into the below, for example. bar = foo() # body here # cleanup here This problem is exacerbated by the fact that many (but not all!) context managers are implemented such that `foo() == foo().__enter_()` is true: it becomes far too easy for somebody to develop an incorrect mental model of how Python works and run into "mysterious" bugs later down the line as a result. 
Not 100% sure what the point of this post is. PEP 572 explicitly lets you only bind to a specific identifier rather then any arbitrary assignment target: this means there is no tuple unpacking. So, something like `a, b := 1, 2` would be equivalent to `a, (b := 1), 2`. If your point is that it's easy for people to forget the identifier-only restriction, try doing things like tuple unpacking, and get mysterious errors as a result, then sure, that's a reasonable thing to bring up. However, you should probably contribute something to the ongoing discussion on the python-dev or the python-ideas mailing lists rather then on reddit -- after all, the mailing lists are where the decisions are made.
I find the \`else\` on loops to be very useful and have used it many times, but only when there is a \`break\` in the body of the loop. How else are you going to know whether the loop exited normally or due to the \`break without initializing and setting and testing an extra switch variable\`? And, as far as the word 'else' sounding unnatural, just think of the \`else\` as corresponding with the \`break\` statement: you either 'break' out of the \`for/while\` construct or else you do the \`else\` block \(when there's no break.\)
A link to [PEP 572](https://www.python.org/dev/peps/pep-0572/) for the lazy / on mobile
Well in this trio of examples, each has its own interface subtleties. The `except` needs a type (not a value) which may have been thrown. The `with` needs a value which refers to an object supporting the context interface, so it's not really that far different. In each of those existing cases, inside the block, the given name is the captured object which applies. Personally, I really really hate the idea of an assignment inside parentheses where the new value/name exists outside those parentheses. call_my_method(variable := complicated_expression) do_something_else_with(variable) If you allow for assignment-in-conditional-statements instead of the whole enchilada of assignment-in-the-midst-of-expression-anywhere, then you can fix things like the stupid `re` interface without making it confusing to see how assignments are scoped. if re.search(r'\d+', text) as m: print('Found {m.group(0)}.') 
&gt; How else are you going to know whether the loop exited normally or due to the \``break` without initializing and setting and testing an extra switch variable\`? You can do it by placing the loop into a function and then do an early `return` instead of a `break`. Then, the code that would have been in the `else` clause simply goes after the loop in the function. Something like this: def search(needle, haystack): for x in haystack: if x == needle: return x raise NotFoundError()
Restricting assignment expressions to just conditionals is a reasonable proposal and has been floated out several times (and is currently explicitly rejected within the PEP). The problem is that if you restrict this feature to JUST statements of the form `if BOOL_LIKE as NAME:` or `while BOOL_LIKE as NAME:`, you'd end up eliminating a lot of potential use cases. For example, one of the first proposed use cases was to let you introduce intermediary expressions into list comprehensions without having to recompute a bunch of stuff. For example, the argument is that it'd be nice if we could do this: results = [(x, y, x/y) for x in input_data if (y := f(x)) &gt; 0] ...instead of having to write out an explicit for loop or having to do something like this: results = [(x, f(x), x/f(x)) for x in input_data if f(x) &gt; 0] Here's another example from the mailing list -- it'd be nice if we could convert code that looks like this: diff = x - x_base if diff: g = gcd(diff, n) if g &gt; 1: return g ...into this: if (diff := x - x_base) and (g := gcd(diff, n)) &gt; 1: return g Or, using the other proposed notation, into this: if ((x - x_base) as diff) and (gcd(diff, n) as g) &gt; 1: return g Basically, there _is_ some value in permitting assignment expressions for arbitrary expressions -- arguably, that's the whole point. If that's the case, one way we could still try and repurpose the 'as' keyword would maybe to allow binding any arbitrary expression, but only if that expression is contained within a comprehension, if statement condition, or a while loop condition. The downside would be that would introduce a pretty specific and convoluted special case to the language and make it harder to refactor code that uses this feature -- IMO that trade-off isn't worth it.
But then you wouldn’t use else. Else and break show up together always. 
Else is when the condition is false. While...Else makes perfect sense. Less so for For, but it uses the same keyword as While. 
I use [SciTE](https://www.scintilla.org/SciTE.html).
Hello there friend. I have a question, I am a novice programmer but I have a question, how do you guys keep up with the gigantic amount of documentation and changes (PEPs)? I like to think that I'm a little above average intelligence and that I can learn concepts pretty fast, plus I read a LOT. Still, when it comes to keep it up with everything, I feel like its impossible. How do you manage it?
Yeah, in this specific case. Not in any other programming language. Hence unintuitive.
How is this different from just: if (pattern.search(data)) is not None: ...
That's kinda the point… Not saying I'm a fan of the operator in the proposal's current form, but the this would be entirely expected behavior.
Taking side of "as" proponents - what about: &gt; lst = [y for x in iterable if (complex_func(x) as y) &gt; 0]
You don't have access to the search results in your case. Often people need `results.group(3)` after the search succeeds. But there are better solutions than this PEP.
you can use "match" latter inside expression. But IMO it would be better to go with "as" if (pattern.search(data) as match) is not None: print(match)
Ahh, I get it. Can you give me an example of a better solution in cases like this?
There are people who write python code for other projects. You just need the documentation for the version of python you're using for that. Your focus is on your project and PEPs are irrelevant (except maybe a style guide chosen by your team, e.g., PEP8). There are people who are considering the past and future of the python language. Python IS the project, it IS what they focus on. The PEPs are the talking points and eventually raw materials to go into the documentation for the next python.
But then you wouldn't be able to use "match" outside the block afterwards?
what are you using Python for* Currently using python to create - Reddit Bot -Web Scraping -Mini Simulation Projects -Data Analysis -"hello world"
i'm just learning python; but anyway i use pycharm, and i love it; i love the visualization and the interface stw
About 3months Bank Simulation , I am so sorry I wanted to relieve this memory hahaha Spent most of my time watching YT videos , recently also started with HTML , CSS and JS
Neat! I’ll have to play around with `dis` when I get the chance.
seconds are not supported according to the docs: https://schedule.readthedocs.io/en/stable/api.html#schedule.Job.at
Thank you for the response. I just feel like I am so lost when it comes to those PEPs, I see people talk about them and know them inside out, and here I am, just trying to figure out whats wrong with my code.
Scripting. Mostly for Ops configuration and custom tools, but I've also done some backend development with Django. 
Mainly web development with werkzeug , secondary for scripts when the logic is too complex to fit in a bash script. 
Coded requests bases API client with flexible cache timeouts. Couldn't find anything that could let me set different timeout for different endpoint so end up creating one. Here [https://github.com/shon/Portale](https://github.com/shon/Portale)
Started out as a hobby with simple scripting. Made some fancy maps with folium and pandas/geopandas, and showed it to my boss. Now I'm doing customer churn analysis at work.
I'm hoping that this PEP doesn't reflect a change in Python's design philosophy. But unfortunately, it does seem like it. Quite a few of the recent PEPs were contentious and were accepted despite the community's reservations.
Given the other post is by OP too, I'm guessing they're unhappy with the proposal but can't express in words why. The other post was kinda stupid, but this one is interesting: whether to allow anything other than `identifier := expr` as the syntax. It's an interesting discussion, and possibly for now they won't (a lot of big names seem in favour of the restriction). Which of course would make this post completely moot.
read pep
Why accidentally? The operator would raise a syntax error in previous versions of Python.
Creating a portfolio manager for stocks Creating a short overview of the current state of my crypto holdings Doing exercises of several YouTube tutorials, as well as automating the boring stuff Some object oriented, some quick and dirty. I'm an experienced developer in a language totally not related to Python. It's called PxPlus! 
[Link](https://www.python.org/dev/peps/pep-0572/) Oh my... &gt;Abstract &gt;This is a proposal for creating a way to assign to variables within an expression. That is a terrible idea. Absolutely terrible. &gt;Rationale &gt;Currently, this feature is available only in statement form, making it unavailable in list comprehensions and other expression contexts. Yes, because list comprehensions like a=[i for i range(0,25)] are so compliant with Simple is better than complex. Complex is better than complicated. Flat is better than nested. Sparse is better than dense. Readability counts. Of course we need variable assignment messed up in there. Rationality aside, **all** the examples provided show what a shitty idea this is and how badly it fits with python. assert 0 == (x := (y := (z := 0))) Say what?! &gt;Recommended use-cases &gt;Simplifying list comprehensions results = [(x, y, x/y) for x in input_data if (y := f(x)) &gt; 0] stuff = [[c.update(y=f(x)) or c['y'], x/c['y']] for x in range(5)]
What is the deal with `:=` operator? Is this something new?
thx for all the comments stw
The PEP discusses this, although I don't really like `:=`: Since EXPR as NAME already has meaning in except and with statements (with different semantics), this would create unnecessary confusion or require special-casing (eg to forbid assignment within the headers of these statements).
Yes, [PEP 572](https://www.python.org/dev/peps/pep-0572/), assignment expressions.
And this is more a problem with `re` being a little awkward &amp; unusual, and requiring you to define your variables before your if statements, I think.
The only thing I like about this pep would be that I can now write "if key in dict or else" with less lines: Example with kwargs: before: value = kwargs.get('myparam') if value is not None: # myparam is defined, do something else: # myparam is not defined, do something else -- or this -- if 'myparam' in kwargs: value = kwargs['myparam'] # do something else: # do something else after: if value := kwargs.get('myparam'): # myparam is defined, do something else: # myparam is not defined, do something else
really interesting! 
Thanks! lol when I started every analysis had to be run "by hand" by a different person then the results emailed in PDF form. Automation makes things soooo much better
Haha XD I'm just starting to learn python, and I was curious about what you're doing. thx for sharing.
Along the same lines I think is the "finally" keyword for try, except. 
You can use [notifiers logger](http://notifiers.readthedocs.io/en/latest/Logger.html) and just log the exception too. Full disclosure, I'm the creator of this 
That's cool!
Well, there is already an idiomatic way for such case which relies on the [EAFP](https://docs.python.org/3/glossary.html#term-eafp) principle. try: value = kwargs['myparam'] # Do Something except KeyError: # Do smething else
How come these two have the same entropy ? spass.generate_random_password(length=20) # {'password': "uOp/J:2Mejvz#-v`h'?1", 'entropy': 131.09177703355275} spass.generate_random_password(length=20, ignored_chars='\'\":;&lt;&gt;,./?[]{}\\()') # {'password': 'rLr3oku%J7a|*y28SjHv', 'entropy': 131.09177703355275} 
That's not the case. Currently, in Python, `SOMETHING as NAME` _never_ implies `NAME = SOMETHING`, but instead `NAME = ANOTHER_THING`, where the definition of `ANOTHER_THING` depends on which statement it is used in: * for `import SOMETHING as NAME`, `ANOTHER_THING is importlib.import_module('SOMETHING')` * for `with SOMETHING as NAME`, `ANOTHER_THING is SOMETHING.__enter__()` * for `except SOMETHING as NAME`, `ANOTHER_THING is sys.exc_info()[1]` and the branch is only taken if `isinstance(ANOTHER_THING, SOMETHING)` is true. 
Except finally always runs no matter what. Even one an exit with return or break, finally should run. 
With a single pattern it doesn't help much, but if you have multiple patterns it would allow you to use `if...elif...` etc. It's ok if you're matching patterns in a loop or the top level of a function, because then you can end each case with `break` or `return`; otherwise there's no easy solution. That particular problem could be avoided by revising the `re` API so it can be used without assigning to a variable, but the API as it stands does illustrate a good use case for an assignment expression.
Yuck. I know it's considered kosher in Python, but if you use any other language on a regular basis, it's hard not to wince at seeing exception handling used to handle a condition that's not "exceptional" in some way. It's confusing to readers of your code, and it's a potential performance problem because throwing an exception is _far_ more expensive than a simple `if` statement in most languages.
Yuck. I know it's considered kosher in Python, but if you use any other language on a regular basis, it's hard not to wince at seeing exception handling used to handle a condition that's not "exceptional" in some way. It's confusing to readers of your code, and it's a potential performance problem because throwing an exception is _far_ more expensive than a simple `if` statement in most languages.
I use for automation testing of data storage. Professionally, of course :\)
Not trying to disparage you but how did you get an interview for a ds job requiring 5 years of experience but not know what you should study? Do you not have the 5 years? How did you stand out to get them to ask you to sit for an interview. Reason I ask is I have math/stats/python experience and can't even get a response to entry level ds jobs.
To quote a famous philosopher: "Do it, just do it". Python is a really beginner friendly language, with plenty of resources in a vast variety of field. What is your current skill level ? Why do you want to learn programming ? What do you like outside of programming that you could apply programming too ? If we know more about you we should be able to point you to nice resources, but motivation have to come from somewhere else. 
There are numerous tutorials. But don’t do just a tutorial from start to end but also give yourself a project. Like code Conway’s game of life. Or create a database where your list and sort your favourite movies. Or go for mathematics and physical simulations if you re into those things. It doesn’t matter actually but it keeps your motivation up. If I code just for the sake of coding, I get bored pretty quickly. Also that’s not how you learn coding in an efficient way. 
Both examples are absolutely horrible.
it's faster if you know that the exception only happens very rarely
If you have the money to blow, sure depending on the tutor. But honestly, there are SOOO many free resources it’s really hard to justify. Stackoverflow + google for questions Sentdex for fundamentals Python documentation is generally very good
The meat of a ds interview is going to be your ability to solve problems using algorithms. More than likely you'll also need machine learning in your background. Python is just one tool in a toolbox of many tools. Make sure you can write adequate python and are proficient enough that you can actually solve problems in real time writing python. Think about it this way: you have about an hour with someone. They're either going to have you do one big problem or several smaller problems. If you aren't proficient enough with Python to solve those problems in that span of time, you won't make it further in their interview process. 
Block chain Development is the hottest topic between the developer community as its growing rapidly and still the number of developers are very less. For the last 6 month requirements for the block chain development has increased just like the price of bitcoin. But due to the fix no of adequate developers companies are struggling to find developers. Due to this mismatch in demand supply graph developers also increased their service rate drastically. A normal solidity expert with 1 or 2 year experience is charging around $40–50 per hour and rates on and on. Companies are even ready to pay this amount but still can’t find developers. Most of the Blockchain Experts work as a freelancer or on a contract base you can find them here https://eulerr.com/project/cat/blockchain/
Like others say, I really dislike this PEP. If it happens that it gets implement, I will probably end up setting up a GitHub Linter Bot for PRs to my open source projects to make sure that this doesn't creep into my code projects
Is this fully compatible to CPython, and if yes, why e.g., is this developed as a separate distro vs pooling the efforts and improving the efficiency of the canonical CPython?
True...
So I calculate entropy by taking the log base 2 of the total number of possible password combinations given the length of the password and the number of characters in the available character pool. It works out to be log\_2\(cp\^pl\). For passphrases I take the total number of words in the word bank and the number of words used in the phrase to calculate the total number of possible combinations and then take the log of that value. This works out to be log\_2\(wb \^ nw\). The deviation is calculated by taking the number of possible padding characters \(the characters that I randomly inject between words\) and finding the bitwise entropy of those characters. This calculation isn't entirely correct but is good enough to tell you what the \_minimum\_ entropy is. I am looking for someone that can help me figure out what the actual entropy of a passphrase with random characters padded inbetween words would be. Let me know if you have any knowledge on that!
Nah man I appreciate your candour. I'm not sure really, I guess right place right time maybe? I guess where I'm coming from is, I've learned as much python as I've needed it. But there's an absolute ton I don't know (I've had no formal CS or data science education), and I was looking to try and "Cross check" if you like, to see where I'm lacking. 
Maybe try r/datascience or r/machinelearning
Here's a sneak peek of /r/datascience using the [top posts](https://np.reddit.com/r/datascience/top/?sort=top&amp;t=year) of the year! \#1: [How I went from no coding or machine learning experience to data scientist job offer in 20 months. \[x-post r/learnprogramming\]](https://np.reddit.com/r/datascience/comments/713hnw/how_i_went_from_no_coding_or_machine_learning/) \#2: [newbies be like](https://i.redd.it/o4mshdf4hui01.jpg) | [147 comments](https://np.reddit.com/r/datascience/comments/80rhvh/newbies_be_like/) \#3: [Impossible Job Requirements](https://i.redd.it/duzubotgcuqz.png) | [57 comments](https://np.reddit.com/r/datascience/comments/75aqpg/impossible_job_requirements/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
I checked in google and you might take a look at some of these: https://theswissbay.ch/pdf/Gentoomen%20Library/Programming/Python/ http://centauronorte.cs.buap.mx/IMAGENES/PYTHON/ www.bogotobogo.com/python/files/pytut/ gluek.info/files/books/programming/python/ Hope it helps!
Ah, the famous philosopher - Shia LaBeouf.
Machine learning and data analysis side projects. My job is using tensorflow to find treatments for sepsis so I use it at work too.
Indeed. 
I believe the problem is that the variable in the if condition overrides the local one above.
I think tutoring only become really interesting when you already have pretty strong basic knowledge and you're starting to face complex problem in software architecture for example. Until that point, there is so many good resources from beginner to advanced that I don't think it's that valuable.
It sounds like you have made progress, but you're putting pressure on yourself to be some sort of expert already. You need to ease up on yourself. Otherwise, you will not enjoy anything you decide to try, will burn out, stop, and become more depressed. I once climbed a mountain. When we were approaching it, it was intimidating. When we got there, it was not. Why? Because once at the mountain all I could see was the path in front of me. Focus on getting better each day, and you'll eventually be very good. Focus on being great now, and you'll just despair at how you're not yet so.
Or why not support a let expression like some Lisps? 
I learned Python from a MIT Course 6.0001. There is also a book available completely based on the lectures covered in the course. Which means I had videos and written notes to learn Python from. And I have to say it, it was hugely helpful. You can give it a try if you like! The course is available for free on YouTube. :)
If you’re having trouble getting a job/interview then just remember, entry level means “we don’t want to pay you”. It’s really for people who are very novice but don’t mind getting shafted for the work experience. If you have all that experience then you likely have 5 years or the equivalent once you graduate.
The mechanics of python are not hard, as you probably know. I think 5 years of exp with it means that you have done something bug with it. For example can you explain how to take output from Google ngram word occurrence probability to some other dataset... Like an internal database with customer comments. Then after explaining it can you build that pipeline in python in at least a skeleton form. It's a simple problem in some ways but knowing how to hit an api and make a db call aren't the hard part. It's doing it for all 10,000 comments and get something a manager can understand for output that matters. 
For really quick introduction to python syntax [codecademy](https://www.codecademy.com/fr/tracks/python) For a more academic perspective [Coursera Programming for Everybody](https://fr.coursera.org/learn/python) For a more self taught approach [Learn Python the Hard Way](https://learncodethehardway.org/python/), personally quite like this one. For a practical approach [Automate the Boring Stuff with Python ](https://automatetheboringstuff.com) 
And may others depending on what you are interesting in (data science, video gaming, machine learning, web app)
Hint : use loop.
If you don't believe that anyone could make that mistake, I think you are underestimating the capacity of programmers to be confused.
What’s the name of the python extension 
If you're feeling you're writing some weird code, trust your gut it's probably true and try to make it better. It won't work on your first try but you'll learn more trying than asking.
Do you know about while loop or for loop ? 
This is more data science specific, but still good. Read this article and figure out how to do some of these things in Python. https://towardsdatascience.com/data-science-interview-guide-4ee9f5dc778 
Getting a PhD in astrophysics. 
You should try /r/learnpython
I do large scale web scraping projects for a living (I'm the founder at Datahut). Here are a few challenges of web data extraction at scale. You need to understand these challenges to estimate the time. The volume of data Crawling, Extracting and parsing data at scale requires sophisticated infrastructure that has the good computing power, robustness, agility, and scalability. Data warehousing When working with websites with a large quantity of data, you have to take account of the Data Warehousing infrastructure. These are websites with hundreds of millions of records. If the Data Warehousing infrastructure is not properly built - Searching, filtering and exporting data will become hard and time-consuming. The Data Warehousing infrastructure needs to be scalable, perfectly Fault tolerant and secure. Anti- Scraping Technologies Websites implement anti-scraping technologies that make data extraction nearly impossible and costly. LinkedIn and Amazon are a good example for this. It takes a lot of time and money developing a technical solution that can work around cutting-edge anti-scraping technologies at scale. Honeypot traps To detect web spiders, some website designers put honeypot traps inside websites. They may be links that normal user can’t see and a crawler can. Some honeypot links to detect crawlers will have the CSS style display: none or will be color disguised to blend in with the page’s background color. Pattern Changes Every website will change their designs now and then, and so should the web scrapers. Scrapers usually need adjustments very often, as a minor change in the target website affecting the fields you scrape, might either give you incomplete data or crash the scraper, depending on the logic of the scraper. Hostile environment/Technology There are some clients side technologies such as Ajax and Javascript that make the data extraction difficult. Quality of data The records which do not meet the quality guidelines will affect the overall integrity of the data. Making sure the data meets quality guideline while crawling is difficult because it needs to be performed real time. Faulty data can cause serious problems if you are using any ML or AI technologies on top of data. These are not really exciting information for those who need to get started with a large scale data extraction projects. Here is one tip you Out of these 6000 websites, there might be a few built on similar technology ( eg Shopify or Magento). You will be able to group these and build a generic crawler for these. It depends on your technical expertise as well. Hope this info helps. Happy to help you if you need any 
For machine learning definitely https://www.coursera.org/learn/machine-learning, regarding data science you'll have to ask around but I think you already have enough to get you started.
&gt; It won't work on your first try but you'll learn more trying than asking. Is the best answer I've seen on this sub so far.
What is the problem with this?
no thanks
Can you block the script?
 print("Welcome to Average Grades Calculator") print("The Average Grade is",sum([int(input("Enter the {} grade ".format(g))) for g in ['1st','2nd','3rd','4th']])/4)
I would do something like loop = ['1st', '2nd', '3rd,', '4th'] all =[] for x in loop: msg = "Enter the " + x + " grade " all.append(int(input(msg))) avg = sum(all) / 4 print("The Average Grade is", avg) This is for a school right? I've seen this question before.
Awesome! Thank you very much... 😉
Concatenating strings using + is really bad practice and inefficient. Consider using this as an alternative, it is much more efficient. "Enter the {} grade ".format(x)
Oh I see, google has updated recaptcha to detect selenium? Perhaps you could play with User Agent strings, or see if it would work with the Firefox driver. It’s possible they’ve got more tie-in with the Chrome driver.
Creating an embedded webserver for a networking product, kind of like the config webpage on your router. The previous implementation was written in c spitting out hand crafted html &gt;shudder&lt; Flask to the rescue 
That's probably better handled as a default value before the loop. Also, it's pretty ugly. 
Here you [go](https://insights.dice.com/2018/04/25/job-interview-questions-machine-learning-developers/). Thank me later. 
Developing a website in Flask and an updater tool for updating an application that doesn't have auto-updating built in. The updater is particularly challenging because I the site it's updating from has no API so I'm using web scraping and parsing it with BeautifulSoup. 
I've just tried with Firefox webdriver just after asking for help (my bad) but it actually does the exact same thing. I'm just discovering what is a user agent (I've been programming only for few months now) but I'll search in that direction although I've tried from different IPs and it doesn't change anything. Thanks for your help. I can't be the only one experiencing this issue right know, or at least, I hope 
Assuming scoping is done properly, this will mean a memory side performance benefit for 2 production level apps I work on. Variable storing is unfortunately taxing, even if storing None.
But that’s always been the case. 
Ahh shit aye! My bad... It's Sunday!
That'll do it. 
This is more of a /r/learnpython, question, but I'll answer! First of all, everything except for the final selection of the top 3 rows can be done by sorting: df = df.sort_values(['include', 'Rank'], ascending=[False, True]) This sorts the dataframe by decreasing include (all the 1's first), then by increasing Rank (to minimize the Rank within each include 1 or 0) Next you can just do a ``groupby``, which is an iterator that produces tuples of (name, dataframe). I would write this code slightly differently for my own use (e.g. with a function yielding the tuple), but hopefully this is easy to follow. (I also wrote this in a way that scales, so that if you have 2000 groups the code will still work reasonably quickly). First, define a list that will contain all of the smaller dataframes, i.e. one for Group1, one for Group2: grouped_dataframes = [] Now use the ``groupby`` function to create the sub-dataframes that get appended to the list -- but only the first three rows. for group_name, df_bygroup in df.groupby('Group'): grouped_dataframes.append(df_bygroup.iloc[:3]) (Note that you don't do anything with ``group_name``, it gets produced by the ``groupby`` iterator but in this case you don't need it). Finally, just assemble all the length-of-3 dataframes (there are two of them, because you have two groups) df_final = pd.concat(grouped_dataframes) If you want the result sorted by rank like you have in your final outcome example, then do the following: df_final = df_final.sort_values(['Group', 'Rank'])
I would assume this is an artifact of * being ALPHA * a bug in the current reference implementation Because this should either be not allowed without clarifying parenthesis, or simply doesn't make sense. I think people are going a little too far with shitting on this before its implementation is even guaranteed.
I like this feature and wish Python’s assignment statement was written like this too. The OPs example is consistent with existing Python syntax: Python doesn’t have block scope so assignment of any kind in an if “block” will potentially reassign existing local variables. Why is this surprising?
Not to mention all this freaking out is unnecessary. You can still write code as you see fit. Just be aware of it when viewing code written by others. 
Huh, it doesn't work through a proxy. It won't even *resolve* through a proxy.
You can't say "you should never". Firstly, it's safe to assume that any tutorial is under * developer machine conditions * "make sure your security is set up properly" conditions These tutorials never say "this is how it should be done". Even the official docs in some of these tools show commands like these as an example. They are easy to understand. If you can't figure out decent security, your on your own. Or look for a tutorial on that too /s. Really, these concepts are fundamental in terms of the "production grade web app" and if the developer is looking at these tutorials without appropriate training from official sources, then you have bigger problems than an open http port.
Congrats! 
Because chipset makers like to own everything for stupid reasons? This kind of thing happens with the linux kernel all the time. Companies release their own modifications to work better rather than just integrate it to the main kernel. Or they do make a pull request, but want everything to be their way (coding style, practices, etc) even when it's garbage sphagetti code. Linus has had a fair amount of "whoever made this patch should be fired on the spot" rants because of this.
I’m mainly I data science so I’ll try spyder.
That really depends on at what level reCaptcha thinks your a bot. If it's at the "heres the data we have about you" level, find some way to make your cookies and history what a normal person would be (for weeks at a time). Stuff like youtube, google, checking email, the works. Otherwise if it's at the "your mouse movement is funky" level (which there's some debate on whether or not recaptcha even checks that. Even debate amongst different google sources, hilariously), then you're kinda out of luck unless you find a way to manipulate a cursor through selenium.
Try f strings! https://www.python.org/dev/peps/pep-0498/
Looks good but should be slack_exception to not break PEP8 :)
&gt; Even the official docs in some of these tools show commands like these as an example. Interesting, but I have never seen such docs, most of them bind to localhost. Every Python web framework or web server bind to localhosts by default.
`=` raises SyntaxError, `:=` doesn't.
Time to start a branch of Python that patches out this stupid syntax.
Actually just going on a website with a browser opened with selenium and clicking on the reCaptcha manually won't work... Google seems to be detecting that I'm using selenium and then just won't let me go through. It has worked for more than 2 months so this is fairly new and can't find a way to go through... And also can't find anything related to this issue on internet (have been looking quite a lot). Tried the this on 3 different computers with 3 different IPs and doesn't solve it... 
There's two issues with that though: * it's a company literally getting free labor * when it gets to the point of the company releasing separate patches, they want to own it entirely.
This is really cool. I only went through your ipynb example, but I was expecting A) to not understand the kinetics since it's been 6 years since that class and B) to not understand the code because let's face it, most nuclear codes require a couple PhD's to even begin to understand how to use them. I was pleasantly surprised that it's easy and readable! I like how easy it looks to just use set_rho() and let the "reactor" run a bit more. Therefore you can can calculate rho from any kind of reactivity change as a separate exercise, then insert that into the virtual reactor. Overall it looks like you achieved your goal of making a simple code for people to learn with!
Link to fake sports league? Sounds fun
I highly recommend Python Crash Course book by Eric Matthes, it was the kickstarter book for me. It starts by teaching you the language basics and then you practice the language on 3 projects. A piece of advice, draw a plan before you begin, ask these questions, why do you want to learn Python? What is your the next step after finishing that book? Do you really want to dive deep into Python? Many people learn a new language and then they just forget it as they don't practice after learning it.
Automated my profit making. 
I'd done some web development previously, but Python is my first non-web focused language. Although I'm using it for the backend on my website, Python has piqued my interest in Machine Learning/Deep Learning/AI. The amount of free resources out there, like Tensorflow, OpenCV are pretty amazing.
Thanks. Check out the example files where thermal feedback is used - you can add reactivity (or increase steam demand) and the system will return to rho=0 with a new operating temperature following a transient.
I don't have the time to list out all the occurences I've seen, but just as an example, pyramid and paste/plaste default to 0.0.0.0 (or they did the last time I checked less than 6 months ago), and I've seen companies, even reddit, in their official docs use 0.0.0.0 for their open source software (you can find one of these in the reddit archives r2/r2/lib/einhorn.py and in their websockets repo) I've seen 0.0.0.0 more than I've seen localhost addresses. Not to mention, so what if you're binding to localhost, that's still not enough to protect you.
r/learnpython
Do you happen to have a link to find it free? I just checked google and the top websites that came up are websites to buy it from
Have you tried using proxies? Your script might be generating too much traffic from your IP.
It works.
Endless procrastination while I refactor without making actual progress.
It worked very well for like two months (using it close to 24/7, but it's a slow script), I stopped using it for 10 days and now it isn't working. I haven't tried using proxies but I tested this script from different computers based in different countries and it doesn't work... Very strange. Couldn't find anything similar right now, just this guy having the same issue but 3 years ago... (without any solution) https://groups.google.com/forum/#!searchin/selenium-users/captcha%7Csort:date/selenium-users/d0V3LcS-spU/Gtj3abrqzSMJ
If you know a function is complex but pure, you should probably just memoize it.
One of the most important rules in programming: duplication is bad. Not only are you creating more work for yourself if you are not getting the computer to do the boring repetitive bits of your code, duplication increases the risk if bugs. If you are writing the same code over and over something is wrong, time to refactor.
A debate which I'm sure has been repeated almost every time something related to a language has been proposed or accepted. The sky is falling until nobody uses the new feature except when you see a random medium article posted asking why nobody uses this feature.
Why is a position described as "scientist" requiring any particular *skill* at all? Wouldn't the assumption be that a "data scientist" can pick up a programming language?
This is something I struggled with when I finally decided to get serious about programming around two years ago. Before that, I just did all the tutorials I could find, most of which went over the same stuff like all the rest. After doing a couple courses, I tried to force myself to do projects from some long list of project ideas that I really were not that interested in, like a chat client or a small game. Obviously, this just ended with me getting demotivated and abaddoning the project after couple of hours when I got stuck on something trivial. After a year or so of that, something changed. I got really into netsec kind of stuff and started watching DEFCON talks from youtube. There was this one talk where the presenter talked about a social media giveaway bot he had made. Basicly it crawled twitter for freebies and then liked / retweeted / etc the tweets for enter the lottery for the prices. The talk did not really go into the details of how the bot actually worked, but it was enough for me. After watching the talk, I knew this was something I wanted to do too! Before this, the only programming I had done was with javascript. I did some research and ended up in some stack overflow thread talking about tweepy (a python wrapper for the twitter api) and python. At this point, Idid not know any python, but because of the motivation from finally discovering something useful and fun I actually could do with programming, I breezed through the basics of python and jumped straight into figuring out how I could create such a bot. it took me probably a couple of months to get the damn thing barely working, but during that time, I learned so much no tutorial or online course could have taught me. The best advise I can give to anyone strugling with learning to code is, find something you really want to do. The motivation and drive strugling towards getting it working will get you through the issues you will get stuck on. It will be tough, but every issue you solve on the way will in the end make you a better coder. The end results of your first projects will most likely be awful piles of spaghetti code, but learning to recongine your mistakes and figuring out how to avoid it in the future are crucial skills you will need to learn. Jumping head first to a project will also teach you how to aproach the problem you want to solve. Do not be afraid to google all the things. One thing I must warn you about is, dont just blindly copy paste code from stackoverflow. Actually learn what the code snippets do. TL:DR Find a project you REALLY want to do and just jump straight in. Learn of the way by googling.
It's good to start learning languages from a you age, especially if you want to study CS. but keep in mind programming is endless 
&gt; How does a new feature, that you don't have to use, affect you? They aren't changing syntax, they are adding it. If your team leader wants to do so, well too bad, you're working for him. This argument has never held water in the history of programming, back to the banishment of GoTo.
But in all of those cases `as` works as an aliasing operator in some sense, whether it's allowing access to an imported module, file handle or a caught exception. Just because it's not technically a simple assignment under the hood doesn't really change the fact it's largely analogous to one. &gt;it would work completely differently from every use of as in existing versions of Python. By following this reasoning wouldn't *technically* every current use of `as` (e.g. `import`, `with`, `except`) already work completely differently from every other use of `as`? So obviously that can't be a reason not to use `as` here.
You're supposed to make it say "Hello World"
"Banishment". It was unreasonably banished. There were a few use cases where it actually made sense. Not to mention in assembly, everything is a fucking goto.
Is the recaptcha always present on the page? If so, the detection mechanism could have changed. I have no experience with how to get past captchas with selenium, but I have avoided them on sites that apply ratelimits in the form of a captcha by sending requests through multiple proxies, thereby avoiding the alltogether.
https://marketplace.visualstudio.com/items?itemName=ms-python.python
Why does it say python 3.8? 
it's easy to accidentally type = instead of == but not easy to accidentally write :=
What do you mean?
I relate all too well.
How much experience did you have when you created the poker game? That's something that could really inspire me.
1 year of professional experience and 2 years of playing around. 
Because this is a feature that is proposed to be added to 3.8, and the 3.8 alpha is out (as well as some patches on top of it that implement this (GvR's reference implementation is linked in the PEP)).
Finding ways around captchas is a cat and mouse game. New workarounds might work for a while, but in all likelyhood they will get patched. Is there any other way to get the data you are scraping?
I agree that it's hard to imagine someone will write := instead of == by mistake. But it's easy to imagine whey let's say you write some code with := and in 6 month I should extend this code with some new functionality, it will be really easy to miss this ":=". It's as always we do not have issues with writing new code, we have issues with maintains, especially if there is not enough tests.
The only way is to login to my account to get the data. When I login with Chrome the reCaptcha let me connect to it, but when I do the exact same thing with the webdriver opened through python, it won't. One of the options that could make it would be to connect my account on Chrome and then use the "session data" to input them into the webdriver controled by selenium. But I don't know if its possible and neither how to do it. If anyone could help me I'm willing to pay 0.3 ETH to have this issue solved 
Exactly. Everything in the image seems perfectly fine for me.
Yeah, same, except people love overreacting to proposition that they don't like. It's a preemptive "X considered harmful" game.
&gt; This is a test o Literally unusable.
Yes: `if expr as x:` No: `if x := expr:`
Haha, yeah. I was too lazy to try and fit it on there. I read it as "test o' the" :)
You could try extracting the session cookies from chrome after logging in and passing them to selenium in your script. [here](https://stackoverflow.com/questions/15058462/how-to-save-and-load-cookies-using-python-selenium-webdriver?utm_medium=organic&amp;utm_source=google_rich_qa&amp;utm_campaign=google_rich_qa) is a way to extract and inject them within a script. Not sure how to do it from a saved cookie from chrome.
Where did you get the display? Adafruit? 
To add to my last comment, the cookies probably are accepted as a dict like cookie_dict = { thing: "thing" } and passed to selenium with driver.add_cookie(cookie_dict) You can probably get the cookies with chromes dev tools.
Well just look atch yer man. Test o' the morning to ya too now.
Sublocal scope has been explicitly rejected in PEP 572. https://www.python.org/dev/peps/pep-0572/#why-not-use-a-sublocal-scope-and-prevent-namespace-pollution &gt; Why not use a sublocal scope and prevent namespace pollution? &gt; &gt; Previous revisions of this proposal involved sublocal scope (restricted to a single statement), preventing name leakage and namespace pollution. While a definite advantage in a number of situations, this increases complexity in many others, and the costs are not justified by the benefits. In the interests of language simplicity, the name bindings created here are exactly equivalent to any other name bindings, including that usage at class or module scope will create externally-visible names. This is no different from for loops or other constructs, and can be solved the same way: del the name once it is no longer needed, or prefix it with an underscore. &gt; &gt; Names bound within a comprehension are local to that comprehension, even in the outermost iterable, and can thus be used freely without polluting the surrounding namespace.
I wouldn't say I expected anything more than I think it's A Bad Idea.
but really only if you were to accidentally write :=
God bless you. 
Try using this package instead https://github.com/docker/docker-py
It's extremely cheap to get into this sort of thing, even if you don't have an electronics equipment. The components I used for this were less than $10 and then you just need a way to wire things up, so either on a breadboard or soldering to a protoboard. The display [came from ebay](https://www.ebay.com/sch/i.html?_odkw=.96+oled&amp;_osacat=0&amp;_from=R40&amp;_trksid=p2045573.m570.l1313.TR0.TRC0.H0.X.96+oled+display.TRS0&amp;_nkw=.96+oled+display&amp;_sacat=0).
sounds like you want ansible, but i'm surprised you aren't using it already. 
1. It seemed interesting, and it makes you a better coder by understanding the paradigm and it's purpose. 2. Understanding immutability. 3. Nothing. Takes a few days to learn. 
This generation is going downhill....
Wow! I’ve just saved the playlist on YouTube, this looks awesome and will benefit many of us, cheers!
Bad luck then.
Antidote is a package designed to make dependency injection easy in Python. When I started this project, there weren't any package providing dependency injection based on type annotations to my liking, at least to my knowledge. Existing projects required from you to change how your code was used. Antidote uses mostly decorators to inject and register dependencies, without changing how you interact with your objects. You can still pass arguments to an injected function if you wish. Here is quick example: from antidote import antidote @antidote.register class Service: """ dummy """ @antidote.inject def f(s: Service): """ do something """ f() # a singleton is created and injected f(Service()) # overrides injection This makes Antidote easy to integrate in any code and keeps it easily testable. Here is a short list of what antidote provides: * Registration of services, factories. * Registration of parameters, configuration. * Injection into any function based on type annotations. Argument names or an explicit mapping can also be used. * Injection can be overridden and dependencies easily changed for unit testing. * Integration with attrs package. I've seen numerous times people arguing about the need of a dependency injection library, that one can just simply define its singletons in a module. Well, that does work when you have few dependencies. But the more dependencies there is, the harder it becomes to instantiate them properly. You either have to instantiate them all in the right order or write and maintain code that manages instantiation. In short you start doing what Antidote is designed for. So for a simple Flask application, Antidote won't help you much. However if you're working on a application which requires a lot of different services which depend on each other, it really helps keeping your code maintainable and modular. Antidote is in a beta phase, where the most of the public API should not change too much. Any feedback is welcome ! :) 
I had to learn Clojure for one of my classes. The hardest part would have been trying to not assign things to variables, you definitely have to take a different look on how you structure things. I got over this a lot quicker than I thought though. It didn't take too long to lean Clojure for me but there are a LOT of functions that you don't know exist that are most of the time and easier way of achieving what you are trying to do. I'm not sure if this is the same with other languages like schema but this is my experience. 
Damn that's decent, could I get a link?
lmao, love to use forks of languages that leave out operators I don't like
I think you're missing the point. The `as` keyword currently has three different meanings based on context. This is currently viewed as not a problem because these contexts, at present time, don't overlap: you can't combine a 'with' statement with an 'except' statement, for example. If we were to add a fourth meaning, where `EXPRESSION as NAME` is the proposed expression binding operation, there suddenly *would* be overlap. For example, what would doing `with (foo() as bar):` do? This currently isn't allowed by the Python grammar, but would need to be if we permit this fourth meaning for the sake of consistency. (After all, we want to be able to bind *any* expression, and `foo()` certainly is an expression...) I don't think it's immediately obvious what this is doing and why it's different from `with foo() as bar:`. This seems like a bug magnet to me. 
 Reroute sys.stdout to print to a QTextEdit and show tqdms updates there. 
$50/hr
I like turtle. 
Use this to replace the current process with the new one: https://docs.python.org/library/os.html#os.execv
I'm a data scientist/statistician for work, and these skills translate easily to personal hobbies. I like analyzing sports data especially. It's very fun to have a hypothesis and to be able to pull the data and see if it is correct.
Wouldn't be the first time it's happened...
they should use finally, as its more cognizance
 != False
&gt; Adding parens is normally a harmless operation but it actually changes the meaning and semantics completely here I think I understand what you're getting at, but I wouldn't say it's _normally harmless_. Consider the following examples, which I think are perfectly reasonable in the context of this discussion (some maybe less than others): (1) ``` &gt;&gt;&gt; 1 + 2 * 3 7 &gt;&gt;&gt; (1 + 2) * 3 9 ``` (2) ```&gt;&gt;&gt; assert False, 'msg' Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; AssertionError: msg &gt;&gt;&gt; assert(False, 'msg') &lt;stdin&gt;:1: SyntaxWarning: assertion is always true, perhaps remove parentheses? ``` (3) ``` &gt;&gt;&gt; print(1, 2, 3) 1 2 3 &gt;&gt;&gt; print((1, 2, 3)) (1, 2, 3) ```
I was at least expecting "send nudes"
I expected the pixels to form "Send Nudes", such a ~~disappointing demo~~ missed opportunity.
Ik amirite
What side-effects are you referring to?
ESP8266*
Have you tried apscheduler? I don’t know what you’re trying to accomplish but I like it a lot. https://apscheduler.readthedocs.io/en/latest/
But what it does under the hood? I’m not willing to be dependent on SDK just for “docker exec” - my app doesn’t have any other integration with Docker.
Right now I'm using a Python script to drive ADB in order to play the repetitive part of a mobile game.
do you mean how can you store credentials safely to be used by selenium? you can encrypt/decrypt values with a salt *you create* and store safely elsewhere. 1. take password 2. hash it with your salt 3. store that value 4. decrypt hashed value with your salt when necessary
"Bloating", really? *Python* is the language you want to call "bloated"?
With this little beauty we can even transcend ASCII art and show a 128x64 bitmap of those puppies. A whole new era awaits!
Thank you! I know you've been "forced" to learn Clojure, but do you think you'll spend more time learning FP now that you understand the basics?
And even more misleading. 
Are you also against the use of else, when catching exceptions? 
Or just not use the synchronous worker and used threaded or asyncio workers?
If you want a smooth transition I’d suggest Pycharm (IDE) and using type hints to make code more readable, especially if you already have a strong typing mindset will be more natural 
How this compares with tones of DI frameworks for python?
Did you mean for the text to say "ESP8266"? --QA police hard at work.
Wow I didn't even notice that.
Got into dungeons and dragons recently so I wrote a small package to turn .py files into characters sheets. Keep my characters in a github repo and then update them whenever I level up or prepare new spells. https://github.com/canismarko/dungeon-sheets
The QA police are your _FRIENDS_ .
I have been interested in learning python for some time now as yourself. I have found the Py app to be good at teaching me the logic behind syntax and their functions. Give it a shot and let me know if you find other good learning sources.
Pynput may hellp too
Waiting for a quake port
Let me take a step back, let’s forget about the implementation for a moment and figure out your use case. Please describe what your ultimate goal is.
thank you everyone 
David Beazley Essential Python is a great book. I love his videos. I like Spyder from Anaconda distribution. Not totally IDE, but pretty basic. I’ve found my python programming to be fairly simple and straightforward so I still don’t feel like I need to have something like Eclipse to navigate the sprawl like in large Java code bases. I found switching from Java and C++ (languages I wasn’t that great in) to python was pretty liberating. It’s a great language to invest some time into. 
thanks.. good sub. it's overwhelming me &gt;.&lt; 
The Sololearn app has a good, basic python intro. Codecademy is also a good resource 
This is awesome!
Okay, well you might consider that based on that opinion, you are not actually fit to be programming near anyone else at all. Cheers.
processing is the language found at www.processing.org here it is trail logic derivation, coupled with oop. this is a not so simple snippet with relevent explanations illustrating the fact that if you know python, you can follow along processing was already fun. mixing python with it has made it even more interesting !
So because I mention that goto does indeed have a few rare use cases, I shouldn't be writing code? Okay, guess I should just go quit my job then, thanks for the advice.
[python anywhere] (https://www.pythonanywhere.com/) 
It's for the Anaconda distributino (so no-ish, not python.org's CPython).
Quote by [Raymond Hettinger](https://youtu.be/anrOzOapJ2E?t=17m45s)
For one thing, job listings are all hilariously over-specced. You just need to apply to a bunch of jobs despite the fact that they ask for ridiculous qualifications for an entry level job. Secondly, once you've learned one languages, learning many other languages comes MUCH faster.
I'm in a similar boat minus Rust plus need to program Python for a new job. I find lack of static typing frustrating. PyCharm helps some, but it doesn't know enough about your code. You can help it with type hints, but they are kind of a bolt\-on and dynamic nature of the language makes them only half\-useful. I'd love to hear how people coming from statically typed languages make peace with working on large code bases in Python. To answer some of your questions: 1. I'm going through 'Fluent Python'. It gives you the feel for what the language is good at and how it's expected to be used. 2. all of the things you listed. Mostly it's docstrings and documentation online. But it all leaves a feeling of not having a precise understanding of the what's happening.
depends what the function is, how big the function is and in how many places will you be calling it from. 
Hmmm.... Right now my little program is only this one function. It doesn't even have to be a function, but I made it one in case things grow up around it later. 
keep it simple then; no need for a function, and if you get to a point where you might need to reuse the functionality, you can go back and refactor the code
hi, drone hacking, do you mean using python to control drone? 
Sometimes HR has certain requirements that don't correlate to the actual job. I once worked on a team where our company used Oracle for our database, but HR required us to list SQL Server as the required database experience to standardize our postings with the parent company which used SQL Server. They also required us to list a masters degree in computer science for educational requirements since it would "match the level of demand for talent" despite none of us having more than a bachelors. Also, I have a marketing degree, and the team's other developer had studied history. You might be seeing people that use the same posting for everything, you might be seeing something weird from HR, or you might just be seeing that entry-level is hard. There is a lot of learning to do out there, and it's hard to learn quickly until you have a real world job with huge real problems to solve. It might take extra time for a first job and you might get more rejections or silence now, but eventually you'll get something and it gets better each time you job hunt. In a few years some people might even consider you "senior". Be patient with yourself, try to make personal connections where you can be recommended, and show yourself as personable and friendly in an interview. If a team thinks someone will be good to work with and has the desire to learn quickly, that's 95% of what they want from a true entry level position.
I was expecting a dickbutt at the end.
I'm not sure you can even really compare them, they are quite a bit different. From a hobbyist standpoint, the 8266 is one of the coolest things to come around in a long time. It is ridiculously powerful/capable for the price. One of the benefits you get with an arduino board is the community (although the 8266 one has been steadily growing for a few years now). You can pretty much have any question answered by a google search.
Thanks for the answer i appreciate it . So I will say my my situation real quick. I do python and i like it and i want to go further in software eng. but, I have a friend who is PHP programmer for around 10 years now, he is working for small company in NYC , like, they have 2 back and and 1 front end guy. Should I ask him if he can take me with him and see how real life problems and the environment is? of course i don't mind not to get paid if i can get experience thats most important thing. Im aware php is more of a web but i think it would give me a good sense of how everything works in programming . 
Thanks for your comment, this is not a question and here the keyword class is specific to Python Programming.
The reason you learn so much isn't because school / tutorials skip some important secrets. It's more about the fact that you will be working 40 to 50 hours per week alongside experienced people who can answer questions, with a little of the healthy fear of losing your first job to keep you inspired to pay close attention. You also get to see why code might need to be arranged in specific ways to make sense once you see apps 1000x the size of an assignment or example. Learning PHP is one of the few languages I'd caution against since the roots as a text parsing language made for some awkward syntax and bad habits in terms of organization that it hasn't totally recovered from, not to mention the low salaries due to the glut of Wordpress devs. That said, take opportunities where they knock. If someone pays you to learn a different language as an entry level dev, I recommend you consider taking it. I took a reporting analyst (SQL) job while I waited for an opportunity to work in development, and the skills learned then still made me a better developer. My path wasn't glamorous, with time spent in VB and SharePoint at points, but by always looking for opportunities, I eventually got to work exactly where I wanted.
There is no claim that Python is bloated. There is a claim that this feature would be bloat if added to Python. ie. Considering the existing functionality of Python, this feature is of marginal utility.
There are a lot of fundamental problems with the code you’ve posted. I’d reread pythons documentation on classes 
Python 2 vs. 3, have you been living under a bus?
The legality of unpaid internships / unpaid work for educational benefit has been challenged in US courts, and companies have been broadly found guilty of employment violations when they don't at least pay minimum wages. I also don't think you should work for free because I think you are worth more than that just because you desire to learn. I realize you are willing to work just for the experience, but unless you are doing vollunteer work for a non-profit or contributing to open source projects under a mentor, it might not be possible to do free work. I am not qualified to help with advice on the being an international student in terms of work, but your visa might restrict you from working or from working more than a certain amount. One route to consider is professional recruiters from Kforce, Teksystems, Modis, etc. They are out for their own profit and you need to know not to trust them 100% without your own research, but if there is someone out there who might hire you, they will want the placement commission, so they will try to get you placed. Talk to multiple, be honest about your skill level, and remember that they have some of the same goals as you (placing you in a job) but that your happiness or fit in a job isn't the same priority for them as it is for you. None of my comments are great answers. I'll try to think of additional opportunities to mention.
Not sure if this will help you. To get an overview of Python data structures and related syntax, you can read these pages on Devopedia: https://devopedia.org/python-data-structures https://devopedia.org/python-2-vs-3 For more practice, some folks recommend solving problems from Project Euler: https://projecteuler.net/ I sometimes go to StackOverflow and attempt unanswered questions. This is a great way to get practice.
lol, the most division I see is "3 is the future, 2 if you need it". I was under the impression everyone used 3 if they could, and 2 only if they had to. But I wasn't into programming until years after 3 was realeased
**Sorites paradox** The sorites paradox (; sometimes known as the paradox of the heap) is a paradox that arises from vague predicates. A typical formulation involves a heap of sand, from which grains are individually removed. Under the assumption that removing a single grain does not turn a heap into a non-heap, the paradox is to consider what happens when the process is repeated enough times: is a single remaining grain still a heap? If not, when did it change from a heap to a non-heap? *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I may need a bit more time to write some feedback, I’ll be back to you tomorrow!
Sweet man, thanks. I appreciate it. 
There's still programmers who hate the strings vs. bytes changes in Python
It's still mind boggling to me. I still think Forth running on a micro is black magic so maybe I just don't keep up with the latest in micro tech, ha
The older generation would've sent lena.bmp
I second on the recruiter part. I got hired as a data entry/checker position at my job I am currently at (about one year after my associates degree), which I would have never had without my recruiter. Since then, I've been moved up to a full time developer. If you can get your foot in the door and then prove you have the skills to be useful, you'll find that businesses are going to love you. And I'm not saying you have to be a master-programmer to start, just that you are willing and able to learn what you need to. 90% of what I use day to day, I had to learn on the job for what I was doing.
Algorithmic trading using statistical learning to generate signals for a trading bot. 
We have started using Ansible lately, but for workers part we are using Fabric. Will be moving to the Ansible within this week.
Tfw found a hello world brute Force program last night and the first thing I did was change it to send nudes
r/learnpython may interest you.
Hopefully getting [a couple PRs](https://github.com/Bogdanp/dramatiq/pulls) merged to [Dramatiq](https://dramatiq.io). Working on the dashboard this weekend.
very nice, nice derivations, nice work ! hope it helps somewhere. you kept complexity in check !
How?
Total noobie here so I apologize the unclear question. Currently I'm running the script only from a local machine (RPI) via terminal to handle some very basic tasks online. Perhaps my question is more as of how secure logging into websites via Selenium is? Are there some things to add in the code to make sure everything is done securely (e.g. HTTPS, validate site, validate certificate, save login info in certain manner etc.)?
word
Funnily enough, even Ruby doesn't have something like `:=`. In Ruby, `if/then` blocks are expressions, but there is no "assignment expression". I'd say this actually feels like Perl or C. But even in the latter two, using assignments as expressions isn't very common. I still prefer putting the assignment on a separate line.
I'll try my best to compare them: * [Dependency Injector!](https://github.com/ets-labs/python-dependency-injector/): Does not use type annotation or decorators. It's a framework conceived with Python 2 in mind. * [Siringua!](https://github.com/h2non/siringa): The method of injection is not compatible with mypy type annotations, you can only specify dependencies with a string prefixed with '!' * [Injector!](https://github.com/alecthomas/injector): All of your code entry points needs to retrieve the first service with a global `Injector` instance. * [PyCDI!](https://github.com/ettoreleandrotognoli/python-cdi): You need to use the function `call` for your entry points. * [Autowired!](https://github.com/allrod5/injectable): Cannot inject anything, it is restricted to keyword only arguments without defaults. * [Serum!](https://github.com/suned/serum): This is probably something I would have used. While it requires you to use a context manager, this is a better approach than Injector or PyCDI IMHO. However, from the quick look I had, it does more magic than Antidote. Antidote only injects automatically based on type annotations. Serum uses also automatically the name of the arguments, with Antidote it must be explicit. When adding a subclass to Serum, it may be used if its mother class is requested. It sounds good in this example, but I prefer something more explicit, I feel like it's a source of potential bugs. * [ainject!](https://github.com/pohmelie/ainject): It's asynchronous. * [autowire!](https://github.com/Hardtack/Autowire): A lot of decorators and you have a context. Injection does not seem to rely on type annotations. * [giveme!](https://github.com/steinitzu/giveme): Uses arguments names by default. I haven't seen injection through type annotations. In short, what has Antidote, that others don't: * Automatic injection through type annotations and *optionally* through arguments names or an explicit argument to dependency mapping. No magic unless you specify it. *Explicit is better than implicit.* * A global container, you don't need to use a context, or call your functions in a specific way. So, Antidote provides only singletons and "create a new instance every time". No scopes. But You *can* manage scopes you wish to. You either use a [stateful factory!](https://antidote.readthedocs.io/en/latest/usage.html#using-a-class-as-a-factory) or extend Antidote with what I call a [Provider!](https://antidote.readthedocs.io/en/latest/extending.html#providers). * The context in which code is executed can also be changed with Antidote (see [here!](https://antidote.readthedocs.io/en/latest/usage.html#mocking)). While it is designed for testing/mocking currently, it can be used in your application entry point to change certain dependencies (like the logger). * Antidote provides a lot of ways to customize your dependencies. When injecting you can explicitly pass arguments to the factory, to use a different database on the same server for example. You can register parameters (from a config object like ConfigParser or a dict), classes and factories. But also extend Antidote to control what should be done when a specific dependency is requested. A quick note on scopes. The only time I've seen scopes really necessary is for web application with for example the user that relies on the scope of the request. But that's it. Scopes are hard to use, and frameworks usually manage what is related to the request. The dependency injection framework I've mostly used until now, [Symfony's DependencyInjection Component!](https://symfony.com/doc/current/components/dependency_injection.html) has even abandoned that. So, I find context/scopes mostly unnecessary. *Simple is better than complex*. However, if you wish to manage a scope for certain dependencies, you can do it pretty easily. If you want a more in-depth comparison with one framework in particular, or if something isn’t clear, please let me know! 
My point was that `X as Y` isn't analogous to `Y := X`. Anyway, all of this has already been discussed. https://www.python.org/dev/peps/pep-0572/#alternative-spellings
Which principals? Like, Crockford and Bjarne and Richie and such?
It definitely has it's benefits like immutability but for general use no. I find object orientated languages much easier to use and more general purpose (hosting a web server with a FP language would be hard) and I feel there is a special time and place for FP. The things that I develop are not the place nor time to use it.
Time to change your password ;)
Two things: * Read the Sidebar * Post your question to /r/learnpython 
.h5 should contain the network weights, that is my use case model.save_weights(..) model.load_weights()
Likewise not closing the connection after each send, and a proper from address would help 
This is very cool! I love graphical interpretations when there aren’t usually any. 
 * Haskell * Monads? I think. * A few weekends.
Interesting point of view. I never looked at "as" in this way. In each case, however, NAME gets a different value because ANOTHER_THING is different and you are called to know what it is. So, imho, if ANOTHER_THING is SOMETHING when "as" is used in flow control statements it wouldn't be that different from the other cases: you have to know what value NAME gets. 
&gt; Where do programmers seek knowledge about objects in their code? You should have general understanding of the domain, the details I get from documentation and interactive shell. My quick test of api design is that you can write usable code after skimming through readme, usually if that doesn't work well, nothing else will. Memorizing is not an issue if names refer to domain concepts. Also this might be helpful: http://dirtsimple.org/2004/12/python-is-not-java.html
Is this for school?
Is for uni, this is task 1/3
I changed your password and sent it to you per PM. Please never post your password.
I started by going Coursera’s Learn to Program. It uses python 3.x. Get the book that goes with it too 
Great post, I do something similar with Forex data. 
This is for school. Unless you have a specific question, nobody will answer this. Also, host your code on sites like pastebin if you want others to help you.
Thanks! So you decided to learn FP because you were curious about Haskell? Also, can I ask what you're using to learn Haskell? Tutorials, books, videos, ...?
Thank you! When you "takes a few days to learn", are you referring to using a few FP techniques in Python?
Here is what you are looking for: https://stackoverflow.com/questions/1436703/difference-between-str-and-repr
I tried this about 3 months ago. Gave up the project because my bot kept loosing me money. :(
It's showing you the counters from the NIC, you need to measure multiple times at an interval and calculate the difference yourself. E.g., look once a second and subtract the numbers last second from the numbers this second to see the bytes/packets/errors per second. so you want something very roughly like this algorithm import psutil import time # the interface we're interested in watch_interface='en0' # how many seconds between samples wait_time = 1.0 # get first sample this_sec=psutil.net_io_counters(pernic=True)[watch_interface] # loop forever while True: # copy the current sample to the previous sample last_sec = this_sec # wait 1 second time.sleep(wait_time) # take a new sample this_sec = psutil.net_io_counters(pernic=True)[watch_interface] # show the difference between the samples print(f'in the last {wait_time} seconds bytes_sent: {this_sec[0] - last_sec[0]} bytes_recv: {this_sec[1] - last_sec[1]}') 
This is what I got https://imgur.com/a/bBTLz2H
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/HNB1eqm.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dy7ffpj) 
Here is a complete guide of python programming, hope its helped out you and others. https://plus.google.com/collection/AN9iWE Its from basic to advance.
r/learnpython
Also, edited the main question with the answers.
Very cool. Just like 3brown1blue stuff
It's asking if it's OK to open a listening port I think. I'm not very familiar with windows. It's safe for private networks. It's only really necessary if you're developing something that is going to listen on the network like a web server (flask/django/sonic/pyramid....) Or other network utility.
I'll also point out that if you block it and end up working on some sort of networking thing later then you'll be scratching your head about why it doesn't work.
This looks like it's basically a bunch of modules and cpython compiled with ICC (Intel compiler collection) rather than GCC or CLANG. 
for j in range(1) makes me sick
Thanks!
Stop saying “I made a thing”. Just tell what you made and quit trying to be an obscure hipster garbage
You can't decrypt hashes.
yes you can if you use reversible ones for purposes like this. obviously most hashes are 1-way
[removed]
Thanks for the answer. I run it and it seems good. Just one question\- do a bytes numbers are in KB? because i track after the code's results and after windows task manager results, and they are different from each other...
And that’s going in the references folder! Thanks OP! Great stuff!
TBH during development it seems ok, maybe you find you want to do more iterations. The real concern for me is `while size &gt; 9:` .. `size=size+9`. That's a seriously misleading conditional. Due to Python's big integer support, it's functionally equivalent to `while true:` (size will never overflow)
well, actually for j in range(1) has no sense at all. First, I cannot immagine a situation where I would like to draw more circles one above the other, while (second) you never use the variable. I totally agree thou about the while size &gt; 9: loop condition. No question about it 
Thanks! This is a bit more detailed than pandas' official [cheat sheet](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf)
They're in bytes/sec. You need to divide by 1024 to get to KiB/s (kibibytes per second, what most people are thinking of when they say KB/s) https://en.wikipedia.org/wiki/Kibibyte 
Dude, maybe you shouldn't post where you have no idea what you're talking about. If it's reversible it is NOT a hash. https://security.stackexchange.com/questions/63052/reversible-hash-function Do NOT reply and answer security related questions when you are a complete noob and have no idea what the fuck you are talking about. 
This guy has no clue what he's talking about. Be careful who you get security information from online. If anything you should use something like hashicorp vault to store your passwords and then in your code you'll query vault for the passwords with a token.
Looks good, but looks like something got mixed up in the `pivot` example. With the specific input table and the command you've shown the output should be as seen in the table below: bar| A| B| C| D| E| F ---|---|----|----|----|----|---- foo| | | | | | one| 1.0| 2.0| 3.0| NaN| NaN | NaN two| NaN| NaN| NaN| 4.0| 5.0| 6.0 Alternatively the output would be correct if you used the following input dataframe: . | bar| baz| foo| zoo ---|---|----|----|---- 0| A| 1| one| x 1| B| 2| one| y 2| C| 3 | one| z 3| A| 4| two| q 4| B | 5| two| w 5| C| 6| two| t 
oh someone’s feisty huh? I shouldn’t have used the magic word “hash” but it’s what I wrote last night, I will edit my original comment. I’m well aware hashes are cryptographic and supposed to be uncrackable. What I meant was for him to encrypt the data, store that somewhere and decrypt later. Do NOT tell me what I know, I have university education in computer science so calm yourself and get down off that high horse.
I think if pivot &amp; melt as complements, as are stack &amp; unstack. Pivot/melt evaluate the data; stack/unstack evaluate the indexes. Thus I would put the melt example after the pivot example, in the same way you have unstack after stack.
if 'piss' in bowl_of_cereal: pass else: comment(something_nice)
I have a very good idea what I’m talking about. Don’t try to be a showoff because I used an incorrect word when I was answering it half-asleep. You really need validation from anons to feel good?
&gt; I have university education in computer science This kind of rebuttal shows just how inexperienced you are. &gt; What I meant was for him to encrypt the data, store that somewhere and decrypt later. Your solution, even if you didn't mean hash, is garbage. Manually salt and encrypt passwords and store them, or you could use one of the many tools out there that are specifically made for this exact situation. If you were experienced, outside of your "university educatoin" you would know this. Security practices are not somewhere you want to just wing it, so of course I'm going to jump on your unknowledgeable post.
No, this guy shouldn't be trying to store passwords himself. He asked for security practices, I'm giving him ACTUAL security practices used in the industry. I'm not giving him extremely bad security practices and trying to pass them off like I know what I'm doing. Don't give out security advice when you don't know wtf you're doing. Sure, you gave him a way to encrypt his passwords but they're **not** secure since you gave no details or information on how he should protect his keys or that it's even important to protect his keys. How defensive you are says all anyone needs to know about you.
he’s storing data for *himself* to use with selenium. from my understanding he doesn’t need a crazy solution, what do you think password vaults do anyways? they have to reverse encrypted passwords with a key/token which is exactly what I said. don’t call me ignorant, I work in industry, teach compsci, and have studied it for years. you are not better than me so stop trying to flex online.
Do you mean that if the code is working to dont try to rewrite this with other way? 
Spot on, mate. Thanks for the heads up. I updated the post with the correction.