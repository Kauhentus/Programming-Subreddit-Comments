I’d rather write code in numpy than C. 
I see people mentioning C or Rust. But one of the most successful firms, Jane Street uses OCaml. A lot of such shops use Functional programming languages not just because of speed. But because it is easy to verify. A bug can easily cost billions of dollars in damage in a few minutes. P.S. Mandatory read about Knight Capital and how they lost 50 million per minute for 45 minutes. 
Can that be said of any interpreted language though? Or would that be specific to Python?
spaces &gt; tabs
High frequency trading 
You can package your script/app into an executable with PyInstaller.
Is GIL just a constraint on Python, or does it apply to Cython also? I would have guessed compiling down to machine code would have eliminated the need for a global lock.
I thought that you have to particularly target Cython in your code base, and that you can't use just any Python code to compile down. I don't know for sure, that was my understanding -- that the whole standard library is not available if you want to compile down to executable code via Cython. Is that accurate?
When you need to manage your own memory down to individual bytes.
This, completely. 
When convincing your boss to use python in production. Protip: its PoC till the budget comes in.
We have not adopted it yet (though we would like to) because it does not work with pylint. 
That makes sense. If you can assume you have a JVM on the target machine, Java packages pretty nicely. If it's targeting Dalvik for an Android runtime, `.apk`s are easy to generate.
not sure why you're being downvoted for an obvious truth
Hmm, from what I understand, you're asking if we'd be using pyx files instead of py files right? Well, it's true that your code wouldn't be completely Python anymore, and I think people smarter than me will figure out how to organize cython code with Python code. As for running the whole standard library, I don't see why not? I've been able to do it with some of my projects and it usually turns out pretty well. There might be a bit of Googling to see how to get specific workarounds (like having to import bool), but these are simple issues that don't take too long to fix I hope I answered your questions, feel free to ask more! 
When you need a multithreaded application.
No, it's the eternal the libraries I used aren't the language I use problem. If numpy had been written in optimized assembly, would anyone casually argue that it was proof that assembly was a superior language?
FYI there are Java programs that come with their own JRE It's a big overhead and very-much not standard, but it exists.
&gt; my mention of Go is also not the point 
People are downvoting you because you're being obtuse, pedantic, and rude. It's obvious the OP wanted to know the context behind when Python shouldn't be used. You're just using this as an excuse to make yourself feel smart for recognizing that they didn't explicitly use the word 'why'.
Python is used a lot in HFT. It's just that they use something like C for the bottlenecks. Exactly how Python was intended.
Is rarely actually a problem unless you need a lot of threads accessing the same memory space, which isn't that really that common.
When you don't know python and don't want to learn
Cuda is fast because it uses a GPU, not because it is written in C. Furthermore, CUDA is an interface to a hardware platform, not to some underlying "amazing C code that miraculously runs things faster" Had cuda been written in Go, it would make no difference to anyone: neither to the users of the library, nor to the implementors. Compiled code isn't C. 
I think they mean more as in, "Send this signal, and then exactly 300 us later, send another signal". Language virtual machines (CLR, JVM, CPython, etc) are all terrible at that.
OOP
For what it's worth, it really depends on the domain. If you're doing Automation development, type inference becomes a non-issue.
When your OS is Indiana Jones.
Docker can help a lot with this
It's incredible. I'd quit my job if we didn't use mypy. We li t-enforce it on all new code on my team.
I would not write a game engine by using only Python. Nor I would program a operating system or a software for highly optimized, low-power embedded system either. For the facts already stated here.
What about an ugly one?
Meh, I'm bailing on this thread. Years of /. flamewar threads should have made me be able to spot flamebait from a distance, but evidently I didn't. To answer you: non-determinisim is the problem you speak of and it has easy solutions. In its most basic answer: python does not have a thread scheduler (no language does, that is the job of the OS), and so python does not ever execute non-deterministicaly.
Yep, I'm better typing than Java or c++.
Ya, as long as mutable data types and automated garbage collection are features.
I mean, fair point, but Apple essentially designed Swift as their de-jure app development languages, and built out the entire ecosystem to support it. Same with ObjC previously, and .NET for Windows apps (not saying there aren't alternatives, but .NET languages have a clear advantage in terms of official support and implementation correctness)
For high efficiency numerical calculations? Yes, I'm fairly certain that a large number of people *would* argue that hand written optimized assembly is superior to C ( even hand written optimized C ) for time/memory efficiency sensitive code. You can drive an automobile at a hundred miles an hour. You don't claim that you can run a hundred miles an hour though. There's a specialized machine that you operate via abstractions which enables your ability to travel so quickly.
This is true in c and Java as well. References and pointers can hold anything, although tricking the type system to let you do that at runtime is tricky.
How do you figure? Most of the Python code I've written professionally has been closed-source (and remains so).
- When is Python always better? - When the other language is PHP
my units may be off by a few factors of 10. I apologize to all.
Consider the deployment environment. If the application is deployed on a shared hosting type infrastructure, python is almost never a good choice.
Disclaimer: I love Python, but it's not always the best tool for the job. And you asked under what situations would it **not** be a good choice, so here goes... * When you need an application to be as fast as possible. Sure you can write parts in C, but if you need the *entire* application to as fast as possible Python would not be a good choice. * When you want the application to be as small as possible (small memory footprint). Sure many Python programs take up less space than Java, but that's not really saying much if you need to put your code on embedded devices where (usually) C and C++ dominate. * When you need (single file or non-single file) executable "distribution" as a first-class citizen. Sure we have PySide, py2exe, cx_freeze, etc...but these are not "first-class" citizens and they don't always work either. * When you want static typing. Sure we have "type hints", but these are not the same as static types. Additionally, I would say a strongly typed and statically typed language like Java would catch way more type errors with its compiler than a lint like mypy.
When you need real parallel operations.
For the future, check out python-binance, its definitely the best python wrapper out there!
Obviously, this isn't a complete list. The right language/environment will depend on the job. I love Python, but it's not perfect for everything... and that's one of the best things about it. Obviously there's when you're writing code for web browsers, and have no choice but to use JavaScript. It's a nice language most of the time. I'd imagine there are transpilers from Python to JS, but why? Also, it seems like if you want an efficient application server with asynchronous I/O, Node.js is still a bit better evolved. Please, tell me I'm wrong and the Python asyncio ecosystem is much much better than when I last looked at it. Python also seems happy to break things. It can be difficult to upgrade in some cases. Look at the attachment to 2.7, and how long it's taken some code to get to 3. Meanwhile, code written for POSIX C or Java can last without much maintenance for ages, even if it probably shouldn't. I'm pretty sure Node.js is far worse than Python, for that matter.
Compile to an executable so they don't have to download python? 
I didn’t have that issue. Have you tried opening the pac file and using a proxy listed and using in your python environment variable? I’ve had to deal with getting around pac files before for other reasons and that has worked. Otherwise, I know there are methods to download modules without pip. I’d have to look it up though. 
so i started with python and got to PyPy. For my use case (millions of calculations per minute based on real-time data) the performance difference between PyPy and nodejs async is on orders of magnitude. Granted i am a new programmer and I may have not grasped how to effectively use PyPy for my use case, but nodejs was instantaneously faster.
When you want to use a different language.
Reminds me of the time I plugged an IR remote into my server and used a Python script that parsed the raw output from `/dev/usbX` to control MPD :)
Well, and succinctly, said.
It's been official since 3.5. My team has settled on using it. Works great in PyCharm. We use it all the time.
What takes 85ms in go?
During the honeymoon.
If you care about parallelism and you only care about being parallel _on the same machine_ just to use 2-16 cores then you do not really care all that much about parallelism and you certainly don’t care about scaling. And even then, the multiprocessing module is usually good enough. If you do care about scaling then you’re inherently building an architecture with an external IPC and python is great for that. In this case you do not care about the GIL. **tl;dr** celery is great.
 import serial for lady in ladies: if round(lady.butt) and 'XXX throwdown' in lady.wants: serial.Serial("/dev/ttyACM0").write('ATD19006492568')
Just for perspective: Trading firms bought land across from CME's datacenter and built microwave antennas to hop a signal back to New Jersey......Because it was a few microseconds faster than fiber. The project costs them tons(100 million+) of money.
That's when you pull out your Cython compiler. 
To be clear, node fork processes are not threads and suck for communication. I just implemented that last week and tried threadsjs, too(which is also not threading). 
Loving kotlin lately. Python is much nicer to write since it has more bells and whistles out of the box, but kotlin has some nice elegance and moves across android, native and web in a very neat way. 
Not true! Have used python in embedded stuff plenty of times. All of the code that must be performant is in C or C++ however...! 
You're also being an ass. 
Are you asking when is Python NOT a good choice? (When is the language python not a good choice?.) Or are you asking when the operator "NOT" is a GOOD choice? Your asterisks make this question unnecessarily complicated.
When you want to have precise control over memory. When you need speed.
You'd be surprised how many large codebases where consistence is important are written in Python.
There are plenty of large codebases, that need consistence, that are written in Python that probably shouldn't be.
I agree that it's cool, but if I'm starting a new project and need strong typing, I'm probably going to (at this point) choose a language the supports it explicitly.
I'm not sure if it is exactly what you want, but you should have a look at [`asyncio.wait`](https://docs.python.org/3/library/asyncio-task.html#asyncio.wait) and [`asyncio.gather`](https://docs.python.org/3/library/asyncio-task.html#asyncio.gather).
Codebase size isn't the only consideration IMO, its mainly large codebases where multiple people are developing and where consistency and correctness are key. It depends on what your project is. Realistically, it's probably not worth re-writing.
i don't think so. that is still completely manageable with python, assuming you apply proper software development and design principles. IDE's are getting smarter and type hinting only makes them smarter, and with the introduction of mypy, you will get even more mileage out of them. look at projects like django and pandas. I don't know how large they are, but they most definitely fall within in that range, if not exceed it. 
This is cool! Thought I was on /r/dataisbeautiful for a second lol 
You don't even have to go that low to beat python handily in speed. Languages like js (on v8/node), go, java, and C# are all much faster than python in general.
If when you say "real time" you mean you were doing a lot of I/O then that's a place where nodejs excels, but the secret sauce there is libuv which does have Python bindings, both directly and via Twisted :) 
your role as their shepherd is to bring those gone astray back to the right path.
Python might be used for testing algos but everything is implemented in compiled languages.
Import lovemaking
I ported an Access application to Python and haven't regretted one moment.
&gt; Does Python forbid implicit type conversions? No. I'm not necessarily disagreeing with you, but I'd be curious to know what examples you're thinking of for this.
I love this comment, thank you for understanding. I'm so sick of PyQt5 just hanging, Eel is magical.
If you need async just use Go, or even C#.
&gt; Wait go isn't good for async. It's good for concurrency. Is this a joke? I don't get it.
[Aysnc =/= concurrent.](https://tech.cbits.northwestern.edu/2013/11/08/asynchronous-concurrent-introduction-event-loop/) Javascript is almost entirely asyncronous, but single threaded and not concurrent.
Saying that the answer to a question asked is 'obvious' helps no one. They're getting down votes because the comment was not useful to the discussion at hand.
Yep. I work on scientific code. My code bases need to efficiently use hardware resources and are often big legacy codes that need static typing for sanity. Sometimes python works. But sometimes it's really not the best option.
When the homework assignment said to use something else
Asterisks are unambiguously for emphasis.
Actually it's Fortran afair, but yeah, highly optimized code there
But the source repository is not the source, it's an upload site. I would never allow the sole source for one of my programs be off-site. When I make a change, I synchronize GitHub from the real source. I've never trusted off-site, third-party, cloud-based notions. To me GitHub is a way to communicate with other people, not to serve as the primary source. Something tell me this outlook is completely out of sync with modern times. When I wrote [Apple Writer](https://en.wikipedia.org/wiki/Apple_Writer) in the late 1970s I was living in a small cabin in Oregon. I was concerned that if my wood-heated cabin burned down, I would lose my source. So I periodically buried source media in a waterproof ammo can outside the cabin. After all, the cabin was worth maybe $10,000 but the program ended up being worth about $60 million (for myself and Apple) in 1970s dollars. I've never lost an important source file during nearly 50 years in the software business, starting with [writing and publishing programs for programmable calculators](https://arachnoid.com/programmable_calculators/) in the early 1970s during my time with NASA. You aren't likely to meet anyone who has been writing software as long as I have, and who didn't burn out -- yet. :)
**Apple Writer** Apple Writer is a word processor for the Apple II family of personal computers. It was created by Paul Lutus and published in 1979 by Apple Computer. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Care to elaborate?
lol no generics
I would be so happy to understand you 
Where can I read more about this?
Flask with Flask-SocketIO makes it a breeze
Let me just say my experience with it was awful. To me, it's like a bunch of Objective-C programmers developed a new language, and all the baggage that comes with that.
I learned most of this in my compiler and computer architecture courses but the Python stuff I learned from googling. I covered a lot of topics in a short-ish post so depending on what you're looking for I would recommend searching for "Python GIL", "why does Python use a GIL", "Python bytecode", "bytecode vs assembly", interpreter vs compiler", "abstract syntax trees compiler", "what is an instruction set architecture", and "syntax vs semantics programming languages". Read the long Stack Overflow posts (you know the ones that go on for pages and pages) and maybe some blogs that talk about more Python specific stuff.
I mean, in most places where Python is not a good choice, you will find people not using Python much. 
I think people would want to, if Python would be able to deliver the same performance and control while keeping the syntax.
thanks so much for the fast answer!
thanks so much for the fast answer! 
Even found an excuse to use the word "betwixt"!
When you need to process lots of data byte-by-byte or character-by-character and the structure is not suitable for processing by existing C extension libraries, or regular expressions. 
/u/memes_420 with the hard hitting knowledge
Everyone has been telling you "when performance matters". I have an example that illustrates that. In Sid Meier's Civilization IV, Firaxis (the game's developer) provided easy modding functionality. Modders could use Python for creating their own events and any scripting necessary for their mods. However, Python caused noticeable performance impact on modded games. As a result, in Sid Civilization V, Firaxis moved away from Python for modding. Civilization V uses Lua for any scripting necessary for mods. So, if you have a demanding game, Python may not be the correct choice for event scripting. 
As someone else said, you can with UIO. I wanted to do it with python for two reasons: Prototyping with fast development cycle. Security. And why did security motivate doing it in Python with UIO? Having most of a device driver in user space helps with separation of responsibility and allows the user space part to run with minimal privileges. And when that part of the device driver is in user space it lets you write it in a memory safe language.
I think that if you port Access application to anything else you won't regret it 
Sophisticated GUI
Nanoseconds matters. A French bank CEO said, "HFT business is real estate business: putting our million dollar trading FPGAs as few meters as the stock exchange as possible"
Although if you already are familiar with C, C++, or Fortran, there's not much motivation to learn another language just to pretty much do what you're already doing. The Cython documentation also just seems kinda cryptic to me. I found it easier to just incorporate a small Fortran module into my Python numpy code than to try to figure how to write and compile Cython code. f2py is really simple to use
dear god
Python is big in ML and data science, you have have Numpy, Numba, Cython all trying to get around the GIL. I'm not even talking about engineering, PDE solver, and general science. Everyone in this space has either a Fortran + Python or C + Python or C++ + Python codebase. The whole Julia language raised 10millions last year to deal with this. The GIL is a huge problem. 
So you'd rather be a garbage collector than write Java? 
When your devs and domain experts are all Perl gods. C'mon guys, people over tools.
Pretty much everywhere I've heard people complain about the GIL is because they are trying to spin up a lot of threads where they could have easily applied parallel processing, greenlets. You can pretty easily make safe, parallel mechanisms in C that use things like message queues to transfer information to Python and back. I'm not saying there aren't applications where it causes friction, I'm saying most of the places people complain about it, they shouldn't even be doing threading anyway. People just like to complain about something before looking at their own architecture.
[Here's an article walking through how to build a Python bytecode interpreter in Python](http://www.aosabook.org/en/500L/a-python-interpreter-written-in-python.html). [Here's a free online book about the Python virtual machine](https://leanpub.com/insidethepythonvirtualmachine/read). Also, at PyCon US (coming up in May, in Cleveland), Emily Morehouse-Valcarcel will give a talk about Python's abstract syntax tree (how Python parses your program into a form it can work with), and I'll be giving a talk specifically about Python bytecode and how the bytecode interpreter works.
If they're exactly the same, there's no need to store two copies of the data. `Counter.elements()` will give you each thing as many times as it was counted (i.e. if the input had three 'foo', iterating over `.elements()` will give you 'foo' three times). The multiset package works the same way, but provides some more set-like operations on it. If you have objects which are equal in some sense but not identical, so you want to store separate instances, then it's a bit more complex.
A demo or a screenshot would help in the readme 
Overall, it looks pretty good, but I have some general comments I think might help you in the long run - stick at one responsibility per class. I see that the ``TaskManager`` has too many responsibilities: persisting the data on disk, loading it, displaying it. The JSON specific code should be decoupled in a separate class. - same goes for Task class. Its serialization should not be its responsibility. You should have a separate serializer class that handles that. This way, in the future you can swap out the JSON part without big struggles and replace it with some other dialect (YAML, Database SQL, etc). - avoid overwriting global names (``file``). - you don't seem to handle the ``~/taskify`` directory creation thus crashing when attempting to save the data to disk. - you have too many if/elif/else and try/except blocks which makes the code harder to follow. Keep up the good work!
The statement above still applies though.
Came here to say this. I like Python and I hope MyPy takes off. Kinda reminds me of TypeScript's efforts of improving upon JavaScript.
You can explicitly release the GIL in cython, so then you can use threads and they will run at the same time. However releasing the lock will leave you in cython/c land only and you can't use anything from python.
When you don't know python
I tried it. It's buggy, *very* slow (20 seconds to type check a small code base), very verbose and the type system is very limited, for example recursive types are not supported, so you can't even represent very common types such as JSON. It's not production ready, unfortunately.
Alright, cheers!
 * When your problem domain is large and compute-intensive and pandas won't cut it * When your problem demands the use of another language because you have to interface with something that doesn't have python bindings * When you are writing a hardware driver * When the shared memory overhead of running parallel processes is too slow This list is not exhaustive, but it has to be said, that not many problems fall into these categories. Anything that is network or disk I/O bound can most likely be handled with Python, without human-noticeable performance impact. Things like asyncio+uvloop can make async both viable and fast (in some cases, as fast as good Golang implementations).
Python has great dependency management I'd say. Certainly better than Go (I know it's an example, but I can't think of something else that has bundled dependency handling into the standard tooling/library).
Command-line programs from which you expect an immediate, snappy, output (ls, cat, etc). The bulk of program execution will be the interpeter starting, and it'll be noticeable.
Fundamental building blocks (parsers, network programs, etc) need to be written in C.
asyncio + aiohttp = no more callback hell.
The biggest advantage is you don't need to write the cython code as a non-python module. You can write all your fluff in python and only cythonize one loop for example. I agree the documentation is lacking, and it's a PITA to get it working on windows.
You can pay, as people do.
... except when you use threads to handle a lot of IO, then Pyhon 3 can handle multithreading with no issues 
Python has a looong startup. I wonder how lambda deals with that? Never had a closer look actually. Anyway, there was a great talk about fighting this issue in mercurial (RIP).
Just start a GILcoin ;).
Right. Python is basically a program written in c. It’s really that simple. It’s just refactoring syntax and making bundling some abstractions together.
Last time I did that the executable was ~250mb because the entire python interpreter was bundled in there. In that case it wasn't a big issue but its still faaaar bigger than it should be. If I'd built the same project in C++ it would have been at most 10mb
Thanks! Will those be available to watch?
My experience exactly. I have hopes for its plugin system to let me teach it to understand my metaclasses but it's still too stupid and volatile to make part of my builds :/
Python excel in all programming fields but when performance becomes necessary you'd want to use C/C++. However, you can use Cython as a bridge between C/C++ &amp; Python. Or if you're really good in C/C++, you can write APIs to extend Python functionalities
PyCon records all talks, so yes.
Hi, I have been using tkinter more and more over the years, it happens to work pretty well on Linux, Windows and MacOs without having to add specific code most of the time. There are sometime some edges cases, yes, but easy to work around. Here is my pet project in tkinter: (https://github.com/pnprog/goreviewpartner) It was developed at the beginning for Linux and Windows, but users told me it was working fine on MacOs as well. Later we met one issue on MacOs, I have not MacOs computer to test for myself, but I could fix it anyway based on users's feedback. The only area where tkinter is not so easy to use it when your app needs to perform long computation. Tkinter is not threaded (the UI must be updated from python main thread) so if not done properly (computation done from tkinter thread), your interface freeze. It is still doable (my app does a lot of that) but a bit annoying to implement.
Downvoting for not being anything to do with Python.
While I agree that the GIL isn't fundamentally a bad thing (even HotSpot has a global vm lock) the interpreter really needs to be extended to make it non-exclusive like a rwlock. Needing multiple isolated interpreters makes sharing many kinds of resources impractical.
I think that this is not really true. I have seen Golang code bases which are awful to maintain. We are also early in Golangs life, and there will be many highly difficult to maintain examples in the future. The idea the Golang is super maintainable doesn't appear that obvious to me. 
Furthermore something Java has solved that py still hasn't is the issue of intra-runtime library version conflicts - beyond just shading Java has classloader isolation remarkably well done despite its rough edges (forgivable given how low level it is). I've thought about doing something similar in python - maybe via import hooks - but it's still far behind. As I understand pipenv is currently struggling with this very issue. Also maybe relatedly Java historically got flak for evolving glacially compared to most of its competitors, the reason for that being relentless obsession with backwards compatibility. There are 20 year old .jars still that still run just fine. Meanwhile, beyond the 2to3 elephant in the room, python doesn't even care about bytecode compatibility between minor versions. Maybe there's something philosophical there related to static vs dynamic mindsets :p
That's not really true though. PySide's api is pretty much exactly the same as PyQt's. I'm guessing that what /u/Taksin77 means by "not pythonic" in this case is stuff like `label.setText("Hello World")`. A more pythonic api would something along the lines of `label.text = "Hello World"`. To my knowledge, there aren't any pythonic Qt bindings.
Numpy is C. Scipy wraps Fortran.
If numpy is what allows you to write a code that is 1000x faster than stock python code and that meets your speed requirements, than Python is good enough. If however, you're bad at numpy and you can only get 10x out of it, than python is not good enough. Regardless numpy counts as being python. Cython, not so much.
Cython, like rust, is something I wish I knew better. I frankly consider it python's understated killer feature. Anyone interested should check out [SpaCy](https://github.com/explosion/spaCy)'s codebase which is an absolute goldmine.
Hi Redditors, I am writing to let you know regarding a role of - "Full Stack Developer - Python/ML" that we have at AIMagnifi (www.aimagnifi.com). For this role, we are particularly looking for people who are passionate to work with start-up and have experience in handling the product side. I found your profile a good match for us. So, If you are looking for an upgrade, please do reply and mail at neeraj@aimagnifi.com - it will be great to connect. You can read the details here - https://www.hirist.com/j/aimagnifi-technologies-full-stack-developer-python-machine-learning-2-15-yrs-311985.html?ref=ln Thanks!
I use pylint and the typing module. No sure waht you mean.
The typing module is in the stnadard library since 3.5... You don't need mypy.
Python's packaging system (virtualenv, pip, pipenv, ...) can be very time consuming and is plagued with subtle and not so subtle problems. Sys admins don't usually upgrade pip packages, so you end up with old vulnerabilities. The packaging system has separate dialects for python 2 and python 3. So if you deploy on servers administered by customers, Python can be the wrong choice.
As surprising as it is, my experience is that allowing free choice of language makes for a better environment. The advantages of a single language for a team are overrated.
Not sure about this one! We refactor Python all the time.
And I’m sure that single class in a single file looks stellar.
The first iteration of the system-level tool to install and manage snaps (a new package format for linux systems) was written in python and called `snappy` (not related to the homonymous music player). On the beaglebone black, which was a target system at the time, running `snappy --help` (`snappy xyzzy`, i.e. anything that didn't involve actual work) took over 15 seconds. That is, it took over 15 seconds just to import itself and figure out there wasn't anything it could do. We've since rewritten it in Go.
I also sometimes wonder how jokes work. 
When startup speed is important. 
Luajit with Lua coroutines. The jit/vm is not as fast as Node's and the ecosystem is not as vast, but it is a beautiful scripting language with proper parallelism. If you can stomach compilation and static types then the easiest, sanest option for scripting-like development experience with proper green thread parallelism is Golang. 
That‘s why linux is so great. You don‘t need to write a low level system driver often times because the device is just a file. 
It is made in python. PIL PYTHON Image Library. Each pixel color can be written as (#,#,#) where hash is any number between 0 to 255. There is nothing great about the image. Only thing is if you write all the three numbers same, it will produce a gray shade. I wanted to play with it. In that I made sqaure of size 256 pixels. So that all the shades of grey can be put on the edge. Then I connected edge vertices with similar intensity or shade of grey. Same thing I applied to digonals also.
&gt; Because low level languages are faster, such as C or assembly. C is actually a high-level language. &gt; In Windows Python (kinda) gets translated into C during execution. Absurd.
how about parallelism? 
If performance matters and you want Python style syntax, maybe try Nim. It's got a nice syntax and compiles to a native executable which runs fast.
Embedded is slightly awkward. There's a [presentation on embedded python](https://www.modio.se/presentations/Embedded_Python_in_Practice.pdf) So it's doable. But yea.
That is true, but in reality it is not always that black and white. You may be ok with a certain loss of performance as a trade off to get faster development.
Ruby, Node, and Python are all single threaded runtimes unless you go outside the official runtime. 
Everything in python is an object, which sounds cool, but you're going to pay for it
but Go also has garbage collection.
I see the light
*low level device file
* When performance matters. * When building onto a program that's already in a different language. * Low-level stuff like drivers. * Client side program that has to run in a browser. JavaScript and languages that compile to JavaScript like TypeScript are your only option. * Not all hardware (like microcontrollers) support Python. * When you need tight integration with the OS. * Installing Python-packages can be a pain on Windows. * Building safety systems where it must be provable that your program does what was specified.
Sometimes I with Python was like it is including all the nice libraries available now but with static (could be inferred variables) typing and compiled to native code. 
What did you end up using for inter-process communication? Node has a core API for Berkely sockets ([net.Socket](https://nodejs.org/api/net.html). There is a module with [mappings](https://github.com/ozra/mmap-io) for `mmap` shared memory that is maintained. Your statement that "node fork processes are not threads" is not exactly true; Node child processes are multi-threaded, but the event loop is restricted to executing on a single thread. You don't have direct user-land access to other threads but they're still in use (for example, I/O is pushed off to the thread pool). And like I mentioned, you can write your multi-threaded code as a native module and expose bindings to it.
Swift, perhaps? 
Developers are resources too.
&gt;C is actually a high-level language. Capable of low level calls. And still lower level than Python. &gt;Absurd. Not entirely accurate, yes. Absurd, no. 
You mean Python still has the Good Iridescent Look?
&gt;No it really doesn’t. It really doesn't kinda? That would depend on your definition of kinda. I was attempting to make it easier to comprehend. Nice blog post though! Very informative. Although they missed out how CPython figures into things. So kinda shite actually.
Nomen est omen.
Exactly. Which is likely why it shares performance order of magnitude with Java, C# and even Node.js, despite being compiled to native. 
Well, C compilers are programs written in C. The point is that python programs are fed into another program, whereas c programs are run directly by the cpu. 
If @jimminy is referring to Microsoft Access, I don't see why your statement "if you port Access application to anything else you won't regret it" would be true. Windows has a performant built-in RDBMS ([Jet](https://en.wikipedia.org/wiki/Microsoft_Jet_Database_Engine)) that you can depend on being there, instead of trying to bundle SQLite or something into your app. Access itself is just a GUI front-end to Jet. You can script your app in C# (you're not limited to Visual Basic), and make use of the GUI widgets and business logic that Access provides. It's a quick and easy environment to write a little app in. I've used it for example for a financial analyst who had a bunch of Excel macros to analyze month- and year-end financial data queries that involved a very large data set. Their spreadsheet would take hours, but an app that took a morning to write allowed them to create new queries on their own and offered near-instant response.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://en.wikipedia.org/wiki/Microsoft_Jet_Database_Engine) - Previous text "Jet" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
I intend to do a personal project in Kotlin this summer, just to get familiar with it. I've read Python was an influence in the design of the language - does it feeling like writing in Python? Or more like just Java with a little different syntax?
Here's one I tried in Python 2.7 (not sure if it's changed for 3) &gt;&gt;&gt; a = 5 &gt;&gt;&gt; type (a) &lt;type 'int'&gt; &gt;&gt;&gt; a += 2.5 &gt;&gt;&gt; type (a) &lt;type 'float'&gt; Which can lead to some fun things if you do something like this: &gt;&gt;&gt; def foo(a): ... if(a&gt;2): return 2.5 ... if(a&lt;2): return 1 &gt;&gt;&gt; a = 5 &gt;&gt;&gt; a += foo(a) &gt;&gt;&gt; type(a) &lt;type 'float'&gt; Or otherwise: &gt;&gt;&gt; a = 1 &gt;&gt;&gt; a += foo(a) &gt;&gt;&gt; type (a) &lt;type 'int'&gt; If for example you wanted to do b = a &lt;&lt; 2 afterwards, because shifts are illegal on floats causing a potentially hard to detect error.
Absolute bullshit. I work in HFT FX as a developer and the microsecond era is basically dead. Exchanges use various methods to make microseconds worthless nowadays. People are making billions trading in 1/10ths of seconds not losing it.
Not anymore. That era is dead.
Java is heavily used in HFT. Not heard of anyone using Rust though.
Not all large projects. Not all environments. It really depends on the situation. If you offshore a lot of work, static typing is a must-have on a sizable code base. Likewise if you have high turnover, or have trouble recruiting senior people. Type errors tend to manifest themselves, in my experience, primarily with people unfamiliar with a given code base. Or with people who just can't be bothered to build or read documentation. Or who operate under such throughput pressure that they make those kind of mistakes. I find in mature environments - those with standards that require tests/documentation/style compliance/code review - the threshold for needing to migrate to a lower productivity language is higher. It all really depends on where the talents lie within a given team though. Plenty of teams can be just as productive with C/C++/Java/Go as others with python. Some teams can migrate between languages effectively. Python has it's place. Other languages have their place too. There is definitely a line where you outgrow python. When you are getting into threading or doing static type enforcement, I think it's time to look at migrating logic to a new language where new developers aren't going to feel encumbered by it. In the end, it's not all that hard if you have a clean code base. And it's easier than figuring out the limitations and confusing areas of things like Twisted. Maybe I'm being a little pedantic. If I was building up something large and monolithic, I'd choose not-python out of the gate. (though for a reasonably simple SOA python would be on the table).
When watt per instruction matters. When 1% increase in performance means millions of dollars. When milliseconds means missing Mars and your space probe falling into the sun.
That's what I said. I meant it's just not part of the "language" per se, hence a "drop-in feature". i.e it's optional
Camelcase. CamelCase everyWhere. And getters/setters. And I'm not sure why, but Java people tend to write really long lines of code. But their logging is the best. Probably the most mature group of developers where logging is concerned. And they tend to put together good tests without being forced to.
if use golang or C but that adds additional development time. 
Hey this is my first time sharing my writing so if you have any suggestions or (constructive) criticism I'd love to hear it.
I just learned lists and functions lmao
You can do ludicrous performance with jvm languages (eg java, kotlin) too. 
&gt; Capable of low level calls. Non sequitur.
Multiprocessing has shared memory capabilities. But it isn't as easy as sharing objects between threads. But it is possible in Python. 
not really. i took in about 15000 data points a second which is not that much. I/O wasn’t really that taxing. 
Only the interactive shell displays the results of each computation by default. Running your scripts from an IDE requires explicit `print` calls to display stuff.
You probably mean Cython. CPython is the default implementation.
It has an extremely low barrier for entry: * Pre-installed on 2/3 of major OSs (it might be on windows, but I'm not sure) * Doing hello world is as simple as typing python into a terminal and then typing `print("hello world")` Compare that to most other languages installation is needed, there's a lot more ceremony to just do hello world, potentially confusing symbols, you need to compile the program and then run the result some how, you need a special runtime environment or any combination of those. I'm not saying any of those are bad things, just that they raise the barrier to entry higher. Even if someone has never used a terminal before, often you can start IDLE from a gui menu.
It's ready for production if you adapt your code slightly around its idioms and avoid overly dynamic / magic where possible. For the rest there is type: ignore. 
So Komodo IDE wouldnt be a preferred text editor to learn? I dont mind typing out extra things to receive an output, the course is set using an online text editor but I wanted to get a grasp on Komodo while the learning is still simple. What should I type beforehand to receive an output. Apologies im new and havent learnt anything on encountering this. Also if I continue to use Komodo will I encounter errors on the simple side like this in the future.
https://stackoverflow.com/questions/261638/how-do-i-protect-python-code
No it's not about KOMODO IDE. Interactive shell is the thing that you type in when you execute "python" in cmd. It runs commands immediately. If you want to write a normal program with a full code you will write it in the IDE and the code will be executed together. ( May be hard to understand it from me - search the definition on the Internet. ) That's why 4+4 will be printed in interactive shell - the normal code needs print in order to show something on the screen.
Thanks Ill get right on that, I was looking around but I couldnt find anything for errors as simple as mine. Appreciated +
&gt; Not machine resources. Obviously, but you said "available resources" and not machine resources: &gt; When you care about an efficient use of available resources. 
just do import iridescent 
I'm very interested in step 5, can you share some code and what your process was?
I tried, but it's still slow, verbose and unreliable. The inability to define recursive types is also a deal breaker, the recommended way to type a json variable is "Dict[Str, Any]", which is not much better than a dynamic type. It also doesn't help that Django and DRF, which I had in my project, rely a ton on metaclasses. Almost everything ends up being "Any".
&gt; Obviously, but you said "available resources" and not machine resources So you were worried about global oil resources? Agricultural resources? Renewable energy resources? Stop feigning ignorance.
I have a feeling you're fun to be around...
I don’t see the relationship between “securing” and “hiding from my customer”? These are two different concept. Secure as in security means you ship code in which you can trust. If your customer want to get rid of your legal contract by removing the licence check they loose their right to have support. And they also might loose a trial. Just add a clean legal agreement, or do not use Python. We use everyday a big software that comes with its full (ruby) source code, we pay for it, and are very happy to have their support when we have a problem. We might want to try to “steal” some ideas, but ultimately they know their software much more than we can never do, so we will continue paying them happily as long as they keep improving their software
Thanks for this!
I got curious about this just the other day and I found the links below interesting: [https://talkpython.fm/episodes/show/152/understanding-and-using-python-s-ast](https://talkpython.fm/episodes/show/152/understanding-and-using-python-s-ast) [https://nedbatchelder.com/blog/201803/is_python_interpreted_or_compiled_yes.html](https://nedbatchelder.com/blog/201803/is_python_interpreted_or_compiled_yes.html) 
It's on by default in Cython (because Cython still uses the CPython runtime), but you can turn it off. 
Yeh, we started using cython recently when the scope of the project changed and we had to deliver the software externally. We still write in pure python, but compile our modules to cython shared object files when releasing. There were a few changes required, but they were minimal and were bad coding practices anyway. For example, dynamically changing the python path. I think we saw at least a 10% increase in performance. I’m sure it would be much higher if we provided type hints. 
when u need a phone app within a week
In less cases every day. 
There's a book by O'Riley's for Cython which works for good reference. Some parts of it are confusing but I think it should be a good place to read and learn about it Also, usually installing Visual Studio with a C++ language bundle usually fixes everything for me, other than that, I usually use stack overflow
I meant CPython, as we are talking about the default implementation. As a high level overview from a noob perspective, Python gets translated into CPython, which gets translated into Bytecode. It seems to me your just trying to nitpick. Try making some useful contribution. Comments like yours make me wish I hadnt tried to help.
Idiot
A text editor only edits text. It doesn't run programs. It's like writing a letter in Word and then being puzzled why your friend didn't receive it. Because you still need to send it to her. I don't know anything about Komodo, but most IDEs have some big green "play" button for running the program you are editing. Otherwise, run it from the terminal.
When you want to write code that uses tail recursion.
EBS is one of the largest markets out there and they have this technology: https://www.reuters.com/article/us-markets-forex-hft/exclusive-ebs-take-new-step-to-rein-in-high-frequency-traders-idUSBRE97M0YJ20130823 The current latency floor is 5ms which makes being microseconds faster pointless. 
&gt; What's a good choice for a scripting language with threading? There's none, or alternatively Python is as good as they get. Every relatively popular dynamically typed language that has threads at all also has a Global Interpreter Lock or equivalent. The only thing special about Python is that the community for some reason is aware of the issue but not aware that every other language in the same class has it.
Thanks! I apologise if I may have violated some posting policies.
Used praw to get comments from u/shittymorph. Found 206/295 comments analyzed to have 'undertaker'
&gt; print "Hello Reddit!" And this would be `print("Hello Reddit!)` (with the parens) if OP is using Python 3.
Ah yes pip install cpypy 
&gt; writing readable code that at least resembles production quality software actually i find Python difficult to read for large programs. we use Python only for the great math libraries (numpy/tensorflow/etc). the only other times we use it is if we need an open source package that is written in Python. a lot of people use it for ''glue'' but i prefer Bash or Perl in that scenario. Python is not a fit for Android, iOS, or the browser. 
A solid IDE can help alleviate many problems, that’s true (and probably the only thing that makes java usable imo) but unfortunately not an option for me. Also, even if it was, I can’t access any data locally, so I could only test the code on notional data that would be quite a bit of effort to generate. The projects using the platform with other languages are definitely struggling a lot less with this...
the context is "when performance matters above all else".
TypeScript, but I'm no expert
&gt; ... pythonic I dont think you know what this word means.
Just to add a different answer: When your coworkers don't know Python.
When I said "that is true" I agreed with Mattho that the statement you are (and also he is) referring to still applies and then what I **added** was about the situations where you can trade a little worse performance for smoother coding. It looks like you missed that because you repeated what I already agreed to.
Interfaces in Python? April Fools?
I just glanced at the docs, and it sounds like maybe a combination of `asyncio.ensure_future`, which returns a `Task`, and `asyncio.shield` might work. I’ve never used `shield`, but the documentation says it waits for a future, preventing it from being cancelled. 
k whatever enjoy
&gt; How to implement inheritance and multithreading in Python ? I feel like this should be split into two different questions. (Or are you talking about inheriting from `threading.Thread`?) 
But it's a pain. That's the point.
Your method seems correct, but I think it might not be that difficult to do if you use an argsort. It seems to be that it would be better to evaluate this metric using numpy, where you could argsort both your targets and predictions, and find the size of the set intersection of the top 10 elements of both. If you have your ytrue and ypred, this would look something like len(set(np.argsort(ytrue)[-10:]) &amp; set(np.argsort(ypred)[-10:])) If you want to use pure tensorflow, you could use the tf.sets.set_intersection function on the output of tf.nn.top_k of the targets and the predicted values. 
Here's the project: https://github.com/nemec/audibleMPD * [The file being read](https://github.com/nemec/audibleMPD/blob/master/audibleMPD.py#L160) (apparently I used `/dev/input/eventX`, which I guess I determined through trial and error which was the right one. * Instead of hardcoding the keycodes, I [parsed them out of Linux's input header file](https://github.com/nemec/audibleMPD/blob/master/input_header.py). Because there are a lot of them. * [The console class](https://github.com/nemec/audibleMPD/blob/master/console.py) takes the file, reads it, and outputs a gnome event based on the 'key' it reads. TBH I'm not sure why I did that, in retrospect it probably would have been easier to simply do some callbacks... oh well. [Here's the part](https://github.com/nemec/audibleMPD/blob/master/console.py#L76-L80) where it reads 16 bytes and then transforms it into an event. * After that, I just read the key [and execute play/pause/next based on it](https://github.com/nemec/audibleMPD/blob/master/audibleMPD.py#L141-L155).
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [nemec/audibleMPD/.../**audibleMPD.py#L141-L155** (master → d214ac4)](https://github.com/nemec/audibleMPD/blob/d214ac44e2411583db3f6cab835138747b6df6b1/audibleMPD.py#L141-L155) * [nemec/audibleMPD/.../**console.py** (master → d214ac4)](https://github.com/nemec/audibleMPD/blob/d214ac44e2411583db3f6cab835138747b6df6b1/console.py) * [nemec/audibleMPD/.../**console.py#L76-L80** (master → d214ac4)](https://github.com/nemec/audibleMPD/blob/d214ac44e2411583db3f6cab835138747b6df6b1/console.py#L76-L80) * [nemec/audibleMPD/.../**input_header.py** (master → d214ac4)](https://github.com/nemec/audibleMPD/blob/d214ac44e2411583db3f6cab835138747b6df6b1/input_header.py) * [nemec/audibleMPD/.../**audibleMPD.py#L160** (master → d214ac4)](https://github.com/nemec/audibleMPD/blob/d214ac44e2411583db3f6cab835138747b6df6b1/audibleMPD.py#L160) ---- 
Calm down. 
Yes absolutely. It isn't worry-free, either. It's a great answer to the question, "what project would you not use Python for?" which of course is the subject! I'm just replying that no, objects don't have to be serialized to be shared between processes. Like you said, it's just no fun at all to do it. 
Most of that 85ms is the lambda service itself.
Nice idea!
but does the remote plugin call a normal python function or a coroutine? I still don't get why you need it to be async, or even why it needs to be sync inside another async. 
I wanted to learn CUDA. So I installed Numba. I gave up trying to learn Numba and just picked up C instead. Now i can write CUDA kernels as nature intended.
Oh I like that idea of denoting interface functions with __init__.py, will try to implement it on my current project. I was thinking ideas like using single underscore like `_foo()` to denote non-interface functions lol.
&gt; using single underscore like _foo() to denote non-interface functions lol. Also a good thing to do. 
That returns a coroutine that I'd have to await, which I can't do synchronously.
Normal python function.
"""DO NOT TAMPER"""" followed by """PLEASE DON'T TAMPER. It'll break your raspberry Pi i promise."""
But do you really want to work for someone who thinks asking you questions that can be answered with a google search is a good idea? i have no idea that there's even a help() function. let me google that.
&gt; functions/methods should be small, do one thing and do it well, etc. Yes, this is excellent advice, but don't go mad and try to make every single method/function a one-liner. Apart from turning your code into [ravioli code](https://en.wikipedia.org/wiki/Ravioli_code#Ravioli_code) which is nearly as bad as [spaghetti code](http://wiki.c2.com/?SpaghettiCode), it will hurt performance. Function and method calls aren't free in Python and the compiler cannot inline them to save time. In my experience, the sweet-spot between "too tiny" and "too big" is about 3-30 lines of code in the body of the function, plus comments, docstrings and the function header. I'd occasional go beyond 30 lines, but not to often, and not by too much. (50 lines, maybe, 500 lines, no way.) More important than merely keeping functions "small" is that they do one thing and *are reusable*. If you have lots of tiny functions which only get called from a single place, never to be used again, then you have ravioli code, and they probably aren't pulling their weight. It *might* be worth refactoring them back into the body of the calling function. (See Martin Fowler's books on refactoring.) &gt; Now, how do you organize these smaller, "non-interface" functions/methods? In a class, put them as private methods: class Spam: # private methods def _aardvark(self, arg): return arg + 1 # public methods def eggs(self, arg): return self._aardvark(arg) If you've got lots and lots of them, and the class is turning into an enormous bowl of ravioli, then factor them out into a private mixin class: class _SpamMixin: def _aardvark(self, arg): return arg + 1 class Spam(_SpamMixin): def eggs(self, arg): return self._aardvark(arg) That's especially good if you can re-use the mixin across multiple classes. (Remember, the *most* important reason for dividing code up into functions is to be able to reuse them.) For top-level functions, I like to put them in a section near the top of the module, after the imports and any constants and exceptions, before the public functions and classes: import this CONSTANT = 12345 class MyException(ValueError): pass # === Private helper functions === def _aardvark(arg): return arg + 1 # === Public functions === def spam(arg): return _aardvark(arg) If the number of private functions in your module becomes unwieldy, it is time to refactor them out into a separate module. 
Have you tried it? The documentation doesn’t say anything about shield being a coroutine or returning a coroutine.
You're right, it's not a coroutine. It's a future. I still need to await it. The examples in the docs use `yield from.`
Instead of "non-interface", a better term is probably "internal" functions. We have public functions which are part of your library or application's API, and then there are internal functions which only exist to implement that API. Those internal functions should probably be marked private so that external callers don't rely on them. (I'm pretty sure your question is fine for this subreddit. And its a nice question too! Have an upvote.)
&gt; but if I try to compile the C source file with gcc, I get "python.h": no such file or directory In Linux this generally means you're missing the python-devel package. I'm guessing there's a similar option you need to find and install in anaconda.
Jupyter Notebooks are the best editor to use when learning.
C is pretty much the lowest level you van get before assembly. Its all relative, and relative to python, C is low level.
&gt; You probably don't have access to registers You kind of do (there is a special decorator for inline assembler functions).
Swift was developed by the guy that created LLVM. Apple brought him on to fund LLVM development. He transitioned into creating Swift. He was never a full time Obj-C programmer
Awesome, that does indeed work. Thank you very much!
Perl has no GIL
I'm curious. Do you have sources? Which other 'relatively popular dynamically typed language' are we talking about?
learn C. i thought i was comfortable with python before learning C. After learning C (and building a neural network in C based on a python implementation), I came back to some old code. Utterly disgusted, I refactored the code with C experience in mind with ease. You see the language differently. I'm still trying to learn OOP in C. It's not a feature but it's doable with fancy footwork. OOP is beautiful guys. you don't see it until you don't have it.
&gt; Its all relative ...in West Virginia. &gt; C is pretty much the lowest level you van get before assembly. C is high level, Assembly is the lowest level regular programmers can access, microcode is the lowest level some programmers reach. Let me know if you're still confused.
Just download the anaconda distribution and use jupyter notebooks to learn. Most schools are starting to do this.
YouTube used to have a lot of Python but I don't think that's the case any more. Right now the biggest guys around on a Python stack are instagram and Pinterest, I think.
Yes. However, the MicroPython documentation covers the question of improving the performance quite in detail.
Fair enough. Terry Jones might be the only person who does.
Perl doesn't have real threads. https://perldoc.perl.org/threads.html
Perhaps I am misunderstanding the purpose of this list, but most of these feel way too broad. &gt; Explain about Python’s dictionaries? What exactly do you want to know *about* dictionaries? How they function internally? Differences between iteration in Python 2.7 vs Python 3.6? Etc. They don’t have a clear direction for an expected response. That may be the purpose that this list is attempting to achieve, but I cannot say that I see much benefit in practicing vague questions for interviews. 
Ok. Man. I will take down the post.
1. when you want to hide your code. protecting code is difficult with python. 2. when you want to send tiny executable. with python, you either want the user to install python or you will end up sending *huge* files. 
I would like to know this too. 
For that you should use Jupyter Notebook or Jupyter qtconsole.
just run this command. it has the answers you need. `import this` (in python terminal) or `python -m this` (in bash) 
Very High Level Language vs. High Level Language is a useful distinction here
For as much as people don't like Java, it's the gold standard of non-native languages in terms of execution time.
Okay, sorry i simplified things a bit. C is high level relative to assembly, and python is high level relative to C. Python abstracts over a lot of low-level concerns and concepts that you have to deal with and manipulate directly in C-level programming. The level of a language is definitely relative to the domain of your work. If you're a system programmer, and you mostly program in assembly and C or equivalents, then yeah C might be "high level" in that context. If you're doing application development or web development, and you're mostly working with languages like Java, or python and equivalents, then C is absolutely "low level" in that context...
Elixir has an excellent and easy to use concurrency model thanks to the BEAM VM (i.e. Erlang VM) which has its own process system wherein you can spawn hundreds or even thousands of processes at virtually no cost -- OS processes are handled for you. Unfortunately, Elixir is quite hard compared to Python and it's pretty new, for better or worse. Package management is light years ahead of Python, but packages are a bit more lacking. It's also not strictly a scripting language -- you can run straight from source with .exs files, but you can also compile .ex files.
anaconda comes with the python devel package. after swapping the forward slash for a backslash (and resolving the "no such file or directory error), the compiler just throws me errors like #error "LONG_BIT definition appears wrong for platform (bad gcc/glibc config?)." 
The primary trading centre in New York is called ny4 in secaucus. There are no hft firms based there. Yes they have servers in the same data centres and fibre cross connects direct to the exchanges switches but if you have to host your server in a data centre it might as well be in the same one as the exchange. It's not even that expensive to put your servers there. I can't remember which one it is (hotspotfx, currenex maybe) but they require you to use a 1km fibre cable to connect to them so no matter where you are in the building its the same latency for you as everyone else even if you happen to be in the next cabinet along. 
Yeah Python would find so much use in shell if it started as fast as bash. It would also greatly enhance multiprocessing to have a faster interpreter start-up. 
I guess thats a question of experience.
raspberry pi sense hat marble maze project just got done with implementing a maze class and now working on including portals. which are places on the maze that teleport you to different mazes
Colorful snek 
&gt;`print` statement I have some bad news...
Yep. If you need this badly, switch to Erlang. It's a mental shift, but suddenly a whole bunch of problems just disappear, and in their place is the relatively minor need to learn recursion as a form of iteration.
Erlang!
I totally agree. My parents got us a pet python when I was about 7 years old. It was at most 50cm long. 15 years later it's over 4m long and will live for lots of years to come. It might not love you the same way a dog does, but it's a very interesting pet. 
It was a myth after all. [Python does scale]( https://www.paypal-engineering.com/2014/12/10/10-myths-of-enterprise-python/#python-does-not-scale)!
Viridis for all!
God subscribing this subreddit and the elite dangerous subreddit will never stop confusing me.
Anaconda is a distribution of python that includes many common packages, usually also with a focus on using python for science and data analysis. It's just really handy to get up and running . The python bundled with it is stock python but some of the libraries like numpy have other optimizations. Conda is a command line tool that comes with anaconda and it's similar to pip AND virtualenv. You can create separated environments with different python versions and conda often has many packages, especially binary ones, that are more cumbersome to get with pip. Conda forge is a community repository of useful packages for conda.
By nature, it'll be rather limited. You're not going to put Micropython on a Tiny85, for instance. I've seen it on ARM stuff (cortex m0 and m4), but then you're walking towards the realm of SBC instead of embedded.
Internal functions, yeah, I think that's the right term, thanks. I wonder why I didn't come up with it as I encounter that term a lot.
Everyone has to start somewhere mate! If you've not checked out /r/learnpython then have a look! 
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [I made a python cheat sheet](https://np.reddit.com/r/learnpython/comments/82t191/i_made_a_python_cheat_sheet/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
Thank you for the reply. If I am to do it with the tensorflow, tf.sets.set_intersection is going to give me an intersection of values, not LOCATION (INDEX) of values. So, is there any way to do it the tensorflow way?
tf.nn.top_k returns both values and indices, so you just need to do the intersection on the indices. https://www.tensorflow.org/api_docs/python/tf/nn/top_k
If you compile a script to perform that function, you could perhaps create a generalised version as an external facebook message backup option?
Ohhhhhh nice nice.
First person shooters, apart from that one FLS written in Pygame
Ah my bad. By stock I meant to say it's cpython rather than another flavor of python. E.g. jython/ironpython/etc I'll update my post. 
Giggity
I see the CSS is in full effect!
Thanks! Good explanation!
In the documentation, it says Returns: * `values`: The `k` largest elements along each last dimensional slice. * `indices`: The indices of `values` within the last dimension of `input`.
cool shiny snake?
Your question is sort of underspecified, and regardless of the answer there's a lot of angles to take on it. 1) "can't change the script that is executed" This means preventing access to the device's file system ( or the storage device used to store the code ). The exact nature of securing this varies wildly based on the environment and choice of supporting software as well as the overall 'value' of accessing this code. If an attacker might make 5 dollars by accessing your code, modifying it to send user details to a third party server and exploiting that info, you could probably just put a sticky note next to the raspberry pi and say "haha, you wasted your time getting here" as a deterrent. If they stand to make a hundred thousand dollars, you probably want a secured facility with keypad/keycard entry. In terms of preventing digital infiltration, this can largely be accomplished by disabling SSH access via password ( keypair access only with reasonably large keys in the neighborhood of 1024 to 2048 bit keys is roughly 'industry standard' ) and disabling unnecessary services ( FTP, mail services, etc etc ). A raspbpi is not likely to have those services enabled in the first place so you probably don't have a lot of work to do there. Simply running this device on an intranet ( behind a router/modem with a firewall ) would probably be sufficient to prevent access by anyone who doesn't have insider knowledge on the network, the software, or the hardware. 2) Rendering the software secure against exploitation This is even trickier and more nuanced than physical protection. Are you interacting with a database? Are you accepting user input? Is this user input 'trusted' ( spoilers: no user input should ever be trusted, ever )? Are you using any third party libraries? have these libraries been analysed for their own security flaws ( see above )? Have *those* libraries been examined for external dependencies which have been analyzed for vulnerabilities, and so on down through every dependency in every dependency? 3) "so nobody can see what is written" Why? Are you afraid of someone stealing your ideas? If you're providing software development or a hosting platform to a customer, do you have a contract? If not, why? If you do, make sure your contract includes a clause indicating that use of your code is not authorized without your consent. If your client steals your code, you can sue them. If your client modifies your code and things break, you are not obligated to repair any damages caused by the modified code. If you're afraid of someone stealing your ideas, you're gonna have to get over that. There's essentially no original or interesting ideas to steal. There's no profit in ideas; a business profits by providing services and goods. Your service/good is maintaining and updating the software, providing support for issues that arise ( either through misuse or bugs/development oversight ), and providing a platform for the software to run. This is why licenses and contracts exist. You license your code, you enter into a legally binding agreement with your client stating that they can't take your code and re-sell it, and that they have to use the code provided by you or you're not liable for any damages or support requirements. Your contract/license with your client will specify 'acceptable' or agreed-upon solutions for hosting and using this software. "Hiding" your code from your client is a fool's errand. Anyone sufficiently interested in reverse engineering your code will do so. A half-workaround is "Software as a Service" ( SaaS ); you run your code at a remote location ( DigitalOcean, AWS, whatever ) and provide a means for your client to interact with that code ( an API ). You charge them for access to the API. They never have direct access to the code. This is a good business model if you intend to have multiple clients accessing the same software but 100% overkill if you're just doing so nobody can peek at your source code. tl;dr don't bother. write your code and use a contract that protects you from liability if your client does something stupid with the code
Yup. Thanks for pointing that out. I should finally move to python 3. 
What's wrong with multiprocessing?
What do you mean? -Apple 
Thinking ... ... .....
Writing a chess game in pygame. Currently finishing first part, i'm planning to rewrite it as a network game, with peer-to-peer archictecrute. 
PyPy can sometimes be faster than equivalent C++ code, mostly stuff doing a lot of data structure manipulation as PyPy's dict and list implementations are optimized to within an inch of their lives (especially compared to the STL versions).
To elaborate here, the pertinent thing is computational performance. If you're building a website that spends the bulk of the time waiting on responses from a database, it doesn't make much difference how fast the actual application is, because it will spend the bulk of its time waiting on the network regardless. 
Does that mean Python has a Shiny package? 
I have an directory I can drop things in and an `rsync` job that runs on the phone to sync up every N minutes (currently 1440, but could be anything).
The python equivalent to a Java fat jar is a pex package which is pretty easy to build from a setup.py file.
Can you specify how exactly? I started researching this subject and it seems it can be done via proxy objects.
Pyside?
Possibly, but there are compromises there, too. PySide is on Qt4 and PySide2 doesn't seem to be really production-ready (I have not used it. I am just going by the project page). Those might be perfectly fine depending on your project, but those would be pretty valid reasons to choose another UI library or another language entirely.
Thank you for the clarification. I have few more questions. Once I run tf.nn.top_k and tf.sets.set_intersection, do I need to also run tf.reduce_mean on the output of the tf.sets.set_intersection?
And whatever you do, don't step.
My whole project is in TensorFlow =/ The idea is to recreate the results of the paper and conclude that Random Forests perform better than the DNN.
real multithreading 
Interesting idea! But I'm curious as to why you'd choose to use C idioms when writing Python? If I understood your library (please do correct me if I am mistaken), a Python idiom to do this is to use exception handling: assume something is true (e.g. the variable is a particular type and/or has a particular value) and then handle errors if this assumption fails. Your first example can be written: try: print('last value is', data['a'][-1]) except (KeyError, IndexError): print('could not find last value :(') ...which I personally find quite readable. I am sure there are programmers who'd prefer a more C-like approach though!
Nothing to do with your post not doing anything to do with Python: [https://recycledrobot.co.uk/tweet/index.php](LINK) +/u/sodogetip 5 doge verify
Why do you dislike camel case? It's less typing 
To my eye: ugly, more difficult to read. If it's a reused variable, I almost never retype the whole thing anyway. I am so used to PEP8 from other work in Python my brain just likes the underscores better. Disclaimer: prior to working with python I did lots of C# and Java with camelcase and still thought it looked ugly. 
As an interesting side note, JavaScript is not all that different than Python in terms of functionality - the reason it is so much faster is because JavaScript is almost always run in a JIT compiling interpreter, which can tease out optimizations and produce fast native machine code for frequently run sections of the code. Python also has something like this - the Pypy project can achieve pretty massive speedups on a lot of normally-written Python code.
Question: Wouldn't it be better to have a cloud drive that you can just access from your phone, so you just have one version of each file floating around?
&lt;&lt;&lt;Please insert effort or humor here&gt;&gt;&gt;
This is what I came up with: foundNewFormula = True while foundNewFormula: foundNewFormula = False for f in FORMULAS.keys(): #keys are the verbatim text of the formulas spelems = splitOutElems(f) #creates a list of the variables in the formula without symbols or other garbage numelems = len(spelems) for i in inputs: #inputs is the Physicist's inputs for data we know if i in spelems: numelems -= 1 if numelems == 0: for el in spelems: if not el in inputs: inputs.append(el) foundNewFormula = True
hey there, what do you mean by you build your own openCV ?
This post is better suited for r/learnpython 
Isn't this a copy of the go version?
I'm mildly impressed you've chatted to more than 1,000 people
Yeah, you can use the `abc` module to create these. Of course without an external tool, you won't find out until you try to instantiate the class that you screwed up and didn't implement a method. `collections.abc` makes heavy use of this and I've been doing the same recently as well (mostly in preparation of making the jump to Py3 and using type annotation based DI). But even if you ignore this technique, you still have interfaces lurking behind the scenes, waiting to bite you in the ass when you forget about them. Take iteration for example, it has an interface (or I suppose the Python terminology is a "protocol"). You need to implement `__iter__` returning an iterator and that iterator needs to implement both `__iter__` and `__next__`. Or, the alternative is implementing `__len__` and `__getitem__`.
Erlang Is a compiled language, it compiles into beam. Erlscript is a way to run uncompiled erlang but it's limited and doesn't have the power of a real erlang program. Elixir acn do better with it's repl but still it's not anything near Python.
It has quite a range these days. I forget what the smallest uPython binary is that I've seen but I seem to recall it was on the order of 100 bytes. But you are right in general - it's designed for the 64-K-byte and up world. 
`from humor import *`
from edx?
The app is called `FolderSync`.
Oh gotcha! I thought it was just notating the number of elements, I didn’t realize it actually reflect that when iterating. Cool!
Why did you decide to finish the book rather than take a MOOC which would give you some credentials?
&gt; The questions are useful for both freshers and experienced job seekers in Python real time interview questions. As opposed to what, a take home quiz from an interview? "This quiz counts for 30% of your hiring score." &gt; How to overload constructors or methods in Python? You can't, not without some fancy footwork at least. Even then anything other than single dispatch is a huge pain in the ass. All I got from this garbage list is someone hiring Python devs really cares about people knowing about dictionaries age opening files. 
Curious to know why did you chose `pyplot` and `seaborn` but not `matplotlib`? Isnt matplotlib more established?
Thank you.. I will do that at the end of this month. And make a post for us vim-lovers :)
Thanks, that really helped. 
Just continuing my development of my server-client application. This week I worked a lot on developing unit-tests to push code to my VM. It was an interesting experience using `fixtures`. I should have probably used `mocks`, but I dont know much about them. I have to understand them. This week I am planning on finishing up the testing (unit/integration) for this class, and then generate the integration test code for compiling the client. /u/ManyInterests also pointed me to this amazing video on testing &lt;https://www.youtube.com/watch?v=FxSsnHeWQBY&gt;. Learnt a lot from this and am trying to implement the concepts as I go along. Its always amazing to hear all that you guys are working on. 
&gt; * When you need (single file or non-single file) executable "distribution" as a first-class citizen. Sure we have PyInstaller, py2exe, cx_freeze, etc...but these are not "first-class" citizens and they don't always work either. This can be accomplished via setuptools' console_scripts - but it is still a bit awkward.
&gt; Conda is a command line tool that comes with anaconda and it's similar to pip AND virtualenv This is also incorrect. Conda is a general package manager, which allows you to install not only Python packages (like pip), but also packages built with C, C++, R and several other languages. Another important thing is that should never try to install packages that can be installed with conda using pip. That could break or corrupt your Anaconda installation very easily.
Honestly good question, I believe the short answer is ‘yes but it’s complicated and involves how you invoke the processes and how you make sure there isn’t a conflict’, I suspect the easiest method is shared pointer references if everyone is just reading. I have seen people needing to do this (but not at high speed) use databases instead, reading end writing to them which a configuration that makes it almost like a shared bus.
Maybe your methods are too small. How many of them are called from just one place?
The display update function should be outside the event.get() loop. The way it is now, you’re updating the screen every time you process an event from the queue, like some mouse movement (that’s why your screen is only updating on mouse movement). If you put it outside that loop, you’ll update the screen whether you’re processing events or not.
I'm desperately trying to learn how to program modeling a neural network, can you PLEASE point me to your resources or any material to get me started. 
Sounds like you're using the 32-bit version of the compiler when you need the 64-bit version or vice versa?
youtube.com
Looks like you have problems to understand the `dict.get` method. In [1]: data = dict(a=[1,2,3]) In [2]: data.get('a') Out[2]: [1, 2, 3] In [3]: data.get('b') In [4]: data.get('b') is None Out[4]: True In [5]: data.get('b', []) Out[5]: [] In [6]: for item in data.get('a', []): ...: print(item) ...: 1 2 3 In [7]: for item in data.get('b', []): ...: print(item) Also a `defaultdict` is usefull if you don't want to use `dict.get` all the time: In [8]: from collections import defaultdict In [9]: data = defaultdict(list) In [10]: data['a'] = [1,2,3] In [11]: data['a'] Out[11]: [1, 2, 3] In [12]: data['b'] Out[12]: [] In [13]: data['whatever'] Out[13]: [] I am just giving you these examples because it looks like you are not aware of this stuff.
I’d argue that if those three requirements appear at the same time, then MicroPython is a good fit.
* 3d game development * native mobile development * 1st class web scripting Although these three have their exceptions (Panda3d, PyBee, WebAssembly?), check out this comment I wrote recently. There’s almost always a reason Python might associated with nearly any projects. http://www.reddit.com/r/Python/comments/82jkl6/what_can_i_do_with_python_thats_not_data_analysis/dvaybna
[Transcribe](https://aws.amazon.com/blogs/aws/amazon-transcribe-scalable-and-accurate-automatic-speech-recognition/) and [Boto3](http://boto3.readthedocs.io/en/latest/reference/services/transcribe.html) should do the trick. Alternatively, you could upload the video to YouTube and have it generate Closed Captions. 
I’m learning just for fun and the book was $40. I’m by no means a programmer. I know VBA pretty well and just thought this could be interesting to dabble in. 
Thanks for the comment. The OOP nature was brought up because it makes numba hard to use -- at least, with how it is currently set up. The general setup is an interface to run a series of calculations period-by-period where the actual final "model" is composed within the interface. So the interface will go self.run() and run will be a for loop over a given number of periods -- the sequential logic is determined by the "calculation: classes which have a .run(i) method that calls the object's calculations in order. I would imagine that in 99% of the cases, this would be poor practice with for loops, but for my use case (and after reviewing with some pretty accomplished programmers), its the only way that I've found that solves the first issue I was trying to solve in an unoptimized way. I tried doing numba's jitclass but it gave me some issue, so I wanted to see if I should re-double down efforts to get that to work, or to explore cython in more depth.
Check out this reddit's sidebar. Then go check out r/learnpython 's sidebar. Buncha information already laid out there. 
$ python -m SimpleHTTPServer Think it's different in 3 though. 
`if`? meh, never needed it. https://repl.it/@darkarchon/ExtrovertedGrossFeeds class Else(Exception): pass class If: def __init__(self, condition): while not condition: raise Else def __enter__(self): pass def __exit__(self, *args): pass try: with If(True): print('this should print') except Else: print('this shouldnt print') try: with If(False): print('this shouldnt print') except Else: print('this should print') 
Well instead of C you can use Rust though. It's a viable nice looking alternative. 
That would be great! I'll post the code here once I finish the initial version.
At worst with Numba you can pull the hot code paths out into standalone functions that take all necessary arguments, then call those functions from your class to hide the potentially complex call signatures. However, I will say that personally I've seen better performance gains from cython than Numba, since Numba is specialized to numeric operations and simple loops, while cython gives you ultimate control down to the pointer level. Cython is more difficult to write, but pretty equivalent to debug (if not easier) as Numba. I'm still not convinced that what you need is either, though. If you already are bottle necked by numpy in your calculations you won't get massive speed boosts. Numpy is about as fast as you'll get on a single core. If you need more, maybe consider something like dask for easy multi core computations? Regardless, you need to profile your code first to find what can be improved and how much improvement you can really expect to get. 
Python - battery included pypi - how to include your battery Conda - More precompiled batteries (scientific computing) included. conda_forge - More batteries made by community included.
You should profile your code to see where the most time is spent. If your time is spent with vector operations, you won't get much of an improvement with Cython/numba. 
Sorry, that's what I was trying to say -- none of it is actually vectorized; the numpy arrays are used as containers (like a glorified list), and I'd plan to keep using them due to the convenience they provide with their various methods/integration into other libraries.
Jakarta is the dictionary definition of /r/UrbanHell Good luck to you.
How slow is your code?
When did window get removed from the recipes? :(
kek, your code will break on `data={"a": None}`. I suggest use `data.get('a') or []` instead. ---- To grab the last value of a possible empty list, I use last_val, = data.get('a')[-1:] or [None] 
*ImportError: No module named humor*
Reverse engineering a super complicated binary file and making it read at 500 MB/second. Binary files are incredibly fast if do it right and struct is not what you use when files are that big (numpy is better). Then I took that and build a 3D GUI around it using PyQt/PySide and VTK.
Was expecting it to be a jump scare. 
Yep, I agree with this and honestly I would rewrite the parts in Rust instead of C. I just mentioned C because the common saying in Python is to "rewrite the slow parts in C" if you need to optimize the performance while still having the bulk of the code in Python.
 python -m http.server 
You are on the right path... I would reach for GDAL or rasterio first. The tools are there. The benefit of GDAL over Rasterio is that it's easy to go between rasters and shapefiles. It's not as pythonic as some libraries as you pointed out, but it gets the job done. How much have you dug into GDALs API? I always like to use the lightest tool first. If it's something simple for creating of a shapefiles, I reach for PyShp. If its vector analysis look at shapely. For pure raster analysis use rasterio. For a combination of raster and vector analysis, either use GDAL or pair rasterio with PyShp/shapely. 
&gt; Python is interpreted. Wrong, and this coming just a day or two after I posted [Ned Batchelder: Is Python interpreted or compiled? Yes. ](https://www.reddit.com/r/Python/comments/883eog/ned_batchelder_is_python_interpreted_or_compiled/). 
Some years ago, I used to play an MMO called Ultima Online. I only ever played some of the free/private servers and stuck to the old school version. The server software was open source so I dug through to figure out how skill gain works. Skills can be between 0 and 100, and you can raise a skill anywhere between 0.0 and 0.4 points in one action. You can have a maximum of 700 skill points. I focused on maximizing crafting skills. There are several factors in determining how likely you are to gain skill: The current skill level The difficulty of the item to craft (determined by two values, a min skill to make and a max skill to guarantee an exceptional item) The total number of skill points you have Using this data, I made a python script to determine exactly what items were best to make every 0.1 point. Particularly it was the probability of gaining skill over the total number of resources it took to make (iron ingots). Also, it ran a Monte Carlo simulation to tell me how many resources I needed to max out that skill (95% probability, 99.7% probability). All the data ended up being normally distributed. This was super exciting to do because it gave me a real advantage when it came to effectiveness of training and it was one of the first times I had done real data analysis and file parsing in Python. It also served as one of my first real projects in Python as well as a project that solved a real problem. Unfortunately I have since lost the code. :-(
&gt; Python is (basically) a program written in c. Wrong, jython is written in java and ironpython is written in .net.
I think that you need to the a step back. You are trying to do this all in one go and it makes it complicated. What you want to do is search a list of known formula and see if you have a complete match minus one for all the variables (are you considering the solvability of the remaining variable?). That's simple assuming the data is structured appropriately. Off the top of my head a SQL table with formula name, formula, reference, description and variables(boolean) as columns. Similarly you could do this in nosql or graph db depending on what you are trying to search. Then its a simple search of the table for solutions. But you have a second problem of parsing the formulas to populate the table. Assuming a standard notation this would be a fairly simple recursive string parsing function that returns the variables present
&gt; why does Python use a GIL Only the cpython implementation uses a GIL, other implementations can do whatever they like.
udacity.com and tutorialpoint.com
This person is a third party.... Google is similarly third party. 
Your flask site seems to be down right now
Can you work remotely for your startup
print(“Hello World!”)
There are times at work when our python code literally takes hundreds of times longer to run than our C/C++ code. We do real-time digital signal processing. 
Python type annotations are part of the language since 3.5. But, yes, they are optional.
I see. Pylint is very actively developed, might have been fixed in the meantime.
Your link is dead.
That makes sense. It's interesting because ssh works fine if, for example, I start a shell subprocess with the pty.spawn function. I'm guessing that's because the pty would be connected directly to the I/O streams of the current process. Perhaps what I'm trying to do is simply incompatible with the way ssh is designed.
I second this. Geopandas is built off the libraries mentioned in this comment, but also pandas, which makes it a powerful tool to work with large datasets. The documentation for it is pretty straightforward; I’d recommend learning a bit of shapely and pandas to get a feel for how geopandas brings something new to the table.
I think it be worth looking at the source of sshpass to see how they get around it.
/r/learnpython /r/learnprogramming 
Wrote a simulation for the card game War. 
Woah, that's next level. Could you tell us more about it, like how it helped and what it did. 
Can you make http://www.paramiko.org/ work for you? This is going to be much nicer than using Popen w/ ssh.
Syntax errors are cool now? ;)
Link?
I didn't think of using the dictionary. Thanks so much!
Paramicko should be ideal but I think -t will get past your issue. 
Combinations of vector operations perform better via cython or numba because the elementwise kernels get fused, reducing the number of iterations through the input array that are done. Since most operations are memory bandwidth limited, this can provide substantial performance gains.
Thanks for the suggestion. Whilst it seems like a nice tool, I don't think it would be of any help for this project. :-) The program I'm developing uses Popen to start an interactive shell subprocess (e.g. zsh) and the problem occurs when ssh is called from inside that shell subprocess.
Body massage
Thanks for your suggestion. I just tried it out but it would seem that the issue still occurs even with -t.
Thank you!
Probably follow the directions and go to the firewall panel...
What modules did you use?
Do you have the code online for your Morse Code laser transmitter/receiver and the homework manager?
Code?
I used it to generate a "novel". Got a couple of other literary projects I'm using it for at the moment. I just love messing around and making stuff with it.
Ironically, json serializes / deserializes faster than the binary ones provided by pickle in std lib of python.
I did something similar, but just used viewing images instead of pages of the official book. Link code to this project?
Yes, got inspired by that project. Wanted to make python version of it. I learned a lot while making it. :) 
Thanks! :)
What have you tried so far?
A couple other people and I wrote the data integration system for a health insurance company in Python. If you expand that to a few dozen people, we run an insurance company predominantly on Python: https://www.cloverhealth.com/ I also use a Python static site generator to power my personal website. I track my Magic card collection with a Python program that I wrote specifically to do so.
.rstrip() but I don't know how to strip words with a specific letter 
The condition would be if not 'e' in word print(word)
Wrote my own tool to automate ZFS snapshot taking/deleting, [pyznap](https://github.com/yboetz/pyznap). It now runs on my server without any problem.
I built a Wikipedia-reference-scraper when I was writing my project thesis. As a Physiology student, this phase of a final year project is not easy because there is usually scarcity of materials. It made the thesis writing easy got because I didn't have to go looking for research literature and their references. Here is a link to the GitHub page of the project. https://github.com/iyanuashiri/wikipedia-reference-scraper
Do you have code of this? Can I see it?
Oh wow I'm dumb, thanks so much 
think data is a JSON input where you have no idea what you really got. who said v is an array or has .__getitem__ as all (or is not None) ? Who said even data is a dictionary and not an array or None ? 
I wrote a [twitter bot](https://twitter.com/Keith_Event) which tracks a set of events, and sees if more people are tweeting about that event right now then normally. If they are, it searches the text of the tweets to see if it can figure out where that event is occuring. I've been adding to it for three years now and plan to keep doing so. I have a huge todo list that I love working on because it's a fun little toy.
In that case you should really do: try: last_val = data['a'][-1] except: last_val = None 
I built this: https://ipxer.com Python/Flask.
That does not help on list or stuff with __getitem__ or .stuff with __getattr__ :)
The coolest thing IMO are toy projects in AI, which for the most part are learning experiences that have yet to be applied professionally. Kaggle is fun - I only wish I could regularly dedicate time to advancing that area of knowledge in myself. One of the areas where I'm learning right now is with hypothesis - https://hypothesis.readthedocs.io/en/latest/quickstart.html Hypothesis is cool in that it attacks testing in a way that makes more sense than most ways of attacking the unit testing problem. It will run your tests with a wide variety of parameters so you don't have to come up with all of the crazy ways your end users will break your software. For instance, if you tell it that your test takes an integer, it will try negative numbers, 0, really large numbers, really small numbers, etc. Sometimes your code will fail in ways that you expect it to fail, but you haven't bothered to document or code properly yet. Sometimes it will highlight obvious things. I _try_ to write tests that will cross all of my lines of code, but I rarely write tests that push the edges. Hypothesis helps me do that with surprisingly little effort in a lot of cases. Sometimes it's too much of a PITA to work with because I have data structures in place that aren't friendly, so I use it when I can, don't use it when it's hard. 
Did you find a way to get around this platform-dependent limitation? &gt; Do not rely on the combination of tofile and fromfile for data storage, as the binary files generated are are not platform independent. In particular, no byte-order or data-type information is saved. Data can be stored in the platform independent .npy format using save and load instead. I was just looking into saving binary files in Python, so this comes at a good time
Built a simple web server that acts as a middleman between google assistant via ifttt or a website and controls the LEDs behind my tv. Either changing it to colors or patterns, or just an extension of the screen using Prismatik.
My code does the checkup, variable assignment, and code execution all in one still (and can handle any bad case of accessing None, getitem, getattr, or anything :) ) 
Guys, I spent hours making an april fools joke thinking March lasted forever, and that's the metajoke of the weak performance. But it's not like I had anything better to do with my deliverable... Here's code I wrote before the doc, as a reward for reading this far: https://gist.github.com/b33j0r/2d19447dbcdec992de5ca8b6255ce03c 
What do you want to do when you hit both at the same time?
I'm making a video for language learners with Python, pydub, moviepy, boto3, and PIL etc. A video like this: https://www.youtube.com/watch?v=0KR9DKZeTqk These vocabularies are collected from Memrise and the likes by web scraping using BeautifulSoup. So, essentially, I can generate videos infinitely. Code: https://github.com/kokimame/joytan
What does kaggle do? Are Hypothesis and Kaggle part a Python library?
Python can create a video?How?
A script that scrapes videos from a range of user-defined sources and generates compilation videos and automatically uploads them to YouTube. I thought compilation channels could be done by anyone and the answer is they can
Doesn't look complete. 
Wow! Python can actually take videos and compile it by itself? Is it a type of py library you used?
Exactly, which is why it's nicer to do: for last_val in if_exists(data, lambda x: x['a'][-1]): print(last_val) # or do something with it than try: last_val = data['a'][-1] except: last_val = None if last_val: print(last_val)
ah. hit the hamburger icon and you'll see a form. Type any IPv4 address or domain in there.
Man that is cool. I wish to try that later when have enough knowledge. How long does it take to learn to code a Twitter bot?
Simple answer: no. Long answer. You would need separate process. One for whatever you try to visualize, and one for capturing users input. The input can be implemented with busy waiting or with interrupts. The hardest part will be to modify the data from the capturing process, which the visualization process tires to present. Another way would be an asynchronous implementation. However i don't understand why would you need it. Humans are too slow to feel the difference. And even a good ai needs some thinking time.
Oh I see. Sorry, my bad.
This is much nicer. try: print(data['a'][-1]) except: pass 
Nice. I might try it out. Don't really understand how to use GitHub yet.
What's ZFS?
I made a solar system generator that uses accurate math for the generation of stars, planets, habitable planets etc for tabletop games and novel writing I also wrote a program using nltk that determines the structure of a poem, breaks source text, I used book off of project Guttenberg like jungle book Moby Dick etc. Into individual words, nouns adjectives etc and then generates a poem based on the structure using the source texts words. Got some awesome and wacky results. 
I see. I'll give it a try in the future. Is it to create the code?
&gt; makes Kaggle is a website (bought by Google last year). They organise machine learning and data science competition. It is apparently a very good platform to learn and advances your machine learning skill. As you can also use python for these competitions, maybe that's why it has been mentioned above. 
wrote an imageboard on tornado. not much, but it somewhat works
Man this sounds like fun. I can't wait to master Python.
Was the coding hard?
What do you mean by "create the code"?
Very basic bots don't take terribly long, I use [Tweepy](http://tweepy.readthedocs.io/en/v3.5.0/) for my bot. It takes a while to figure out how to get the OAuth to work, but after that sending a tweet isn't much more complicated than using print(). That only took me a week or so to figure out (I was procrastinating during finals so the time commitment was inconsistent at best). The first version of this bot just tweeted about "rain" or "tornados" and events like that, and didn't have any pictures. And that's part of why I like the bot: it's a basic program that you can easily build on and add complexity. Right now I'm trying to learn about a natural language processing library called ["NLTK"](http://www.nltk.org/) to improve the bot's ability to distinguish between actual events that just happened, and people who are just using the keyterm. If you're going to try to build a bot like this, I'd recommend making a small goal first, like getting a program to tweet "Hello, world!". Then you can improve on that, then improve on that and so on. Bots can have 'feature creep', and you can use that to your advantage: the new feature you add is something you want to learn more about. 
Oh I see. Is good if I tried it out?
Nice try North Korea
Okay, the use of this makes no sense to me. I can use multiprocessing in nearly the same exact way using functools.partial.
If you are interested in being a data scientist or learning machine learning, then yeah it is. Tips to use Kaggle:- Start with learning competitions and kernels made by different users. It can show you the way and then move to the competition.
ZFS is a filesystem that includes protection against data corruption, compression, snapshots and more. ZFS also has a software implementation of raid, e.g. RaidZ1 is the equivalent of raid 5, so you can lose 1 disk and still have all your data. I use ZFS mainly because it has snapshots and protects against data corruption. Snapshots allow you to go back to past states, i.e. you can take a snapshot at a certain day and then always go back to that time and get files, even if you deleted them. You can also do regular "scrubs", which read all the data saved on your array and compares checksums against stored metadata. If there is a mismatch it can correct that file or let you know that something went wrong and the file is unreadable, so you can restore from a backup. My tool automatically takes periodic snapshots, deletes old ones and backups them to a remote location.
It's more like a video generation from scratch, which I don't know the proper term for. With moviepy, you can make a single video from a bunch of static images.
Hi Friend - send code - we no bad people 
I've done quite a few things in the past 2 years which I would consider cool. 1. Wrote an asynchronous driver for controlling a large industrial robot in real time. This has been immensely useful to quite a few people in other labs and we even got a research paper out of it. 2. Wrote a bot that responded to all the birthday messages on my Facebook wall. I was insanely bored that summer and decided to have a little fun, since I don't like the idea of a one-size-fits-all thank you message, but per person responses are very tedious. The bot used a simple bag of words natural language classifier to determine if the post was a birthday message or no (worked phenomenally, Occam's razor FTW) and then respond to the message with the person's name. In case the person was a relative, it would respond with the correct honorific. 3. A command line tool to nuke a directory called 'nuke'. Now you might wonder why not just do "rm -rf *". Well, nuke has the option of reading a .nukeignore file (similar to .gitignore) in order to determine which files and folders should not be deleted. By passing in a file, you can also print out the directory tree of all the files that will be deleted. This way, you don't need to worry about accidentally deleting useful or important files. 
I made /u/Twitch2Youtube (back in the days Twitch videos were pretty bad in mobile, now with clips the bot is kinda obsolete) Also made a browser plugin that checks articles on a site I visit frequently for NSFW images and display the score before I open the article.
There are tools to remove the drm from Amazon's books, or was this problem format like topaz? Anyway, nice idea!
boy, you must be a real joy to work with. I didn't really know of the available tools such as dictionary to start tackling the issue. I admit, I don't program on daily basis and maybe I belong in /r/learnprogramming. However, who are you to judge? were you an expert from the beginning? you stink.
I got myself a raspberry pi and wrote a programm that controls a cocktail mixing machine. Then I went into my dad's woodshop and built the whole damn thing. Took most of the weekends for more than 6 month. Now you inly have to place a cup and press your drink on the touchscreen and viola. Actually a pretty cool thing.
This is a simple example.... normal code would be much bigger instead of print, and you wouldn't want a catch all exception handler on your code logic, just on the getting the data part.
you don't `for...break` to get some data.
In mid 2004 while working as a QA engineer at an ISP I created a tool in python for functional QA of web applications It had a wxWidgets UI and when you hit a “record” button on a toolbar, it opened an HTTP proxy. Any web requests you made through that proxy were captured and rendered in the UI as a box on a Visio-style canvas. Clicking on one of those boxes allowed you to adjust its values and to create assertions eg “this request should return text matching this regex”. Clicking another toolbar button made the visual test script render as a PHP file (most people at that firm were PHP devs) which could be uploaded to a web-based test harness I’d created, which used a technique that was later to be called COMET to display updating progress of test scripts as they executed. I modestly called this system “UberQA” :-) My employer used it for a while and our testing strategy was revolutionised. I got a promotion and serveral more after that, and left that firm eventually as a Technical Architect, and nowadays I work as a contractor for household name organisations - but this was the turning point of my career. Within a year Selenium was famous and my code was forgotten... but I know I got there first :-)
Yeah have a look at moviepy to build videos
I wrote a program that combined all of the "classic" cyphers (Caesar cypher, etc...) In a random order and saves the output to a file for a mock programming assessment. I never got around to making a GUI for it though.
Also works in 2.7.
`dict.get` is a wrapper with defaults around `__getitem__` and your examples and description are only about getting values from a dict. I don't see anything about using `__getattr__` or lists here. You should add that in your examples or description if you want to point out that functionality.
Hey that will be my spring/summer project as well :) My solution will be quite different. Since i want a multiplayer game, i will need some kind of a server/client structure. The server will have the behavior of the game (so no need for pygame there). The human client (or an observer if you don't want to have human players) will have pygame for visualization. The ai client, will be just the ai client, no fancy visualization at all. Thus if i will run it all on a single computer, I will have to run 3 different programs. With the server/client implementation, some boilerplate will arise. For example you will need some kind of a protocol, in order to register new players and to exchange data (e.g. map status -&gt; and key pressed &lt;-). I don't know your purposes, but some kind of parallelization or concurrency thinking is necessary. I would recommend to look at asyncio of python. This might already solve your problem. (i don't have much experience with it either).
Wrote a script that takes a yaml file of dishes to be made, reads all steps for each dish, extracts the total duration for each dish, and tells you at which points in time to do which steps for what dish so that everything is finished at the same time. I also added functionality to write the dishes to a database, which allows me to just select any dishes I want (as opposed to modifying the yaml file each time)
Yeah, this is my feeling as well. Great packages for many thing (pyproj has made my life a lot easier :) But starting a larger project, it often seems quite opaque from the outside which bits to use from where and how to fit them all together... To some degree this is my problem with gdal as well... its not just that the API is unpythonic (which I wouldn't really mind) but that the documentation often feels cryptic and I have to hunt for parts I cant find. I used the example of a simple LZW compression for GeoTiffs. Took me some time to figure it out when creating a new raster to do this: driver.Create(..., options = [ 'COMPRESS=LZW' ]) Works fine, I think I found it somewhere on stackoverflow or even in the cookbook. So I wanted to implement this in gdal.Warp(). Doesn't work. Doesn't return an error either. And this is very frustrating, because from my understanding it should work. After a lot more digging it turns out you can do it like this: gdal.Warp(..., creationOptions = ['COMPRESS=LZW']) I can't even remember how I found this but it was a lot of trial and error. And this is what makes gdal a bit frustrating to work with in my opinion, because there is a rather steep learning curve for even simple tasks...
Works for me 
Do you have a video of it in action or the code posted anywhere? Sounds cool
Something to add - it's important not to use this `@singledispatch` or `@x.register(y)` directly on instance methods. Consider the below: class Foo @singledispatch def bar(self, value): ... @generic.register(Foo) def _(self, value): ... The above will fail for two reasons * Here, we are trying to register the class containing the overloaded functions. This will fail because we haven't finished defining the class yet. * More fundamentally - single dispatch looks at the type of the first argument. When you call self.bar(value), it's easy to think that it'll be looking that the type of `value`. But you must remember that this is syntactic sugar for Foo.bar(self, value). So, single dispatch will be looking at the type of `self`, not of `value`. These are fixed by bringing the dispatch functions into global namespace and having the methods call those functions instead.
It takes video files and turns them into "barcodes" (hard to explain, easy to show): https://timbennett.github.io/movie-barcodes/ Also this one monitors Wikipedia for recent deaths and posts their information after some low-level anti-vandalism checks: http://www.twitter.com/ShuffledOff
Probably two things. A wallpaper manager that takes three arguments (wallpaper directory, width in px, and height in px) and scans through the directory deleting any image less than the specified directory. The second is a tiny Twitter bot that runs a speed test and complains to my isp if its less than 1/2 my paying speed
Haha that is interesting.
Man that is impressive.
Writing an Operating System
Humour* :'(
I created a flask-based web app to open or scrape FT, WSJ and other pay-walled articles. There's an option to just get the plain text (Title, subheading, article text) only, or just open the entire article with the original html. I also added a feature to translate the article. The logic is similar to "WSJ-unblock", the chrome extension, but I have been crippled at work by having to use IE. So this helps a lot. Libraries used: Flask, flask-bootstrap, requests, lxml, googletranslate, goose3. The webapp is running on Heroku hobby version.
For a network security course a long, long time ago I made a little wxWidgets GUI for Kismet that paints a heat map of insecure wifi networks layered on Google Maps tiles via Pygame, with a button to start Airsnort on that wifi network. That was fun! For my last job, a favourite project of mine was abusing decorators and mixins to automagically convert Python scripts into unittest suites, so that people could write: from api import testcase @testcase def some_test(): do_this() do_that() And then each function would turn into a test.
https://spont.io - my project And cryptocurrency trader And engineering software development 
You will still have a loop somewhere. That's how event driven architecture works.
Haha sounds complicated but interesting nonetheless.
May I see your webapp?
I use Python often at work to clean up Excel documents, merge pdf's, to file reports and turn them in to a Excel documents and much more!
Is it possible to code it so that it can also check for the quality? It sounds pretty hard to code something like that.
Absolutely. I have PMed you the link. 
It really does the automate the boring stuff haha.
A crazy dude made Doki Doki Literature Club and compared to that, everything I did was purely boring
Could you explain a bit more about how a Monte Carlo simulation was involved? I'm unclear on how to model something like this. What parameters did you learn?
Regex is your best bet
Is the solar system generator available anywhere?
Probably could check for image quality somehow but I haven't checked too much into it. 
It's not much but I made a text based guessing game in Python where you have to spot mistakes in snippets of code. I used this little game for my entrance exam and actually got accepted! It's been a long time since I've used Python because I mainly work with C# now, but it will always have a special place in my heart 
I wrote a webscraper that goes through any subreddit and takes all of the HD photos and creates directories based on the subreddit in a master directory (discarding duplicates), for collecting backgrounds for my computer. Or porn. I found out it can also scrape porn pictures from porn subs. 
Im working on a project where I have multiple webscrapers for cooking sites and my own cooking website. This way i can add all recepies i want to my own website that runs local with django.
The game was made using Python!? Wow that is very interesting. I feel a little more inspired now.
Look into renpy, it might be interesting
You already posted this this scraper 2 hours before this one.
I'm currently enrolled in a computational physics class, where we have to do a total of five projects. Most other students are using Matlab, but I chose Python because object oriented programming just makes everything so much easier (plus Numpy &gt;&gt; Matlab imo). So far, I've built * A program that solves the radial Schrödinger equation for an arbitrary potential energy function - basically, determine the absorbtion spectrum of a quantum system from first principles * A program that determintes the finite-temperature behavior of a 2D Ising model ferromagnet, with or without external magnetic field * A quantum tunneling simulation, which can determine the current-voltage characteristic of simple diode devices And I'm currently working on a molecular dynamics simulation, which should be able to determine properties of a gas of particles for an arbitrary interaction potential. Using Python's object model makes my code easy to debug and extend, and Numpy has an amazing set of tools to do easy and efficient array manipulation. Meanwhile, Matplotlib has an amazing visualization toolbox (though I wish the API was a bit more streamlined at times), and some modules are just great for convenience. At one point, the simulations were taking long enough that I just imported tqdm to add progress bars to some loops - now I know if I can pop off to get a cup of coffee while waiting for results! If you're interested, the code is [here](https://github.com/Jvanrhijn/comphys). It's not perfect (especially since we have deadlines every two weeks), but it's functional :) All in all, I'm really glad I decided to check out Python a few years ago, honestly changed my life.
I had some friends who used to play old school UO and they used to tell me the most amazing stories about their experience. By the time they'd told me this the game had changed a bunch, they no longer played, and I never tried. Would have loved to experience that version of the game.
Running fine for me now. Strange. I never got any alerts.
thank you
I would also like to know
https://devfreebooks.github.io/python
Go on the website from the same company. Theres quite a few in the series. Theres a create computer games in Python by the same author.
Thanks. I'll check it out.
There is a learning curve initially with the library and some of the syntax, but just keep at it. It's a fairly powerful library. Feel free to PM me if you have specific questions. 
Sounds like he ran the simulation to see what his expected resource commitment would be. A monte Carlo Sim is basically just "running" a procedure that has some randomness in it many times in order to predict an expected result. You can probably write a quick program to solve this: Consider a 1 by 1 sheet of paper. Two independent flies land on it randomly. What is the most probable distance between the two flies?
I did a numerical computation course as part of my physics degree. The project I ended up doing was light deflection around a black hole. Basically a ray tracer. 
Geopandas is a vector library... The OP needs both a raster and vector library. Which isn't to say that geopandas is not a great library or could not be paired with a raster library.
Thank you for the recommendation. I feel a little more motivated after reading your post. Yeah I do have a problem with time management. I should really make a fixed schedule and follow it thoughout. I'm currently doing a course called "Automate the boring stuff with Python". After I'm done with it, I plan to do a several courses in coursea. May I know the courses you took when you were self-taught? May I also see your twitch code? I'm curious.
Very creative idea and kinda evil haha. May I see your website?
Man thats impressive. I hope to reach your leavel of skill.
Yeah, that's my reaction to. Jesus STEm education.
ᙏӳ śш@ǥǥεś7 þɍσɉéς‡: https://github.com/orsinium/swag Ӳɘáħ, тнïѕ ɨś ѕσ áȼïđ. Ì ӎáđê ï‡ αғ†єɍ ♄σɱ∅9Ɩɣ⍴ħś яёѕɇáяç♄: https://github.com/orsinium/homoglyphs 
Lol what? Who told you that double quotes are a syntax error?
UO! I played that when I was like..12 haha good times!!
I main a simple email client for my A2 using only the basic Python package, that was fun.
False dilemma. God this is becoming boring now. Next time you are compiling your Python code into an executable as that is the only way to launch it, you let us know eh. 
The Python interpreter: &gt;&gt;&gt; print("Hello World!") File "&lt;stdin&gt;", line 1 print("Hello World!") ^ SyntaxError: invalid character in identifier
That sounds pretty cool, right until somebody griefs the geo location for Moscow.
Start by learning git, at least enough to know how to add, commit and use branches. Then just signup for github and push your code.
I made my own notepad
Last summer I was working for a hospital and they had database logs that were unreadable. The data came out in an unsortable jumbled up way, so I used python to parse it all out and put it into a csv file for my boss. Saved her hours of sifting through a bunch of garbage data
Thank you for you input, much appreciated! 
No, I only work on Windows.
8 Hours passed. RIP in peace, OP. RIP in peace.
well the website part isnt really done yet. I might post but im kind of scared to include pages for legal reasons.
If its both it aint wrong is it
I wanted to do this for my wedding, but my wife (fiance) said she wouldn't allow it. The vast majority of our family on her side and on my side wouldn't have the faintest idea how to navigate to a website and fill in an online RSVP form. We likely would have gotten about 5% of the RSVPs online, with the rest delivered traditionally, so it wasn't worth even setting it up.
Please read our sidebar and check r/learnpython 
Well I'm making cool things with Python every months so it's hard to choose
This post is better suited for r/learnpython 
Every year I draft 25 fantasy baseball teams. I wrote code in Python that manages my teams for me throughout the season. It adds and drops players for me, makes waiver claims, and sets my daily lineup. The code saves me hours of time every week. And it’s very good at managing the teams. Last year, I ended the season with the 3 top teams on ESPN. I also had 7 of the top 10 teams and 15 of the top 35. This year, I wrote code that automates the draft room, too. I do auction drafts that normally take about 3 hours each. My code drafted my teams for me. It used real-time linear programming to optimize my bids. I use python every day at work, usually for web scraping, data wrangling, and building predictive models. 
Checkout the sidebar and r/learnpython 
Maybe each time is a different (temporary) copy of the python binary?
We did it the other way. Only a few people got print invites and it worked really well. But you don't want to mess with your marriage over it
Thank you! It's something I want to work towards, that way there's a 'snapshot' showing why the bot tweeted. I especially want to see if I can make it summarize a batch of tweets. Right now I want to A) add a user interaction so users can request twitter trends in a specified date range, B) take advantage of latent semantics to help implement a polysemy filter, and and C) migrate towards a support vector machine classifier or some other ML classifier rather than a 'checklist' that I'm currently using to determine if an event took place. It does all have to run on a raspberry pi so I need to keep the program mildly lean, which is a fun design constraint to have to work with. 
I was actually surprised how many of the "old heads" used the app. Out of 200 invitations, we only got about 5 mail in rsvps.
As a part of a data recovery course I took in school I wrote a program to rechain a FAT16 or FAT32 formated filesystem in the event of a lost/corrupt lookup table. It was pretty neat. 
Simple question with a complicated answer :) If you want to programatically generate musical notes, your best bet is using (what used to be called) the "PCSPKR". This won't sound fancy - if you're used to Super Mario or any other old 8-bit games, then that's what it'll be. If you go down this road, you then have to either pick a platform or write cross-platform. Windows is natively supported in python via the [winsound](https://docs.python.org/3/library/winsound.html) module, and \*nix (Apple-OSX, Linux, BSD) can use the external `beep` binary coupled with `subprocess`. HTH
Well for example one task I had for printing guys (those who print newspapers etc) was to clean up Excel lists that contain thousands of their client information (where to send what and how many prints). The problem was that the list contained hidden characters, line breaks and such so the list was not going through in to their own system. They mentioned cleaning such list by hand before so...I naturally pointed out there is an easier solution :D I quickly threw the list through Python and just cleaned each cell/row and wrote back a new cleaned list.
Works for me: https://imgur.com/a/HJ5sJ
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/ZLz9XQo.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dwo53fv) 
It was really a simple project. The frontend asked for name and meal choice and each RSVP was stored in a document in firebase. Then I wrote another script to pull data out of firebase into csv so my wife could look at it in excel. I deployed it to heroku, registered a .wedding domain and we put the URL on the invitations. A lesson I learned on this project is that even the most simple GUI needs usability testing. The GUI started out with two cards. Each card required name and meal choice to be filled out. Guests could add/remove cards to match the number of people they were bringing. We had multiple solo guests who became confused when the second card threw validation errors. Something that was extremely obvious to me as the creator - remove the invalid card to submit - was not at all obvious to my guests. 
I agree with you. `“”` is incorrect. Not sure why you would use that. 
I wrote a custom program to control my individual-key backlit keyboard. At random times, the keyboard claims to be a person trapped inside the computer whos only way of communicating is through the keyboard. It lights up letters in order to spell out cries for help such as "Please help me. I cannot get out." Now I'm just waiting for anyone to accidentally come across my computer when one of these messages plays out. Preferably on a late night with no people around.
im only start learn python, and for the first project im build an app that do my work significally easier.after 1-2 day of python learning im build an app that read some amount of .xls/.dbf files, make some math build final .dbf file that im need in my work. now it saves 2 days of my life per month. little programm but really helpful
3Blue1Brown on youtube makes really great math videos using python
Not something I have finished, but I am currently working on implementing [Single Image Super Resolution](http://www.wisdom.weizmann.ac.il/~vision/SingleImageSR.html) via a machine learning approach using Tensorflow. That's basically what happens when they say 'Enhance!' in movies and a low resolution image gets a better resolution. It's for my job, but it's very interesting. 
Chess AI (minimax) is really hard and computationally expensive to break down (possible through iterative deepening but thats not a good solution).
Thanks for the feedback. Care to elaborate on how you would use functools.partial or concurrents.futures? I don't see how either helps with state persistence or fine control of data flow (ex. batching, aggregation). I'm probably just misunderstanding something.
Then how about updating the UI in main thread and listening to events in async threads? I'm looking into asyncio now.
Hahaha ok got me. Using mobile and didn’t even notice the directional quotes.
Works fine for me as well. It's pretty cool btw
Is it hosted on your home network? Could be a DNS or router issue. I'm getting the same thing 
&gt; was not at all obvious to my guests It's a strange feeling when you have to design your front end almost for 'idiots' because you know there will always be one.
I made a script to autoemail my boss my time sheets. It's a really simple prompt that pops up on Monday at 8AM that asks for details from the last week. When you fill it in, it emails to them. 
Could probably use machine learning for that, however it is pretty hard to determine whether something is upscaled but low quality or e.g. just a low poly image 
What’s the course you’re doing?
I would be interested in seeing the source code for this if you happen to have a version with none of your personal info in it. 
Oo I like the idea of nuke. Do you have the source? 
Automate the boring stuff with Python
This is awesome, and is something I'd love to do myself. What prompted the journey? 
Is that a tree search algorithm? Can't you limit the amount off nodes visited each frame and implement a tree traversal visitor with pause/resume capability? That should have no cost, computationally speaking.
Where can I find it?
It works for me as well. Great site btw. 
I really wanted to do the QR code, but I didn't think we would get more than 3 or 4 RSVPs that way. The effort to get them printed on individual invitations just didn't seem worth it.
I thought Flask was used for frontend too - do vue and Flask play nice together?
Made an Instagram bot(follow, like, comment.. All the usual gibberish). I turn it on for a couple hours a week. Now my fake account has something like 800 followers I think. 
https://github.com/rwhitmire/rsvp
Thanks!
I've been using Python for 20 years, so I've done just about everything you can think of. It's a very capable language. Just a few things that stand out for me: * I built an [Asterisk](https://www.asterisk.org/) phone system for work, and built a full soft phone system in Python to pair with it. I used Qt for the GUI, [PJSIP](http://www.pjsip.org/) for the audio. * I've been running a few Minecraft servers for 5 years. Along the way, I needed a web-based console for them. I could have used SSH from my phone, but designing a single console from scratch gave me more control over everything, plus allowed me to build out a nice interface for it. I used [websocketd](http://websocketd.com/) paired with Python to create it. * At one company I worked for, the staff was struggling to build/update pricing lists, because the catalog was tens of thousands of items, and our backend software didn't have any sort of interface for it. I ended up building an interface to the backend system, and then a UI that I could give the staff. I built in several convenience features so they could have shortcuts for pricing categories of products with the click of a button. Saved the company a ton of money... and never got me a raise. (Not that I'm salty) * I wrote a weather app that would get radar readings every 6 minutes (that was the frequency NOAA used at the time), and an interface in wxpython that allowed me to scrub through the radar as if it were a video... frame by frame or full animations. It was totally a personal thing, because I'm a weather geek, but I loved showing it off. * I wrote a simple planet/star simulator that started with a random starfield and simulated the way they interacted with each others' gravity. That was using pygame. This is honestly the only time I truly ran into the performance limitations of Python, since I had to do most of the gravity calculations without a separate C module. Still, all that did was cap my max number of objects. * My current job is a startup... I've architected the software from the ground up, in Python. Gotta say, I'm pretty proud of it too. Sorry, I know you only asked for one, but I got carried away. Hope something on my list might give you some ideas. It's worth it to keep learning... good luck!
Sure. Flask has a nice template engine, but for any type of rich interaction on the frontend where you don't want to make calls back to the server, javascript is necessary. In my case, I wanted users to be able to add or remove rsvp cards based on how many guests they were bringing. I'm typically a React guy, but Vue is really excellent when you don't want to deal with webpack, jsx, babel, etc. 
I am following the course from a website called Udemy. There was time when the course was offered for free at a limited time and I was lucky to get it at the time. For your case you may need to pay for the course. If you are not able to afford it, there is free pdf book for Automate the Boring Stuff with Python. The book is really good and I sometimes use it to refer to the exercises and examples.
Somehow I doubt about reading speed 500 MB/sec. 
I managed to carve a full time software developer position at my engineering company after learning Python for only 6 months. I thus far built desktop GUI apps, web scrapers, REST APIs, and website front ends (not in Python of course). I am currently the go-to programmer at my company and it has vastly improved my job security. 
Thats really cool story man. I feel a more bit motivated now.
I'm not saying anything bad about this article, but there's nothing inherently wrong with a global-level database. 
I'm in a Comp Phys class right now, they're generally offered through a university. Maybe there's an OCW out there. Sometime numerical analysis classes cover the same material.
what library did you use?
If you don't want the hassle of responding to Birthday messages, removing your DOB and disabling wall posts is an even easier solution.
You should stop your computation to handle events, not the other way. You are really overestimating the amount of events a human can generate. Humans are ridiculously slow compared to a CPU. Find a amount of computation you can do in 1/60th of a second then stop every 1/60 seconds to handle events. 
A 50/50 lol
How long have you been programming? I just started and wanted to know how long would it take to get to your level, roughly....maybe...hopefully..
Still new to python, but last month I wrote a program to track matchup statistics in Super Smash Bros Melee matches between me and my brother. Whenever I play a Match with him, I record which characters we played, what stage we were on, and who won. Then, I can check each of our win rates with varying levels of specificity. For example, I can check my overall win rate, or my win rate when I play Marth, or my win rate when he plays peach and we're on Pokemon stadium, or whatever
Unfortunately there was an issue in one of the release files (the CA Certificate bundle contained Windows line endings instead of Unix line endings) which caused crashes on older versions of MacOS. As a result we have just released 10.0.0b2, fixing this issue. Anyone on older MacOS versions who have had problems with the 10.0.0b1 release should upgrade to 10.0.0b2.
That does sound incredible. Would also like to see
That's awesome! How detailed did you get with the aerodynamics?
You're doing it wrong if you care about Python's speed.
That's not very Pythonic :P
[Any relation to this project](https://nuclearsecrecy.com/nukemap)?
I started programming around 10 years ago. For a project like this, I'm not sure it's about years of experience. It's really about just sitting down and figuring it out. When I got my first job out of college, I knew nothing about web development. They wanted me to turn a pretty simple access database into a web app. Over a span of a few weeks, I sat at my desk reading webdev tutorials and figured it out. The code was garbage, but it worked. Over the next 3 years, anytime I learned a new technique I would go back to that project and update it. 
I made a framework for cellular automata. It provides you with the world, and functions for getting information about it, you just provide the initial conditions, instructions for how to get to the next step, and death conditions, and it will run them. I've used this to simulate GOL with various rulesets, Rule 110 and all the other rules, and even tricked it into drawing the Mandelbrot Set. 
I haven't really used these features thus far, but concurrency is different from parallelism. The latter is problematic due to the GIL, is it not?
In hindsight, I probably should have done this as well. I underestimated the number of times my wife was going to ask me who rsvp'd (at least once per day). I didn't realize I needed to automate that part of the process away lol. Sending her an email and letting her manage her own spreadsheet would have been better. 
I wrote an email address generator for a new colleague over lunch break . She had proudly told me how she had spent HOURS coming up with all possible addresses combinations. I thought about it, one hour later she had a script creating email combinations wrapped up in a nicely formatted csv. Saved her about 10hours/ week per her estimate :D 
Python3 in my experience has been a little faster. Upgraded a site from python2 to python 3. It seems to be faster. Although we did also upgrade to django 2.0 so that might have helped.
Openpyxl if I recall right
Using gdb, lldb, and IDA Pro's Pything scripting to instrument and analyze binary executables. When you throw in libraries like pwntools, capstone, keystone, etc. these scripting capabilities are so powerful.
Pypy
Weeeeeird. What is ugly on your code? I don't find my code ugly or nice tbh. It's my child and no matter how ugly it is, I like it! 😂
Why? SSDs are really fast. I'm obviously talking about large files, so 2 GB at the smallest and 60 GB as the largest file I've read. I don't get those read speeds for tiny files, but who cares if a file is 100 MB? I even read the file twice in order to size the arrays as it's slower to hstack data than it is to directly slot it into the array. Numpy fromfile (frombuffer is the new way todo it that doesn't create a copy) lets you skip casting the data. There's just a int/float flag associated with the data. Struct is still useful, but only for small data blocks. At that point, you might as well micro-ooptimize it by saving common structs and you'll find you get a 2x speedup.
I wrote a script that helps me to create gifs from videos by giving a really simple interface, it uses ffmpeg to make the gif and pyqt for the GUI, [Screenshot](https://imgur.com/a/rLiUn)
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/NunQmOB.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dwoahri) 
Exactly my reasoning. :) I even formatted the email so she could just copy/paste the table cells right into our Google sheets document. 
First Python project was at the school I was working at. I built a printer scanner daemon that would go out to all the printers on campus and scrape their webpages to find out Print Count, paper levels in the draws, toner levels, drum condition, and any error messages. It would do this once every 10 minutes and store it in a MySQL DB. Then I wrote a PHP web front end to read the tables and spit out the data in tables for each printer. I kept history information so I could use google charts and graph it. It looked horrible, but it was functional. I ended up extending it to scan all printers that school had for student use. Making modules for each printer. They could then easily be added to the config file and used for the printer. https://github.com/RIEI/printerStats
I did something similar! I whipped together an app to send Save the Dates via Text with Twilio and accept replies back via text for RSVPs. That + a wordpress website and we saved a lot of time and money on our wedding rsvps and save the dates!
/r/learnpython/wiki
Didn't know this was a thing, thank you!
I did the same thing, but did a whole site for the wedding. https://github.com/pferland/wedding_site Its done in PHP though, but has an RSVP, Guest Book, Wedding party page, and wedding day info. I also added in emailing so that when someone makes a guest book post or attempts to RSVP, I get an email with the info. I was also having troubles with spammers making comments on the guestbook since I didn't have any CAPTCHA or "human" verification. So I added in a very simple string search for &lt;a and href for the time being and it seems to have helped. I wanted to also making it somewhat easy to deploy out so I have a deployment script, config file, and a data file for importing the wedding info. It still needs some work on this part. But it works.
* I wrote a Twitter bot that follow users related to an Italian populistic party and learn from them creating artifical tweets (basically Markov Chains with some tricks). It's impressive how many followers and retweet he can get, also from Parliament members. * I wrote a script that scrape the Football League website to extract statistics for betting support. The synchronous approach with requests was slow, than I developed my mini framework for parallelizing scraping process. 
That sounds like an overstatement. I just started experimenting with tofile and haven't tested it with endians, but I can't imagine its any different than struct or fromfile. The format I parse is fortran unformattted (maybe fortran formatted?) so there are 4, 0, 4 blocks and 4, nbytes, 4 blocks all over the place (as in 20,000+ of them, which is why I hate the format). The first word (4 bytes) in the file is a 4, so you read it as little endian and flip it and try again if it's not 4. You just pass the endian into struct or fromfile. If you really wanted to you could just define the file as little endian, but that's slower for big endian processors. Historically, that's been on SGI (e.g., mid-late 90s), while Intel/AMD are little endian. I'm pretty sure big endian is used for the web, but not really much else.
https://github.com/ZERG3R/PythonBot - github link I honestly only took about half of codeacademy and then listened to the Yale and Harvard compsci introductory courses. Beyond that just google and stack overflow my way through things and read a bunch of resources when I stumble across something I don’t understand. I also like python podcasts, my favorite is PythonBytes followed by Talk Python To Me which I listen to on my way into work 
i assembled, over the course of a week, a hulking beast of an application that can communicate between the computer it's on and just about any peripheral over telnet, ethernet, GPIB, USB, serial, and a few other protocols. it's even got standardized 'drivers' to communicate with new equipment. it can compile and process data from the equipment as well. it's not that portable but it IS built around being expandable/update-friendly. everything's built around specification files that it pulls from. they follow a simple to parse format that feeds the master application everything it needs to talk to them without needing to add any new code. i'm actually adding some stuff where it can talk to things like arduino and flash them to re-configure for a given job, and some fun things for SPI and I2C based programming of target equipment this week. 
Here’s my life changing story: I started as (and still am technically) a data analyst. My position technically just revolves around SQL and Excel. I knew some R from grad school and got better with that which helped me automate many analyses easily making me 10x more efficient than colleagues. For example, there was initially a report that would take hours to run in SQL and then would take time to put into Excel, taking half my day. With R I would just get to work and have a notification email that the file was emailed to whomever needed it. However, the I still had to handle requests from people to analyses and got tired of it. I tried to make a self-service web app in R (using Rook) but it was murder. Then I thought to use Python (I briefly learned basic syntax for it a few years ago) and started with Bottle. However, that’s not so well supported and I decided to switch to Flask which was a brilliant decision. So now I have an app that has all my analyses stored, users can look up certain products with certain info for each. People ask for metrics and I get to say “go to the site”. Now I have more time to learn new technologies to add to the site which my colleagues like because they get cooler features. The other way this was life changing is that even though I’m not a developer, my colleagues consider me a developer and I can put all this on a resume. I actually left the job I have now for a programming job (all stuff learned while making this site) but later went back to my old job after a few months for a few reasons: the new job wasn’t exactly as advertised (I could do the programming required though) and I realized at my old job I was able to learn as much as I wanted to give as features to my colleagues. 
adaptation and adoption among the older set is really variable and interesting in how it works out. my parents adapted/adopted fairly late, despite the fact that my dad worked on a lot of pretty bleeding-edge stuff in the 80s/90s. then again my in-laws adapted adopted kinda early, though they had their sticking points - they only just now started using streaming services for example. 
&gt; I learned Python during a summer program. At the end of the program my partner and I made a two-way morse code laser transmissions system with two Raspberry Pi’s. You typed your message into one Pi and you could watch the laser transmit the message to the other one. It was fun. no lie, that's pretty dope. keep at that and you could have some real fun work to show off - being able to hack communications protocols like that is a pretty valuable skill. 
a worthy and valuable project for the betterment of mankind. how's it do making a tom collins? 
i dunno, there's a handful of libraries that provide some ferocious file read capability. 
Did you intend your conclusion heading to read "So is Python 3 faster than Python 2?" 
If you werent, you are after this post...
This is a fun little toy script to write, especially when the result supports what you assume the answer might be import math, random, statistics def randPoint(): x = random.random() y = random.random() return (x,y) def getDist(a,b): x_gap = (a[0] - b[0])**2 y_gap = (a[1] - b[1])**2 return math.sqrt(x_gap+y_gap) distances = [] i = 0 while i&lt;10000: distances.append(getDist(randPoint(),randPoint())) i += 1 print("Mean distance is",statistics.mean(distances)) print("Median distance is",statistics.median(distances)) 
of course! i must warn you the content is deep. ill pm u once im home. if i forget plz send me one
lol! I love this
Oh thank you thank you thank you! This is exactly what I was looking for!
Made a living?
Sometimes I'll write something that works, but I'll have a feeling that it could be more elegant, more simple, or get to the heart of the matter in a more concise way. It does feel pretty good to write something and recognize that it's an elegant solution though.
For them wallpaper manager? Well, I found some images that were weather themed. For the Discord bot? Well, I started up a Tavern Tales group, an there wasn't a dice bot that handled the "roll 3d20, take the middle" efficiently. So I decided to make a bot. But there's a lot of automation potential for bots like that. So I'm adding more commands as they come up in game. 
It's not that they're double quotes, it that's they're directional Unicode quotes.
I try to organize it properly. I don't consider it beautiful but I try to make it effective for reading and changing at a later point. Also with well structured code it helps when trying to find problems. Follow pep8 but also follow zen of python.
If I ever feel my code is ugly or it can be better written then I just write it out. Write out both pieces of code and compare the 2 and keep the better one.
nah, not really, i had some experience in tornado - helped a friend rewrite a nodejs chat in tornado, just used what i learned there there were some issues but i managed to find the solution to all of them
I've always been interested in combining Python and sports. How did you go about this? I'd love to create something like a NFL draft predictor, just not sure how to get started
Did it do the job? Check! Was it maintainable? Check! Stick it right next to the Picasso. 
Building a notification system to organize webhook events with Wishbone (http://wishbone.readthedocs.io) https://smetj.net/building_a_notification_system_part_1.html
... And don't forget to read more Python to see what is liked in others code. :-)
I wrote a script that checked a job posting site for substitute teacher assignments. THey sold a service to text you when a new job was posted, and I felt that was extorting money from people looking for work. So my script went to the website, logged in, went to the jobs, and if there were any I would then text my wife that there was a job, and I would say what school it was at so she knew if she wanted to go online to check the posting.
Wrote my own version of the "snake" videogame with tkinter. 
Maybe Sympy could help? It does symbolic equation solving. Maybe if all your equations were expressed in Sympy form...
Also if only you can open-source it, please?
I've been using it at work to write my own 1 and 2-dimensional, multi-material, transient heat transfer simulations to help develop an SLS 3D printer.
Please read the sidebar and checkout r/learnpython 
What?
The ONLY thing I've done (because my first passion is storytelling/movies) is automated a real estate company's workflow. They would take the mountain of paperwork and digitize them. So here's what they did: Pull the folder of files out. Scan each folder section into individual PDFs, then rename each file manually. It wasn't terrible but it was a lot of copy/paste. But there was one other thing I noticed: They had to have you move to different desks to move to the next process of the task. It wasn't efficient at all. DETAILS: All the folders were in boxes against a wall. You'd have to pull the box, place it 10 feet to the first desk. Remove the paper sections and scan. They had all the file batches coming out as PDF1, PDF2, PDF3, etc. Besides this, they had the work area setup where you'd have to move the actual paper files to a new desk to finish the 2nd part of the job. The 3rd part of the job was to use the data from the person's name into another PDF that had a welcome letter. I used Access to auto-populate that information too. I created an 'assembly line' where there wasn't much back and forth/zig-zag to get the job done. Using Python, I had the files automatically named. I think it was ESCROW, INSPECTION, TITLE, etc. They also had weird folder organization. To get to the folder with all the PDFs, you had to go to C:/My Computer/My Docs/Darrell/Darrell's Docs/Misc/My PDFs/ so I moved the file location up to C:/My Computer. Saving the worker an extra few clicks. So anyway, I spent a few days doing this and brought a 20 minute per folder process down to 16-18 minutes. And a lot less stressful work environment. They brought me donuts and big smiles for the days while I watched the workers doing their thing while making sure no bugs were happening.
Sorry was on mobile and didn't see sidebar. Thank you!
Multiprocessing spawns multiple processes which run in parallel - the GIL doesn't matter in that case.
I wanted to do sth like this too :)
You're doing state persistence via the "lets make everything global" model. You should be doing it via the "let's make some interfaces with objects / functools.partial and then use multiprocessing on those" model. Which is exactly what the package you made does, except with a ton more boilerplate and weird slowdown because you do a lot of unnecessary things.
Yep! The most impressive thing I’ve done with Python was more than triple my yearly income. And that was just for learning Django &amp; DRF in my spare time. The life Python has afforded me is plenty motivation. 
I'm a Python/Cython programmer. I also teach it. Probably too many cool things to remember, but all are kinda niche. Wrote an abstract-oriented programming library [hacks](https://github.com/t184256/hacks) and a companion library [mutants](https://github.com/t184256/mutants) that are... well, just skim through the examples... nuts. They are nuts. Wrote several immature programming language prototypes. Wrote a ton of code for various self-made and hand-made MIDI instruments. And a ton of remappers for all my input devices. I am an input device freak. Recently wrote a remapper for my laptop keyboard to wide angle-mod Colemak. Recently wrote an eye-tracking software that I'm going to refine and evolve. My kinda ultimate goal is a work and research related one. I wanna write a plasma wakefield acceleration simulation code that'd be extremely obvious to understand. That's not easy, but I still think I can pull it off. And that'd be a little 'first' in our industry because nobody writes small and obvious simulation codes. But if you wanna see a really interesting Python project, look no further than `xonsh`.
GCC
I wanted to do sth like this too :)
ill check once i get home. side note, i too am a genji main :D
Honestly it just depends on your level of interest/motivation and how much time can you put aside to learn. I started back in middle school but honestly most of the stuff I learned were in my last 2 years of high school when my classes were pretty centered around programming. You can easily get up to someone with 5 years "experience" if they were learning it casually over that time, while you are studying it seriously for most of your day for like a month. Obviously it's different for everyone so don't take those numbers as anything other than a shot in the dark
Most underrated in this thread
I think of you die this Dispatcher Style I like the "Haskell Style Python" better.
Look into getting the movie script. Probably the simplest solution. You could write a program to scrape the script if you are feeling python itchy but it will probably be easier to grab it manually. http://www.imsdb.com 
I added a multitenant layer on top of the powerdns restapi. With this mutiple hosting providers can use the same DNS(SEC) platform with minimal security risk.
First congrats, is Flask hard to learn? Got any tutorials?
If you just want to learn stuff, learn a new language or new libraries. If you want to enrich yourself start a project and learn the skills needed to complete it. Maybe if you strike oil you can make a buck on this project too. Obviously can't tell you what to do though. Im sure you have a few ideas, pick something and invest your time in solving it. 
Do you have source for the MTG program?
Thanks, vader
What would be a practical use-case for something like this? It's neat and all to be able to do what the article entails, but outside of maybe verbose logging ... what's the takeaway here?
is there any way that I would be able to use this? Sounds awsome.
r/TranscribersOfReddit. Check out what we do at [our wiki here.](https://reddit.com/r/TranscribersOfReddit/wiki/index) Absolutely life changing \-\- [check out our testimonials page!](https://reddit.com/r/transcribersofreddit/wiki/testimonials) It's changed my life and been a really amazing thing to participate in. I've met people from all over the world and together we've been able to create text transcriptions for over 22,000 pieces of images, videos, and pieces of audio. I've got Python to thank for powering the entire system!
For my wedding I had a free site that let you build a wedding page, allow for RSVP's and allowed users to share images from the event with everyone with a shared wedding code. It worked out really well. I wish I could design something like that some day. 
Wow that's amazing man. Didn't know you can actually make a living by doing Python.
I have not reached Flask yet. Im still learning the basics. So far I'm following a course called Automate the boring stuff with Python at Udemy.
This is interesting! Although I’d think that if it’s a question you’re seriously asking for your project then perhaps python is not the correct tool for the job. 
Typically you can do for row in cursor: ...
Cool. May I see your code?
Oh for sure! There’s folks out there making 6 figure incomes off Python... I’m not one of them... but they’re out there!
If you're planning on majoring in Comp Sci, you could look at what some of your preferred colleges teach in the first semester and get a head start. Courses like compilers and functional programming will almost certainly *not* use Python. Also... &gt; I’ll say I definitely know most of [the Python] language It's hard to what this means, but a few years is a short length of time and there's almost certainly more advanced features or recently-added capabilities to explore. Have you looked into CPython internals, gained a understanding of metaclasses, async, ..?
I'm new to python as well and programming in general. As a fun little project I made a program that takes a quadratic function in standard form as input and returns anything that you might want (graph, vertex, x and y intercepts, factored form, vertex form, evaluates for any x you give). I used matplotlib for the graphing and my math knowledge for the rest :P. We're doing quadratics at school right now so I thought it would be good practice. Also it cuts down my homework time to 10 mins 😂. I will post the code to github when I finish it completely.
Unfortunately, I still am stuck maintaining Python 2.7 and all of my main development is on Python 2.7, so I was quite surprised to find 3.6 is faster, despite the unicode slowdown. It's a very math heavy library, but there's also a ton of string parsing.
I create method to_ascii for usage in big e-commerce project. Some users try to type Latin promocodes like XC1234 in russian keyboard layout. You can filter to_ascii result by chars from string.ascii_letters: filter(lambda char: char in string.ascii_letters, hg.to_ascii(s))
Might be best to create a new class and inherit from the class you want to augment. 
I was expecting some dictionary operations comparisons
Two things: * I wrote a python bot for Mumble (a low-latentcy voice chat app) that listened in one channel and spawned a bunch of clones of all the people into another channel that retransmitted what everyone said on a delay. This was so you could e.g. spectate a TF2 or CSGO game (spectating has a delay on it to stop spectators helping the team) and listen in on the team comms as if it were realtime * I wrote a python script which iterated through a directory structure and, every *x* files or *y* bytes, added the list of files to a worker queue, which was served by a bunch of threads running rsync. This was to parallelise the transfer, to optimise bandwidth and reduce the effects of I/O latency. This was for doing an ad-hoc copy of just under a petabyte of research data
That's pretty awesome, the results don't lie
Is it on GitHub?
You'd still have a main game loop. The main game loop listens for events, which might be inputs from the user or events coming from async processes. 
Game engine.
Hey... Just watch out that you left firebase account info in the project.
Favorite was using the Visual Studio Python tools to integrate a handful of Python scripts I wrote into a VB program I had to allow the turning on and off of Cisco switchports and also give feedback whether the ports are hot or not, as well as email if the port is left hot too long. Also wrote a script that takes PDFs, converts them to JPGs and uploads them to a webserver on certain dates. I had it built to detect when the file changed and it would convert it and upload it as well, but the information was being posted to early so now its based on set dates.
This is pretty funny.
There's a little bit of slicing, but almost no processing outside of that (about the only math I do in that part of the code is converting the occasional magnitude/phase data to real/imaginary, so I can store it, but you can just not write the data in the slow form). If the file format was optimized for reading in by getting rid of the extraneous junk and putting all the node ids together (instead of reading it interspersed (node id, x, y, z...repeat), you could easily get 2x that. Alas, it's legacy on top of legacy. The first pass of the double read I do is uses scanning, so it doesn't actually read in any data outside of the information required to size the arrays. It probably takes longer to load in all the Python modules than it does to parse a 2GB file...never tested that.
Your use case is chess? 
Does that not violate the TOS of these sites?
Tell us more, please
That's cool. But I want to know how far I can go only using computer voices instead of mic.
You can still de-DRM Kindle books but you need to use the old version. There's a guide out there on how to do it.
Any chance we could peek at the source? Sounds like some secrets you may not want to give away, but you've got me very interested!
What library did you use for merging PDFs? This is incredibly relevant to my job and I’ve been looking for a way to do it. Do you have any experience or knowledge in scraping PDFs? I want to be able to batch rename files based on text within the PDF. 
So far, [this](http://geoplatter.com)
What about branching the underling package then? 
As a DnD nerd getting into programming, this is very cool.
I made a randomly generated world, its like minecraft's generation but in 2d. Made it as a side project to help me understand software architecture and algorithms. check it out: https://github.com/andrewdelph/ants-will-survive
I know this is a hack joke at this point, but North Korean engineers are some of the best at computational physics codes and embedded development. I took a course with a South Korean prof who worked at PUST(https://en.wikipedia.org/wiki/Pyongyang_University_of_Science_and_Technology) and he was blown away by the quality of the students there. He claimed that because its extremely competitive to get in (only 500 spots available), almost all the students would be the among best students at my university (a top Canadian university). Just thought it was an interesting perspective about a place that you only hear about through the lens of western media. 
I am not 100 % sure but it might have been pypdf2. Reading text should be pretty straight forward since PDF content is accessible 
I've been using python on and off for many years but never really took the time to learn much about it. I didn't understand list comprehension, generators, or other python magic. Good part was you could still get a tremendous amount of stuff done with python without using most of this stuff. Most recent thing that actually made me enjoy python was writing a web scraper that logged into my router and grabbed the metrics for all of the links, parse them into telegraf line format, open a socket and send it to a telegraf server. So now I can graph my WAN/LAN/Wifi metrics on the router. Nothing super exciting but it took me about a days time to get it up and running all with stdlib, beautifulsoup, and requests.
* Not Kim
Some screenshots: http://zonas.free.fr/?p=portfolio Some checkers interface with Pillow https://github.com/jokoon/eio/blob/master/checkers-sfml2.py Generating phone unlocking paterns. Not finished or fully correct https://github.com/jokoon/eio/blob/master/phone-pattern2.py Generating a viewing a hilbert curve https://github.com/jokoon/eio/blob/master/pyddle.html Parsing a file based on indentation https://github.com/jokoon/eio/blob/master/indents-cleaned-done.py generating dobble cards with Pillow https://github.com/jokoon/eio/blob/master/dobble-cards.py graph editor https://github.com/jokoon/eio/blob/master/toycode/graph.py
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jokoon/eio/.../**checkers-sfml2.py** (master → 7e1541c)](https://github.com/jokoon/eio/blob/7e1541c0d6109e068a2000335c1ca7559096d311/checkers-sfml2.py) * [jokoon/eio/.../**graph.py** (master → 7e1541c)](https://github.com/jokoon/eio/blob/7e1541c0d6109e068a2000335c1ca7559096d311/toycode/graph.py) * [jokoon/eio/.../**indents-cleaned-done.py** (master → 7e1541c)](https://github.com/jokoon/eio/blob/7e1541c0d6109e068a2000335c1ca7559096d311/indents-cleaned-done.py) * [jokoon/eio/.../**dobble-cards.py** (master → 7e1541c)](https://github.com/jokoon/eio/blob/7e1541c0d6109e068a2000335c1ca7559096d311/dobble-cards.py) * [jokoon/eio/.../**phone-pattern2.py** (master → 7e1541c)](https://github.com/jokoon/eio/blob/7e1541c0d6109e068a2000335c1ca7559096d311/phone-pattern2.py) * [jokoon/eio/.../**pyddle.html** (master → 7e1541c)](https://github.com/jokoon/eio/blob/7e1541c0d6109e068a2000335c1ca7559096d311/pyddle.html) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dwomwjo.)
I built a command line tool to control my Roku. It made it easier when I’d lose the remote or if I just didnt want to get off my computer to change apps/shows. 
It's sqlite3, built in module
Working on an app for my garden to help keep me organized. Using flask and SQLite. HTML/CSS has been challenging, but found some helpful resources last night. Just getting started. This one might take me while..
Here you go: github.com/varunagrawal/nuke Please do try it out! Any suggestions to improve `nuke` are much appreciated. :)
Yeah DRM often damages the real owner more than the pirate 
Millions for you or for the boss? Lol
This is a common beginners trap. You think that the code `newList = myList` is making a copy of your list, but it's not. It's making an alias, so now both names refer to the same list. To make a copy use the `copy()` method: newList = myList.copy() More info: https://www.reddit.com/r/learnpython/wiki/faq#wiki_why_is_my_list_of_lists_behaving_strangely.3F --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I literally did the same thing, except it sorts into directories based on the resolution. Awesome.
What's important to remember is that "myList" and "newList" aren't lists. They're variables that reference lists. When you do: newList = myList You're basically saying "create a new variable that refers to what this variable refers to" What you want is this: newList = myList[:] This creates a new list by taking a total slice of the old one.
This post is better suited for r/learnpython 
By doing that you're just pointing to the first list, not assigning it. This more than likely goes back to C (an ansestor of many current programming languages) where lists are just pointers to sequencial values in memory. [This](http://henry.precheur.org/python/copy_list.html) write up explains in more detail
I'm hoping to do similar things in the finance industry (I'm still a college student) was this a project you decided to start on your own, or was it assigned to you? 
not much stuff, i've searched more on the internet than tried anything lol, basically i don't really have knowledge about all this
Do you have Python installed?
I do
Did a python course last semester and this semester I'm using it to do all the calculations and uncertainties for my physics labs. It takes a text file with all the data as input and returns a nice csv file that is converted to latex tables and graphs. Saves me hours, especially considering that all the others does the calculations by hand and uses ms word. We're required to do things like finding min/max values of sets and do awkward things like sqrt((A/a)^2 + ... +(Z/z)^2) and it's so much easier to have a computer do that. Not really that cool compared to the other things in here but it's making my life a lot easier and now my fellow students thinks I'm a wizard doing the physics labs very fast. 
The code is on [github](https://github.com/yboetz/pyznap).
Okay, start with trying to just get first step down. You know that you'll need to have a shuffled list of cards. So start off by trying to make that. Think about how are you going to represent each single card and then how you could create a randomized list of those representations. 
The code is on [github](https://github.com/yboetz/pyznap).
I've got this for the moment &gt; input("Choisis entre 1 et 52")) enseigne=["pique","carreau","trefle","coeur"] valeur=[1,2,3,4,5,6,7,8,9,10,"Valet","Dame","Roi"] def creation(): return [(x,y) for x in valeur for y in enseigne] PaquetDeCarte = creation() import random Cartes = random.sample(PaquetDeCarte,52) for x in range(1): print (random.sample(PaquetDeCarte,1)) I don't know how to add the win condition and the point counter, is it correct for what's here ?
How would I reverse engineer a binary file? I'm working in an slow app that saves huge binary files and if I could read them offline and check a few simple things in it instead of waiting 10 minutes to open the file up for 10 seconds, it would save a lot of time for me. I couldn't find any specifications about the format. I checked it in a hex editor. It doesn't seem to be compressed. I found 1 simple pattern and that's it and I don't know what to do with it. I don't even know where to start. Are there techniques or it's trial and error? Any books or tutorials? Thanks.
input("Choisis entre 1 et 52")) enseigne=["pique","carreau","trefle","coeur"] valeur=[1,2,3,4,5,6,7,8,9,10,"Valet","Dame","Roi"] def creation(): return [(x,y) for x in valeur for y in enseigne] PaquetDeCarte = creation() import random Cartes = random.sample(PaquetDeCarte,52) for x in range(1): print (random.sample(PaquetDeCarte,1)) 
i've tried some stuff but i can't post it to show you. I don't know how to add the win condition and the points counter
Applying an abs\(\) and threshold to perlin noise can create some pretty interesting caves too.
Really? You'd like to have MicroPython running in your pacemaker, or controlling an aircraft, or a missile? (If so, you really should see someone about that death wish.)
It was kind of dumb but I play dota2 and wanted to see if I could make a program that would pick the best hero draft versus another team. I wrote a program that would pull all the ranked games from dota's api and then give me the winner and loser as well as the heros they picked. I broke down all the heros into a common 20ish different traits (which took forever) based on their skill set,position, and role on the team. So now I had this big database of winning team compositions vs losing team compositions. When I started the draft I would input our picks and the enemy team picks and the program would go through the database looking for losing teams with similar compositions based off of the traits I had given the hero's. Then it would look at the heros my team had picked so far and try to fill it in with heros that would best fill the required composition traits to beat the enemy team. It got much more accurate as more heros were picked, allowing it to narrow down the pool of games to choose from. It gave me pretty good results, some I would have picked and others I wouldn't have considered until I saw them pop up. I dont think I explained this program very well just now, but it was my first project ever and I did it over this past summer and I enjoyed it a lot
I love fantasy baseball, but setting lineups each day for all 180 days of a season can be a bit of a grind. I change my lineups a lot, so I started by writing code that set my lineup everyday. At first, I just wanted to bench players who weren't playing that day and start players who were playing. I used proxies like Charles and Fiddler to observe traffic to the server and back as I made lineup changes. From there, it was just a matter of scraping data with requests/selenium/BeautifulSoup.
The European Space Agency has different thoughts on the matter. https://forum.micropython.org/viewtopic.php?f=8&amp;t=744
No problem! Best of luck with everything, it sounds like you're on the right track.
No books I know of. Start at the beginning of a small file and just print the next 200 bytes or so as ints, floats, and strings. Pick the values that make sense and store them as dunno_list_ints or something. Keep reading and you'll see patterns...this integer precedes a bunch of floats thats 3x the number of ints, so it's the grid points or triangles, but the type of the value will tell you it's triangles. Then run it on a slightly bigger but still toy problem. Slowly figure out what the flags mean. Then run it on a bunch of problems ( I use about 12,000 examples).
You've got me interested in trying to create my own fantasy team manager. I think successful fantasy teams make the best trades/FA deals at the right time. I can imagine how I'd automate the research on that, but I am wondering how you handle the timing of adds/drops. Seems like timing would be key. Do you let your program run in the background 24/7 or do you manually remember to run the program at key times?
The design of my code increased leaps and bounds when I followed TDD (test-driven development). Writing unit tests first, as well as only writing code to pass those unit tests, forced me to write code that was well-structured and decoupled, and also forced me to write the minimum amount of code required to do the job required. Once you start doing TDD, you'll find it a lot easier to write good code.
There is a contradiction here. So is Python 2 faster than Python 3? Yes! in almost all tests. The notable exceptions were the crypto_paes test, where Python 3 was 1.35x slower (because of the integer types), python_startup as 1.39x slower. So the assertion is that python 2 IS faster than 3, EXCEPT where python 3 is slower? Wut? 
Can you try running "idle3" at the terminal and past any error output here?
Thanks for the feedback. Apologies on posting to the wrong sub. Also, thought I used the format correctly for Reddit. But appreciate the feedback still. 
Awesome stuff! Go post it over in /r/roguelikedev if you haven't already! We love that stuff over there :)
You did format correctly; that's my canned footer for anyone posting in the wrong sub since they often don't know reddit formatting. 
Hooooow!?
Was sick of all the stupid ads on soccer highlights so I created a reddit scraper web app to automate my highlights binging. www.footylinks.live
Thanks, the API key is being accessed from an env var, so I think I'm good.
Python 3 won on all tests except the crypto test and startup time.
I get 0.5213045849847742 for i = 10000000
I did a database and emailed the fiance and myself when an RSVP was made. Same for when there is a guestbook post.
Made a simple app for sending GoToMeeting requests by creating a windows batch file on a users Desktop. Probably useless for most people, but it makes my life a lot easier. [https://github.com/Caleb68864/GTM_Link_Sender](https://github.com/Caleb68864/GTM_Link_Sender)
Still learning but working on a science article scraper for easy to read one page summaries of a topic ~ danielhhowell.pythonanywhere.com/index.html
A sequence comparer for a friend that extracts given sequences out of a Text file (never saw one with 3000000 lines) and matches them to a given library of genes. A company wanted to charge 1.5k euros for a job that only needed about 40 lines of python code... 
I made a web crawler and a search engine. My first python project ever.
Then the "Yes!" answer to "is p2 &gt; p3?" question still makes no sense to me.
This is neato
NASA also uses it https://www.python.org/about/success/usa/
It was a dumb typo. I fixed it
Oh Lord, why are the both of you scraping Reddit when it has a json API?
And what part of the Workflow Automation System (WAS) strikes you as a mission or safety-critical, real-time embedded system? I bet NASA also uses brooms and mops (I saw people using 'em when I worked there, anyway!), but _NOT FOR THOSE SYSTEMS_.
Ah! Ok, thanks.
Oh, didn't see that... I just skimmed through the code, saw the other info and just assumed the key was there too. Sorry about that. Nice work on the code BTW =) 
https://stackoverflow.com/questions/303760/what-are-use-cases-for-a-coroutine
This is the correct answer.
maybe you find something on https://dm.reddit.com/r/PythonProjects2/ ?
I understand this to mean creating a subclass then replacing the original with it? I like it! My use case is partially just 'how do you do this?' u/zzmej1987 offers a good alternative.
Well, with such a thorough list of reasons, who wouldn't. :)
First time I hear about pypy. It might be useful in the future for me. Anybody using it? Thoughts?
Enter every single amazon giveaway on giveawaylisting.com. I win once, maybe twice a day. Nothing useful yet lol. I have the source somewhere just don't feel like getting a link.
&gt;Then the "Yes!" answer to Huh? The yes answer to what? It seems like when i randomly cut your sentence in half it doesn't give the full picture to your statement The answer they gave for where py2&gt;3 in speed is extremely clear
Can you talk about how you implemented the genetic algorithm? Did you have a log of previous coil trials? Or run it in parallel for a while with the operators? 
source? How's the learning curve of QT?
The ad hominem is not necessary. The author has said he made a typo and corrected it. I posted the *exact* question and answer in my post, as he had originally (mis)typed it. &gt; So is Python 2 faster than Python 3? &gt; Yes! in almost all tests. The notable exceptions were the crypto_paes test, where Python 3 was 1.35x slower (because of the integer types), python_startup as 1.39x slower. As originally typed, the question was "Is P2 &gt; P3?" The answer was 'Yes! Except where ... P3 &lt; P2." Thus my confusion.
I'm the complete opposite. I usually consider my own code beautiful and succinctly designed but find most other's code is generally ugly and inefficient. I'm sure this how many others also think.
Coding with a friend is extremely helpful. 
Interesting. Looks like it would work well with unidecode
I made a simple rss feed reader. And then I'm in the process of adding features to a twitter bot I'm working on. 
It looks like these fellas got it covered. Basically just run a simulation a lot, and conclude statistical results. 
What's wrong if the audio is spaced out? Won't the text-to-speech bot just start a new sentence or make a new paragraph? &gt;Univision usually includes Spanish subtitles for their telenovelas online, but I’ve recently noticed that they now also include the entire transcript of each episode below the video. https://ielanguages.com/blog/transcripts-and-readlang-for-learning-spanish/
I made rock paper scissors lol.
How did you prompt something via python? 
More of a question for r/learnpython. If you download depencies from just downloading from browser, just find and install them. Otherwise you could write code in a text editor, save it, run a terminal in the same directory and run that file with '.py' suffix.
If I beat you in 5/7 races I'd have a good argument that I'm faster than you overall. It's the same concept, the majority of the time Python 3 is faster. 
But the title is wrong, it says 2 &gt; 3.
The title just says "which is the fastest version of Python?" maybe the author edited the post. 
I ran out of I he house, I don’t have my mac by me. I tried running it thru the terminal before i posted here from a walk thru i found online but I couldn’t figure it out. Thanks for your help when i get home il paste the output. So maybe someone will tell me what I’m doing wrong. 
You'd have to be pretty reckless to automate downloading of NSFW images from Reddit. Nowadays they are all moderated much better than in the past, but a mod is still slower in taking something down than your script would be in downloading it.
Suggested it to a friend doing some numerical calculations in Python, said it sped up his code by 2x.
Downloaded tinder pictures and bio of everyone within 50 km radius. 
Oh thank you so much!
I used Vim 8 for about a month, and I have now used Neovim for about 4 months. The main difference is that Neovim has a built-in terminal. It works as a regular buffer, so you can put it anywhere you want. You can alternate between terminal mode, in which it works like any other terminal, and the "edit" mode (I don't know if there's an actual name for it), in which the entire content of the terminal buffer becomes available as text, and you can use all the regular commands in it. But it's read-only and moving and yanking is the only thing you can do. It's very handy when you need to copy the output of something to Neovim. Another thing I find very useful is the `:checkhealth` command. It runs a diagnostic that reports problems on your configuration, plugins, and support for Python, Ruby and Node/npm. It even tells you if you're build could be optimized, and gives you the link on Github with the instructions to do so. It's a little thing, but that shows the developers have attention to detail and care about the users. This little thing made me compile an optimized build and with a very perceptible gain in performance. A few nice plugins only work on neovim, mostly those that use the terminal. There's a plugin to integrate the Ranger file manager into neovim (it's not a rewrite, you actually open the Ranger that's installed on your system. I have come to liked it very much. Here's a nice [list](https://github.com/neovim/neovim/wiki/Related-projects) (those with `neo` on the name tend to be exclusive to neovim). Apart from that, I can't spot any differences, and if none of these features I mentioned interest you, you'd have nothing to gain by switching. But there's another reason I'm using neovim, which is not entirely objetive: lots of people that are smarter than me wrote that neovim is the future of Vim, and that its maintainers are highly responsible and competent. I chose the Vim way because I wanted learn something that I could stick with for the long run, and I'd rather to use a tool that I think has a great future ahead. Everything I read about the current stage of Vim development point to a leadership that's resistant to change. Neovim gave me all the signs that it's a project that's here to stay, and is committed to improve without changing for the sake of change.
I'm working on a service that extracts low level music descriptors from sound files. Playing around with different tech: rabbitmq for messaging and essentia for music extraction. Aim is to get data that can be used to train models for similarity measures between tracks.
There's a GREAT "roguelike programming tutorial" over there (probably in the sidebar. I'm lazy.) It's like...13 parts I think. It's been translated into a bunch of different programming languages. I'd highly recommend the python one if you're just dipping your toes in the water. 
I think starting a Django project is perfect for not-so-beginners to climb into the intermediate level and beyond. You'd be building a website with any kind of logic behind it, so the options are infinite. Take an interest of yours and make the website about it; guitars, sports, whatever. Write scripts that gather information from other websites, save them to your DB and then display it in whatever format you want. Do all kinds of transformations to the data. Let users interact with your website. Etc.
What about a contextlib-kind-decorator? ([found this with google](https://gist.github.com/masonelmore/49cd856b9513f4264635d426707c44cd))
&gt; Man thats impressive. I hope to reach your leavel of skill. Haha, not at all, I just a hobbyist programmer, and manufacting engineering engineer at the time at work. This "project" spanned over 6 months, steps by steps, trial by trial. In fact, I did not expected it would end like this when I started this, it was some sort of side project. I usually joke that I am only good at "reading the manual", but this is the magic of python: many things are simplified, libraries available for everything, great documentation, great community :)
Ah man. Talking keyboard is an awesome idea. You could do so many cool things with it. 
Ah, my bad! OP, my comment was merely to throw geopandas into the mix because I didn’t see it mentioned. I am not an expert in the matter, only an admirer of pandas and I’ve done a couple projects using geopandas.
In most of cases you could use adding dynamic methods at runtime (https://stackoverflow.com/questions/972/adding-a-method-to-an-existing-object-instance), though, in this case it is impossible as sqlite3 is C library. After tryout I found out that you can create cursor with providing connection as init argument (c = sqlite3.cursor(conn)) So, you can easily solve this problem by using inheritance. import sqlite3 class SuperCursor(sqlite3.Cursor): def items(self): return self.fetchall() conn = sqlite3.connect('example.db') c = SuperCursor(conn) c.execute('SELECT * from stocks') for record in c.items(): print(record) conn.close()
For each type of products, the Engineering Dept. would provide a drawing of the flat coil, and a drawing of the 3d coil. Then our difficult job was to find the forming equipment settings that would allow to transform the first one in the second one. But this is totally not trivial to find this "function" such as: **f(flat_coil, 3d_coil)=equipment_settings** In the other hand, it was "easy" (at least doable), from the flat coil geometry and a set of 3d forming settings (what we needed to optimize) to find the resulting geometry of the 3d coil (the result of the flat coil processed by the equipment according to the settings). So this: **g(flat_coil, equipment_setting)=3d_coil** It was a mixed process of rotations, translations, projections, then finding intersections of lines and so one... So for the genetic algorithm, the population was initially made of random sets of equipment parameters (each particular motion/transformation performed by the equipment had a range in millimeters or degrees), then the evaluation of that population consisted in calculating the resulting 3d coil after forming the 2d coils with those settings, then compare (quadratic error) with the 3d coil drawing provided by Engineering dept.
at pure numerics numba on cpy will likely be faster than pyp given its llvm pedigree and transparent parallelism/gpu capabilities. in contrast pypy is capable of optimizing vast monoliths like hostpot, though unfortunately still single threaded - numba openly does not attempt to address this usecase.
Coolest thing I did with Python was get me a job. I did a program called LaunchCode. It's a 100% free bootcamp that did job placement after you're done. 6 months of that, and 1 month of them looking for a job for me and I'm now a data scientist making 5 digits more than I was at my post-military electronics maintenance job.
Yep :-) I've found more missing validation than I care to think of, including a database that dropped any user with whitespace in their name - whoops!
&gt;even though I'm not a developer No, mate, you are definitely a developer lol. Own it! 
You just described docker.
You use the power query to link to the raw csv file?
 In [3]: json.dumps(datetime.datetime.now()) TypeError: Object of type 'datetime' is not JSON serializable notably though supporting generics is still unfortunately an exercise left to the reader
Here you go! https://i.imgur.com/0oJ5v0e.jpg
Yes, it's a pain the first time, but it's really powerful tool.
lol I was busy
What is docker ? Sounds like something great !!!
For a school project I wrote a Django website that was called JukeSite. It was a jukebox for your house. Users could log into jukesite and control speakers across your house and choose songs to be added to a "room". Each "room" was actually a raspi connected to a speaker that was controlled by the website. I used Google music as the music service. Which their is a python unofficial api for. Users could search songs via the API and select the song they would like to play in a specific room. I really didn't have much knowledge on streaming the music so I ended up downloading the selected song, Caching the song on the website server and then distributing it to the raspis connected to the speakers. There we could cache up to 100 songs due to SD card restrictions but it worked well! I also enjoyed it because then I would have all of the song's in digital form on my website server which I could browse. (I don't know how legal it was though) 
docker.com
This reminds me of a profanity filter I had to write which was able to detect creative words like $#!+ (shit) and other uses like Windows high-bit symbols. For each symbol or symbol-phrase, I mapped it to the liely ascii interpretation. I then programmatically generated regular expressions for each targetted curse word.
Does it work in Windows too ?
Would you be kind enough elaborate on this? I'm required to do something similar each week, and it's minimal info but I always forget! I'd love to know the basics of how you used Python to automate this.
Yep. Docker for windows.
Lookup virtualenv, it is similar to what you want to do.
Oh cool, I use Python to manage stuff for my Kindle too. A lot of them were for processing the highlights I made; I taught myself JavaScript by making [website](https://chemikyle.github.io/authorNotes/) for the same goal. If you use the highlight or note taking functions, check it out!
With my level now, I think I can also do that too haha
I ran a test http://www.userbenchmark.com/UserRun/8111800, my SSD is relatively slow (maybe because of encryption and antivirus), but "Deep queue 4k" test results are relatively good - still only 350M/s. 
Cool.
I needed to know a bunch of information on a large number of cisco switches. This really couldn’t be gleaned effectively through a network admin tool like Solarwinds. I learned python to help me fix that and was quite successful with it. Then I began to use it for many other projects, mostly IT based, but some just for fun. I was formally educated in C#, but frankly if I never work with another line of it I’ll be happy. 
Not sure if you're still reading these, OP, but with some help from /r/learnpython I [made a program](https://github.com/ChemiKyle/Princeton-Applied-Research-M250-270-electrochemistry-data-cleaner) that automated a data cleaning process that used to take me hours, if not days, of mind numbing clicking. More recently I made an [inventory management program](https://github.com/ChemiKyle/Flask-Finder) for my current job (assisting an undergrad teaching lab) to get people to stop asking me where things are. I even added some logging and analytics tools to help me decide where to put things and when I should be around to help. I find it's easier to tackle [small, stupid](https://github.com/ChemiKyle/jazzyWeather) projects, [minor life improvements](https://github.com/ChemiKyle/Paper-Trail), and [pointless, whimsical ventures](https://github.com/ChemiKyle/Novel-heatmap) to keep up the morale rather than being discouraged by trying to plunge into massive projects and not knowing what you're doing.
It sounds like you are already using the correct tools. How slow is your script/tests the target? Anything that can be vectorized? Any loops that can be removed? Have you tried numba and dask?
That's pretty cool. So you actually made a machine learning program that can be more accurate as you play more games. Sounds hard.
Overide the cursor() method to return your class instead.
This post is better suited for r/learnpython
Not sure how slow anything is ATM; I wanted to ask before diving into anything. Not sure what numba and dask are, but I'll check them out.
Oh I'm try my best to read as much post I can but there too many !!! Haha I can see that Python can really automate the boring stuff. I really can't wait to master it. I wish I could make a Python code that can reply every post here haha
It was a typo - ed
I used to work Master Control for a small market TV station in the early 2000s when stuff was just starting to get really automated and lots of things were transitioning. I got there just late enough to miss running commercials off of tape; instead we had a commercial playback system with multiple A/V IO for ingest and playback. Basically an expensive computer with some high grade hardware. Unfortunately, due to management deciding not to spend some money on software, we were building our playlists manually by looking at the paper log for what was sold in what breaks and then draging the appropriate number from the inventory window to the playlist. This took a few hours to do for a whole day's log, and because -everyone- is a little dyslexic when staring at numbers for hours, there were several human errors per day necessitating "make-goods" later on. I was just learning Python and decided solving this would be my first practical project. On a separate computer - because they wouldn't put the mission-critical commercial playback system on the network - my tool would parse the file the logs were printed from (kind of tough actually, they were not well formed or consistent) and build a playlist file, which we would then sneaker-net with a 3.5" floppy. It worked really well; saved several man-hours per day and eliminated those transposition errors. It even made us aware of missing inventory (accidentally deleted or just not arrived yet) before all the Sales people went home for the day because the playlist program would flag those. I also made a companion script so that if you saved the playlist and transferred it back, you could get a pretty detailed missing inventory report based on those flags. Not super impressive looking back on it now, but anything saving money and time in the real world is pretty good for a kid who was hired to push buttons on a control panel and was just learning Python. Got a few hundred $$$ bonus out of it too. Pretty good deal for them, really.
 Wow that's cool. You manage to create something like after 2 months of learning Python? That's impressive. I wish didn't waste my 2 months.
I guess I was confused because Monte Carlo sampling in applied statistics involves defining a model, and since we can run sampling algorithms very fast, it is easy to determine parameters from the sampled model even if there would otherwise be no closed form solution for those parameters. The Gamma function, for example, has no closed form derivative, so conventional methods for fitting the function to your data do not work. MC methods are one way to work around this. So what you are saying is that he performed the task in-game repeatedly, which means the task itself is the model he was sampling, and he used it to learn its mode, or the greatest output value given input. I would be interested to know what his sampling algorithm was, and how long it took to gather enough information. I would think that the Monte Carlo efficiency would be low for something like this.
I've used this, and it's good for games, but it's no where near accurate enough for modeling realistic physics.
After reading all the posts, I feel very inpired now. Thank you very much.
That's really amazing. Thanks for sharing your story. May I know how long it took for you to master Python?
It is. It used to be 500x slower back when it used dictionaries of dictionaries and I thought it was fast. At some point, some user sent me a code that was way faster and said he used masking to speed it up. What was funny is he wasn't even right about the reason, but it was a lot faster. I ended up getting it something like 10x faster than his original one for a comparable problem. 12 years in and numpy/scipy continues to shock me at what it can do if you use it right, which usually means using the axis parameter, searchsorted or sticking a c in front of the scipy KDTree class. I have my bag of tricks, so I get pulled in on a project, spend half a day and speed up the code by 500-1000x. Last time, I laughed and told my boss there's probably another 10x+ that I can do, but I need a bigger problem.
I see. I'll check out these podcasts. Thanks.
I'll let you know when I get there. I don't program for a living. I eventually quit TV and joined the Navy and I still just use Python to automate some simple stuff at home. I'm just a little better with it than I used to be.
Nice.
Everyone have their own experience on how they use Python to make their lives easy. I don't compare projects with others just cause of how cool it is. I just to learn the things Python can do. Im more amazed the more read the posts. Thanks for sharing your story.
Nice man.
That's one heck of a resume. You are hired.
Haha nice. I'm surprised people still use Roku.
Amazing.
How so?
For sure guys, though I don't know how to write code on here, but it was super simple. The first part asks for input for each day. "How many hours did you work on $day?" Then, it tallys up all of the hours and says "You worked X amounts of hours?" If you say yes to the prompt, it starts up the second function, which is just an email bot with "Whatsforsupa worked 40 hours this week", then prints line for line: M: 7:30-, T:7:30-4, etc.
I saw these once a couple years ago. Always loved it. Never saw the script before though. Looks like the main loop might throw out every other frame at the while statement. Intentional to speed it up? Can't imagine it affects actual results much; they still look great.
What are your platform details and python, numpy, and scipy versions? The anaconda distribution recently added mkl_fft, which will dramatically speed up your FFTs on intel CPUs. If your arrays are large, you can use `cupy` which is a drop-in replacement for the numpy API, but on nVidia GPUs. This can give you huge speedups (e.g. 50x) for larger size data. 4M elements is sufficiently large to seed gains. You could also bin the data first; if you only care about a period of 30 min, then having 15s sampling interval =&gt; 120 samples/event is hugely oversampled, you could boxcar average into bins of 5 min (so collapse 20 samples into 1) and be totally safe still, while going a lot faster.
Dask only gives performance improvements when the amount of data on disk is very large. It will usually slow you down by a factor of &gt; 10x when your data is not very big.
Stuff like microwave comms. Long distance wifi, phase shift modulation, all the stuff that is a growth on what you've done. 
[In this file?](https://github.com/timbennett/movie-barcodes/blob/master/process_video.py) Not sure I'm seeing where that happens but it's been three years since I looked at the code.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [timbennett/movie-barcodes/.../**process_video.py** (master → a4ce832)](https://github.com/timbennett/movie-barcodes/blob/a4ce83224a0a07df2c26576c23428a784d773dfb/process_video.py) ---- 
In what circumstance would the count (index) not be the same as an incrementing iterator?
Yeah, the while reads a frame and doesn't do anything with it, then the try reads a frame and processes it. I just realized I probably look like a jerk critiquing code. Didn't mean to come off that way.
Didn't mean to call out your post. It's a good library, and in certain cases it's a great go to tool. 
Going to try and make my own! If I can, I'll fork the repo, clean it up, then submit a PR.
Definitely check out the tutorial. It's excellent. I think it's about 13 parts and uses libtcod, which does a lot of the heavy lifting. That way you can get to coding map generation and all that stuff quickly (which they walk you through.) Then, once you're done adding stuff, you can go back and replace the engine with your own if you like. 
Yes you are right, only few minutes ago I googled "M.2 SATA SSD": [Sequential read speeds up to 2050 MB/s ](https://www.amazon.ca/Black-256GB-Performance-SSD-WDS256G1X0C/dp/B01MS6BYJD/ref=pd_lpo_vtph_bs_t_1?_encoding=UTF8&amp;psc=1&amp;refRID=RX2E2T387M6TQZ9ADESZ). I don't like to use my computers for reading data (but still doing it)- copying GBs over network kills all SSD speed advantages. Now when I have access to Hadoop - I just copy data there. 
You might as well be on a standard hard drive than a network. I'm pretty sure they're faster.
I did use this as a resource to estimate blast radius! It's a very fun tool.
Fairly detailed. It was a physics class, after all. I looked up the specs on each countries different missiles including diameter and weight to give me things like the drag coefficient force necessary to propel it.
Unfortunately, no. It's offered at California State University, Chico.
Homoglyphs and unidecode for different cases. Homoglyphs convert Russian "р" to English "p", unidecode - - to English "r".
It's buried somewhere but... well it was my first semester ever coding and it's pretty messy. Poorly commented and very inefficiently written. I didn't even use classes back then! So I'm actually too embarrassed to post it to r/Python until I get some time to rewrite it or at least clean it up a bit.
[scipy.signal.correlate](https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.correlate.html) can use FFT either if you tell it to or if you tell it to pick whichever method is the fastest. I don't really get the point of your algorithm. If I understand your problem correctly tou have two vectors, a and b, where a is measurement data for two years sampled approximately once every 15 seconds, so about 4 million elements. b is a shorter vector, and you want to find where in a b fits the best. If that is the case, all you need to do is correlate the two and find the peaks in the result. Each value in the correlation output is a measurement of how well the two vectors fit together, so the element in the output that has the highest value will represent the lag required to maximize the correlation. It's the same principle of using the [autocorrelation](https://en.wikipedia.org/wiki/Autocorrelation) to find periodicity in signals.
In python an iterator is something that implements the [iterator protocol](https://docs.python.org/2/library/stdtypes.html#iterator-types) (i.e., has a `next` method that raises `StopIteration` once the last element is reached and returns itself when `iter` is called on it). With `enumerate` it's just returning an int representing the current count through the loop like the `i` in `i=0; i&lt;container.length; ++i` in C-like languages.
**Autocorrelation** Autocorrelation, also known as serial correlation, is the correlation of a signal with a delayed copy of itself as a function of delay. Informally, it is the similarity between observations as a function of the time lag between them. The analysis of autocorrelation is a mathematical tool for finding repeating patterns, such as the presence of a periodic signal obscured by noise, or identifying the missing fundamental frequency in a signal implied by its harmonic frequencies. It is often used in signal processing for analyzing functions or series of values, such as time domain signals. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
I couldn't find a way to access my saved posts through the API
Gotcha! Thanks for the explanation
I️ have used arrayfire for similar issues but with large-ish 2D matrix math. They have a python binding that will allow cpu, opencl, and CUDA backends without too much hassle. It is worth looking into. The other good think to look at is the precision you are using in the calculation. I️.e., if you only need a 32 bit float, using a 64/128 bit float is a big waste. This is doubly true with complex numbers, since 64 bit floats end up making 128 bit complex numbers after your FFT. 
Well, I am a college student(final year). There was an AI challenge where contestants write bots to play the game against other bots. I wrote the platform which includes the game and the game engine. I got a great mentor while working on the project. I don't know if it helped me get a job, but its one of the most important projects that I ever worked on.
Finally. Those readme.txt files are ugly lol
Plotly is a pile of garbage. There are almost no Resources on it, it takes so much more code, and offers varying degrees of customization in exchange for verbosity. Seaborn is the definition of brevity
Just to make it more confusing, `enumerate` itself *is* an iterator! In [1]: itr = enumerate(['a', 'b', 'c']) In [2]: id(itr) Out[2]: 140012111063792 In [3]: next(itr) Out[3]: (0, 'a') In [4]: iter(itr) Out[4]: &lt;enumerate at 0x7f571c24eaf0&gt; In [5]: id(iter(itr)) Out[5]: 140012111063792 So when you call `next` on it (explicitly, or implicitly with `for` or `in`), it returns the next `(idx, value)` tuple.
People keep saying docker but it sounds like op wants to be able to distribute a binary (which I don't know how to do in python either)
No worries! It helps for things to be clarified, I am learning too :)
https://automatetheboringstuff.com/
I'm so glad the new pypi is finally going to become the default in just a couple weeks. So much better.
Demo album: https://imgur.com/gallery/48HqX When birdseye was posted to reddit [previously](https://www.reddit.com/r/Python/comments/7v0q88/ive_created_a_debugger_which_lets_you/) I thought it was pretty cool. I had just released my own [python scratchpad](https://marketplace.visualstudio.com/items?itemName=almenon.arepl) as an VScode extension, so why not birdseye as well? I developed the prototype extension over the weekend, and spent the remaining week polishing it up. It should work on all platforms and python versions 2-3, but it's still in preview, so be sure to raise a issue if you find a bug!
Not necessarily. For example, if your python is primarily doing work with numpy, Pypy will generally slow you down when compared to generic CPython.
No, it's fair, I didn't realise that would skip every second frame, I thought it was just checking whether there were still frames in the pipe. But the act of checking also moves the cursor forward, I think. Never realised that.
http://docs.python-guide.org/en/latest/shipping/freezing/ Probably fraught with peril though
The best thing you can do to accelerate your FFT is probably to get one of the `mkl-fft` libraries, which are Intel Math Kernel Library functions. They are based on FFTW but better optimized for the SIMD instruction sets. 
Most recently, I made a twitch status and game update tool using their API. It's really basic, I can change my status, and it scans my active processes for my games, and automatically updates my now playing game. Before that, I wanted to make a poker bot, so I coded a really simple Holdem game using pygame. It was pretty neat. My favourite project was a lotto program. It had a web scraper that could scrape the entire history of all winning draws and insert them into a database, as well as a crown job that would fetch new draws and update as necessary. I wrote an ever-evolving algorithm to choose numbers for me automatically. It was a command-line tool, so I would invoke it by running the Python program, using a switch I would tell it how many lines I wanted, and I had a laser printer stacked full of the selection slips for said lottery, and it would fill them out as necessary. By far my favourite, and if you play a lot of lines like I was doing, it's a huge time saver. 
I am not very familiar with decorators, this will take my a while...
Thanks for this. Lots of good info. 
''.join(for c in hg.to_ascii(s) if c in string.ascii_letters)
Nooooo. I liked rst
.... So what did you charge? :-)
ok, I thought you meant for something more complex, but yeah, the simplest way is to iterate the cursor after you execute your query. good luck!
Pythonista will not be able to run C extensions, only modules with pure-python code. However, it is possible to use pip using a tool like [StaSh.](https://github.com/ywangd/stash)
You can RST if you want to.
Yeah it’s awesome very excited 
Just use print for that. Nobody needs to read famous quotes on twitter.
Depends on your intended audience. If it's developers then docker is good. However if it's non devs, OP needs to look into cx_freeze or PyInstaller
You can leave your friends behind.
Definitely pyinstaller in a virtual env
Readme.rst worked and where pretty, albeit more complex to type than markdown.
&gt; Is there a way to build a portable environment so a Python app can run out of the box? No. Portable, Python, out of the box - you can only have two. Docker doesn't run on Windows. Docker is a program that provides isolated process environment for Linux processes. It depends on Linux kernel for most of its functionality. Docker for Windows runs Docker inside a VirtualBox VM player running a Linux OS. I mean, if you are going down that route, you may as well just write a VM image and distribute that: fewer levels of indirection. If you want to distribute just a single program, the whole point of a language having an interpreter is that you write a little bit of code and rely on the user of your program to provide the interpreter so that you don't need to ship the whole thing. So, if you do want to ship the whole thing, choose a different tool. Python interpreter is portable, sort of, until you use C extensions, and then it's not. Sometimes there may not even be a way to compile an extension for a different platform.
That's a really unhealthy comment.
&gt; Wasn’t talking about jython/ironpython, bro! &gt; Obviously python has frameworks/wrappers/mappings for most major languages out there. jython and ironpython are implementations of python in java and .net respectively. The Python reference happens to be written in C, it could have been ALGOL, PASCAL, CORAL 66 or MONK.
What about Vagrant? Cross platform sounds like virtualization to me. Vagrant lets you make VM workspace for any computer (windows, Mac, etc.) 
Doesn't docker only work on Linux? How does docker solve this problem? We get it, your cool because you use docker.
Docker hypebeasts. Proudly flaunting their latest brand identity. Like highschool kids that shop at Supreme. "How do you know someone uses docker? They'll tell you."
If your using Python on Mac I recommend you install it using Homebrew. Try to remove your current installation completely and install python using homebrew instead.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [TomAnthony/lxml/.../**atom.py** (master → eaf5969)](https://github.com/TomAnthony/lxml/blob/eaf5969ea10f50fa1bf113682fcd7cc708b93bdf/doc/s5/ep2008/atom.py) ---- 
Why are you curious?
The result of `decrypt('A')` is '?', so it should still work. The wrap around is a problem for the first two unicode symbols that are not really used (nul and soh characters: https://en.wikipedia.org/wiki/List_of_Unicode_characters). Thanks for your hint that generator expressions should be preferred here. I agree (but would not go as far as considering it 'very bad code'). For all the other guys out there who do not know the difference between generator expressions and list comprehension. Here is a nice stackoverflow discussion: https://stackoverflow.com/questions/47789/generator-expressions-vs-list-comprehension Basically, generator expressions do not actually *create* the list. This is more memory efficient. If you decrypt very large texts, storing the list in memory can result in too much RAM usage.
As long as the script is logged in as your user, just go to /u/pcuser0101/saved.json
Rent a VPS (virtual private server). It's like having a computer in the cloud that's always on. If you're a student, you can get $50 in credit for DigitalOcean from GitHub's [Student Developer Pack ](https://education.github.com/pack). That's enough to run their cheapest server for 10 months.
&gt; SQL is great ... and that it's declarative meaning the user only asks for what they want rather than how they want their query executed. Unfortunately not so. So many SQL questions and teachings are on how to optimize its run time. A large part of what an Index is for is optimizing queries. You know what you want, but you still have a lot of query optimization ahead of you in most cases.
concurrent.futures has executors for both thread and process.
Ignoring docker then I'd say most projects have a packaging setup for different distros and OS'. So for RPM you'd have the rpm files, for Debian you'd have the Debian files and for Windows you'd draw a pentagram on the floor and light 7 candles. All this can be auotmated in CI of course.
Thanks! I take a look at it.
tyvm
* How much money do you have? * How fast can you get at your petabytes? * How fast can you store your results? You could try using an FPGA close to your data source employed as a data reduction processor, performing part of the task and also reducing the amount of data streamed out. 
Because I want to learn. Duh!
Thanks! I'll have to see if this programme is really worth the 50 dollars and decide 
A t2.micro EC2 instance is only like $10/mo too - not knocking DigitalOcean but AWS has many more bolt-ons to play with and is important to be comfortable with anyway from an industry perspective.
Make your own project, although other people's code can be teaching.
&gt; I wrote a desktop manager. It got the weather from the internet, and then made my desktop background related to the current weather in my area. Cool, I made one like that too! It seems a popular project, I've seen lots of people making it. mine: https://github.com/bharadwaj-raju/WeatherDesk
Python is a general purpose high level programming language. It will be able to do almost anything you put your mind to. That said, you could write excel formulas that will probably do that too. What python will give you is the ability to have that code be readable because it is in my mind much easier to read python than excel formulas. What you will lose is the ability to send your excel sheet and formulas in a single file. That could be a big loss if you plan on sharing your automation. 
im asking in general not for specific database or framework. problem is, i want my development to be public on github, and be able to just push/pull to my production server! :) so i need to have my configs in an environment variable (at-least i guess so!) and then one of my colleges came up with the question, what if we wanted to commit and public the code for docker-file and docker-compose and wanted like 20 instances of our application! my first respond was that maybe docker will allow us to dynamically pass on env variables. and i searched and confirmed that we can. but the problem is we aren't going to run that command manually every time our server is restarted or anything. we should have an automatic way to run docker swarms..... and the question keeps going! kubernetes pod and secrets seems to be the answer, but im not satisfied with it
Problem with compiled numerical libraries is you can either compile to be portable or to use the fastest/latest hardware. That might be OK if you don't require it to be fast.
You should ask questions in /r/learnpython. You will get help there more easily if you [format your posted code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F). Anything else you post where indentation and spacing is important, like error tracebacks, should be formatted the same as code.
I see now. Orchestration/automation. Let's see that picture in your head. Whether it is manual or automatic, what action or process should trigger the rebuild of a swarm? A commit?
video please! Im huge python evangelist and mixology enthusiast!
yup, i need my CI to be able to push new production code into containers and restart them.
ScriptedForms Quickly create live-update GUIs for Python packages using Markdown and a few custom HTML elements. Just write in markdown + variables / UI types Based on Jupyter Release Highlights Now have a portable windows version. Update the forms in the zip, rezip the package, then send your forms to your colleagues. Download the portable windows version at https://github.com/SimonBiggs/scriptedforms/releases/tag/0.8.0 Completely revamped variable-table. It can now have toggles, tick boxes, dropdown select elements, strings, all within table elements. Input types are defined by a python dictionary. Dropdown values are defined by a python dictionary. The table itself is a pandas table. Implemented inline code within sections. This is designed to be used to maximise separation of code and template allowing the majority of the code to be written into a python file and then imported in. This can be combined with a section-filechange enabling the form to re-import the python file whenever the python file changes. For more information on the release see https://github.com/SimonBiggs/scriptedforms/releases/tag/0.8.0 or the project readme (https://github.com/SimonBiggs/scriptedforms/blob/master/README.md)
RST: Rape Structured Text
No worries!
good stuff, thanks
You could look at getting something like a raspberry pi or equivalent and just plug it in and leave it running. Cheap, easy-ish to set up and low running costs as power consumption would be minimal. Plus you can always use it to tinker and do other projects.
Why don't you use JSON files? It is new idea to me and i try to find some negative sides and hidden traps in it.
This post is better suited for r/learnpython 
Thank you. I will tinker with it.
Cheers. Went to sign up for this and ended up selecting another 4 free courses :) Next 3 months of my life are tied up nicely now.
World class post mate
- About $12,000 for the first run of 10TB, if that works it gets expanded into the rest of the data set until there are diminishing returns. - I'm not actually sure, it's processing of the GDELT data set which is already loaded on AWS or Google Cloud. - Each 10TB run continuously modifies 10MB segment in a 3GB output. The idea is to create a 300,000 dimension lattice path where you start with a word and can quickly derive every sentence that has ever been written with that starting word by loading the 10MB segment. That's actually a good starting point, I'm very curious about how the implementation might work to create the master file. It blows my mind that it's even possible to create a data set from archives of this scale.
I take it its not free. 
I want to sell a .exe file but i dont want someone to purchase it then share it with a friend please help
Ay cool. I think for the homework manager I took the quickstart for Google’s speech recognition API and just added stuff onto it, so that’s why it looks a little weird (and you can probably find the quickstart on Google’s tutorial/wiki sites). I’m actually working on the next version of the manager now, but I’m trying to make it more a personal assistant and have everything saved locally (among lots if other changes). I’ll probably share it on here when I’m done.
For a school project I wrote a Django website that was called JukeSite. It was a jukebox for your house. Users could log into jukesite and control speakers across your house and choose songs to be added to a "room". Each "room" was actually a raspi connected to a speaker that was controlled by the website. I used Google music as the music service. Which their is a python unofficial api for. Users could search songs via the API and select the song they would like to play in a specific room. I really didn't have much knowledge on streaming the music so I ended up downloading the selected song, Caching the song on the website server and then distributing it to the raspis connected to the speakers. There we could cache up to 100 songs due to SD card restrictions but it worked well! I also enjoyed it because then I would have all of the song's in digital form on my website server which I could browse. (I don't know how legal it was though) 
Lolol
That is very cool. If I ever revamp the code later I’ll definitely do that.
Pure JSON files are not so easy to read and write by hand. The format is more strict, parameter names need to be quoted, there must be commas between all values, and they cannot have comments. INI files are more handy in this regard. 
Yes, I use bamboo and each environment has its own credentials, and they are just encrypted variables which Linux can pick up. Exactly what you said! When I commit to a designated test branch, bamboo runs whatever build and deploy job I have set. A merge to master redeploys production. Some things like bamboo and amazon code deploy have templates ready for ec2, azure, docker, whatever, so I just had to fill in the blanks.
Not easily. You can build in some sort of protection mechanism, but any such mechanism, no matter how complex, will eventually be bypassed (see: every videogame ever).
So which one should I go for ? Google AI course or Microsoft AI course ?
This probably isn't what you have in mind, and obviously isn't a good idea if your config is from somewhere untrustworthy... But I really like the 'object' configs that you can use with Flask: http://flask.pocoo.org/docs/0.12/config/#development-production Allows you to use polymorphism.
You're barking up the wrong tree. What you need is a strong licence, and a cleverly hidden phone-home mechanism to report usage to you. Sole this problem in court, not in code.
What about [Nuitka](https://nuitka.net/)? There's a decent intro [here](http://www.tsheffler.com/blog/2015/01/05/nuitka-compiler-for-python/).
I'm curious how the Nuitka compiler would compare.
Visual Studio doesn't have any features that do what you're trying to do. You're going to have to figure out how to make one of the aforementioned tools work.
Is it free? Im working rn
You can audit the course, which gives you access to the material for free.
That is playing the long game with the prank! Could be years before discovery... I like it though.
&gt; What config file format do you prefer for your projects? and &gt; What config file format do you prefer? The problem is this is not the same question. There are good formats, and there are formats that are good for projects other people need to work on. I wasn't able to find an intersection between the two. Some obvious things: 1. JSON: overly restrictive and not expressive enough, no schema. There's no way to write comments, no way to express concepts like "this and the other thing should be the same". 2. INI: overly restrictive, no real standard, no good parser, no schema. Everyone writes INI files in whatever way they like. Python INI parser is lame to the point it's useless. 3. XML: overly complicated, lots of pitfalls, difficult to read, still not expressive enough. XML standard is a huge book, not implemented fully by anyone. Not to mention there were quite a few unfortunately bad decisions made when creating the standard. 4. YAML: overly complicated, very easy to write something you never intended to, no good parser, the standard is poorly defined. There's no formal set of rules for YAML. The only source for it is the creators' website which gives half-arsed set of advises on how to parse it. Most parsers in existence don't parse 100% of what the authors of YAML think is valid YAML, sometimes it's not possible to tell if what you see is a valid YAML, and what it should mean, if it is. Whitespace in YAML is even worse than in Python. ---- There are minor evils like HOCON, TOML, ReStructured Text, Java properties files and a ton of ad hoc formats of the same kind. They are minor because they are not as popular, not because they are better than the bigger evils. ---- Good formats: S-expressions, Prolog, SQL. ---- The problem is good formats are impractical because the value in configuration is the shared understanding, everything else takes back seat to this ultimate goal. People chose bad tools to share this understanding, but it's an unfortunate reality.
I am using workflow iOS app that saves basic date and time and if I am coming or going into a CSV. Wonder whether that would be of any use instead of manually typing in the times. I am still trying to figure out how to generate the report myself and also manage my flexi time hours. 
&gt; ctivities to help you take your first steps in the exciting field of AI. &gt; &gt; Link to Micros Google has an AI course ?!?!?!? links please. 
Coming from a professional programming perspective, who has gone thru many rewrite projects. Keep your history. Nothing kills you faster then trying to see why a business logic was designed that way when you have no way to track. However, if your rewrite is truly brand new, then just make sure when you do bring old code in, you add it incrementally. Don’t add 5,000 lines of old code with different logics and expect 10 lines of comment in Git will tell you what it contains.
Go to ai.google
Take a look at [Juno](https://juno.sh) which is a Jupyter Notebook client for iPad. You can create a free account on [Azure Notebooks](https://notebooks.azure.com).
Thanks. I really wasn't familiar with how the correlation functions work (which is part of the reason why I asked the question). I'm definitely understanding this more now though. I think I was just pretty intimidated at first. Regardless, I think the function will still have to loop many times throughout the two data sets. Both A and B are the same size, but I'm doing this calculation in 24 hour windows, each shifted by some very small amount of time, which is why I was worried about the time. 
Thanks. I really wasn't familiar with how the correlation functions work (which is part of the reason why I asked the question). I'm definitely understanding this more now though. I think I was just pretty intimidated at first. Regardless, I think the function will still have to loop many times throughout the two data sets. Both A and B are the same size, but I'm doing this calculation in 24 hour windows, each shifted by some very small amount of time, which is why I was worried about the time. It's not doing 1 correlation with the entire data sets, it's doing ~30,000 if I use 24-hour windows, each shifted by 30 seconds (which isn't a set number, I think it's 30 seconds but it may well be on the scale of minutes or hours). Even if I shift each window by an hour, I'm guessing the program will still take about 4 hours to run. Not that this is awful (I've ran programs for longer), but I'd prefer to make it as short as possible. 
Yeah, I'll definitely report back later. I also wanted to know if there were any libraries to do the calculations other than what I've mentioned, but it doesn't look like it. 
That is what pip does. 
Arduino could work too?
What dataset do you have?
Yup I used pygame for the graphics library 
I believe so I just enrolled. 