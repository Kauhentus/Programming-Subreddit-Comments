[I personally use this one] (https://bintray.com/veegee/generic/vim_x64/), but someone could have a better option.
I used Flask framework. http://flask.pocoo.org/ Frontend: html, bootstrap Database: PostgreSQL
yeah, because "local network" just screams webscale.
Looks like they don't have the patched fonts installed for their shell (see in the status line the little box with an X in it). Edit: You should install [these](https://github.com/powerline/fonts) or patch your own :)
Why would you want to replace the current text with the output of Python run on it? You may accidentally overwrite the code, and the syntax highlighting doesn't look good on the output. To run Python on the current file I define a macro for the `p` register, in the `.vimrc` file, which saves the file and then runs Python on it: `let @p=':w|!python -u %'` Then just use `:@p` to run the current file. I define the `q` register similarly for Python 3. 
I recommend taking the Udacity course "Design of Computer Programs". This will help you think about proper program structure, algorithmic based design, test driven development, and good code form and structure. It's in Python, and will likely improve your raw python skills as well. If you want to think about the future - what kind of role are you interested in having a year or two in the future? From there, it can be pretty easy to start thinking about what the gap is from your current experience.
It depends on the how the file is run. Since python is interpreted, it is often invoked like: $python some_file.py which runs some_file.py starting at the first line (assume for simplicity sake). Often time, you will see something like: if __name__ == "__main__": main() #run main program This means it will only run the main program if this file is the one invoked. It's good practice to use this as an obvious entry point into the program and to prevent unwanted behavior if the wrong file is invoked. In PHP, the reason it is called index is by convention, and the web server (apache or nginx) is configured to look for it explicitly (that is also the default on a new web server install), but it could be anything. In Python, I am not aware of such a convention, since many python programs are single file scripts named to be descriptive.
Plenty of visitors hitting the site and repeat visitors too so in that respect, good. But for paying customers it will take a bit more time I think. 
Seems like this is complicated enough to warrant it's own Python VIM package. 'Vython' anyone?
Sssshhhh... you'll wake up the emacs people.
[removed]
Your inability to detect sarcasm is rather disturbing.
Using the following version in `.vimrc` only redefines `makeprg` for Python files, turns off buffering so you can see the output, and always uses the current filename: `autocmd FileType python set makeprg=python\ -u\ %` I'd find having just "enter" run the program annoying, but if you want to save the file first (to run the most recent version) you can use this mapping: `map &lt;Return&gt; :w&lt;CR&gt;:make&lt;CR&gt;`
thanks airline looks great
yea you already posted this bro, tf outta here
as a non-R user, I agree with the importance of readability, but I think the arguments against numpy/pandas fall flat. There's no reason a non-speed concerned user would ever need to know that numpy uses C code under the hood.
Nice point, I agree that's a better solution. I personally like "enter," but obviously you could map it to F5 or whatever your preference is.
can't reproduce the difference (though both are pretty slow) Debian jessie - Python 3.4.2 1977 function calls (1927 primitive calls) in **35.168 seconds** - Python 3.5.0 2023 function calls (1978 primitive calls) in **38.625 seconds**
[removed]
Fucking Legend, I was using PyCharm for a bit, but tbh VIM all the way.
This is great, thanks. I didn't know about hdbscan, and its graph is really phenomenal. I'm going to have to install hdbscan myself and test it out.
And debug the hard way.
Nice trick! I'm especially fond of `self.__class__.__name__` since it'll adapt itself if inherited.
[removed]
1. Be self motiviated. Per the many other comments - be proficient in using available resources such as Google, books, or others to solve your problem. The best programmers I've come across were motivated before the paycheck. 2. Learn about some of the core tools and principles most software teams leverage such as version control, continuous integration, unit testing, software development process. 3. And then there is the whole academic side... Of that massive list I'd keep it simple and suggest keeping the idea of abstraction in mind and how it might pertain to your code. 
No it doesn't
Vim does not distinguish between &lt;c-j&gt; and &lt;C-j&gt; and &lt;C-J&gt;. They all mean control-j.
Requirements should be based on the work. Always use the best tool for the job. Someone working on databases doesn't need to know how to build a kernel.
While PyCharm+Ideavim is great, I've been using GVim on windows too and never had a speed issue. Has crashed a few times, but only since I started using Syntastic (so it might be related to that...)
[removed]
Markdown is a markup language that I'm familiar with, but it didn't support things like arranging the chapters without changing the filenames (a must since I'm horrible at making names the first time I want to write something). For short stories, Markdown would be fine. Markdown, as far as I'm aware of, also doesn't have a way to write conditionals (which are needed since sometimes I need to quickly toggle on and off any commentary I've placed).
[removed]
It's much the same convention as used in Windows software. The program has a .py (or .exe) file. It can be any name.
Oh cool. So for a capital you'd just specify the shift. TIL
This guide says: "The VIM version. This should be &gt; 7.3", but his screenshot shows version 7.3. Shouldn't it say &gt;= 7.3? Or do you really need 7.4 to do everything in the guide?
I'll never understand why people use a glorified text-editor instead of a proper IDE, I use Pycharm as well, I guess we're just not hardcore enough :P
They're all configuring their plugins to colorize all the parenthesis in their `.el` files - they ought to be pacified for a while once they can look at the colors and soothe their RSI /s
What is this craziness? totals = by_county.aggregate([ ('total_cost', agate.Sum(), 'county_cost') ]) I think I'll just stick with pandas.
I've been able to manage a profit in each of the past 5 season. Since 2011, for each season I've finished (after ~500 bets each season) +127.5% in 2011, +21.4% in 2012, +13.9% in 2013, +17.4% in 2014, +49.9% in 2015. I'm not going to pretend I know how casinos operate or set their lines, but they aren't accounting for certain things that I weight more heavily.
Heaven would be proper vim emulation in pycharm (I know there is one but it doesn't quite cut it for me).
Nice to see a version also for python 3. I have always cringed a little when new tutorials are written for python 2 - no need to start out new programmers with the old version. Will donate to this.
Nah it's just resting.
Okay, sorry for the delay. This was an oversight since I don't use Mac and most other operating systems not only include gnupg by default, but depend on it for the package manager, so it is hard to remove for testing. You can't exactly do `docker run osx:10.11 /bin/bash`, even though that would be neat. Also, Travis can be kind of a pain in the rump for somebody more familiar with other build/CI systems. Nevertheless, all updated, and should be working with or without encryption. Let me know if you continue to see issues.
Give ipdb a try but other than that I agree completely. 
I haven't used agate yet, but my guess from knowing the developer is that he's trying to create something that is more usable for the work situations he's been in (i.e. capable reporters who aren't yet able to program but need to go beyond a spreadsheet)...so the focus is on usability and convenience....I think it does some reasonable typecasting and cleaning for you, such as auto-date conversion...something that yes, most programmers should explicitly set up on their own, but is so far beyond the horizon of the non-programmer. Honestly, I would never get behind a new data analysis library, having already spent enough time in R and Pandas to be OK with it...but the OP has not just great developer chops, but has also seen needs where other people like me think, "meh". Case in point: [csvkit](https://csvkit.readthedocs.org/en/0.9.1/)...something that has exponentially made it more enjoyable to explore and manage datasets, especially with SQLite which is...still unpolished in the GUI and the shell department.
I'll never understand why people use a glorified text-editor or a proper IDE. I use ed.
Most Python web frameworks don't have a 1:1 mapping between URLs and a file, as typical in the PHP world.
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Yay another fucking library 'for humans'
There's no convention enforced by the language, so `my_random_filename.py` could be the entry point. Some frameworks set a special name. If you're just looking for something that other programmers will recognise, `main.py` is valid, or document whatever else you do.
If you're running a module, \_\_init\_\_.py is run first. If you're running a single script, the script is the entry point.
Using git submodules doesn't imply you're doing something correctly. It seems like you have a workflow that works for you, however it seems very handsy to me. Just so I'm clear, when you make this statement: &gt; Sometimes I rob mappings from one, lesser-used plugin and give them to another. Sometimes I trade mappings around. Are you saying that you are modifying the plugin itself? Or, are you making the modifications in your vimrc? I ask because the former, editting each plugin, is very much overkill. Doing the latter, editing your own vimrc, is what I would consider correct. By editing your configuration to remove, replace, create mappings, etc you're not needlessly modifying a project and potentially creating conflicts for yourself. For me, I'm not too concerned that some plugin is going to break or create a new feature. I suppose the key difference is that I, currently, use 24 plugins (a few of those are just colorschemes). So, Vundle works perfectly. If there were to be an issue introduced into some plugin (which I haven't really encountered), then I would create an issue (possibly a pull request) with the project on github.
Alright I figured as much. How often would you guess that websites don't mind webscraping? I want to do some myself and don't think it's *too* unethical, but I imagine that 99% of them don't like it. After all, they're basically having their data "stolen". I'm trying to think of circumstances when it would be legit. Not judgmental, I'm really curios. Thanks so much for your insight.
Any other debugging is bullshit -- just stop execution and give me a shell.
Hey, since we're on the subject of ML tutorials, I was hoping you could give me some advice on a project I am planning. I am trying to create an algorithm that outputs "GOOD" or "BAD" based on multiple variables, let's say X, Y and Z. I can go through and tag a few hundred sets of various combinations of variables for [X, Y, Z] as GOOD or BAD and put them into a CSV file. My question is how do I go from a table of ’[[X,Y,Z,GOOD], [X,Y,Z,BAD]]’ to ’[X,Y,Z] -&gt; GOOD’
Thanks for the long, thoughtful reply. Another important difference i should have mentioned is that i don't version my .vim directory. Instead I have all my dotfiles in a dotfile/ directory and have a simple install script that just creates the necessary symlinks. It just hasn't been my experience to have a plugin wreck havok on my setup, so it hasn't been a concern. I was a hold out on Vundle for the longest time, but even when i used pathogen, my setup was similar.
Is this have to do with investing?
Not quite, product pricing.
Don't worry about it yet to be honest, just use Python's IDLE until one day you have a craving to want to move faster.
The debugger in PyCharm is the best I have ever used for any language. It's... it's like magic.
&gt; You want to arbitrarily not follow mapping (not implement keys, values or items, even though they exist for free) but be able to serialize it? Yeah, basically. Really, I want to be able to choose which branch in the serializer my object will follow. At a high level, somewhere a serializer looks like this. if obj is like a Mapping?: return convertMapping(obj) elif obj is like a String?: return convertString(obj) elif obj is like a Iterable?: return convertIterable(obj) else: return convertPrimitive(obj) So, the big question is how to actually answer "obj is like a Mapping?". (When I say Mapping I don't mean the ABC Mapping. I just mean the general abstract Mapping Data Type.) In Python, that question is answered by `isinstance(obj, Mapping)` where Mapping is the ABC. As a Developer, I have the ability to make my class inherit from Mapping, so I can control which branch obj will go down. Woohoo!!! But this kind of smells. In Python, we're all about Duck-Typing and EAFP. Anytime logic *requires* the type of an object or inheritance from a particular class we're departing from what makes Python so awesome. This makes me wonder if there's a better way to answer "obj is like a Mapping?". This is why I was asking if anybody else had better ways to do it. I hadn't been able to find anything better online, so I took a stab at my own possible answer. That's where `actslike` comes in. So, to answer "obj is like a Mapping?", I ask if obj acts like a Mapping. I decided an object 'acts like' a Data Type if it inherits from the corresponding ABC or if it says that it acts like a compatible ABC (see the original question for more). This way the logic in the serializer is switched from focusing on inheritance to the Data Type in question. Inheritance may still be part of the logic, but it's no longer the focus. &gt; But you can't serialize because items isn't implemented? So you've come up with some other way? But what if iter isn't implemented? If you're going to break from abc, what interface can you expect to be there? This is a potential pitfall. Just because `actslike(obj, Mapping)` returns True doesn't mean there won't be errors. But this doesn't feel like a big deal to me, because we're back in standard EAFP territory. This is exactly the same as checking `hasattr(obj, '__iter__')` and then looping. Just because `hasattr(obj, '__iter__')` returns True doesn't mean the `__iter__` method returns a proper iterator. Instead both pieces of code throw errors that explain exactly what the developer implemented wrongly. PS: Thanks for chiming in. I feel like I'm doing an awful job of explaining so thanks for wading through.
You don't pylint on write? That's helped really clean up my act, plus it finds all the stupid syntax errors. What errors are you trying to ignore that make you want to turn that off, or why did you? I also bound it to ctrl-p-ctrl-p so I can check quickly.
For stable repr, you need to sort. Also, be sure to handle `__slots__`.
Cool man. Thanks a lot for. :)
The way to avoid this is: * Don't try to install newer versions of Foo on old systems. * Allow to coinstall new and old versions of Foo's controller, so that at least *one* of them can talk to every client.
yes, both are 3.8.7.1
I've done this in seaborn before fairly easily. Colormaps are one of the less discussed awesome features of seaborn. seaborn.color_palette('RdBu_d') maybe? or coolwarm_d? The d makes it "dark" which I think makes the transition go through black instead of white... this is all from memory on mobile, so sorry if I missed something.
I was under the impression that system Vim already was compiled with +python...? Perhaps I'm confusing it with El Capitan though or something. 
In the future you might want to try /r/learnpython for these problems. Anyway, [I was able to grab the table using the code here (I've included the html for the table too).](https://gist.github.com/anonymous/53a51b8baf788a44ec31) The only difference I can see - besides me using requests - is you use "class_" in your soup.find statement, while i use " 'class' " (notice quotes around class). 
Oh, alright. It takes at most a second on my machines so I let it do its thing.
You must really hate rebase squashing, then. :)
Yup, thats the hard way. Easy way is PyCharm debugger.
I recommend that you upgrade BeautifulSoup to the latest version and [try different parsers](http://www.crummy.com/software/BeautifulSoup/bs4/doc/#specifying-the-parser-to-use). It appears from your picture that it isn't cleanly parsing the html as it shouldn't be wrapping the date in an opening/closing break tag (the latter doesn't exist).
The best way to do that is to parse the ASN1 structure using PyASN1 http://pyasn1.sourceforge.net/. However, you can take a shortcut in the form of M2Crypto or PyCA Cryptography - these are high level libraries that do a lot of crypto heavy-lifting, and they also include primitives related to parsing certificate data.
You can define your own such a diverging colormap: import matplotlib.pyplot as plt from matplotlib.colors import LinearSegmentedColormap import numpy as np def display_cmap(cmap): plt.imshow(np.linspace(0, 100, 256)[None, :], aspect=25, interpolation='nearest', cmap=cmap) plt.axis('off') basic_cols=['#75b765', '#808080', '#ffd700'] my_cmap=LinearSegmentedColormap.from_list('mycmap', basic_cols) display_cmap(my_cmap)
You might like [Syntastic](https://github.com/scrooloose/syntastic), which is also capable of reporting flake8 errors on save. I personally don't use python-mode, primarily because I found that rope tends to hang up my vim session (yes I know I can disable it, but I get away better with jedi-vim and syntastic).
you can, but still jedi-vim doesn't work really well with Python3, and its completion isn't as good as anaconda-mode, like with WTForms, so..yeah, long live spacemacs :)
Most people recommend Python 3 these days. There is a good discussion about it over in /r/learnpython where these sort of questions belong.
I know it's not a fair comparison but you are absolutely right. I have been using vim for few years, you can spend months and years turning on all the python switch in vim, but in PyCharm python is the 1st class citizen, from auto-completion, code navigation, refactoring, debugging, remote development, code inspection, etc. I've tried Jedi-vim, YCM, and many other python plugins &amp; workflow for vim, and they failed me, one way or another, and there are just so many things I have to deal with once I started changing my machines (clipboard, colors, etc). Take for example debugging, in vim to set a breakpoint I need to create a mapping to inject ipdb on the desired line, it used to seems fine but now I realize I've cluttered the code with irrelevant call, and what if I inject a few more across different files and want to see where they are after I finished debugging? That's another task and remapping to do. In PyCharm, debugging is already there, you can toggle the line and that's it, you can see the list of breakpoints, when it hits it shows you the items in the context (variables and all), along with their values, in the editor it shows you the parameters being passed into the functions at runtime, and you can still have console access among many other things during debugging. Vim is still a powerful editor and I still use it a lot, but only for quick editing on the server. It's true you can't do all the vim powerful operations in PyCharm, even with PyCharm's IdeaVIM, it's just not the same, but that's okay compared to the stuff PyCharm brings to your python development.
Pycharm has a pretty good vim mode as well. I can't wait until it can be integrated with neovim so It won't just be a vim emulator but an actual vim editor inside PyCharm.
I'd suggest at least knowing how to open a file, move around and save/close it in vim. Otherwise one day you will find yourself stuck in vim and can't escape (like me with emacs).
Learning Python in a dumb text editor will teach you more about Python and how it works under the covers. But developing with the best tools available will make you a better developer. Being proficient in vim is a great skill to have though.
This is pretty cool, but what is the use case for this? I am guessing this was more important when github did not support rendering ipynbs.
For my part, I want to write some training supports in a plain-text format (ReST or Markdown) and have the possibility to convert this content to HMTL presentation (via pandoc &amp; reveal.js), printable support in PDF and convert this content to a notebook to quickly run some examples. Moreover, I think I could automatically check if my code snippets examples run without errors. By the way, Github has already supported ipynb files. See https://github.com/jupyter/notebook/blob/master/docs/source/examples/Notebook/Examples%20and%20Tutorials%20Index.ipynb for instance. But, well, sometimes it does not work (and I don't know why but I suspect that there is some JavaScript code inside the notebook).
It might be cool to have some kind of simple presentation tools baked in with ipython notebook. Notebook extensions already has some pretty cool things... like you can hide the output fields. You can even collapse the code cells. I like to sometimes create documents where I can hide the code blocks and show only the markdown and the output cells containing the plots (or tables, etc). Also, I know github supports ipynbs. That's what I meant when I said... "this was more important when github did not support rendering ipynbs"
Thanks!
This was helpful when I started out: http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/
I must say this article made a believer out of me for Vim. Just spent the last 4 hours playing with settings &amp; plugins!
Any problems with python-mode and vim-jedi? vim-jedi writes on its website that there are problems. I wonder if they are still present.
&gt; Python's updates are always better than the previous version be careful with that sort of thinking
If you are new, the ovious choice is python3.5.
Yeah, I really like python-mode too. But its syntax checking is busted for python 3 for me (on debian). After seeing the first 'yield from' it gives up. 
Luxury! I convert all my text to hex notation in my head, and dd it directly to /dev/sda 
Thanks everyone.
$ brew install vim --with-python3 Unless your Mac is too old to support [Homebrew](http://brew.sh) you should strongly consider it. 
Manjaro with pacman / octopi
I've just moved over to Mint, how's Manjaro?
Thanks! I'll give that a shot!
This is my current setup, and it's seriously lacking (and often buggy)
I've went for cinnamon, but I might give manjaro a go. I'm running on parallels at the moment. Will probably dual boot when I've decided which way I want to go. 
i was hoping for something less, code like. Is this intended for journalists who are beginner/medium python coders? I don't expect any journalists I work with to be able to understand the example code there. 
[`agate.preview`][1] module seems a jam. It would be great if it’s separated to a standalone package. [1]: https://github.com/onyxfish/agate/blob/master/agate/preview.py
When would 3. actually matter? If you think they're keywords then why would you ever try to assign to them? Item 5. is just not understanding how programming works. There are very few languages that have immutability by default, Python is in the majority of languages that behave this way. Item 6. is because of deprecated syntax. Item 9. is not knowing the difference between integers and floats, and this is only relevant in Python 2, in Python 3 the `/` operator defaults to floating point division, while `//` is integer division. Item 10. is incorrect, the final output should be `3 5 3`, not `3 2 3`.
Maybe since 3.3, I think everyone agrees that 3.0/3.1/3.2 were pretty bad.
When I started using python, it was already up to 3.4, so I didn't get around those. What 3.0 - 3.2 did wrong?
I have written the code, but it is too large to fit in the Reddit comment box.
Since I saw a similar article a few weeks ago on how to pimp my vim, I've switch to vim most of the time, with Pycharm for debugging. If there were some way of debugging inside vim I would use that. I'm just more productive using vim. I can move around quicker, find files quicker, commit quicker. If I want vim keybindings in Pycharm (which is what I used up until a few weeks ago), then there's some weird quirks and there's sometimes issues with Pycharm's keybindings. Plus, there's something to be said for consistency. Pycharm is great if you're working on a project that's exclusively Python. But recently I've been working on a project that involves Arduino code, Python, and now we've actually swapped Python for node. If I'm editing in vim, then editing different documents is a seamless experience, which I don't think should be underestimated.
Somebody correct me if I'm wrong, but Python's early versions didn't have booleans at all. They were later added as a subtype of `int`. According to [this](https://docs.python.org/2/library/functions.html#bool), bool() as a function was added in 2.2.1. That's probably at least part of the reason why they didn't become keywords until Python 3.
It looks like you can create your own colormaps: http://matplotlib.org/api/colors_api.html#matplotlib.colors.Colormap Look at linearSegmentedColorMap. Then you can use matplotlib.cm.set_cmap to select it. 
Wait, number 5 has nothing to do with immutability, and everything to do with shallow vs deep copying: &gt;&gt;&gt; l1 = [] &gt;&gt;&gt; l2 = l1[:] &gt;&gt;&gt; l2.append(1) &gt;&gt;&gt; print(l1) [] The fact the `list` has an `append` function implies pretty strongly that lists are mutable. I am not going to go deeply into it at the moment, but I believe `tuple` is an immutable object, in Python.
Wait, isn't [False a keyword](https://docs.python.org/2/library/stdtypes.html)?
&gt; Is this intended for journalists who are beginner/medium python coders? Yes. It's also intended to provide a good entrypoint for beginners who already have some familiarity with other forms of analysis. (Excel, SQL, etc.)
What confused me quite a lot during the registration process is that emergency contact information was mandatory. Is this common for conferences in the US? Hadn't noticed that before.
 def foo(a=[]): a.append(5) return a
Russian desktop background roulette, to be specific ;)
Python 3 still has the `//` operator to force integer division, but for the vast majority of the use of Python it makes sense to divide like a mathematician, not a computer.
Item 7 is missing the whole story. I suspect the author knows, because 257 is a peculiarly specific value for his example. In fact, the `is` operator in Python returns `True` for equal integer values within a certain range (-5 to 256), [because Python caches these small integers for reuse as needed instead of creating new ones](https://docs.python.org/2/c-api/int.html#c.PyInt_FromLong). Of course, if anything that inconsistency is only all the more reason not to use `==` and `is` interchangeably.
Why use python or SAS at all? I'm certain that oracle has a way to export an entire table to a csv file. You then convert that csv to HDF5, which was pretty much written for this sort of thing. Here is a good SO thread about [working with large dataframes in pandas using hdf5](http://stackoverflow.com/questions/14262433/large-data-work-flows-using-pandas). 
I could see 3 happening maybe if you do a comparison like "if True == condition" but then typo the double equals into a single. But that's the only case I can think of, other than s9meone playing a prank on you
It says it scales up to "billions of nodes". However that's only true for select queries. If you insert a new node at the bottom of a tree that has a billion nodes where each node only has one child, it also has to add a billion nodes to the ancestors table. But most of the time in implementations for hierarchical data in relational databases one has to trade-off different aspects of the algorithm for performance depending on what method was used for the implementation. 
I would install the oracle command line sqlplus and run a query similar to this one you can find [here](http://dba.stackexchange.com/questions/41487/exporting-30-million-rows-to-csv). You can change the delimiters, etc. to suit your needs. You can even load this into a sql script so that you can re-run it whenever you need. 
figuring out how to run a flask app inside of lambda is a longer term goal of this project. Django would be a bit further out. 
All good points you bring up here. Not sure I care for Pathogen, but that's the beauty of VIM, you can do as you like. In terms of converting... wasn't really my intention to convert anybody. More to show at least one way of setting things up so it can be a very efficient and fun coding environment to use.
have you tried? let g:jedi#force_py_version = 3 Does that not give you what your looking for?
I think all the `__future__` imports are well worth it. It helps ensure your py2 code is compatible with py3 (as long as you also do your imports for both)
how about switching to a new keyboard... Kenisis Advantage Pro (http://www.kinesis-ergo.com/shop/advantage-pro-for-pc-mac/) has most of those little pinky keys (accept esc) positioned to be hit with your thumb. 
It does sort of because in Python all mutable objects are treated as references, and all immutable objects treated as values.
All I want is to be able to push a commit and override/ignore hooks.
Nice! I Iike the new indicator feature in the merge function.
no 7.3 is enough. We will correct the typo.
For anyone wondering what the above is, it's an example of a list being set as a default argument. Because this list is only initialized once and lives on in the function object, it means that the same list object is used over and over again when you call the function. The way to avoid this is set your default argument to None and then adapt it if nothing is passed in by the user: def foo(a=None): if a is None: a = [] a.append(5) return a
Braces. Nice. 
&gt; Item 6. is because of deprecated syntax. Until it's removed and long gone, it's still useful to understand what's going on. It's very easy to unintentionally write an `except` clause in the deprecated syntax while thinking you're doing it the correct way.
That's right, the deeper you are inside the tree hierarchy, the slower insertion speed becomes. If you always insert at the same depth, insertion speed should stay roughly the same. Select queries should always be fast.
I have YouCompleteMe installed, but it's pretty lacking to say the least. The only reason why I still have PyCharm installed is for it's usages discovery and refactoring capabilities. If I can get it working the same way with vim or emacs with evil mode I'd switch in an instant.
Yup, I agree and i feel your pain. I've unsuccessfully tried to quit pymode in the past, but then i end up with either a lot customizations in my vimrc (like in the article) or with a lot of plugins that don't accomplish the job. The more responses i read on the topic, the idea above from commenter suggesting a new python-oriented Vim plugin is sounding more and more tantalizing.
What is the pythonic way of dealing with #2 in Python 2?? I trip up on it often and don't really know.
serious question here, for anybody that wants to chime in. 1. How often do you actually use a debugger? 2. In what situations? 3. Do you practice Test Driven Development?
 &gt;&gt;&gt;i=[1,2,3] def print_i(): print i [1,2,3] def modify_i(): global i i=i+[4,5] [1, 2, 3, 4, 5]
To be more precise, CPython caches those integers. 
It's not that nested functions are bad programming practice, just that (1) they have complications and implications (particularly, [closure](https://en.wikipedia.org/wiki/Closure_(computer_programming)) that can be difficult to cover properly in an introductory course; and (2) they make it easy to avoid learning to use function parameters and return values well, by using the local variables of outer functions as global-like state. It's the same kind of pedagogical restriction as "don't use global variables", except that nested functions are not quite as prone to misuse as globals are. They're definitely worth knowing and learning about, though, so if you feel confident with non-nested functions, you might search the web for something like "python nested function tutorial" to see some examples and get some practice with them.
/r/learnpython
Essentially everyone uses 4. So when you collaborate with someone else they will open your file and it has 2 spaces and they will have to either change the file to 4 space or continue writing in the unusual 2 space, which is annoying. Consistency is important here
I wouldn't beat yourself up. Most of us here will be addicted to Google or StackOverflow. Learning extra is always good, but do it because you want to, not because you feel it is expected. They hired you didn't they? There are no set things you should know to be considered a junior developer or developer. You might be totally fantastic in pumping out a great PyQT desktop app, but then go for a Django job and, well, you might suck. This is because the skill sets vary. It's all about the task at hand. Sure, knowing the basics help. But the most important thing I think is to know where you make mistakes and learning from it. Being humble and admitting you don't know it all, but are keen to learn. As for future jobs (not sure you want to keep busy with that right now), it all depends on the job. But if you want to be ahead, even just a little, I would go looking through different job posts and see which skills come up over and over again, and really know those. That way you identify which skills are popular. But first and foremost, be ready to learn, be humble, and acknowledge that you don't know it all. That's fine, that's being a junior
...sure because an immutable object can't be changed so any references to it are going to go to the same object and any "changes" must by definition be "deep copies". I guess "nothing to do with immutability" is an overstatement, but I still feel like the basic point is shallow/deep copies and mutability/immutability is an odd subset/edge case. I'm not sure, I think you meant '...all *mutable* objects are treated as references...'. I guess it's not clear to me though, off-hand, what the difference would be for treating all immutable objects as references versus treating all immutable objects as values. You can't "copy" immutable object X into Y and then modify Y without making a completely new object Y'.
Yup, going to try that out tonight. But right now I'm using Emacs with evil mode and prelude installed. Let's see how this goes. 
Nice, I just got emacs installed with evil-mode this morning, but I probably won't get much of a chance to play around with it today. What exactly does Prelude do? I looked in their repo and they say it "enhances Emacs", but they don't really explain how.
That's not exactly it - libsaas has quite nice pythonic wrappers around popular SaaS APIs, while we built devourer to deal with much less common service providers, where we need a custom set of methods and oftentimes different handling of response - that's why we added the ability to override callback per method (actually you can override pre- and post-method handling and the call itself on a per-method basis).
That's an area with a lot of different companies who do a lot of different things. I have had a great interview with Google, also a Silicon Valley company, also with HP. But both those companies were more interested in my understanding of basic Python, OOP and Git
A function should only be nested if there is a genuine reason why it cannot be in the module scope. Nested functions have a lot of implications so your code will become confusing to other programmers (and harder to reuse as half the logic cannot be accessed). Note that 4 space indentation is probably the most universal programming convention to ever exist. Almost every programming language in use uses 4 space indentation as the standard. That being said, Google actually uses 2 space indentation in python ( https://code.google.com/p/soc/wiki/PythonStyleGuide ). It is speculated that the reason for that choice is strict enforcement of the PEP8 80 character line limit. 
yes, I was counting None as a primitive, though I realize that you're technically correct that None is actually a singleton instance of the NoneType class. 
Ty
I don't see any PostgreSQL specific functionality either.
&gt; an unavoidable consequence of allowing functions to be defined with default values for keyword arguments. So the rationale is "because we don't want to add complexity to the default arguments interpretation process". Clearly this is avoidable from a specification point of view.
Its a reference to[ Fermat's Last Theorem.](https://en.wikipedia.org/wiki/Fermat%27s_Last_Theorem)
You want a cloud platform....look at Cloud Foundry or OpenShift.
Sweet. I just used this setup to create a script which will populate my vimrc for making transitioning to new machines so much easier. I hate dealing with new IDEs consistently so almost always jump to VIM.
Something like this: import csv import cx_Oracle db = 'username/password@//hostname:1521/DBNAME' ora_conn = cx_Oracle.connect(db) cur = ora_conn.cursor() cur.arraysize = 5000 for date in dates: table_name = 'table' sql = "select * from {0}".format(table_name) cur.execute(sql) filename = '%s.csv' % (table_name) with open(filename, 'wb') as fout: writer = csv.writer(fout) #writer.writerow([ i[0] for i in cur.description ]) # heading row for row_data in cur: writer.writerow(row_data) cur.close() ora_conn.close()
If you're doing `True == my_bool` then you have bigger problems then nasty bugs. Comparing a boolean to a boolean is a sign that you don't understand booleans. Just `x = my_bool` is equivalent.
It can actually be useful, if you look at the source for `OrderedDict` (at least for 2.7, I believe there was a module added in one of the 3.X versions that helps with this) you can use a dictionary to keep up with whether you're trying to convert a cyclic data structure to a string and terminate the recursion.
I'm lucky enough to only have to program for 3. 2 is completely deprecated in our environment.
interesting. I've done similar things with memoizing recursive call results in default args, but I've always done so using scalar values only never with a dictionary. keyword args already get packed and unpacked as a dictionary anyway so I don't see the value in using a dict as a default value instead of just adding more kwargs for each key you would put in that dict anyway.
1. Very often 2. Immediately if error is not obvious as well as to inspect newly written code line by line to verify correctness 3. Somewhat. I'm solving my own problems so tests aren't that extensive. Besides fact that tests pass means little even in big software with extensive tests..
betTeR ThaN ranDOm CAsE 
Looks nice!
Really cool. Looked to see if it used official Lego colors and saw that is on the todo list :)
You can use [pyx509](https://github.com/hiviah/pyx509) for certificate parsing and getting the CN. Look at the x509_parse.py sample script. It takes DER-encoded certificate as input. One quick and dirty way to do SSL/TLS handshake and get certificate is [here](https://github.com/hiviah/perspectives-observatory/blob/master/ssl_scan_sock.py). Though AFAIK pycrypto or m2crypto would have better ways. PyCURL could extract the certificate with some custom patch.
Did it work?
I decided the keureg had too many buttons and those buttons were not mobile enough. https://youtu.be/CNgnR9K7yB8
Look at the stptime function in the time or datetime module. For example, and from the Python docs: &gt;&gt;&gt; # Using datetime.strptime() &gt;&gt;&gt; import datetime &gt;&gt;&gt; dt = datetime.strptime("21/11/06 16:30", "%d/%m/%y %H:%M") &gt;&gt;&gt; dt datetime.datetime(2006, 11, 21, 16, 30) Google for more. Also, ask on r/learnpython.
Good timing on this: https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/
I've been able to manage a profit in each of the past 5 season. Since 2011, for each season I've finished (after ~500 bets each season) +127.5% in 2011, +21.4% in 2012, +13.9% in 2013, +17.4% in 2014, +49.9% in 2015.
Awesome, congrats!!
I added an issue in github, but I'd really like to have it try to fit real lego pieces (bigger than 1x1) to compose the picture (this would only make sense if the color palette was limited, otherwise every 1x1 square could likely be a different color). 
You should consider adding some screenshots to your read me!
If you really have to mutate for memory use or performance reasons, then see the answer by /u/hbweb500. However you should avoid mutating unless necessary. It's generally better to assign a new value. def twiddle(x): return x + [4] x = [1, 2, 3, 4] new_x = twiddle(x) This avoids a lot of bugs that arise due to confusion between mutable vs immutable arguments.
If you're not using stdin/input you can do it pretty neat inside vim instead of externally with: %pyfile % Of course that depends on which `+python[3]` is compiledin.
This could be useful https://github.com/pelson/conda-execute
I've got this [part1](https://i.imgur.com/bnCpU8G.jpg) [part2](https://i.imgur.com/UVWuJlt.png)
Five passes, using a lego ad of Mona Lisa https://imgur.com/a/lfQ97 edit: [did another](http://imgur.com/a/9Nloi) script: import legofy for n in range(0,6): path = '/Users/foo/Desktop/' pic = 'sonofman.png' legos = 'lego_'*n legofy.main(path+legos+pic, '/Users/foo/Desktop/brick.png')`
I'm sorry but this looks like the most stupid shit ever: it pixelates an image and applies a texture over it... 
Ha good point, I was trying to come up with an example but it was indeed too contrived. I guess u/bheklilr is correct.
This is a pattern on a picture, in which Legos composed the picture, from above. I think a solution I would have preferred would be to break down the image's fields in rectangles that resembled the ratios of Legos (for me, I think side view, not top down). Reduce the colors to fit an "actual" lego pallet - eg, one green, one yellow, etc., then fill the picture's rectangles accordingly. You could even use real Lego colors!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
I'll do that!
Cool! I had to filddle with it in order to produce different "block resolutions". [Starry Night](http://i.imgur.com/T0iVyWA.jpg) 
Neat, I used to create this effect in photoshop for random profile pictures.
Interesting, I wonder why they get progressively darker?
Every Lego pin adds a little bit more shadow than highlights. After 4-5 passes the shadows pile up and darken the image.
legofy/bricks/brick.png is 30x30
MySQL
Are you just pointing out something that someone may have never done, or are you making a point and/or implying something irondust said was wrong? 
It's pretty cool, thanks! I also tried to manipulate the "size" of the brick and you can easily get some pretty neat results if you change the size of the *brick.png*, then apply those changes in the *main* function of *legofy/__init__.py* and also play a bit with the scale. That way you can achieve less "pixelish" look.
&gt; any "changes" must by definition be "deep copies" This sentence is confusing to me. If you "change" an immutable object you are assigning it to a new value. Not "deep copying" it. &gt; I think you meant '...all mutable objects are treated as references...'. Mutable and immutable objects are references
Got it.
I'm so glad that our code conventions don't allow "humor" in the code comments. It gets old really quick.
Good luck getting all those shades of colors.
Very nice! I had a look at the source code and was surprised to see that almost everything is included in the legofy/__init__.py file. I thought this file was supposed to contain the bare minimum? Anyone has an opinion on that?
I think I've seen more warnings about not doing it than times I've actually seen it at this point. Which I guess means that the warnings are working, but seriously...
Yeah, that's good. I'll keep that in mind if I ever migrate.
I use [this installer by Cream project](http://sourceforge.net/projects/cream/files/Vim/)
From the wheels site's list of advantages: &gt; 3. Installation of a C extension does not require a compiler on Windows or OS X. Shut up and take my money! :)
If they wanted to add more than one item, but in that case they could just do `x[2].extend([5, 6, 7])`.
It's a cool idea. I recommend looking into using [pokéapi](http://pokeapi.co) for this sort of stuff, it even has a [sprite API](http://pokeapi.co/docs/#sprites).
It's obviously not homework, it is a best practices question. Can you do something about the link, it doesn't stand out. The font-weight obscures the link color. It is way too easy to miss.
This would actually be an interesting algorithmic problem. You can start from the 1x1 all colour solution and then approximate it with a palette and certain blocks.
way to duplicate bro 
Whatever it's opensource.com but you can get visual studio 2015 for free. so why not include it? It's a pretty sweet python IDE.
If you can share your Git repository??
I wish pypy3 was more up to speed with cpython. I donated to pypy several times already and I encourage everyone to shell some $$ to py3 effort: http://pypy.org/py3donate.html
However, we're saddled with it for the foreseeable future. At least in CPython. Even PyPy implements something like it, at least to my understanding. 
Can you please help me with the code?? Thanks!!
The picture in question: * Original: 2560 x 1600 px * New: 2541 x 1596 px, **121 x 76 bricks** * Original brick: 30 x 30 px * Scaled brick: 21 x 21 px (scale factor 0.7) So, 9196 bricks in total with 8938 *unique* shades The different "brick resolutions" are achieved by scaling the individual brick's resolution and filling the original size with as many as possible, and crudely cropping the remainder 
The read_sql function in Pandas has a argument called chunksize. If you use this argument it will return an iterator instead of the entire dataset. Then you can loop through the results and save each chunk to your file. 
Made your suggested changes!
I have thought about donating to pypy3, but every time these posts come up, someone comes here says that no one wants it, and it's not a priority... So, I always balk at the idea, as I kind of feel it would go to waste.
It does exactly what the creator wanted it to do? What's your problem with what other people want.
My friend made this! He's 15 and probably a better programmer than my college educated ass.
Why don't you try [conda environments](http://conda.pydata.org/docs/using/envs.html) that come with the [conda distribution](https://www.continuum.io/downloads). For your use case, you probably would also want to look into binstar (also from Continuum Analytics), that they recently renamed [anaconda cloud](https://anaconda.org). Binstar will give you a hosted service to package and deploy your own packages and exactly those version you need to go along with them for all your environments. I found it to be an big improvement and a pretty comprehensive workflow.
svn revert
Make it n-dimensional
Yeah.. Actually I would.
Don't get me wrong, I'd rather that you you be honest and tell us what is going on, and why you guys are more invested into improving python 2 support, rather than 3. But, still. Not much seems to happen on the 3 front. The latest pypy3 release was a year ago. Meanwhile, pypy had a few new versions. I guess I should donate just to increase the numbers for people interested in pypy3, but I'd find it frustrating to donate, and then see nothing come out of it... BTW, I guess I sound overly critical, but I still appreciate what you guys are doing. And I do understand why you focus on what you do.
Came here to suggest conda environments, they're pretty awesome.
I would not expect you to understand this project. It's for people who are happy, unlike you.
Your interpreter crashes when trying to display characters that have been input, a simple example being: ,[.,] Your comma function stores a string where it should store the ASCII value of the input and you should only accept one byte per comma. You're missing out on being able to run fun programs like &gt;&gt;&gt;&gt;+&gt;+++&gt;+++&gt;&gt;&gt;&gt;&gt;+++[&gt;,+&gt;++++[&gt;++++&lt;-]&gt;[&lt;&lt;[-[-&gt;]]&gt;[&lt;]&gt;-]&lt;&lt;[&gt;+&gt;+&gt;&gt;+&gt;+[&lt;&lt;&lt;&lt;]&lt;+&gt;&gt;[+&lt;]&lt;[&gt;]&gt;+[[&gt;&gt;&gt;]&gt;&gt;+[&lt;&lt;&lt;&lt;]&gt;-]+&lt;+&gt;&gt;&gt;-[&lt;&lt;+[&gt;]&gt;&gt;+&lt;&lt;&lt;+&lt;+&lt;--------[&lt;&lt;-&lt;&lt;+[&gt;]&gt;+&lt;&lt;-&lt;&lt;-[&lt;&lt;&lt;+&lt;-[&gt;&gt;]&lt;-&lt;-&lt;&lt;&lt;-&lt;----[&lt;&lt;&lt;-&gt;&gt;&gt;&gt;+&lt;-[&lt;&lt;&lt;+[&gt;]&gt;+&lt;&lt;+&lt;-&lt;-[&lt;&lt;+&lt;-&lt;+[&gt;&gt;]&lt;+&lt;&lt;&lt;&lt;+&lt;-[&lt;&lt;-[&gt;]&gt;&gt;-&lt;&lt;&lt;-&lt;-&lt;-[&lt;&lt;&lt;+&lt;-[&gt;&gt;]&lt;+&lt;&lt;&lt;+&lt;+&lt;-[&lt;&lt;&lt;&lt;+[&gt;]&lt;-&lt;&lt;-[&lt;&lt;+[&gt;]&gt;&gt;-&lt;&lt;&lt;&lt;-&lt;-[&gt;&gt;&gt;&gt;&gt;+&lt;-&lt;&lt;&lt;+&lt;-[&gt;&gt;+&lt;&lt;-[&lt;&lt;-&lt;-[&gt;]&gt;+&lt;&lt;-&lt;-&lt;-[&lt;&lt;+&lt;+[&gt;]&lt;+&lt;+&lt;-[&gt;&gt;-&lt;-&lt;-[&lt;&lt;-[&gt;]&lt;+&lt;++++[&lt;--------&gt;-]++&lt;[&lt;&lt;+[&gt;]&gt;&gt;-&lt;-&lt;&lt;&lt;&lt;-[&lt;&lt;-&lt;&lt;-&gt;&gt;&gt;&gt;-[&lt;&lt;&lt;&lt;+[&gt;]&gt;+&lt;&lt;&lt;&lt;-[&lt;&lt;+&lt;&lt;-[&gt;&gt;]&lt;+&lt;&lt;&lt;&lt;&lt;-[&gt;&gt;&gt;&gt;-&lt;&lt;&lt;-&lt;-]]]]]]]]]]]]]]]]]]]]]]&gt;[&gt;[[[&lt;&lt;&lt;&lt;]&gt;+&gt;&gt;[&gt;&gt;&gt;&gt;&gt;]&lt;-]&lt;]&gt;&gt;&gt;+&gt;&gt;&gt;&gt;&gt;&gt;&gt;+&gt;]&lt;]&lt;[-]&lt;&lt;&lt;&lt;&lt;&lt;&lt;++&lt;+++&lt;+++[[&gt;]&gt;&gt;&gt;&gt;&gt;&gt;++++++++[&lt;&lt;++++&gt;++++++&gt;-]&lt;-&lt;&lt;[-[&lt;+&gt;&gt;.&lt;-]]&lt;&lt;&lt;&lt;[-[-[&gt;+&lt;-]&gt;]&gt;&gt;&gt;&gt;&gt;[.[&gt;]]&lt;&lt;[&lt;+&gt;-]&gt;&gt;&gt;[&lt;&lt;++[&lt;+&gt;--]&gt;&gt;-]&lt;&lt;[-&gt;+&lt;[&lt;++&gt;-]]&lt;&lt;&lt;[&lt;+&gt;-]&lt;&lt;&lt;&lt;]&gt;&gt;+&gt;&gt;&gt;--[&lt;+&gt;---]&lt;.&gt;&gt;[[-]&lt;&lt;]&lt;] Expected output is http://www.hevanet.com/cristofd/brainfuck/numwarp.png Some sample bf code that you can try running can be found at http://www.hevanet.com/cristofd/brainfuck/ I wrote my own brainfuck interpreter in python a few months ago, if you'd like to take a look at it - https://github.com/Wyvryn/brainfuck.py
1) Why do you have a donate button if you are telling people not to use it? (I should clarify as some people appear to be misreading: He says things like "it is a tough decision [to donate], there is no commercial incentive, we would prefer you to give time" which doesn't encourage people to donate money. However the developer appears to have responded and set the record straight.) 2) Python 2 is not going to be supported after 2020? Are you commited to continue to support pypy 2.x beyond that?
great thing :D over at /r/lego will surely appreciate this as well
A full 3.2 version came out of the donations, from zero python 3 support whatsoever. I don't think we're more invested in Python 2, most of the improvements benefit PyPy3 as well.
shades could be mapped to a limited palette - and neighboring exact/similar shades could be combined for less 1x1 bricks.
it depends. The bigger the project, the less that goes in an `__init__.py` file. Projects that are distributed as modules, but are smaller in scope, can pack their functionality into a single folder+file.
I've been working on this for a while to support some of my projects. I figured it may be of interest for usage or contribution by others also. It starts at the base with a pure-python ASN.1 parser and builds from there, using Security.framework on OS X, CNG on Windows and OpenSSL/LibreSSL on Linux/BSD for cryptography primitives. It uses FFI to interact with the shared system crypto libraries, rather than bundling (or linking at install time against) OpenSSL. This means there is no compiler necessary, and OS updates take care of patching vulnerabilities.
I do want python 3 support. I am fortunate enough to not have to care about python 2, so having pypy3 would be amazing.
This is the kind of situation for which a thing like [Snowdrift](https://snowdrift.coop/) would be useful.
Try zc.buildout http://www.buildout.org/en/latest/
A library and tool for generating .pex (Python EXecutable) files. https://github.com/pantsbuild/pex
Are you doing this to learn something? Because otherwise you'd be much better served by provisioning tools like Salt, Ansible, Chef, or Puppet. Heck, Fabric would be good if you're still thinking of going this route.
Yeah I'm doing it for fun and learning. Next I'll be applying this to our network equipment. Which won't need the sudo commands so it's basically already there for that. We are planning on implementing chef this year or early next, but in the meantime I'd love to have a little fun at work and get this working. 
I should've mentioned I'm mainly talking about WSGI apps, shouldn't I?
Well, an image is really only suppose to be legofied once, I did it multiple times to see what would happen.
I used to think that pypy would be the answer for performance-critical code. Maybe write part of my code in pypy, and another part in CPython, depending on speed/compatibility constraints. Turns out, numba solved my performance problem. Now I don't see a *personal* need for pypy any more. But numba only solves numerical performance problems, so YMMV.
This doesn't show either way whether immutable objects are better thought of as references or values. The tuple could be thought of as a value containing a reference to the list [] that you just created. The C analogy would be: struct t { int a, b; int *c; } struct t x, y; x.a = 1; x.b = 2; x.c = calloc(10, sizeof(int)); // this copies the bytes from x to y y = x; // but this still changes y.c[0] to 3 x.c[0] = 3; // and this makes y.c[0] be 4 as well x.c[0] = 4; // but this only affects x.a, not y.a x.a = 5; Really though, as /u/knickum pointed out, I think the question is pretty much moot(able) since it's not even clear what the difference would be between reference/value immutable objects (since you actually *can't* change their values). 
Even if you only do it once, I'm just saying that it would be more elegant if the color picked for each brick was slightly brighter so that the average color of the brick remains the same as the one in the original picture.
I just wanted to share the idea here, more than this particular implementation. I often make tiny bug-fix commits on my personal projects, and then forget to change the version number, and then do "pip list" days later and can't figure out whether the installed version is the latest or not. Yet the idea to do something like this had never occurred to me before just now. I'm not sure I'm happy with the dependency on gitpython though. Perhaps a shell script calling git directly would do better.
Yeaaah… no. I'm not going deploy something this hackish to production. For Christ's sake, it's a solved problem in all other languages. How hard can it be?
&gt; Why don't you try conda environments that come with the conda distribution. Because I, if possible, don't want to depend on some weird-ass third-party distribution. What do I do if a python package isn't available in their repository, e.g.? 
If you're working with networking devices, Ansible is actually a good choice for this. Fabric is a close 2nd if you're really wanting code this out yourself. Honestly, to merely run a bash script in your home folder it's simple as: ssh example.com './script.sh' Thus writing this in bash would be simpler, (imo). e.g. for i in $(cat ips.txt) ; do ssh ${i} './script.sh' ; done I know you wanted python however sometimes it's best to just "keep it simple". In any event, happy hacking, I look forward to seeing your progress.
Yea
Don't over complicate things. Don't generalise too early. Don't build a plugin system at day 0.
Thank you, amended.
Thanks! Your suggestion is what led me to the answer: Not only is this how to give the arguments, but the ORDER of the arguments matters, too. (Who writes code like that?) Thanks again!
and you know for sure that conda solves his problems? have you seen his dependency list and compared it to packages distributed through conda?
Yea
Well, that's news to me.
Nice! Looking forward to giving it a good workout. 
I hope this doesn't come across too ignorant but how is this different than https://github.com/pyca/cryptography ?
Definitely look at fabric. Also I would recommend against using expect because its pretty fragile (its a good tool, but often not the right tool.)
That's what I'm trying to do avoid running a bash script on 40 machines one at a time. Plus I just want to have some fun with Python at work. Coworker and I wrote a few scripts and just wanting to automate them while we got some spare time. 
Add it to anaconda.org, think of this as "tagging" it for your app. Or, install the dependency with pip instead of conda. It isn't either or. I use conda for the hard stuff requiring difficult dependencies, then pip for most all python stuff. I just posted a docker image a day or so ago that makes this relatively easy. See my posts, on mobile currently. 
Creator here, thanks for spreading it around. Glad you like it :D
i am sorry, i am not familiar with "--user" option but you can have different virtualenv for every project. and install whatever packages needed inside them. env/bin/pip install ... did i get something wrong?
Someone did, fixing
Same here (mostly scientific stuff). Numba is incredible and I am quite surprised I don't see more buzz for it. It's so easy and painless. Basically writing C code with Python syntax.
Hey, didn't recognize your username immediately :p 
What did you expect it to do? Sorry it couldn't 3d print it for you or what ever extravagant thing you wanted, but it's just a little program.
No it does not
I'm planning to add this soon, watch out.
Skip virtualenv completely and run your app from a docker container with the deps installed inside it. 
What error are you getting when you try to run the command?
You might want to check this Web site for the unofficial python modules for Windows. The binaries for rpy2 is available on the web site. http://www.lfd.uci.edu/~gohlke/pythonlibs/ 
Why aren't you using SSH keys?
What I thought as well. 
Makes sense. In my experience, well-optimized Cython code can be nearly as fast as optimized C (because it's essentially writing C with Python syntax). PyPy could be very attractive if it's able to get competitive speeds without having to manually add optimizations. (the SIMD vectorization in PyPy has me excited!) Do y'all support popular scientific libraries like Numpy or Scikit?
Maybe you are consulting in the wrong places :) I work at SurveyMonkey.com and use python3 for many of our projects and any shared code across the company is required to be Python3. So there is definitely commercial interest. I know many companies around the bay area using Python3 as well.
It sounds like you might be better off with a full-fledged deployment system like Ansible. You can still call virtualenv/pip in your Ansible config to install Python modules, and have Ansible install any non-Python libraries you need as well.
Guess you could do something like https://docs.python.org/2.5/ext/callingPython.html Then do https://nodejs.org/api/addons.html to create binds between python and node.js in C but it's a bit of an hairy solution. Guess you could do other ugly things like calling https://www.npmjs.com/package/exec exec on seperate python script files ^^. Also seems someone is already working on it https://www.npmjs.com/package/node-python
Hi! First of all you have to define a general class interface that all plugins should inherit. Which kind of functions/properties it is expected that all devices have? Than you have to define the main differencies between different devices in order to focus specific function/properties different plugins should define. The module "imp" will help you for sure. Finally, why are you using Flask? It could be difficult to manage the project structure, going mad between javascript/html/css/python... take a look at this https://github.com/dddomodossola/remi.
Is there at least a warning that gets generated when you trigger that behavior?
If it works for you, fine. If you share the code with others then they'll likely have issues with the organization.
I am completely satisfied at the moment with the combination of straight Python for anything not speed-critical, numpy for vectorisable stuff that is, cython for non-vectorisable stuff that is, and pyCUDA for anything highly parallelisable (and long-running enough to be worth the round trip to the GPU). And all running in the same interpreter (with cython and CUDA files separate but still called from Python) I suppose there's an intermediate regime for stuff that's parallelisable but has too much overhead for it to be worth sending the data to the GPU and back, and in that case running on 4 cores via numba would be useful, but honestly it doesn't come up much.
How does the Python integration work? Say for example I wanted to run some Python code that installs a few Python modules such as Requests and Amazon Boto, and yet use Electron and ReactJS to build the UI code, how would I do this? Presumably Rodeo installs Python too? 
I don't think anyone cares about shortening names. I imagine the code smell bit would come from using import ... as ... to impersonate modules. For example: import mathwizard as math In a situation where the original library was forked and replaced by mathwizard, and it should be backwards compatible. I often see this done with a try/except. Try importing the old one, then the new one. 
Why? All software design is copied to a greater or lesser extent from some other thing. I don't see you need to credit unless you are directly using their code, in which case of course you have an obligation. If however you are just building something better than something else, no credit due. Apple and Microsoft fought a major lawsuit on this topic a long time ago.
The example on the Numba website is a little difficult to follow, but the gist of it is that you split up your inputs (I like to use `numpy.array_split()`) and assign each chunk to a different Thread. It's relatively easy and quite powerful, although there is some overhead. My datasets are usually in the hundreds of thousands so I see a fairly significant boost from it.
Here's a Hello World app that shows how to set things up. I think you can follow this as a mini blueprint to get you started. https://www.fyears.org/2015/06/electron-as-gui-of-python-apps.html The author uses a Python (Flask) server to handle the app's logic and leans on Electron to display things in the UI. Find a few few Flask tutorials using requests, and you should be able to make your version of hello.py in no time. 
Hmmm. I was hoping for a more direct integration than calling the Python interpreter.
Both are valid. It's just a matter of preference.
STM?
I was kind of surprised that the rodeo article didn't cover this topic, since it isn't covered well in general and this is addressing python users. You can create a subprocess with nodejs, but I have had mixed success with the python process closing out correctly with my limited work with it. There is python-shell out there that even supports communication, but I couldn't get it working. I ended up using crossbar for the js to python communication. When starting the electron app, after the app.on('ready'), I got this to work: var child_process = require('child_process'); var child = child_process.spawn('/path/to/my/python/bin/python', ['/path/to/my/python/bin/crossbar', 'start', '--cbdir', '/path/to/the/crossbar/server/.crossbar']); What I never did figure out is a good way to package up python dependencies with the electron app, or if that is reasonable in the first place.
can you Python?? 
So a .us address is not valid?
I had the following in a ipython notebook. Its for PostgreSQL though it should be similar for Oracle # Based on https://media.readthedocs.org/pdf/odo/latest/odo.pdf from odo import odo, resource, discover, dshape PORT = "5432" LOGIN = "postgres_login" PASSWORD = "postgres_password" SERVER = "localhost" DATABASE = "my_database" TABLE = "my_table" DB_CONNECTION_STRING = 'postgresql://{LOGIN}:{PASSWORD}@{SERVER}/{DATABASE}::{TABLE}'.format(LOGIN=LOGIN, PASSWORD=PASSWORD, SERVER=SERVER, DATABASE=DATABASE, TABLE=TABLE) file_path = 'dump.csv' db_table_resource = resource(DB_CONNECTION_STRING) discover(db_table_resource) odo(DB_CONNECTION_STRING, file_path) #verify csv resource csv_resource = resource(file_path) discover(csv_resource) 
Whoever is downvoting you on this has never used the Python plugin for VS2015, it's awesome 
People love to hate Microsoft.
Why couldn't you just put the new files there and when the processes get recycled it loads the new stuff? 
Try this http://mazamascience.com/WorkingWithData/?p=168
http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python Also, /r/learnpython.
I feel like there is a surprising amount of editorialization in this sub.
That puts you legues ahead of me. I wasnt really looking to form a team more like fill a slot. Of i should have seen this as a possible outcome. I not looking to make anything large per se, but I would like to make a game thats a bit more complicated than I would normally make on my own
I'm sure, but not that I know of. I'm an engineer that programs (and runs a 200k+ lined program), so I can do it, but none of it's theoretical. Most of that code is laid out very well, but the GUI is...not. I'd start by watching this. It's a great talk. Less code = easier refactoring. https://www.youtube.com/watch?v=o9pEzgHorH0 In terms of the code that's laid out well, it's two main class. One class references &gt;270 sub-classes (that really need to be separate, so triangle, quad, tet, rod, etc.), but all are elements. I then use multiple inheritance to lay out the main classes' add/get/write methods. There's a lot of black magic you can do with that and dynamic variable passing, but honestly if it's easier to find things, so be it. I do something similar for the binary results processing. The GUI is ~10,000 lines (and more code for sub-menus) with a high degree of cross coupling, poorly organized file locations, unclear class names, files with the same class name as a class in a different file, deprecated but still functional code paths. That said it works really well. It's tested. It's robust. It's easy to add things and it's got a lot of features. GUI organization is a whole different beast of complexity. Ideally you have a function that does one thing and you do a more functional style (e.g. no classes) approach. If you need to store mass amounts of data (e.g. a 3D interactive GUI) put it in an object (my GUI doesn't really do that) and certainly don't have 5 different ways to store data based on the length of the tuple (I do that)...meh...legacy. I know what I need to do to fix it. Break coupling as much as possible using `@property`. Have ideally one way to interface with the persistent data (e.g. through a class) and error check the simple parameters that don't get called much (e.g. types, valid values for string flags). It's just time and sometimes you just gotta rewrite things. It's a lot of copy/paste, but you'll do 100x better the second time around. There are modules in that code base I've rewritten 6 times so far that were actually pretty great by attempt #2, but not quite there. The signs of a good code is one that does what you need it to do and let's you easily add features.
I'm also interested if you are in fact going to make a team. It would be a great chance to get my feet wet with group projects and source control. I'm still a beginner but I can google most anything I need to do.
[removed]
You can probably replace most of your Cython with numba. 
&gt; uses FFI to interact with the shared system crypto libraries awesome. see also: https://github.com/vbwagner/ctypescrypto
How do I get myself added on Slack group ? 
A module should contain functions relative to its name. You only need classes when you need to maintain state for the a specific instance of that object. I see too many classes that can be modules. Multiple classes in a module are fine providing they relate to the name of the module. Read about packages. Multiple modules in a package is very handy. When it comes to inheritance, ensure that your base classes are generic and slowly become more specific as the inheritance tree grows. Avoid multiple inheritance. Lean towards composition in this case instead.
/r/learnpython
/r/learnpython
As long as it makes sense, it is fine. If it is a small code base, say 2000-3000 lines of code, it is ok nevertheless. For bigger sizes, likely it is not. Keeping in mind that the java 1-class-1-file style is a bad idea either, you should subdivide your code in source files by logical area of competence. 
From: http://cx-oracle.sourceforge.net/ pip install cx_Oracle And if you do not have pip do: conda install pip Or download from here: https://pypi.python.org/pypi/cx_Oracle/5.2 You need to have Oracle client installed or Oracle instant client
Haha, xkcd styled plots are great!
I'm not going to comment on whether they're better or not but: - [plotly](https://plot.ly/python/) - [Bokeh](http://bokeh.pydata.org/en/latest/) - [Seaborn](http://stanford.edu/~mwaskom/software/seaborn/) - [Toyplot](https://toyplot.readthedocs.org/en/stable/) - [ggplot](http://ggplot.yhathq.com) - [pygal](http://www.pygal.org/en/latest/) - probably others that I don't know about Some of these are just wrappers around matplotlib but I'd argue they are still libraries in their own right. The problem I always have though is that matplotlib seems to be the only library with half-decent support for error bars.
&gt; GIT FTFY: GIL
/r/learnpython
http://pycoders.com/
For anyone who is interested, after giving it some thought I've decided just to build it all in JavaScript, no Python. Path of least resistance.
Python Weekly newsletter is also good: http://www.pythonweekly.com/
Yes, but still data selection is not possible with notebook mode enabled. Also i have tried it on multiple subplots and then it just stopped working. Multiple interactive plots are too heavy for some reason (guessing unoptimized js). Hopefully the matplotlib team will work on improving the notebook integration. 
Thanks, I regularly check Christoph Gohlke's site for binaries for Windows, however there is only rpy2 for Python 3.4 available and not Python 3.5.
Did they finally implement a "display the raw value of the pixel right below the cursor" for images? That is the one function which I always missed when I used it a few years ago.
What kind of gaming? What games do you play? Do you wanna make a new game or mods for exisiting games?
While I end up using browser based libraries for my presentations (mainly due to to interactive use), I use mpl all the time for data exploration, it's great to see many cool features in a single release: * Interactive OO usage * Working with labeled data like pandas DataFrames * Styles - Several new styles have been added, **including many styles from the Seaborn project**. * Square plots * Updated Figure.savefig() can now use figure’s dpi * Plot bar and barh with labels 
So this is a game I built for my research on popularity on Reddit. I'm fairly new to web developing but here are the details. - Flask + SQLAlchemy to power the back-end, Jinja2 to handle rendering templates and such (I'm sure all this stuff is standard). - Bootstrap to make things appear somewhat nice (this could definitely be improved but isn't bad right now in my opinion) - Javascript to tie everything together. - It runs on a Digital Ocean box, with gunicorn as an application runner and nginx as the web server. Code is open source. At the moment, things wont run right out of the box because I haven't included some config files (for security reasons) and don't have a good way to populate the database with posts yet. I'll add in those things in the coming weeks. In the mean time, you can take a look at it here: https://github.com/stoddardg/virality_prediction_game If you really want to run it, send me a PM and I'll be happy to help set up the missing parts. When I started off, I really knew nothing about Flask, or really anything about how to build a site (I was decently proficient in python but don't really consider myself a developer). I made extensive use of this tutorial: https://realpython.com/blog/python/flask-by-example-part-1-project-setup/ I have no experience with other frameworks but with that said, I'm pretty happy with how Flask works. 
With python 3.5 which just came out recently it won't be surprised to see rpy 3.5 coming out soon. It is usually updated very quickly. 
I personally would've used ssh keys to make it so I didn't need to enter a password.
Anyone having install issues under Windows? I seem to possibly be getting a false positive on _png.pyd being infected with a trojan. 
Seaborn is awesome, but it's definitely just a matplotlib wrapper. It's a might fine one though. 
This is surprisingly entertaining.
&gt; Was there ever any doubt about it's longevity? However, I heard from many people that they are looking for alternatives, and I am just happy that matplotlib itself made such a big leap in order to stay relevant not only as the lower-level plottling library for wrapper libraries. E.g., I received a book review the other day (I was mainly using matplotlib to visualize certain concepts): &gt; These plots are so 2003 [...] and the reviewer suggested ggplot and bokeh. What I like about matplotlib is it's great versatility and customizability (compared to other libraries); you can "plot" basically everything in matplotlib although it requires a decent amount of "tweaking" sometimes (take a heatmap with row and column dendograms as an example are "polishing" plots visually for publication). I still use matplotlib 90% of the time, and if I am not using matplotlib, I prefer wrappers such as seaborn. &gt; Could this be a (kind of tasteless) reference to the death of the original creator, John Hunter? I hope not... Sorry, I just realize that this was a pretty unfortunate headline. I truthfully didn't think about that when I posted it. The title was solely based on the reasons I mentioned above.
For time series plotting I prefer yhat's [ggplot]( http://blog.yhathq.com/posts/ggplot-for-python.html) . You can easily change the time interval x ticks. With MATPLOTLIB, you have to import yearlocator, monthlocator, weeklocator, daylocator, etc.
Why plugins? How do the devices connect to the web app? I usually think of plugins as adding additional functionality to an existing app that didn't exist before (like sublime text plugins, wordpress plugins, etc). I am not sure that is what you need here based on this brief description (interfacing with multiple devices, not all defined up front) A few things I am thinking about: One pattern could be basic polymorphism. Create an abstract interface class that defines the required functions, and each device would implement it's own sub-class. This creates tight coupling - might not be as good for a distributed system. Another could be API based. Have the web app present some functionality in the form of an API, and each device is responsible for managing it's own internal state and interacting with the API. I guess one other way could be some kind of shared message bus with a defined protocol. This is the most flexible, but will add some overhead in managing the bus and implementing the interfaces. Each of these methods have pro's and cons, so think about what is really needed before you jump. 
What's your go to browser-based? Are you talking about something like D3? Or maybe Bokeh? I've found that Seaborn is the king for data exploration because of the built-in functionality (factorplot is so easy and good). 
Bokeh is *ok*. However for some reason, a bar graph is really hard to do. Your options are: * Wrestle with the low level interface which doesn't provide a nice way of making bar graphs. The benefit here is easy customizability. * Use the high level charts interface, but wrestle with that to do customization.
Why can't you store your docker files with the project code?
What is your go to? I haven't explored that much. 
It's probably hard to top R, since it's almost exclusively for scientific programming and computation. On the other hand, python has rpy2 while R has rPython, so technically both have the exact same capabilities.
https://python-community-slack.herokuapp.com/ Sorry, I thought either link would work! This will bring you to this page to get an invite: http://i.imgur.com/5qxkhci.png
Has anyone heard of [pyqtgraph](http://pyqtgraph.org/)? Is it any good? It seems like its claim to fame is real-time plots.
You can use the "picker" in Matplotlib to return data points, and then write your own functions to redraw the chart in however methodology you want. I have a few programs that let me look at my data and select points across multiple charts (IE make selection in one, see the same data point in four other charts showing different attributes).
Hmm, there is as far as I know no default picker in matplotlib. To be sure, I just tried it with the Qt4Agg backend in matplotlib 1.4.3, and there is no option to select and view points by default. I know you can write one yourself, it's just that it would be nice if we had some simple tool by default.
It wouldn't surprise me if that distinction went to Fortran purely due to longevity
Friendly reminder to show us your config, please.
It's perfect if you need real-time plotting embedded in a Qt GUI. It could use some maintenance love, however. The creator has apparently been very busy and hasn't been able to address a growing pile of pull requests for some time now. I'm hoping he gives a couple people push access soon (he has mentioned that he is willing to do that).
Great. Let us know how it worked.
This is the documentation I referenced when I wrote mine. I'm using the default Backend on windows on 1.4.3 currently. http://matplotlib.org/users/event_handling.html Here's my specific code below. The Event returns the Index in the dataset plotted def makePlt(dataset,xKey,yKey,colorBy = None): import matplotlib.pyplot as plt fig = plt.figure() ax = fig.add_subplot(111) xs,ys = zip(*[[getattr(i,xKey),getattr(i,yKey)] for i in dataset]) #Finding the Color to plot the points as if colorBy: colors = [i.assignColor(colorBy) for i in dataset] else: colors = ['blue' for i in dataset] #Setting Tolerance for the Picker Function ax.scatter(xs, ys, c=colors, alpha = 0.6, picker=5) plt.xlabel(xKey) plt.ylabel(yKey) #The Part that Actually Runs the Picker fig.canvas.mpl_connect('pick_event',lambda event:onpick(event,dataset)) plt.show() def onpick(event,dataset): for i in event.ind: if dataset[i].color == 'green' or dataset[i].color == 'red': print dataset[i].filename Let me know if you have issues getting this to work, I've used it in conjunction with Tkinter in the past as well for some helpful data manipulation.
I don't see many Fortran projects in places like GitHub
He's been working on another project, meant to leverage Pyqtgraph's development and capabilities, and add better 3d graphics support. Vispy, I think. 
Yeah, as I said, I knew you can write one yourself, and I have done so before. It's just that it would have been nice with some simple version of this in the default toolbar.
Hi, I'm working on the bokeh charts interface at the moment and could always use some feedback. What do you find that you are missing the ability to customize on the high level interface? The idea with charts is that it doesn't exist on the javascript side and all it is doing is generating a Plot with glyphs. Whether you do option 1 or option 2, you have a plot of glyphs that you can go in and do whatever you want to before showing the plot. Btw, the thing that is really difficult about the bar chart is that it is a chart made up of bars, not rectangles. In other words, it isn't a graphics primitive, as with the rest of the glyphs.
&gt; Toyplot Never heard of toyplot, ~~it looks like a really nice alternative.~~. Just checked it out, toyplot.browser and toyplot.html are amazing! The resulting file is pretty small when compared to bokeh, [data export](https://toyplot.readthedocs.org/en/stable/interaction.html#data-export) is really interesting, [animation](https://toyplot.readthedocs.org/en/stable/tutorial.html?highlight=animation#animation) looks very easy to use, [same with the PyQt support](https://toyplot.readthedocs.org/en/stable/embedding.html?highlight=backends#pyqt-pyside), and [it supports rect, vlines, hlines](https://toyplot.readthedocs.org/en/stable/toyplot.axes.html). Not happy with it not supporting ipython qtconsole but I think I can do without it.
Yeah I get what you're saying. It feels like it wouldn't take much effort to go the extra little step and make it built in. Its also somewhat limited in the fact that once you zoom in you can't actually continue picking things
There are tons of open source scientific codes in Fortran, C, and C++. In fact, many Python numerical libraries are built on top of these for performance reasons. As others mentioned, many of these libraries pre-date the use of git and aren't on Github. One classical example are the codes on netlib, which go back decades...
&gt;&gt; alternatively, maintain separate repos for each microservice and publish built containers to a cloud registry. I do not quite understand what is the workflow with submodules approach. Right now I have a `docker-compose.yml` in root of a project which uses Dockerfile files in each microservice subfolder for building containers. Also it mounts each microservice subfolder via volumes into corresponding container. This allows me to change the code and see what happens immediately. Now if I use submodules I can't really do this that easy. First I need to commit the changes to microservice's git repo, so I could pull these changes into root git repo which contains docker-compose.yml. Only then the changes I made will appear in a running docker container. In my case I just go and edit any file in any microservice and as it's folder is mounted into running docker container I see the changes right away. This allows me to have a better feedback ...
Thanks i am going to try this now. I deal mostly with time series and dates have become the bane of my universe.
Write a patch
Thank you :)
Just came across this thread. I'm having the exact same problem. Exception handling for some reason does not work here. Did you ever find a non hacky solution?
Use SublimeText
Honestly, learning coffee script is certainly not worth the trouble.
An idea was to round the rgb values to nearest 32 multiple or something, this could be a second option to just lower the colors. Like have an option --buildable (only official colors) and --lego-like (round to nearest multiples)
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hm. But suppose main repo is on my workstation and I want clone it somewhere else i.e. to my local machine to work a little bit. I make changes to the submodule. When I push a change it will update the original submodule repo? Or it will push changes to the workstation?
Sublime takes personal information? I didn't know that!
it will push wherever you're pushing it to, that's how git works.
I mean `by default`. If I clone a repo it's upstream/origin by default is a location I cloned it from. But I do know how does this work with submodules.
Is it possible to use the free version to make commercial stuff?
500, internal server error when making choice.
Are you using the YQL scrape? If so, then i would expect scrape times of upwards of 3 hours. The rate limiting of an unpaid account on yql is a bit slow, and i've actually gone out of my way to keep it extremely well within their limits. You can change the scrape delay in the config.py file. If you're literally just loading the file, say, on startup, when there is a VERY LARGE amount of data, you should see delays of up to a few minutes at the most. 3 hours in that scenario would be totally abnormal, and i'd recommend deleting the data file (or all data files) and starting fresh. Also totally feel free to get back to me on it. It's really heartening to see people actually using it! :)
It's really good for real-time plots. I use it for experimental control software to show images from a camera, plot data as it comes in, etc. It's certainly not meant for publication-quality graphics, but it's great at what it does.
I think a big part of it stems from the official tutorial mixing MATLAB style api, import of pylab, pyplot, etc, confuses the beginner. At least it was confusing to me. Not until I realized there are 2 API styles (MATLAB vs OOP) and when I later stuck with the OOP style API, did it make much more sense to me. This [tutorial](http://nbviewer.ipython.org/github/jrjohansson/scientific-python-lectures/blob/master/Lecture-4-Matplotlib.ipynb) IMO should be incorporated into MATPLOTLIB's official tutorial.
I don't have a clue. I'm not familiar with Sublime, nor do I have access to its source code. I'd assume it's just standard metrics though, similar to Atom.
Yeah, but the Matlab-style plotting API was really important in getting people to initially embrace Python (especially for those coming from engineering and physics). I do find that the people who tend to complain about the API are more often coming from other fields. But it's certainly true that the pyplot/pylab API can be somewhat cumbersome for those not familiar with Matlab plotting. 
I would say R is for statistical programming more than scientific. I have a physics background, and I know plenty of people who use Python, but few if any use R (let alone even know what it is).
substantial bits of numpy and scipy are written in Fortran, even if you discount libraries like BLAS.
How do you do the resizable page splitting/frames?
This is a Star Trek The Next Generation reference. The creator of Data was teased by colleagues and called often wrong.
Make it fit in smaller resolutions? I had to scroll vertically (even in fullscreen), and I'm using 1920x1080 @ 96 dpi, 16 point fonts in Firefox (Linux, for that matter). Not talking about vertically large pictures (that I understand) but about shorter pics that should have fitted. Can't really comment on the rest, as my connection is so bad I have to refresh and start from "10 pairs remaining". On my attempts so far, I got all wrong... what do I win? :-P Edit: corrected font size.
Not right now maybe, ask the newsletter. But work on numpy style arrays and matricies is advancing at a blistering pace. The speed is comparable to cython.
Hello, I got a script and this download for me multiple images from a single website. If you know how the website and links are build you can easily read the link and download the pdfs. If you work with Linux OS you can download files with wget as example. Sorry can't open your link else I could maybe help you better as now. 
In this case I would recommend using wget instead of python, as what you are trying to do can easily be expressed in a single command: [Downloading files in a sequence](https://askubuntu.com/questions/240702/wget-a-series-of-files-in-order) [Authenticating to the server](http://www.unix.com/shell-programming-and-scripting/131020-using-wget-curl-http-post-authentication.html) If you are insistent on figuring this out with python, I would use a for loop and look here: [Authentication using Requests](http://docs.python-requests.org/en/latest/user/authentication/)
Thanks for the help. I am not set on using Python, I could use linux. I'm slowly learning both. I'll try the options out
Running your code (everything above line 8) gives me [this plot](http://i.imgur.com/8lxyZ2m.png) I've used this [SO question](http://stackoverflow.com/questions/23964236/python-ggplot-rotate-axis-labels) to rotate axis labels before
&gt; How about the millions of lines of Fortran in BLAS and LAPACK? I'd argue millions isn't really that many when you compare it to the totality of open source. Now what really matters is quality LOC. I'd say my open source's 200k lines of quality open source scientific code should count (maybe not 1:1 for BLAS), but much of the scientifically oriented open source code (e.g. a one off script) should not. Then you need to have the debate about does a Fortran line of code count as much as a Python line, but even saying they do, I'd bet Fortran loses purely on open source grounds.
Is this not just what Python dictionaries are for? I feel like anytime I would want to use a named tuple, I should just use a dictionary.
Mainly because Tuples are immutable, meaning you can't change them after setting them. Also an added benefit is that tuples are ordered!
See my answer above to dukederek :)
This _does_ make the individual elements accessible via dot notation as opposed to array-access notation. Compare: car.wheels vs. car['wheels'] It's not huge, but it does save 3 characters and is somewhat easier to read.
Agree with /u/CrayonConstantinople above, but would also add that I like using `dict`s so that I can iterate over them with the `key, value` idiom: for key, value in my_dict.items(): print('{}: {}'.format(key, value) That's pretty contrived, but it gets the point across. But even so, you could do the same thing with a 2-tuple. In fact, some the of the more specialized `dict` classes, like `OrderedDict`, represent key/value pairs as `tuple`s in their repr.
My favourite one is doing something like a = "blah", and then wondering where the hell that tuple came from. :-)
Whoa, really? No init? Edit: I got it! Inheriting from a named tuple. Fascinating.
Named tuples are great, but there is minor problem with them. They are inherited from regular tuples, and thus support operations that make no sense for a fixed collection of named attributes: iteration (yes, I know that iteration is necessary for unpacking, but it's still out of place on its own), slicing, concatenation, repetition (multiplication by a number), membership test.
nice - just like defining classes and objects but with less code. Thanks..
So, the main problem with "import ... as" is that this can limitate the monkey patching. On the other hand if I have a bad project structure and naming, I should use __init__.py for restructure and rename my project.
That's interesting, and I've definitely seen that pattern before. Great if you want immutable instances. But, if you want the same low-memory instances with named attributes and functions and mutability, you can just define `__slots__ = ('name', 'age', 'height', 'weight')` under `class Person`. It's not a dynamic dict anymore, you can't just do `self.foo = 'bar'` on an instance or you'll get an error, but it saves a shit ton of memory. In python 2 and 3 https://docs.python.org/3.1/reference/datamodel.html#slots &gt;Space is saved because __dict__ is not created for each instance. But if what you want is an immutable instance with functions, or just named attributes on data points, your pattern is awesome. Saves lots of memory too. If you want a complete mindfuck, [look at how they implement namedtuples.](https://hg.python.org/cpython/file/tip/Lib/collections/__init__.py) (ctrl-f `### namedtuple`) They use slots... but they also dynamically create the source code for the class and `exec` it. You can do some fun things with that, like generating high performance python source on the fly without a bunch of if statements and condition checks you know you won't need at runtime. And to anyone who says that's hacky, well shit they do it in the stdlib.
[On Linux, try uinput.](http://tjjr.fi/sw/python-uinput/) [Here's a potential solution for OSX, no idea if it works.](http://www.geekorgy.com/index.php/2010/06/python-mouse-click-and-move-mouse-in-apple-mac-osx-snow-leopard-10-6-x/)
you know you don't need an `__init__` function regardless right? I could see it being confusing since there's `michael = Person("Michael", age=40, height=1.8, weight=78)` but an `__init__` isn't required regardless if you have a parent class with one or not.
&gt; What does "open source grounds" mean? If there is more scientific code Python-based open source than scientific code Fortran-based open source, then Python "wins". Open source is a much bigger deal now than 50 years ago and almost nobody writes open source Fortran code these days. A few million lines of Fortran code is nothing in the grand scheme of open source code. As I said, I suspect given the abundance of Python open source, scientific code and the reliance on C/Fortran-based libraries to do the heavy lifting, would make Python easily win out. I would expect that correcting for library quality would make Fortran's score look better.
Huge memory savings on top of what other people said. namedtuples aren't dynamic dicts like most instances of classes. You can't add attributes. If you're working with millions or more of some data type that isn't much more than a data type (maybe some bioinformatics or data science thing), like Coord(x, y, z), you can save a ton of memory by using namedtuples. If all you want is a tuple with named attributes... well, there's a reason it's called namedtuple. dicts are very different from tuples, even though like you said, you can accomplish a lot of the same goals.
huge memory savings, immutability, makes more sense for a lot of data types. For example, you have a Pixel type (x, y, r,g,b,a). You could do this with dicts, but you're never going to need to do pixel['foo'] = 'bar', or add any sort of weird attributes. You're never going to do more than read the values. You don't need to keep track of their changing state, because they don't change state. You could do it with tuples, but you don't want to reference pixel[3] and try to remember if that was `y` or `r` or what. Then it makes much more sense to use a named tuple. It'll throw an error if for some reason your code tries to do anything weird that you wouldn't want to do to them. On top of that, you can save tons of memory if you have a lot of instances of it. namedtuples are a spec for what could be represented with by a dict, but there are things that are better represented as named tuples. Easy rule is that if you have a data type where you'd initially want to use a tuple but you decided you want named attribute access to the values, you should use a namedtuple. If you want to have functions in its namespace, you can follow the pattern in the top comment (a new class inheriting from a namedtuple instance), or you can define `__slots__`.
All from IT eBooks: http://it-ebooks.info/book/4634/ - Python Network Programming Cookbook http://filepi.com/i/PYo7iXG - Foundations of Python Programming http://it-ebooks.info/book/2074/ - Twisted Network Programming Essentials, 2nd Edition 
Works for me, in two ways: &gt;&gt;&gt; c = Coord(10, 20, 30) &gt;&gt;&gt; json.dumps(c) '[10, 20, 30]' &gt;&gt;&gt; json.dumps(c._asdict()) '{"x": 10, "y": 20, "z": 30}' 
Oh, woah, was unaware of the `_asdict` method. Nifty.
Not sure when this changed, but in our legacy-ish 2.7.x codebase the default encoder class couldn't handle `namedtuple`s. If I remember right, we already had our own special decoder, so adding it was pretty easy. Also, I think that's one thing `simplejson`'s encoder had that stdlib `json` did not. But again, unsure about when's and where's.
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
You know what, I seem to remember the same behavior, I think in 2.7.7 or 2.7.5 a few jobs back.
Hi Jack, no worries, Python is very easy at low-medium level. Also, you can run "wget" from inside your python script, if you don't want to use urllib. About a page having several pdf links, well, that is called parsing a website, isn't it? I recommend you BeautifulSoup because even being a bit slow, you will not notice it, and very easy to use too. If you send me the url, I'll make an example for you.
If you want the orderedness but not the immutability, you can use an Ordereddict. 
Even then, it wouldn't work, tuple and namedtuple require using `__new__` to set instance attributes because they're immutable. 
To me, the mandatory constructor parameters are more important than the immutability. If I'm building some dictionary in N different places in my code, and then I want to add a new mandatory key, it's hard to guarantee that I set that key in all N places. (It's also very nice that the constructor parameters are named, so the code can read well if they're al ints or whatever.)
Brackets could be an alternative, Similar to Atom but has auto indent for python
There's an even easier way to construct a namedtuple class. Instead of: Person = namedtuple('Person', ['name', 'age', 'weight', 'height']) Just use: Person = namedtuple('Person', 'name age weight height') It's a lot fewer key strokes. 
I agree. It's a bad comparison for various reasons, but yeah, Python probably has a larger open source library than Fortran, but that's not hard to do. C/C++ maybe, but I doubt it. It really doesn't matter who has the biggest community. Biggest useful community matters a lot more. Python can rip of Fortran and C. C can rip off Fortran, but not Python or Matlab. Matlab can rip off C and Fortran. Python can't read Matlab and vice versa. That's one aspect. Would you ever code a GUI to render 10 million 3D elements in Python? If not what good is all your Python code you wrote before that project?
I've been digging Brackets a lot, more for client side web dev than general use python though. It has an excellent live view browser for HTML and CSS. I still use Pycharm and Enthought when working with Python.
The pickling problem is a big issue if you are doing multiprocessing.
Little while ago I ran into a 3D framework that used lists with three items for coordinates all over the place. Wrote a little x/y/z namedtuple - fully compatible with the surrounding code, helpfully named elements, and I could trivially add simple vector operations. Plus immutability, which I do appreciate a lot. 
Console UIs on Windows are almost universally terrible because the "terminal emulator" is very limited in terms of features, and it takes lots of hacks to build a UI that actually functions well. Why not look into a proper GUI framework instead? I personally really like PyQt. 
&gt; interactive console Use [curses](https://docs.python.org/3/howto/curses.html).
It looks like you've got upstream Python installed; does it find it better if you install the homebrew version? (possibly "instead of" if "also" doesn't work) $ brew install python3 
atom is shit, dunno why people would use that thing over sublime or any other editor apart from notepad
If you know Javascript it would literally take a day or two to pick up Coffeescript.
[cmd](https://docs.python.org/3/library/cmd.html) is what you need.
as far as I know, there is a few tools for django framework; however, I could not find any project which could be regarded as a superset of flask_profiler.
&gt; to be run on Windows Don't use curses ;-), it's Unix only. If you need that level of rich interactivity, look at [prompt_toolkit](https://pypi.python.org/pypi/prompt_toolkit). But if you want plain and simple, the `cmd` module that other people have suggested is a good bet.
just to clarify, you don't need any extra packages in Sublime Text 3 to get auto indentation 
cv2 is not compatible with Python 3.
Wait, now. `import ... from ...` introduces problems for monkeypatching is it imports a class into current namespace. `import ... as ...` works fine in this case. What do you mean by renaming in `__init__.py`? 
If the solution is emacs I don't think I want to see the problem.
The general performance improvement of PyPy is amazing. We are still testing our deployment apps, but now getting about 2 - 10 times runtime speed gains as a straight replacement to CPython. Even with Django/Mezzanine based app and its db io "bottleneck". There is about double memory usage, but that is still bearable. Correct me if I'm wrong, but Cython or Numba (and possibly Nuitka) only help where replacing of general numeric object with specific machine type makes sense, plus optimized arithmetic instructions. It won't improve loops, method calls and expressions on general python objects like lists, dicts, strings etc.
What's **?
On can add vim-statline plugin and last trend - https://github.com/zenorocha/dracula-theme
Why not just use a real class at this point?
Fuckin A! that worked ("instead of" wasn't necessary) edit: or actually, maybe not. I *do* have +python3 but I get the this message on the next step: E319: Sorry, the command is not available in this version
Not a "Python" only related talk. But jupyter have is root in Python. Sorry if i posted this, in the wrong place. 
Wow, I never knew about `__slots__`. I just shaved 14% total run time off of a script I was writing that has to deal with a lot of objects (on the order of hundreds of thousands)! I didn't check memory usage, but I'm sure that went down as well. Is there any place good for learning about these kinds of performance tips? 
Because 3.x is not python
I usually end up typing "string with spaces".split() into my repl then copy-pasting that into source. Fewer keystrokes but just as efficient results. 
Thanks. Not sure why people are downvoting, this is a useful resource.
I agree, however the fields themselves are immutable, I'd use a tuple rather than a list for the second component. 
Seconded. I'm never going back to Eclipse or Sublime.
FTR, Sublime has a few issues with autoindent/autoformatting too (particularly with HTML): https://sublimetext.userecho.com/topic/51432-auto-fix-identationautoformat/
Prompt toolkit is pretty neat, but curses runs on Windows with PDcurses I think.
Well, it works... What kind of alternative you're looking for?
Unfortunately, I can't actually help. But I know the book. "Automate The Boring Stuff With Python" covers manipulation of MS Office files, and can be [read for free online](https://automatetheboringstuff.com/).
Thanks for the kind words, and more importantly, the suggestions. &gt; my only suggestion would be to to load new images at the same time or indicate that something is happening. I actually played around with this and couldn't quite figure out how to do it. The way I update images is to just change the href for each image but I can't figure out how to "load" the image data and then display it once both images have loaded. What are the search terms I would use to figure this out? Also, I will definitely implement what you described. I was initially worried that storing votes on the client side would mean that I wouldn't get to log those votes unless a user completed the game and that would cause a large loss in data. But based on the initial use of this game, most people (like &gt; 80%) finish at least one game, so the loss in data wouldn't be too bad. It certainly justifies taking the load off of the server. I'll make that update early this week. What tools did you use to monitor requests? One problem I have (due to my lack of experience) is that I don't really know how to look for those things and even how to interpret them when I see it. 10-15MB of data seems like a lot (although... the image gets pulled from imgur, so it doesn't seem like putting that on the client would reduce that 10-15MB number). 
Open CV 3.0 works on Python 3. It still uses the "cv2" import though (which I think was a mistake). Just be aware that despite being the same import name they made backwards incompatible changes in Open CV 3.0 that aren't immediately apparent because it's the same "cv2" import
Yea that is the plan... The reason for the delay in this is more about lack of time to do it than anything else. I also need to include scripts to initially populate the database with images. I should get around to doing this soon though. 
http://www.reddit.com/r/Python/comments/3qyej5/having_issues_installing_opencv2_with_python3_on/cwjng04
That's the thing --- basically every other thing about Atom I'm really enjoying! At the moment I'd basically say I love it, but without autoindent... I don't know if it's tenable. Sigh. SublimeText or PyCharm next I guess.
I know right... Complaining about a bug?! ONLINE?! What a princess.
There is pdcurses, but since the OP appears to be targeting Windows specifically, I doubt it's worth depending on an extra compiled library to be able to use a Unix-y terminal API. If pdcurses support were [merged into the standard library](https://bugs.python.org/issue2889), that might make it more palatable, but from the state of that bug, it doesn't sound very likely.
I'm glad you recommended those other modules! I've run into similar issues with openpyxl before too. :(
Can't help you with the Excel files, but I have some code to automatically extract attachments to a chosen folder whenever Outlook receives a new email with the right keywords. Would that be of any help to you?
xlwt module is pretty good for writing Excel files including formatting, multiple worksheets, etc., if you need it.
Named tuples can by JSON serialized easily, which is just text that can be pickled. This is a non-issue.
If you really want, you *can* roll your own with the built-in unzip function and BeautifulSoup. Once you get down to it, it's just XML. This may take a few years, though, as the OOXML spec is not exactly simple or concise. 
Do you need to natively interact with Excel, or is it only being used as a viewer? The reason I ask is that you could just write to a csv file and then use Excel to open it. 
Of course, you can find the code here: https://github.com/lackodan/mailunzipper. Not professional code at all, just a hobby project I'm doing for a friend. I'm using wxPython for the GUI. Sorry it took so long, I just created a GitHub account and thought this might be a good excuse to learn how it works. I'm currently working on the next version, with multiple possible keyword-folder combinations that can be dynamically added by the user. I was also surprised at how outdated Win32Com references are. It almost seems like nobody is using it anymore... Since we're in the same boat, if you want we could compare notes and error messages sometimes. 
My RAM is cheaper than my time.
Awesome, there are actually two other people that are using Win32COM in 2015?! See the link in my reply [above](https://www.reddit.com/r/Python/comments/3qzhg4/interacting_with_ms_office_files/cwjrn94). The same offer applies: if you want to compar notes, let me know. 
Specifically the `__init__`. You can do stuff in the init, just not set values because they're set in place by `tuple.__new__`
That regex would match an input of just numbers, which OP said should explicitly not match. It's hard to tell from the examples given, but it seems to me like you had the right idea -- the regex should match any combination of letters or numbers, as long as there is at least one letter. I *think* `^([0-9]*[a-zA-Z]+[0-9]*)+$` would work... One or more runs of any combination of letters, optionally with numbers in front or behind?
And this is way better than that because the class is explicit about it's attributes (user can't mess it up and create arbitrary attributes or leave out required ones). plus it's built in.
Yep, negative lookahead could do it. Didn't even think of that. Would probably be more efficient than mine above, too. `(?!^\d+$)^[A-Za-z0-9]+$`
There was a talk at PyCon (I believe it was this year, so 2015), where a guy used some library to manipulate slides in a running power point in order to automatically generate complex diagrams and interactions. I tried to find it again, but couldn't. Maybe someone else has seen this and remembers some details.
I think something like this: `^[a-zA-Z0-9]*[a-zA-Z][a-zA-Z0-9]*$` So, you would be required to have at least one letter between any combination of letters and numbers on either side. (Note: "any combination" includes an empty string, so the string could still start or end with a letter, or only be one character.) 
Im really interested in making a whole new game. I dont know what I want to make exactly and there is a lot of independent interest so I need to solve some logistical problems but it could be fun. Are you interested in anything specific
Im certainly interested
I think it does what it has to do! :) thanks
&gt; I think it does what it has to do! :) thanks 
I am trying to make a team since that seems to be the end result of this. Not sure the best way to handle this through reddit, but if youll send me your email ill send information for the game plan so far
The benefit is you don't need to figure out how to make a database sequence turn into a base 62 id.
What do you need specifically
Pfft. Delphi costs $1440USD minimum and you can't even redefine the key bindings for the IDE in 2015. :-)
Great pity he didn't do it for Python 3 :(
Thanks! Let's do that. I'm not sure how often I'll be able to update, but I'll try!
Got it, but OP's method is a shortcut for skipping an init, which is what impressed me. I wouldn't use a trick for skipping an init and then also use an init.
Didn't know about it... thanks for sending it my way.
Dictionary with fuzzy matching maybe? https://github.com/seatgeek/fuzzywuzzy
And I think you're misunderstanding what I'm saying. Usually, to get a person with a name, ie dave=Person ('dave') print dave.name #is dave You'd use an init function in your class definition. OP shows a way to get the same behaviour without that boilerplate (like `self.name=name`) Yes, I get that it's different. ie, can't change the person's name after instantiation and stuff happens in new rather than init. Thanks for adding your knowledge to the details.
AFAIK the language changed more than the VM (e.g., the str implementation is all in things called unicode*!).
From what I heard the underlying code base got cleaned up a lot for python 3. Essentially a "hidden" reason that the core python devs wanted a python 3 in the first place; the python 2 one was bit rotting under backwards-compat-needing technical-debt. And you definitely got it right that the string implementation has evolved a lot. Even within Python 3, when after 3.2 internal representation was changed from compiled-in UCS-2 or UCS-4, to a dynamic one that shifts from latin1 -&gt; UCS-2 -&gt; UTF32 as needed.
One thing that I note that may or may not be an issue here is that if you're just translating autoincrementing IDs into base62 for your shortlink, you might be enabling a [insecure direct object reference](https://cwe.mitre.org/data/definitions/639.html) attack against your server. From a brief glance at the code on https://github.com/narenaryan/Pyster/blob/master/main.py, you might be opening yourself to sql injection attacks by building your query string first and then executing it, rather than passing `str = "select ... where foo = %s"; conn.execute(str, args)` that properly escapes your args. lastly, python stdlib has [`base64`](https://docs.python.org/2/library/base64.html#base64.urlsafe_b64encode) module which contains useful functions like `urlsafe_b64encode` that you're reimplementing. A fun learning project, but not one that I'd be comfortable exposing on the Big Bad Internet. 
Really! Interesting. I thought numba was more like numexpr, I see I was confused.
Generally, for something simple like this, it's quicker to not use regex. import string all(x in string.ascii_letters for x in 'hello') Obviously this will only catch a-z and A-Z but is easily modifiable as an exercise for the reader. Regex is invaluable for more complex patterns.
Heh. [I did this one time...](http://sdot.ca/ylkxx8) I used random reddit-style base 36 IDs though; I find them easier to remember than base 62. Mine also does [custom URLs!](http://sdot.ca/lolphp)
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi. Thanks. I'm sorry I was ambiguous regarding the problem statement. I thought that would unnecessarily complicate the explanation. I plan to make a prototype( local python script) that does deep learning on semantic dataset(using h2o). h2o takes care of scalability in local clusters but I want to make this whole system online. Maybe this is not the right place to post this question but can you tell me if I'm missing something. One more thing, am I unnecessarily re-inventing the wheel(in terms of architecture)? I've limited exposure to distributed systems and limited experience in programming for such DS. Thanks again, I'm seriously considering CubicWeb.
There's no tuple parameter in that function
I *always* do pip install in conda. I just don't "trust" the binstar
&gt;What are the search terms I would use to figure this out? Sorry i was a bit brief with that suggestion, but what you are looking at is an asynchronous image load. Have some javascript creat an overlay that darkens the two images until both have loaded then display them, whilst also having a message saying loading next image set etc. &gt;initially worried that storing votes on the client side would mean that I wouldn't get to log those votes unless a user completed the game and that would cause a large loss in data For this I could suggest a partial data or data prevention loss check when a user closes window/tab to create a message that asks to submit partial data or if they want to continue. &gt;What tools did you use to monitor requests? One problem I have (due to my lack of experience) is that I don't really know how to look for those things and even how to interpret them when I see it I just used chrome dev tools and watched the network monitor. Im not sure of your architecture but that suggestion was aimed at if images are grabbed server side and stored in your DB, it would be ideal to let the client handle the image traffic rather than your server. Let the DB just hold a reference such as the URL. 
You can do that with the standard library: from urllib.request import urlretrieve urlretrieve('http://example.com/path/file.ext', '/home/me/Downloads/file.ext') If you're using Python 2.x, the name of the module is `urllib` instead of `urllib.request`. 
&gt;One huge bonus is that you can use them as keys in a dictionary. You can do that with objects too.
Yea, i mean. But I think that mastering regex will be better in the longer perspective :)
The `(age, height, weight)` in `def bmi_risk((age, height, weight)):` is the tuple parameter.
great, thanks
++ for reminding me about CubicWeb. Very pluggable and modular and completely an underdog :)
thanks, this also helped and also I got solution is from *urllib2* also. 
What problem does it solve? Can I use it with any ORM?
Oh, cool, thanks. Somewhy did not think about that. But this has some drawbacks. For example if somebody for any reason wants to look at the code of your `hello` function he'll try to find it in a `package.py`. And he can spend quite a time to find out it was aliased in `__init__.py`
You right. Isn't friendly for new employees or contributors.
You can try [aiohttp.web](http://aiohttp.readthedocs.org/en/latest/web.html)+[API-Hour](http://pythonhosted.org/api_hour/). aiohttp.web have the same API than flask, and has been developed mainly by Andrew Svetlov that is a python core developer. They have a great performance because has been developed with asyncio and python coroutintes: [asyncio benchmarks](https://github.com/python/asyncio/wiki/Benchmarks), also [asyncio+aiohttp.web+API-Hour benchmark](http://blog.gmludo.eu/2015/04/techempower-frameworkbenchmarks-round-10.html)
Another option is using the `requests` library: r = requests.get('http://example.com/file.ext', stream=True) with open(filename, 'wb') as fd: for chunk in r.iter_content(chunk_size): fd.write(chunk) It exposes a little more about how it actually works, the urlretrieve method hides a little more. Depending on what you're focusing on learning this does expose a little more about how a file download actually happens (reading in chunks).
Did you post that in the /r/learnpython subreddit ? I believe teaching is one of the best way to learn, then it's good for you to go on with this and reinforce your knowledge.
"".isalnum() is the best way of doing this. Regexp would be: \^[0-9a-zA-Z]*$
I would not trust isalnum() to work in Python 3 as it's unicode aware and will probably match some additional characters defined as letters that are not ascii letters. This being said, I should test it as you could be right.
Looking at the doc you're correct about alnum on python 3. It also includes decimal character. I assume that means . or , in most locales. On mobile so haven't actually tried. 
A tip: indent your code with four spaces to avoid it being mangled by reddit. Or just put it in some pastebin and post the link. **Edit:** took a look at your code. You really need to refactor it - see all those `U1_Input_col2` function that you have defined? They are all the same, except for the prompt, I guess. A better soluction would probably be: nth = lambda n: ("st", "nd", "rd")[n-1] if 1 &lt;= n &lt;=3 and n % 10 == 1 else "th" def get_ship_position(user, ship): print("User %s, where do you want to put your %s%s ship?" % (user, ship, nth(ship+1))) try: x = int(raw_input("Column: ")) y = int(raw_input("Row: ")) if not (0 &lt; x &lt;= 10 and 0 &lt; y &lt;= 10): raise ValueError except ValueError: print("Please enter an integer number between 1 and 10.") else: return (x-1, y-1) user[0][0] = get_ship_position(0, 0) #can be None - whoops Or something.
Everything is possible!
/r/learnpython
do your own fucking homework also, /r/learnpython
OP said vehicle routing, which is map based. Google has the best maps and routing. If OP isn't working with a map and needs to implement an A* shortest path or Salesman problem, then there isn't a module to do that for OP. 
Hi, to kill the Flask VS Django war I like to show [ImportD](http://importd.readthedocs.org/en/latest/): it is as minimal as Flask to get started quickly with no fuss, but it's Django under the hood (and you can use it as any Django project if you wish). Web2py has a nice ORM and a very nice admin interface too (with which you can deploy and manage websites) http://www.web2py.com/ (I have no experience with it).
The particular framework you choose won't matter that much from a scaling point of view. Your scalability will be determined almost entirely by your web server/wsgi/caching setup.
Does it work with virtual environment now? (virtualenv)
You can also use embedded LaTeX math in the Markdown cells of IPython Notebooks, which is often a good option for presenting your work. For example, the cell would content: `The answer is $\frac{(A+B)^2}{4C}$`
You can write this yourself, but there's actually a pretty good program that will do this for you-- even down to sending it to your Kindle. Check out [calibre](http://calibre-ebook.com/). [Here is a guide for its News Fetching feature](http://blog.calibre-ebook.com/2011/10/custom-news-fetching.html), which is hopefully not *too* out of date.
oh right, didn't see the inner "()"
I've never read it. Are you the author? Is there a paper copy?
Thanks for the link. I do know Calibre has this feature, but I want this to happen automatically every day, and I don't want to keep my laptop always running. I have an arm arch linux running on a pogoplug acting as my media server, so I want to run this script in cli in batch.
I fixed this by creating empty objects and pickling them as follows: Loading GLOBAL_STOCK_DICT: wxStocksDB.py Loading GLOBAL_ATTRIBUTE_SET all_stocks_dict.pk: stockDict {} all_attributes_set.pk: atrbSet set([]) Loading GLOBAL_TICKER_LIST ticker.pk: tickerList [] Loading unencrypted DATA_ABOUT_PORTFOLIOS... DO_NOT_COPY/portfolios.pk: portData [3, []] Loading GLOBAL_STOCK_SCREEN_DICT screen_names_and_times_tuple_list.pk: screenDict {} Loading SCREEN_NAME_AND_TIME_CREATED_TUPLE_LIST wxStocks_data/screen_names_and_times_tuple_list.pk: screenTuple [] encryption_strength.txt: 1 Then the gui started right up. When I populated the data, it just took seconds, which tended to make me think I originally had a hard loop. Any way it is a fun project. PS: wxStocksDB.py is a hacked up version of wxStocks_db_functions.py that I used to initialize the pickles. 
Try writing C some time. You realize just how much *must* be somewhere in a Python, Ruby or other interpreter. I think, if you like popping down the rabbit hole, that learning how to implement a basic object-like system for C is a really valuable way to learn the concepts that let OOP work. (And it explains perfectly why in Python 'self' is passed as an argument to methods, for example.)
I just skimmed through it. It kinda seems more like "An Introduction to Python for Quick Learners" than "Python for Intermediates". I feel like a book for intermediate skill has no reason to explain things like print functions or how to define a function. These things will be covered in almost any previous training and should be assumed knowledge. I consider myself somewhere between beginner and intermediate and it seemed far too basic to me.
Give me money and I'll do it for you 
Holy hell, you're the guy. I've been learning from your site since I started with Machine Learning. OP, read his stuff like the bible. I've learned more from him than any other single source. edit: Machine Learning. Not Python in general.
That sounds like you just looked at the first chapter which is available to bring everyone up to scratch. Consider looking past the first chapter before forming an opinion
Unfortunately, its only available as an electronic copy.
But If I tried making it vice versa and not allowing numbers ONLY, ANY special characters and spaces or blank input. I tried to make it: while re.match("^[0-9][!@#$%^&amp;*]*$",questName): But it's not working :(
&gt; But If I tried making it vice versa and not allowing numbers ONLY, ANY special characters and spaces or blank input. I tried to make it: while re.match("[0-9][!@#$%&amp;]$",questName): But it's not working :( 
No thank you. I'm really interested in learning python, so this will be a useful fun project for me. I just needed to know if it was possible and get some guidance on what is needed.
Great! Thanks for that info..
I'm so dumb, i realized I posted this on my old channel from when I was like, 11. I am re-uploading it on my channel now, I will post the new link in the comments here when it's done. &amp;nbsp; **EDIT** [**HERE IT IS**](https://youtu.be/PG4Ev8Sx5ac)
Oh, okay. Yeah, it's definitely possible. Web scraping is a really useful skill to know, and Python is a really good language to get started in. Like the top commenter said, requests and beautifulsoup will be your best friends. You can save to a text file with any characters you want, you just need to make sure you save using UTF-8 instead of ASCII. I can help get you started if you want. It's usually pretty simple. Do you have any knowledge of HTML?
Perhaps you can use utf8 textfile.
I don't think you need rtf, per se. It's an old format, too, one I don't see used often, nor there is much support for it library-wise (even if that shouldn't be much of a problem, seeing that it's more or less human-readable). Besides, encoding != format. You could have an utf-8 encoded txt file without any problems. I was more thinking about downloading the webpages, extracting the content, downloading all the resources and then putting that into an epub. **Edit:** letter.
Pyramid
Doubt it. Back in 1991 we had the same thoughts around dce, corba and distributed computing. We haven't come far enough since then to think it will go away anytime soon. 
After seeing David Beazley's PyCon talk and tutorial on asyncio, I am convinced he is a god. I'll keep this library in mind.
50% faster than asyncio? Well that's stealing a bit of thunder! I wonder if asyncio could borrow any speedups that could be implemented under the covers.
 &gt;[Some old blogs](http://coreygoldberg.blogspot.de/2009/01/python-read-outlook-email-and-save.html) have pointed to win32COM, but I couldn't find anything more recent than 2012 on this topic. Why attack this from this end? Could you not set up your mail server to forward a copy of every E-Mail received? &gt;This is a personal project. One of the more time-consuming tasks for my coworker is logging Outlook emails in Excel by hand. I don't want to spend time learning VBA and forgetting everything about it before using it again. I guess I really don't understand what is going on here, if you want retention set up Outlook to retain all E-Mails. Otherwise I'm not sure why you would log E-Mails, it just seems odd. Beyond that Excel is a terrible place to log anything, I'd suggest a database program but then again I don't know what is going on here. &gt;What are your thoughts? Thanks in advance for the help! My first thought is why? After a bit the question then becomes what, that is what is actually being logged. Is the why a desire to have a backup of the E-Mails or maybe more enhanced data handling? 
The first thing that comes to mind is this, does the system provide a OS wide spell checker. If it does leverage that as much as you can including the data base. Beyond that there are a couple of open source spell checkers out there. One is called hunspell I believe. GNU, if you can stomach their attitude should have resources related to spell checking also. 
You're looking for Newspaper https://github.com/codelucas/newspaper 
Even if the runtime were capable of detecting when sections of code could be run in parallel it wouldn't achieve material results outside of very specific situations. You need to intentionally structure your program so that it does not rely on serial computation. It may become easier to write parallel programs, but a person always needs to come up with an efficient algorithm first.
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
It was probably [this one](https://www.youtube.com/watch?v=D1twn9kLmYg) that I'm thinking of but I can't confirm right now. Pretty sure though.
The one thing I'm learning about programming is that it's far harder to design and write good code than it is to read good code. I had a minor epiphany when I read parts of the Python source code and pretty much understood it. When I was newer to programming, I assumed that something like Python is written and read by geniuses locked in some tower somewhere, never to be understood by anyone. The most comforting thing is seeing a bunch of unresolved TODOs in the source code of an incredibly popular interpreter :P
No, we'll just make better systems for designing it. &gt; the runtime itself will know what to spread out on several cores for example? That's not even concurrency. That's parallelism. https://vimeo.com/49718712
I basically use it as a struct pattern. Most of the time the information I put in one doesn't change after creating it.
Even with a system that automates some portion of concurrent programming, there will always be cases where the default behavior does not align with the performance considerations you have in mind. Explicit concurrency is not going away any time soon.
QGIS has a road graph plugin. Might want to look at that. But I suspect this is already more work than you're hoping for as getting into a GIS library will take a bit of work and learning. 
I should specify that I am running this with Windows 8 
We're going to end up with 7,000 different ways to do the same thing though.
I prefer Sublime Text 3 where ever I can install it.
This coupon will be effective until 2018, I think. The way Udemy's system works out, it doesn't cut into my rate much at all if people use the 50% coupon (since I'm driving extra customers to their site), so I've made it effectively eternal. After 2018, I'll probably just create a new one/extend this one. Either way, once you sign up, you'll have lifetime access to the course. So you don't need to start going through the course material right away.
Wow! This is awesome!
thanks
8.1 
Hi, you can try http://www.pydev.org/ if you really need a IDE. Maybe this one is good for you as IDE. You can change text fonts size and whole IDE for a good screen resolution.
When you link with python3, the Vim command is :python3 (or :py3) whereas your python vim scripts might be expecting :python (or :py) 
[Vim](http://www.vim.org/) 
&gt; You realize just how much must be somewhere in a Python, Ruby or other interpreter. can you elaborate on this? 
pycharm or vim is always the answer.
Use javascript? In particular, try looking up AJAX. If you have no idea, you will probably be learning quite a bit to implement this.
A UTF-8 text file should be fine. Just make sure you use `r.content` and not `r.text` in your `BeautifulSoup` instantiation and you should be mostly fine.
Unlike all the other gloom-and-doomers, I'll say yes. :-) There is plenty of work underway now regarding automatically offloading code to GPU and other coprocessors as appropriate and I expect that will lead to a lot more automatic parallelization. It's the next frontier for language development. http://www.theregister.co.uk/2013/08/25/heterogeneous_system_architecture_deep_dive/
This is exactly the approach I was thinking of, I just didn't have the terminology to express it. Thank you!
Python 3.5.0 have many bugs in windows. The PSF is working to solve them. Maybe you should install Python 3.4 until 3.5.1 release. Also you can suscribe to nossy list to related bugs in bugs.python.org
Say Dave tweeting about async and open files the other day, was wondering what that was about.
I'd say it depends on how much you want to automate the task. I'd say if you're going for hundred percent reproducible research, you should try to use OpenCV. If you're just looking for a quick and dirty solution, something like ImageJ's measurement tools will do the job reasonably well and pretty fast (granted you have a small number of images).
I took his python advanced class at an internal training at my work, really sharp guy. This library looks useful as well.
tl;dr review: three days of great content. 2 days of python internals which you may or may not care about. excellent reference book that i still go back once in a great while note: ive been a developer for nearly 16 years - ymmv
I'm just a python newbie and I'm quite confused
We're working on it http://pypy.org/tmdonate2.html
There's a valid reason for that, but it's buried beneath the rest of Python. 
Yeah sorry, im new to reddit
Don't scale too early
maybe ask this question on /r/learnpython asap?
Can we expect not to think? No. :-)
+1
This has been my stance as well since asyncio got started, though you've done a great job spelling it out. The new explicit style might help people unfamiliar with this type of async programming get used to the idea, but once they are, it just gets in the way, imo. It was even worse before they added the new keywords. Gevent has also made great strides for the upcoming 1.1 release, adding support for Python 3, and even adding wheels for Windows, making installation easy across platforms. The major benefit of gevent for me, is that most libraries don't have to be completely rewritten in order to support it.
i find this easy to masturbate to.
your stupiud
can someone plz give us (the peasants) an ELI5? 
what about the third day ?
Use PyCharm with full-screen on ...
Thank you, that was my intention
How about sympy? 
It's in stdlib https://docs.python.org/3/library/ast.html#ast.literal_eval
Sympy is a library imported into python. As I understand it, it still has access to all of python and is therefor no more safe than eval(). Unless I am mistaken? Do you have links to evidence of the contrary?
That's less of a Python Question. Look for SQLite Manager for Windows, which helps you out.
Ok, Thanks
Thanks for your thorough reply. Hadn't thought about Skulpt. Heard of it once before. I suppose what I need is pretty much what they do, along with places like codeacademy, khanacademy, etc. I am currently reading up on [PyPy's approach](http://doc.pypy.org/en/latest/sandbox.html), which might also be a good option
I think you misunderstand my intention. I want to let visitors to a website enter a string of python and have it be executed on my server. Therefor, I must make sure that they are not given access to my runtime, filesystem, network, etc. That does not seem to be possible with sympy
That just evaluates literals, doesn't it? I wouldn't say this would allow one to run arbitrary mathematical operations against the literals, though. `It is not capable of evaluating arbitrarily complex expressions, for example involving operators or indexing.`
PyPy does support a form of execution sandboxing, doesn't it? Your entire project would have to use it though, unless you're able to just fire off subprocesses at will.
That is correct, but I can't determine if that is a problem for the OP based on the information given
Thank you all! 
PyParsing is my absolute last resort :) It would be fine for simple arithmetic, but if I want datatypes and loops and stuff, it's gonna be a whole lot of work.
I think that sympy is the answer. See [sympygamma](http://www.sympygamma.com/)
Pandas also has a good read_xls function if you want to load entire excel tables. 
I don't need powertools, I could use handtools but why would I? 
Pycharm - lots of people say start with an editor and move to something more powerful when you need it, I think it makes sense just to use the more powerful thing from the start, you might have to learn the tool more than an editor but the time you save in pretty much every way will more than offset that.
You're right everyone should just use vi for absolutely everything.
When I did this (to solve a couple of puzzles), I just built a small parser. It's not that bad. Convert to RPN, and then just run through and execute.
I think you want to avoid the python expression part and just have a math expression evaluator like this: https://opensourcehacker.com/2014/10/29/safe-evaluation-of-math-expressions-in-pure-python/ 
If you're going to develop a lot, then an editor you can program: Emacs ! http://wikemacs.org/wiki/Python
Uh, no, I wouldn't impose vi on even my worst enemies. My point was simply that a text editor is totally fine. A beginner isn't even going to use any of the features of an IDE! Hell, I don't use most of PyCharm's features when I'm hacking my research tools!
You could use another library maybe? [err-calcbot](https://github.com/gbin/err-calcbot) Here's a pyhon script that uses libqalculate with the qalc command installed. An alternative option would be to find a web api that would do the same thing, but my google-fu for that is feeling particularly weak this morning ;)
Komodo IDE is one of the few serious Python IDEs, but being expensive it doesn't have a lot of open source users. Komodo Edit is free, though, and it is most of an IDE.
In a distributed environment, I might not want to run the program on every server. Though ofcourse, if there is no significant overhead in starting the sandbox, I could just run it on demand for each call and let it terminate once done. Haven't had the chance to do any profiling on the sandbox just yet
Lol I always think of vi when people say simple text editor. Or nano. God bless nano for being a command line alternative. I prefer a simple ide to a simple text editor. Geany is my go to for quick script writing. Syntax highlighting alone is worth it.
Perhaps, but even in that case you wouldn't want to be trying to spin up socketed apps all the time - Maybe a master server that spawns the subprocesses? Either way, my point was more that the subprocesses can really be as simple as possible - You want this, so that your sandbox can be as efficient and safe as you can make it.
&gt; Uh, no, I wouldn't impose vi on even my worst enemies. That's right, why use that non-free botnet vi when we have emacs from our lord and savior?
As much as I love Emacs, I wouldn't really recommend it to beginner. Scaring someone off from both Python and Emacs is not the way!
i was a beginner still i am, but first try to use any texteditor, then move on to something like textwrangler,get anaconda installed then move on to pycharm or ipython notebook or spyderapp. Going up from a normal text editor to pycharm or spyder app gives u the importance and the neccesity of using which ide to which task.
I was thinking of [this](http://docs.sympy.org/latest/tutorial/basic_operations.html#converting-strings-to-sympy-expressions), but it even says right there that this uses `eval` internally and is therefore unsafe for unsanitized input. Still, you could allow only math operators and a few math functions in your string. That would probably be very safe. Sympy could then translate the string to working code.
SPyDEr or IPython when you download the Anaconda packager. Offers a lot of built in libraries and modules that let you get right into making cool shit.
This worked. Thanks a ton!!
At least one other person has suggested Brython, but you seemed to have dismissed it off-hand. May I suggest you go to http://brython.info/tests/editor.html and try running any code you might want to have your users running as a test? It's entirely client side, so that, once the page is loaded, your user would see results much faster than if they have to be communicated back and forth between their computer and your server. Skulpt is limited to Python 2.x; Brython is 3.x based. I use Brython and am quite happy with the results.
And not even always for programming questions. For example... question: whose going to win the next presidential debate? Answer: either PyCharm or Vim. 
You raise some valid points. In my instance, the feature is behind a paywall, so I am not worried about the ddos vector. Have you tried pypy sandbox? They advertize the option of limitting memory, cpu load and cpu time for the subprocesses.
its a five day class. no sure what you're asking here
We are in agreement
Hi everyone! Harvey is a simple CLI app which I created. It helps you choose and add license for your open source project from command line.
PyCharm community edition. IMHO, the best IDE there is for python.
https://github.com/edx/codejail &gt; CodeJail manages execution of untrusted code in secure sandboxes. It is designed primarily for Python execution, but can be used for other languages as well. This works by using the operating system's security functions to jail a sandboxed interpreter. I believe it's used by a few major MOOC sites like ed-X. I'm sure someone who works in MOOC (there must be a few here) can comment. I'm sure they'll be here when USA East wakes up in an hour or so.
I was just posting this here. Amazing features for this version.
Wonder how long before this stuff is available in the IDEA plugin for Python.
Not really interested in getting into politics; we were colleagues for a while
&gt; Next possibility is to write a parser for the desired language constructs, which is certainly possible for simple arithmetic, but what if I wanted programming constructs like loops and lists an stuff? Then it gets a bit involved. I suspect that that's what Asteval you mentioned does, except there's a huge trck: you can use Python's ast module to give you a parser for free, from there it's surprisingly easy to whitelist (not blacklist!) the subset of the language you want to evaluate, and do so in a completely safe way.
There are different views here but I look at it this way, as a developer you need to be able to handle a text editor or two. There is always the possibility of being stuck on a machine that only has VIM installed. So I would suggest that some of the first few steps of programming should be attempted with a couple of different text editors. The reasoning is simply one of building up your skill levels to easily handle the curves that get thrown at you as a developer. Past that you either need an IDE or an advanced editor. The problem here is that if you only try one you really aren't doing yourself any favors. As such try out a few IDE's/text editors, such as PyDev, EMACS and the like. See what fits your mentality, don't let the people on Reddit dictate to you. Instead figure out what works best for you. 
Actually for a beginner EMACS isn't bad at all, if you use one of the GUI based EMACS it is actually a nice place to do Python. A beginner doesn't use advanced features of Python and likewise they don't leverage the advanced features of an IDE. Long term usage is a different story, but a beginner isn't going to know what fits his needs until he try's out a few editors anyways. For a developer to figure out what is best for him, he needs to make real use of what exists out there right now. 
Anyone else on Linux has had their font rendering screwed up on PyCharm? The Adobe Source Code Pro font now has a lot of bleeding. Tried toying with vmoptions to tweak swing's use of AA and such but no dice.
Does it have all the functionalities of pycharm ? Meaning that one would not need to have both editor for developing in java and python ?
http://www.lmgtfy.com/?q=sqlite+python+tutorial&amp;l=1 Did you even try to help yourself first? Or did you figure it would be easier to just have us do everything for you? 
/r/learnpython
Hopefull, I can finally use it on my Mac using Java 8. (I know about the editing of the .plist, that never worked for me)
Assuming you remap Caps Lock to Escape.
Rosetta Code is also something similar.
Yes: * asyncio + aiohttp introduction: [fast scraping in python with asyncio](http://compiletoi.net/fast-scraping-in-python-with-asyncio.html) and [concurrent http requests with python3 and asyncio](http://geekgirl.io/concurrent-http-requests-with-python3-and-asyncio/) * native coroutines introduction: [python http server with the new async/await syntax](http://makina-corpus.com/blog/metier/2015/python-http-server-with-the-new-async-await-syntax) * native coroutines: [PEP 0492](https://www.python.org/dev/peps/pep-0492/) * aiohttp: [aiohttp tutorial](http://aiohttp.readthedocs.org/en/latest/index.html#contents) * API-hour: [api-our tutorial](http://pythonhosted.org/api_hour/tutorials/index.html)
The default version of PyCharm 5 for Mac OS X available for download comes with the bundled JDK 8.
That was exactly it. for those with the same problem who read this: :python3 import sys; print(sys.version)
Functional languages like Haskell or Scala won't be able to automatically make operations concurrent or parallel, either, except for the case I mentioned at the end.
print() is definitely a 2 -&gt; 3 thing. Are you saying the error message didn't change at all when you performed one of the two recommendations? Which one did you perform?
Stateless operations can be run concurrently and subsequently pararellized due to their nature.
There's a world of difference between Vi and Vim by default, let alone with plug-ins. And that's not adding Neovim into the mix, which further modernizes the editor.
I'm sorry but I only saw you had one recommendation, which was to change: print rolling_count.describe() to: print(rolling_count.describe()) 
No problems with fonts for me, I use DejaVu Sans Mono in PyCharm and Source Code Pro in Android Studio 1.5. I found I have to use different fonts and color schemes because I kept confusing the 2 IDEs when I had them open at the same time.
This is a great talk: excellent information and live coding everything like a boss (even adds in comments).
I've always wanted to use Inconsolata to no avail. The default font works fine though.
crap, now i have an itch to figure out how to data mine /r/python and figure out how often it really is.
It wasn't even me, but if you really can't read three lines and see two recommendations, I'm certain I can't help you, so good luck
you missed the line 12 print data() :P
Googley docstrings! Yes! Finally they can close that feature request :)
One more article that is probably relevant for you: [Safe evaluation of math expressions in pure Python](https://opensourcehacker.com/2014/10/29/safe-evaluation-of-math-expressions-in-pure-python/)
Indeed, you'd think people would learn to properly use google for this. e.g. site: reddit.com/r/learnpython beginner ide
Came here to say this, easily my most wanted feature for a year or so now!
PyCharm is too powerful for someone just starting. 
sorry i can not get it so show up formatted properly for some reason
&gt; three days of great content and &gt; 2 days of python internals which you may or may not care about. 
Yeah the project setup is basically broken in IntelliJ for python projects. Do you have a ticket on the roadmap to fix that? I'd love not to have to switch back and forth between IDEs depending what language I'm working on.
I feel like this is so obvious that I'm missing it. Change it to what? `Print(Data)`? I'll just play with it and bash it. Thanks.
You are trying to convert a non integer string. You would need to add a try/except block to catch the exception, when taking input and attempting to convert to an int. def process_player_choice(): print('What is your choice? Enter 1 for rock, 2 for paper, and 3 for scissors: ') choice2 = int(input()) while choice2 != 1 and choice2 != 2 and choice2 != 3: print('Error, your choice can only be 1, 2, or 3.') choice2 = int(input('Please enter a valid choice: ') return choice2 
This is blatant plagiary of the Udacity course "Intro to Machine Learning" by S. Thrun, and was not written by "Raul". The user has replaced "Chris" with "Enrique" and "Sarah" with "Juan" in the examples, lifted entire sections of text (see Udacity [here](http://i.imgur.com/GSZZeCt.png), and Brainattica [here](http://i.imgur.com/8lCGQ5Y.png) and [here](http://i.imgur.com/Vu13Xrc.png)), and copy and pasted Udacity code to pass off as their own (see comparison of Udacity [here](http://i.imgur.com/qHk0EP9.png) and Brainattica [here](http://i.imgur.com/QcPuZno.png)). Scr On top of this, zero effort has been put into the (small) sections they decided to write themselves, with copious grammatical errors rendering it unreadable.
It get's shit on a lot here for some reason, but Atom is actually pretty good when you're low on space plus it's fairly lightweight. I use it as my general editor (anything not heavy enough or python enough for pycharm) on my laptop. just go fullscreen and hit 'ctrl+\' to show/hide the file tree and it's great, nice and clean, and super customizable, and easily fired up from the command line. The package system has come a long way. pretty much everything you would want can be found in atom's built in package manager. I really like the [material UI theme](https://atom.io/themes/atom-material-ui). And as for language IDE features, just search for python and you'll find most of what people complain about it missing. The two most useful for me are [autocomplete-python](https://atom.io/packages/autocomplete-python) and [python-tools](https://atom.io/packages/python-tools) . Really, my only wants for it as a python IDE are a good python refactor helper (One that works across files as opposed to multi-cursor find/replace) and auto indenting for line continuations (matching them to the open parenthesis. Haven't looked for one in a while though and just use [yapf](https://github.com/google/yapf) to auto-format on save).
Screw around with it. A lot. It's all meaningless if it's not fun and you won't learn anything by simply copying. Also, the internet exists, use it. If you've got a question, Google it. There'll almost always be someone who had the exact same problem as you.
10.6? Is that even supported any more?
specs say &gt;10.5 
Awesome thank you very much
Awesome thank you very much i should have thought of this but after 6 hours straight of homework and kids on top of doing this for them my brain was just fried.
Run 2to3 on it. You wrote it for python 2
What is the difference between content and text? I run a few scraping scripts working with Chinese and basically have to use .encode("utf-8") explicitly to get text into the db Understanding encoding seems hard, no matter how many explanations I try to read....
Fail to see how that is the case at all. I could see an argument for learning to use python from the command line for someone knew to programming entirely. JetBrains is one of the better examples of powerful != unescessairly complex and having linting/error checking from day one for a beginner is a big win IMO even offset of against a slight learning curve. Also pycharms debugger once you use it is big win once you get past complete beginner.
Ah shit I need another subscription...
I think the easiest way is to create a directory under content called pages, and write the markdown for any static pages there. After that it kind of depends on the theme you use. (I used pelican-bootstrap3). So I had to set up MENUITEMS in pelicanconf.py Pelican also uses jinja2 templates which is similar to Jekyll. You should be able to write the template in a similar way.
&gt;The problem is that there are a bunch of crazy ways to exploit eval to attain "arbitrary code execution". Well the thing with eval() is that it's not a crazy exploit to get arbitrary code execution, it just *is* arbitrary code execution. If you eval() code I hand you I can just give you the 'mathematical expression' of any Python statement and it'll do whatever I ask it to. I could send you 'subprocess.call("rm -rf /*")' just as easily as math.
This looks like fun. I am especially curious about the photo mosaics. I will put this on my Christmakah list!
&gt;It looks like it's still a complicated mix of Bash and regex to me. :-( More like a mix of ed with its own modal bindings :-). &gt;No one wants to memorize 200 commands to do some text editing. Well, I do! Because it's not 200, it makes me more productive and since it behaves like a spoken language it's decently easy to learn. There are mnemonics to work with text even. But yes, it's not for someone who's not ready to sacrifice some time and put on a little effort to gain productivity and that rules out most users.
So Visual Studio has a community edition that might fit your need. It's actually pretty great, but you have to do a custom install and select PTVS (Python Tools for Visual Studio). Of course you can pay for more features too. The only problem is it doesn't support virtual environments until the top level license. https://visualstudiogallery.msdn.microsoft.com/9ea113de-a009-46cd-99f5-65ef0595f937 
Haha, I've also created a very similar app called [choosealicense-cli](https://github.com/lord63/choosealicense-cli). You can have a try.
&gt;I'll second this, but go a step further. To the extent that your IDE is doing things for &gt;you, it's going to hide/complicate the details of what's going on and actively &gt;interfere with learning the basics. We're using Python. Old-timers complain that the use of managed code itself hides the details of what's going on and prevents you from learning the "basics" - pointers, manual memory allocation, etc. We shouldn't be afraid of being high-level. 
I came here for the Docker Integration!
There's actually a strong argument for learning at least the basics of C or a similar language before learning python. All the best python programmers I know have a pretty solid understanding of the mechanics of how python does what it does, and can write C code when they need to. But, more to the point, you can get by just knowing python and knowing nothing about C or other low level languages. The 'basics' I was talking about is thing like basic project layout and using the shell to run a script. If you don't know how to do that stuff you're not going to be able to do any real world project with any practical value, and IDEs can hide a lot of that stuff fro you making the learning process more difficult.
It is definitely possible. I don't know what links the pages to which templates, but within a template you can loop over python variables defined in your conf. Maybe I am not understanding, how is your portfolio defined?
&gt;There is always the possibility of being stuck on a machine that only has VIM &gt;installed Unless you're a Linux developer, there's zero chance of ever being stuck on a machine that only has Vim installed. 
This is the right answer, here! It's the IDE designed for learning and also grows with the user. https://www.jetbrains.com/pycharm-edu/
You created your program in Python 2.x but you using Python version 3.x. 
Sending as PM...
Asyncio is also in the "unpleasant" position of having been designed and implemented *just* before proper, distinct, real-mccoy coroutines got added into Python 3. So now it's been retrofitted with them, rather designed with them from the complete outset. Otherwise it might have looked "just as nice" as this. Even go has some different keywords when you want to invoke its greenthreading features, `go`, `chan`, `-&gt;` &amp; `&lt;-` and `range`. And you do need to keep in mind about your code flow when writing things concurrently, so it's not as if you can be completely oblivious to what pattern you need to write things in and still get concurrent design that works. It's just about how sensibly unobtrusive you can make them. The big advantage of asyncio is that it's got a standard event loop interface which allows everyone to interop from the get go. Gevent monkeypatches, which works 80% of the time; while curio provides "*-alikes" which don't really allow interfacing with 3rd party code at all.
Only one way to find out, I suppose.
Thank you!
Really cool features. Too bad changing the licensing model means I probably can't renew my subscription until legal has a 6-12 month review of the new licensing agreement.
I wouldn't. Now our opinions cancel out. 
Hi there. You have posted a learning question to /r/python. These types of questions are far more suited to /r/learnpython, where users are actively interested in helping people to learn. Please resubmit it over there! Make sure to read their sidebar rules before posting, notably this one: "Posting homework assignments is not prohibited if you show that you tried to solve it yourself." Show them that you've tried to solve your problem and you can get all the help you need. Cheers &amp; best of luck!
10.6 is the last die hard OSX, before things started getting IOSy, App Store centric and dropping support for classic apps. I held on until last year.
Atom is pretty hard on battery right now but there is a [beta release](https://atom.io/beta) that is supposed to be better. I think you'll be happiest using Sublime Text with a Python autocompletion addon. Alternatively, you can view this as an opportunity to learn Emacs. There will be a learning curve, but it'll always be there for you and won't bug you about registration. :)
This looks really cool! Checking it out on safari books
Gevent lets you do "*-alikes" as well, if you want to. Go does require you to use special notation when you spawn a new green thread or use channels, but so does gevent (spawn, Queue, etc.). There isn't really a way around that. Any language with greenthreads or coroutines will need a little bit of extra syntax or function calls. But in Go, you don't have to use keywords just to indicate that some function or function call is non-blocking and may result in a context switch. In Go, you can write this goroutine and throw it inside of any existing code with no changes required: go func() { http.Get("http://somesite.com/") }() Or with a named function: func get() { http.Get("http://somesite.com/") } go get() If Go was designed like asyncio, you'd always have to do this: async func get() { await http.Get("http://somesite.com/") } await go get() Compare to curio: async def get(): await requests.get("http://somesite.com/") await new_task(get()) And gevent: spawn(lambda: requests.get("http://somesite.com/")) I'm not a fan of the async/await requirements. asyncio's standard interface is definitely nice to have, but I still think I'm going to stick to gevent or other languages.
i was hoping that it you'd get the point that people sub'd here aren't just going to do your homework for you, jesus christ
If you run into a package installation bug, it's probably a path issue.
Does it really take 10 hours to learn this? 
I had this trouble after upgrade, all my colour themes are screwed, the class names show in Black :(
Doubt there is a big reason to go either way. I think there are enough "holy wars" to show both are great choices. It is probably largely personal preference. I like Vim, but I know many who like Emacs.
python3 -m http.server 8080
a, b, c = get_abc()
Thanks
Hi, Thanks, could you please recommend me some material to learn CubicWeb, from foundation.
Probably not. I only know the basics of Vim, nothing about its Python support, so I didn't mention it.
I also posted there, thanks
Updated my post above.
Oh, personally I've been running [neovim](http://neovim.io/) for the past year and believe this is the future of Vim editors. But for an internet stranger whose skills &amp; target platform(s) I don't know, I prefer to keep it simple since upstream Vim I know works well everywhere. 
Awesome. I think the take-aways are to keep your build systems self-contained - if you're using homebrew (great idea on osx) then understand its going to assume homebrew everything. And then know your app. The other trick with homebrew is to 'brew list' your installed packages then blow it all away and refresh when you upgrade osx itself, in case Apple changes something that breaks your stuff. 
Read github python code more often, especially projects like python requests.
Care to elaborate? Setting up a project works fine for me in intellij
Yes, it uses relatorio [1] to generate printable document otherwise you can define object for which the table is the result of a SQL query. [1] https://pypi.python.org/pypi/relatorio
Hey, this looks great! A few style examples might be nice (the equivalent of providing a CSS file, for example).
http://cubicweb.readthedocs.org/en/latest/ surely contains the most complete information ... There is a tutorial within.
And if you're a student, you can get a free license, which is neat.
Please [file an issue](https://youtrack.jetbrains.com/issues/PY) and describe the problem in more details.
Here is the complete documentation: http://doc.tryton.org/3.8/ And some slides I made for the conference in Leipzig last year: http://downloads.tryton.org/TUL2014/crash-course.pdf It's not what I would call a tutorial but they are starting points.
Pretty cool! Good luck with development. Also, thanks for mentioning Kivy as a solid non-web option. You really do get to have quite a lean library with the browser, compared to the 'weight' of Kivys dependencies.
http://blog.jetbrains.com/pycharm/files/2010/07/PyCharm_Reference_Card.pdf
Vim and Python pair quite nicely together 
This is how my blog looks like right now: http://habeebq.github.io/ You can see that I have a project page, but i wrote that simply in markdown and then Pelican made a static page for me.
User / Pass ? 
See here: http://www.tryton.org/download.html
It would be great to add some information about requirements on the landing page there. Are any libs needed, if yes: which? What python version: 2 or 3 or both?
Notepad. lel Notepad++ that is. http://notepad-plus-plus.org/
&gt; gives you power of web technologies in your desktop application Sounds like Electron, no? 
Try importing a pylons project with existing source, and no virtualenv. It's a mess; it detects it as a java project, doesn't distinguish third party libs, etc.
Yup, same idea. The difference is Electron uses Node for backend, while pywebview is Python based.
Looks nice! Can't wait to try it out!
http://lmgtfy.com/?q=pyqt
Have the users input a really easily parsable format, like S-Expressions with RPN, write a simple parser, and tell your code how to evaluate only the symbols that you want. This is actually how I've done stuff and it works pretty well.
You can add any additional metadata to the file you like, for example in my pelican-based blog [I have posts for academic publications](https://raw.githubusercontent.com/mfitzp/martinfitzpatrick.name/master/content/publications/metabolic-profiling-predicts-response-to-anti-tumor-necrosis-factor-alpha-therapy-in-patients-with-rheumatoid-arthritis.md). All that stuff at the top is the article metadata. Then it's simply a case of filtering [based on that metadata in the templates](https://raw.githubusercontent.com/mfitzp/martinfitzpatrick.name/master/theme/templates/article.html). I use it to display the additional metadata, but you could simply skip those items during output on the main index. For the portfolio page itself, use a tag and a tag-specific template and you should be fine. You could also filter the front/other pages to exclude that tag from listings. This will mess up "display 10 items", but you can push these items out of the normal logic by setting a long-ago date if it is a problem.
Alas, RestrictedPython does not seem to support Python3. Aside from that, it looks like a pretty decent solution
Looks really nice, is it possible to Package this like Node-Webkit or Electron. Then it would take away browser level limitations Edit: Had quick look at code, * You can compile this to Electron App if you dump the output to File instead serving to WebSockets. * As you are doing more Python to Javascript conversion, look at [Brython](http://www.brython.info/tests/editor.html?lang=en) * This would be great once WebAssembly comes up.
In this way there is the possibility to lose portability. Which kind of limitations have you found?
i have an idea of project. Can we build or create an python application which can permit to view and explore à map without qoing on internet. This application can use shapefile (shp) or pbf files for example. i'm thinking à version for PC, tablet and smartphones. Thanks ans excuse my english. 
&gt;At this point in your career, you’re a glorified type writer that will churn out blocks of stackoverflow copy-pasta. So often very true. 
The library itself does not take care about machine hardware. It delegates the rendering to the browser. So the reply is: it manages high dpi screens as your preferred browser does.
In the /r/learnpython [wiki](https://www.reddit.com/r/learnpython/wiki/index) is a link to a [GUI FAQ](https://docs.python.org/3/faq/gui.html) on the official website. I also like PyQt, but it's the only framework that I've checked out yet. BTW, I heard GvR thinks they should've included [wxpython](http://www.wxpython.org/quotes.php) instead of tkinter.
Yes, have a look at this [SO Q](http://stackoverflow.com/questions/28964442/run-python-script-on-node-webkit-startup-nw-js). I am willing to contribute on combining Brython, nwjs and Remi. 
thanks for your kind help. After searching on the Internet I got the answer. Next time I will post in /r/learnpython
Makes sense I guess. Maybe it'd be better to start off with "vanilla" vim and get comfortable with it and then play around.
Adding on to this comment, it's really nice that it's cross-platform and cross-language. I learned Qt in Python and was able to easily transfer that knowledge to Common Lisp and, of course, C++ (its original language)
[Kivy](http://kivy.org/#home) and [Enaml](https://github.com/nucleic/enaml)
Awesome thanks, this is helpful. I was actually just reading that - I'm going to have to give it a try. I do wonder though if this is functionality that could be useful to others, maybe I _should_ try to create a plugin.
Allegria!
&gt;it starts a webserver that will be accessible on your network. I feel very uncomfortable opening up servers on my client's machines. What's to stop some wardriver or random person at a coffee shop from port scanning, finding the open port, and having a bit of fun with my client's database?
It looks like [PY-17449](https://youtrack.jetbrains.com/issue/PY-17449). Please vote for this ticket and put your screenshots and your color scheme in the comments.
Good effort. From a brief look, one thing you could improve is check for duplicate URL instead of just blindly inserting. You could create a function that takes a url and returns an id. The function itself should handle the logic of checking if the url exists first before doing an insert and then returning the newly inserted id.
Thanks!
I was looking into Tryton some months ago, but it seems it's lacking some documentation ;( But it seems like a great product. Does anyone know of any subreddit or forum dedicated to CRMs like this or odoo ? And especially, how to custimoze them or add modules.. thanks !
* Something you need, but doesn't exists or not good enough. * Something implement by other language which you not good at it. * Or, you need more experience to find out some unpleasant things, you must do those things many times. Eat Hot Tofu Slowly.
For the documentation: https://www.reddit.com/r/Python/comments/3r9tuf/new_release_38_of_tryton_a_python_framework_to/cwmpfey The forums: http://groups.tryton.org/ or in french: http://groups-fr.tryton.org/ But there are other means to get in touch with the community: http://www.tryton.org/community.html There's also the tryton subreddit but it's kind of empty … edit: added the community link
If you have more coherent data, you can use `m.startswith("the")` that should be faster and more readable than `m.split()[0].lower() == "the"`. With not so uniform data, the lower helps too `m.lower().startswith("the")`. Or some wierd version with slicing `m[:len(word)].lower().startswith(word.lower())`
This demonstrates [tuple unpacking](https://python-programming.courses/general/tuple-unpacking/) from a function return value. The idea is you can unpack a tuple: my_tuple = (1, 2, 3) a, b, c = my_tuple # a = 1, b = 2 and c = 3 If you combine this by return a tuple from a function, you get: def get_abc(): return (1, 2, 3) a, b, c = get_abc() # a = 1, b = 2 and c = 3 So a function can return multiple values by return them in a tuple, just unpack after returning the value :-) 
[m for m in movies if m.startswith("the") or m.startswith("The")]
Quite hard. And quite interesting. My dad has a much simpler technique, he just says "hold the line for a sec", and proceeds to do something else for an hour...
This looks quite nice, OP. What license is it under? I have an upcoming project at work and I need to implement something in Python, so this would be great for that if your license allows it. The scripts would be an example interface for a hardware product, and would be given free to customers, though it wouldn't be open source. Would that be alright?
Awesome. I didn't see a license on the repo so I thought I'd ask.
REMI + pywebview seems like a good idea.
Ah yes. Forgot about .startswith(). Nice suggestion.
Super helpful, thanks. Was looking for this information and couldn't find it.
I had someone wait for 30 minutes on that trick. 
The GUI opens in IE automatically, even though Chrome is my default browser. I can view the app properly by typing the local url into Chrome, but I can't seem to stop IE from opening every time I start running a new app. Just a minor annoyance. Otherwise, this is a pretty cool project.
Graphical user interfaces interfaces :&gt;
See my other reply.
There are some explanations about this: http://stackoverflow.com/questions/1532884/open-ie-browser-window I will consider to allow to specity the preferred browser by code.
That would be a nice addition IMO. I believe that stackoverflow question is a slighlty different problem than the one I'm encountering. The problem may be circumvented by specifying that the GUI open automatically in Chrome explicitly.
[r/learnpython](http://www.reddit.com/r/learnpython)
In the github project description, "indipendent" -&gt; "independent".
I'm not sure what you're referring to. I've never noticed scipy having strange behavior with pip. It'll try to build if you're out of date and trying to upgrade, but I wouldn't call that strange.
Done, thank you ;-)
An Alpine Linux solution would be ideal.
I like the idea. But the windows native web component will not get you far. https://github.com/cztomczak/cefpython might be a nice option...
yeah, but it seems a pita to build pypy for it. appreciate if you know a solution.
Thanks! Can you explain how I go about doing this?
What about wxPython ? I have a solo project I did with that and it worked really great with a GUI creator (really fast pipeline). But due to the nature of the project I am forced to keep using a legacy version and python 2 so I don't know about further development on it. Looks great though.
&gt; and using pip for the upgrade has been returning a compile error for me on two separate machines That's not a pip error. That's a your computer isn't setup for building Python code. I use Windows and get the same pip error you do if I try to build scipy from source. I don't build scipy and I don't want to. &gt; Anyways, yeah. Scipy and pip have never played nicely for me, and I just want to make sure my `pip install lsalib ` command works with a proper setup.py file. It's either - not your job - it is and you should use conda, which I'd say is still not good enough if they're not going to be modifying source - it is and you should build an exe using pyInstaller
You should start by checking out the [getpass](https://docs.python.org/3.5/library/getpass.html) module in the standard library.
Maibe you should try blender 3D.
Have you tried it? I read there might be some issues with distributing finished work onto multiple platforms with blender?
it is based on sklearn classifiers. It saves you the work of partitioning your data and setting up classifiers yourself. Here you only give the data and call the "run" method 
The screenshot makes it look like a 10-15 year old web app - not very appealing. What advantages/differences does it provide over more established alterantives like pygtk?
Right, but if someone will try to upgrade your package (pip install -U your-package) pip will try to upgrade scipy as well, even if it is installed via apt-get, and it is likely this will fail; without scipy in install_requires pip install -U will work.
Great!
Great!
CEF support is planned (help is welcome!). CEF is big though. It will increase your application size by 30mb, which might be not suitable for simple applications. I target IE9 (default for Windows 7) for my apps and it is not all that bad.
Beyond making sure your HTTPS server passes the Qualys SSL Labs, you can also do more explicit checking in the client. Checking the certificate authority directly, making sure it's the same as the one you used. Make sure that the SSL cert hasn't been revoked, etc. You could also encrypt the settings file itself. There's other stuff you could do. I assume by 'obfuscated the code' you mean the program is not a .py file on the client. You could check that the sha1sums of .pyc files match what's expected so you know it's unmodified, check the list of programs running, whitelist the list of programs and refuse to run if there's extra stuff. Delete pdb.py*. Get a list of *all* files on the kiosk. Lock usernames to IPs or at least a range of IPs. Geo-locate IPs so the kiosk can't go wandering to another state or country. Allow usernames to log in only once so even if someone has a login, it's not useful. If there's money to upgrade the hardware, there are usb security keys (assuming the kiosk's have USB ports) that you can plug into the kiosk that does encryption stuff that you can plug into the client so that it's hard to login with out the key, which makes it much harder for the attacker to clone the machine and put it in a VM (mac address is trivially cloneable, cpuid is a bit harder) unless they also steal one of the keys. (I've heard of yubikey but there are others.)
To save them from having to find a few other utilities: * [pyinstaller](http://www.pyinstaller.org/): A great one, easily creates a single executable file (or a directory) that makes shipping it easy * [py2exe](http://www.py2exe.org/): I've not used this I have mostly loved using `pyinstaller`, though I have heard cx_freeze does nicely too.
I use Kate, KDE's advanced text editor, for my python work, even on windows. It is absolutely one of my favourite pieces of software. KDevelop does a heck of a lot of things really well, but I've never gone through the learning curve required to use it with python properly. Anyone have any experience?
Wow, Pyston is really coming along nicely!
No, I never do nothing related with games. But, I do many things related with 3D modeling. Blender comunity is huge and mature. [This](http://www.makehuman.org) is an example of the power of blender+python3.
IPython, ipdb, jedi, epc
Sounds great, as long as the community hasn't... pyston it... I'll see myself out.
The problem is this could be a nation wide implementation. We have to outsource support in case of hardware failures etc. So how do we trust technicians? 
Thanks for the submissions.
Okay, thank you. I've downloaded it, and am looking at some tutorials. I knew blender was a great modeling tool that was popular, I guess I hadn't realized it was a game engine/framework as well -- or from what I had briefly read -- I thought I read there were distribution issues for games created with it... but I'll check it out and see what I learn.
Kivy works with python3 fine, including on OSX. I think the download page is referring to the specific prebuilt package you can download there, but you can build kivy yourself without this restriction. I'm not sure why we don't have a python3 download on there though. 
The demo screenshot is an improvement over the demo screenshots in the pygtk docs. A real app is not the same as a list of widget components. The two interesting things about this project that instantly stand out for me are no external dependancies, and it targets the browser. Note the 'remote' in the name.
You should get into using virtualenv. Virtualenv allows you to have a specific python version, and all the requirements of you app (flask, django etc), without needing to set those versions for the entire OS. This way you can have many different projects with different versions / libraries. PyCharm will pick up on your virtualenv and reflect that by seeing the correct libraries and running debug against the right python version. Its a real godsend, and I could not work without it now. What is your OS?
Are you planning to do all the altering landscape/generating landscape logic in Python?
&gt; As we’ve implemented more and more APIs using CPython’s implementation, it’s become hard to continue thinking of our support as a compatibility layer, and it’s more realistic to think of CPython as the base for our runtime rather than a compatibility target. Something I'd be extraordinarily cautious about as all other attempts I've seen at supporting all of the C-API immediately makes removing the GIL and other architectural flaws near impossible. Then again, Dropbox's C-API code may be extremely restrictive and well behaved.
You need to consider when Guido made that statement. I use both. PyQt is far, far better than wxPython, but alas...licensing.
Would someone explain to me exactly what this 'notebook' stuff is? I've seen videos and read about the IPython Notebook but for some reason I just can't get a grasp of what exactly constitute's a 'notebook' here. Is it like a data IDE? A GUI data manipulation program? Something else?
How about a scraper that scrapes your favourite job sites, finds and removes duplicates, and ranks them based on various things like location, keywords etc.
At its most basic, ipython is a REPL with some niceties (code completion, introspection, debugging, plotting, etc). All of your inputs and outputs are grouped by cells, which are discrete amounts of work (cell one calculate x, cell two add x to y, etc). A notebook is a single document that can save all of the input calculations, markdown notes of what is happening, and even the rendered plots. The real advantage is the ease in which you can do exploratory analysis where you might want to try many variations of an idea of document a workflow. Some of the more impressive work are the books which mix code and explanations so one is encouraged to run the code in place and experiment with different inputs. [This is a good example](http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/) 
&gt; Pyston is an open source Python implementation that aims to be both highly compatible and high-performance. It uses modern JIT techniques on top of LLVM, and natively supports many CPython C extension modules via a recompile.
Don't know yet, but I can always drop down into c++ if I need to do more lower level stuff, correct? I'm a big believer in the idea of using the highest level tool that can do the job -- for the productivity advantages you get with that. Then drop down into lower level tools (c++ / assembly / etc) for the areas that require that. 
So it's essentially a tool for ETL? Or mostly analysis?
Step one: Deobfuscate your code. It does absolutely nothing to improve security, and makes it more likely that you will introduce bugs (including bugs that could compromise the security of your application). What exactly is your threat model here?
&gt; makes removing the GIL and other architectural flaws near impossible Pyparallel has solved the GIL problem it: http://pyparallel.org/
Would be great if it could work with nuitka, so that we could compile standalone binary executables with a portable GUI! http://nuitka.net/pages/overview.html 
&gt; And the best part? It works across more than 20 different programming languages! Boy I'll be that's really handy for those writing command line apps in 20 different languages...
 what's wrong with argparse?
Well, it's sorta nice. I find myself switching between python, Node.js, and Go a lot for work -- so it's cool to be able to use the same reference docs for building CLIs in all the languages.
Tow Mater: "He did WHAT in his cup?"
By tying itself to a Windows-only solution. Cute implementation, but absolutely useless for any real business that involves servers. 
RAS Syndrome
You can, but for heavy numerical crunching such as marching cubes and the other algos you'll need for voxel worlds, you will almost definitely not be able to do them in Python at 60 fps. It might save you a lot of time to use a more established game engine for something like this. I think you will find yourself fighting python more than benefiting from it's productivity advantages. If you want a higher level scripting language, Unity is probably the best bet. If you want something more open-source there is [Godot](http://www.godotengine.org/projects/godot-engine), and honestly modern C++ is pretty productive (one of the reasons Unreal has dropped alternative scripting languages and gone with just C++ or the visual scripting blueprints thingy). I just don't see Python as all that advantageous in a 3D game project where you are inevitably going to spend a lot of time doing number crunching to get 'minecraft style altering'.
Apparently the build was broken until [this commit](https://bitbucket.org/pypy/pypy/commits/55c0403ff1d9). Have you tried compiling master from git?
&gt; If you cannot trust your technicians, you are pretty much screwed This is the answer. Nothing more needs to be said.
I'm working on a Mac 10.10.3 
The system is fundamentally designed wrong if it needs to allow untrusted people to access a machine that contains secrets. If you can access the hard disk and source code then there is nothing you can do to stop a determined and informed attacker. It's a bad design.
&gt; It's just sorta verbose -- this is pretty clean -- write the docs and it does everything magically for ya! Don't know about that. I skimmed through the blog and still couldn't figure out how to use. Looking at a few examples of argparse, I can cook something up right away. 
This looks awesome! This can definitely help easily "distribute" automated test utilities I write in Python for work. Knowing HTML and CSS also will definitely help for personal customization 😉 mad props! 
It absolutely hasn't. First, it doesn't work on anything other than Windows which is a total non-starter, and secondly, *while you think it may work around it* it does nothing to solve significant use cases where I actually need shared memory and multiple parallel threads of execution (for example in the context that a work pipeline is able to be split into parallel chunks but is really time sensitive and you don't want to make to unnecessary copies). There is a whole host of workloads that can't be handled easily short of just writing it in C unless you *actually throw the GIL away*. It's a real big shame that Jython hasn't caught on more than it has.
Blender game engine creates an executable for the current OS. So to get a Windows build, you'd need somebody on Windows to create the exe. Game engine docs and tutorials are spotty. I'm working on a Udemy course on this. 
As /u/finnne says, you've got multiple versions of python installed and you're inadvertently using them separately. To fix this, open your project in pycharm. Go to file-&gt;settings-&gt;project: -&gt;project interpreter, and change the interpreter in the dropdown at the top of the page. Pycharm will list your installed packages so you can make sure you're using the correct one. 
Can you give me an example? I'm thinking you mean something like this: things = zip(list_of_x, list_of_y, list_of_z) combinations = [combine(x, y, z) for z, y, z in things]
No excuse not to play around with async def and await in an ipython notebook any longer!!!
Ah I see. It looks like `zip` is the key aspect here. If you were just iterating through the label, I think it would be fine to use a single comprehension. return [fibbonacci(n) for n in range(10**6) if '3' not in str(n) and n % 2] More generally, we can see this as a case of avoiding nested generator expressions (with `range`, `zip`, and similar functions from `itertools` excepted of course.
this is awesome! just need a simulink alternative in Python 
I don't know that it has much activity these days but look up a game called Vindinium. You write an artificial intelligence bot to play the game against other bots and can write it in any language. The server code is open source as well so you could set up your own test server. Pretty cool IMO. I am currently working on a bot for it in node just for the heck of it.
Not at all the same. 
If your main safety concern is online interaction/privacy, you can do everything local using IDLE, the default dev environment that ships with Python. It's not very advanced, but great for beginners. I use it in my middle school classes.
These things apply equally to Python http://stackoverflow.com/a/3349728/149482
I don't know how active it is but SimpleCV provides a pretty fast track to working with images. I think it has only python 2 support but its worth a look.
data IDE in browser. period.
I didn't want to go there, but If we're going there anyway: &gt; simple things makes the world simpler should be "make" :)
Setup firewalls if you really want to block kids from getting places. Then again, if you are in America, I'd say the kids should have the freedom to look at what they want. Anyway, consider blocking standard ports via firewall rules if you don't want the kids to do certain activities. With Python, it may be possible to make a client for any protocol if the kid is that smart or finds the proper module. So you can no longer depend on applications blocking students.
I think this article fails to address the number one reason people don't switch: legacy code bases. Maybe a plug for pymatbridge would help convince academics with years of useful scripts built in Matlab already
maybe the author should warn that the @ operator is brand new and likely not present in older installations of python/numpy.
conda and python 3.x i've been using them for projects last few months, and i'm never going back to 2.x
Functions are objects, so you can just define a new function inside your `make_function` function with the constants you need, and then return it. Alternatively, look into `functools.partial`.
I knew about the version specifiers. I was curious about how it solved the problems OP was having.
You can configure if the browser have to be opened automatically by a parameter ' start(MyApp,start_browser=False)'
I'm pretty sure it should work with nuitka, as it uses only standard python libraries. 
`r.content` is raw bytes, `r.text` is decoded Unicode. BeautifulSoup wants `r.content`, as it tries to decode the entered data itself.
Ok, thanks. What happens if you don't include them?
/r/learnpython
For sure we will do this.
Not anything drastic. You simply will have a littered console from all your outputs, old variables (if you didn't already redefine them), or a bunch of figures and plots open in other windows. These commands are not needed, but they're pretty useful when moving from different tabs in the MATLAB IDE if you're using the same variables across tabs. Hope that helps! I would compare it to similarities in Python, however, I'm a beginner in Python!
Matlab numerical optimization is often much faster esp stochastic or non linear problems, and esp if you dont provide jacobians or Hessians... and even then sometimes scipy doesn't work at all. because the quasi newton packages in scipy is just not that great and when you look at what matlab can do it's downright abysmal sometimes. Most guys I know dont use scipy optim pack instead opting for external packages like ipopt for the non linear programming problems... but matlab is still faster than these packages. Not so critical for most basic machine learning problems since the loss function is convex /quadratic and solutions are available on something like scikit learn ... But def not sufficient for more advanced optimization routines eg mc optimization or mixed model mle work Such computation-heavy work will see better times in matlab.
&gt; clear all; &gt; &gt; This removes all variables from memory. Amongst other things. It also removes all breakpoints, for example.
The issue is that MATLAB scripts share all of their variables (their namespace) with the command-line interface for that session (which must always exist). So any variable in the command window, or any variable from any previously-run script, will also be used in your script. For this reason, it has become a habit for many MATLAB users to reflexively clear everything before running a script, to make sure that nothing left over from previous work will affect the current script. That is what this line does. And I mean *everything*, including closing figures, clearing the command window, clearing breakpoints, and so on. This is not the case with functions. Functions are a different type of file in MATLAB (there can only be one externally-visible function per function file), and they have their own set of variables (their own namespace). When working with MATLAB, I personally never use scripts for this reason. I always use functions. That avoids the problem entirely. But since MATLAB uses pass by value, this can be expensive when working with large ~~arrays~~ matrices. But I rarely use MATLAB for working with such data so it isn't as much of an issue for me.
One of my recent assignments is to convert a set of Matlab utilities into python. I suggested python from the beginning due to its ease of use, and I have no regrets. Switching between lists and arrays is a bit of a chore when working with complex numbers, but I haven't run into anything that I haven't been able to solve with a million print debug statements. The only issue that I can think of is the size, if you plan on redistributing small utilities. Using pyinstaller, my 70kb script becomes a 21mb executable, which is something that I have to do because of customer specifications. Granted, it uses a good amount of third party libraries, but in any case I'm glad it's worked so well for me so far. 
While great news, I would prefer to hear that the mkl package is ready for python 3.5 :)
It's reason enough to upgrade to 3.5/numpy1.10
Even tight loops aren't so clear-cut. MATLAB does have a JIT, but that is working on top of generally slower and less efficient loop handling. So whether the JIT is enough to overcome the inherent limitations of MATLAB's loop probably depends on the situation. I ran a simple test with a long tight loop and Python came out ahead, but I am sure you can come up with others where MATLAB comes out ahead. MATLAB: function looptest m = 1000000; ms = 1:m; tot=zeros(1, 10); for j=1:n a=0; tic; for i=ms a=a+1; end tot(j) = toc; end min(tot) end Python (with IPython) %%timeit a=0;ms=np.arange(1000000) for i in ms: a=a+1 MATLAB did it in 0.967 s, Python in 0.114 s. Python is even faster using `range`, but I wanted to keep things as equivalent as possible between the two languages.
Have you seen REMI? https://github.com/dddomodossola/remi
Simulink is a graphic programming language, completely unrelated to numpy/scipy and (besides being bundled with it) largely independent of MATLAB as well.
Yes it creates setup.py file (https://github.com/yask123/QuickPackage/blob/master/bin/quickpackage#L29) After creating `setup.py` it would automatically upload the package in pypi . &gt; Does it manage entry points to the application Nopes (currently). I should probably add it in QuickPackage. But you can easily specify the requirements for your script by creating a list of required modules in `setup.py`. Eg see this: https://github.com/yask123/Instant-Music-Downloader/blob/master/instantmusic-0.1/setup.py#L12 
One big feature missing from the article is Object Oriented Programming. I've seen too many scripts in matlab containing variables like `subject_1_part_3_no_filters` (or `s1p3nf`). And then like 100 of them. And loads of code copy-pasted with just slight differences. OOP can solve a lot of these problems and make structuring analysis way, way, way, way more readable.
In Python - since we're talking about numerical use in science - you can also write the inner loops in Cython, which with C-style type declarations basically runs as the equivalent of compiled C. And it's in the Anaconda metapackage too! Also no license issues in HPC (where everyone has a license, and the license server keeps going down).
You can also use Numba or Pypy for slow inner loops in Python.
Jupyter is quickly replacing my text editor due to much of the functionality mentioned in the post. The ability to automate the running of notebooks with nbconvert is pure gold.
Numpy support in PyPy has been improving, but I'd still avoid it for most of the scientific stack. Trying to interface PyPy with a Fortran backend doesn't sound fun...
Cool. Small issue: the first line from pylab import * | clc; clear all; close all implies that these two commands do the same thing. 
Thanks!
Someone wrote a bot that just detects pauses in the conversation and plays a random sound. I bet you could get away with saying "uh huh" a lot. Can't find the original site but here's a youtube channel of what looks like the same thing: https://www.youtube.com/user/ToaoDotNet/videos 
Clean code on the implementation side yes. Ugly code and bad UI on the user side.
OpenBLAS support on linux is a really nice addition.
`PyCharm and Anaconda and (Pycharm and Conda)` Did you see the [Conda integration](https://www.jetbrains.com/pycharm/whatsnew/) also? And... have you played with the concurrency visualization yet? Really fun.
If possible I'd recommend looking into Cassowary and auto layout.
Cassowary is an algorithm, not a library. Auto layout is the implementation of that algorithm and a nice API on top for Objective-C/Swift from Apple. So you should look at auto layout as inspiration only, because you obviously can't use it from python anyway.
Yes, I've got at least one. However, please don't take this the wrong way but: 1. Who are you? What is your GitHub, GitLab, et al username? 2. What projects have you contributed to? 
you cant
Just a guess: https://github.com/softinio In summary... I see a lot of forks &amp; stars, little actual public activity. softiniondotcom --&gt; http://softinio.com (site for whole family) --&gt; http://gadgetplayboy.com/ (personal blog providing links to social networks)
Worst website ever. I have no idea what FlyElephant is.
You don't have to define manually the position on a widget in another. take a look at the examples ;-)
Fair enough. In general I'd agree and say it's a wash - but just wanted to be totally honest that MATLAB technically is jit'ed and thus *should* be faster :P
And if you scroll down one more answer you can see Tismer himself address the topic 3 years later... In 2012. Did you reach my 2nd paragraph?
Thanks! I had been trying to fix that for a while. For those who have Anaconda 2.3 installed and had that problem, you can do this without having to completely reinstall Anaconda. I'm also having issues with matplotlib. I keep getting this error on OS X El Capitan: In [1]: import matplotlib.pyplot as plt In [2]: plt.plot([1, 2, 3, 4]) Out[2]: [&lt;matplotlib.lines.Line2D at 0x10bed2320&gt;] In [3]: 2015-11-04 11:32:56.691 python[777:8896] setCanCycle: is deprecated. Please use setCollectionBehavior instead It'll still plot, but I have to manually exit the error message by pressing Return.
You can do it with the `dis` module, by directly modifying the function's bytecode. However, if you even consider doing that in code that's intended to be read by other people (or you in a few months), DON'T.
Maybe asking directly to some maintainers is the way to go ?
Same issue here when I try to start Spyder from command line or the Anaconda launcher. However, when I start it from the new start menu entries (I'm on windows 7) Spyder starts just fine and uses: Python 3.4.3 |Anaconda 2.4.0 The start menu entry uses: C:\Anaconda3\pythonw.exe C:\Anaconda3\cwp.py C:\Anaconda3 "C:/Anaconda3/pythonw.exe" "C:/Anaconda3/Scripts/spyder-script.py" which also works in command line and opens Spyder without any errors. 
I thought greenlets gave you everything stackless had. There's also coroutines and such.
Good call, I'll get to that now. I only asked here, because I would have thought that a ~15 year old project with so many people involved, (direct corporate reliance from CCP Games) surely there would be a simple and clear-cut memo I missed
Oops, meant to write programming, autocompleted python instead. But thanks for being a complete fucking asshole about it.
Quite possibly, and with the benefit of being directly compatible with CPython is surely plus. But either way, having stumbled upon the topic of light-weight concurrency only in the past few months, the Stackless disappearance has supplanted my quest for details
I am in the process of moving some codes I wrote in grad school to Python. Creating objects have been so much better! In Matlab, I would use structures to kinda replicate it for the sake of storage (ex, `data.A`,`data.B`) but I obviously couldn't have thinks like methods inside of them to do operations. In Python, it is much easier!
That's really interesting, and I love hearing about applied programming like that. Weird to think python can be used for everything from scientific papers to bit mongering TCP packets. Thanks for the info.
Thanks for the pointer! I am just experimenting a bit ;) I won't use it in real code haha
Sadly, I don't think it was ever that "big" of a project. Big as in lots of users. Eve Online is the only major user I've heard of. I was really excited about it back in the day. I believe there never materialized large user base because it was ahead of it's time (people, generally, either weren't facing the problems it solved or weren't thinking of using python to solve them). And by the time people were there existed other solutions. But, that is just opinion based on watching from afar.
If you like flask and MongoDB/MongoEngine perhaps you could help here: https://github.com/MongoEngine/flask-mongoengine Cheers!
Its just some fucking swearwords man. This is the Internet, everything is wrong and everyone is a pussy.
Would you talk to a stranger like that in person? If not why is it suddenly ok because it's on the internet? Being an asshole is being an asshole, the internet isn't some magic asshole shield.
I considered using SP for a larger project a year or two back, but decided against it since the community didn't look lively enough. Guess that turned out to be a good choice (sadly for SP)...
While the Internet continues to be unsubstantiated unreferenced speculation by idiots, I will continue to respond to it in the same way I would talk to a crazy person selling salvation at starbucks. Respect is earned not given, and basically no-one here has earned it.
cv2 works fine for this.
Damn. So, using python as a language to develop commercial software is impossible? (at least if it's an offline application)
Yeah, then you're being an asshole. How do you think people learn? You have an opportunity to reduce the amount of idiocy in the world and instead you choose to be an asshole for what effect? To show someone who is ignorant or made a mistake how awesome you are? God forbid you ever make a mistake, right?
I'm pretty sure it is just .register(), could be wrong though edit: imregister()
I'm playing with [pyglet](http://www.pyglet.org/) that is more close to an SDL than to a GUI but you can find some effort to make GUI lib using pyglet: * [pyglet-gui](https://github.com/jorgecarleitao/pyglet-gui) * [kytten](https://github.com/clockworklynx/kytten) * [simplui](https://github.com/swiftcoder/simplui)
If by that you mean "locking" your Python code, then there is not a practical way to do that in normal Python. You can give people an extra hurdle, either by (unwisely) distributing pyc files or by packaging an (windows-only) "exe" package like cx_freeze. But both of these are not at all secure, and are easy to circumvent by someone with any real knowledge or google skills. You absolutely can use Python to develop commercial software. There are tons of commercial applications written in Python. You write the code, you license the code, and you sell people the right to use the code.
&gt; if you can use matrix operations they are much faster Same goes for Python. Numpy does exactly that. If you're doing big data in pure Python, you're doing it wrong.
Yea it can be frustrating, I am on OSX as well and using the anaconda install removes a lot of that frustration, when I type python I get 3.5. If I want 2.7 I can explicitly call it but everything I install is for 3 in my own home folder. 
Reddit is written in Python. :-)
As far as I know they do
People don't learn on the reddit. They come here to have their ego massaged and their views reinforced. People learn at school and in the real world, which is the part of reality I actually care about.
&gt; Eve Online is the only major user I've heard of Dont forget [Nagare](http://nagare.org) - the pure python web framework where the entire web app is nothing but a Python object graph.
I commented on this in the Matlab sub. In the author's defense, he says farther down that it is better not to do this
I'm surprised it took time for someone else to have mentioned it, and even more surprised at how overlooked you were. We're going to get to the bottom of this!
Rackspace uses Python and I think it is a pretty good successful example. 
have fun with ctypes
It's main features are microthreads, channels and coroutines. So, basically a Python with Go's concurrency model.
Dropbox uses Python. The bulk of the code they write (with the exception of their native mobile apps) is written in python. This includes their desktop apps for osx, windows and Linux. If you go through the big names of social media you hit some pretty big python users. Instagram, Pinterest, and Tumblr are all big python users.
As others have noted, when we were at "peak Stackless" there were few other options for large-scale concurrency. Not just in Python but across the board. Those who were interested in Stackless have probably moved on to greenlets and gevent if they are still using python, or else moved to languages like Erlang and later Go if they actually ended up needing large-scale concurrency. Fifteen years ago I had a startup that had to make this evaluation. The async module was all that was available and it really, really sucked. The choice at the time was between Stackless or the (then) new Twisted project. We went with the latter and for a few years it seemed to be the right choice, but callback hell eventually pushed me to start reimplementing in Erlang as a side-project. If greenlets/gevent had been available at the time we would have been all over that.
&gt; channels and coroutines Where can I learn about these and what they're good for?
Right. If you sell some Python code, what you give away will be completely visible to everyone who has it. So it would be very easy for them to distribute it or modify it or whatever. This is true of absolutely all code, though. Remember, at the end of the day your target platform has to actually execute the code, and the architecture of that executable is well known. It's just a bit *more* true for Python since it doesn't get compiled down quite so far. For example, if you write some code in C++ and distribute the compiled binary, someone can still disassemble the code and see what it's doing and make changes. This happens all the time with pretty much every game that anyone makes, if it's at all worth the effort someone has already disassembled the game binary and released a "cracked" version to remove any copy protection. This is completely illegal, and would be just as illegal to do with properly licensed Python code. The decompiled Python would be a lot easier to read than a disassembled binary, though, since you can decompile Python all the way back to Python, but you can only really disassemble back to assembly.
Maybe people don't learn on the internet because, instead of advice and helpful criticism, they are confronted with assholes at every turn who are more interested in punishing ignorance than correcting it. More to the point, lots of people do learn on the internet. Maybe you don't encounter them because they don't want to deal with the typical hostile redditor. In other words, perhaps it's more you than them.
I had three listed and tried switching to all of them but none of them had pandas 
Nah, I've just been around for longer than you. 
Is there no way to prevent untrusted parties from having physical access to the machine?
Been waiting ages for this! Just installed and hoping my switch to 3.5 is gonna be permanent. 
&gt; The GIL has many effects that people now expect Python to have I've not heard of this before, could you give some examples?
Anaconda is the best thing that happened to Python ever. Apparently open source communities really, really suck at developing packaging solutions. It takes a for-profit company to lay down the law, this is how we do it, and dedicate a person or two to actually package 99% of relevant projects using their stuff. It's not even that their way is better than the alternatives, it's that it's the one that has no alternatives as end-to-end packaging goes. Having alternatives is precisely what stunts open source attempts at packaging, it seems to me. The only thing we might need from now on is a CentOS to Continuum Analytics' RHEL. Just for safety's sake, it should work in exactly the same way (now that they solidified and singled out the way for everyone) but not depending on a for-profit company's benevolence.
Didn't work :( 
Nice fud mate
I suggest the Go tutorials and documentation, they do a good job of explaining these concepts. https://gobyexample.com/goroutines https://tour.golang.org/concurrency/1
I don't think Stackless has anything to propose about "scaling across many cores".
&gt; (people, generally, either weren't facing the problems it solved or weren't thinking of using python to solve them) So, C++11 was what happened to stackless? Timing sort of matches, if you look at the time when we finally had a stable version of GCC implementing it. I mean, a lot of the people who could use Stackless because of hard performance demands now can just use the modern C++ which is a pretty neat language, all things considered. While on the other hand the people who don't care about performance so much, or who care about the performance of their numpy kernels but not about the Python glue, don't have a compelling reason to use Stackless over CPython. And the people who really care about the performance of their webservers use gevent or whatever anyway, and it's better for them at any conceivable measure except... nothing really.
Yeah, I always thought it was more of an academic experiment with no expectation of creating a robust tool. A lot of the features it had built in you could implement in CPython with some clever coding...but as you say, those features weren't really in high demand. Getting a fractional speed improvement in a Python app that's already 100 slower than the equivalent Java app or 1000 times slower than the equivalent C app isn't going to sell. People don't use Python because it's a speed demon.
[Google uses it](http://quintagroup.com/cms/python/google), for various projects, including something called YouTube, which is sort of a successful venture I guess. 
I got rid of 3.4.3 entirely in the upgrade, so alas that's not working for me :/ Still, with a decent text editor and IPython still working it's not too big a deal!
You know, I have spent a lot of time arguing against the "just google it" attitude, but sometimes there is a false alarm and someone is actually saying "Google worked for me". I think it's the conciseness of the response that comes off as asshattery... and linking to Google can come off as patronising. I think /u/darthmdh would have come off much more charismatically by saying something to the effect of: "I have done a lot of self-teaching thanks to Google. I just Googled my problems until I found the solution; and I feel this might be the best route for you, because nobody is going to be able to tailor their response for you the way that you can for yourself by rapidly re-phrasing and chaining your web searches." "Just google it" is a non-answer. You might as well not provide any response at all-- but "Seriously-- google more, it will help you grow" is a legitimate sentiment that is worth communicating. 
Looks pretty good, I have a couple of things I would change. Are you open to pull requests?
Can = call. I'm on mobile. I have fat fingers due to my weight. My single mother developed a drinking problem when my father walked out on us and I had to raise my siblings. We needed cheap food and developing good eating habits wasn't an option. We got along okay and I ended up going to college but my mother's drinking and depression spiraled out of control. My younger siblings ended up getting out as soon as possible and cut ties but the lasting psychological damage was done. I'm moving forward and all of us are seeing some sort of therapist to help adjust to normal society. My mother is in a rehab clinic and I visit her every so often. My siblings don't want anything to do with her but everyone needs someone. My sister developed an eating disorder to cope and my brother has severe depression to the point of mild ptsd as a result of bullying in school. I'm mostly fine. We all move forward. Also your functions only change value because the output (return value) are dependant on a random variable. Functions that don't return anything can't really be thought of in this way.
&gt; Now i obvioulsly know this is true so you agree with idiots ?
I doubt it, but whatever helps you reconcile being an asshole to people. At least you don't delude yourself into thinking you're helping them. 
Youtube, Dropbox, Yahoo, NASA, CERN, Reddit, Google App Engine, BitTorrent, Instagram, Pinterest, Tumblr, Linux tools, Spotify, Quora, Cinema 4D are all written in Python. Source: https://en.wikipedia.org/wiki/Python_(programming_language)#Use &gt; Large organizations that make use of Python include Google, Yahoo!, CERN, NASA, and some smaller ones like ILM, and ITA. &gt; Libraries like NumPy, SciPy and Matplotlib allow the effective use of Python in scientific computing, with specialized libraries such as BioPython and Astropy providing domain-specific functionality. Sage is a mathematical software with a "notebook" programmable in Python: its library covers many aspects of mathematics, including algebra, combinatorics, numerical mathematics, number theory, and calculus. &gt; Python has also been used in artificial intelligence tasks. As a scripting language with module architecture, simple syntax and rich text processing tools, Python is often used for natural language processing tasks. &gt; Many operating systems include Python as a standard component; the language ships with most Linux distributions, AmigaOS 4, FreeBSD, NetBSD, OpenBSD and OS X, and can be used from the terminal. A number of Linux distributions use installers written in Python: Ubuntu uses the Ubiquity installer, while Red Hat Linux and Fedora use the Anaconda installer. Gentoo Linux uses Python in its package management system, Portage. &gt; Python has also seen extensive use in the information security industry, including in exploit development. &gt; Most of the Sugar software for the One Laptop per Child XO, now developed at Sugar Labs, is written in Python. &gt; The Raspberry Pi single-board computer project has adopted Python as its principal user-programming language. You need to talk to your friend then explained this to him. 
You are correct, it doesnt.
Absolutely. That would be awesome. 
In 2004-2006 I ran into similar problems, ended up patching the hell out of asyncore/asynchat... which lead to me maintaining them for a couple years. Such is life.
Any reason you specifically have to have the array in your code? I would store the ints in a text (or JSON or whatever) file, gzip it then at runtime unzip the file and read in the data.
Assuming each int fits in 32 bits (so it's less than 4 billion), 1038 * 50 * 4 bytes = 200 kB as a lower bound. If you drop your limit you can get it to 100 kB (2 bytes/number, max 65,000) or 50 kB (1 byte/number, max 255). Is there an underlying pattern to the numbers that would let you generate them programmatically instead of storing them? Like if your array is [1, 2, 3, skip a few, 1000000] you could replace it with list(range(1, 1000001))
Works really well. I've used it for a number of large projects with great success. It handles really simple stuff well, as well as really complex stuff (many sub-commands and options, etc.). I'd highly recommend it.
His reasons are his tools don't autofind his codes to run tox and coverage on. I don't use tox, but coverage works fine for me. My dev tools work fine because I'm more than capable of googling for a few minutes to figure out how to do what I want them to do.
Is there a way to generate the data at runtime or is it basically random? You could have a binary string of all the integers and decode it one by one at runtime?
They do. 
Yeah that's what I ended up doing. Though for some weird reason, the compiled bytecode is longer than the original file. Not quite sure how that happened.
Interesting! Share the code?
be patient, numba wasn't there earlier today and now it is. Between the last 3.4 version and this, we were missing: * bcolz * beautiful-soup * binstar * blaze * blz * bottleneck * cdecimal * certifi * dateutil * dynd-python * future * into * llvmlite * llvmpy * mock * numba * pymongo * runipy * ssl_match_hostname (taken from a "conda update" run). Given 8 hours later numba and llvmlite exist (I can conda install numba now) - this was probably just a case of getting it "mostly out" while the build system completes. 
Check the /r/learnpython sub. Also you are mixing up ipam and outlook in your think process ;)
Your answer is likely to alienate people. His answer nurtures their interest.
Oh well, good luck!
From the overall context I believe the OP made a typo, i.e., is = isn't.
I'm in a similar situation - i found that the type of IT dept to buy microstrategy isn't the kind of dept that will let you use python and its many modules very freely. As to the technical resource, I can ask the BI team at my office tomorrow for you....
It sort of looks useful.. but to be honest I feel I could do all of this with a simple Makefile. What are the advantages of using a tool like this?