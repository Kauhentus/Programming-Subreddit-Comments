The problem is I am dealing with probably over 20 bank accounts. If it were one this would be reasonable but I am monitoring these accounts throughout the day for changes. Exporting the data is basically what I do now and am trying to eliminate this manual process. Thanks for the info
Did you contact your bank directly or find it online? I've seen API's built for big name banks like Chase, etc but maybe I need to contact a technical department for my bank.
Thanks for the insight. I would definitely run this on a Mac or Linux machine. 
If it's US banks, many of them have a private API that companies are allowed to use, and you're not. That's how services like [Personal Capital](https://www.personalcapital.com) work. But if you're willing to put in the effort, scraping should work, but you might run into some of their security walls pretty quick.
Nice at first i read it as scratch as in the childrens coding tool... :(
Hmm, good point. Definitely wouldn't be on Windows. Likely going to be run on Linux or Mac which should make things easier. 
Are you going to update your list with complaints about the current edition update for python 3? It would be nice to see which ones are still valid.
I mentioned this earlier, but your list appears to be relevant to the old version, and he just updated it for python 3. It would be nice to see your list updated as well.
What part of "develop a standard and stick to it" is hard here? If the standard is 2, everyone on the team configures their editor to use 2 spaces when they hit tab. If it's 4, then configure for 4. "I use 2 but my buddy wants to use 4" is nonsense. *pick one*. Code that follows the wrong standard doesn't get checked in. That's it. And if that tiny amount of discipline is just *too much*, then you've got problems that Python can't fix. Accommodating individuals and teams incapable of exhibiting the tiniest amount of professional discipline isn't really the job of the language or it's designers. EDIT: Also, if someone is blindly copy/pasting code between projects without thinking critically about every line, this also falls under the category of "problems python can't fix"
&gt; Turing Completeness is about what is computable. Definitely. Python3 is turing complete. I don't think zed was trying to say it wasn't turing complete so much as make a joke, but the joke doesn't work because it assumes quite a lot of knowledge from the reader, and there may have been a lot of context floating around in his head when he wrote it hat the reader does not share. I'm not sure where the line between trolling and deadpan sarcasm lies and deadpan sarcasm might not have a place in introductory texts. &gt; There are ambiguity points that make a perfect automatic 2to3 impossible I don't think this is true, and I think this is what was annoying Zed (well I think what Zed really wanted was to be able to mark a file as python2 and be able to use it transparently from python 3). What is true is that perfect translation would produce *hideous* unreadable code with a speed overhead. &gt; No translation would be required... Agreed for new projects. There was an issue with using old libraries for a while... but I think this problem has reduced.
Well, it's not just my list, it's the Stackoverflow python community's list, so anyone of us who reads the book (which most likely will happen) can/will update it.
&gt; how quickly people will turn on you How many years of toxic behavior and lies does a community have to put up with before it's ok to steer beginners away from him?
And now you have my attention. 
That's just a string
Meh, no big loss IMHO. I can think of at least three other free Python books that kids would be better off reading.
Well, this actually *is* how multiplication is taught to children. Do schools no longer use times tables?
You can use the great pygame lib. Here an example https://pastebin.com/UuTYjFpN
In my case, the first lead was in [their FAQ](https://www.usaa.com/inet/wc/faq_BankWS_Quicken_and_Microsoft_Money_BankFaqL1_index). I think the member forum helped piece the rest together.
Yeah, I'm also waiting to see how good (or not) the new version is. It will probably be updated once people start getting their hands on the book, but hopefully updating won't be necessary and the page can be removed ;)
Wouldn't the string get called two lines down though?
You need to use magic methods __lt__ and __gt__ to compare instances. Example: class Turtle: def __lt__(self, other): return self.value &lt; other.value https://docs.python.org/3/reference/datamodel.html Or you can compare values directly if troy.value &lt; bolt.value: print('Bolt wins')
Well in scientific publishing you're not supposed to use *any* pronouns, so that's for quite a different reason. 
Yeah since his "The case against python 3" i cannot take him seriously... He made himself a joke.
Nice. But trivial stuff.
The string gets passed as an argument to pandas on the next line, then the line after that the pandas dataframe has .info() called on it.
It's not really very good though. There's a very good reason we don't teach people by rote anymore, it's not because it's "too hard" or because today's youth are "too lazy" or whatever bollocks Zed was trying to peddle in his intro, it's because it just doesn't work. He's right that his book is about learning the hard way, but it's sure as hell not about learning the right way. 
https://www.youtube.com/watch?v=zhS5rtLHjp4 Number 1 seems to apply to you. 
&gt;[**5 Ways to NOT Make Money as a Developer [11:52]**](http://youtu.be/zhS5rtLHjp4) &gt;&gt;---- !! SPONSORS !! ----- &gt; [*^Chris ^Hawkes*](https://www.youtube.com/channel/UCfV36TX5AejfAGIbtwTc7Zw) ^in ^Education &gt;*^690 ^views ^since ^Jul ^2017* [^bot ^info](/r/youtubefactsbot/wiki/index)
Four spaces in front of every line to format code for reddit.
You believe that his Turing comment was meant in earnest. Lulz.
It is painless. People are acting like 2 is somehow B and 3 is C++
Hands down [cscircles](https://cscircles.cemc.uwaterloo.ca/) is the best Python3/programing introduction I've ever come across. 
Then write a better book. Can you? I doubt it. 
Others have already done that. Look at Think Python or Automate the Boring Stuff with Python.
This isn't true at all. People have different learning styles. Who are you to tell someone that is different from you that they are doing it wrong? Why is your way to learn the only right way?
Exactly this. 
In your opinion.
Look at all those people in this thread. LPTHW clearly is garbage.
You must be reading a different thread. 
I was on a mission to learn Python and ended up trying the Hard Way. I was immediately confused and frustrated by the steering away from 3, but just went with it and decided there must be a good reason to stay with 2. I studied that book for a couple weeks and quickly lost interest. I found it dull. It was like watching Ben Stein or something. Held my attention for a few moments and then I could not bear it any longer. I am now doing the Coursera class based off of the Python for Informatics (Charles Severance). Man, I am actually learning and enjoying it. I am only through chapter 6, and while Charles is pretty God damned goofy (the video where he drops the iPhone is hilarious), I find his teaching style to be very easy to follow. I am throughly enjoying it and have learned far more than I ever did in a roughly equal amount of time with Hard Way. Anyway, just checking in as one of the millions Zed "helped". Fuck that guy. 
As someone new to Python in general, what's the deal with Python 2/3 and string handling? I've heard mutterings about this many times.
This is clearly *false*. At the very least within the discussion/conclusion part you are required to use the appropriate pronouns. Your ideas, results have to be clearly presented as yours. Another reason why they are used is to avoid convoluted and verbose phrasing which some novice writers have. The whole point is to improve clarity and not to detract from the work itself with useless fluff such as : *It is thought that...* Maybe you are referring to the advice given to novice researchers but that is a whole other issue and this advice is given for different reasons. If the quality of a paper could be measured by the absence of pronoun usage I fret about the future of scientific writing.
I'm running it from my laptop currently. Although I could host it on pythonanywhere.com too.
Thank you.
No my way of learning is not the right way (I'm not sure what you think my way of learning is) but rote learning is the *wrong* way. Don't get me wrong rote learning is great when you need to remember something but don't need to understand it, but that's literally opposite of what you need for computer science. 
Rote learning is not the wrong way for everyone. It just isn't true. 
I've been around the block a few times. . . a while ago I picked up Perl because it was powerful and useful for lots of everyday tasks, however like many people, I found its syntax to be completely insane. I realized that I needed to find a new scripting language to "get shit done". I considered both Ruby and Python but ultimately decided to learn Python because Ruby felt too Perl-ish for me. Since then, I've mostly coded in Python, Java with some bash here and there, but a few years ago, I did work at a Ruby shop for about a year. It was funny, Ruby felt so weird at first but I gradually came to like it although I'm back to working with Python and Java full time again. Overall, I find Python to be a cleaner language but Ruby has a few nice features which Python lacks. I especially love the tooling in the Ruby/Rails ecosystem, I'm talking Rake, the Rails console, ActiveRecord, etc. Python either has no clear equivalent or Python's counterpart just isn't as good. But these days, I'm actually enjoying Java a bit more since I've switched to 1.8. Currently however, I'm really interested in learning/using Go and Kotlin. But yes, to answer your question, this happens to me whenever I use one language and switch to another. I've been using Groovy a bit too, mostly because it's the native scripting language for several tools that I use (Jenkins, Artifactory and Gradle) and it makes me a bit dizzy at times. Groovy is a crazy mix of Python + Ruby + Java. 
I thought what it means is that `foo` comes from the scope? foo = 1 fn(foo: foo) # since you cannot just do `fn(foo)`; positional arg But I don't understand what would then be wrong in Swift to do `fn(foo: foo)`, that seems to be the way to do it. 
OP is quitting his job because he doesn't want to exhibit the "professional discipline" required to obey the coding standard and put `pass` at the end of each block. So we can't just say "it's a standard be disciplined" because care about this shit. ----- As for copy paste I get into trouble copying and pasting my own code between my own files because crazy shit happens between vim in putty window 1 to Windows copy buffer to vim in putty window 2. And sure that is the wrong way to copy and paste within vim, and I should open the first file in a buffer within the second vim instance and yank the lines. But our path names are insanely long and it is often not worth it to try and type out the paths when copying a few lines. 
Oh! looks cool! I will definitively have a look :)
saying "it's possible to create nonsense illogical standards" doesn't mean that it's not possible, or appropriate, to create and enforce reasonable standards to solve these problems. And yeah, that sounds like a PITA and maybe copy paste between windows really is the best option you have (although setting `paste` mode in VIM has saved me tons of trouble like this in the past). I get that you're suggesting something that provide a solid indicator that your code is broken, rather than allowing you to run mangled code, but this still feels like too niche of a problem to be worth changing the language. But they're doing typing now, so maybe there's hope for some kind of annotation. 
You can use youtube-dl as a library
Gotcha. I'm sure there's an Objective C API in Mac for connecting to VPN's (just from a quick search, [this comes up](https://developer.apple.com/documentation/networkextension)). You don't usually *need* a desktop app to connect to anyone's VPN, but services like VyprVPN offer one because it's a good UX. The app will test which VPN data center is pinging the best and use it, which isn't something you'd get just using the Mac native VPN client. If you wanted to wrap that, you could probably do it with Automator.
Which book is that? 
Yeah! I made that little notebook if you want take a look! http://nbviewer.jupyter.org/gist/anonymous/fc2559d514c8468600e7e9c13de76ee5
[The Book](https://doc.rust-lang.org/book/second-edition/).
valid point good sir
no, i can try that 
never thought of it that way. thanks man. 
still getting an error without tts 
nvm got it working now... thanks for the help 
I found this, does that help you? &gt; In Tk-8.6 the canvas text element has a new -angle option https://mail.python.org/pipermail/tkinter-discuss/2010-November/002490.html
The argument about string interpolation could apply to Python 2, imo. I mean, technically Python 3 has 4 ways of generating strings: string concat using + should really be included in addition to % formatting, str.format() and f-strings. However, Python 2 only has one less than that - it misses f-strings but has the others.
Excellent. I've been meaning to start playing with rust. Hopefully I'll have time to do that soon. 
I think one big difference is that with multiplication in practise you have some input (two numbers x and y) and you want to find the result (x*y), and you can easily look this up in a table. While with boolean logic, you want to reach some result (a certain behaviour) and need to find out how to combine the input (some boolean values) to achieve that. In that case, it doesn't really help to use a lookup table if you don't understand what the relation between input and output means.
This may give you some ideas. &gt; it will give you the latest upload from the specified channel https://stackoverflow.com/questions/29204271/are-upload-playlists-on-youtube-api-v3-purpsofully-slow-to-be-updated
Learning times tables off by heart is important. If you need to know what 3 x 5 is, you don't want to have to manually calculate it by adding 3 + 3 + 3 + 3 + 3 together, and you don't want to have to use a calculator to calculate 3 x 5 either. That said, what's more important than times tables is learning *what* multiplication is. It seems like the approach taken by the author is akin to being asked to learn times tables before being asked to learn what multiplication is. What good is knowing that 3 x 5 = 15 if you don't know *why* it equals 15?
The Raspberry Pi has much of the same capabilities.
In Python 2, there were two types people could use to represent strings: * `str`, which was what you got when you just wrote a string literal, was a sequence of bytes in a particular encoding (by default, ASCII). * `unicode`, which you could get by prefixing a string literal with `u` (like `u"foo"`), was a sequence of Unicode codepoints, not in any encoding. In Python 3, the type which used to be `unicode` is now `str` and is what you get when typing out an un-prefixed string literal. The type which used to be `str` in Python 2 is now called `bytes`. Many parts of the language and standard library have tightened up their rules to forbid use of `bytes` or forbid promiscuously mixing `bytes` and `str` instances in cases where you should really settle on and use one or the other, to drive home the fact that `bytes` isn't a string and blindly treating it as one is a source of bugs. This is the correct approach -- the way Python handled strings in Python 2 caused a *lot* of pain for a *lot* of people (since you never knew when you'd suddenly get an error from Python's strings defaulting to ASCII, but somebody handed you a string containing non-ASCII characters, or in an encoding you couldn't easily identify, or... well, lots of problems). But it did require a lot of people who hadn't been affected before to rewrite their code (since the Python 2 approach was very similar to how Unix/Linux traditionally handled strings: assume ASCII and go "lol i dunno" when confronted with anything else), and those people have been vocally angry about it.
Because although it may seem like a small thing, it makes a difference to feel like the author of a tutorial has your back/is supporting you. Talking about "we" rather than "I" and "you" helps create that sense of someone who's working with you rather than just throwing a bunch of documentation at you.
But we doesn't include the reader. It refers to the writers. 
That happened to me with PHP, but I feel like PHP has always been that way even though I love the language.
Print is important but you can incorporate print in other subjects. That way you're always pushing new content while reinforcing previous content. 
LPTHW was good because it was free for novice programmers. If I had to recommend novice programmer a $30 book I'm going to recommend Python Crash Course. 
I experience some cognitive dissonance every time I switch languages. It takes a little time before I start _thinking_ in a given language instead of translating to it. I expect this applies to many people, whether they're considering Python or French.
great title, read it twice
&gt; Unix/Linux traditionally handled strings: assume ASCII and go "lol i dunno" when confronted with anything else) Leaving poor developer like me to enumerate a large tree to go "lol, WTF" when 100 out of 50k paths have unicode decoding errors.
https://docs.python.org/3.6/library/http.server.html &gt;http.server can also be invoked directly using the -m switch of the interpreter with a port number argument. Similar to the previous example, this serves files relative to the current directory: &gt; &gt;python -m http.server 8000
I believe the official online Rust book.
People do crazy things when there in love. 
And I recommend LPTHW 
&gt; But hey let's just erect a strawman of zed shaw kick it and set it on fire. An excellent idea as the miserable scumbag deserves everything that he gets. If he can't take it he shouldn't poke the fire in the first place. To steal from Tommy Docherty, Zed Shaw is to Python what King Herod was to baby sitting.
It's a crap book written by a crap person.
I know a bunion named mb 
I don't and I never will owing to the complete idiot's attitude. The only reason he's released an updated version after his rant late last year is that it was costing him money. Oh dear how sad it's far too late for him, nobody would buy the book unless they're completely brain dead. What he has actually achieved is to win the 2017 Hypocrite Of The Year Award.
The only reason? How about people have moved from 2 to 3, and so has he. He never said he would never move. 
debug=True
I hope you also don't recommend Codeacademy, or however they spell it. 
Finished my work on a telegram bot: [The Altitude Bot](https://www.github.com/abarichello/altitudebot) 
I was thinking this about doing something similar to this but for 'ini' files so you can modify configuration files within the browser. 
Would you say you have a plethora of likes for heem?
Why would they do that!?
What? What I want is perfectly reasonable. An API would be just as secure as logging in and scraping the data if not moreso 
This is the same board that's covered up for Steve Holden. Just because the minutes don't cover it, doesn't mean that hurting Zed wasn't discussed in back channels. Go ahead, vote me down for attacking the hypocritical PSF. But just like the DSF was wrong to defend Steve and hurt Zed, the same goes for the PSF. 
How come no other book is singled out this way? Why is the PSF attacking just one out of a hundred python beginner books available for pay or free? There are so many crappy resources out there and one person is the scape goat for it all. The Python community and the PSF sucks.
Most banks have a way to export to csv. You can use that as input for your visuals. If you absolutely must do it automatically, that would be pretty simple with PhantomJS or similar.
If you're in the UK, Monzo has that feature. Barclays also offers a feed but you have to jump through some hoops to get it. It's handy for when I was using Xero for my accounting stuff though.
Because the author has leveraged the book's popularity to push his toxic and often downright wrong views on python3. He's worked really hard to get the targeted hate.
Dude, ur yt channel is awesome
&gt; want to be able to call a file repeatedly but my current method of importing the file only gets it to work one time and ends the program. Ahhh.. that makes sense. Are you using `import` statements to import the file(s)? Turns out, to be efficient with stuff, Python caches the file the first time you import it. Which means that any file *only* runs the first time it's imported and won't run on subsequent `import` calls. How is your code structured? If you post some snippets we'll be able to better help you.
Sure! this is the format I'm trying to use. test.py [answer = input("do you want to go to the next file?") if answer == "yes": import test2 ] test2.py [ print ("that worked.") ans2 = input("now go back to test?") if ans2 == "yes": import test ] minus the [] obviously. I get it to work 1 time through but when I import test2 the second time, thats when it breaks
There's seems to be something wrong with the way you are using the `image` variable. The program is expecting a two dimensional list for `image` but in your program, `image` has a different format. couple of things: - How does your `image = ...` line look like? - can you put the lines: `print(type(image))` `print(image)` right before the line that's causing the error (I guess it's line 18 on `segmenting.py`? 
hmmm. it didnt indent right when i pasted it... do you get the idea? 
Check the side bar. You need four extra spaces before lines that are supposed to be code-like.
 test.py answer = input("do you want to go to the next file?") if answer == "yes": import test2 test2.py print ("that worked.") ans2 = input("now go back to test?" if ans2 = "yes": import test 
I think you should put your code inside the module in functions. So if you don't have a lot of code, you can start by putting stuff in one massive file and instead of using `import` statements to run different sections of code; you could use function calls instead. def test_1(): # code that is supposed to run on on the test.py file print("do you want to go to the next file?") ans2 = input("now go back to test?") if ans2 == "yes": test_2() def test_2(): # code that is supposed to run on the test2.py file print("that worked") ans2 = input("now go back to test?") if ans2 == "yes": test_1() 
yes! you got this! :)
ok great! thanks! out of curiosity, is there a way to do what i WAS trying to do? or is the function method the most efficient? 
Where are you hosting it currently? 
nailed it lol 
There is actually. You can combine the two methods. So, for the first file, you'll have something like: import test_2 def run(): # code to run when the first file is called. # ... if ans == "yes": test_2.run() on the first file and then on the second file you can put: import test_1 def run(): # code to run when the first file is called. # ... if ans == "yes": test_1.run() 
Great! Thanks a million. I'm just poking around at this and learning as I go. learning by application works better for me! :D
Yes! I think you should take a look at books by Al Sweigart: http://inventwithpython.com/chapters/ You can read them for free online.
I bet if your bank has a mobile app they have an API that this could be done with but it'd be really hard to get them to expose it to the general public for security reasons.
*You* must be. * /u/tripperjack complained about [brainless, thoughtless memorization of truth tables](https://www.reddit.com/r/Python/comments/6lx37r/learn_python_3_the_hard_way_officially_released/djxr7jl/). * /u/new_kind_of_boredom and others [found unsourced claims about “PSF members”](https://www.reddit.com/r/Python/comments/6lx37r/learn_python_3_the_hard_way_officially_released/djx8rwa/). * /u/callmelucky [provided his critical opinion](https://www.reddit.com/r/Python/comments/6lx37r/learn_python_3_the_hard_way_officially_released/djxyoj7/). * /u/LoLmanLoLz [linked](https://www.reddit.com/r/Python/comments/6lx37r/learn_python_3_the_hard_way_officially_released/djy7d34/) to a list of [complaints](https://sopython.com/wiki/LPTHW_Complaints). * /u/megaamoonguss [complained about truth tables (again) and the “google everything” attitude](https://www.reddit.com/r/Python/comments/6lx37r/learn_python_3_the_hard_way_officially_released/djy2tfr/) Shall I continue? And how much did Zed pay you for this shilling?
Great! Ill check that out!
Thanks, this makes everything a lot clearer.
Just finished a data analytics college course. Basically had to learn all python and pandas from scratch in about 3 weeks for the first assignment. Totally turned me off Python but on reflection I'd love to learn it properly as it seems really useful. This will help. Thanks. 
[And it’s gone!](https://twitter.com/lzsthw/status/883938607819575296)
You can still use Electron framework (with Material Design elements) as a frontend with your Python app as a backend. Of course, now you have two runtimes simultaneously, which requires more memory, but if it is not a problem, then you should try this approach. [Here](https://github.com/fyears/electron-python-example) you find a good tutorial with an example app. The basic idea is to use the [ZeroMQ](http://zeromq.org/) communication library between the frontend and the backend (instead of running a traditional HTTP webserver). So, at the backend you open a TCP port on the localhost using the [`zerorcp`](http://www.zerorpc.io/) lib, then at the client side, you just simply connect to that port. After that, you can communicate with the backend like with a REST API. If you don't want to use Electron, there are some alternatives, like [CEF Python](https://github.com/cztomczak/cefpython), or [htmlPy](http://amol-mandhane.github.io/htmlPy/).
I figured I would as well, but wanted to ask this before I even attempted to try this
 game.win_game(correct_counter, secret_word) These variables doesn't seem to be defined.
If you live in the EU, there is the [PSD2 directive](https://ec.europa.eu/info/law/payment-services-psd-2-directive-eu-2015-2366/law-details_en), which will open the payments market from 2018. So, ideally, from next year you can do a `pip install showmybankaccount`, connect to a Third Party Provider via a public API and get your banking history with an oneliner. I'm also looking forward to plot my pesky account balance in fancy Jupyter notebook.
/r/learnpython
Cats teaching snakes
Can you post the exact error you're getting when running the script?
Yes. The changes are fairly minimal. That said, there are lots of resources that teach 3 from the start, and you might want to use one of those instead.
Hi /u/K900_, I'm getting a ModuleNotFoundError on both lines 2 &amp; 15 (the import statement for forex_python). I'm not sure if this statement confirms that the forex_python package was installed though: Collecting forex_python Using cached forex-python-0.3.2.tar.gz
Post the full output.
On my raspberry pi
Here you go: Python 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 17:54:52) [MSC v.1900 32 bit (Intel)] on win32 Type "copyright", "credits" or "license()" for more information. &gt;&gt;&gt; RESTART: forex.py Forex_python package not found. Attempting to install package... Collecting forex_python Using cached forex-python-0.3.2.tar.gz [31mException: Traceback (most recent call last): File "forex.py", line 2, in &lt;module&gt; from forex_python.converter import CurrencyRates ModuleNotFoundError: No module named 'forex_python' During handling of the above exception, another exception occurred: Traceback (most recent call last): File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\site-packages\pip\basecommand.py", line 215, in main status = self.run(options, args) File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\site-packages\pip\commands\install.py", line 324, in run requirement_set.prepare_files(finder) File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\site-packages\pip\req\req_set.py", line 380, in prepare_files ignore_dependencies=self.ignore_dependencies)) File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\site-packages\pip\req\req_set.py", line 634, in _prepare_file abstract_dist.prep_for_dist() File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\site-packages\pip\req\req_set.py", line 129, in prep_for_dist self.req_to_install.run_egg_info() File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\site-packages\pip\req\req_install.py", line 439, in run_egg_info command_desc='python setup.py egg_info') File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\site-packages\pip\utils\__init__.py", line 676, in call_subprocess line = console_to_str(proc.stdout.readline()) File "C:\Users\xxx\AppData\Local\Programs\Python\Python36-32\lib\site-packages\pip\compat\__init__.py", line 73, in console_to_str return s.decode(sys.__stdout__.encoding) AttributeError: 'NoneType' object has no attribute 'encoding'[0m Traceback (most recent call last): File "forex.py", line 2, in &lt;module&gt; from forex_python.converter import CurrencyRates ModuleNotFoundError: No module named 'forex_python' During handling of the above exception, another exception occurred: Traceback (most recent call last): File "forex.py", line 15, in &lt;module&gt; from forex_python.converter import CurrencyRates ModuleNotFoundError: No module named 'forex_python' &gt;&gt;&gt; 
&gt; There is nothing more strange looking and illegible I don't know, I never could wrap my head around even the syntactic basics of APL.
Try running `py -3 -m pip install forex_python` on the Windows command prompt and post the output.
Right, I was able to install it and run the script just fine. But is it not possible to run the whole thing without the command line you posted (or can I incorporate running a command prompt and the command line using the script you posted)? Edit: Thanks /u/K900_ !
&gt; I tried pip install forex_python and I'm getting a syntax error That is a console (terminal) command, not Python code. Edit: also, I don't understand why you want to install the pip package after you start running the script. Shouldn't it be already installed before running?
Do you mean 2 &amp; 3 or 2.0 &amp; 3.0? Huge difference here...
It's supposed to install the pip package if it's not found... if my script is not the suggested way to do it, then what would be the best way to approach this?
Try to learn to crawl before you walk at [r/learnpython](https://www.reddit.com/r/learnpython). For what it's worth, your `__Counter__` method is never, ever called, and never could be, and you should never create new methods with the "double underscore each side" syntax, that's for *magic methods*. You also cannot call a method that takes arguments with arguments you haven't defined, and you're trying to call your **win_game** method with two *names* that only exist in the *local namespace* of the method above. Dunno **getword_mod**, but assuming that **get_word** returns some random string: from getword_mod import get_word class Hangman: def __init__(self): self.secret = get_word().upper() self.guesses = len(self.secret) self.public = ["#"] * self.guesses def guess(self, letter): g = letter.upper() for i, s in enumerate(self.secret): if g == s: self.public[i] = g self.guesses -= 1 def test(self): return self.secret == "".join(self.public) def report(self): print("HANG:", "".join(self.public)) @classmethod def play(cls): self = cls() while self.guesses: self.report() self.guess(input("&gt; ")) if self.test(): break if self.test(): print("YOU WON!") else: print("YOU LOST!", self.secret) Hangman.play() The above assumes you're using Python3 ... with 2 you'd have to use **raw_input** instead of **input** and put a `from future import print_function` at the top. 
Install the package before running the script.
+1 to this. To my mind it'd actually be easier to learn 3 and then *downgrade* to 2, conceptually. The print statement seems bloody stupid, now that I think about it, and the Unicode just makes more sense in the real world.
The thing is, you're trying to install a Python library after the Python program has already started. Even if it's allowed it feels really strange. Plus, to install a pip package, it's just one line of command in the terminal.
No problem, here you are: Data Science Tutorial for Absolutely Beginners http://www.codeastar.com/beginner-data-science-tutorial/ Feel free to let me know if you find any issue / query / mistake, thanks.
Got it, thank you!
For a novice programmer the biggest differences will be how to print to standard output and integer division. There are plenty of other differences but you probably won't encounter them at your level. 
kivy if you may ever want it to work on mobiles. PyQT otherwise.
Pyramid is popular enough. and also pyramid users in IRC and stackoverflow usually are expert and answer questions. also new version of python package index developed by pyramid. https://pypi.org/
I don't, although I haven't tried it. Dive Into Python 3 and Invent With Python are some of the resource I recommend though, because I know that they are better.
I usually use Pyramid. it is so flexible and you can use it in any case. in performance i personally compared sanic and pyramid. yes that is true that sanic is about 2.3 time faster than pyramid+aiopyramid+uvloop but keep in mind perhaps you usually have to design more complex applications and in these cases better to choice more complete and flexible framework. and also keep in mind web applications do more complex work than just serve a static string and this mean your application bottleneck may be in other places.
I read the original when it was posted and I thought it was obviously hyperbole to push his view that the python3 VM should have been able to run python2 code. I don't see why people keep trotting this line out as though that's 100% what he meant with no context. For the record I think Zed's books are bad and recommend people avoid them
For the money, end of.
Solved with:- from __future__ import print_function in Python 2.
The best thing to do is to orient your operating system by 90 degrees. Will make things much easier. If on raspberry pi: https://community.risevision.com/rise_vision_inc/topics/how_can_i_use_raspberry_pi_on_my_portrait_monitors
I have a Python 3 book, actually, https://learnpythonthehardway.org/python3/ so your information is FUD. Even though I disagree with how they implemented Python3 I *still* created a whole new version of my book with improved videos and fixing a whole bunch of criciticsms people had.
The print part, yes. Not the Unicode handling. Or async, sensible coroutines, or os.scandir. Or anything but security fixes since 2012. Or any form of support after 2020.
Your code is quite hard to read (you should follow PEP guidelines, e.g. your functions and objects should be in snake_case not CamelCase) but it seems like you are returning a dictionary. That dictionary probably stays in memory between requests. You need to reinitialize your dictionary each time e.g. ```recommendedMoviesDict = {}```. However using global variables you will have many problems if you have multiple users sending requests at the same time. Edit PEP not PIP ;)
I do not "throw tantrums" my friend. Even after I found out they were doing this I kept my book up as long as I could. Plenty of things are my fault, but I'm not the one going around trying to secretly destroy the PSF. I'm merely stating my criticisms of Python 3, and that's a completely technical discussion that does not deserve what PSF members are doing as a way method of retaliation. The correct response is to write their own blog posts. I'm almost willing to bet that if someone came to your work and tried to get you fired you'd "throw tantrums" too, so don't tell me I'm in the wrong deciding to not assist them anymore for doing the same.
I left San Francisco to have a better life for my family. I did not throw a tantrum.
And yet, I can't see why I'd have to tell beginners to avoid programmers. I mean, here's an entire thread of a bunch of you calling me a douche online and claiming I don't support Python3 when I do https://learnpythonthehardway.org/python3/
Exactly, Steve Holden was an epic piece of shit on a human level, and everyone here worships him. I said "Python 3 sucks, but I'm going to do a book anyway" and I'm a terrible douchebag who never listens to anyone. The Python community is very hypocritical.
Thank you, I appreciate your voice of reason by saying I don't listen to anyone's criticisms of my work while I look at literally thousands of edits and updates to my https://learnpythonthehardway.org/python3/ book and the fact that I cheerfully wrote a book for Python 3 even though I disagree with the implementation. Seems like I definitely don't listen to people. 
That list is for an extremely old version of the book and actually demonstrates more of Python's flaws than my book's flaws. Like "only teaches %s", because when I wrote the Python 2 book that's all there was. Now the https://learnpythonthehardway.org/python3/ teaches %s, f"", and .format(). The rest of the criticisms are mostly pedantic pedagogical differences or arbitrary like "method vs. function" which has no valid distinction in Python because it's a functional OOP language (self passed as an extra parameter rather than message passing). Or, "excessively teaches recursion" when there's maybe 3 or 4 exercises that teach it out of 52 and I don't even teach it fully. Basically, that list is written by people who think I should teach objects first, but who haven't ever had to teach beginners OOP.
You know me, personally actually, and I don't make things up. I have direct chats and emails from people reporting actual members of the PSF telling them to remove my book. It is not "anyone on the internet who hates my book". It is real members of the PSF, contacting other people and using the authority of the PSF to influence their decision. Feel free to email me if you want the proof, given you actually know me.
So you're saying that because it wasn't in your meeting minutes it couldn't have happened? That seems like a new form of the true scotsman. "No true PSF member would do anything outside of a recorded PSF meeting."
Well, I'm not and never have been on the PSF board. So they wouldn't be "my" meeting minutes. And the only people who can act on behalf of the PSF are the directors or people designated by them to carry out specific tasks. Like I've been saying "PSF member" is far too generic a term to be useful, since it applies to anyone who fills out an online form for free.
If you have proof, why not publish it?
No, my criticisms are simple: 1. Python, being a turing complete language, can run both Python 2 and Python 3, but they failed to do that. In fact, they claim it's impossible, but if that's impossible then that means Python 3 isn't turing complete (which is impossible so they're lying). 2. Python's formatting is insane and they should have just gone with what's in 3.6 and stop bikeshedding on this one weird area. 3. Python's strings are a mess, and they could have made the unicode support more friendly but decided that you're going to be punished and have to "explicitly" interact with it when it's not necessary. Doing this will create millions of boilerplate errors in unicode usage that could have been automated by Python itself. 4. The PSF uses propaganda, ostracism, and threats to push Python 3 and convince people to manually rewrite code, rather than simply making the transition painless by fixing the above. And, calling someone insane when they are not is wrong. My reasons are very clear and objective, AND even though I disagree with these points about Python3 I *still* went and wrote a complete upgrade of my book https://learnpythonthehardway.org/python3/ because I'm a rational individual who realizes that people need help despite my disagreement.
You can run hundreds of languages on the JVM and .NET CLR, and you can freely convert Nim to about 4, and the GCC uses an intermediate langauge to convert between hundreds of languages and CPUs. But sure, the Python project found this to be too much effort after 20 years of development and decided that, nope, they aren't really the language experts they thought so let's make a junk 2to3 converter and yell at people to hand convert all their code like savages.
I thought I was pretty specific that I'm talking about the call site. I repeat it a few times! And give examples. 
I consider not using keyword arguments at the call site is almost always bad. 
Not originally. The .format() support was bolted on later, so it only had % formatting and + (although that's technically not string interpolation, it's addition).
Actually, eevee's blog is good and I have yet to respond. THAT is what you do when someone writes a criticism you disagree with. You go and write your own criticism, and that kind of discourse is important. What made me sad was active PSF members were contacting other people and attempting to use their position in the Python community to ostracize me and destroy my book. They did this because I....disagreed with their technical implementation of Python 3. It's interesting that people in this thread have no problem with this, or even go to great lengths to defend it or claim I'm insane, but you should be very worried. Think about it. If you base *your* livelihood on Python, and then one day you disagree with something the PSF does. Let's say, one of the PSF members is walking around a conference carrying a stuffed snake he's ripped the eye out of asking women to "touch my snake". If you speak out about that, then the PSF will actively try to destroy you. This actually did happen, and from what I can tell continues to happen. That means, your livelihood will depend forever on always agreeing with the PSF on their terms for fear of them retaliating to take your job away from you, slander you, or discredit you in some way. So, no, I did not write my post thinking about eevee's criticism. I think it's great she wrote that. My criticism is of the PSF members who are reacting to my criticism of a technical project with social manipulation. Incidentally, also one of my criticisms of the project.
Just learn Python 3. Python 2 is dead or dying, depending on who you ask.
it is really nice language. Shame that some college courses ruin it for most of the people. I bet if you take it easy, with some personal interest and tiny-tiny projects one at a time, you will love it! :)
Belgium it is! Thank you so much for your very detailed reply. I'm trying to implement the suggestions you made. &gt; Did you check that it runs? Because you'll end up with 210 files, with names like "TRO F.pdf", "BDE F.pdf", "TRO i".pdf" etc. You also won't end up with a "Fiche de paie" which can be replaced. I'm running this using PyCharm, and it seems to run just fine. As far as I can tell, I just end up with 10 files (10 employees), not 210. &gt; And the date is manual. I chose not to use the current time because I do the splitting for the payslips for June in July, or sometimes in August or even later if things are busy. &gt; Consider using Python 3.6, which simplifies string formatting: I am using python3.6, but I might have copied some old code. I really appreciate your input in making the code more pythonic, future proof. This is exactly the reason posted it here. I will send you a message when I've changed the code. 
It invites people to write apps that deal with your bank account. And since there are bound to be very shitty apps there are bound to be very horrible data leaks. Thanks but no thanks.
Why is it that my speaking out about what I feel are problems with Python 3 somehow makes me a chode and a dick? That's the problem with this industry. You all are very quick to jump on the hate train and abuse people with names for offenses that are rather minor. I feel that I deserve to be called a dick for *maybe* not having my book available for free anymore. That actually impacts a lot of people around the world who are trying to make their lives better. But saying Python 3's strings suck? C'mon, that's excessive. Also, if I'm a chode and dick for that, then what are you for calling some random guy you've never met names? I didn't call anyone names so far, but I deserve to be called them? 
Lists of mistakes can be composed out of most books. Most of these are about py2 and his approach rather than factual errors. I also liked the black and white depiction of good vs evil in the context of py2 vs 3. I ended up with py3 but at the time it freed up my mind to focus on other stuff. I was able to revisit the discussion later as a more informed person. 
Because my sources requested I don't publish it yet for fear of similar retaliation from the PSF, but email me and I'll tell you who to ask about it. Oddly enough, the fact that you think this is impossible only proves that the PSF condones the behavior. A correct response would be, "Hey I'm sorry some members are doing this. Give me info and I'll look into it because it's wrong." But, what do I expect from an organization that protected Steve Holden despite his years of abuse?
It's still Python 2 though. Yes, I know it was added on later, but you still have to deal with multiple string formats in Python 2.
&gt; you should follow PIP guidelines You mean PEP. Specifically, PEP8 which talks of formatting and naming schemes 
They weren't largely rubbish, they were simply my opinions of how Python 3 was implemented given people were expected to transition from 2 to 3. My main complaint is that Python 3 could have run both 2 and 3, but the maintainers claimed that was "impossible". Anyone who's taken even an intro course in compilers, or used one, knows that's not true. However, everyone seems to be skipping right over the problem that, if you think my criticisms were rubbish, then why is it valid for members of the PSF to attempt to censor my book and ostracize me? It seems like my reasons being rubbish means that their actions are completely out of bounds and over the top. You can't really have it both ways. Either, my criticisms were valid and could destroy Python 3, so these PSF members are justified in their actions. If that's the case then that proves my assertion that they use propaganda and threats to promote Python 3. Or, my complaints are rubbish and should be ignored, which means these PSF members are being abusive and again, proving my point. 
You are allowed to feel proud of yourself and talk about yourself in the first person. What is wrong with programmers and their belief that they can't do that? It doesn't make anyone a bad person to take a selfie, admire what they can do, or say "I". It makes you a person. I mean, even in your reply you start with "I". It's just human. I'm proud of the number of people I helped and how far my reach was, and it's not wrong for me to say I am. If you think that's wrong, then you're basically saying I should be abusing myself and telling myself that what I did isn't significant. That's just wrong and leads people to be depressed and sad. 
So, the first book you recommend to a total beginner is a book with this as the first program? http://www.diveintopython3.net/your-first-python-program.html You seem to really know your stuff.
Given that this page was created and *never* shared with me at all, it's fairly unfair to say I don't listen to criticisms. I've gone through the list and a large number of them are changed in the python 3 book. The others are just pedagogical differences of opinion. I also *frequently* update my material when I find problems beginners have with it. Meanwhile, the book most touted as an alternative (Dive Into Python) starts people off with a 20+ lines of code program with every Python feature possible. And, when I've contacted the author about changing things he literally told me to "go fuck myself". I don't see you taking him to task for that, so I'm only guessing your posting all over this thread is for some other reason.
Then....why'd you write the comment above? Ohhh, so that it'll seem like you're someone who benefits from the book and is upset thus fomenting revolt. I guess my criticisms that apparently made me a joke aren't so invalid anymore. I said the Python community uses social manipulation and propaganda to push its agenda, and look at this, here you are doing exactly that.
... the Hard Way for Dummies in 21 Days.
I use print to teach many other things. It's interesting because many other books do exactly the same thing, and print is the bread and butter of programming. When I do it somehow it's now "way too much" and all I do is print. If you go look at the exercises, every one that has printing also has something else. Maybe it's variables, or formatting, or comments, or combining three things together. 
So you're a self-taught programmer who has opinions on how to teach other programmers. Well, you sir should sit down and write a book about it. I'd love to read it, but be careful, if you make any mistakes they will be taken as HUGE mistakes and your whole book will be invalid.
Because once you've done some memorization the explanation is a lot easier. It's a language, and once you learn the basics of the language I can use the language to teach you about it.
I'm the only person who works on the book other than production people from my publisher. DG has many people working on it. I mean, unless they have some awesome person there who speaks 14 languages and who doesn't mind having zero credit for being that awesome.
I was making a statement about the Python project's assertion that running 2 and 3 at the same time is impossible. Python 3 is obviously a turing complete language, and I've taken enough compiler design courses to know that. You don't have to do that though since you can use almost *any* language today and see the same thing: if you have one language, you can run another on it. That means, if this is impossible, and Python 3 is turing complete, and it's not impossible for any other language, then either they broke Python 3 or they're lying. Easy.
Seems like the baggage is all from Python programmers and nobody else. I mean, I just wrote a thoughtful blog post and here's 50 people calling me an asshole.
My book is not *only* rote. I start off with rote to introduce the topic to people who know nothing because that works for that group of people. Go read about Direct Instruction to find out why. Then I have a section on application where they use it, and I have videos that show debugging and breaking code and more application. Rote works for beginners, and most people are self-taught do rote work without realizing it. It's just the basis of early education. Rote doesn't really work that well for people beyond beginner, which is why I try to cut it out toward the end of the book and move on to more application and conceptual study.
We were talking about my book, which was written before that. Rather than fix the Python 2 book to have that, I just wrote a Python 3 book.
to be fair man it isn't what you said but really how you say it. books are great though
That was my first thought. 
This is sad. I had good expectations about this project. Luckily they will release an open source version.
I saw him speak in college 20 years ago. There was a Nobel laureate in the crowd. Wolfram is freaking brilliant, but yeah, his talk was very much in line with the comment above mine. My favorite part, however, was watching him eat a cookie in front of the colloquial, all while picking his nose with the other hand. 
He wants to MAKE PYTHON GREAT AGAIN
Yet the `print` statement vs function is probably one of the main thing stopping me from completely moving to Python 3. I rely on some codebase that is not entirely mine, and the `print` statements everywhere is probably what would take the largest amount of time to check properly.
What does this have to do with Python? 
There's a (probably small) chance your bank supports [OFX](http://www.ofx.net/about-ofx.html), which is how some software like Quickbooks gets access to your data. However it's very dependent upon your bank and in my experience few completely follow the spec, so there may be a bit of guesswork to get it working.
With the exception of ones doing redirection, that's pretty well handled by [2to3](https://docs.python.org/2/library/2to3.html).
Ofxhome.com has all the connection info for a lot of US Banks. You can use the ofxclient python package to download a statement.
This should be in r/learnpython, not here. That's the standard recursive function everyone learns when first introduced to recursion. There are much more interesting, less trivial, examples.
Same as the other thread on recursion. There's nothing interesting there. It's just basics. Should be in r/learnpython
Plenty of python project's used it. Mine included. 
&gt;You are allowed to feel proud of yourself and talk about yourself in the first person. Of course, and you shoud be. Your post just went beyond what most well-adjusted people would consider tasteful pride in ones achievements and drifted into shameless self-aggrandizing territory. &gt;I mean, even in your reply you start with "I". It's just human. See, what you're doing here is taking my criticism of the extent of your self praise and making it seem like I'm criticising you for using the english pronoun "I". &gt;I'm proud of the number of people I helped and how far my reach was Again, you *should* be proud of yourself and most people dont mind tasteful self-praise. Fluffing numbers of people helped that you cant possibly prove for a public wank is less endearing. &gt;If you think that's wrong, then you're basically saying I should be abusing myself and telling myself that what I did isn't significant. That's just wrong and leads people to be depressed and sad. *Abusing yourself*. Man those are some wild mental gymnastics. Edit: I dont want you to be sad and depressed and I'm glad you do help people. You should just work on your interactions with people. 
'\x' is not a legal regular expression. There is no \x regular expression code. What are you actually trying to match?
Possibly look into home assistant to keep you from re:inventing the wheel. Otherwise I would roll a Flask API and protect it with mutual SSL authentication. The API would tell me status of locks and make mutating changes as needed. 
I don't think any of that is even the tiniest bit relevant.
Thanks for this. Consider an editor for for your English-speaking audience. The point is accessible without too much effort, and I'm guessing this is more an exercise in writing and exposure than on this specific topic (since the matplotlib documentation on pyplot is already [excellent](http://matplotlib.org/users/pyplot_tutorial.html). 
For backend communication, I would use MQTT (there are many MQTT implementations in Python). It will guarantee delivery, user authendication and supports SSL. For front end stuff you can use Flask or similar. If you have iPhone I would have a look at Home API. I think a quick Google search will show multiple Home API wrappers for Python on GitHub. Edit: For simplicity I would use Sshuttle to connect the raspberry and external server
His problem is an incorrect escape. A double escape situation. The escaped \x needs to be escaped itself - its being swallowed and leaving it unescaped for the regex Trying to get op to figure it out themself. 
You should use `%matplotlib nbagg` instead of `%matplotlib inline`. This way, you get fully interactive plots. And maybe add `%load_ext autoreload`, `autoreload 2`, which will auto-reimport modules if they change on disk. I like to use fig, ax = plt.subplots() ax.plot(...) ax.set(title='...', xlabel='...', ylabel='...') instead of plt.plot(...) plt.title('...') plt.xlabel('...') plt.ylabel('...') This makes it explicit what axis you are drawing on and is cleaner if you have to change lots of axis attributes (Does anyone know why those are not accessors?). `subplots` has very handy functions for multi-axis plots (`fig, [[ax00, ax10],[ax01, ax11]] = plt.subplots(nrows=2, ncols=2)`) and things like shared axes and the figure size.
&gt; shellcode = re.sub("\x", "0x", shellcode) I cannot replicate that error. You should get ValueError: invalid \x escape in Python 2, and SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 0-1: truncated \xXX escape in Python 3. So I don't know what you are actually doing, unless you have edited the exception. If you instead use a **raw string** to hide the \x from the interpreter: shellcode = re.sub(r"\x", "0x", shellcode) then the regular expression engine will receive the string "backslash x" and try to interpret it as a **regular expression** like `\w` or `\d`. But there is no such `\x` regular expression. If you want to match a literal backslash followed by an x, you need to either use four backslashes as a regular string: '\\\\x' or two as a raw string: r'\\x' 
Not an exact answer but you may want to look into matrix.org and there protocol. It's extremely useful for remote control of multiple types of devices while only using on protocol and script.
that is why he gives so many books for FREE.
5 people repeating the same meme.
Pick it up and you'll quickly realize just how nice they are for basic things. I write simple apps and use ORMs exclusively. The learning curve sucks, a lot. But once you get it.. it's amazing.
I believe you're looking for [run_until_complete](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.run_until_complete). Most of the examples in the `asyncio` module's documentation use it as well.
`run_until_complete` will only be useful if the event loop is [not already running](https://github.com/python/cpython/blob/21b3e04c13212b29e8c35ffc36eed8603fde08f4/Lib/asyncio/base_events.py#L407). A situation such as async def outer(): inner() def inner(): loop.run_until_complete(async_call()) loop.run_until_complete(outer()) therefore cannot work.
Homeassistant.
i remembered you asked for the code when it wasn't done yet, but now i didn't work on it for over a month, so i'd say it's more or less finished. [here is the code.](https://pastebin.com/2N70F8ZU) all it can do is browse the web with webkit, set the user agent, set special css for all pages (i just needed that for a workaround of a bug in either webkit or the website we use the browser for), and implement a url-whitelist. i replaced certain parts which are specific to our setup with `[ ... ]`.
&gt; I'm running this using PyCharm, and it seems to run just fine. As far as I can tell, I just end up with 10 files (10 employees), not 210. You are correct. I didn't notice the comma. Explicit is better than implicit, so better to write it as `['Fiche de paie 2017-0X']` instead. &gt; I do the splitting for the payslips for June in July, or sometimes in August or even later if things are busy. You have a script now. You can just double click the Python file. Or, even better, schedule this to run automatically as soon as you receive an email with the correct attachment. That being said, since you'll be extracting the names from the PDF, why not extract the dates at the same time? (I don't know the actual format of the PDF, but if it isn't something readily searchable, a regex (`import re`) with something that looks like a date, and then `datetime.datetime.strptime ()` to verify, could be an option.) Bonne chance! Looking forward to the updates.
I'm also there, mostly for DRF, microservice architecture, asyncIO and topics connected to high-traffic. Hope to have some great time also in Rimini ;)
I got troubles understanding what's your intent here. If a synchrounous method waits for something, the whole thread will wait, hence forbidding the future to ever finish. One way to understand the problem is using a synchronous Event object: def sync_wait(self, future): event = threading.Event() def set_event(f): event.set() future.add_done_callback(set_event) event.wait() // Blocks until the future is done. return future.result() 
You can't. If the event loop is running that means it's blocked on this synchronous function. That means you can't schedule any tasks and have them complete until control is restored to the event loop. You need to run synchronous code in a different thread and communicate with async tasks with something like https://github.com/aio-libs/janus
No your criticism is still wrong, and you tried to be a smart ass by implementing cyclic logic. (for others: by saying the community uses manipulation he tries to defeat anyone who disagrees by telling him that hes manipulative, which is idiotic because his assumption is still wrong). The language is a tool, not a community, which is what you fail to understand. If you don't like it, don't use it. EDIT: Discussing this is irrelevant, because the books are becoming irrelevant. They won't be seen, therefore not bought, and as you are mostly known by now as the one who was wrong and wouldn't admit it, the books are not recommended. The only perk for them was being free, now that thats gone, there are much better books to buy.
Probably not though I think. Authentication should still mean this stuff will be annoying or very insecure. 
Have you looked into "create_task"?
Look at tink.se for a Swedish system like that. It's a bit iffy in my opinion for the reasons you think. 
As I understand it the above snippet can never complete, as the event loop doesn't iterate and hence the future can not complete. Ideally I'm looking for some way to iterate through the event loop from code running within it. (If that makes sense to you).
create_task would allow me to schedule a asynchronous task, but not wait on it being completed.
Thanks, I think I've reached the same conclusion - sadly I don't think the constraints allow for janus to be the solution.
Yup. Right after `block_size = 40` should do. And after you have that output, you can look up the `skimage.filters.threshold_adaptive` documentation to see if the image type you are passing in to the function is the same as the one it expects.
But that's pretty much what asynchronous tasks and futures are for... If something forbid you to use async stuff within an event loop context, maybe you should look into that thing instead of trying to work around it.
The fact that a comment saying nothing but "Zed Shaw can suck a fat one" has more up-votes than down-votes also says something about the community. If the community is worried about the harm Zed might be doing, consider the harm of encouraging personal-level shit-posting. 
So I go into [details](https://pgjones.gitlab.io/quart/async_compatibility.html) but the aim is to support existing synchronous code in an asynchronous codebase. So in this context eventually the loop will call out to one of these existing synchronous function (or a few levels down) that now needs to call a asynchronous function and block until it has the result. There are naturally other places I can look to solve or work around this. Yet if there exists a solution to this it would be much easier.
What are your constraints? What are you actually trying to do?
Don't be evil.
Ahh.. okay. So now the issue seems to be with `np.invert` which computes the "bit-wise inversion, or bit-wise NOT, element-wise" of the data. So it expects all it's inputs (i.e., values in the input array) to be integers or booleans. Can you put a `print(binary_adaptive)` right before the `return np.invert(...)` line to see the format of the data? I suspect that the thresholding gives you a bunch of floating point numbers and that makes `np.invert` unhappy. Edit: This could be relevant: https://stackoverflow.com/questions/10873824/how-to-convert-2d-float-numpy-array-to-2d-int-numpy-array#36445032 
Working on an app that takes the CCTV footage for analysis. Could use some ideas on what all can I analyze from a CCTV camera via Python if placed in a mall. Using Google's tensorflow and opencv as of now. 
Possibly there might be a way (in the future) to specify a protocol that constrains the type of just a few dimensions, while leaving the types and number of other dimensions unspecified. Would that work for you? How exactly do you access your multiple dimensions? Say for 3D, with 2 numeric and 1 string dimension, do you do `x[1][2]['a']` or `x[1, 2, 'a']` or something else?
Yes, I meant 4 Simple Steps
Ahhh.. see these are floating point values! So right after the `binary_adaptive = ...` you could put something like `binary_adaptive = np.asarray(binary_adaptive, dtype=int)` This should convert all values to integers and then `np.invert` would be happy. However, I'm really not sure if that would change the intended behavior of the code. So see what you get, we could debug more if something else breaks :)
Scripts for testing apis and api docs, for inspecting outgoint http connections, for scrapping
I don't think so. I think that line is fine. The final `adaptive_threshold` function should look something like: def adaptive_threshold(image): block_size = ... # &lt;-- put the correct odd block number here. binary_adaptive = threshold_adaptive(image, block_size, offset=10) binary_adaptive = np.asarray(binary_threshold, dtype=int) return np.invert(binary_adaptive) * 1.
Can I ask why you say that? I'd like to begin learning python but want a good starting point. It would be helpful to understand why you think this is the hard way. 
Also there's `%matplotlib notebook` for interactive plots. Might be choosing `nbagg` under the hood. For `%load_ext`do you know if it reloads things hierarchically? I have problems sometimes when I change a module that has some functions imported by another module and then I have to reload both of them.
Do the right thing
What's DRF? I'm not familiar with that acronym.
Um, "whoosh", as the kids say. I was joking about the buzzword-encrusted title of the post by adding a few more.
load_ext does not reload hierarchically, I often have to do reload(lib.module); reload(lib)
What are you trying to achieve? Some of the better ones are: - General: Automate the boring things, python a crash course, learn python the hard way - For web dev: Django Girls and the official Django tutorial
Honestly could not tell you what i am trying to achieve yet. General knowledge maybe? My first idea is to work on a program i have been working with for years, it has bugs that dont allow things to copy and paste sometimes, and also buttons on the tooldbars that dont do anything. I am basically starting from nothing so i am looking into everything possible. Thanks for these sources 
Well it's for a class, but I can promise I have no intentions of using it outside f class.
So [Quart](https://gitlab.com/pgjones/quart) is the Flask API implemented with asyncio and ideally Quart would just work with existing Flask extensions (same API), however there is the issue of synchronous and asynchronous code in usage together. The particular issue is when a synchronous function (in say an extension) tries to call an asynchronous function from Quart. In this situation I was hoping to place a wrapper inbetween such that something like def wrapped_api(): return sync_wait(quart_api()) this way I need only write the wrappers (as I can't change the synchronous extension code). Of course to do this I need some way of implementing the sync_wait, ideally I could do def sync_wait(future): loop = asyncio.get_event_loop() loop.run_until_complete(future) return future.result() however this is not possible if the event loop is already running, which it is. The snippet in the above post is the closest I think I have got, whereby I add the ability to event loops to be resumed from within. As I say though it errors. Overall I think the reality is that this isn't possible, and sadly there is an asymmetry in what is currently possible in python.
[removed]
Not necessary. It's totally possible using the technology available today (think about e.g. the official mobile apps from the banks). If I could SSH into the bank's "account server", and read my balance from the command line, it would be totally secure as long as I keep my private SSH key safe. Same with a public API with e.g. time-limited token based auth.
Ahh okay, just making sure. Being so new I want to get an informed opinion before diving in. Thanks for sharing. 
Where is this Python? There is Python 3 and Python 2. They are different languages and have to be treated as such in this discussion. 
Start at the faq's of this subreddit.
I think something can be done, but not sure it is good idea in your case, just use aiohttp with all async libraries. So here is way to make communication async/sync/async work: 1) Execute all sync functions with ThreadPoolExecutor, with `loop.run_in_executor`, without this you will block your event loop, and loose all benefit from async. 2) If you want your sync code to call async one, just use reference to running loop and do `asyncio.run_coroutine_threadsafe` this will return concurrent.Future (NOT asyncio.Future) that you can wait in sync way 
You can do something like this: def wrapped_api(loop): fut = asyncio.run_coroutine_threadsafe(quart_api(), loop) return fut.result() see my other reply
I think people can agree with the points about that Python could have done a better job with the transition. They were good points to make, it's surely something I have learned from you. I believe the \__main__ problem people have is that you were actively suggesting NOT using Python 3. Python 3 as a language is better. The problem was that a lot of packages had to catch up. I guess it is actually tough to say at which moment the balance flipped; arguably you were advising Python 2 at the right time, for some time, though perhaps not with the best reasoning (complaining about the transition). I see the lack of packages available at that time in Python 3 as the only reason. As the external packages caught up, it became clear the better move is to go with Python 3. In your case, I would let that be your argument... --- As for the way PSF would handle it; it is quite damaging for everyone when people are suggested to use Python 2 at this time. From this perspective, I could imagine that they would like to other books recommended.
It's still not clear what you mean to me :/? I guess I fail to understand the terminology. 
Or even just the sidebar.
Sanic rocks, but is thoroughly unfinished. However the community is fast (gotta go fast) and friendly. I'm actually about to put sanic into production by accident.
Google?
You can also wrap your script in a module with a setup configuration and add forex library as a dependency. This way you make sure who installs your module, installs also forex together. Take a look at setuptools documentation, it's really just copying and pasting (:
Why not just create new event loop with `asyncio.new_event_loop()` and use it instead of the default one?
You can implement a menu like this as a state machine. On transition to a new state, print the menu. On input, check if a transition to another state is defined. You can store the state machine itself in a Python dict where the keys are the name of a state and values are all data associated with the state. This example shows the text to displays on any transition to state 'main' and that when '1' is pressed we transition to the state 'submenu1'. state_machine['main'] = {'message': 'This is the main menu', 'options': (('1', 'Go to submenu', 'submenu1'),) } There are packages to help with state machines but it is such a basic simple thing I'm not sure it's worth the trouble. A more complex menu might call for explicitly tracking the hierarchy so "up" is automatic, but in a simple menu that is probably overkill. 
What do you mean by making a DA "more redundant"? And, for that matter, what does a DA have to do with a pet worm?
Wat
I don't remember for certain, but back when you uncorked your original Python 3 rant I probably posted something somewhere to the effect that I'd no longer recommend your book (since between its bits on Python 3 and your standalone bits on it, I believed it would be more likely to hurt newcomers than help them) and would encourage people to read/recommend something else. Since I'm also a member of the PSF, that sort of thing is all it would take to claim that "PSF members" were up in arms about it. Do you see the problem here? And this kind of "I have proof but won't show it" thing doesn't make other people look bad. It makes you look bad.
You still need a new thread: &gt; This function is meant to be called from a different thread than the one where the event loop is running
Nothing is ever secure. You just try to not be the lowest hanging fruit. Consider this first, then decide what you can allow on the network. Flask for the front end though. You can easily just map functions to URLs.
It's Django Rest Framework :)
Those are all valid reasons, but on the contrary as someone who is learning Python now, I'm starting with 3.5 and sticking with it because, well it's pretty clear support for Python two is about to end, and I don't want to relearn everything. Also with that, recently I've run into much frustration from the incompatibility of the two Python versions and the same name. For example on my system I have an alias for "python" to "python3.5", which ended up breaking a few things because "python" still means 2.7 on several distros even though python three is installed by default. That falls on me, I did the breaking. But still, in practice, they work as two languages with the same name, which is confusing and just causes problems. For example, two versions of pip, because I need yet another package manager. And yes I get that the developers could easily have just made python three backwards compatible, but from my perspective the "2.7 or we'll move to Ruby" crowd is equally to blame, they aren't the guys and gals with a final say in the language's development. I don't have anything against 2.7 but I'd rather everyone just called it python-legacy and used .pl files or something, because the current situation is a silly mess. Python is everywhere and easily on track to be that one language the everyone, even non developers learn, but community divisions are holding it back. 
I don't have an answer for you, other than a broad feeling that a logging.Filter *might* be able to act on that vector, somehow, but I feel compelled to write that I feel your pain.
Thanks, but I don't know enough Python to even understand what you're suggesting. As my sample code shows, I was attempting to make the menu structure into a matrix that I could move through by changing a horizontal and vertical position in the matrix. That would simply things by moving the horizontal position +/- 1 when the left/right keys were pressed and moving the vertical position +/- 1 when the up/enter keys were pressed, but I haven't figured out how to make the *right* matrix yet.
I always question humanity when seeing people use Node. Just why. Why.
 It is not yet mature enough to be officially supported. We do run nightly builds so buildbot.pypy.org is the place to look. You can see the test failures here http://buildbot.pypy.org/summary?category=win32&amp;branch=py3.5 and download an alpha-quality binary here http://buildbot.pypy.org/nightly/py3.5. Many things will not work and to answer the next question we have no firm timeline for a beta release.
Import DDOS DDOS.run () You welcome 
I never said you didn't write a new version of the book for Python 3. I said you gave poor advice in bad faith, targeted at beginners, and justified it as trolling. [Which you did.](https://zedshaw.com/2016/11/24/the-end-of-coder-influence/) &gt;I decided to just write what I felt and fuck whatever programmers think. I wrote it, put in a couple of jokes and trolls, and then posted it. Fuck it, I have a cold and don’t give a fuck.
What you need to do is have the synchronous task reading from a queue that the async task populates.
Coming back to this, I have to admit that I didn't fully realize what I was responding to. I actually agree that just flat out calling him a douche is unconstructive and wrong, though not to the degree where I think it would invalidate any points actually made in the post. The comment you were referring to failed to make any point, so I agree they were being a jerk.
"The PSF" isn't attacking the book. The author has strong opinions, and has had some strong rebuttals. The PSF as an organization has no stance on the book. If you think they do, find a link or some other information we can read about it.
The sidebar of this subreddit will point you to r/learnpython. That is the place to go if you are learning Python. They are an awesome group of people who can help with any questions you have. If you are really wanting to learn Python, think of an obnoxious or tedious task that you have to do all the time and Python can almost certainly solve that problem. A good, but older, resource is the "automate the boring stuff." Run through that series and ask your questions in the learnpython subreddit and you will be on your way. Have fun but be careful. It's addicting!
WTF does this do.
/r/learnpython
Messing around with creating some email alerting scripts based on google sheets that have data coming into them from google forms. Just simple stuff like that. Still have to work on getting the things hosted at work so that they can be scheduled and run, but they work. Ugly as sin coding though. Also messing around in codewars to practice, and get better at learning better ways of achieving things. Shows how much I don't know, when I make something that works in 10 lines, and someone else has done it in one.
This is basics for beginners, Once they master the basics then learning best practices is a cake walk.
I'm slowly getting through AND Repeating lessons on the Py app for Python. Compiling random practice and trash scripts in Python 2 for IOS It's day 3 of my programming journey and I'm loving it. 
Try the Py app on App Store. Real simple into but you'll learn more than you know.
 count = sum(1 for i in tree.flags for j in i if j &gt; -1)
Dive Into Python
I personally would go with the semantically identical count = sum(j &gt; -1 for i in tree.flags for j in i) `True` is equal to 1, which may be marginally astonishing for some, but I find multipart comprehensions to be tricky to read.
Awesome. Sounds easier and less painfull than the pelican method i previously used.
To each his own. For me, I find my method to require marginally less effort to decipher later on when I revisit the code, and it fits my understanding of "Explicit is better than implicit" better.
I write code that writes code. I make python wrappers for .Net libraries in IronPython using reflection, for REST interfaces, for JSON structures, etc., all the time. So satisfying to do it once and immediately get so much more productive than others.
Thanks, glad you think so
How much log data are we talking about and what is the frequency in which logs are written? 
Are you importing `threshold_adaptive` properly? Did you change the `from skimage.filters import threshold_local` to `from skimage.filters import threshold_adaptive`?
well code aside, usedpass.txt is a bad idea. It's literally a list of all passwords the user might have used. I would ignore that requirement.
I know the chance is almost nothing given the size of my dictionary, but the goal there was to stop any and all chances of repeat passwords. Is there a way to make it accessible only to the script, rather than removing it?
For absolute beginners, learning by rote is a good way to start . And by absolute beginners, I mean people who know 0% percent about how computers works.
&gt; Its focus on rote-learning instead of conceptual understanding This is the reason by it has value. For some people, this is a very good way to learn (see Jon003's comments)
The majority of the log data is the filtered output of a wireshark analysis of a network capture. In addition to that, there will be some stuff about actually logging the tshark processes and the decision-making of whether to keep the trace or not. My guess is that the average is a few kilobytes every minute, with the majority in bursts of few tens of kilobytes.
In Sweden we login using a system called BankID which is a 2 factor system so all bank apps jump back and forth to this other app for login. 
 def foo(a, b): pass Here a and b are parameters or formal arguments. foo(a=1, b=2) Here we have a and b as argument labels (swift terminology) or keywords (python terminology). 1 and 2 are the arguments. My article is about a way to help people stop using positional arguments: foo(1, 2) which are error prone. I suggest that this: foo(=a, =b) be syntax sugar for foo(a=a, b=b) in Python. And I use some statistics to back up the need for it. Clearer?
Is there a security use case? Matching on meta-information, headers, payloads, flows etc? 
That would be what I'm talking about yes. And I suggest also being able to do fn(:foo) As syntax sugar for fn(foo:foo)
No, nothing as fancy as that. The traces are on a (what are supposed to be) private device communication networks. Since not all customers are equally good at providing a reliable network, we need to log stuff like retransmissions, and store the traces in case wireshark's expert info has something interesting to say.
Why isn't the PSF handling an attack like this on the SO wiki against a single person? Where is the outrage? Why isn't the PSF directors petitioning for the attack page to be taken down? Is it because you don't care about the personal attack in an official place or because you agree with it? In either case, it's disgusting that you, Ned Batchelder, aren't outraged and moving to fix it. I'm nobody, no one will listen to me. But you, Ned, have a reputation and could fix it with some emails and public comments. Instead, you say "not my problem, personal attacks on SO wikis and Reddit are okay if they are against Zed Shaw or people we don't like" 
Here's a Python [example](https://stackoverflow.com/questions/2916181/what-is-the-pythonic-way-to-implement-a-simple-fsm). The example given in "my solution" should be sufficient. Also have a look at [nested dicts](https://www.haykranen.nl/2016/02/13/handling-complex-nested-dicts-in-python/) and some theory on [finite state machines](https://en.wikipedia.org/wiki/Finite-state_machine#Example:_coin-operated_turnstile). You shouldn't use a matrix for this problem. A matrix is the wrong tool for the job, and finding a suitable matrix will be significantly more difficult than learning how to implement a state machine. When you take the time to understand how a FSM works, you will learn to recognize situations where "this problem needs a FSM" and then you can apply that pattern to many other similar problems. They appear all over the place in software design.
learning a library takes longer than just figuring ouf how it works underneath and writing ansi codes to stdout. it is that easy. i looked at most libraries. they explode with eyecandy they call features and have bad performance, and/or are just annoying to write code with.
Much clearer, and I do agree. After reading the article `=a` and `:a` didn't stick with me, but I really like it when laid out like that! Do note that something like `eldoc` (in emacs) helps... in my case it shows the keyword and the value in the mode line, even when you only give the value. 
They're not accessors because matplotlib was written to emulate Matlab's plotting functions. It wasn't built with standard object oriented practises in mind. 
Where abouts are you based? I think Python is gaining popularity substantially at the moment.
Europe, Lithuania
I'm not going to spend long on a LICENSE.txt and a COPYRIGHT.txt being more than sufficient, or that spending any time whatsoever in any file establishing the bounds on copying your code is a waste of time and energy unless and until someone might reasonably want to copy your code. I'm just going to start with my confidence in a password generator being "cryptographically" *anything* getting **severely** diminished when I see how much trouble you have just converting *words.txt* to *dictionary.txt*. #! /usr/bin/env python """Converts raw words.txt to dictionary.txt. Note we don't care about order, because we abandon it later anyway.""" def main(): seen = set() with open("words.txt", "rU") as src, open("dictionary.txt", "w") as dst: for line in src: word = line.strip().title() if len(word) &gt; 1 and word not in seen: dst.write(word + "\n") seen.add(word) if __name__ == "__main__": main() Should be sufficient. Now, on to the main event: First off, you should probably just instantiate your randomness interface once, and account for the fact that **random.SystemRandom** doesn't work on all systems: from os import urandom as _urandom try: _urandom(0) except NotImplementedError: from random import Random as _R else: from random import SystemRandom as _R Next, DRY, move all your string constants to the class, and while we're at it don't consider what is actually a special character for many password systems a lowercase character. Also use some **string** module constants to simplify some of this, and don't bother converting strings to lists, as **random.choice** will work with strings fine. Finally, while we're at it, let's add some consistency to our variable naming and follow pep8. import string class PasswordGenerator: """Some useful docstring here.""" _r = _R() lowercase = string.lowercase uppercase = string.uppercase digits = string.digits special = "!@#$%^&amp;*()_\|/?{}" # we'll see why this next bit later l33t_map = ( "ABEGHILOSTZabeghilostz", "483&amp;#!10$72@83&amp;#1|0572" ) Next let's actually open our dictionary *idiomatically*, and not bother using *name munging* to provide a false hope of privacy for the contents of a plaintext file that must be literally sitting right beside this one for our program to work. try: with open('dictionary.txt', "rU") as src: self.words = set() for line in src: self.words.add(line.strip()) except FileNotFoundError: raise Exception("Dictionary is missing; word passwords not possible") Now we will skip right over the entire idea of tracking used passwords, as a) **this is about as secure as a greased live fish in the hands of a quadruple amputee**, and b) if our random source is any good we'll be waiting a LONG time for a collision. So, again with suggesting you follow pep8, and the above, I think you can see your way through to shrinking the rest and eliminating repetition and dead end ideas. Most of your functions are reasonably sound, but the used password idea is just totally terrible and functionally pointless. *Except* for one other thing... In **l33t**, you can now -- after changing the argument name to "password" to not stomp all over the very useful **string** module, so this: l33t_password = password.translate(string.maketrans(*self.l33t_map)) Then step over the two to blend randomly if you want, and also allow an argument for percent l33t. By the way, overall, defaults arguments for maximum password sizes are a good idea. My code reviews are a little harsh, and this one is long and I can't get to all of it, but keep going, it's a good first pass, though choosing to do a password builder is rough, cause it's easy to get WAY wrong.
Yea that helps, and I use something similar I PyCharm a lot but that doesn't help when changing code. I really like having stricter matching rules at the call site to make sure I'm passing the right argument to the right input. 
Maybe check out some R jobs if you're interested in data science specifically, in some areas R is still more prevalent. It's a worse programming language and deep learning stuff is pretty non-existant there, but it's easy to pick up and you can learn a lot of general data science things with an R job that can be easily transitioned to python later
No. Well, short of storing a *current* cryptographic best practices hash of every one of your generated passwords, then checking against that. Which, given the odds of collision, isn't exactly a small amount of work for a high amount of gain. And you'd have to have some sort of fallback mechanism for future improvements to what *current* means.
Like you said, It is possible to write mobile applications with Python :) But, you need to clarify your question, because IoT field is not precise at all. What do you want your application to do ? If you have some use-cases, constraints, needs to show us, it could be a good start to evaluate wether it possible or not to build your application with Python.
Your question is pretty broad, so expect very broad or nonspecific answers. Yes, it can certainly be done; I'd suggest Kivy with a MQTT library which would connect to [insert IoT device here].
I'm currently working my way through this course and so far it's great! I had a little python background coming in and the pandas and data visualization sections have really made these packages make sense. I finally got to the machine learning part, but I've been so sidetracked with working on little data visualization projects that I've wanted to do that I haven't gotten into the meat of machine learning yet. Really great course, well paced and the capstone projects are a great learning too. Do recommend!
As an alternative to the nested for loop, you can use the supacool itertools built-in module :) It seems much more readable to me. from itertools import chain count = sum(1 for value in chain.from_iterable(tree.flags) if value &gt; -1)
I'm also starting with Python after having C++ classes. Here's what i'm doing to learn it: - First i have a project i want to reach. - Follow a group of 56 tutorial videos on a youtube channel that looks pretty good (7-10 min videos which are easy to see after work/university) - Readind "Think Python2", free book, that covers the basic stuff. Reading it when i'm not at home and therefor i can't watch the videos - After knowing how everything works, and since i have *a project* i'll deep into web scraping/data analysis libraries such as BeatutifulSoup, Pandas etc I tried to devide this learning curving line into steps. Hope it goes well! Good luck!
Clean code overall, I can see a couple of errors: * I think you are missing some returns on line 62 &amp; 84 of passwordGen.py. * you are defining `__usedwords` only if the file exists. With no file you skip the variale definition. That's a bug. * Why converting string to lists? 99% of the time strings are just fine. A few more general observations: * `usedpass.txt` and GNU are a bad combo: if everyone knows you're code everyone knows where to find the user's used passwords. So `usedpass.txt` simply make it easier to crack a pwd. * A little pep8 here and there, working by youreself it doesen't seem important, but if this where team code, i would have tought that lowletter and upletter where single letters, not lists of letters. * Do not re-invent the wheel. Few points can be done using Python's standard library: * as /u/yawpitch said you can user the string.translate api to make the l33t transformations. * to find the password-like balance in random chars picking you can use the Python 3.6 (because you are using python &gt;= 3.6, right??? ;) ) wheight random.choices: import random import string charsets = ((string.ascii_lowercase, 2), (string.ascii_uppercase, 1), (string.digits, 1), ("!@#$%^&amp;*()_\|/?{}", 1)) chars, wheights = zip(*[(charachter, wheight) for charset, wheight in weights for charachter in charset]) selected_chars = random.choices(chars, cum_weights=wheights, k=random.randint(8,17)) pwd = ''.join(selected_chars) 
For your particular application it's probably easier to just do a Markov chain manually? Count up bigrams in your corpus and scale the resulting histogram to [0.0, 1.0]. Then just sample from that distribution, given some seed. Might work well enough if the corpus is limited? But then again, [maybe not.](/r/subredditsimulator)
If you're not so good at reading regular expressions and want it to keep it that way then this is pretty great.
I love courses form Jose, I finished python bootcamp and Django as well. Amazing courses, lots of content and he explains all very well. I bought all for £10 each on Udemy, don't be fooled with that £195, they lower prices all the time. I'm having that data science course as well but I haven't started yet. Any good? 
How are you doing it now? If you're using NumPy, then it should be as easy as: import numpy as np data = np.random.randint(2, size=(n, m)) 
The Python community is huge. The PSF is not going to jump in every time there's a conflict. Write another page supporting Zed and opposing that wiki page. Get all the people who like the book to sign onto it. There's no official statement here one way or the other. There are just people expressing their opinions. When an author writes a book, they have to deal with critiques. The PSF also doesn't try to remove negative reviews from Amazon. This is the internet: people have opinions.
Works fine here (OSX all up to date with conda all up to date) ``` $ rust_pypi_example 13 True $ python --version Python 3.6.0 :: Continuum Analytics, Inc. $ pip --version pip 9.0.1 from $HOME/anaconda/lib/python3.6/site-packages (python 3.6) $ python -c "import pip; print(pip.pep425tags.get_platform())" macosx_10_12_x86_64 ``` Have you seen the discussion about pep 517 on Distutils-sig (https://mail.python.org/pipermail/distutils-sig/2017-July/thread.html) ? several month long so you can skip a lot. There is some discussion about sdist and building compiled dependencies.
That gives you a random matrix of zeroes and 1s. Take that as a starting point, say there are 11 ones and 14 zeroes. I now want to turn a randomly selected zero into a one, everything else remains as is. That's the bit I'm stuck with.
Hints: * `numpy.where` returns indices where a condition holds, so `numpy.where(a == 0)` returns the indices where the elements of `a` are zero. * `random.choice` picks a random element from a list.
Ok, so you just have to choose which element you want to change: import numpy as np n, m = 11, 14 data = np.random.randint(2, size=(n, m)) # Pick elements at random until you find a zero, and flip it while True: random_ni = np.random.randint(n) random_mi = np.random.randint(m) if not data[random_ni, random_mi]: # "0" is "False" in Python data[random_ni, random_mi] = 1 break
That looks very strange I think. Shouldn't the template code be just "{{ form }}"? It should be able to render itself and then do the correct thing. If not, I suggest looking into tri.form, which is a library that is more flexible, and I'm one of the main authors of :P
If you're using Windows 10 you can run Linux pypy3 binaries using the new Linux subsystem.
I think your code does not do what OP is looking for. This would create a 11 x 14 matrix, with a random number of zeroes and ones (and not 11 ones and 14 zeroes). Also, your method of switching the zeroes to ones does indeed work, but it would require more than NxM operations to completely fill the array with ones. The solution from /u/TheBB is exactly what OP needs.
Thanks! This looks amazing.
Love matplotlib
Even if you're good at it, they are damn not intended to be read haha. Wonder if VerbalExpressions has groups feature, which is pretty handy with regexes.
You can implement it with Kivy, but if you have some knowledge with JS, would recommend using ReactNative to develop the mobile app and using Python on your backend services. Regarding the backend part, your question is very broad, but many IoT applications use (soft) real-time requests, you'll probably need an asynchronous framework, just check first if that's also the case for your application.
Try looking for Python meetups, there are certainly companies that use Python in Lithuania (and many research institutes as well), it's a good start to find jobs with technologies that you want to work with. It's hard to beat Python for general purpose applications that use some sort of scientific computation. Not to mention that the best part of Python is the community (:
Learning a language has little relation to what jobs there are. Unless the language is very strange it matters mostly that you know more than one language and not much which language you do know. 
What advantage does this course have over the numerous free courses out there?
however, their solution requires searching the nxm matrix with `where` at each iteration, so it really takes n^2 * m^2 operations. asymptotically they're of similar complexity. EDIT: actually, /u/TheBB's is faster for large M, N, because its average time per iteration interpolates between O(1) for the first flip to O(M*N) for the last. So the overall complexity is something like O(M^3/2 * N^3/2) vs O(M^2 * N^2) - this is of course assuming you don't use some sort of caching scheme.
It is only a thin 'regex-string concatenator'; I don't see anything about groups: https://github.com/VerbalExpressions/PythonVerbalExpressions/blob/master/verbalexpressions/verbal_expressions.py This is also why these tools are a bit tricky; the simplified abstraction doesn't hold.
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [VerbalExpressions/PythonVerbalExpressions/.../**verbal_expressions.py** (master → dc8b95f)](https://github.com/VerbalExpressions/PythonVerbalExpressions/blob/dc8b95f311556c7b04574fde99fc3a9316a671f6/verbalexpressions/verbal_expressions.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dk0wutj.)^.
What do you use for Python interop with other languages? * zmq, grpc * c-api, cython * cffi, ctypes * REST API
In Python strings are immutable. You can't modify a string.
You forgot rpy.
This kind of question should be asked on r/learnpython. The simplest solution would to use a list of character instead of a string (`word = list(word)`). But there is another problem with your solution. In to access the `i`th index of structure it must already exist. What you want is append something to the end of `reverse_string`, not change the inexistent thing at the `j`th index. Also note that with unicode, naively reversing a string like is wrong because of combining character. For exemple reverse "été" in the NFD form (`word = unicodedata.normalize('NFD', "été")`) will get a wrong result.
I think you should not learn Python just to get a Job. I work mostly with PHP and JS. I learned Python for Fun and now i have some small Projects in my Company where I use Python :) So if you WANT to learn it, go on. Learing it just for the Job is imho the wrong way.
I should have called c-api based, which what Cython, rpi2, pythonnet, etc do
Yeah, that's the thing but my overall goal is to get employed and that's what kept me wondering if I should do Python or not
CFFI, iirc, because it's handy with using Rust libraries in Python. 
Pybind is pretty good for c++. It's almost plug and play compared to Cython. https://github.com/pybind
Maybe people think 'you get what you pay for', which is a conventional wisdom saying rather than an economic principle. EdX courses offered by professors at MIT, Caltech, and Harvard, or Stanford, Johns Hopkins, and Princeton on other platforms are excellent, and mostly free. Generally, paying just changes the label on documentation that you completed the course.
I don't see your vote, did you vote?
Same category c-api based, pybind is more comparable to boost.python, than Cython imo
Yes, I did. 
First have you examined the site's ToS and robots.txt? You not may get recognized and blocked quickly. Maybe even while you are testing. Second I don't know the industry well, but I imagine it's like the stock exchange where people pay good money for real estate and internet connections that give an advantage. Both of these things may lead to your effort being wasted, because you could get blocked or crowded out.
After basic testing, I believe they have IP lock. I can't access to their web successfully everytime. How do I check with this and how to deal with this？
{site}/robots.txt will state if you can only perform a certain number of requests per second or if your bot is prohibited.
i can't find anything by going to link/robot.txt . Is there a way to get it by using Python？
Thank you for the review. I think harsh is good, especially on this project, and for a number of reasons. This is my first open source *anything*, so I was following the GNU GPL guide as closely as possible. I did think it was overkill, but I also didn't want any liability in case someone made it malicious or something. I've never heard of the string module, I'll definitely look into it. While focusing on modules, I know that SystemRandom says it doesn't work on all systems, though it specifically says that Unix/Linux have a source for it's randomness, as does Windows. Doesn't that cover pretty much every operating system? I'm just curious, but why such a heavy adherence to PEP8? Despite not following convention, I felt my naming scheme was still pretty straightforward. Thank you again, I appreciate it quite a bit 
User-agent: * Disallow:/?* Disallow:/search.aspx? Disallow:/ticketbook_*.html Disallow:/projectlist.aspx?* Disallow:/projectlist.do?* Disallow:/projectlist.html?* Disallow:/*.html?* Disallow:/old_alltickets.aspx?* i got this, is it able to bot？
I'm unfortunately using 3.5 haha I was going to move up to 3.6 the moment my new laptop got to me. It's a habit I need to break, but it's pretty common in all my code to do unnecessary type conversion. It usually happens because I go with the first idea I come up with, rather than pause and think whether or not it's actually needed. Thanks for the feedback
i personally just like using a dict menus = { 'main': 'Welcome to the Main Menu', 'login': 'Please login' } although for any menus with large amounts of symbols (-, _, /, |, \\) it might get a little messy 
I'have never used just "{{ form }}" and i've never seen this in any tutorial. I fixed it with form.roles.raw_data. I know, it's not a best idea, but it works :D Thanks for the tip, i will look at it :)
Well...one popular book/videos are: Automate the Boring Stuff With Python http://automatetheboringstuff.com/ https://www.youtube.com/results?search_query=automate+the+boring+stuff+with+python https://www.udemy.com/automate/ 
Ahhh...sorry. That missed that. If `threshold_adaptive` is deprecated and you are using `threshold_local` and you *still* get the "Global name threshold_adaptive is not defined" error, you need to make sure that *all* instances of threshold_adaptive have been changed to threshold_local and that you are importing threshold_local properly from `skimage.filters`. Does that make sense?
Without any smart caching thing, you don't need to use `where` more than once (actually, if you start with an matrix of 0s, you don't need it at all). You just use it for the first pass to select the 0s available, you put that in a list, and then use the `np.random.choice` (which I think has O(1) complexity) at most `M x N` times. So far, we still have O(M x N). The issue will be to actually *remove* elements from that list. If the list at has P elements at any time, the cost of removing one element would be O(P). So doing that M x N times requires (MxN)^2 operations (actually, (MxN) x (MxN-1)/2, but it's close). A superior solution (I think) would involve shuffling all the available positions once and for all (using e.g. the standard lib's `random.shuffle`, which would be O(MxN), and then popping the last item of the index lists (which is O(1) complexity, because it is *the last index*), so this would limit the complexity to O(MxN). But I might be wrong… EDIT: for the last solution, there is no actual reason to pop the index, just iterating over all of them should be enough. The question was just to randomly select the elements of an array one after another once and only once… so you just want a function that goes from 0 to MxN-1, and gives a 2D-index (i,j). And then, just get something like `random.shuffle(list(range(M*N)))`, and iterate over that… I think I invested too much time on this :)
No everything is prohibited and your bots/ip will be blocked. Sorry.
I have no python experience and have been wanting to get started. Would I be fine starting with this course or should I learn some basics first?
You can cheat yourself through this by writing a function that accepts non-letters as indicators for colours, or boldness, and outputs a string. It really helps with Usability, for example, to highlight shortcut keys.
Is thet Jose's Django course on udemy worth it ? 
You can use PyQt with QOpenGlWidget.
CFFI, [PythonNET](https://github.com/pythonnet/pythonnet), [pymatbridge](https://github.com/arokem/python-matlab-bridge).
Learn basics. Data Science and Machine Learning are fairly dense subjects, and then you're stacking a programming language on top of that.
I would say they're gold. I'm a noobie just started learning python and they were pretty helpful for me. Especially the bootcamp one. Django has two big project to do at the end so you can check how much you can do. They seems like real life projects so that's good as well. He explains everything clearly and what's best he responds to questions from students. Just wait when they will be 10 pounds/euro. 
Thank you
is there any way to bypass it？
Seems absurd to me to have a forms library that can't produce forms! http://wtforms.readthedocs.io/en/latest/crash_course.html#rendering-fields at least gives you a way to render an entire field at a time. But this still seems very under powered. 
Is that your website or something? 
Oct2py (for octave)
Hardly any original content on it
You could use a `Counter` object: from collections import Counter count = Counter(flag &gt; -1 for sublist in tree.flags for flag in sublist)[True] 
If you have cython then why not jython (python on the jvm)?
I believe kivy: https://kivy.org can do what you want.
I specialize in creating location intelligence data dashboards and data pipelines. Is the Dash best practice to use mapbox vector and raster solutions like the oil and gas demonstration? I noticed that plotly.js has a few geojson vector files for the world, US at two resolutions. To produce high quality geo visualizations I need to use other administrative &amp; non administrative boundaries. In the past I have mostly used R ggplot2 and d3.js. I have spent many hours trying many of the different python libraries, but a lot of effort is required to transform shapefiles polygon, multipolygon, polygons w/ holes to the python libraries format. An example would be the separate x and y columns in Bokeh which are more efficient. Geopandas has a single geometry column with a geoseries object and leverages gdal and fiona, but outputs to matplotlib. Matplotlib is fine for static reporting, but is not good for interactive plots. Altair on vega-lite and plotnine may be alternatives in the future. I have avoided integrating python data pipelines with Tableau because it is not a good solution for my smaller clients.
openvpn can run as a service on any Linux distro so it really just depends on the function of why you're connecting and disconnecting. You can write a script to make the vpn up or down built into the openvpn command as well. No reason to reinvent the wheel using python.
Saved you 7-ish clicks: * https://www.udemy.com/python-for-data-science-and-machine-learning-bootcamp/ * https://www.udemy.com/learn-python-3-from-beginner-to-advanced/ * https://www.udemy.com/the-python-bible
Those pages aren't critiques. They are personal assaults. Think about what's going on: 1. Common resources are used to attack one person. 2. There is no outrage by community leaders (like you) that common resources are being used to attack one person. 3. There is no outrage by community leaders (like you) when very public forums like this one moderated by other community leaders allow unbridled attacks against specific individuals. 4. The community (and it's leaders such as you) doesn't step up and deal with the problem, instead of shrugging it off. No wonder why Zed isn't publishing his proof. He's protecting his sources. If I were an author, I would be terrified to say anything publicly. In fact, I asked a couple authors via PMs and they confirmed Zed's testimony. Have you actually tried that or are you going to sit there and think nothing is wrong within the PSF and the community it represents? For what it's worth, your lack of initiative in this matter is EXACTLY why Steve Holden got away with molesting people like me (female, not-white) for so long. Why Kirby Urner used to send people like me (female, not white) nasty emails telling me what I can and can't do. Because people like you, "community leaders" just shrugged it off. Well, not all of us are privileged white men like you, Ned Batchelder. Must be nice to be you. 
1) As you already said, a database is not at all needed. A simple CVS, JSON, or even plain text file would probably work. 2) you could try using pyqt to create the gui, it is rather simple. 3) to my knowledge there is no easy way to run Python code on an iPad. If it is jailbroken you could run a basic command line script, but I don't think that you would be able to get the gui library/module onto it.
Thank you very much for the response!
In keeping with the code of conduct, can we please respect people personally even as we critique their work?
I'm not sure what common resources you are referring to. The only page I've seen mentioned here is this wiki page: https://sopython.com/wiki/LPTHW_Complaints . That site was made by someone from the StackOverflow community. It has nothing to do with the PSF. You say it attacks one person. Have you read that page? It never mentions the author once. It is a critique of the content of the book. Some of the comments here on Reddit are very personal, which I think is uncalled for. I've just commented to that effect on the top comment. BTW, this supposed "attack" on the book seems remarkably ineffective: the book is still available, still under the control of Zed, and according to Zed, is reaching lots of people. If you have more information that you can share, I would like to know more. I can be reached a number of ways, including PM's on freenode. I don't know about the other events you're alluding to. They sound bad, but I don't know anything about them. Again: I would like to know more.
/r/learnpython Give selenium a try.
Got a good tutorial for it to get me started? 
http://selenium-python.readthedocs.io/
Looks like a command line TODO/tasks app
Jython is alternative runtime, not interop library
So? I can write Python code in it, and it can interop Java libs.
Commenting only so this can go higher. Your work should not go unrewarded.
This question gets asked every week... well, minus the javascript trolling.
You are doing gods work! r/savedyouaclick
What are using CFFI and pythonnet for?
Thanks for the links.
I also have a telegram bot. [Here](https://github.com/sharadbhat/TelegramBot) Where are you hosting it from?
Also, it's sort of like paying for gym membership: the fact that you put down money on something makes you (sometimes) put more effort into actually doing it. I use this exact dynamic for my Udemy programming course, where coupons make it cost $10, even though I'd give it away for free. But I want people to have some motivation to follow through. That, and I also like money. :)
 There is a whole sub for this /r/learnpython/
r/learnPython 
Find/think of a project that u like, and try to make it in .py. And learn python through you application or w/e u wanna do. That was my way. I made an app in .py for college as my first .py project and then with the same app i was learning django for web development.
IMO, if you know how you learn then that helps narrow down your resources some. I am a visual/audio learner and write things down via notebook/web notes. Udemy was a fantastic resource for me to learn Python in about a weekend of vigorous learning. I was not a master at Python coming out but I understood the concepts enough to build a program I wanted to build. On a side note, for that project I still hone my skills and find things to optimize that program even after a year of practicing at work. Keep on learning and good luck to you.
You have the right idea, you just have to make the labels list global. In other words move line 104 to line 89 and unindent it completely. However, you are doing it wrong. You should not make a new Label for every image you are loading, you should make one Label and update it as needed. Your code also has a huge amount of other problems. I recommend you post this on /r/learnpython for some tips. 
Neither am I, apparently. Texas doesn't do this &amp; isn't required to by the fed. gov't. Boo.
+1 for Udemy. Best learning tool for me since i learn best the exact same way u/teamvdash mentioned. Visual/Audio learner and writing things down on Word. I also recommend "Automate the Boring Stuff". They have their videos on Udemy or you can read it online for free.
Please read the sidebar.
There are *way* more operating systems out there than Windows and Linux (cough, MacOS, Apple like largest market cap company on Earth, cough cough), and not even all Linux distros have urandom. The thing with pep8 is it sets *a* standard, and it's a *good* standard... if you strictly adhere to pep8 your code **will** be readable by anyone who works in Python. And that's a huge boon to maintainability. Newer languages like **Go** have gone so far as to say there just is **one** true format, and believe me it really does save time and energy and makes life easier for everyone that comes later. The other thing is anyone who has a truly good argument for deviating from pep8 (like Google) has to have really understood it's benefits first. And camelCase just sucks for variables, anyway. It communicates absolutely nothing unless ALL your variables are twoWordOrMoreLong.
I would recommend to to switch to Linux! ;D
Hello there, Thanks a lot for sharing your thoughts, I read your comment with huge interest. I did comment some of your ideas below, hope it would be useful or at least interesting to you :) &gt; What I don't want to use this design pattern for, is a substitute design pattern for building a bunch of interfaces. Zope's architecture was full of interfaces and being the copy cat that I was at the time (plus I came to python from a c# background) I started writing interfaces everywhere when I first started using python. Hated it. It over complicated some simple applications or scripts that I was writing in python. - Agree, also don’t like zope interfaces. &gt; I have since regressed to using inheritance and compositions (mixins) to string things together. On top of that I have added module(s) that track state and share varables without using globals. - Good, the same here. &gt; I make sure that the app runs completely from the command line. Lots of cli screens that mimic what the gui will show. What happens now is that my GUI calls into my cli components. The cli in turn calls business logic. And the cli components that print to the terminal, avoid printing to the screen if they've been called from a gui widget. - Well, I currently try to make the same on one of my personal projects. Try to use DDD, so have only domain modules and integration tests. It now goes well, but I look really interested in building interfaces around this in future, hopefully it would be easy. &gt; I'll give this design pattern some more thought to see if it will make my design simpler. If anyone is using dependency injection to manage their gui's, I would be interested in chatting with them. - I don’t work with GUI, but when I read your comment I had dejavu about what you’re talking about. My personal memories were related to a huge dating platform with tons of business rules that I had to architect some time ago. In few words I would recommend to two things (that, perhaps, you already do): 1) split everything you can to have simultaneously not more than 10 components with 5-7 business functions each, 2) continuous refactoring. In my previous experience, I achieved 1st point by using micro services, but I don’t think it’s something that could help you to build GUI. In general, big products are hard to work with… Thanks a lot, Roman
Yeah but it's way too vague. I'm trying to put together a "course" for myself to learn. In that subbreddit hey throw out hundreds of different resources and I'm trying to find a specific few to teach myself with.
I don't think there is much difference if any, usually not big enough to justify the cost. I tried to buy few courses once to check if paying would better motivate me to complete them but it didn't work :D 
Works here on Arch Linux too :) python 3.6.1 
Thanks, it works like a charm now. I'll head to /r/learnpython for more tips.
I saw now that you're hosting it on heroku. PM me if you don't mind helping me host my bot on heroku too.
You know i was told that back in high school but i never looked into it. As i look now i see that ubauntu is the most basic? As a wimdows user my whole life how hard is this going to be?
Im using the C-API because Im using the new frame evaluation API (PEP 523), which I need to run quickly. I also use Cython a fair amount.
As has been mentioned here by /u/isinfinity , asyncio.run_coroutine_threadsafe will help you out. Take a look at the examples in the docs and it might turn out to be a very simple solution. 
Wrappers for vendor supplied DLLS to make Python modules to run tools instead of making our developers use C or .NET.
So this is interesting - some similar use cases here to security telemetry. Are you able to use cloud services for this? I.E not reinvent the wheel? Sending log data to a pub/sub (Kafka, SNS etc) seems like a scaleable design choice. From there you could feed into your python lib of choice. 
Hey, Thanks a lot for so extensive comment. Really appreciate sharing your thoughts. I did put some comments to what you were talking about and, moreover, created some sample code that demonstrates how you could achieve what you were looking for, so: &gt; Now you have instances of Container or Provider floating around in your business-code and are calling these directly. Shouldn't a DI framework be more or less transparent to the application? - Yes, exactly. I always had an idea that DI framework should not “pollute” your code with itself and I always kept it as main idea. Moreover, I removed @inject decorator from this lib in its 2nd version and it was a last feature you could “pollute” your code with. Other thing is that may be this assumption indeed doesn’t go as a red line through the docs, but I was thinking about making a microframework (or even just a library) that doesn’t tell you how to build your application, but provide you some tools you could use as you want. &gt; Oh, did not know that. But is it really worth the effort (and the hard dependency of a full build stack and python header files on any machine I want to install this, because there are no pre-build wheels)? - Yep, no wheels. I need to think on including this to distribution. At least one person already asked me for doing this for Windows. &gt; Are there realistic benchmarks? I kind of expect benchmarks to exist when a library claims to be 'High performance'. - Well, there are some tests, but I feel painful to call them real benchmark. There are some results and a link to the tests https://github.com/ets-labs/python-dependency-injector/blob/fa120b2a31603ed2544850422912b0223cfb38f9/tests/performance/test.py: $ python tests/performance/test.py Running tests for module - "dependency_injector.providers": Test "test_abstract_factory_3_factory_kw_injections" took - 3.1625289917 Test "test_factory_3_factory_kw_injections" took - 3.18233203888 Test "test_factory_6_factory_kw_injections_0_context" took - 3.06109786034 Test "test_factory_6_factory_kw_injections_1_context" took - 3.75910806656 Test "test_factory_6_factory_kw_injections_3_context" took - 3.59341287613 Test "test_raw_3_kw_injections" took - 2.72111582756 - Generally speaking, it shows that instantiation of object with 3 keyword arguments injections using Factory (“test_factory_3_factory_kw_injections”) takes mostly the same time like doing the same by wrapping object’s creation in simple function (“test_raw_3_kw_injections”) 3.16s vs 2.72s. Our Python version did take ~50seconds for “test_factory_3_factory_kw_injections”. So, that’s what I have. Now here is an example of add_user(...) and mail service. I did make some sample code: """Mail service and user registration example.""" class AbstractMailService(object): """Abstract mail service.""" def send(self, email, body): """Send email.""" raise NotImplementedError() class MailService(AbstractMailService): """Mail service.""" def __init__(self, host, port, login, password): """Initializer.""" self._host = host self._port = port self._login = login self._password = password def send(self, email, body): """Send email.""" print('Connecting server {0}:{1} with {2}:{3}'.format( self._host, self._port, self._login, self._password)) print('Sending "{0}" to "{1}"'.format(body, email)) class MailServiceStub(AbstractMailService): """Mail service stub.""" def send(self, email, body): """Send email.""" print('Emulating sending "{0}" to "{1}"'.format(body, email)) def add_user(email, password, mailer): """Register user.""" mailer.send(email, 'Your password is {0}'.format(password)) After that I've created DI container with some examples how you can run it: """Mail service and user registration DI container example.""" from dependency_injector.containers import DeclarativeContainer from dependency_injector.providers import Callable, Singleton import example class Container(DeclarativeContainer): """DI container.""" mail_service = Singleton(example.MailService, host='localhost', port=587, login='my_login', password='super_secret_password') add_user = Callable(example.add_user, mailer=mail_service) if __name__ == '__main__': print('Using real mail service:') Container.add_user('sample@mail.com', 'password') # Using real mail service: # Connecting server localhost:587 with my_login:super_secret_password # Sending "Your password is password" to "sample@mail.com" print('Using mail service stub:') Container.add_user('sample@mail.com', 'password', mailer=example.MailServiceStub()) # Using mail service stub: # Emulating sending "Your password is password" to "sample@mail.com" # Also you can override provider by another provider: Container.mail_service.override(Singleton(example.MailServiceStub)) print('Using mail service stub by overriding mail service provider:') Container.add_user('sample@mail.com', 'password') # Using mail service stub by overriding mail service provider: # Emulating sending "Your password is password" to "sample@mail.com" Container.mail_service.reset_override() # Resetting provider overriding Hope it helps, Thanks again for you feedback, Roman 
It won't be hard if you are really interested in switching your OS. I recommend it because you said you have old hardware and Linux definitely runs faster than Windows. I am using Linux Mint and Arch Linux but for starters Linux Mint is better. I would also recommend to get a SSD, this will significantly speed up your operations!
I can agree with this. Somehow, I picked up your course for free. Still haven't done anything with it.
The sprints are free to participate: https://scipy2017.scipy.org/ehome/220975/493419/
Yes, but this is one way interop with poor support for Python libraries (e.g. Py3 or C-ext) and first-class for Java libraries. But JyNI may change this partly in the future.
preferably using python-3
 ROLES = ('guest', 'user', 'admin') ROLE_CHOICES = [(o, o.capitalize()) for o in ROLES] ~~~~ @admin_blueprint.route('/admin/modify_user/&lt;string:id&gt;', methods=['GET', 'POST']) def modify_user(id): user = User.query.filter_by(id=id).first() if user is None: abort(404) form = ModifyUserForm() form.email.default = user.email form.password.default = user.password form.roles.default = ROLE_CHOICES[ROLES.index(user.role)] if form.process() and form.validate(): try: form_data = form.data user = User.query.filter_by(email=form_data['email']).first() user.email = form_data['email'] user.password = form_data['password'] user.roles = form_data['roles'] print(form.roles.data) print(form.roles.default) print(form.roles.choices) db.session.commit() except Exception as e: print(e) return render_template('admin/modify_user.html', form=form, id=id) ~~~~ roles = SelectField('Role', validators=[DataRequired()], choices=ROLE_CHOICES)
You have several terms mixed up. You can't "have a json". Json is just a text format. You probably read a json file and now you have a list object where each element is a dictionary. As you found out, sets are not part of the json standard. However lists are, so if you want to save your set as json, convert it to a list first. &gt;&gt;&gt; from collections import defaultdict &gt;&gt;&gt; import json &gt;&gt;&gt; data = [{"a": 1.0, "b": 2.0}, {"a": 5.1, "c": 10}, {"b": 20.3, "a": 1.0}] &gt;&gt;&gt; new = defaultdict(set) &gt;&gt;&gt; for element in data: ... for k, v in element.items(): ... new[k].add(v) ... &gt;&gt;&gt; new = {k:list(v) for k,v in new.items()} # convert sets to lists &gt;&gt;&gt; json.dumps(new) '{"a": [1.0, 5.1], "c": [10], "b": [2.0, 20.3]}' EDIT: misread your question; fixed code to match your requirements. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Oh, and he's such a nice bloke, he buys his mother flowers and things. To put it another way, he has to give his crap books away because he can't sell them. Please stop trying to defend an areshole like Zed Shaw, he will always be an arsehole. Should anybody attempt to get this revolting git get his "books" linked on reddit I will fight hammer and tongs to keep him out, he deserves nothing except complete contempt from the entire Python community.
Only security fixes since 2012, could have fooled me. The latter is of course completely wrong, only PSF support stops in 2020, but then I note that you have a tendency to state things as facts that are actually incorrect. You should be in politics.
I couldn't care less what he does. His book is solid. 
Also note that we are expecting to release a bugfix release later this week.
No need to wait, you seems like can get it for £10 using a coupon code "UJ1L202" instead of the one entered at checkout. (found [here](http://www.couponism.com/stores/udemy-coupon?gclid=Cj0KEQjwy4zLBRCOg6-4h6vs3cUBEiQAN-yzfrbTQHdBxfOQHaefPaxAHaRYJthmsCigoczWo2ysHe0aArRi8P8HAQ) via google) edit: missed a word
https://stackoverflow.com/questions/645312/what-is-the-quickest-way-to-http-get-in-python/645318#645318
Is this Cython and C-API usage really for language interop or for performance boost?
Thank you!
Wow, thank you! This was $195 at work and I just scored it for $10.
So I am the creator of this course, by the looks of it, this is just some sort of affiliate account copying and pasting course descriptions on to a Medium article, I'm not sure how helpful that is or how much it really contributes to the subreddit. But in case you are interested in the courses we just had a summer sale, here are the codes for them: Python and Django Full Stack Web Developer Bootcamp https://www.udemy.com/python-and-django-full-stack-web-developer-bootcamp/?couponCode=DJANGO10SUMMER2017 Python for Data Science and Machine Learning Bootcamp https://www.udemy.com/python-for-data-science-and-machine-learning-bootcamp/?couponCode=PYDSML10SUMMER2017 Spark and Python for Big Data with Pyspark https://www.udemy.com/spark-and-python-for-big-data-with-pyspark/?couponCode=10SPARKSUMMER2017
Thanks!
Commenting here so people can see these links (I am the creator of the Data Science course), the OP original link seems to just be some random affiliate Medium article which just copied and pasted the course description, if you need links (and coupon codes) here you go: Python and Django Full Stack Web Developer Bootcamp https://www.udemy.com/python-and-django-full-stack-web-developer-bootcamp/?couponCode=DJANGO10SUMMER2017 Python for Data Science and Machine Learning Bootcamp https://www.udemy.com/python-for-data-science-and-machine-learning-bootcamp/?couponCode=PYDSML10SUMMER2017 Spark and Python for Big Data with Pyspark https://www.udemy.com/spark-and-python-for-big-data-with-pyspark/?couponCode=10SPARKSUMMER2017
Thanks for the coupon codes! 
egfd
/r/learnpython I'm guessing your question is evaluating "A() or B()", does B() terminate midway? That's not how python interprets it. It's evaluated right to left. B() is called only after getting the result for A(). If A() returned a truthy value, B() will not be evaluated.
If you're a total novice, stick to familiar environments.
Just don't buy the magazine! That publisher just publishes crap that is almost close to worthless. They will only barely give lipservice to any thing on the cover.
No, the whole point of a short-circuit is that it happens precisely because *no other outcome could change the results of the boolean operation at that point*. Once the first parameter of an AND statement is false, the whole AND is always going to be false no matter what the second parameter says. Now, that's not to say that the second part of the operation might not have important stuff in it, of course it *can*. Indeed, if the second part of the AND is a function call, that function can be programmed to do all kinds of stuff like writing files to disk or even changing the program itself. But it won't have an opportunity to, and that's why they're telling you about short circuiting. If the first parameter causes a short-circuit, **the second parameter WILL NEVER BE EVALUATED AT ALL**. The function call never runs. The program never even looks at it, because the first parameter has short-circuited out. If you aren't cognizant of this, you can run into unexpected behaviors very easily. On the other hand, if you want to get creative with it, you can use it for your own purposes. You just have to KNOW that if the first parameter of a boolean operation makes the result of that boolean operation certain, the second parameter will never be checked or executed. For AND booleans, that means that if the first parameter is FALSE, the second parameter will not be evaluated, because a TRUE return value from AND is already impossible to achieve. if "abc" == "abcd" and never_execute_this(): print("Don't worry, never_execute_this() will never run, and we'll never see this message either") For OR statements, it's the reverse. If the first parameter is TRUE, then the second element does not need to be evaluated, because we already know the whole boolean is TRUE. But if it's false, like it was above, then the second parameter IS checked, because it could still possibly make the OR become TRUE. if "abc" == "abcd" or never_execute_this(): print("Uh-oh, never_execute_this() will run, and we might even see this message, depending on what it returns!") 
If you haven't written any code yet then you should start smaller. Simply make something that clicks at all, and manually turn it on and off. import pyautogui pyautogui.click(100, 100)
Maybe add a bigger description at the top for people clicking through that haven't heard of MyPy before. It doesn't really give much of an insight!
The urllib.request.urlopen method defaults to "GET". #!/usr/bin/python3 import time import urllib.request while True: print(urllib.request.urlopen("http://google.com").read()) # This one pings the website and prints into the console the HTML content. urllib.request.urlopen("http://google.eom") # This one just pings the website. time.sleep(5)
2014 years ago i looked for this kind of thing but only found papers. Nowadays it seems like everyone how ever learned about NNs makes such a video. I know this is not a bad thing (certainly better than before from a learners perspective) but it is a very 'competitive' area and people are much more likely to view stanfords cs231n than yours even if it was just for brand value. .
I have not been following the progress of Distutils. That's a lot to take in but it looks like it will help. In fact I will probably see how it pans out before I worry about sdists. 
Nice! Doesn't Arch use Musl? I was concerned that might cause some issues but I'm glad to know it worked out. 
Thank you for your attention.
Try /r/learnpython for learning the language. This sub is more focused on news according to the sidebar.
No, unfortunately. This comes up on python-twitter quite a bit, but, as of today, there's no API support for polls from any of the major libraries that I'm aware of, because there's no official endpoint. That said, you can hack something together by emulating a request. I don't have the link handy, but google "corpora brackets" and you might find some guidance. Best of luck!
Be the change! This guys a great role model and an amazing speaker :)
ty - will do!
 my_list = [ {'name': 'alex', 'last_name': 'leda'}, {'name': 'john', 'last_name': 'parsons'} ] for person in my_list: for k, v in person.items(): print('{}: {}'.format(k, v)) 
You see something equivocal about the statement ["end of life"](https://www.python.org/dev/peps/pep-0373/)? And please, point out any [non-bugfix changes or new features](https://hg.python.org/cpython/raw-file/v2.7.13/Misc/NEWS) since *at minimum* 2012. Yes, you're right, the end of support of the 2 line by the Python Software Foundation -- the copyright holder and licensing entity -- the language's creator, effectively all the permanent maintainers, and the majority of the companies that fund it isn't significant at all to anyone's decision tree. You should be in religion.
I'm not sure what form you want to extract them in, but if you simply want to print the key/value pairs from each dict you could do something like this: my_list = [ {'name': 'alex', 'last_name': 'leda' }, {'name': 'john', 'last_name': 'parsons' } ] for d in my_list: for key in d: print("{}: {}".format(key, d[key])) BTW, I fixed up the list and dict formatting since the syntax wasn't valid.
It's probably faster (don't have time to test right now) to use pure SQL to get the rows of the database who match the criteria """Select * from table where username like "x%"; Where x is the letter you want to use. This also isn't limited to mysql since pymysql is a pep249 compliant db driver, you should be able to use this code with any db driver with minimal adjustments. Good walkthrough of dictcursors though, you might also want to post it to /r/learnpython 
Thanks for your response, and for taking the time to read my article. I haven't tested that but that would likely be faster. I do understand how to use pure SQL very well to achieve the same effect but the focus point of my article was, as you said, was to give a walk through on DictCursors instead of tuples, and using the PyMySQL library, and how you can perform logic on that data. The logic for finding the first letter of a username was merely just an example to demonstrate the concept to beginners. But I do plan on doing tutorials on SQL as well and your comment is a a good idea and I may write a follow-up article on how you can perform the same task using pure MySQL. Kudos.
Also I tried to post a link in /r/learnpython but I didn't see a button to submit a new link? Should I just write a text post summarizing the walk through and then post the link in there?
**Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
eh, maybe it's only for questions now. I haven't visited for a while
Send him $10 to get yourself motivated :)
Heroku, needs a little setup but it's easy to use
Honestly the Python community needs to be better at this: **if you are just starting, learn Python 3**, full stop. The reasoning is simple; Python 3 **is now; and has been for some time**, a *superset* of Python 2: except in specialist industries -- including mine -- there is *essentially nothing* you can do in Python 2 that cannot be done in Python 3 and with code that looks, practically, *identical*. The same is **not** true in reverse. **If and only if** your concerns are in one of those specialist areas, where -- generally out of ignorance or lack of funding -- there is some library that has been abandoned that you *factually* cannot live without, then *downgrading* your thinking is not hard. Writing Python 2 code with Python 3 *knowledge* is **easy**, it just means abandoning some features and speed gains and thinking in *bytes* instead of *text*. The *upgrade* path is harder, which is precisely why there are still *greybeards* who cannot stop giving examples in Python 2; if you want a long-term career in Python, **do not** follow in their footsteps, **unless** your *primary* ambition is to maintain an existing code base until either death, depreciation, or migration. I say this as someone who has been working for *years* in an industry that believes it will be stuck on Python 2 for at least another half-decade. The companies I have worked for have a **huge** investment in Python 2 and a *lot* of resistance to change. And I helped make any of the arguments for sticking to Python 2 when it was still clear that doing so would be actually agonizing, *I regret those arguments now*.
Metasploit is written in Ruby
The second line is literally "...mypy, an optional static type checker for Python"
While I agree with you, you muse understand a lot of Python dev are not professional dev, and don't know what a static type checker is. 
How do you feel about Datacamp's pricing? Is it worth it to pay for the premium courses?
Are Android Apps that useful to code or to learn to code? How do you learn to code without a proper keyboard? I tell people they learn to code with their computers writing small programs they want. But nice app :) 
Damn! I din't expect you here :D Amazing job on these courses! 
 wit_res = {'entities': {'greetings': [{'confidence': 0.9988349079725305, 'value': 'true'}], 'bot': [{'suggested': True, 'confidence': 0.9964376470728169, 'type': 'value', 'value': 'Marvin'}]}, 'confidence': 0.01652042496100638, 'type': 'msg', 'msg': 'My name is Marvin'} result = wit_res['msg'] Consider r/learnpython, r/learnprogramming/
&gt; google "corpora brackets" All I get is some twitter polls from @corporabrackets account :( 
I'm a total noob to programming so having a structured way to learn Python was great for me. 
Zed, I think people ITT are out of line, but one thing I would like you to remember, is that the people calling you an asshole are "internet calling" you an asshole. On the Internet, anyone who does something you slightly dislike gets called an asshole, everything is exaggerated to 11. It doesn't have the same weight as calling someone an asshole to their face IRL. In fact I'm sure most people writing these shitty posts didn't expect you to read them. I've called some game devs assholes/nazis/etc on reddit. On 2 occasions the dev himself replied, I apologized immediately, and explained it was just typical online hyperbole and I didn't actually think of them that way, and I never thought they'd be browsing reddit and reading these posts. It's probably the case ITT for (hopefully) most of these comments. Thanks for your contributions to the FOSS community.
A slow approach with multiple exercises is exactly how many newbies should be learning. What you find boring can be a good learning curve for others. More reinforcement before they move on to the next subject, which means they remember more. LPTHW is not aimed at developers, it's not aimed at people like you. It's aimed at pure newbies to programming, and we benefit from having Zed's different approach available in the ecosystem.
Clearly? According to who? Even the SO criticism page has only a handful of meaningful criticisms. The only thing clear from this thread is that Internet autists like you love hopping on a hate bandwagon when someone has a minor, inconsequential personality flaw (Zed's bravado). I wish you were a 2nd Zed Show instead of whatever it is that you are now (Le Snobby Redditeur?), humanity would be better off.
Thanks a lot.
Thanks a lot.
Thanks a lot.
The best way to go is to just to code in your computer / see other people code / explore the vast range of web content there is. However, I've started my python journey by using SoloLearn app for python tutorials: https://play.google.com/store/apps/details?id=com.sololearn.python&amp;hl=pt_PT If you really want to dive into it, the app guides you from the python basics into some intermediate topics with a lessons/quizz based experience. :)
That's criticisms, not mistakes. Just because some random redditor wrote "has a condescending tone" or "control should be taught before files" doesn't mean the criticism has any objective value (beyond people like you using it to circlejerk against Zed Shaw). The dude wrote a book targetted at newbies, not redditeur devs, and judging by the people answering this comment thread, he did a great job. You can never take that away from him, no matter how much of an insufferable debbie downer you try to be.
I've tried setting it up a couple of times. But I've never gotten it to work. 
Having a Python interpreter on your device is a good start if you want to code on a mobile. https://play.google.com/store/apps/details?id=org.qpython.qpy3 An alternative (which I use on a tablet) is to install Python via termux. https://play.google.com/store/apps/details?id=com.termux
A little sad that they're planning to phase out implicit Optional typing. I guess the goal here is to discourage people from using None as a default value. 
A lot of professionals have no idea either, *because* python is a completely dynamic language.
 my_vals = [val for d in my_list for val in d.values()]
Ahh.. okay. This is getting slightly confusing. Can you pastebin your code (or put in on a github gist)? It would be easier to talk about it then. Plus, I can see if I can run it on my own machine when I get the time.
Fucking love seaborn.
Google "Home Assistant", buy a raspberry pi, and almost any common smart lightbulb will be compatible. 
I've always hated markup that did stuff like this \[link\]\(http://example.com\) because I can never remember whether the text comes before or after the URL and whether it's ( ) first or [ ] first. 
It does not collect the keys :/
Alternative?
yet another one? the problem with plain-text-ish formats is really not the lack of choice IMO. i usualy recommend restructured text (in general because as opposed to markdown it's well-defined and not dependent on html-isms, and especially here because it works well with python and is shipped with docutils).
Thanks to MyPy for making Python bearable for a fan of static type annotations.
Pretty sure a real professional will have exposure to many languages, among them ones that allow static type info...
[Python 2.7.12 NEWS](https://hg.python.org/cpython/raw-file/v2.7.12/Misc/NEWS) lists going to 100 fixes June 2016.
I would say it should be flagged as a "code smell" but not an error. Typescript team did a wonderful job of being gentle and non-judgemental about partial typing. Because there's a lot of legacy code that can't get fixed all at once. But the newer Linters all flag untyped and wildcard typed variables as a warning by default.
Experimenting with sending logs to a server in order to keep track/help debug applications deployed in network we can't access.
REST to talk to other services if they are there already, but I usually don't specify a REST interface on my C extensions. I mostly use inter-language code to speed up calculations and the REST interface is something I'd use Python for, not C/C++. Currently mostly ctypes for speedups. The C-code usually only contains the performance critical part, all the checking and preparation happens in Python. I gave pybind11 a shot and it's a good project but I found I need its advanced features much less in practice than I originally thought. When I start with a Python implementation that just happens to become too slow for what is required, I also sometimes use Cython. It works very well once you know what details you have to specify, especially with the Jupyter Notebook support. But I found that distributing a small C library with a CMake/Make-file and calling it using ctypes often less problematic than distributing Cython sources.
I wish we had a flag that would trigger a bot to repost the current thread into /r/learnpython and then close this thread after posting a link to the new one. Or, if it had back-end access to the database, just move questions like this to /r/learnpython. And do formatting. 
**Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year!** \#1: [Python 201 Book is Free for 48 hours](https://np.reddit.com/r/learnpython/comments/5814lw/python_201_book_is_free_for_48_hours/) \#2: [Python 101 Book FREE for 48 hours!](https://np.reddit.com/r/learnpython/comments/5bmaz0/python_101_book_free_for_48_hours/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Yes. Duly noted.
FWIW here is a formal markdown spec http://www.vfmd.org/
use a dictionary?
its not so much the UPC being different, when I have to scrape a page to match a product in our catalogue, I have to be able to do the match , normally, without the UPC. So our product = Guitar , upc1233, £123.00 Competitor product = Guitar blue, £122.00 So, crawling = easy Grabbing = easy Matching our product to 'a piece of data with no specific unique identifying item' = harder :) 
So sure, replace my if block with a big dict. That still means every time I add a new enum, I need to change it in 3 places. 1) Add to actual enum 2) Make a class 3) Go find the dict and replace it.. I guess I can get rid of step 3 with metaprogramming...
Maybe http://google.com|Link title|
Wouldn't you have the same problem remembering if the link is before or after?
&gt; Added "auto" as a (default) option for tick labels in heatmap() and clustermap(). This will try to estimate how many ticks can be labeled without the text objects overlapping, which should improve performance for larger matrices. This is awesome.
It's still 2 different potential permutations to decide between rather than 4. It also helps that A) it's the same way around as HTML, B) the optional part of the link (the title) goes last C) When writing markup I almost always find the link first and then label it.
Also, reStructuredText is used by sphinx, which is the defacto standard for producing python package documentation.
Also a lot of devs use Python 2. I still do and use mypy, but I write 2/3 compatible code.
Apparently you use one to capitalize every word in a string.
enki can help you with a lot of languages and github https://play.google.com/store/apps/details?id=com.enki.insights&amp;hl=es 
&gt;whether it's ( ) first or [ ] first. That bit I can remember: it's alphabetical (brackets before parentheses). I still struggle with the link-before-text though. Ideally the order shouldn't matter.
It's the heading of the post. Thanks for you comment. Good job.
Thanks for posting those links with coupon codes. I've just bought all three of them and am excited to see how they are.
I've been trying to create warring civilizations of "bugs." 
It's egregious.
Sophomore in high school and I've taken 3 hours of Python classes at a summer camp. I wanted to keep getting better so I was up until midnight creating a character generator. Outputs a random name, age, profession, employer, and a situation that changed their life (ex. hi, I'm Michael. I'm 24 years old, and was a(n) network analyst at Country Insurance. That is, until I discovered a hidden treasure on my trip to the Caribbean). Meant to help a friend that wanted to start a short story and had writer's block
I studied java in school and started doing python at my first job, so i know how you feel. Here's how i'd do it (it's a pattern i use a lot for exactly this type of case) def do_add(value1, value2): return value1 + value2 def get_method(operation): try: method = f'do_{operation}' return globals()[method] except KeyError: raise ValueError(f'Unkown maths {opeartion}') def do_maths(operation, value1, value2): method = get_method(operation) return method(value1, value2) This way, you just have one place to add methods This also lets you list every method that is available, something like this: [g for g in globals() if g.startswith('do_')] If you want, you can wrap all the 'do_*' methods in a class or even a module and change "globals()[methods]" to something like "getattr(TheClass_or_module, do_thing)" (not sure of the exact syntax, but you get the idea)
Do you see that in post headings often?
Yes. I see it everywhere. On Reddit, YouTube, Facebook, newspapers for hundreds of years. Titles get every word capitalized.
and that's why I wrote "a *bigger* description".
If you are doing a video on exception handling one title could be: "Nobody expect the Spanish Inquisition" or ""Nobody expect the Spanish Exception"
Just started with python, comp sci student mainly learning c++... https://github.com/navrajsaini/python_calc/blob/master/calc.py
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [navrajsaini/python_calc/.../**calc.py** (master → 38e26d6)](https://github.com/navrajsaini/python_calc/blob/38e26d66979b7f9c88779e4952bff7b51b2fc0e8/calc.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dk2ojxn.)^.
So I like the ENUM part because I can store an enum at the database and know I am typo proof. You are replacing an ENUM with a string. Is the enum just silly overkill? Hummm
I use matplotlib regularly, but I've never tried Seaborn. When would you use Seaborn over matplotlib?
Changing my personal site over from a bunch of html files to a Django app for fun.
FYI, as of the 2.15.1 release, web2py supports both Python 2 and Python 3.
The 2.15.1 release is out now, and it supports both Python 2 and Python 3.
Down vote for posting image instead of copying and pasting text. Do you edit your Python code with Photoshop? Posting an image means that we cannot copy and paste the code to run it ourselves. Anyone who is blind or visually impaired cannot see your image, but they could have a screen reader read it to them if you post text. But to answer your question: no, its very doubtful you've stumbled across a bias in the PRNG. Let's count how many values fall into the deciles: values = [random.randint(1, 100000) for i in range(10**6)] counts = {} for x in values: d = x//10000 counts[d] = counts.get(d, 0) + 1 print(counts) When I run that code, I get: {0: 100010, 1: 99608, 2: 100125, 3: 100236, 4: 99527, 5: 99862, 6: 99868, 7: 99982, 8: 100549, 9: 100219, 10: 14} (You might be wandering why there are *11* groups, not 10. That's because occasionally the random number generator will return 100000.) Those numbers look pretty even to me: a million random numbers, divided into ten deciles, should give about 100000 each, which is what we found. At least, if there is a bias, its pretty subtle. (I don't expect there: Python's PRNG is one of the best in the world.) You say: &gt; it starts the first roll well into the 10th percentile very frequently Without looking at your code, I'd say it starts in the 10th percentile about one time in ten. 
The best part of python (IMHO) is the ability to automate system admin tasks (supposing you're on a Unix-like OS, I don't know much about windows.) So, most recently I got into a new hobby, and I found a podcast with 230+ 1 hour episodes about that hobby. I quick wrote a python script that walked their archive list and downloaded each of the tracks, then I spent some time modifying the script so that I could use a couple of regexes to get the strings with the tracks extracted in hopes that the script would one day be useful again, but also really because I had not used regexes in a while and wanted to brush up. Essentially, think of a question you'd like answered, I'll almost guarantee there is a python library to help you get the data, and I do guarantee there's a python library to do the analysis.
Its reverse alphabetical: square brackets before round brackets.
I finished the Django Full stack course about a month ago (and have the data science one in my list of purchased courses...just haven't made it that far yet). I bought it during one of the sales Udemy had earlier in the year. Quick 30 second review: - I realize it is a "full stack" course, but I purchased this for the Django aspect. The overview of HTML, CSS, Bootstrap, Javascript, jQuery and Python dragged on longer than I would have liked. This was 2/3 of the available lessons. However, for someone that hasn't done any of these or is looking for a refresher, I can see how they would be valuable. For someone with knowledge of these particular technologies, you may enjoy the fast forward options through these particular sections. - The Django parts were very useful. It covered basics (how to start a project and app) and more advanced topics. - That said, I still feel that important parts were missed. The admin side is barely mentioned. It's used during the first couple Django lessons, but not for anything other than adding a model to the admin panel and inputting data. There is no mention of customizing admin views, which I would have liked. Groups and permissions aren't mentioned at all. I was also hoping that the "and much,much more!" part of the course description would cover channels too, but I understand that's a much more advanced topic. - The first clone project was useful in bringing everything together. - The message board project (second clone), though, felt like several topics were missed before starting. One of those topics that just appeared in the project was utilizing multiple applications. It was off handedly mentioned during the lectures that you're rarely going to see only one app in a project, but it wasn't until this point that multiple apps were used. There wasn't a lot of explanation about when/why/how to use and split an application. This felt out of place after the very detailed earlier concepts used in the fundamentals sections. Instead, the project became a combination of speed coding to keep up with what's happening in the lecture and copy and pasting code from the notes when the instructor does the same thing. I appreciate the more realistic project, but for all the time that was spent building the foundational Django knowledge, there is a big gap between the last lecture and this clone. TL;DR: If you have experience with web development, the first several sections are going to be review. The Django section are good and I highly recommend them. Despite my complaints about the clones, they are useful - just be prepared to pause and rewind several times because you're going to miss something while typing. 
Does anyone know where I can find information to generate this sort of graph...? Thinking of either Matplotlib/seaborn? 
&gt; without using any inbuilt python functionality and going by index to index Going index by index **is** inbuilt python functionality. So it the `len` function, that you call. But if you insist on doing this -- and PLEASE PLEASE PLEASE don't use it as real code -- you can emulate the effect of appending a character to a string with concatenation. Instead of: newstring[index] = 'c' build up the new string from '' by concatenating to it: newstring = '' newstring = newstring + 'c' or even: newstring += 'c' But like I said, please don't use this in real code, its very inefficient because it has to build up a bunch of temporary strings. If you want to reverse a string, use slicing: rev = thestring[::-1] 
&gt; Also note that with unicode, naively reversing a string like is wrong because of combining character. For exemple reverse "été" in the NFD form (word = unicodedata.normalize('NFD', "été")) will get a wrong result. It's only wrong if you insist on interpreting it as a string of characters instead of Unicode code points *wink* 
I find that restructured text is overkill for almost everything I do. I get frustrated when I have to lookup too much arcane syntax, and I'm just trying to write pretty simple things like READMEs and some narrative documentation. Markdown and [MkDocs](http://www.mkdocs.org) does the trick.
Why would you try to remember it that way
How is ``` `text &lt;URL&gt;`_ ``` any easier to remember? I just looked it up and I can't tell if it's right.
You don't necessarily even need to use Seaborn *over* mpl, you can start using it as like an mpl theme or skin.
I think in this case it adds unnecessary complexity (since you get an exception in case of a typo anyway) but that's just my opinion, your mileage may vary. If you use an IDE it could help with auto-completion, though. I guess you could do something like this: class Maths(Enum): ADD = 'add' MULTIPLY = 'multiply' DIVIDE = 'divide' # And call it like this: do_maths(Maths.ADD) This has the added benefit that you can do both "Maths.ADD" and 'add', which is nice if someone else is going to use your code. But then you still have to add it in two places (the enum and define the method itself). If you do unit testing (which is always a good idea :-) ), you could add a test to make sure that every entry in the enum has a matching method, to be extra safe. Another way to go about this would be using decorators to populate the enum automatically (which has pro's and con's). I'll try to show you an example later if i can.
Because remembering it as "alphabetic order" is wrong, it would put the round brackets first and the square brackets last. 
Seaborn is declarative. Matplotlib is implicit (imperative?). You can use both together because Seaborn is built on matplot.
But does Seaborn provide more features (different plots, easier plots, etc)?
Does it need to be work safe?
Only square brackets are actually brackets - the round brackets are called parentheses. The curly ones are called braces. 
yes, all of that and more.
&gt; http://www.vfmd.org/ Did that come before or after http://commonmark.org/ ?
Here's the way to do it with decorators (as a full script): from enum import Enum class Maths(Enum): pass class register(): def __init__(self, name): self.name = name def __call__(self, f): # This is where the trick is setattr(Maths, self.name, f) return f @register('ADD') def do_add(value1, value2): return value1 + value2 @register('MULTIPLY') def name_does_not_matter(value1, value2): return value1 * value2 def do_maths(operation, value1, value2): return operation(value1, value2) print(do_maths(Maths.ADD, 5, 4)) print(do_maths(Maths.MULTIPLY, 5, 4)) I'm having way to much fun with this :-)
Yes. Your comment doesn't invalidate in any way the parent ones.
It adds some advanced charts that are not available out of the box in mpl.
There's some overlap, and the matplotlib guys I think took a lot of cues from Seaborn (for example, violin plots). But yes, Seaborn provides a bunch of plot types that aren't standard in mpl. Also, it was for a long time just a lot prettier than mpl, but mpl has made up a lot of that ground in their version 2 release.
The classes are overkill. There was a talk at a PyCon on when to use classes. As a general rule: If your class has two methods and one is a constructor, it doesn't need to be a class. You can change all your classes to be functions, build your enum, build a dict lookup, and then take that approach. I'm not sure if you're writing this for practice or not, but writing a function that does wildly different things depending on a flag is bad function design. I'd take 4+ methods (add, subtract, multiply, divide) versus one function with a flag that determines which operation is done.
&gt; easier plots I'd say easier plots. Go look at the examples on seaborn's website. google 'seaborn examples'. You can see how simple it is to create a plot, because you expressly declare "this is x, this is y, give me a violin plot" more or less in 1 line. You don't sit there tweaking the fig size, declaring axis, and all the different parts associated with Matplotlib. If you are a heavy matplotlib user, it may seem like you are going backwards a bit, because it's so simple. But they work together because Seaborn depends on matplotlib, so you can create via seaborn and tweak via matplotlib (my approach). And for new users to python-stats coming from R, ggplot2 was waaay easier than matplotlib and seaborn is the right place to start, IMO.
I wonder if anyone knows a good language to write the bot in? ;)
The fact that you're reducing the range 2 times before you start means that the first output has on average 1/8 the original range. This means your average range for the first output is 1250 from the bottom, which means you are very likely to be within 1000 from the bottom.
I have done something similar. I'm quite the comic nerd. And it have come to my attention that there are some websites that post entire comic runs online. Sooo.. using requests and beautifulsoup, I just MIGHT have written a small utility, that given a root url to a comic series page, parses all the issues, downloads all images from them, and then zips the images from all issues into .CBZ files for easy reading on my iPad.. There's no honor among thieves.. 
Yes, and as I described that is a list of essential bug and security fixes only. Going back every release well beyond 2012 there's not a single new feature. The language is permanently feature-locked; no per-module import locking, no async, no nothing, except via a trickle of backports. Someone who is fresh to Python shouldn't be learning Python 2, any more than someone fresh to the language should be learning C99. There is no defensible argument to the contrary. 
I'm afraid it looks like the commenters on your blog are both bots.
"Parentheses"? What is this witchcraft that you speak of? Here in Australia they're called brackets. If you need to distinguish between the different sorts, then you call them round, square or curly brackets. Or angle brackets like in HTML. Braces are things that old men and hipsters wear to hold up their trousers.
My health insurance company (BCBS) has started forcing everyone on their plan to fill out absolutely pointless online forms to continue to get a premium "discount". You get to log in daily to log how much you walked and a bunch of other BS. So I wrote a selenium script to continually open their "Give us feedback!" form and told them how pointless their site was and I could spend more time working out each month if I didn't have to log in to their website.
Google: python import pep The first link is pep328: imports, multiline and absolute/relative. Edit: Login.Login is kind of ambiguous. If I just see "Login" now I have to hunt around the file. Maybe you included an import in a class method and overwrote the file reference Login with a class reference Login. So can you? Sure. Should you? Maybe not.
Come on mate, I'm Aussie too and I learnt about parentheses in primary school. 
On finals at college. And, totally unrelated, looking for entry level jobs for a beginner remote python programmer.
[Pyro4](http://pyro4.readthedocs.io/) on the Python side and Pyrolite in Java and .NET, and Pyro4's http gateway to access it from javascript. This is a RPC-style solution. 
Can you add the imports in your example code?
A bite of Python
SQLAlchemy
Pretty much what everyone uses, unless they're using Django and using the built-in ORM.
These are just stacked/grouped barcharts. Generating them depends on how you've stored your data.
Just finished my weekend project: [**scopy**](https://github.com/narimiran/scopy) - a script for searching through your digital books and cataloguing them in an easy-to-share list (see the link for more info and details) Any comments on the usability and/or code itself are welcome! If you have any suggestion how to improve it, let me know!
SQL!! 
Peewee or sqlalchemy. I have a preference for the former
Before, that's the only reason I know it exists. People were saying that common mark didn't have tests and vanilla flavoured markdown had a spec and tests. 
Thanks for the feedback! I actually still plan on adding a few more things to that Django course, specifically a section on Customizing the Admin Interface, a section on Django REST, and one last clone project. As far as channels, I'm not sure about including those yet, I'm still debating how big of a jump that will be from the other material, maybe I will include it as an add-on to the last clone project, I'm still not sure yet.
I have the opposite problem and sometimes forget that MediaWiki does the reverse of Markdown :D
You should head on over to r/learnpython. It's generally recommended to keep files lowercase. It's also annoying when a module has a class inside it with the exact same name (hello, `datetime`) because you have to look at the imports every time to know if in this file you should be using `Login` or `Login.Login`. Unless you've got really large classes, you should probably just keep them in the same file.
Finally finished documenting at the new job (the system they use is a mess and the old guys just left the company) to move into production. And in my free time I'm learning machine learning.
There are several things here to work on. I'll just mention them briefly, but if you want, I could go in more details. - functions are defined but not used - you can convert inputs to floats immediately, no need to do it for every operation - speaking of which - what if I enter some letter when you ask for a number? (see error handling with `try ... except`) - and what if I enter some unknown function to run (which is not `a`, `x`, `d`, nor `s`)? (see `dict.get()`) - or what if I enter `A` (uppercase) for a function, or `Y` when I want to keep going? (see `str.lower()`)
I added the changes. Those packages should be everything.
&gt;Added the ability to use error bars to show standard deviations rather than bootstrap confidence intervals in most statistical functions by putting ci="sd" Great addition. I'm hoping the ability to use standard error will also be included in the future.
The whole Turing complete argument is both really weak and really ridiculous though. You should stop using or repeating it. Lots of things are theoretically possible, like running Python 2 code in Python 3, jet-packing to work or creating well written PHP code. It's possible to run .NET bytecode code in CPython, it's possible to run Java bytecode in CPython. Someone however needs to **write and maintain this**, and I don't see you volunteering. You seem to just bitch about it after the fact (which is valid, up to a point), make senseless arguments and play the victim card to get attention. Anyone who has done a compilers course will tell you it's possible. However anyone who has maintained one of the most widely used languages with 15+ years of baggage and technical debt to clear (with contributor, financial, compatibility and time constraints) will tell you that it's not. And they have. Just as an example, how would you possibly handle this small snippet of code in your dream turing-complete python2/3 interpreter. How would you even detect if it's Python 2 or 3. class A: pass All that being said, truly, thank you for writing a Python 3 version of your book. And for the Python 2 one, when all is said and done it's had a positive impact on the Python community and a lot of peoples lives.
Logging into my bank's website requires two factor authentication where I have to use a little authenticator device to validate a form of captcha. This is not going to work with an automated API
Nice
Can't you pre-compile Cython to binary wheels or conda packages, in addition to distributing the source for optional compilation?
If your sole purpose is changing the least number of places when adding a new operation you can try dynamically loading the classes and making them "act" on a type of operator only. import inspect import sys class Operation: def __init__(self, act_on): self._act_on = act_on def should_act_on(self, operator): return self._act_on == operator def act(self, *operands): raise NotImplemented('overwrite this') class OPAddition(Operation): def __init__(self): super().__init__('+') def act(self, *operands): left, right = operands[:2] return left + right class OPInvert(Operation): def __init__(self): super().__init__('~') def act(self, *operands): operand = operands[0] return ~operand # Maybe filter by inheritance not name clsmembers = list(filter(lambda el: el[0].startswith('OP'), inspect.getmembers(sys.modules[__name__], inspect.isclass))) def do_maths(operator, *operands): for name, cls_obj in clsmembers: op_obj = cls_obj() # This can be skipped with a static data structure that knows the operator for each object if op_obj.should_act_on(operator): return op_obj.act(*operands) raise Exception('Operation not supported') print(do_maths('+', 2, 3)) print(do_maths('~', 2)) You can further improve this by not instantiating a new object every time a `do_math` call is made.
**[For Hire](Greater Los Angeles Area / San Diego) Data Analyst / ETL** I am looking for a full time data analyst or ETL position and looking to relocate to SoCal. I have a year of work experience as a data analyst and roughly 6 months of internship experience throughout college in data intensive / IT roles. Below is a brief overview of experience, please PM me if interested in seeing full resume. Thanks! Overview of Work Experience: **Full Time Data Analyst** * Built out ETL pipelines in Python / SQL to transform data from varying ERP systems (SAP, Oracle, etc) * Wrote scripts in Python / R for adhoc analysis ranging from classification to data integrity checks * Created dashboards using Tableau / QlikView to help communicate KPIs and assist with automated testing * Contributed to Java / Scala codebase for an application that transforms text data into structured data 
http://probcomp.csail.mit.edu/bayesdb/doc/index.html
You should go to /r/learnpython
What on Earth are you majoring in to make it totally unrelated?
A Program That Corrected The Capitalization Of Words In Sentences.
Gambling bot that minimalized the house edge.
Oh god. Thanks for picking up on that!!! I didn't even think about that.... Doy!
A program that corrected the capitalization of words in sentences. ^^Beep ^^boop ^^I'm ^^a ^^bot. ^^This ^^message ^^was ^^created ^^automatically.
How did you handle those DOM sites? Selenium?
Could this be ported to work with MySQL / PostgreSQL?
Peewee. Pretty much does exactly what I need it to do and not much else.
I think they would have to rewrite the compiler in that case, but I'm not sure. Perhaps in future iterations? I'm relinking it because I saw it on Twitter and thought it was great.
&gt; how many segments IP adresses have segments right, and a delimiter between each one? If this is covering concepts Udemy taught, then you should know how to loop over a string that was separated over list. Docs.python.org Maybe you should read the tutorial/primer first.
Can we help? If this were in /r/learnpython, sure. Should we help? No. You need to get clarification from your instructors. This will keep happening unless you make it a habit to ask for clarification when something is unclear. 
Very nice article and while there's certainly added value in going that route, but when I have a option to do so, I tend to go with Kenneth Reitz: https://github.com/kennethreitz/records
I don't like it, too much abstraction and you are hiding your enum values. Edit: this is exactly the kind of magic I am trying to rip out of a codebase right now, too much magic sorry.
This would make me so happy! It's such a pain to use sem currently.
&gt; The default style is no longer applied when seaborn is imported. It is now necessary to explicitly call set() or one or more of set_style(), set_context(), and set_palette(). Correspondingly, the seaborn.apionly module has been deprecated. What do people think about this? I usually want the default style....
There will always be regions where `Q(x) == Q(x-e)`, because outside the range of the inputs the output is defaulted to 0 or 1 (`fill_value`), i.e. `Q` is constant for some range of inputs. You must figure out how to handle those regions correctly or ignore them. I'd recommend looking at a special case of very few samples (probably 2).
I'm creating a multi-platform smart assistant. Now it's just simple flask app running in Heroku cloud, but I'm going to create a bot API and integrate it with Telegram and other platforms in the future. 
PyDAL.
I've really needed this on 2 different occasions! `subprocess` is always annoying. Thanks for writing an article. I'm even thinking it would be a great pip-package if someone could bundle a couple of ways to do it with different classes but a similar interface! 
&gt; Braces are things that old men and hipsters wear to hold up their trousers. You mean *suspenders* to hold up their *pants*?
exactly, that's why - relating to the example - [operator](https://docs.python.org/3/library/operator.html) is a module and not a class. one can also use a decorator to add the functions in question to a container: operators = {} def operator(func): operators[func.__name__] = func return func @operator def add(a, b): return a + b
I give my PhD talk for candidacy next week and literally every plot aside from 3-4 Bokeh plots are Seaborn. Seaborn fucks.
If it's not hard, you should be able do it. From what I understand about IP addresses is they are hard. That's why there are libraries for validating them. It's kinda how like time zones are hard.
Basically, Windows is bad. There are some installed/ compiled components which pip can't pull in on Windows. There is a page of unofficial precompiled binaries for a bunch of python packages here http://www.lfd.uci.edu/~gohlke/pythonlibs/, but it's not a particularly elegant solution. I would recommend installing anaconda: it's a distribution of python intended for science and data work. It does everything normal python does, of course, but also bundles a tool called conda, which can be used as an alternative for pip (as well as virtualenv/ virtualenvwrapper, if and when you come across them). It only works for some packages (and often a minor version or two behind) but pulls in all their compiled components as well.
You need to format error messages like code, otherwise they are completely unreadable. What does "everything went as expected" mean? Did it install from a binary wheel, or did it try to build the module from source? The error is saying that there is a compiled C extension module that can't be loaded for some reason. There should be a DLL file named like `multiarray.cp36-*.pyd` in that `core` subdirectory. What do you have there? In fact, what are all the `*.pyd` and `*.dll` files in that directory? &gt; I'm attempting to extract information from a .DAT file That's completely meaningless, because ".DAT file" is not a specific thing. It could contain anything in any format. 
A couple of comments (that do not answer you question) - This should be in /r/learnpython but I will continue anyway - Why are you passing `N` to `ecdf`? Why not just do `N=len(x)` inside of it? - Your code could use some more comments. I was only able to figure out what is going on from reading the paper (which also seems interesting) - You do not want to do `unique`. If you have two identical samples, that should play into your CDF!!!!!!!!. A sample of `[1,1,1,1,0]` should **not** be reduced to `[1,0]`. Your statistics will be off. Of course, this is likely moot since the chances of two identical random values are astronomical - Just sort `x` and `y` once instead of doing it twice! - You have an odd mix of NumPy and python loops (via the `for v in ...`). You can do this all in NumPy for both speed and readability Now, I am not going crazy to double check what I am saying, but you should look at your `ecdf` function. I am seeing vertical lines before the first and after the last point. **that is likely your problem**. The `interp1d` doesn't like these verticals. As I read it from the paper, it should be linear before and after though I am not 100% sure about that. I only skimmed the paper (and it would hugely benefit from a plot for this) **Addendum**: Check out [this pdf](http://translectures.videolectures.net/site/normal_dl/tag=14146/ripd07_cruz_kld_01.pdf) from the same guy. His plot on page 3 mostly confirms what I was saying about your code
[PonyORM](https://ponyorm.com/) It's so beautiful and pythonic
In my case, the values are within the range. For example, here are some values from my latest run: x = 1.78577031. e = 0.045040291406658106 x-e= 1.74073002 Q(x) = Q(x-e) = 1. I think it has do something with the floating point precision available in scipy.
I'm so grateful for the author to continue updating this plotting library, it's one of my favorites!
Have you tried https://github.com/kennethreitz/envoy https://github.com/kennethreitz/delegator.py
So, what's wrong with **os.walk**? import os for root, dirs, files in os.walk('.'): for d in sorted(dirs): print(os.path.join(root, d) + os.sep) for f in sorted(files): print(os.path.join(root, f)) I mean it's cool to see an example of recursion, but **os.walk** has been around since '03.
thank you sir
It depends on your OS. If you're on Windows, try [colorama](https://pypi.python.org/pypi/colorama) (it also works on OSX and Linux, but doesn't support bold/italic text). On Linux/OSX, try [termcolor](https://pypi.python.org/pypi/termcolor). Edit: also, post questions in /r/learnpython next time.
scipy (and python) uses whatever float implementation the machine has. It doesn't matter what that is. With finite precision, there's always a chance of not having enough. But even that isn't your main issue. `Q` is *defined* to be *exactly* 1 for all x above a certain value (and similarly defined to be 0 below a certain x). There's no amount of precision that gets you out of that. You have to figure out how to handle that range. Maybe it's calculating something slightly different, maybe it's just avoiding that range somehow, maybe it's changing the definition of `Q`. This is a math problem, not a programming problem.
It's not even remotely as hard as time zones. Like miles and miles and miles and light years away from as hard as time zones. Time zones change because of political whim, and they do so both often and unpredictably. I mean a couple years ago an island off New Zealand time travelled ahead a day into the future, instantaneously, *because its main business partner changed*. And stepping into China from any of about a half dozen bordering nations, *regardless of how far they are from each other* will temporally shift you in a way that *should* leave you nude, vomiting, and with a serious desire to find Sarah Connor. Time zones are proof that evil exists, and has probably already won.
Thanks for the help. * I didn't know about that subreddit. I'll check it out. * I have no particular reason for having N as an input for ecdf. I just didn't want to recalculate the value multiple times. I don't think it will actually change any of the results * I'll edit in some comments * The unique function is just used to calculate e (which is just a small deviation term used in the calculation) in Eqn 4. Using unique() just makes sure that e != 0. It doesn't change the actual CDF * The first set of sorting was just because I was printing values for testing purposes. I forgot to remove it when I pasted it in. I'll edit the post. * I'm not sure I understand what you mean the python loops? How else would you do it? I could use np.apply_along_axis, but from looking at the reference manual, it doesn't look like there would a performance boost. According to the Scipy documentation, interp1d produces horizontal lines before and after the boundaries of the function. Where are you seeing the vertical lines?
Another option... http://docs.pyfilesystem.org/en/latest/walking.html
Try to draw a simple bar plot or histogram in matplotlib. Now try again in seaborn.
My point is it's not a beginner assignment.
I think I am still not understanding the problem. The maximum value of x is 1.78577031. As expected Q(x) = 1. Since, x-e &lt; x, I would expect Q(x-e) &lt; Q(x). Is my logic incorrect somewhere? **edit**: Q(1.78577031) = Q(1.7857703) = Q(1.785770) I would expect the the values to decrease instead of being equal
What happened to the indentation? The code doesn't run as is... 
Nothing of course!
A code that uses the DFT to decompose an audio file, then put it back together in a new audio file to compare differences!
I don't think they're asking for validation, just segmentation.
Ok ... so this is a tutorial on a *bad* way to do something for which a *good* way already exists?? Sorry, missing the point a little. Are you trying to teach *recursion* or *tree walking*?
Alright thanks for the help
http://pynamodb.readthedocs.io/en/latest/ Pynamodb to using AWS dynamoDB as a database, works great.
I will definitely give this a read!!! Thanks!
They probably did this because `matplotlib` changed its default style to a much nicer one, so now it's not that obvious whether `seaborn`'s style is better. It's also possible to use `seaborn` style in `matplotlib` itself by calling `plt.style.use('seaborn')`, so importing `seaborn` just to change style doesn't make much sense anymore. In addition to that, changing things on import is probably not a very good practice to begin with.
You don't need the `temp` variable in Python. ``` array[j - 1], array[j] = array[j], array[j - 1] ``` As always, these posts are much better suited for /r/learnpython 
I don't particularly like that either.
I prefer a generator with os.scandir: def walk_fs(rootdir): for obj in os.scandir(rootdir): if obj.is_dir(): try: yield from walk_fs(obj.path) except PermissionError: # some directories won't let you in without additional permission print('PermissionError for {}'.format(obj.path)) elif obj.is_file(): yield obj.path Basically the same function (and os.scandir not necessary if you want to do `os.path.is_dir` and `is_file` checks). Also the `FileNotFoundError` makes no sense in the linked script since it just follows printing out the results. `PermissionError` is what needs to be checked for when going through directories.
Apologies but in python I thought you could only import class by relative imports not absolutes? How exactly are you importing the class?
This week I am trying to learn how to pull in data from a USB GPS Module (u-blox7) into Python so that I can eventually build my own Bike Computer. I'm having trouble figuring out how to communicate with the USB port exactly and haven't had much luck with the different articles or Stack Overflow questions I've looked at. If anyone has worked with something like this before, I'd love your input! Otherwise, my eventual plan is to track my distance and speed when biking using the Raspberry Pi as the computer.
So after thinking about this more and not being a caffeinated mess.... I saw that too.... The data I have comes in the format of two dicts one with name: positive and the other name:negative.. Though data can easily be manipulated. 
In your imports, likely there is this one line: import csvplat Change that to `from csvplat import *` and that will eliminate the error. If you only need a few classes from the module, you can explicitly import only the classes you need like so: `from csvplat import className1, className2` and so on.
https://www.python.org/dev/peps/pep-0249/ SQL **is** an abstraction layer. sqlite3, psycopg and mysql-python all have adapters that conform to this. I, for instance, use the psycopg2 module to interface to postgres. In theory, if the databases have compatible schemas you only need to change "import sqlite3 as dbabi" to "import psycopg2 as dbapi", and change the connection strings to point to a different database. In practice, it depends on how standard the SQL you use is.
Instead of setting the Enum to values, define functions with a fixed signature and just call the Enum directly. class Maths(Enum) ADD = lambda x,y: x+y MULTIPLY = lambda x,y: x*y def do_maths(operation, a, b): assert isinstance(operation, Maths) return operation(a, b) I'm on mobile but you get the idea. It doesn't need to be lambdas, you can use args / kwargs to support dynamic argument signatures, etc.
here's an example: import uuid, StringIO ,base64, ios import OpenSSL import requests from urllib3.util.url import parse_url from datetime import datetime from csvplat.models import csvdb from csvplat.common import _REDIS, pp
That makes a lot of sense!
Hmm, I couldn't find anything like that. Weird.
Keras is awesome. I used it for a project I was working on that classifies clubbed and non-clubbed fingers. I used [this tutorial](https://blog.keras.io/building-powerful-image-classification-models-using-very-little-data.html) if anyone's interested 
I found this: import csvplat.common and replaced it to: from csvplat import * but it didn't fix the problem.
+1 for pony, some nice features (ripped from their site) to convince you include: * Tuple comprehensions for queries `select(p for p in Person if p.age &gt; 20)` * Decorators to handle transactional sessions @db_session def foobar(): * Easy table generation class Person(db.Entity): name = Required(str) age = Required(int) cars = Set('Car') See more examples here: https://docs.ponyorm.com/firststeps.html
I think everybody here knows that OP is asking about what ORM to use.
I also tried to change the source of the problem from csvplat import trackinginfo to from csvplat import * but NOPE.jpeg
[NOPE.jpeg](http://gfycat.com/MellowConsciousAsianwaterbuffalo) --- ^(*Feedback welcome at /r/image_linker_bot* | )[^(Disable)](https://www.reddit.com/message/compose/?to=image_linker_bot&amp;subject=Ignore%20request&amp;message=ignore%20me)^( with "ignore me" via reply or PM) 
Check the asyncio version: https://docs.python.org/3/library/asyncio-subprocess.html
I've been following this project for about 18 mos... looks like a lot of work has gone in. Very cool
qtwebengine is quite out of date. Also chrome is headless out the box now
Your logic is correct as long as y_max &gt; x_max. When I run your code, at least this time, I get `Q(x_max) == Q(x_max-e) == 1`, which of course depends on the random arrays `x` and `y`. You also need to care about the low end. The point is, can you guarantee that you're never in the constant range for `Q`, no matter what `x` and `y` are? Can you workaround cases where you do end up in the constant region? Also, I see the intent of `ecdf`. Back in school, I used to do a similar thing with `interp1d(sorted(x), linspace(0,1,len(x)), ...)`. That is not equivalent, but it's close to what you're doing and a reasonable way to estimate the CDF.
Sorry but what exactly is your bug/issue? Could you post a stack trace?
Yah I don't think my IDE will autocomplete this. HOWEVER this is super clever ;)
Trick is in my real case, each operation is say 50-200 lines of code, not just a 1 liner. So I think this would end up making a 5000 line enum.
You can organize the Enums however you feel appropriate and just store a reference in the Enum class itself. It doesn't really matter how you're getting them, as Python is just storing them in a dict under the hood and walking down the chain of references when you call Maths.ADD or whatever. So if you had the operations split up into separate modules mod_a, mod_b, and mod_c, you could do: from functools import partial class Maths(Enum): def ADD(x,y): return x+y MULTIPLY = lambda x,y: x*y SUBTRACT = mod_a.subtract EXP = mod_b.exp LN = mod_c.ln FOO = partial(mod_c.FOO, kwarg_1='bar') And so on and so forth.
Whenever you are working with categorical data, Seaborn really shines.
For what kind of plots do you find Bokeh works better?
In that case could you post the full error message? I must have not understood your question properly.
I don't think so. He was specifying that he's currently using sqlite3 and wants to be able to switch easily. That's *all* he's asking for. An ORM does so much more than that, which he doesn't need, and didn't ask for.
Looking closer at the paper, maybe equation 6 is the key. It looks like they're careful about which `x'` (which corresponds to your `y`) they use given `x`.
OP is asking for a SQL abstraction layer, meaning a layer on top of SQL. Otherwise OP would be asking for how to write cross-db compliant SQL which is not very practical since almost nobody writes ANSI sql when developing applications.
With the actual data I am using, I can guarantee to never be above max(X), but I'll have to figure out something about being below min(X) The values in vector X should almost always be unique (when using random normal). I'm surprised that interp1d gives the same values at all when within the range. I'll try using linspace(). Thanks for the help!
I use all those three (lambda, list comprehensions, cvs). But looking at https://docs.python.org/3/library/index.html I would say I've probably only used about one third of the standard library. Huge parts of the standard library are old and left-overs from the early times when packaging was difficult and "let's put everything in the standard library" was a prevalent mantra. There are many things that I used to do with standard library modules which have now been superseded by third party libraries, e.g. `requests` have replaced `urllib`. And of course everything I need for heavy computations or visualizations is also done by third party libraries, e.g. `numpy`, `scipy`, `pandas`, etc, etc. The parts of the standard library that I love and use the most: * Most built-in functions and types, including `lambda`. * Comprehensions - list/dict/set/generator comprehensions, just makes it immediately clear what the purpose of the code is, whereas for-loops are much more generic. * Generators! * Context managers, especially when I don't have to write them myself ;) * `sys` and `os`, obviously. * `re` - regular expressions. * `collections` - `namedtuple`, `OrderedDict`, etc. * `itertools`, `functools`. * `glob`, `fnmatch`. * `argparse`, `logging`. * `json` - although I wished `yaml` would make it into the standard library, it is the one non-standard package present in all my environments. * `pdb`, `timeit`, `inspect`. * Indeed, `csv`, although mostly for reading externally-produced data. Half the time, if my csv files are sufficiently simple, I just parse them with `rows = [dict(zip(headers, line.strip().split(sep))) for line in fd if line.strip() and line[0] != '#']`. If I need to read `headers` as the first line in the file, I'd do `fd = (line.strip() for line in fd); headers = next(fd).split(sep)`. 
I actually often use a recursive (`list`/`scan`)`dir` approach over `os.walk` for two reasons: The first is that I can check exclusions on the same items right away. It is a single `for` loop over the items and I am not writing repeated code (This is, of course, minor and can still be easily avoided). Also, to modify the path of the directories, I have to delete them in the list rather than just moving on with `continue` The second and bigger reason is ordering. If you use `os.walk` to, say, output files, you get all of the files from the root, then all of the files from the subdir, then all of the files below that. That's fine if that is what you want, but I often prefer it dive deep first! In that case, a recursive call is easier! And then there are times when I don't care about order, or directories, or anything like that and `os.walk` is better. `os.walk` also has the advantage of automatically using `scandir` for py&gt;=3.5
omg... started working on image classification today and I spent at least an hour trying to figure out figsize, gridspec, tight_layout, etc.
You're welcome. I forgot to mention...the introduction to ATOM was great too. I'm generally opposed to changing my IDE (I use PyCharm normally) but decided to try Atom for this course. I'm not sure if I want to switch yet, but after using it for this entire course, it does make a good case to at least try it out some more.
Not to mention Selenium 
Please don't correct your typo. The mental image is fantastic.
I have to say, it's fantastic that there's a transcript for podcasts. While I'm not deaf, we live in a world that's increasingly multimedia, and it's only a fraction of media uploaded to youtube, or podcasts made, etc that include decent closed captions or transcripts means people who can't listen in (either being deaf, or would simply rather read) can join in.
I've not seen this before, it looks really nice! But, alas, no mssql support. Bummer. (FWIW, mssql is not my choice, just something I'm stuck with)
When I first started working on Sanic I was pretty obsessed with it.
Pdfminer is a snail. Started looking into cython recently, just today found a random GitHub repo that seems to have great cython bindings to poppler. Seems very promising. Forked the repo and going to try it out tonight. First test appears to take a 1.4 second parse down to .02 seconds. 
Selenium is orthogonal
That's not a tuple comprehension, it's a generator. Using a generator with square brackets creates a list, but putting a generator inside parens doesn't create a tuple, it stays a generator. If you want a tuple, you can use the tuple constructor. &gt;&gt;&gt; (x for x in range(10)) &lt;generator object &lt;genexpr&gt; at 0x7fd0c18daeb8&gt; &gt;&gt;&gt; [x for x in range(10)] [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] &gt;&gt;&gt; tuple(x for x in range(10)) (0, 1, 2, 3, 4, 5, 6, 7, 8, 9) 
I got a lot of pushback for this behavior when our package imported seaborn. Personally, I consider it a regression.
Does anyone know what "vlag" means (the blue to red diverging colormap)?
Hi everyone! Thank you very much for the feedback. I have changed the title of the blog post to make its purpose more clear and I fixed the indentation. Thank you very much for all of the feedback!
&gt; Sanic Thank you. I'm just finishing learning Python and need things to work it out on while I learn machine learning so my Python knowledge doesn't atrophy. What were you doing with Sanic?
If all the API did was print your balance then it wouldn't need insane security beyond a normal token. Also since posting this I found a Mint widget that kept my balance on my phone homescreen. Good enough :/
Thanks for the tip on phantomjs 
I'm not sure it was a typo, but I am confused
Because it's extra syntax for no real purpose except to save a few lines. If you want something like this so bad just write: job = next(x for x in [getattr(a, 'job',None), b, 'nope'] if x)
Okay maube you know this: I switched my OS to Linux Mint, found this video on youtube that helped me through it&gt; https://youtu.be/oSdchGgZrMM 37 minutes in he talks about changing the mirror and to pick the best one. This is where things get weird, i have at the top of my list os6.org for 1.2Mb/s but when i googled it on my phone, all i get is a single word. "howdy" Is this safe to choose or should i go with kernel.org? 
I was/am maintaining the project. Setting up CI pipelines, improving the testing architecture, managing the community. Basically a lot of the open source responsibilities that no one really likes to handle.
He once asks for a SQL abstraction layer and twice (title and last line) for a database abstraction layer. The python DB API is exactly that: it lets you easily switch between SQL databases. He specifically specifies "basic select, insert, update *statements*", which make lots of sense in the context of writing SQL, and less sense in the context of ORMs, which generally sweep the exact statements under the rug. You are absolutely right the most people don't stick to ANSI SQL, but for his purposes it doesn't sound that hard too.
See this talk from pycon 2017, https://www.youtube.com/watch?v=hJhZhLg3obk, where he mentions this package https://github.com/jonathanslenders/python-prompt-toolkit. The package can provide your command line tool with tab suggestions and autocompletion, persistent history, reverse lookup as well as colorizing text and keywords. He uses it to live code a SQL shell! Edit: On second thought, this might not be what you're looking for but nevertheless it might be worth a look.
A course that teaches 2.6? Dude, don't learn that...
Why do you keep blindly referencing that list of complaints/criticisms when it has been said time and time again that the list is out of date? Why don't you provide us with some valid up to date complaints/criticisms of your own rather than just linking to an external resource and saying "see it's bad because &lt;link&gt; says so."
There's a keyword "or".
Alright then, I'll look for another course.
The best way to learn Python imo is to read the tutorial part of the official docs
[HIRING -- python programmer for tutoring matchmaking startup] Hello! I am a student entrepreneur who has built a successful tutoring marketplace at my college campus. Right now, our tech is simple -- we hire smart students as tutors and then host them on a simple booking website for customers to access them. Payment taken via square card readers handled by tutors that flow to my company bank account. Each week I Venmo the tutor their share (50%). We are already experiencing intense growing pains, and I haven't even really gotten this thing really ramped up. Ultimately, I am now looking to replicate my operation on two additional campuses this Fall semester. Before I hit the gas pedal -- I absolutely need stronger technical infrastructure. I'd like to use Stripe to automate our payment process from end-to-end (can give more details if you pm). The web app we're building is also pretty basic. Customers and tutors create accounts, add payment information (encrypted via Stripe), and then message each other to coordinate sessions (where to meet, what topics to discuss). At the end of sessions, tutors log in to report on the details of the session (which customer, which course, length of session). From here we can call Stripe API to initiate a charge. Also, we are building a simple admin panel to add campuses, approve/deny potential tutors, add courses, etc. We also have to build a front-end but I have some sketches. I have hired two programmers from my university, but I'm concerned that development is moving too slow (right now we have implemented database and some backend functions like account creation /authorization -- ~2500 lines of code). This project has a ton of potential and so I am pursuing it full time. I am a non-technical founder but have over two years of experience in the tutoring market and can sell the hell out of my product. I also almost have a CPA License, which helps. If anyone had read this far and interested in contracting with us, then please PM me. I would love to hear anyone's feedback and whether this vision is achievable by our deadline (mid-late August). If you have questions about our tech then I will gladly refer them to our programmers. Thank you so much for your time.
You’re not wrong in what you’re saying but it’s definitely not what he wants. I have never encountered anyone in my professional career that ever wrote cross-db SQL on an application. It’s not easy to test and people don’t usually switch databases. Writing ANSI sql is an option, but using an ORM is an even better option for their use case of wanting to be cross-db compliant. In terms of the python db api, is there really an alternative? I honestly doubt OP is using something different. OP is clearly junior so rather than nitpicking at every little word, we should be productive and read between the lines as to what they really want.
I wrote a small class Nullable, that allows you to do print(Nullable(customer).name.first) which if customer is null then it display None but otherwise returns the entity requested, it was designed for debug output.
Thanks. Relative imports and lowercases broke my app. 10/10 would recommend. 
Ya. I am re-working the stuff I did so I don't get sacrificed to the black knight. \*cough*, Monty python reference. 
Touché :-)
r/learnpython is a good starting point 
Coursera has a really good python course. "Python for Everyone". It starts out teaching in 2xx because alot software is still running that ver. But then it moves into 3xx later and points out the differences. 
The problem is I can't install 2xx for some odd reason, and I wanted to know if there was something to do about it.
Goodness heavens... this is excellent!! Thank you for sharing.
Thanks for the input!
I gotcha. I would make sure you have removed any trace of python. I believe by default it is installed in users/bin or something so check there. The make sure you are downloading from https://www.python.org. Select the version you want there. 
Check out [pygame](https://www.pygame.org/wiki/GettingStarted) to get started. They have some great tutorials that teach you how to make a game as well as how to learn Python comprehensively.
Ive heard of pygame and it looks really good but the website is just so wonky and hard for me to navigate i just didnt bother with it
Awesome i already subbed ty
Taken directly from the 'Getting Started' link: Windows installation Make sure you install python3.6 with the "Add python 3.6 to PATH" option selected. This means that python, and pip will work for you from the command line. There is documentation with python for the "windows installation steps" Also, this page offers help with pip for windows users. python -m pip install pygame --user python -m pygame.examples.aliens Hope that helps. Their website is old fashioned, but that's how it is with a lot of Python documentation. (After all, the language has been around for ~30 years.) There is a decent tutorial [here](http://www.learningpython.com/2006/03/12/creating-a-game-in-python-using-pygame-part-one/) as well, though a bit generic.
You're the kind of person who'd put tomato in a fruit salad, aren't you?
[removed]
That's cool. I'd get to know Python better if I was using it on an actual project the world needed. I don't quite understand what Sanic is. I read it. It looks very technical. Could a rank ameture like me work on this? Might you recommend a programming ameture get into a different kind of open source project?
[removed]
I have heard the Django devs may switch to SQLAlch (I guess while keeping the sam abstraction layer/API?) but this is very "through the grapevine". Also havent used Django in over 6 months
I was in a similar hunt recently. I learned python on jupyter notebooks, but I'm unwittingly drawn to an editor with a dark background. Atom has a package called hydrogen that I really like. You can run select lines just like the jupyter cells. 
it's a bit of a complicated project in terms of the internals so it's not a project I'd recommend a beginner to work on but we are always open to contributions!
It's the same thing I asked for as well(stack trace) but no dice
[removed]
&gt; I used it for a project I was working on that classifies clubbed and &gt;non-clubbed fingers. I guess now Python really *does* have a library for everything!
I won't do your assignment for you, but I'll point you in some directions: * Take a look at dictionaries, they map a key (one of your letters in this case) to a value (how often it appears). Specifically, the get method would interesting to you as it'll allow you to either retrieve the value of a key or a default (I recommend zero in this case). * If you've started playing with the standard library (the batteries included part of python), take a look at the collections module as it has some very relevant structures. * There is a sorted builtin that takes any iterable (something you can loop over using for) and a key function that tells sort how to order the items. * Dictionaries have several ways to create iterables from them: keys, which returns all the keys; values, which returns all the values; and items, which returns pairs of keys and values in a tuple (key first, value second). I'll leave the rest to you to figure out how to put these pieces together. p.s. /r/learnpython is the recommended venue for these sorts of questions. 
i have no idea who you are talking about. This is exactly what I am talking about.. let's shut down a voice we do not like. Well guess what..you can ban me every day boss. I really don't care. I have 28 accounts set up, all using a VPN..I even have a script to make more. So as quick as you can shut em down, I can make new ones. All 28 have also waited the appropriate amount of time to post. So enjoy me!!
Looks like you are trying to install to your OS python. This will require using sudo. Consider using virtualenv for stuff like this.
I assume you're doing this on a system with no admin rights, without a virtual environment?
+2 since it supports an enterprise SQL database. I'd love to use Peewee but need to support something my company uses internally. 
I believe PyCharm also has a "Darkula" mode as well.
Way too brittle when your schema changes and really bad error reporting when it does break. Also doesn't support partial record retrieval. Other than that it's pretty decent.
Do you mean Hydrogen, as the commentor mentioned?
Ah, packages. didn't think that (that's how new I am) lul. Thanks.
[removed]
[removed]
If there's a better lib for working with dynamodb i'd like to look at it. Pretty much its either pynamodb or normal boto3 Suggestions?
No, I haven't found one. I'm still using pynamodb.
You have forgotten an indentation block (at time of posting) from lines 15-21. You presumably meant to handle `f_path` within your for loop.
Because duck typing and EAFP.
As mentioned there is Anaconda. For another distribution - the one I use - that comes with extensive data science libraries see: [WinPython](https://winpython.github.io/). WinPython is great and very flexible in how you want it to exist in your operating system installation. It acts just like a regular Python interpreter and you can register it (or unregister) it with your operating system at any time. If you unregister it then it operates in a portable mode - you could even have it on a USB drive and use it on multiple computers from that if you like.
It looks interesting so I'll look into it
Thanks for the tips, much appreciated!
Have you looked at [Bloop](http://bloop.readthedocs.io/en/latest/)? It supports a number of newer DynamoDB features that libraries like pynamodb and flywheel don't, and exposes conditions in a pythonic interface instead of exposing the legacy condition interface straight from boto (or a very thin wrapper). There's also the ability to easily interact with [DynamoDBStreams](http://bloop.readthedocs.io/en/latest/user/streams.html) without thinking about shards and remembering ordering and shard traversal rules: &gt;&gt;&gt; stream = engine.stream(SomeModel, "trim_horizon") &gt;&gt;&gt; record = next(stream) &gt;&gt;&gt; if record: ... process(record) To see how Bloop has evolved over time see the [Changelog](http://bloop.readthedocs.io/en/latest/meta/changelog.html#id1) or the [1.0 Migration Guide](http://bloop.readthedocs.io/en/latest/meta/changelog.html#migrating-to-1-0-0) which includes migration notes for all minor and major releases from 0.9.x on. There's also a section of [common patterns](http://bloop.readthedocs.io/en/latest/user/patterns.html) and a guide for [easily extending the type system](http://bloop.readthedocs.io/en/latest/user/types.html#custom-types). You can also review the [closed API issues](https://github.com/numberoverzero/bloop/issues?q=is%3Aissue+is%3Aclosed+label%3Aapi) to see how a number of refactors and large features were designed. *(Disclaimer: I'm the author and Bloop has been my passion project for 3 years, thousands of hours, multiple documentation rewrites, and now over a thousand commits.)* **Edit**: I'm more than happy to answer any questions or improve the docs if something like a "migrating from pynamodb" section would be useful for considering a change.
No problem. Welcome to the circus, I hope you find it every bit as exciting as I do. 
It's a reference to "this guy fucks", a quote from a TV show.
I introduced Bloop in another comment but specifically for partial record retrieval Bloop can easily [map multiple models onto the same table](http://bloop.readthedocs.io/en/latest/user/patterns.html#sharing-tables-and-indexes) which I believe covers the feature you're discussing. In the linked example the same table backs `Employee` and `Manager` where only one model exposes the `directs` column, a set of `uuid.UUID`. You can even use subsets of GSI and LSI projections in different models; these features are designed specifically for migrating columns and data types, which are traditionally painful tasks for an ORM/OM.
yes chrome is headless now, but it supports very limited command-line functionalities as of now. hlspy easily supports setting and using cookies, printing requested network resource url and cookies-id on terminal in real-time, allows using adblock and customizing access to requested resource url on the fly. Users won't have to write javascript to use these features. Moreover, with little bit of changes, it is possible to use hlspy as a library for asynchronous webengine based scrapping, which will integrate well with python ecosystem. I'll try to implement it as a proper library in future. 
I will be checking this out tomorrow. I was about to refactor a bunch of code to work around some of the shortcomings of pynamodb. I'll definitely consider changing the abstraction layer. Thanks!
Cool! I don't want to make the comment section too noisy so if you (or any other passerby considering a switch) have any questions at all, feel free to reach out by PM or open an issue. Anything that's not clear to you is a docs issue that I'd like to fix.
Please tell me more.
macOS comes bundled with Python 2.7 No need to install 2.6 Open your Terminal, type the following and press Enter. python --version If it shows '2.7' , you are good to go.
Ok, so a bit of setup before addressing those points: import os from os.path import abspath, basename, join, splitext from itertools import ifilterfalse def dskip(d): return d.startswith(".") def fskip(f): return f.startswith(".") or splitext(f)[-1].lower().startswith(".py") def sieve(func, items): return sorted(ifilterfalse(func, items)) Now, when you **do** care about order and directories, but **do not** care about deep-diving: for root, dirs, files in os.walk(os.getcwd()): dirs[:] = sieve(dskip, dirs) for f in sieve(fskip, files): print(abspath(join(root, f))) And for when you **do** care about deep-diving: for root, dirs, files in os.walk('.', topdown=False): if dskip(basename(root)): continue for f in sieve(fskip, files): print(abspath(join(root, f))) The thing is **os.walk** is *already* doing recursive directory walking, but your hand-rolled version probably doesn't automatically skip directories you don't have permission to read (or optionally report, fast fail, or otherwise react to them), and also probably doesn't handle skip on following symlink directories (or not). I'll admit that it all gets slightly clumsier on deep-diving, but not by much.
About 25 new features in a subminor release? 
Apart from using the comment function in the App maybe here https://www.reddit.com/r/learnpython
Python crash course is a phenomenal book. The way it is laid out it can be easily referenced. It touches on APIs which are a common way to web scrape. I've not done it yet, but you could probably just look up using APIs with python on youtube.
Started in 2007, was being paid for using it by 2008.
Tried it because of an undergrad assignment 3 years ago (just simple implementation of an equation), forgot about it and focused on MATLAB instead (which my undergrad lab is using) I seriously studied Python last February after years in MATLAB. I've already implemented some neural nets (with the help of tutorials) and did some projects entirely in Python :) 
Thanks, that helped a lot. so in short: bad programming. Cheers!
I think having 'tex' as part of the name unfortunate, since it will be associated with the TeX typesetting language. 
If you don't have any APIs, I recommend using BeautifulSoup for HTML scraping. 
I agree that seaborn looks pretty, but I think they may try **too** hard to make the data look pretty, at the expense of clarity. In scientific publications, plots in the seaborn styles are nowhere to be found, but usually what look like plots tweaked from the matplotlib defaults. Don't know how its plotting functions differ though.
Began python when it was the end of 1.5, begin of 2.0, don't remember exactly when. I though it was a game, a language just to play for children. One month after i released a little professional app ! But now i miss the simplicity of the previous version of Python, the zen of Python...
Seaborn uses matplotlib's plotting functions actually. It also has a bunch of tweaks to the final graph aesthetic that can be turned off and manipulated as you wish. I find that seaborn (or the plotting capacity of pandas) usually gets me to the graph I want faster than if I was to start from scratch from matplotlib every time. And since both seaborn and pandas are just wrappers around matplotlib, it's easy to pass in optional keyword arguments when calling functions as well as manipulating the output figure and axes objects.
Yeah I guess I can't really get into a workflow using wrappers since I like to customize very specifically, instead I just write functions for the tasks I do repetitively, and to format my figures in exactly the way I want. You only have to do it once, and you learn a lot about the crazy inner workings of the matplotlib API in the process. My function for formatting axes/figures basically takes in a ton of different kwargs, and based on that performs various steps on the hierarchy of object instances within the figure.
requests + beautifulsoup for light scraping you can check beautifulsoup docs to get started with scraping
Yes, it doesn't. To do so, can use a dict comprehension instead. {k:v for d in my_list for k,v in d.iteritems()} 
I basically just started writing code in python instead of perl about ten years ago. There was no dedicated period of learning. It just felt like replacing an old tool with a better one. I was able to do this because a lot of my work is internal tooling. So there always are projects you can use a new language on, and nobody really cares that much as long as you get results. That’s probably one of the best ways to learn a programming language, too.
Try [gain](https://github.com/gaojiuli/gain/) Python 3.5+ "Web crawling framework for everyone. Written with asyncio, uvloop and aiohttp."
About a year ago, for a job. Wouldn't dream of using anything else at this point...
You could just as easily say "For dick in names" - in that For loop, you're assigning a variable name to represent the items in the list.
Go for Vim! One of the best editor existing in this planet!
Hi,give me some tips to install virtualenv ,thanks a lot
No, it doesn't, and this should be asked in [r/learnpython](https://www.reddit.com/r/learnpython/). The pattern is **FOR** *item* **IN** *iterable*, where *item* is a temporary and arbitrary *variable name* assigned to each consecutive value in the *iterable* ... the word or character (or underscore) *name* that you use for *item* bears no inherent logical or other relationship to the *name* you use for the *iterable*, it's just good coding style to help make it readable.
thanks for your explanation and directing me to the correct subreddit.
No problem. Also, **much** easier to post code snippets in your message rather than as a screenshot. I'm on a mobile phone, and reading your example costs me both data and eye strain. Just leave an empty line above and below your code. then indent every line by 4 spaces And have a line afterward that's not indented. Easy, see?
Only direction I can think is eff load of conditional blocks. Deciding the sequence will be quite a task though.
thanks will surely look into it.
&gt; that the list is out of date what? Where does it says this? I'm pretty sure most of the complaints are still valid. I think you didn't read the header of that page. This list isn't a definitive list of everything that's wrong the Learn Python the Hard Way. It's a list of things that the book does, that have historically lead to an increased number of XY problem questions and other confusing questions by confused beginners on Stack Overflow. I have seen it myself, and rather than rewriting the list in my own words, I can just link to it. The internet is great, isn't it? Next time, please read the linked page before being the stronkest keyboard warrior :)
Ok,I KNOW i HAD INSTALLED THE VIRTUALENV BUT NOW HOW TO DO THIS,i DON'T KNOW WHY WE MUST INSTALL VIRTUAL ENV USING PYTHON.Can you explain for me ?I am new here to use Python ....
im sorry but i did not ask you to read my message on your mobile phone, your patronizing tone is annoying
Agreed, BeautifulSoup is great for web scraping.
I find this funny though I feel bad for wnoise... it's clear he has good intentions
I solve it via these steps 1,must confirm whether the virtualenv is installed...The command line order as below : 1,firstly you input the order virtualenv venv 2,secondly you input the order source venv/bin/activate 3,thirdly you input the order pip install flask. And finally you will see the successful info .
I miss the crazies from Ruby, especially when it comes to building DSLs. I miss the fundamental simplicity of Lua. I miss Lua's explicit syntactic sugar. I miss macros from Lisp. I sometimes miss the clarity and lack of abstraction on C. I do not miss compiler errors. I do not miss segfaults. I do not miss the crazy syntax of templates from C++. I do not miss Matlab in any its facets. I love batteries. I love the scientific stack. I love the ecosystem and community. I love FFIs for when I need to scratch that C itch. I could stand a better deployment story, though. 
Thanks for the suggestion. But these exactly do not do what I want. I understand mentioning `subprocess` was misleading to you. From what I can tell, these do not help with communicating with a long lasting process.
I came from C/C++ and some occasional Perl. I don't think I missed much, to be honest. What I liked was surprising to me - when I first came over I was miffed about the significant whitespace, but it quickly became a favorite feature of mine. Everybody's code was suddenly so readable! I worked with a guy that wrote awful code, but I could always easily understand what he was trying to do. That was what got me hooked.
My first *useful* project - a program to automatically turn my lights on in my house at sunset every day. I made it just now, and I'm just waiting until sundown to see if it actually works. Wish me luck. Edit: Tonight I finally got it to work! Now I'm going to polish it off (the code is a little messy and I'm going to add more features) 
Came to Python, over from prash-crone and hard to debug C++ and insanely complex shell scripts. Love the ecosystem (especially the recent mypy stuff), love the libs, love the lang. Code just looks really nice and pseudo-codeish to me (which is by design). I miss (the idea of) game dev in C++. But probably I'd use the Python-like Nim for that these days, after prototyping in Pygame and hitting performance issues. Still use shell scripting in a few places, mainly for some really basic tying together of things, where the Python version would be a lot more verbose and ugly. Don't have any Python deployment issues; have a custom python 3.6 debian installer that I can use on all our servers, new and old, ubuntu and debian and debian-likes (python compiles very nicely from C code on 99% servers). And the builtin venv module handles the rest.
it used very much ::/
no
hmmm tnQ
Wow. If you think *that* is patronizing, you haven't been on Reddit long. That was me, honestly and helpfully, trying to provide you with a short and quick example of what you *should* have found when looking at the subreddit's *info* section *before* posting to an entirely inappropriate subreddit to begin with. Huge screenshots of tiny bits of code can, over time, get you banned on here, because you're not helping others help you, which makes *you* look incredibly rude, you see? Lots of people are using the app, and lots of people with limited -- and valuable -- time to answer what *sounds* like a good question to a noob are hoping to *not* have to suffer through that task. The above, also, is nowhere near patronizing. I can be patronizing if you wish, but the above is me trying to explain to you something simple about etiquette on here that I also had to learn once.
Make the name a dick joke: How to handle Python and a graphic that makes the joke 
If you have have a fundamental understanding of how programming works, learning Python should be a cakewalk. Especially if you have experience in C. There is a lot of online resources for Python, for learning you could try 'Code Academy' or 'Codingbat'. Codingbat - http://codingbat.com/python Code Academy - https://www.codecademy.com/learn/python
/r/learnpython /r/learnprogramming
Thanks a lot.
I didn't knew this, it looks really nice after giving it a quick look on their quick start session. 
VBscript, not a thing, and literally **everything**.
Aha! Someone reads it :)
How does this compare to numpy?
Go Vim. Its so awesome. Also, I have used visual studio code too. 
rofl, can you be more sensitive?
Love it.
I quite like the idea of making the Python API pluggable enough to make optimisers easy to develop outside of the interpreter as any other Python script.
This is a question for /r/learnpython. As for an answer, it sounds like [numpy](http://www.numpy.org/) will suit your needs.
Bravo.
"As compressed as possible" doesn't exist. The compression level just tweaks some algorithm parameters that should provide you _better_ compression, but not _optimal_ compression.
PyQt?
Thanks for the reply! What I'm wondering though is why the .bz2 file became more compressed when I ran the string through bz2.compress(). My understanding was the .bz2 essentially was doing this same exact thing without me having to compress it
It's likely a fluke of the compression algorithm. You can try changing the string and you'll likely see an opposite result.
very nice indeed but I think you should mention that this is not meant for precise calculations. For example you are using `rref` for inverses and so on. It is extremely hard to match the industry standard which is LAPACK. On the other hand, I enjoyed your API it is very friendly.
Here is some information about making CPython faster. http://faster-cpython.readthedocs.io/
Ah, okay. This sounds reasonable, considering the file went from 1.10kb to 1.07kb (as opposed to 9.90kb in a .text file). So then the .bz2 file is actually doing the compression, and compressing the string before writing it to the file is likely unnecessary, correct?
Honestly, if you're working with 10kb strings, you probably don't need to compress anything at all.
If you’re using Python 3, tkinter comes bundled and works cross-platform. That’s what I use for the small Python programs I support at my company on Macs and Windows machines. 
This is really really cool. Quick question(s), since the optimizer is written in python and these peps have generally been accepted, I wonder how this would work within pypy. Meaning, would the optimizer be JITed, would the JIT be able to start working almost immediately because of the guarding, or would there still probably be a warmup period as it gathers information about the available code paths? 
I agree :). I was using it to test to see what compression and different file formats can do. I'm a Python novice tbh
Thank you! Another user pointed that out to me and it has been fixed. This community has been awesome with helping me improve my posts :-)
[**Kivy**](https://kivy.org), plus the [**KivyMD**](https://gitlab.com/kivymd/KivyMD) widget library, is my go-to setup. (*works with Linux, Windows, OS X, Android, iOS, &amp; Raspberry Pi*) &amp;nbsp; Some cool apps made with Kivy: - [**Composite Index Modeler**](https://www.youtube.com/watch?v=lUfrOAlS-XY&amp;feature=youtu.be&amp;t=1m4s) - [**Yeco - Ableton Live Touch Controller**](https://www.youtube.com/watch?v=aa9LXpg_gd0) 
Could you elaborate on the deployment story please? I'm curious. 
Making a clicker is easy. Making it stop when it loads a control page isn't. Got any ideas on how to do it? How to make the code check access Chrome and check the url?
C#. Love Python for its flexibility. It can be used for a quick check of a value in REPL, to a script, to a full blown app. Doing the first two in C# is unwieldy if not impossible. Do miss explicit static types in larger applications, though. When it's somebody's paying you good money to mind and manipulate their data, gotta have a high coverage level to test for things that type checking would catch for you. Annotations and mypy feel like a weak addon, because they are. If I could, I probably wouldn't change anything though. 
If you are in the Bay Area : Yes. It is (at least was) last year similar-ish to PyCon buy way smaller – which is great to be at human size. If you went to PyCon, it might not be worth it. You can – of course – see the talks online, but having the occasion to speak with people between talks and potentially discuss with sponsors and open position when they are hiring is great. The swag was also good last year if that counts for you, and the food 5 stars. If you are unsure and don't want to blow your conference budget but can give a hand, please have a look at Work-Trade Pass on the Registration page (http://pybay.com/registration). I'm obviously biased, I'm giving a talk this year, (which I should work on). If you are shy, find me I'll be happy to show you around. 
I write a Python program on my computer. I want to give this program to a friend, a customer, or run it on another computer. This is relatively easy if you are only using the standard library and the correct version of Python is already installed. Beyond that, it's a massive pain. I want to be able to tell people: "Run this installer, then double click this Python file". I want to be able to ask Python: "what do I need in order to run this program". I want to be able to create a self-contained executable or installer that a user can run without any manual intervention. To be clear, all of this is *possible* already. It's just not easy. Also, it's not like this is a solved problem in most other programming languages.
Hi, I started something similar for the apc mini (apcminimu). I came from the other side, I know a lot about python, but nothing about Ableton, midi mapping etc. I will try and find some time to look at your script. S
I have seen the "This is a question for /r/learnpython" on every single question asked on this reddit. What is the purpose of this reddit if questions are discouraged? (This isn't me being an ass, it's genuine curiosity)
This is really cool. I can imagine this even being used to implement at least a partial JIT compiler at some point.
Please do, I'm just starting out and wanted to learn it... I completely forgot about the functions half way through cause I decided to try a dictionary... I could use the dictionary to call the functions... Would I just do float(a) = input(), to turn the input to a float value or use int for integers? I thought python3 uses inputs as int by default if it's a number (might've read wrong)... When I did that it crashed my program (not out any float(a) in the add, subtract ,etc.)
Thank you
Hm, that will be tricky. I don't think you'll be able to do it without making a chrome plugin. You could make a plugin that writes the current tab to a file and then read it in python, but then you still need to get the window position. How about just writing it all in javascript in the chrome plugin? 
Thank you
how about something like what anaconda does and somewhat standardizes the libraries? i guess if you are reading in files from some location in the system, you will have to change a couple of locations in the script too however, it can be completely avoided if you simple have all data files in the same folder (or some location relative to the script although you will have to ensure that the users understands not to change the file and/or folder structure). Genuinely interested in hearing your thoughts on that as i've not really written code (in python, C or matlab) that would shared.
https://learnxinyminutes.com/docs/python3/
&gt; I could use the dictionary to call the functions Yes, you could do that - it will be nice exercise for "everything in Python is an object" - you will see that you can't just have in dict something like `'a': add(a, b)`, but you'll have to do `'a': add`, and then later call the function and pass the numbers. (I'll leave the details for you to figure out) &gt; Would I just do float(a) = input(), to turn the input to a float value The other way around: `a = float(input())`, you convert input to a float and then give that to a variable `a`. &gt; I thought python3 uses inputs as int by default if it's a number (might've read wrong) Inputs are strings.
PyPy and Pyjion are really quite different, with PyPy you have both an interpreter and a JITer. Pyjion is an implementation of PEP523 (which since got merged properly into CPython in 3.6) AND it contains a bridge to the .NET core JIT engine. You could still leverage this process (FAT PEP511) to create the optimized bytecode sequence and then use the JIT to execute the bytecode statements with PEP 523. As for PyPy, they'd basically have to implement their own static optimizer, none of the code in this article would be relevant because its about the CPython internals and the CPython AST. This is an example https://bitbucket.org/pypy/pypy/src/default/pypy/interpreter/astcompiler/optimize.py?fileviewer=file-view-default -ed
To add to the options - python(x,y) is another solid python data platform, simlilar to anaconda. The only downside is it's py27. That being said, is does include working versions of the qt,pyqt libraries, which are often quite tricky to install on windows. 
Gotcha, makes sense. I was thinking from a web app/service perspective where IMO it's not so bad. 
Came from C/C++ with some bash here and there. Shortly Java too. Python just read and wrote simpler. Trying something takes no time, no compilation. And the ecosystem is fantastic, if there isn't a library for something I'm doing I'll find something pretty close to start from.
Its still early here, are they saying function/method calls are (possibly) getting sped up in 3.7? Regardless of the FAT optimizations?
Working on a website called 3 things, idea is setup your 3 most important things to do for the next day and get in and go to work
Anaconda works fine for scientific libraries, but there will inevitably be a few more libraries that are needed. Then anaconda doesn't ship pip any more (in some versions?), so installing additional packages gets painful. Or the packages aren't on pip, or they depend on external programs, or the target doesn't necessarily have internet access ... Still, this part can be solved. But then the installation is huge. Anaconda is a few hundred megabytes. If you trim it down to just what is needed, you shouldn't need more than a few tens of megabytes, typically. Plus, installation is still a multi-step process ("install this, then pip install that, then run program"). When I run my software on a cluster, I usually write a setup.py that includes all necessary files and declares all dependencies, and then FTP the source dist to the cluster, then pip install the source dist. This works fine if the cluster already has a matching version of Python installed, and has fast internet access. But then the software is installed somewhere in the guts of the target machine. When I give software to students, I want them to be able to mess with it. So I give them a zip file with the code, and a PDF with installation instructions for the dependencies. Not an ideal solution. When I ship software to customers, I use cx_freeze or something, or I manually trim down a local WinPython installation and zip that up with an appropriate batch file. Both methods break every now and then for whatever reason, but I don't want to install a Python globally on a customer's computer (this might have been fixed in the new 3.6 installers). Again, not an ideal solution.
I think the issue might be some missing brackets for that first print. That's the one you're having problems with right? Or are all of them not printing?
Nice! I guess this could be handy for people who don't want to bring in `numpy` for some simple calculations. I think you should consider implementing slice-notation instead of `.colvec()` and `.rowvec()` though: some_row = m[3] # or m[3, :] some_col = m[:, 3]
I loved this book as a great resource to jump off into practical exercises. https://automatetheboringstuff.com/ This is a nice reference too: http://www.practicepython.org/
Like mentioned above. You are missing brackets in print ‘scuola finita’ https://docs.python.org/3/whatsnew/3.0.html Also, help with python should be in the subreddit r/learnpython. This subreddit mainly deals with Python news.
fuck off loser
I should have explained that better, but it was out of scope for this article. In a nutshell, yes. https://docs.python.org/3.7/whatsnew/3.7.html#optimizations It was actually implemented earlier but taken out of the "stable" branch before 3.6 was released AFAIK https://bugs.python.org/issue26110
You miss everything? :D
that's cool what I did is some simple but worked really good
Easiest would probably be Tkinter (ships natively with python, so no need to install anything else) If you are interested in GUI development and can see yourself doing more of it in the future then I would suggest using another library such as PyQt or PySides (both leverage the Qt application framework). You'll find that the available selection of widgets to use in PyQt is much larger than that provided by Tkinter. For small apps Tk gets the job done, for larger projects you may struggle a bit.
oh i got a fat python for ya
Hah, point. Edited.
/r/learnpython 
I came from Matlab, though I do **way** more in Python than I ever did in Matlab, plus most of my old matlab. There are very, very few things I miss. And when I do miss them, it is not because Matlab does it better, but because their way was easier for me at that moment. Usually, the python way makes more sense but is more work (slightly). But off the top of my head, I do miss: * Super easy GUI plotting libraries. There is no standard, one-size-fits-all library for plotting in Python that is both fast (I love matplotlib but fast it is not), universal, and easy * Availability of a very few specialized functions **without** needed third party tools. This is especially important since I spend some time on an air-gapped network so having to install python modules is hard for me and impossibly hard for some others But I do not miss: * Licenses (esp. in the summer when the interns come in and take them all) * extremely slow startup times * implicit printing if not suppressed with `;` * odd `parfor` rules (why no structs?) * Extreme ambiguity in function provenance (is it built in? Is it your own function? Same name as a built in?) * i.e. namespaces * Inability to EASILY do oop * Inability to reference called items. For example, you can not do: `function_that_returns_array(args)(1,1:3);` * Inability to iterate over a list easily. I almost always have to define a counter of the length of the list and then reference it * Ambiguity about index vs argument since both use parentheses * Keyword type optional arguments * Flexibility as a general purpose scripting language That is all I could come up with in a few minutes. The list is probably much longer 
Kathryn Huff keynote was well done. It was interesting to learn about the weird disconnect in Academia and open source and her and others attempts to bridge the gap.
Thanks... i know that one. Is there any other resource you think its interesant?
Tabpy Chloe Tseng is a great and active speaker. Talk gives a lot of good information about data visualization. Ran a little long so I would look for the slides after watching the video since it was cut short.
This raises all sorts of red flags.
https://docs.python.org/3/
What would it take to just write an llvm front end to compile python to llvm intermediate representation and letting the llvm backends handle building a binary?
The purpose for this subreddit is news
To take this one step further, I'd use numpy as a reference implementation. That way people can easily port code between the two.
I started with Python 2.3 in 2006 as part of work. It took me 3 weeks to get good enough, but I'm still learning oddities. I had done some Perl before that, which just made me dumber. Python encourages you to learn it's features. I also dabled with Python 2.0 back in 2001 for 3 weeks for a class project, but I didn't have any code to read to get better 
If you just want to get familiar with the Python syntax, I would recommend just looking up some Python projects on GitHub. Otherwise you could look at the documentation at https://docs.python.org After that you could just look up the documentation for the modules that you are planning on using. I came from C++ and when I first wanted to use Python, this worked pretty well for me.
It's explained in the sidebar :)
&gt; So then the .bz2 file is actually doing the compression, and compressing the string before writing it to the file is likely unnecessary, correct? Correct.
Gotcha. Thank you.
Thank you.
If you're already a programmer, the tutorial and docs on the official website should be fine.
Seriously, can't you just Google it? [Wikipedia](https://en.m.wikipedia.org/wiki/Scrum_\(software_development\))
Data flow notebooks by David Koop So I missed the first part of this because I got distracted by the jetbrains guys. This is a new library on pypi that is trying to enforce a more functional approach to notebooks. This way you don't have to worry about execution order and dependencies are easier to track find and update. This has potential but it's fairly new so curious to see how it might take hold.
Bqplot by Dhruv Madeka Basically all those interactive plots you see on Forbes, nyt etc. You can do it in Jupyter! Basically super interactivity and call backs. I'd say check out the demos online, the talk was mainly going through the examples. Still a cool library
codeacademy + dive into python
lol
I hear ya. If you've taken the time and put in the effort to make some nice plotting functions for yourself then you have your own matplotlib wrapper that's tailored to your taste. There's just a few seaborn functions that do a great job making a few plots I use frequently - histogram with optional KDE, heatmaps, and clustermaps. I feel that they are generally so close to what my end plot should look like I always start there.
That would be amazing! I know Ableton inside and out. If you have any questions feel free to ask!
awesome blog post, thank you!
Oddly enough, I think it's not a typo. For some reason I forget, some part of the build process uses the name "python.exe" on a Mac. edit: Someone here will know/remember.
Correct. It's not a typo. You can see in the screenshot I was working on a Mac. It's really confusing! 
Welcome ! friend 
I would take the time to learn Pyqt5 so you have it in your arsenal for possible later projects. It's not that hard to make a basic app either.
Redefining Python probably. 
Why? [Here's a short tutorial on writing your own frontend/lexer](http://llvm.org/docs/tutorial/OCamlLangImpl1.html) using a fake language "Kaleidoscope" that looks a lot like python. # Compute the x'th fibonacci number. def fib(x) if x &lt; 3 then 1 else fib(x-1)+fib(x-2) # This expression will compute the 40th number. fib(40) 
Perhaps. Perhaps not. Depends on how protective you are concerning the data the API is sharing with the outside world. Personally, I think it's nobody's business what's in my bank accounts. I would not want the bank to provide non-two-factor access to any of my financial personal data whatsoever. But perhaps that's just me
I'm having issues with the change (I think)... uploading sources/wheels to pypi via setup.py upload works (it is using the new url so it seems), however uploading documentation still uses the old url and now fails completely.
&gt; street network Like the roads are edges and intersections are nodes? This seems cool but the terminology is lost on those of us that have no idea what you're talking about.
I use them to do interactive dialogs in my MUD / Interactive Fiction library, Tale. The driver handles multiple outstanding dialog functions that are asking their user for input and print responses. These dialogs are implemented using generator functions that use yield expressions to ask and process user input. 
What the others said, but also you're using stylized quotes in your source: ‘ and ’. You should use the plain ascii quote " or apostrophe '
That's a really neat use of them
The article alludes to it a bit: Python is crazy dynamic. You can absolutely do it for a subset of Python that you know doesn't use certain features of Python, but I think that's not what you're asking. If it is then look at numba, cython and rpython for example. There are many such projects. 
Yeah it makes the dialog functions much easier to write, almost as easy as if you're doing it just for a single player. Only now the driver is able to weave all sorts of other actions into the mix so that stuff can happen in the game world regardless of the player actuallly typing anything. (edit: you can see one of the simpler functions here, its the dialog asking the user if she's sure to quit the game or not https://github.com/irmen/Tale/blob/00acd428ea19015be188f2c4d3c47e2824c61c16/tale/cmds/normal.py#L925 ) However the driver itself is a bit of a mess, I'm not using async or whatever it has its own sort-of "event" loop that juggles the coroutines
I moved from PHP. It's wonderful, until you try to do anything with real complexity or difficulty, which is when PHP quickly becomes unmanageable. I moved to Python because it seems as simple to use as PHP is supposed to be, and it is far, far more popular. I figure if I focus on learning Python and Java, that should cover most of my needs as a developer. (right now I do it for fun, hope to get a dev job in the future. For now I work in web analysis/SEO) In the future, I might learn c# and objective-C, but who knows.
well, i guess someone had to make the joke
"In future, optimizers could be included in Python packages and shared on PyPi (pretty cool-huh!?)." 👍😃
/r/learnpython
Sweet, I'll have to check this out
https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.spatial.distance.cdist.html#scipy.spatial.distance.cdist
Interactive plots. I have gene data and being able to zoom into groups and hover my mouse over and see that information is really nice and convenient for exploratory stuff. The main draw to Bokeh though was for its bkcharts component which it just deprecated, so I just started using Holoviews. 
&gt;I am still fixing my mistake. please use version control
I know it's not exactly necessary in a dynamic language with closures, eval, and so on, but personally, I'd never turn down AST macros of any kind.
Hmm. I could actually see some really sweet heirloom or cherry tomatoes drizzled with balsamic vinegar actually working well to balance out a fruit salad. Standard store-bought tomatoes, of course not.
Well, multiple inheritance, no interfaces, functional programming features, static/class methods are all features that are not available in many languages, and I've yet to come across a resource that explains dos and don'ts of these features comprehensively. Why don't I have interfaces (as a language feature)? Do I compensate with multiple inheritance? I think from a software development perspective many of the available resources lack that stuff. While I (also) do python at work now, I still don't feel confident when developing a larger project.
Numba is a math-only JIT; cython only converts bits of Python to C, and no one knows what RPython really is. We need to take Python, add in static typing, strip out the crazy dynamic bits, call it Garter Snake or something, and sell it as the complement to Python, the cleanest, nicest, easiest-to-read statically typed compiled language. The closest I ever found was Genie, but I'm not sure it's still developed: https://wiki.gnome.org/Projects/Genie 
In the autotools script the default executable extension is exe. It comes from that. _Why_ that was decided? Im guessing as not to interfere with `./python`, but I don't know.
Pomegranate Jacob Schreiber So this one replaced the mystic talk. It was very well done and entertaining I strongly recommend on watching this one once it comes out. Goes over the neat ability to combine distributions in a model.
Personally I am told Martelli (though now outdated, but I believe the 3rd edition of Nutshell is due out this year) and Beazley's books are very helpful for advanced concepts, however I managed by reading and writing code. I understand that different methods work differently for each individual. Duck typing generally replaces interfaces. I try to avoid multiple inheritance where possible (often you can use a mixin) but if you do have to use it, make sure you understand the MRO (method resolution order). Hettinger did a big talk/essay on this. Python does have abstract base classes. Perhaps it's different from me as I learned C first, Python second and Java third. I suspect if that if you did Java first, the highly structured way that works might mean it takes longer to adjust to the dynamic nature of Python. I have no evidence to back that claim up. ps: Don't ask me to explain async/IO. I don't think Python's api's for that are particular mature yet, and they always seem to have weird side effects. It's frustrating as I can do async perfectly fine in C. :-) pps: Don't most mainstream langs have some functional lang components? Java 8's got streams, C++ has got magic fuckery, JS is JS; C# has something, but don't know what as I don't know C#, etc.
Having worked with Elixir I could not agree more.
Doesn't Python have a way to compile to straight C? Python -&gt; C -&gt; llvm?
Remi.
Write the steps out in pseudocode then translate to real code.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/litecoin] [python-bitcoinlib but for litecoin?](https://np.reddit.com/r/litecoin/comments/6mwpmq/pythonbitcoinlib_but_for_litecoin/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
Maybe they're running on a git hook. 
It's worth adding that the videos should appear at https://www.youtube.com/playlist?list=PLYx7XA2nY5GfdAFycPLBdUDOUtdQIVoMf
Not that I know of. There are limited versions to be sure but they are all just that: very limited. 
Was bkcharts for a specific plot type? Or did you just like the interface? I need to look into bokeh for interactive plots. Also gene expression here - and I've been using Plotly for that, but I just hate their syntax. Always have to look up the 20-line or so incantation that it takes every time I want to do something.
That's my point though. It wouldn't be Python. Personally I'm fine with that and I think it would be great, but it's not just "throw LLVM on Python" which is what we were talking about. 
Berryconda was a fun talk about a mans adventures to compile python 3 on ARM processor computers (or even a Nexus phone). Fun talk
Do you have an example script that shows it leaking memory? 
So, how did it go?
&gt;high coverage level to test for things that type checking would catch for you. You can typecheck in Python.
I started about 10 years ago when I was first learning to code. That was probably around v2.4 or so. I used it off and on for hobby projects, but only started using it for work last year (data science). I love learning languages, and each has there place. But Python is definitely the best language I've ever used for rapidly getting shit done.
Thanks for the info!
If you are referring to mypy, I covered that: &gt; Annotations and mypy feel like a weak addon, because they are C# types are required, you can't get around it. Well, you can if all you use is `object`, `dynamic` but that goes so against the grain that nobody would do that realistically. Someone can avoid annotations and mypy by just not using it and python merrily goes along. It's not inherent in python.
3.6, because 2.x is no longer actively developed.
In the CPython source code, there's a folder named `Python`. On OSX, the file system is *not* case-sensitive, so having a file named `python` and a folder named `Python` in the same folder would be an issue. Hence `python.exe`.
Though you could build it in such a way that valid Garter Snake still is valid python. Build a verifier that checks that Garter Snake compiles, and if it doesn't spit out an error and/or fall back to CPython. Sort of a MyPy + Numba on steroids, that works on the file level instead of the function/class level. But of course the dynamism of Python is not just academic, it's used throughout the library ecosystem. So unless you can cover most of that you'll be calling into python code and be shipping a python runtime with your compiled code. Or you're losing the ecosystem. And if you're willing to have a separate Python runtime to interact with and lose the ecosystem otherwise you might as well be developing Julia instead.
3.6 The only reason anyone uses python2 is because they forced to by some legacy code. Sadly, there are a huge number of us, so you will have to learn how to translate the python2 examples you find online into python3. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Honestly this isn't a Java-programmer problem. My first thought is that you've read too many books on designing systems and haven't done enough of actually designing systems that you then maintain. Your example here is not complete enough for us to understand how you're getting yourself into this mess to begin with but based on some comments below I'll take a crack at it. I'm assuming a few things as best I can: * you have a series of functions you want to enumerate * you're enumerating them to add them to a db * these aren't necessarily mathematical operations If they WERE mathematical operations, btw, you would normally handle something like this by overwriting the dunder methods like __add__, __sub__, __mul__ and so on. The more normal representation of your do_xyz(op, left, right) function looks like this in python: left = [ list of objects for l-side ] right = [ list of objects for r-side] results = map(op, left, right) Ok but if you really want to enumerate a set of functions in a module try this ... Let's call your module of functions stuff.py. Then ... import types import stuff func_names = [f for f in dir(stuff) if isinstance(stuff.__dict__.get(f), types.FunctionType)] for index, name in enumerate(func_names): print(index, name) 
Interesting. That makes sense. I forgot MacOS is case insensitive.
3.6, no question. If you're new to Python it makes no sense to learn 2.7, as official support for it ends in 2020, and the momentum has been behind it for years now. And, at the end of the day, when you get good at 3 you'll see that it's not hard, conceptually, to work in 2 if you're thinking in terms of 3. The other way around isn't quite so easy, which is why it's taken so long for the transition take hold. But for the last three or four years, no question, &gt;3.5 it's just the way to go for a starter.
I just wanted to point out that mypy is pretty much considered radical even in pro python circles. (Just as TypeScript is not automatically accepted as manna from the sky by JS folks, and similarly how Scala hasn't replaced Java automagically over the last decade.) And mypy has (had?) a pretty unconvincing and overly lacking documentation/website.
Are you getting an error message or a specific misbehaviour or problem? Without your data as well, nobody can test it to investigate. 
Is this project really alive or has Victor moved on to other optimization ideas? There was some discussion on python-dev [here](https://groups.google.com/forum/#!searchin/dev-python/fatpython%7Csort:relevance/dev-python/pO2E7zucDzg/EIPsZWTPBwAJ) and [here](https://groups.google.com/forum/#!searchin/dev-python/pep$20511%7Csort:relevance/dev-python/WMqJ2QhzNPk/CX-0f4rLFQAJ) but it doesn't seem to be a foregone conclusion that this will be implemented. Is there more recent work &amp; progress on this? 
About 1998. First real use was to reprogram the IP's on about 50 JetDirect boxes scattered around the site, in one morning. Saved us about 2 weeks of work.
Ahhh... this reminds me of years back when I was streaming a chess engine in Python... it was connected to the majority vote within 1 minute... Like Twitch Plays Pokemon. Turns out... not that many people are interested in chess on a game channel :-) Anyway... `/nostalgy` As you mention, line 201-202 contains: `return{'version' : version, 'text' : get_passage(data['votd']['reference'])}` The error isn't the clearest for a person new to python, but what it refers to is a problem similar to: `["a", "list", "of", "something"]["votd"]["reference"]` A better idea of the error now? Either `data` is a list and not a dictionary (thus you cannot use a string as an index), or `data["votd"]` is a list and not a dictionary, thus `data['votd']['reference']` would fail. Lists can only be indexed like `["a", "list"][0]`.
3.6
This is how I learned. If he knows how programming works its really just deciding on something he wants to program, and than asking "How do I do this?" "How do I do that?". Also, practicing 8-16 hours a day like I do :-P helps. I'm still a newb.. python has many areas to visit and learn and to test out by building things that take... awhile.
Thanks for all the answers! Great, was thinking of going for 2.7 because one of the books i was reading said i should but it's outdated by a couple of years.
macOS is not case insensitive. It's just a property of the underlying file system (HFS+) used. When you format a partition you can choose case sensitivity on or off. The default is off.
Yep, like that. [https://en.wikipedia.org/wiki/Street_network](https://en.wikipedia.org/wiki/Street_network)