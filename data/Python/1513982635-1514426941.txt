&gt; I think you're getting this wrong actually - your case, where you seem to be using the tar format as-intended, is the minority. Nope. The average tarball is shipping a bunch of files, often sources. When you get a linux kernel tarball, you almost never care about single files in there, you just decompress the entire thing and work with that. Applications which need random access to files use a zip (or more rarely rar) backing, which is why archive-based file formats (e.g. epub) use zips, or more rarely rar (cbr). Average users creating archives? Almost never need random access to specific files in the archive, they either use the majority of the archive's content or none. Decompressing the entire thing is the vast, vast majority not only of tarball uses but zipfile uses as well. &gt; A huge number of software engineers have just always seen 'tar.gz' on their systems or on stackoverflow, and assume that it's some sort of "mega compression". Yeah ok whatever.
I was actually looking for something like this today. Google sent me [here](https://redis-collections.readthedocs.io/en/stable/), but have not yet settled. How do these projects compare?
Which webdriver did you end up using? PhantomJS ghostdriver? 
lol ok pal. Don't work in the defense industry then.
`while wrong &lt; maxwrongs and so_far != word :` Pay attention to the `so_far != word`. We know `word` is a string (i'm guessing) so in order for them to be equal at some point `so_far` must also be a string. Since strings are **immutable** (meaning they can't be changed one letter at a time for example) you will have to 'reconstruct' the `so_far` variable as a string in each loop. You are on the right track here: for i in range(len(word)): if guess == word[i]: Your algorithm could take a few approaches. I suggest the following: - check if the guess is in the target word - if so, then loop over target word one character at a time - if that character has been guessed, use it - otherwise, use an '_' The problem comes up again that strings are immutable, so you can start with an empty string `''` to build up the final product adding one character at a time: `example += '_'` Or, you can create a list of characters and then convert that list into a string chars = ['s', 't', 'o', 'p'] ''.join(chars) 
This looks really cool. Way above my level but id love to do things like this someday. Keep up your work !!!
I'm going through it right now, and honestly, it's made me enjoy 3.6 more than ever. I may need to change my flair..... 
Are you looking for python help or help refining how it works?
Hi, I was in a similar position last month. I have started doing Pybites: 100 days of python challenge You can download challenges from git hub and practice. I strongly recommend using Git(good way yo learn if dont know). These challenges are not simple one. So far i have done 3 challenges and liked the difficulty of it as well. Flask I have started learning flask and wanting to create a blog and slowly build on it. I choose Flask over Django because I believe I will learn to build from bare minimum, then move to Django with all the knowledge would help.
I am looking for help with python in hopes of refining my code to make the searches better 
State in the README what are the advantages / disadvantages of your approach and in which cases one should use it. *Edit:* see also https://github.com/Doist/redis_wrap .
I'm sorry for not really answering your question last time. Here's a reference implementation I came up with, that should give you an idea how to hide the word from the player: import random def new_word(filepath=None): words = ( "hello world", "haphazard", "aptitude", ) if filepath is not None: with open(filepath) as f: words = f.readlines() return random.choice(words) word = new_word() split_word = [i if i in (' ', '\t', '\n') else '_' for i in word] mistakes = 0 max_mistakes = 6 while split_word != list(word): print("Word: {}".format("".join(split_word))) guess = input("Enter a letter or guess the full word: ") if len(guess) == 1: if guess in word and guess not in split_word: print("You guessed right!") for index, char in enumerate(word): if char == guess: split_word[index] = guess elif guess in split_word: print("You already guessed that.") continue else: print("Your guess was wrong!") mistakes += 1 else: if guess == word: print("Correct!") break else: print("That ain't the word you're looking for.") mistakes += 1 if mistakes &gt;= max_mistakes: print("You were hanged.") break
For me, I found that if I got too used to tutorials and books, I would freeze up when I went to develop something from scratch. It sounds like you know plenty to get started. Now might be the time to find out if you are a learn-by-doing type. I would suggest starting with VERY small projects, because you want to be able to complete them and have that success under your belt to motivate you to keep going. Since you like AI and games, maybe try something like Tic-Tac-Toe. It's done to death, yes, but it's a simple game with a few parameters where you should be able to understand the problem, begin to formulate solutions, and get to fiddle with AI. I would say to approach it as your own project, not a tutorial. What I mean is, think about how you would make it, and only search for answers to specific points where you get stuck instead of following a step-by-step instruction list. This will help you develop the important skills of programming that are not writing code, such as algorithms, breaking down big problems, framing questions well, and finding your own solutions to problems.
The tool was just updated recently which is why I am reposting this. I am curious what other cryptocurrencies the community would like to see supported my list of cryptos I want to support are: - Bitcoin - Ethereum - Litecoin - Bitcoin Cash - Dash - Ripple - IOTA
I like this. If I could make this top answer I would. I think I might start with Pygame. Make some very basic projects like you suggest and see where it takes me. I would like to take it slow and not overwhelm myself.
Mapping data with SQLAlchemy, trying out flask, and hopefully moving on to a few ideas I've been meaning to get to.
This is fine when dealing with cases where storage space isn't a concern or you have few files. A project I worked on a group, one of the guys did this across a few thousand large is on files which ballooned the storage and made the files molasses due to the white space. Several gigs worth of whitespace, not so fun.
Some people went out on the beer! 
Do you have an IG account? and access to the API?
[removed]
Hey Borg88! Oh man, I apologize for that sentence, I need to fix it. What I meant to say in my rush to get the site out the door before the holidays, is that we need more flexible thinking in programming. And in my mind, math itself is a creative discipline, just like programming, painting, and dancing. It's finding an elegant solution to a fuzzy questions, with multiple possible answers and angles. What I'm really trying to say here is that we need more people who are comfortable playing with ideas and asking questions, rather than memorizing answers to already solved problems. 
I didn't really look at the code but how is this better than just Redis? Redis is a persistent key value store. I'm honestly not trying to be condescending. Or perhaps it was just fun and you learned something... Also a reasonable answer. 
Get the index of the letter guessed in the word and replace the underscore char at that index in the string containing the underscores with that letter. 
Probably the built in selenium webdriver function after downloading a browser. 
It's a cleaner interface and can be used anywhere that expects a dictionary.
TANSTAFL
Does it not need geckodriver, chromedriver, or similar? Also he said it was headless which is why I assumed ghostdriver.
how is the book different from the website?
I had no idea that this library existed but in the current climate, it makes perfect sense to use this. I like the way you've written it out. I also get different results when using your tool against speedtest, healthcheck, and fast.com. I hope someone can give the answer as to what might be off. I'd rather use this program and schedule it to notify me if it drops below a certain threshold.
I like that this walks you through an example using Docker. I've been having trouble finding a tutorial that shows you how to connect these parts.
I wrote a script that grabs images and creates folders where the images are allocated to by size. For example, all images that 150x150 are sent to a 150x150 folder, and images that are 250x250 are sent to the 250x250 folder.
yeah I looked at "How to use" and said to self "ok, so I have a dict, why do I want it persisted...."
So Redis is required ? 
Everything that you see in the "what's new" section of https://testdriven.io/version-two/
I’ve never used that service, but there are plenty of services that you may be able to run on top of. First that I would look into are Amazon lambda or Google app engine?
Added call graphs for source code for make, qemu &amp; vim : https://github.com/tarun27sh/Python_gdb_networkx_graphs
But what if I get two hot dogs?
How does it respond when you supply a key that already exists in the redis instance you're connecting to?
Yes. 
the same as a dict does. you will overwrite the value if you assign to that key
at my job we have something like this. we use it as a cache that we can add lots of different structures to and update them easily. e.g. web app, request comes in, we gather info on the user from other services, put it in the redis dict thing. look it up for later requests etc
 class _BaseDict: def __iter__(self): for k in self.keys(): yield k # ... def keys(self): return self.__iter__() wat
&gt; integers that are in the power of 2. For example, the full_screen variable might be 1 (zero to the power of 2) and then black_background variable might be a 2 (one to the power of two). Don't you mean 2^0 = 1, and 2^1 = 2? 0^2 != 1 and 1^2 != 2
But. is it pythonic? Would it be better to pass a set of members of an enum? (instead of creating a bitset). 
Wait... you’re saying a QA engineer...I’ll repeat: QA engineer, doesn’t have meaningful opinions on code quality? 🙄 I’m also a software engineer (newly hired DevOps eng) and I’ve had the opposite experiences. QA and DevOps have to understand the code being written by devs and write more code to test and get their projects into CI/CD. Your attitude is very... old skool
Tragically, Redis is in fact required for a "Redis backed Python dict," yes.
I do believe Google offer free VMs. You could also set it up at home and ssh for monitoring, perhaps? 
AWS free tier? Azure free tier?
This seems like it's just supposed to be an easier way to pull keys out of redis once you've already decided to use it and the `README.md` on this project wouldn't really be the right place to sell you on redis.
I like Jake Vanderplas!
Yeah as someone who works with redis, this makes code look cleaner. It's not mind blowing but the regular redis module makes it an effort for somene else to look through your code. You can write your own wrappers but then that just gives someone else even more code of yours they have to read/familiarize themselves with. Having something that can be something close to a standard makes it easier to figure out.
Well, the Python 3.5 section is part of the explanation. But you're right. I did not want to be misleading. I changed the title to "Using async for loops in Python". Can't edit on Reddit though.
Ditto! I have loved this library to death. That includes the sister verification utility as well. I even dug up a python version from somewhere. Nowadays I've begun throwing more things into sqlite files. Kinda tired of dealing with ini, json and xml files. I liked pyfilesystem (fs for short) but pulled it out some code when I couldn't make sense of an error trace when trying to use it with python 3. The author helped me get around the ensuing encoding error but too late, with fs pulled from that project, I wasn't going to reverse my engineering on that code base again. Still, I think fs and configobject ought to deserve a mention in a topic such as this.
Do you have skills other than what's you've described? Networking, actual software design and development process, distributed systems, test automation, anything? There are so many topics to know besides just Python, I don't even know where to begin.
🐍 
I listened to the podcast last night before seeing this post. Excellent podcast. It was over too soon. 
I'm listening to it right now, while making figures for a publication with numpy arrays, stats with scipy and plotting with matplotlib.
&gt; How does it respond when you supply a key that already exists in the redis instance you're connecting to? the person probably meant if it comes with its own redis installation or one has to link their own. Don't be so cocky
Do you really want your data persistence to be non-obvious though?
Unfortunately, there is not a way to do that via Reddits' API. Perhaps check out /r/pushshift.
these types of questions belong in /r/learnpython replace renames a file, so takes one path and then renames it to a new path. Instead of passing in a path, you're passing in a string, when casting a string to a path, pathlib uses the current directory. (which happens to be the parent of `p` but need not be). in other words, `Path('boo')` and `Path('./boo')` and `Path('.') / 'boo'` are all the same. The solution then is to pass a real path object to replace p = Path(sys.argv[1]) for c, i in enumerate(p.iterdir()): i.replace( p / (p.name + str(c))) It might be better to use [`.with_name`](https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_name) function p = Path(sys.argv[1]) for c, i in enumerate(p.iterdir()): i.replace(i.with_name(p.name + str(c))) 
Not sure I catch your meaning. Are you saying pushing the data off into redis makes it less obvious?
Thank you! Sorry I was unaware such a subreddit existed.
No, I mean, another piece of code thinking it's operating on a dict but one day mysteriously writing to redis could make harder-to-debug code than just explicit redis usage.
Oh! Thanks, though :)
right but does the dict have the values of whatever was in the redis instance? Also what does it do when you supply a key to a set, list or hashmap? Does it just initialize the mirrored data structures?
You could probably say that in general though. I mean if you have a function that somehow gets access to a redis-backed dict that it's not supposed to be modifying then yeah that would be bad but it would also be bad if it weren't backed by redis. What's more if you're doing a fair job of QA then it's hard to imagine something getting through where it writes to a dictionary it's not intended to write to. Abstracting out the "redis" part with a layer of code that's at least someone "standard code, not something I wrote myself" makes the rest of your code look cleaner and easier to follow.
What about this confuses you?
&gt; right but does the dict have the values of whatever was in the redis instance? Looking over it, it looks like it could use some work in this area. The keys returned are only current if they're unchanged since you loaded the dict or if the currently running process was the last client to run a change. It pulls data from a "cache" dict that gets populated just during instantiation. That's probably not a good MO for serious work and technically speaking redis is already supposed to be your "cache" so why not just have the class be a wrapper around py-redis that makes the keys look like dicts?
This is, in terms of the "public API", exactly how Python's builtin dicts work. Iterating over a dict yields its keys; calling the keys() method on a dict yields a sequence of keys ( I am not sure whether Python 3+ uses a generator, one of the fancy "set views", or whatever).
 the circular calls
My half asleep brain totally missed this. I think this legit only works because the redis version of the cache implements keys differently. The tests don’t look to actually test the base dict class at all. 
Idk who you're quoting or why, but I stand by my assessment that it was a stupid question
yield from self.keys()
my reddit app is broken. But again, you are not the quality control agent of reddit so hold your horses and let other people ask their queries. You don't get to award stupid or smart question of reddit. This is not Oscars or Mensa
Looooser
There could be other options ... I wonder if it would work with this Redis re-implementation in Python: https://quantmind.github.io/pulsar/apps/ds.html
I've recently made an OCR program for work, tessract had really poor accuracy imo. But...I've got near perfect results using a Google API. See here: https://cloud.google.com/functions/docs/tutorials/ocr
Does it work in an async code? I guess dictionaries are faster than redis so if I plan to implement this in my application (just by changing the initialization of the dictionary) will it become slower?
secretly hoping that you are not an adult because such activity can at least be justified on teenage angst. God help, if you are an adult.
Why flask-script and not click (with the native cli stuff flask provides)?
You might have it shared between processes (across different machines as well).
It's great when you expect subsequent requests needing the same data and you can avoid expensive sql calls. Great thing compared to just having it in memory is that you might have multiple processes serving and they'd all benefit from it.
Well, here are a few problems I'd point (+10 years experience): * is it thread-safe? or process-safe? versioning? * how do you handle connection errors and timeouts * what happens when Redis goes away? * Redis needs to be configured to be persistent, how do you handle configuration problems? * this lib strips features from Redis, adds problems unrelated to Python (Redis config, networking) and offers *less* features for increased load of problems - the risk to reward ratio is actually worse than in case of a dict serialized with pickle - what's the point of it then? Finally, this is a problem already solved, in this case by the incredible [klepto](https://github.com/uqfoundation/klepto) library
I snorted at "tragically". "As if all that is the universe all at once colluded with the singular sheer force of will to inject the most impossible scenario conceivable by the pathetic, wandering human mental condition - yes, the Redis-backed pyhon dict has been cursed with a crippling dependency - the unthinkable, unfathomable ... Redis. May whatever God is yours have mercy on us all." 
The input function is working fine - - just unindent the last line all the way to the left, and it will work. Also: reddit.com/r/learnpython 
Thanks!
Jake Vanderplas like I
I solved my lab reports during uni with python. It made pchem labs a cake walk. For my pchem exams I wrote a couple of simulations to get a more intuitive feeling for it.
Checking an exchange mailbox for emails with a specific subject, downloading the attachments (which are docker-compose files), commit them in a git repository and start a jenkins pipeline (which are als python scripts) to pull the docker images and run the containers on a cluster of linux systems. This saves 5-10 minutes of time 4-10 times a day of work and more time not spend debugging because of human errors. 
Did you sort out browser games? :) BTW - super cool project!
I used the built in Selenium webdriver, as suggested but you're correct, since I was running the script on rPi, I had to download a browser, I chose Firefox and then I had to get the Selenium compatible geckodriver. I can't remember from the top of my head how I set everything up but I remember having some difficulties before headless testing was finally running as expected.
yeah bro, it is very very good example. Thank you 
Don't worry I was kind of joking. Your book looks interesting. It is a good idea to demystify programming, and most people can learn the basics if they are motivated. The Processing project takes a similar approach of using art to do this. 
So would anyone mind telling me the pros and cons of Django vs. Flask? I've been searching but can't seem to find anything definitive. 
I built this in a hurry for my friends fine art degree (it's a total mess): https://github.com/impshum/BadgerOS She passed. Yey! 
Created a web crawler to mine data and generate sales reports (CSV files) to managers
Flask is more basic. It doesn't come with as many things installed. Django has a lot built in by default. I personally think Flask is easier to learn. It helps you understand views better because less is hidden. If you are looking to make a website with a login, Flask can handle it but it is easier with Django in my opinion.
You are downvoted because this question is asked every single time either Django or Flask are mentioned and there are literally thousands of blog posts and articles about this exact question all over the Internet.
Awesome, looks useful for a handy cache
If you don't know the difference then use Django. It is "batteries included" and has everything you need to build web apps. Once you have some experience you'll understand the times you want to use flask.
This link may give you some insight(in the readme). https://github.com/sivel/speedtest-cli tldr: speedtest.net uses sockets, and python can be slow, causing variance. Fwiw, I'm on a 100Mbps connection, thats what i get from speedtest.net (+/- 5%), and pyspeedtest shows 30Mbps
Writing backup script for Dell and Cisco devices.
1. Sidebar: "If you are about to ask a question, please consider r/learnpython or the learn python discord." 2. Can't tell anything without seeing your code (preceded by four spaces for proper formatting)
Who's Downvoted???
Like, I Jake Vanderplas
Some kind of script in Blender for a complex macro to divide a landscape in tiles, including textures. Or was it this prototype in QT5 for an alternative to MS ribbon toolbar?
This was my experience as well. When learning python I started with the tutorials then moved into django. I felt like I was spending more time learning django than python. I switched to flask and felt I was able to get something to a functional state much quicker. In the long run, I think django is a lot more powerful in the sense that a lot more is just included, but it felt like an impediment to me as someone who was really trying to produce some basic stuff and focus on learning the language.
I just did a little searching and found this on YouTube: [Django vs Flask](https://www.youtube.com/watch?v=KnbAUplWXC0)
Made a terminal based chat client/server pair.
Every time I come up against Django I feel like I could build a F1 Car out of the dumpster of parts they deliver to my front door. Then I build a 4-door mid 90's sedan out of another framework. Flask feels like I'm learning Python.
The problem comes when Django doesn't work the way you need and you have to make design compromises or dirty hacks. I'd say use Django for typical websites and Flask if you know it's going to be weird or really simple. 
You must override one of these methods on the abstract base class to get a working subclass/implementation class. This would be more clear if they had actually used the features of the [abc](https://docs.python.org/3/library/abc.html) module.
https://seaborn.pydata.org/generated/seaborn.barplot.html We'd need to see your code. Stack overflow is a better go-to in the future for questions like this.
iirc it depends on how you ran the script from a dos windows or via pythonw/explorer double click. Run process explorer and check the hirarchy between your process and the calculator and if they under the same windows job
linode is a good alternative if all you need is a cheap server
github.com
Great question! I've had problems with the CLI working in the past with the [Application Factory](http://flask.pocoo.org/docs/0.12/patterns/appfactories/) pattern, especially when refactoring FLask-Script to the CLI. Have you had any problems?
https://github.com/trending/python 
Hmmm... interesting. Will definetly use for inspiration. Thanks! Edit: typos
it should be Python Turtle graphics
No, and usually their IRC channel (#pocoo on freenode) is quite helpful if you have problems.
That's because your tasks may get terminated after a certain time interval to avoid clogging up the PythonAnywhere servers or due to server maintenance. There used to be a mutex lock based solution that was the recommended way to solve this issue on PythonAnywhere. You may still be able to find examples of it somewhere, but it is now being deprecated. PythonAnywhere is actually currently trialling a new feature called "always on" tasks. See [this] (https://help.pythonanywhere.com/pages/LongRunningTasks/). 
I’m similar to OP - how do I get to where I can make money with Python? I taught myself Flask and have made some (albeit ghetto) webapps. How do I go from this to making money doing something interesting instead of working in an office.
My repository there are someone.. https://github.com/Marlysson/Project-Manager https://github.com/Marlysson/finhis
true
Interesting concept! $0.50 u/tippr
u/kpkaiser, you've received `0.0001497 BCH ($0.5 USD)`! *** [^^How to use](https://np.reddit.com/r/tippr/wiki/index) ^^| [^^What is Bitcoin Cash?](https://learnbitcoin.cash/) ^^| [^^Who accepts it?](https://acceptbitcoin.cash) ^^| ^^Powered ^^by ^^[Rocketr](https://rocketr.net) ^^| ^^r/tippr ^(Bitcoin Cash is what Bitcoin should be. Ask about it on r/btc)
This is really good stuff! $0.50 u/tippr
u/BarkingPizza, you've received `0.0001497 BCH ($0.5 USD)`! *** [^^How to use](https://np.reddit.com/r/tippr/wiki/index) ^^| [^^What is Bitcoin Cash?](https://learnbitcoin.cash/) ^^| [^^Who accepts it?](https://acceptbitcoin.cash) ^^| ^^Powered ^^by ^^[Rocketr](https://rocketr.net) ^^| ^^r/tippr ^(Bitcoin Cash is what Bitcoin should be. Ask about it on r/btc)
You are not actually calling the function that uses `raw_input`. Next time, please post such questions to /r/learnpython.
add an `if __name__ == '__main__':` block and then call your function inside of it.
Assuming they are large multidimensional arrays you could use HDFS with h5py. 
I tried , it said 'text posts only'
The input in other examples doesn't work without adding 'raw'
Check out advent of code if you feel like it's too much learning and no fun.
I started refactoring to use the CLI for v2.1, but then just decided to stick with Flask-Script. Honestly, I'm not a huge fan of Click being a part of Flask. It's unnecessary. Since it's there though, it does make sense to use it over Flask-Script. I'll think about adding it for the next edition.
I have no idea what kind of inputs you are expecting but it seems like you should write a function (or functions) that you can just call throughout your code. For example, if you are simply asking for an integer for user input but with a new message each time, you could try something like this (which repeats until an integer is actually given by the user). &gt;&gt;&gt; def get_user_input(msg): ... while True: ... try: ... user_input = int(input(f'{msg}: ')) ... except ValueError: ... pass ... else: ... return user_input ... &gt;&gt;&gt; user_input = get_user_input('Enter an integer') Enter an integer: a Enter an integer: b Enter an integer: c Enter an integer: 123 &gt;&gt;&gt; user_input == 123 True &gt;&gt;&gt; user_input_2 = get_user_input('Enter a different integer') Enter a different integer: d Enter a different integer: e Enter a different integer: f Enter a different integer: 456 &gt;&gt;&gt; user_input_2 == 456 True 
The first step you could take is to put your input() part into a function. You could add your error handling and so forth there (left the error handling for you to, umm, handle): def get_input(position): answer = input("Who is your {}? ".format(position)) return answer starting_qb = get_input("first string QB") starting_center = get_input("first string center") starting_left_guard = get_input("first string left guard") And so forth. But that still leaves you doing a lot of stuff repetitively. So the next step you could take would be to put your questions into a list and loop through them, or into a dict with the answer variable: def get_input(position): answer = input("Who is your {}? ".format(position)) return answer positions = {} # List of questions to ask position_names = [ 'first string QB', 'first string center', 'first string left guard' ] # Loop through the positions and fill in the dictionary for name in position_names: positions[name] = get_input(name) # Loop through the positions dictionary and print the results for p_name in positions: print("{}: {}".format(p_name, positions[p_name])) 
this implementation doesnt even mention nonces, and is therefore highly misleading. any "mini blockchain" implementation without nonces is really just hashing hashes - who cares about that?
What I meant was that with exactly one exception, all the QA engineers I've worked with couldn't tell good code from bad if it had a freaking label on it. It just isn't their domain. Likewise I couldn't really have meaningful opinions about how selenium tests are written or organized, or how Jenkins is set up. It's not my wheelhouse.
it depends of the kind of project you're interested into. I made one for exchanging data between internet service (an opensource clone of IFTTT.com)
Basically as part of your learning you need to start training your thought process to break everything down into the smallest set of functional pieces so these can be used as building blocks to solve larger problems. Just like in the above post.
Super cool
Have you looked at [airflow](https://pythonhosted.org/airflow/) or [luigi](https://luigi.readthedocs.io/en/stable/)? 
And what would be the purpose of this, except spam?
Yeah that's something that I'm working on, hence the reason I'm still a beginner. I have ideas for projects, but I don't know how to break it down into incremental steps so I can complete it.
Great idea. I'll definitely implement this and see if it works. Thanks so much for the feedback!
you can do freelancing.... there are many freelancing websites for developers.
I'm actually surprised that Python decided to guarantee insertion order is maintained in `dict`, without also guaranteeing the same behavior in `set`. The inner mechanisms are surely quite similar, I would think.
you can document your work in the form of a blog post on medium. if you are lucky, someone interested in your work will contact you. This is want [Michael Galarnyk](https://coolpythoncodes.com/first-data-science-job/) did to get some good jobs. Freelancing is another method.
I think this question should be shared at [r/learnpython](http://www.reddit.com/r/learnpython)
You clearly only read the title then.
`dict.from_keys` is only guaranteed to preserve order by CPython and PyPy. If you want to guarantee order, then you have to use `OrderedDict.from_keys`, which should boil down to the same thing in CPython and PyPy.
Raymond Hettinger explained that in https://twitter.com/raymondh/status/850102884972675072
Python didn't guarantee that . It's an implementation detail of CPython and PyPy.
Oh, that's awesome. An alternative would be to put `OrderedDict` in the standard library, and just have it point to `dict` when it can.
The language standard of 3.7 does guarantee it. In 3.6 I agree it was happenstance in some of the implementations. Yet it still seems lopsided (my opinion) to make people think differently of dict and set with regards to order.
Well, more in the reply "Sets are a trickier case because order preservation is at odds with the algorithmic optimizations for intersection() and other set ops." But I think it's a shame. I would think it's okay to say set-on-set operations like `intersection()` cannot preserve order and the resulting set will have an arbitrary/undefined ordering if subsequently iterated.
A friend had speaker wires running from the sound system in his basement out to speakers in the backyard. He used a computer running an audio player for playlists and media files and wanted a way to, at least, pause and skip to the next track from out in the backyard. I wrapped the dbus interface that the audacious player puts up in a simple html player interface with wsgiref. It more or less reproduces the player control panel and playlist on any tablet or smart phone, so my friend can pause, adjust volume, scan through playlists and queue songs, etc. all from his cellphone while lazing out by the pool. https://pypi.python.org/pypi/audman/0.3.1 
How much data are you wanting to display? There used to be a saying in GIS that ‘Raster was Faster but Vector was Corrector’. It’s much less intensive to throw up a few 256*256 prerendered tiles than it is to render several thousand geometry features on the fly. You’re also going to need a way to store and serve your vectors locally- what’s your source? You might have some luck with cartopy or matplotlib, for a pure python implementation. If you’re storing a tile basemap locally with a few vectors draped over it, a web view might solve your problem. In which case leaflet.js can handle geojson like a dream, or openlayers if you have the time, energy, and need. All my GUIs these days are web interfaces, so I can’t comment on working with Kivy sorry! 
For Python 3.6 `OrderedDict` is internally implemented using `dict`, but that's an implementation detail. For Python 3.7 and beyond, `dict` ordering is official behavior. `OrderedDict` itself has been in the standard library for a long time. 
If you're familiar with react and angular for Javascript, angular is much like django and react is like flask. Angular has so much included in the core, where react requires add on modules for functionality.
Python is in this incomprehensible Yves Saint Laurent advert, I don't know what to think.
It could almost be titled "Python Top 10 Articles About Deep Learning". I'm sure there are other interesting articles out there about Python that don't involve Deep Learning, and I say that as someone who does deep learning for a living.
The big picture here is that now that getting ordered unique values is a one-liner. That's FANTASTIC (or just quite nice, depending on your ease of arousal for simplifying programming constructs :-)).
It's amazing how many companies depend on ETL processes that they run in cron or windows task scheduler and then they are surprised that these processes are hard to support operationally. To me something like Luigi or Airflow (or Oozie, I guess, if you're from the Hadoop world) is the bare minimum. But if you're looking for lower level than that, try apscheduler. 
Start with [Python Speed](https://wiki.python.org/moin/PythonSpeed) which at the bottom points to [Python Speed Performance Tips](https://wiki.python.org/moin/PythonSpeed/PerformanceTips).
The function can easily be extended in Python with something like:- def get_user_input(klass, msg): while True: try: return klass(input(f'{msg}: ')) except ValueError: print(f'Input must be an {type(klass)}, try again.') 
`OrderedDict` is just a wrapper for `dict` now, but does have one key difference. d1 = OrderedDict(a=1, b=2) # kw args order is now also preserved! d2 = OrderedDict(b=2, a=1) d1 == d2 # False dict(d1) == dict(d2) # True
Working on a 2d game library for Python called Arcade. Http://arcade.academy
Cool, thanks!
I agree.
Are other folks testing the program? I've done a couple of 100 generation runs (plus some 75 and 50's) and all I'm getting are flat horizontal result graphs with no indication of "learning" or "evolution". Am I incorrectly interpreting results?
Thanks for the reply! Ideally, topo maps with roads for several states/provinces at a time. The level of detail I'm looking for makes the raster file size huge! I was going to use one of the open street map sources initially. I'm using a touch screen display, it's basically a going to be a highly customized GPS app with a bunch of connectivity in the back end. I'll be sending telemetry via radio modem. That part I have working fine, it's just the vector situation that's making my head hurt right now. Would a web view be appropriate for that?
This site is one I use for Python for sharpening my skills. https://www.dataquest.io/
unfortunately, Python is slow at long int calculation. it's fast enough for most uses. but for cases where there is a lot of very long number calculation, libgmp wins way over Python. i don't know if another edition of Python uses libgmp or not. but, the Pike language does. Pike is an interpreted language much like Python is, but has a syntax more like C.
do you need to end up with the data resting in the local sqlite database? i am wondering if the data pulled from the enterprise data warehouse can be converted directly to the csv/excel formats for those reports. perhaps even better would be translating the report generators into Python and running them directly from the enterprise data warehouse.
Thanks for all the suggestions. I'm definitely getting frustrated and most of it is due to the current lengthy, unorganised processes I have with my company and current position. I cannot see myself even being able to automate the smallest task. I currently am manually typing up emails and attaching a PDF receipt to send as confirmation to guests. I guess I have visions of what the bigger picture would look like, but feel quite helpless on how to start. I want to sport data from many PDFs into a guest information and contact excel file, which is organised by date, so essentially runs as a calendar and inventory for our bookings. Keep this excel file as the database and keep exporting PDF data to it in the form of a new line with the guest name, age, and questions we require to group them in the right clinic or product.
Thank you
This is awesome, and a great blog post. Your code is beautifully commented, thanks. I just ran it, and got this output: GEN: 0 BEST: 161 AVG: 19.5 WORST: 150 I think this mean's something is wrong, because the average needs to be between the best and the worst fitness. Just a heads up. 
I have not thought of anything yet but sometimes when I'm going through the book, I go a bit off-topic and play with the code to see what happens. I think this helps me learn though. I was pretty stoked for this code here because for a second I could not figure out what to do but I recognized the error message and knew I needed to add the str() # 5-11 Ordinal Numbers ordinal_numbers = [1,2,3,4,5,6,7,8,9] for ordinal_number in ordinal_numbers: if ordinal_number == 1: print(str(ordinal_number) + "st") elif ordinal_number == 2: print(str(ordinal_number) + "nd") elif ordinal_number == 3: print(str(ordinal_number) + "rd") else: print(str(ordinal_number) + "th")
You must not have looked very hard. 
Isn't list append meant to be faster than appending to a np.array?
My English is rubbish. I can't understand anything. 
unfortunately yes. there is other data that i need to join to the data from the edw in order to get the final report. ofc it'd be best if that data was in the edw but it is only transaction data, no item information
I think Python's biggest use now is in deep learning, but I agree I also want to see other topics about Python. Interestingly, they actually have [another post more focused on deep learning](https://medium.mybridge.co/machine-learning-top-10-articles-for-the-past-month-v-dec-2017-82883b8062f5)
Cron jobs are absolutely fine for a huge number of applications. Don't discount the operational cost of running airflow/Luigi etc.
This is nice... 
They guarantee it only for very specific cases, one of those being kwargs dict. But yeah right now in CPython, the implementation makes it so that all dict are, but the specification only requires it for those specific places.
What was the point of showing all those crazy complicated implementation if they were all inferior? It's nice to see though that the simple pythonic implementation is also the fastest, but yeah I felt like I wasted way too much time understanding those functions only to find out they were entirely useless.
Hey that's really cool! They'll probably like this in /r/ethdev as well! Many starters there I think.
Not a single article about web development. I find it awkward
/r/learnpython
Thanks
You're better off using lists by a factor of ~2x if you don't learn how to vectorize your code with numpy. Numpy is ~500x faster once you do.
I doubt you can get that. What are you trying to achieve? May be there is a way to do that without requiring the direct video url.
no way
The book Learn Python the Hardway is not free so i can not comment on it. If you don't feel comfortable with python there also plenty of free resources availabe. The relevant section from the official python tutorial: [Reading and Writing Files](https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files) The documenation of the open() function: [open()](https://docs.python.org/3/library/functions.html#open) I also don't understand why you would need the [pydoc module](https://docs.python.org/3/library/pydoc.html) You can access the python help from the interpreter prompt via help(). &gt;&gt;&gt; help(open) or &gt;&gt;&gt; help() &gt;&gt;&gt; open &gt;&gt;&gt; quit 
I’d definitely pull down a copy of the area you’re looking at mapping and checking the size. Vector map tiles are a bit of a pain to generate (a great overview by an OpenStreetMap dev from October this year: https://m.youtube.com/watch?v=savQWL0kq_g ). I suspect cartopy will do what you want, it wraps matplotlib and other useful libraries like shapely. Webview might be a lot of overhead. If you absolutely need slippy tiles, something like Mapnik will let you render tiles on the fly. Good luck! 
No way what? Usually the video links are dynamically generated and will not be valid after a session. Even if you get the direct video URL, it will not be useful or usable for long. 
-g will get the direct url of the video youtube-dl -g https://www.youtube.com/watch?v=tXcgt6l_LcA But most newer videos use a playlist of 100s of small files that the player download and streams together to make up the full video. Older videos may still have a single video file though.
&gt;Never loop over a numpy array or use an if statement Unless you use numba. In some cases it's quite difficult to vectorize some operations, so using numba might be a good alternative.
Why the isX function names instead of is_X ? Also, ``isurl`` seems to check for specific protocols and by definition, the url has the generic format ``scheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]`` (https://en.wikipedia.org/wiki/URL#Syntax) . Everything seems to be based on regex, which, in my opinion makes the whole library less maintainable and more convoluted. There must be easier methods to check if a string represents a mime-type (split by "/" and work your way from there). Cheers and a Merry Christmas!
So if i've never heard of vectorizing code, where could i start learning about it?
Note, LPtHW is not a recommended resource for learning Python. It's extremely arbitrary and contains much that is misleading or simply wrong. There are plenty of better ways to learn - see one list [here](https://sopython.com/wiki/What_tutorial_should_I_read%3F).
To show they were not as quick for anyone interested. Personally, I skipped to the bottom :) 
In 3.7 this is no longer true and it will be guaranteed more generally. 
Feel free to help me with https://github.com/wemake-services/wemake-django-template or https://github.com/wemake-services/wemake-vue-template I have also looking for a project maintainer for `git-secret`: https://github.com/sobolevn/git-secret/issues/100
As long as you know what your binary structure looks like, you probably want to define this structure using ctypes https://docs.python.org/3.6/library/ctypes.html and then just read in your file using readinto. Example: from ctypes import * class Point(Structure): _fields_ = [ ('x',c_double), ('y',c_double), ('z',c_double) ] g = open("foo","rb") q = Point() g.readinto(q) The existence of the methods you describe would probably lead to a lot more primitive, brittle code.
F7 is the clearest way to go. If the ordering is important, then one should consider a duplicate check at the creation time imho. 
I agree with you that these methods should be avoided. However some file formats use a lot of conditions. So it is hard to define fixed data structures beforehand. In these cases I end up copy&amp;pasting the same code snippets again and again and also encountered various flavors in other packages. Hence i think these should be present in the standard library. Most other major programming languages/frameworks do provide them to. (Given not all of them are as flexibel as python) Btw. i like that the ctypes module easily associates the fields with some names which is also missing from the struct module. (you might use tuple unpacking instead).
Dictionaries are incredibly fast for lookups - and don’t get significantly slower as they get larger.
File reading and writing offers only one commonly a accepted and widely needed included parsing facility: text files! That's some kind of comfort, but imho the only needed one. All other parsings should be built upon that, like CSV, json, xaml, toml or whatever. The same is true for binary formats like XML, all kind of pictures, music, video, DLLs and stuff like that. I don't get the potential advantage you get by your proposal? 
I am just currently on my first project (that will be a production app) which is a full website in Flask/Python/MongoDB. Almost done! Yeah!
As far as I can tell, they were the state of things until fromkeys just recently (3.7) simplified things? 
thx it returns 2 urls, why?
&gt; May be there is a way no way &gt; for long where did I say that I needed it for a long time?
One tiny remark: in Norway we often write mobile numbers with spaces like +47 4## ## ###, but that format fails your tests. Otherwise an interesting library :)
That's what we're here for. Explain to us your project and what it needs to do and we can help by showing you how each of us would break the problem down in our own way.
I don't think that such operations merit such language changes. Better to use a dedicated library and not pollute the name space. I should add that I have written bit level generators and transformers of binary file formats for CPUs, as well as bit level interfaces to experiments in noisy environments - all in Python. 
What are the urls? I'm on mobile so can't check right now but usually there's a video file that contains a list of all the video part urls and a file with all the audio part urls.
Why is this function not part of the standard library? Matlab has [unique](https://www.mathworks.com/help/matlab/ref/unique.html), [union](https://www.mathworks.com/help/matlab/ref/union.html), [setxor](https://www.mathworks.com/help/matlab/ref/setxor.html), and [intersect](https://www.mathworks.com/help/matlab/ref/intersect.html) as part of the main library and when dealing with 'lists'. You'd think making a unique list was something done enough to warrant not having to do an hack like this.
I saw an article like this before and used f3() in one of my scripts. I guess I should change to f7(). Thanks!
`set` is basically the native unhacky way to do it, even if it's not the most efficient. But the unofficial standard is to use the numpy library, which basically gives us all that matlab stuff. 
How do these compare with numpy?
Currently supports pushover, simplepush, slack, email, gmail, telegram, gitter, pushbullet, join, hipchat
Python strings already have isdigit, isdecimal, isalpha etc.
Keep us updated. This is a pretty cool idea.
It would probably be simple to write a module, maybe some wrapper around a file object, that then provides the methods you are asking for. But i do have the gut feeling that there should be a more elegant solution to your problem (file formats with lots of conditions). Do you have some form of type or message format index, that you can read first?
I've got 15 years experience in Python, so not interested in the book for learn the language... Instead, I'm interested in learning to make art. Just a different perspective, but perhaps one worth considering as you develop the text.
 $ youtube-dl -g https://www.youtube.com/watch?v=Rr8ljRgcJNM https://r4---sn-a5vuxa-8uxl.googlevideo.com/videoplayback?sparams=aitags%2Cclen%2Cdur%2Cei%2Cgir%2Cid%2Cinitcwndbps%2Cip%2Cipbits%2Citag%2Ckeepalive%2Clmt%2Cmime%2Cmm%2Cmn%2Cms%2Cmv%2Cpcm2cms%2Cpl%2Crequiressl%2Csource%2Cexpire&amp;ipbits=0&amp;expire=1514146734&amp;lmt=1500580433669668&amp;initcwndbps=183750&amp;source=youtube&amp;ms=au&amp;mt=1514125061&amp;mv=m&amp;id=o-APTRR51HPL2YJELIhezPjI5BIuVa9jLk7FIR2-j5hkrC&amp;requiressl=yes&amp;dur=258.216&amp;mm=31&amp;mn=sn-a5vuxa-8uxl&amp;pl=24&amp;ei=Trc_WvRJxeGgA6_hhLgJ&amp;aitags=133%2C134%2C135%2C136%2C137%2C160%2C242%2C243%2C244%2C247%2C248%2C278&amp;mime=video%2Fwebm&amp;itag=248&amp;key=yt6&amp;pcm2cms=yes&amp;ip=115.84.94.102&amp;gir=yes&amp;clen=90187297&amp;keepalive=yes&amp;signature=7F6F8D39E5D9AEED8FE7C6C4F1CA12915C5020A2.2128A414CF380350004EC8204B8A07A29E46BD9B&amp;ratebypass=yes https://r4---sn-a5vuxa-8uxl.googlevideo.com/videoplayback?sparams=clen%2Cdur%2Cei%2Cgir%2Cid%2Cinitcwndbps%2Cip%2Cipbits%2Citag%2Ckeepalive%2Clmt%2Cmime%2Cmm%2Cmn%2Cms%2Cmv%2Cpcm2cms%2Cpl%2Crequiressl%2Csource%2Cexpire&amp;ipbits=0&amp;expire=1514146734&amp;lmt=1500580165983820&amp;initcwndbps=183750&amp;source=youtube&amp;ms=au&amp;mt=1514125061&amp;mv=m&amp;id=o-APTRR51HPL2YJELIhezPjI5BIuVa9jLk7FIR2-j5hkrC&amp;requiressl=yes&amp;dur=258.281&amp;mm=31&amp;mn=sn-a5vuxa-8uxl&amp;pl=24&amp;ei=Trc_WvRJxeGgA6_hhLgJ&amp;mime=audio%2Fwebm&amp;itag=251&amp;key=yt6&amp;pcm2cms=yes&amp;ip=115.84.94.102&amp;gir=yes&amp;clen=4059447&amp;keepalive=yes&amp;signature=28AA03F3C4FEBCEAAFA13850E17423A66065A0F7.5014B1D56E6F4730BEC816FA291C8CB91260228C&amp;ratebypass=yes 
Does [construct](https://github.com/construct/construct) do what you're looking for? It's declarative but seems to include branching logic, etc.
It really grinds my gears when websites don't let me enter my phone number chunked. Stripping whitespace is a trivial operation.
Thanks for sharing...Please do you have any course on Udemy.
Am working with SQLite using Python sqlite3 module. am learning a lot and I hope to share what I have learnt one day to my fellow redditors.
Fair enough. Could you point me in the right direction for how they can be used in conjunction? Thanks again!
Hey! No courses yet, but it's in the works for 2018. In the meantime, there will be more creative stuff on the site for free, without ads. Current projects in the works are a computer to communicate with birds, and a dance controlled instrument!
If you want to learn more about making art with Python, following along on my blog is probably your best bet. I've also got another blog where I posted a few, older projects, like [using machine learning to generate terrible products](http://www.kpkaiser.com/machine-learning/training-neural-networks-to-generate-crappy-amazon-products/), or [swapping faces](http://www.kpkaiser.com/programming/the-mostly-newbies-guide-to-automatically-swapping-faces-in-video/), or [plant controlled robot bongos](http://www.kpkaiser.com/programming/plant-controlled-robot-bongos/). My projects are all mostly open source, and tend to talk about the thought process behind it. If you've got any suggestions, I'd love to hear it!
Thank you!
keep up the awesome work.... I will try and be following up with your blog.
I took interest of this question: &gt;Why does (1 == 2 != 3) evaluate to False in Python? I found operator precedence a bit difficult when I was learning Matlab. If you are not careful, you can end up with wrong results to work with. 
Tl;Dr `list(set(sequence))`
Wow! This is really what I needed! :) 
+1 for Python 3 only! Resist the urge to backport: it's good to have nice packages like this encouraging those who can to upgrade.
Trying to figure out urwid for a scanning app at work. 
Most new code is Python 3 only, but sure. 
&gt; set-on-set operations Whoa there pal, there's kids on this sub.
Good job! :-)
How about [gmpy 1.17](https://pypi.python.org/pypi/gmpy/1.17) or [gmpy2 2.1.0a1](https://pypi.python.org/pypi/gmpy2/2.1.0a1)?
I hope everything works out for you.Stay focused and you'll get out of this situation.
It's nice that the simplest way is also the fastest, assuming you don't need order 
Really amazing. I'm inspired to try it out and work on something similar! 
Thank you so much.
The link seems to be broken, is this the correct one? * https://nbviewer.jupyter.org/github/vlad17/np-learn/blob/master/presentation.ipynb 
Hmmmm. Makes me want to try and develop an aio version.
Writing my first flask app. It is for a interview. Have to return Fibonacci numbers via rest api. Then describe / show how to support it for 5 years via ci/cd etc...
Will delete this post and resubmit with this link. Thanks!
No problem!
Thanks for the feedback and considering this a nice package :-) I'm 99% sure that even there was some demand for a python 2 version I wouldn't have the time to do it anyway... 
Thanks :-) 
Awesome! Feel free to report back on how you used it, I'd love to add a testimonials section 
I'd move that way up in the readme, in the #2 slot after "what to this is". There's lots of info of parameters, json, etc, but as a new person none of that matters till I see the supported list. Very cool library. I most definitely will try to use this soon in a project. 
I created a Twitter bot which replies with a download link whenever someone mentions it with a movie name. 
Thanks, that's great feedback ! I'll definitely move the list higher in the Readme! 
This issue is now resolved. Thank you for your assistance. 
Yeah, they're basically text files that contain a list of urls where the video and audio parts are located. The first one is for video and the second one is for audio.
I have, it's easily 100gb plus in raster format. Thanks for your help, I'll look into cartopy and mapnik!
Very useful library. Thank you.
[yagmail](https://github.com/kootenpv/yagmail)
&gt;We note some familiar special cases: &gt; &gt; - N = 0, we have a scalar, or the datatype itself &gt; - N = 1, we have a classical_array &gt; - N = 2, we have a matrix I object to this phrasing. Numpy has a matrix data type, and it's not just an array of dimension 2. I've seen a bunch of confusion elsewhere about what a matrix is vs a 2D array, and statements like this don't help.
Because this scenario is so simple (turn left/right), it really doesn't take that long to get near the optimal solution. Most improvement occurs within the first 10 generations... 
Holy shit, thanks! Also, I didn't now you could tip using BCH?? Can't wait to start doing this now!
Thanks! That verifies my observations. I did have one iteration that took 17 generations to reach optimum.
This sounds like an XY problem.
As mentioned further down, the np.matrix object is for backward compatibility and shouldn't be used.
This is really good. The author did a very nice job going through everything. I had never heard of einsum, which looks super fancy.
So um, how much ram does your machine have/how much does this usually consume creating the plots of the generations? Looking into how to close these things after generation to give back ram. Chewed through 15 gigs of ram on my system before hanging it up.
Use numpy.where and numpy.searchsorted as much as you can. Also google "numpy vectorize". Stay away fro numpy.vectorize, since it's not what you'd think; it's not actually fast.
Some are hard to vectorize, but you get better over time. Numba also has a serious learning curve as well. @autojit is far from perfect and typically doesn't play well with numpy. numpy.tensordot is a mess of a function; it's one of the more complex functions in numpy, but it is incredibly fast.
*Most* ways to make code faster are non-obvious until you've profiled.
Nevertheless, I think it's worth being explicit that a 2D array is not a matrix - just that it can be treated as one when certain methods are applied.
`np.matrix` is basically dead. Just forget it exists.
 After the line: plt.savefig(str(gen)+'-'+str(time)+'.png', dpi=100) Add the line: plt.close(fig) #closes the figure and returns memory Before the line: ## plt.show() With the default code this is between line 104 and 105.
For sure! Here, have some more and spread the cheer &lt;3 $2.00 u/tippr
u/BarkingPizza, you've received `0.00069098 BCH ($2 USD)`! *** [^^How to use](https://np.reddit.com/r/tippr/wiki/index) ^^| [^^What is Bitcoin Cash?](https://learnbitcoin.cash/) ^^| [^^Who accepts it?](https://acceptbitcoin.cash) ^^| ^^Powered ^^by ^^[Rocketr](https://rocketr.net) ^^| ^^r/tippr ^(Bitcoin Cash is what Bitcoin should be. Ask about it on r/btc)
Pick a project. Do it.
Would it be possible to support Python 3.5? (the version of python 3 available in the stable version of Debian)
There are a ton of resources here: https://www.reddit.com/r/learnpython/wiki/index A lot of people, myself included, recommend the [free MIT Python course](https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-11) as a great starting point. You learn the basics of the language and you get to build a few games. I also think coding challenges are a great exercise. There are a few websites around [Pybites](https://pybit.es/pages/challenges.html), [Codewars](https://www.codewars.com/?language=python) (haven't tried this one personally). Ultimately the best way to learn will be to focus on what you want to do with Python -- and then do that. Do you want to build a website, an app, scripts to automate work? Do you want to focus on software, data science, or machine learning? It's pretty overwhelming to try to learn "Python" because it has so many different applications. If you have specific goals, it will be much easier for people to point you to the best resources.
jesus take the wheel with all those loops...
What about for linear algebra?
Always use `np.array`. If you need to multiply them, use the `@` operator.
I would have added `...` and `np.newaxis` to the section on advanced indexing. I use those a lot. 
There's an app called SoloLearn that teaches programming languages. They also have courses, exercises, and challenges you can play against others to test your skills. This app taught me Python and I definitely recommend it for anyone else starting out.
i use python 2.7 because most of the documentation i find for the tasks i have to stackoverflow tend to be from 2.7 examples. 
Wouldn't it be slower, though? That's one thing that's stopped me from using it.
YESSSSSSS!!!
Posted: https://www.reddit.com/r/Python/comments/7lb4t2/evolving_simple_organisms_using_a_genetic/ https://www.reddit.com/r/LCfP/comments/7lddda/evolving_simple_organisms_using_a_genetic/ 
it just sounds so
agree 100%. find something interesting to do WITH Python and the coding wont be an issue
You mean "sio" (sans-io) ;)
is "-g" and "--get-url" the same?
some videos return more than 2 files, 5-10, why?
How long you been learning python from that app?
The past several months. It took me about a month or so to complete the python course, but I still use the app daily to repeat lessons and occasionally do challenges.
Hmmm thanks man. I was asking because I don't have a computer yet and wanted to practice or at least learn the basics. Have you tried to actually practice to write some code of your own on your phone?
Yeah you can write your own code on the app too. (Though I mainly use it on my tablet to preserve my phone's battery life.)
What are you using to do it on your tablet?
Thanks for the reply - I haven't used virtual environments in the past and I think that was the source of a lot of my headaches. I'll be sure to utilize them this time around. It looks like 2.7 came installed on the new Mac, unfortunately. I'll have to grab python3.# from python.org or homebrew.
The app itself. It's installed on both my tablet and my phone.
Thanks for the advice. I'll look into getting python 3 from homebrew and will be sure to utilize virtual environments this time around.
Okay thanks I'll check it out 
No problem. Good luck!
This is very helpful - thank you. I'm going to look into miniconda and see what it is like. I've just briefly looked into it but it seems like a good way to get a system in place to manage virtual environments and install packages into them as needed.
&gt; To everything - churn, churn, churn &gt; &gt; There is a season - churn, churn, churn &gt; &gt; And a time to every purpose under heaven
Congratulations, you have found the worst reason for using Python 2. 
This looks good. What do you need help with. Got some spare time.
Review the core libraries.
Well, you just need to read one article, to understand 80% of the difference between Python 2 and 3.
as a math major quite pleasantly surprised with...thank you!
I’d make this my go to library if it had mobile push notifications and SMS/hangouts/iMessage. 
I took inspiration for function name from Python's built-in string methods like "isalpha", "isalnum" etc. I thought it would be more Pythonic than with underscore.
I don't really think there's anything in Python that needs to be "changed ASAP" (or at least not in 3). There's a lot of cruft in the standard library that's badly designed, unmaintained or both (see: `urllib` versus `requests`, `datetime` versus `Arrow` or `Pendulum` or whatever is in fashion now, etc.), but can't be cleaned up due to backwards compatibility concerns - I'd love to see a big cleanup pass on the standard library to at the very least deprecate things that are effectively dead, and maybe rework some of the uglier APIs, but that's _a lot_ of work for no immediate gain. Also, the GIL is still there and still somewhat frustrating to deal with sometimes, but PEP554 should do a lot to alleviate that pain if it's accepted.
well according to the statics im not alone
Nice!
thanks for the suggestion! at this point I think additional providers would be nice. I haven't got around to forming formal dev docs though, but I tried keeping the code base as clean and obvious as possible (duh) 
Sure thing, glad you like it :-)
I'm sorry, making older versions (&lt;3.6) is not planned at this point
I would have like to have seen all the non-PEP8 names cleared up in py3, with the old names still in there as wrappers with deprecation warnings. It's annoying trying to explain to someone why they should use `snake_case` and why `logging` isn't a good counterargument.
I honestly don't think just batch renaming stuff without fixing the APIs is good enough. You'll still have to explain all the API warts. 
I found (I am still on my first app that will be deployed soon) - I tried to just jump in and try my first app following how to build blah tutorials but got lost quickly. What helped was to do a basic Python Basics Course first from A to Z. I actually did three - but I am a slow learner... Then I decided what I wanted to build - in my case a chatbot, website and E-Commerce store on the same app. I chose (for my example) Flask to develop the actual website and then MongoDB as the database. So I did as much as I could with straight python. Got lost and confused. And then did Flask tutorials (a few) on YouTube that ended up helping me find my way. Then I did Mongo specific tutorials also from YouTube. I only have a front end web dev background. So I know HTML, CSS, PHP (some) and JavaScript well enough to earn a living. But python was new to me. The advice to build stuff is relatively correct. There are different groups - like 100daysofcode for python that you can look up and they have daily code projects which are very cool. So find something you want to build and just start with whatever knowledge you need. Github is an impressive tool and you would want to do a minimum of their tutorials after you have something working to then measure progress. Good luck. 
I'll be getting a Mac for work. That will be one of the first things I do.
There is a library for csv: https://docs.python.org/2/library/csv.html See the examples there!
😶 my life has been a lie. Never knew about that
&gt;For Python 3.6 `OrderedDict` is internally implemented using `dict` That isn't true at all. They are still LinkedList based.
Pretty sure it is. 
OrderedDict is *not* a wrapper for dict. The implementations are different. OrderedDict still uses LinkedLists.
Well I checked and under the hood they are still but as far as public APIs go, they are exactly the same (except for the difference I mentioned). There is no reason for OrderedDict still to be written like this You could literally go into collections, delete all of `OrderedDict` (and `from _collections import OrderedDict`), replace it with class OrderedDict(dict): def __repr__(self): return f'{self.__class__.__name__}({list(self.items())})' def __eq__(self, other): return tuple(self.items()) == tuple(other.items()) and everything will work perfectly! :) https://mail.python.org/pipermail/python-dev/2017-December/151283.html
I use it to calculate covariance matrices over a very large stack of arrays. It was the fastest approach I could find without resorting to cython or numba. 
&gt;Build to Learn in Python Your title here is different from your blog post. 
Looks like it's [reasonably new](https://www.python.org/dev/peps/pep-0465/).
I think my best post is when AI Sweigart made his Automate the boring stuff Udemy course free on cyber monday... I learned a lot from his tutorial.
Congratulations, you have found the second worst reason for using Python 2. 
Hi, It was a sort of a description of the blog post. Not meant to mislead or anything
next time describe your post with an adequate title.
The reason I personally think it's a bad idea is because GUIs are _extremely_ complicated and fiddly, and there is basically no way to make a GUI that's both simple to work with and simple to understand. A GUI application - any GUI application - is extremely stateful, and keeping track of all the state and how it impacts the flow of the program will be overwhelming for most new learners. Working with GUIs also requires you to understand stuff like threading, because you can't just have your program wait for a long calculation or a network request without spawning a second thread or softlocking your GUI.
What is what we are looking at?
does other tools check the full connection to setup ? how do you mesure the time spent by the different tools ?
Ok thanks for the reply! I agree basics come first! I guess having a small background on C way way back in college made me understand the whole thing easier. Anyways I plan to create a POS to our company. Can Python do it? What else should I learn? How do integrate my excel pricelist to Python? 
Yes, Python can absolutely do it. Look into Pandas or OpenPyxl for loading Excel spreadsheets into Python. Learn legal stuff because POS software is regulated in many places.
Handling the files was not that much easier ever before.....see how cloudyrathor explain the file handling in python in the easiest way.
I live the Philippines there is NO regulations lol! 
It exists for the sole purpose of being faster.
Why did you use python 2.7 for the tutorial?
This is actually the way I learned programming in school. We programmed in Delphi, an IDE based on an OO pascal dialect. The Language is Eventdriven so you first build the GUI and then programm based on e.g. click events. This was a pretty common way of learning programming in my generation in germany. I think for beginners this is a nice way to get into programming, because you have objects (GUI-window, buttons, labels,...) and you can directly manipulate them and try stuff and instantly see the results. Nowerdays I think Javascript is a modern alternative, beacuse you can manipulate the DOM. But I think Pascal is a better language to start with (its more strict).
This is not the sort of thing Python is good for, being an interpreted language.
I'm not very familiar with OpenGL but I suppose `on_draw` is called on every frame draw. So on every frame you're appending to list one particle so the list of particles is expanding very fast and you're not deleting dead particles so every `for` loop over `self.particles` is being slower and slower as list gets bigger and bigger. EDIT: You're modifying list you iterate over, you shouldn't do that as I leads to unexpected behaviour.
What do you mean, using OpenGL? In most cases language you're using for OpenGL application makes no difference.
I'd personally say this is a terrible idea. Why? Because there are a great many complexities to GUI programming, and to minimize them you have to use a GUI framework. This is a twofold problem; the first is it means you pretty much immediately need to install external dependencies (except Tkinter, unless you're on one of the Linux distributions that doesn't bundle it with Python), and the second is, well, *none* of the existing options is a good example of Python's virtues, and to be blunt I'd say they're all pretty good examples of exactly how not to build anything whatsoever in Python *except* a generalized GUI framework. For instance you basically cannot make a PyQt GUI that will pass PyLint with a score greater than around 4/10. Not a thing in it resembles PEP8, and lots of its examples and tutorials encourage terribly bad habits like star imports (in PyQt4 several of the official docs used to necessarily lead to overloading Python's **hex** function). Learning to do front end code is important, but people who start cramming together GUIs without first learning how to build maintainable backend business logic tend to develop bad habits that carry on with them for years. Like carrying and mutating state, relying on multiple inheritance, and generally engaging in the violence of camelCase.
This a guess cause I haven’t worked with pyglet before. The way OpenGL works is it does computations on vectors. The reason it should allow for speed ups is because your gpu can independently do computations on the vectors’ different dimensions. I’m pretty sure what you are doing wrong is you are not sending the values of all the particles to the gpu at the same time, you are instead having it do it one by one, which pretty much defeats the purpose of using the gpu. You need to figure out a way to send the positions/velocities of all the particles to the gpu at the same time, so the gpu can do its magic over everything at once.
Every frame involves running some Python code to run the simulation. That's going to be slow independent of how it's rendered.
You’re wrong
Only if you are a masochist 
import csv 
import csv 
Python can do it and so can (nearly) every other language. I don't like doing gui stuff in python but for data manipulation python is one of the best. 
Make sure that you specify the exact version of each library you need in your requirements.txt You can start you dev virtual env and do pip freeze &gt; requirements.txt to create a file. They should match after that. 
There is definitely value in using wireframing and mock-up tools to design a gui before you start programming. Is that what you’re referring to?
Great work! 
Pyglet does have a specific group for particles, but I can't seem to find it at the moment. I recommend adding each image to a Group, and drawing the group. This will *dramatically* increase framerates. 
Sadly when it comes to data entry a gui is necessary! 
Its not impossible to do gui things in python, i just haven't found a gui-library that i like to use. But a lot of ppl. do gui's for python applications.
Isnt it a sprite group or something? I'm thinking of the arcade library though.
Python isnt good for 3D stuff especially, but simple-enough 2D projects shouldn't be *that* bad. Saying that I dont know exactly what OP is animating apart from their description.
What I hear you saying - use in dev the conda python, but install libraries only from pip. 
I'm really not, since CPython is *interpreted* as opposed to just in time compiled. The rule of thumb is that your tight loops shouldn't be in Python (but rather in NumPy, for instance). I suspect PyPy might give a significant speed up here, assuming the OpenGL bindings work on it.
That's not how this works. That's not how any of this works. But seriously checkout VisPy or pyqtgraph or just plain pyopengl. If you send the right things to the GPU and write your shaders well most things arent an issue.
Ok got it! So your saying doing GUi w/ Python is a waste of time??? I think having gui is important! 
ok, no problem, thx :-)
You already have a list, one dimension array. If you want to make it two dimeensional then change particular string element into for example two-tuple. Btw, `for i in range(len(myFileList)):` is a bad practice, use `for i, elem in enumerate(myFileList):`. So you'd do: for i, elem in enumerate(myFileList[:]): myFileList[i] = (readlength(myFileList[i],myPath), elem) P.S. why converting length to string?
Use batch drawing for your particles so you don't need to use a loop: http://pyglet.readthedocs.io/en/pyglet-1.3-maintenance/programming_guide/graphics.html#batched-rendering
I used to do my first development on system installed conda but move on to docker/python image as soon as I get closer to needing to deploy the app... I have not had enormous problems with moving from one to another with packages that are on conda or pip. After moving to official python docker image I only use that however... Recently I have started developing my projects using jupyter datascience docker images... They are based on conda and have all the scientific librarys but are extremely large. Later I will simply replace the base image in dockerfile to official python, tweak the dockerfile commands to use pip and see if the tests work (I always write regression tests before that).
this is the code i am using with python import sys import socket import time import signal import datetime from timeit import default_timer as timer class TcpInitTest: """docstring for .""" def __init__(self, TestHost, TestPort, PingMaxCountN=3, PingCountN=0,DslSend=''): self.PingPassed = 0 self.PingFailed = 0 self.TestHost = TestHost self.TestPort = TestPort self.PingCountN = PingCountN self.DslSend = DslSend self.PingMaxCountN = PingMaxCountN def getResults(self): """ Summarize Results """ lRate = 0 if self.PingFailed != 0: lRate = self.PingFailed / (self.PingCountN) * 100 lRate = "%.2f" % lRate print("\nTCP Ping Results: Connections (Total/Pass/Fail): [{:}/{:}/{:}] \ (Failed: {:}%)".format((self.PingCountN), self.PingPassed, self.PingFailed, str(lRate))) def TcpPortPing(self): while self.PingCountN &lt; self.PingMaxCountN: # Increment Counter self.PingCountN += 1 success = False # New Socket s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # 1sec Timeout s.settimeout(1) # Start a timer s_start = datetime.datetime.now() print(s_start) # Try to Connect try: s.connect((self.TestHost, int(self.TestPort))) s.shutdown(socket.SHUT_RDWR) s.close() s_stop = datetime.datetime.now() #s.shutdown(socket.SHUT_RD) #s.close() success = True # Connection Timed Out except socket.timeout: print("Connection timed out!") failed += 1 except OSError as e: print("OS Error:", e) failed += 1 # Stop Timer #s_stop = datetime.datetime.now() #s_runtime = "%.4f" % (1000 * (s_stop - s_start)) s_runtime = s_stop - s_start duration_sec = float(s_runtime.seconds * 1000) duration_ms = float(s_runtime.microseconds / 1000) print(duration_ms) if success: print("Connected to %s[%s]: tcp_seq=%s time=%s ms" % (self.TestHost, self.TestPort, (self.PingCountN - 1), s_runtime)) self.PingPassed += 1 # Sleep for 1sec if self.PingCountN &lt; self.PingMaxCountN: time.sleep(1) # Output Results if maxCount reached #getResults() ping_test = TcpInitTest('192.168.1.26', 445, 5) ping_test.TcpPortPing() ping_test.getResults() 
Bad gateway m8
But what do you do w/ Python? I mean if its all command line? 
Thanks for your reply firstly, i had no idea what a tuple or two-tuple is, i will look for it. For your P.S. i was getting an error about strings and convertetions, i thougth changing length to str will solve itself :D 
&gt; I would have like to have seen all the non-PEP8 names cleared up in py3, Ah, another person who has read PEP 8 and failed to pay attention to the [**most important part of it**](https://www.python.org/dev/peps/pep-0008/#a-foolish-consistency-is-the-hobgoblin-of-little-minds).
I do a lot of these and you have to build your program and your GUI side by side. You run into problems if you emphasize one over the other. Having said that, I completely disagree with the sentiment that GUIs are extremely complicated and very hard to use. I use PyQt5 and design the GUI itself with Qt Designer and it is extremely easy to use. Integrating the GUI with the program can be a bit of a challenge the first time you do it, but thereafter its a cruise. Latency and threading issues might arise and they might not, depending upon what you are trying to do. But solving any such problem that might arise is well documented (using, for example, asynchronous co-routines). The latency issues arise from the fact that you are (usually) undertaking client/server io and not because you are using a GUI. I might add that GUIs are used heavily in finance APIs.
There aren't any. There are plenty of features which are mixed blessings -- like Python's extreme dynamism, which pretty much rules out or makes too painful lots of optimizations. But if I'm using Python, I've pretty much decided that I'm cool with the tradeoff faster development and a much more pleasant experience, versus slower runtime. I can think of lots of missing features that could be added, and even a few gotchas, warts, misfeatures and outright mistakes, but nothing so critical that they "must" be changed immediately.
It's simply referred to as Group, which should work with both Sprites and Images, as they both have image subclasses to be drawn. 
Practically nothing about Python in that, apart from the author wibbling that he doesn't understand a version and implementation dependent detail of which integers are cached. Why does the author care about cached ints and `is` anyway? `is` is not a synonym for `==` in Python, and you should never, ever use `is` unless you care about object identity. And apart from testing for `None`, if you think you need to care about object identity, 95% of the time you don't. 
only a example of docker-compose to a python user
Looking at the thumbnail. Python 2. 
Two-tuple is just a tuple with two elements in it. Tuple is like list, but you can't change its elements. For the example you could use a list with two elements instead, it doesn't matter.
But it's not a foolish consistency. Leaving it the way it is is foolish. A foolish consistency is when you make code worse to fit with a guideline - like making awkward line splits to come under the character limit, or using readable, slow solutions in a performance-critical setting. &gt; When applying the guideline would make the code less readable, even for someone who is used to reading code that follows this PEP. Nope, fixing the names would improve readability. &gt; To be consistent with surrounding code that also breaks it (maybe for historic reasons) -- although this is also an opportunity to clean up someone else's mess (in true XP style) Nope, keeping the legacy names creates inconsistency, and py3 was a chance to clean up someone else's mess. &gt;Because the code in question predates the introduction of the guideline and there is no other reason to be modifying that code. This is a stupid reason. Moving to py3 was an opportunity to break previous bad habits. Thay was the entire point of making API-breaking changes. This is exactly the sort of thing which should have been cleaned up. Also, by keeping the old names in for compatibility, we'd be giving people a good 20 years - literally a generation - to get used to it. &gt;When the code needs to remain compatible with older versions of Python that don't support the feature recommended by the style guide. It doesn't, because py3 isn't compatible for py2.
Anything. Literally.
Where can I go about learning the absolute basics and what program and tools are needed?
/r/learnpython/wiki
Don't do this. Build a new list.
Stop trying to introduce new people to python 2.
Excellent. I finally understood python decorators
Yeah modifying the list is probably it. That should be done after draw.
Masked arrays are irritating but `numpy.ma` has some great methods in it that can use boolean masks.
Yep. I didn't want to guide him to wrong path with that too, just to explain the functionality. But your remark stays.
I'll bet you could code a search engine to ask questions like this.
me and everyone else.
thx! merry christmas
No. You might notice the line where I said "learning to do front end code is important", it just shouldn't come first, at least not in a general programming language. Jumping straight to GUI coding means skipping over learning the majority of the language, the good habits required to write good, maintainable code in that language, and the majority of the standard tools and idioms that it provides you to write that code. The *user interface* is important ... the *graphical* user interface is less important, and typically uses a narrow subset of the language that wraps mid-level C/C++ libraries, usually in a deeply un-Pythonic way. Starting there means you're going to become deeply invested in a lot of habits that are very bad for you outside of the very limited area of GUI building. I ought to know, as I've only spent the better part of of a decade tearing apart, refactoring, and fixing terribly written Python by people who nevertheless did know how to make it *look* nice. So, no, nothing of my statement is reflected in your summary.
Other choices include: command-line, web development, programs that just talk to other programs.
Totally agree!
To be fair this is exactly how Donald Knuth describes modern programming, "gluing together slightly incompatible libraries" I think he said.
Before you code, be sure to check out the documentation.
It does NOT have to be that way. Eg Hypercard. Apple killed it because it made app development too easy.
Ok. 
Hypercard. Hypercard let non technical people slap together powerful apps with no effort. We had pythoncard at one point...
I heard about two guys that did it. 
Post the packet logs
HyperCard may have been "too easy" for basic things, but complex software in it required terrible hackery 
Timeout error is when a turn takes &gt; 2000ms. ... so it could be literally *anything* causing you to take that long your code. If you're following along with my series, then the code up to this point shouldn't be timing out, but could with enough ships. If you run it *locally* on a slower CPU, you might time out locally, but not when you upload. I did some work on my small laptop, and found I was timing out quite a bit. In general, it's going to be caused when you have more ships, since you'll run your logic loop per ship. The best thing you can do is order your logic to skip over logic you don't need. One option I've seen is setting the angle to 5 rather than 1 in the navigate function from the starter bot, but I didn't find this to be too useful. The other option is to be very aggressive with your ships so you don't just stack them up too much. 
I love people that complain about free code
His code is in the post. He's doing the simulation entirely in Python.
Everything may work perfectly, but ODict has some use cases where it is better than the built-in dict. It was intentionally chosen to be good at random inserts delete, and move to end. For example, ODict will almost never trigger O(n) compaction and resize on move to end. So there are algorithmic arguments to be made.
write your own libraries then
OpenGL is not written in Python. The only thing being executed in Python is the logic. All draw functions are handled by OpenGL. 
I know. I'm suggesting that it's the logic that's slow, not the drawing.
/r/learnpython http://www.catb.org/esr/faqs/smart-questions.html
You can use anything you like, just make sure that your prod and dev environments refer to the same versions of third party libraries. Personally i use conda but i know there is something weird going on with conda and pip libraries. The recommended thing to do now is to develop with pipenv, which handles pip, env and requirements in one package. pip install pipenv pipenv --three pipenv install numpy Now you have a clean python 3 env with numpy installed and a Pipfile which contains your numpy version. With docker you can recreate this easily
https://media.makeameme.org/created/hmm-well-played-2hgrfq.jpg
99% of the time, you just change the `print`s and `xrange`s and you're done.
I have tried changing the angular_max to 5 and max_corrections to 18 and adding a timer to it to try and stop. This fixed it but at a price of short circuiting my algorithm and causes me to lose score/ ship commands. I have also narrowed the culprits to the Navigate function and the send_commands. I have managed to speed up the send command with threading. You are sort of right about using a small computer, my code occasionally does time out on the server. I have followed your YouTube series but my code is completely different and relies on mass bots. The occasions it doesn't time out it does incredibly well and when it does it should have won. 
Isn't Python known for having the second biggest and best community? You sound like you got used to being spoiled.
I'll have to check this out.
&gt; binary formats like XML XML is plaintext.
See it in action here: https://asciinema.org/a/6911
A poor attempt to reply to https://www.reddit.com/r/Python/comments/7m0ut5/tcp_ping_time_measure_difference_from_other_tools/drqrdtn
Who let Trump create an account in reddit?
Is this something like blockfolio?
aww cmon, say you’re so much better then. I want to xpost to r/iamverysmart
I ran a Hypercard bbs for a while. I wrote tons of stacks. A bunch of hypertalk. Did an inventory system for my high school senior project. You didn't need to sacrifice any cats unless you wanted to write C extensions.
That's unlikely, because there's barely any logic.
Is this like cointracking?
&lt;°)))&gt;&lt;
That would only affect the runtime if you include the compilation time, but after that, once the program is compiled there won’t be much difference in speed. OP is is trying to increase his FPS which is doesn’t have much to do with compile time.
Awesome! From the screenshot it looks like a really elegant UI. I'm gonna give it a try right away! Thanks a bunch!
Why is for i in range (someObject) bad practice? 
Yeah, "fuk all you shit developers" basically does sum up Knuth.
Your error is somewhere else: W = 5 n = 4 assert [[0 for i in range(W+1)] for j in range(n+1)] == [[0 for i in range(W+1)] for j in range(n+1)] 
&gt; Why is for i in range (someObject) bad practice? It isn't. But `for i in range (len(someList))` just to fetch the list items in the loop (as he accessed `myFileList[i]`) is. Pythonic approach is always `for item in list` for such case, and if he needs a counter too then `for i, item in enumerate(someList)` is the way to go. 
Ah, OK thanks ;) 
Not because you're wrong or sg but that's a chart and a table.
*Well, anything besides a practical operating system.* But yes, **practically** anything. Pun not intended.
Deep learning, data manipulation, data collection, automating stupid tasks (way easier than using bash), REST APIs, web backends, and many more. Im not a big fan of GUIs and most of the time you don't actually need one and a CLI is faster to use. e.g when i designe Hardware and i want to know the Resistor available closest to 597.3Ω i just write: "./res.py 597.3 E96 1%" and it will output the closest Resistor in the E96 row to 597.3Ω and some links to digi-key with said resistors that have 1% tolerance. GUI applications make up maybe 1/10 of all the software written, probably even way less.
Could be wrong, but based on this [video](https://www.twitch.tv/videos/208949450) I think you need to implement a faster navigate function (which is very rough and ready and slow)!
(a) or use plain requests library.
/r/unixporn would love this 
it would definitely be good to know what's going on under the hood, especially if you are making a POS system. If it crashes, you are the support. That said, Glade3 follows the pattern you described: Drag and drop the GUI elements you want into the display window, and link it together with your code after the fact. I can't recommend it enough.
Yeah kind of, except it automatically calculates positions sizes etc. I believe you have to manually type them in on blockfolio? Or at least you used to. Maybe they upgraded.
I've done both approaches, with some variation (copy and pasted bundle of stateless utility functions to wrap requests works surprisingly well). Usually something like (b) is good for a while, then you accrue some tech debt if you're working on your services enough or their needs expand and you make a story to implement (a). If you're reasonable with encapsulation, that's not a hard process usually. I'd recommend going straight to (a) if you don't need to hit milestones fast and can take on the up front overhead, or if that overhead is super low; if you have junior engineers who will struggle and write a lot of bespoke interactions without an explicit client library; or if you don't feel your team has sufficient process to keep code clean and up to a certain standard. The good news is you probably can't fuck it up too bad. 
Agree with the previous comment: use (a) for [DRY](https://en.m.wikipedia.org/wiki/Don%27t_repeat_yourself) and [SRP](https://en.m.wikipedia.org/wiki/Single_responsibility_principle). [Warning: shameless self-promotion follows] For writing such clients in Python, you could use Uplink: https://github.com/prkumar/uplink. I started it to solve the same problem you are facing now.
Non-Mobile link: https://en.wikipedia.org/wiki/Don%27t_repeat_yourself *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^131544
Meanwhile, Google Apps Script can fetch quotes and update your spreadsheets asynchronously.
Yeah!
Ah, implementing knapsack, a totally normal and non-homework problem to solve. Yes, I can’t recall how many totally unrelated to school times I’ve had to solve that one. :-p
Multiplying a list by `n` gives you `n` references to that same underlying object. Using a list comprehension gives you a new list object every time. This person explains it in more detail: https://stackoverflow.com/a/240205 
On most basic level a class is a box where you keep your data (different variables and structures) and things you can do with it (functions) for example function invert for a decimal number will return 1/that number, whereas for a picture it will return a negative picture. Both functions can be called invert but you don't need to worry since you know that picture invert will be something entirely different than number.invert. 
Classes can be thought of as a group of attributes defining an object and a set of methods to manipulate those attributes. So if you have a data object with a number of methods to manipulate that object, it may be a good idea to put that code in a class and Instantiate that object. The most common textbook example is an Animal class. It has attributes defining the species, number of legs, eyes, etc. It then has methods to set those attributes, and can be used as a base class to extend a dog class. I hope this makes sense. I'm trying to explain while not totally ignoring family. Haha.
I see. But what I'm planning is to make a POS for my company. A graphical interface is important to me. Having to write down the code would be tedious just to access a data, instead of just clicking and flipping through tabs rather than put every entry. I think other coding language is more suited for this. I'll admit that Python is easier to code though. 
We really should ask ourselves why such a fear to adopt Python 3. One thing that could greatly help, would be to « unify » (to factorize) both of the python binaries, to avoid developers to fear pushing new binaries to their servers in production. I mean it would be great to simply call « python » for 2.7 and 3 as well, instead of calling « python3 ». Of course it means the interpreter would need to know the version somehow elsewere (in a commented line...)
If you’re smarter than these developers, then just fix their libraries ! It looks like you’re missing some methodology to analyse and debug software. Please ask a senior developper to assist you. 
Tried doing that for a while but if you're a trader, especially a day trader, it's not feasible to manually keep that spreadsheet updated. Especially if you trade multiple exchanges!
Classes are a great way to store lots of information about an object that you can manipulate. As an example, I wrote a maze generation algorithm a while back, which worked by making a grid of cells in the window and removing walls between unvisited cells. In order to do that, I needed to know a) whether each cell had been visited and b) what walls it had available to remove. The easiest way to do that was with a class. So, I made a cell class and then created an instance of that class for each cell and added them to a list. While I could have used a dictionary for each cell, it is much less readable, much more long-winded and much more awkward to change should I need to. Tl;dr classes are great for when you need to store lots of information about something in your code, and especially great if you have lots of instances of that something. Hope this helps
Interesting. I am sorry - haven't looked through code yet. How do you handle multiple exchange APIs? How many you wrote wrappers for already? And is there a recommended way to add a new one? I started writing something similar myself after I did one for Robinhood for stock trading. Yours look like it has a nice GUI already, so I might just add some calculations. Might even come up with some PRs if you are interested to accept.
If you're into gaming, this [oop tutorial](https://inventwithpython.com/blog/2014/12/02/why-is-object-oriented-programming-useful-with-a-role-playing-game-example/) may have the tricks for you
Currently the code supports three exchange APIs but it's pretty easy to add new ones. I'll probably add Binance and Bitfinex soon. For multi-exchange positions, all you need to do is get the balances of the account. Once you have the balances you can load them into a Token class I created that can be combined with other Token objects of the same kind (if you have the same coin on multiple exchanges for example). The balances are summed up and then displayed. Daily/Weekly pricing information comes from Coinmarketcap.
you can replace np.newaxis by None. Same behaviour.
Think about some functions you wrote recently. If a few functions need to share information or state (as in, variables), how do they do it? - do you define some variables in main (or wherever), and pass them in as parameters? Are there a few variables that tend to get passed around to and/or returned from a few different functions? - do you have some global variables that a few different functions all use and manipulate? - do you keep track of multiple copies of the same kind of thing in your program by using multiple parallel arrays* (array of all sizes, array of all colors, etc) or arrays of dictionaries, which you end up having to pass around to a few different functions? All of these can be code smells, and your code may be improved by explicitly bundling those few functions together with the state they manipulate. That’s what a class is. Not everything should be in a class, and python is great because it gives us a way to bundle functions (in a package) without also putting them in classes. Of course, figuring out when to use a class is sometimes not so simple. Most programmers, through lots of trial and error, build up experience that they can draw on when it comes time to make design decisions. One way to get better is simply to 1) code more and 2) pay close attention to when code you write turns out to be particularly fragile or hard to change. All the design patterns stuff you may have heard about is just attempts to distill wisdom about how to build code so it’s robust and easy to change. *Exception on the third one is that it’s a common pattern that’s used purely for performance reasons in numerical analysis. numpy is built around it
This illiterate rambling makes me sad. Please provide some examples of your immaculate code so we all can learn from your superiority. 
He is a bit elitist about it. But then again not everybody can be Donald Knuth.
Encapsulated logic with easy and documented interface. 
My two favorites. Flask and crypto! 
Functions are awesome. If you don’t need classes then don’t write them. Depends on your code of course but I often find it simpler to have a few free standing functions than a class.
Bonus (maybe silly) question -- while python is an OOP language, Ive always seen some resistance to OOP by some in favour of other paradigms. Is OOP really necessary? Are those people calling it bad doing so with merit?
It helps, like if you wanna build a video game. But if you don't really think by classification you don't need to in python
I used class to recycle some codes. :) 
Not the op but that tutorial is actually super helpful. Thanks!
It can be really interesting to look at how someone wrote code that you use a lot. For example, you could look at some module of the standard library that you find interesting - [pprint](https://github.com/python/cpython/blob/master/Lib/pprint.py) for a random example. Its external interface is just a few functions, but it's implemented with a class underneath. The [requests](https://github.com/requests/requests/blob/master/requests/api.py) library is another (maybe better) example of this - a lot of the real work happens in Session objects, and this gives an *excellent* place for people using requests to ask for proxies, add custom headers and behavior, and so on. You can read the Session docs to see examples. If you don't think you need OOP for your situation, that's perfectly fine. But reading other code can give you a feel for when you might want to try a new way of doing something. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [python/cpython/.../**pprint.py** (master → e0aef4f)](https://github.com/python/cpython/blob/e0aef4f3cd339a405d2a7fbd35a50afa64834f84/Lib/pprint.py) * [requests/requests/.../**api.py** (master → 24092b1)](https://github.com/requests/requests/blob/24092b11d74af0a766d9cc616622f38adb0044b9/requests/api.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply drrfmd3.)^.
If you have a lot of functions that pass the same parameters between them you should probably need to use a class. 
I like /u/resc's and /u/makeshift_mike's answers. I'll add what wisdom I've learned from learning Clojure. People often phrase class-oriented programming (or object-oriented programming, OOP for short) as when you have "things" that "know how to perform activities/do work", and you bundle them together logically. While this _can_ work, it's so simplistic it sometimes results in folks using objects where they don't belong. Where objects _do_ make a lot of sense is when they encapsulate the boundary of systems, exporting an interface which separates the concern of interacting with that object from the internals of how that object performs its tasks. One example by /u/resc was of HTTP sessions in the `requests` library. Another common example is implementing a database connection library like `sqlalchemy`. SQLAlchemy needs to know/remember how to re/connect, how to read objects, differences between different database dialects, which drivers to use, etc., but yet you mostly don't worry about any of that. That's the beauty of OOP. On the other hand, modeling a game of chess with objects may or may not be the best idea, depending on requirements. If you need to export sophisticated internal state externally, like a history engine for game play/replay, or hosting an online game of while validating legal moves, sure. But for the internal game engine, you can probably get away without formal OOP as traditionally recognized. I hope I've shown OOP isn't the only option for some use cases. If you find yourself designing or working with a "system" or an abstraction of one, OOP makes sense. For simple coding problems, it often doesn't make the problem noticeably simpler or easier. You should play with the basics to be familiar with OOP's strengths and weaknesses.
What libraries are you using? Some rely more on classes than others. If you're writing command line tools, there might not be much need. But if you start doing anything with GUIs or complicated data structures, classes become more important. 
Sure, but it's better to explicitly say what you mean. 
It says command not found snowmachine when I try to run it after a successful install. Ubuntu 17.04.
I like classes that take responsibility for doing something well enough that the caller (me) doesn't have to worry about the details. If the class is leaking some/all details, it's often better to use a (handful of) functions and primitive datatypes. I offer Jack Diederich's 2012 PyCon presentation "Stop Writing Classes": https://www.youtube.com/watch?v=o9pEzgHorH0
Do it better? Show us your graphs and tables captain obvious!
I don't regard myself as being even *remotely* qualified to answer such a question on technical basis, but Ill share a conceptual perspective that helped me initially. If you have a group of functions that all require a similar starting condition they're likely suitable to be wrapped up into a class. For example, if you've got 5 functions that all manipulate csv data, having them wrapped into a class that opens a csv doc and loads in into memory during instantiation would allow easy manipulation. For instance, `c = MyCSV("filepath.csv")` could allow you to easily do things through simple class method access convention like `c.sort(column=1, desc=True)`. It could be achieved through functions alone, but would be much more efficient and, IMO, workflow friendly from a class-based approach.
This sounds like it would have been better using an array of bytes honestly. Bottom bit indicates visited state, next 4 bits are state of each of the four walls.
Perhaps I oversimplified. I needed much more information than that in order to then graphically represent my maze, including the x,y of each cell and the x,y of each wall's start and end points, plus a bunch of methods. A byte array would have been much, much more awkward
Is there any reason you couldn't design it to keep snowing while you type commands and use the terminal otherwise normally? Just have the snow behind the normal io text, probably dimmed a little.
i don't know about them. the names seem good. can they update the int class to go faster or do i need to code function calls the use these?
The github page for that program is pretty descriptive. There's even an animated gif showing how to use it... So what are you having trouble with, exactly?
Not possible. Also, wouldn't a bunch of people using your strategy break the strategy? You should just use the strategy to make money for yourself and investors who buy in.
1. Read the sidebar. In particular, _If you are about to ask a question, please consider r/learnpython or the learn python discord._ 2. All of the documentation on https://github.com/rarcega/instagram-scraper is oriented toward using this package as a command-line application. But it sounds like you want to import the package's modules/functions and use them directly from your own code. Lets give it a shot. Create a virtualenv, install the package. Downloads$ python3.6 -m venv r-python-7m59gk Downloads$ cd r-python-7m59gk r-python-7m59gk$ source bin/activate (r-python-7m59gk) r-python-7m59gk$ pip install instagram-scraper What does the package contain? Courtesy of https://github.com/rarcega/instagram-scraper/blob/master/instagram_scraper/__init__.py, we have `instagram_scraper.InstagramScraper` == `instagram_scraper.app.InstagramScraper` being defined. Lets import and look at that closer. (r-python-7m59gk) ~/r-python-7m59gk$ python Python 3.6.0 (v3.6.0:41df79263a11, Dec 22 2016, 17:23:13) [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; import instagram_scraper &gt;&gt;&gt; dir(instagram_scraper) ['InstagramScraper', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'app', 'constants'] It's a class. &gt;&gt;&gt; instagram_scraper.InstagramScraper &lt;class 'instagram_scraper.app.InstagramScraper'&gt; https://github.com/rarcega/instagram-scraper/blob/master/instagram_scraper/app.py#L886 creates an instance of the class, with some parameters. &gt;&gt;&gt; scraper = instagram_scraper.InstagramScraper() It has a _lot_ of functions. &gt;&gt;&gt; [x for x in dir(scraper) if not x.startswith("_")] ['augment_node', 'comments', 'cookies', 'destination', 'download', 'extract_tags', 'fetch_stories', 'fetch_user', 'filename', 'filter', 'get_last_scraped_filemtime', 'get_logger', 'get_media', 'get_original_image', 'get_profile_pic', 'get_stories', 'get_user', 'has_selected_media_types', 'include_location', 'interactive', 'is_new_media', 'last_scraped_filemtime', 'latest', 'location', 'logged_in', 'logger', 'login', 'login_challenge', 'login_only', 'login_pass', 'login_user', 'logout', 'make_dst_dir', 'maximum', 'media_metadata', 'media_types', 'parse_delimited_str', 'parse_file_usernames', 'posts', 'query_comments_gen', 'query_hashtag_gen', 'query_location_gen', 'query_media_gen', 'quiet', 'quit', 'retain_username', 'safe_get', 'save_json', 'scrape', 'scrape_hashtag', 'scrape_location', 'search_location', 'search_locations', 'session', 'set_story_url', 'sleep', 'tag', 'username', 'usernames', 'verbose'] The `main()` function says we should be able to `scraper.scrape()`. So we'll use that as our barometer of success. &gt;&gt;&gt; scraper &lt;instagram_scraper.app.InstagramScraper object at 0x101f5cb70&gt; &gt;&gt;&gt; scraper.scrape() Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; File "/Users/alan/Downloads/r-python-7m59gk/lib/python3.6/site-packages/instagram_scraper/app.py", line 406, in scrape for username in self.usernames: TypeError: 'NoneType' object is not iterable Blegh. You see that reference at https://github.com/rarcega/instagram-scraper/blob/3845eed70827c0ab12a601d94414ba4872e07c55/instagram_scraper/app.py#L886 to `InstagramScraper(**vars(args))`? That's ugly. It is passing in _all_ of the command line arguments parsed by `argparse`. We need to figure out the arguments, and pass them in as named parameters to the class constructor. But a bunch of them are probably unnecessary or defaults. After a few guesses, I found the following ran without exception: &gt;&gt;&gt; scraper = instagram_scraper.InstagramScraper(usernames=["wrightkitchen"], destination="./", media_types=["image"], maximum=4) &gt;&gt;&gt; scraper.scrape() Searching wrightkitchen for posts: 1 media [00:03, 3.13s/ media] Downloading: 100%|████████████████████████████████████████| 3/3 [00:01&lt;00:00, 2.96it/s] But this also produced output - the underlying `__scrape_query` implementation uses https://github.com/noamraph/tqdm to draw progress bars on the terminal. I conclude that https://github.com/rarcega/instagram-scraper is _not_ designed to be used as a library. But it does download things. And writes its own log file. &gt;&gt;&gt; (ctrl+z) [1]+ Stopped python (r-python-7m59gk) r-python-7m59gk$ ls -1 -t | head -n 2 instagram-scraper.log wrightkitchen (r-python-7m59gk) r-python-7m59gk$ ls wrightkitchen/ 12798136_561860070648045_1468705541_a.jpg 25013658_168219250452777_8722014564452925440_n.jpg 24845356_146561805991408_210467034025164800_n.jpg 25014651_136301160376428_9014435316857044992_n.jpg 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [rarcega/instagram-scraper/.../**__init__.py** (master → 3845eed)](https://github.com/rarcega/instagram-scraper/blob/3845eed70827c0ab12a601d94414ba4872e07c55/instagram_scraper/__init__.py) * [rarcega/instagram-scraper/.../**app.py#L886** (master → 3845eed)](https://github.com/rarcega/instagram-scraper/blob/3845eed70827c0ab12a601d94414ba4872e07c55/instagram_scraper/app.py#L886) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply drrkxnr.)^.
I only wrote functions for the longest time. And for simple programs, it's completely fine, as long as it remains a simple program. But what about when you want to call those functions from another program? Sure, you can import the package and call the functions directly, and that's all fine and good in some cases, but often you're going to want to be able to call these functions on the same object (regardless of if that's a string, array, etc.). So a class will let you create a separate instance of this package's functions, so instead of passing through the data each time, you only have to do it once. But this alone isn't super helpful, unless your functions have a lot of arguments. The real power comes in the ability to manipulate properties of an object based on a class. So if I have a class called "Dog" that I'm using in a game, I can have a property called barkType that determines the tone of it's bark with ints from 1-10. So I instanciate (create an instance/unique object in a variable) the Dog class into "Lab" and give it a barkType of 2. Then whenever I call Lab.bark(), I hear dog2.wav. But let's take it another step further. Your dog class could be an extension of an animal class. So your animal class defines base movement, how noises are sent to the speakers, etc. And your specific animal classes let you use all of this work you've done and add a layer for that specific animal type. And now you can create as many dogs as you want that have separate properties (barkType and whatever else you can think of) from each other, identified by unique variables.
OP, I found that explanations of classes outside of the code I was working on didn't make sense, until someone adapted an explanation to my use case. What do you use python for?
I have trouble keeping straight which string/list methods alter the object in place versus return a copy of the modified object. There I said it and now it’s out there and I am ashamed about it.
After reading all your replies I understand what you are saying, but you should have stated that you were talking about the non-GL part of OP's code in the first place. /u/HonzsSedlomn your code seems a little strange, but it depends on how often your `on_draw` function is called. Is there a reason that a particle is created and possibly deleted every draw event? Can't this be done outside of the draw events to reduce how the time between draw events? Edit: There is also probably a way to vectorize your `numpoints` for loop using numpy which should reduce the computation time a ton and basically make u/1-05457's comment about Python being interpreted irrelevant. People do complex stuff with (or from) Python, it being interpreted usually isn't an issue. Even if it is, there are ways around it.
What is that 'jump two' shit? 
There's a label called two later on
Don't! It's entirely possible you don't need them. Classes are very rarely needed. Write them if you have a collection of variables and methods that are closely related. https://youtu.be/o9pEzgHorH0
The "animal class" is by now the classic example of using OOP and inheritance when you probably don't need it, because a textbook told you to. Nobody who's new to OOP should have to use inheritance, or for that matter write animal simulations. Inheritance just isn't the most important thing about classes. I'd say, first write some classes when you need them. If they have a lot in common, *then* use inheritance. The motivating reason to start using classes in Python is that you need to remember things between function calls. A beginner would use globals for this, but globals are a huge mess. So maybe you need to read a file in chunks and do something with each chunk, but you also need to keep track of how many bytes you've read total. The number of bytes shouldn't be a global -- then you wouldn't be able to deal with two different files. Instead, make an object and update `self.bytes_read`.
*deep exasperated sigh*
well, you have to show us valid Python code and the exact error message.
What's a label? (It's not a python thing.)
I am more concerned that you(not you in particular, anyone on the Internet) have no idea what you are doing and my cryptos are going down the drain, than afraid of you stealing my money. There are very few good ideas that no one had before, so the chances that anyone would have a new idea are quite slim. Also, if your idea is so good, you are better off making money of it yourself, than getting scraps from other people's earnings. The value you might bring is not in the "secret sauce" for your bot. You should try to sell that value, whatever that is.
Note: when one has to use a variable which clashes with a keyword, the recommended thing is to append an underscore (like `class_`) instead of changing spellings (`klass`).
use classes when you need to keep some state around and: - would like to offer a few prepackaged ways of manipulating that state - need to pass that package of state around between different functions - have multiple instances of such state you want to keep distinct and organized - want more / different functionality than a standard container like a list or dict i work with ML; a model is a great example of a class. in sklearn, models all have fit methods, and all contain state required to apply the model to new data. you might train and pass around dozens of models. this example ticks all the boxes above. a class is a container. it has a few methods to manipulate what it contains. it has a specific purpose that makes it conceptually simple to work with. 
should be good now
A class is basically just a dictionary. If you find yourself grouping a bunch of data or functions in a dictionary and they depend on one another, consider using a class.
You will need to use batched drawing for this, as others have mentioned. As a rule of thumb, you want to do as few OpenGL draw calls as necessary each frame. In pyglet, you do this by using a Batch, and as few Groups as necessary. (Groups are used for setting OpenGL state, such as binding textures). Here is a simple example that does a few hundred particles at 60fps: https://pastebin.com/hdvmBk8b This example uses very little CPU (and practically zero GPU). You could do a few hundred particles without wasting too much CPU, or even a few thousand (change line #54) if you aren't worried about CPU usage. The main bottleneck here is the math, so really extravagent particle systems tend to be done entirely on the GPU with Shaders. For a 2D game that might be creating a few dozen particle effects, however, it's totally fine to just do it on the CPU. 
Just to clarify, the highest level in pyglet for batched rendering is the "Batch". The Batch can contain one ore more "Groups", which are used for setting/unsetting OpenGL state (such as binding textures). If all one wants to do is work with OpenGL primitives, you can just use a Batch. Groups would only be necessary if you wanted to set some specific state, such as setting glPointSize. Keep in mind that each Group you have, results in a seperate internal OpenGL draw call, so you want to keep the number down when possible. 
wow this is really good. I think I just had a lightbulb go on.
Classes are machines which allow you to quickly create new objects using a template. These objects may have values, methods (functions), or both, and OO generally concerns itself with the latter. If you just have a bunch of functions in an object, that's just a namespace, or a module, which is fine. If you just have a bunch of values in an object, you're just using it as a key-value data structure, which is fine as well. But OO is interested in not only putting information inside of an object, but also methods (functions) which can operate on those values inside of it as well. One thought is that the value you wish to work on, along with the methods capable of operating on the value, should bundled together into one context, a sort of separation of concerns. Another thought is that OO is a way of structuring your app through the communication of asynchronous "actors", where each object is an opaque entity potentially capable of computation, and you send it some work through a mailbox. The object decides what to do with that information, and maybe returns something or maybe renders side effects.
Any program you can create using OOP you can also create using any other paradigm. Sometimes OOP is a very good fit, sometimes it's completely pointless. I'd label Python as multi-paradigm or OOP optional rather than OOP as you aren't really forced into any particular paradigm in the way that you are with languages such as Java or Haskell. This is both good and bad.
One reason for using classes is the idea, that you have different functions grouped around a set of data, which it manipulates. That said, I start out with modules and functions when drafting out code. And while evolving the code more and more functions are added, something like "logical attraction" happens. The functions start to group around data. When this level is reached I start to refactor to classes and write "proper" OO code, not earlier. Example: You could make a module where you define some parameters used to execute your program. After a while you realize, that there are a lot of those. And you have the need to change and persist these: it would be naturally to group the parameters together in a Settings-object. As long as you had only one or two settings, which would eventually remain constant, there is no need for a class. Of course you could start out with "classic OOP" building inheritance trees, encapsulating data (which only works to a certain extent in Python) or think about polymorphism, but for me that doesn't work well with Python. What I like about Python is, that it has such a low overhead: you could accomplish a lot without only using functions, lists and dictionaries. But if you need more, you get a lot: you could even make your Objects callable.
I tend to always create an isolated development environment for every Python project. Depending on the details, I either use virtualenv or docker containers. I would only rely on specialised distributions for projects that really require it, and default to the standard distribution for others.
When my functions are taking more than 5-6 arguments I'm starting thinking about classes. It's a good signal that you probably need to encapsulate the data. It helps to simplify your functions down to 1-3 arguments.
Ok, but now you've shifted the point of your OP to reflect your specific priorities. You asked should the GUI be learned first, and my answer is emphatically no, it shouldn't be the place you start learning any programming language (excepting GUI-exclusive languages like HTML, Markdown, CSS, QML, etc), and it *absolutely* shouldn't be with Python. Now, you're making a POS (and I'm assuming you mean Point of Sale, and not Piece of Shit, which is also a common meaning of POS), so a GUI is important to you... in your head. But it isn't, to your company. What's important to your company is that all the back end logic works correctly. That it looks nice or is easy to enter things into (or easy for you to click and flip tabs in) is entirely secondary to whether or not it displays the right price, and **much** less important than if it calculates the right totals. Now, if you start by learning PyQt5, and spend the next couple of months learning how to wire together your QML widgets to your method calls, and you get everything looking nice and good, when are you going to figure out that you should have been using **decimal.Decimal** all along? Your OP asks *should* Python be introduced GUI-first... my answer was no. Now you're saying that you've got a reason for wanting to approach it GUI-first, and my answer is still no, learn the language first, learn how to do the math (properly and appropriately for your project) and the database interactions and the testing and IO required, *then* start worrying about clicking and twiddling. Just as a basic workflow your program's math tests should already be clicking and twiddling and providing reasonable and unreasonable inputs long before you ever even initialize a GUI loop... form follows function.
Sometimes all you need is a little push :)
I did a lot of HyperCard, back in the day ... no one killed it because it was too powerful or made application development too easy. They killed it because it was a trivially exploitable, incredibly dangerous mess that had been thoroughly bypassed by other developments, standards, and tech. To anyone not that old, HyperCard was basically a WYSIWYG implementation of something like a primitive HTML / JS framework, pre-CSS, coupled with very basic database and server that would happily execute client-side macros as if they were trusted server-side code. It's execution model was ludicrously naive, it was nothing but side effects, and it died a necessary death. But it did presage the Electron of today, so as a piece of history it's still interesting.
You might want to take a look at the Jupiter project at http://jupyter.org. As far as i know, its a great took for teaching programming, especially with dynamic languages such as Python
Way, way less.
Am trying to load the page but am not successful...
Look into exception handling, specifically `try`/`except` statements, and the `logging` module.
already on it! Thanks!
Case and point, me writing my terrible scripts in python rather than bash because windows. 100% imperative without fighting against the language.
Oh, they're there, they just get ignored until someone kicks in the door. Typically the problem people have with POS systems is that the computer doesn't think about fractions of a unit of money in anything like the same way a human tends to, and *not at all* in the same way a tax auditor does. A **float** is not an appropriate representation of a decimalized currency, but a learning programmer will use them all over the place... which leads to awkward situations for your boss when, eventually, someone decides to kick in the door.
Welcome to programming.
Here's a few analogies I've used in the past to explain this to people new to classes. These are merely ways to think about classes which might help you use them. **Classes as a program** If you write a simple C program (or python) to say calculate the first hundred prime nos. or something, you might have variables in which you'll store the current count and a function to see if it's a prime number. You create this in a file called `prime.py`. Now say you have another program where you want to check if any number is a prime number. Now you could write another program called `user_prime.py` with another function to calculate prime, or you could use the one from `prime.py`. So you import `prime.py` into your new `user_prime.py` and you save yourself a lot of work. So a class can be thought of as a file that's a complete, isolated program that does one specific thing. Therefore, it has variables and it has functions and some other properties which help you use them in *other* programs (classes) that you may write. **Classes as a table** Classes are things that have properties. That's often what the public variables in a class are called. You could think of those properties as the columns of a table. Each object then would be then be a single record. The class definition is simply the columns of a table and each object is one actual row in the table. The functions in the class can act as functions that act upon the values in any of the columns. **Classes as collections of variables** This applies more to structures but that's not important. If you want to represent the marks of a student, you'd use the `int` datatype. If you wanted to represent the name of someone, you'd use the `string` type. The question what data type do you represent a Book with? A book as a name, which can be a string. A book also has a number of pages, which can be an int. A book can have also have an author and title and a whole bunch of other things. So what datatype do you use to represent a Book in your program. You can't use one primitive type, that wouldn't be good enough. So you combine *a bunch of them* into a class. So a Book class would have an int for pages, a string for its name, a string for its author and another string for its title. So just like you'd have `int marks`, or `string name`, you then would have `Book moby_dick`. What's important is the placement of the word `Book` in the phrase `Book moby_dick`. Meaning that it's a datatype, to represent a book. Only it's a datatype, made of *other datatype* and `moby_dick` is a variable that is made up of *other variables*. 
At the simplest, thousand-foot down level, a *function* is a bit of callable code that takes zero or more parameters and does something with them. A *method* is a bit of callable code that takes some *state* and zero or more other parameters and does something with them. Typically whatever it does modifies or uses the state in the course of doing whatever the method does. A *class* is a way of combining a specific kind of state **and** the methods associated with it. The point at which you transition from function to class + method isn't always obvious, but if you find yourself sharing some *argument* across multiple functions, you've probably found a good candidate. The rest of OOP (inheritance, multiple inheritance, class vs instance, etc) is really just linguistic features and organizational helpers that often make your life easier (and sometime harder) that built atop that basic idea of state + functions that share that state.
Class objects. Supposed you have function_a(), function_b() and function_c() You call function c from both function a and function b. When you call it, you have to pass it an object, let's say a string. This means that both function a and function b must have the string you want to pass, as separate objects. If the string is generated in say function a, this means that function b must first call function a, function a must return the string, and then function b must call function c with that string. Either that, or both function a and function b must duplicate the same process to generate the string before either one can call function c. If these functions were methods in a class, you could initialize a class object as self.object, and any method in that class has access to that object. This way, you don't have to structure your code to call function a from function b and then call function c, you could structure it any way you want and the string is still available to you. You could even have a separate method that generates the string and call it from any method you like before calling method c, or even run it within method c itself if you need to. This is the simplest and most ubiquitous use of a class. 
Also, possibly, **atexit** ... useful to know about if you want to always do something when the interpreter is shutting down (in an orderly fashion, it won't help with someone unplugging a power cable or force killing the interpreter itself, but then nothing will).
nice, just what I was looking for. Keep them coming.
Just like url shorteners!
I like explicite. But with heavy usage of np.newaxis, I found that it make the indexing less easy to read. It's only a personal thought, and I agree that using np.newaxis is the most pythonic way to do that.
Thanks, I start getting a sentiment that my worries are not quite substantiated. To be perfectly clear, I do make use of requirements.txt, but somehow my dev environment is a conda/pip mix, but prod is pure python. Everything works right now, but the confidence in this setup is not 100% Thanks for the pipenv recommendation. I will fall back to it, when shit will hit the fan. 
Best thing to do is create a fresh dev environment in pure python with pipenv, and ensure it works. Environments are supposed to be as disposable as a docker container, you should be able to create one that works from scratch so don't get too attached to the one you have because it's working. My 2c.
Agreed. Also, also try to make connections with the real world, and try modeling things into classes. For example: I am a person (class Person). I have a name (Person.name) and an age (Person.age). I have a Car (class Car) that has 4 wheels (Car.wheelCount = 4) and its brand is SuperCarMaker (Car.brand = “SuperCarMaker”). My car can drive (function Car.Drive() ) and it can crash (Car.Crash() ). I hope this helps a bit, even though it was kind of abstract. If you need more help I’m happy to assist anytime on discord. Pengi#6172 Edit: More pythonic. Thanks u/an_actual_human
Interviewer: “Do you have any special skills?” Me: “I have 20.000 tinder matches”
Thanks, it is reassuring to know that developing in conda and deploying with pure python/pip is not that exotic.
Do you create virtualenv using pipenv or the conda env in development? That is essentially what my question boils down to. In the docker container it will be all pipenv, because it based on official python 3.6 image.
mega thanks!! I'll look into that
 I'd say, first write some classes when you need them. If they have a lot in common, then use inheritance. Amen
Member names should not be capitalized.
Not clean exit! ☝
It's easy to see how it relates to cars etc, but what's an actual example in some program?
In my experience (2.5 years) of programming with Object Oriented Programming languages, you use classes for everything. Everything that can be it’s own entity or model is its own class. If you’re building a system with users, for example, you usually model that user as a class with fields like ‘name’, ‘hashedPassword’, ‘age’, ‘lastLoginTime’, etc. You then also usually have classes that handle everything with databases, logic, UI, etc. “If it’s a thing, it’s a class.” as a general rule of thumb is usually how I think about it.
irony checks out
XY of the cell is the index in the array. Unless you’re making an irregular maze (you said grid, so I don’t think so), then the walls start and end points can be calculated with a simple function based on the cell and direction. It would be awkward to do it as a byte array in Python just because it doesn’t have convenient bit manipulation facilities. In general however, when operating on large sets, keeping the size of the items in the set down helps a great deal when it comes to performance and memory. I’d probably make a maze class to store all the methods to manipulate it and keep the walls as a simple array.
In my opinion trying to base the design of an object oriented program on analogies to real world classes of objects ends badly most of the time. An example is game development, where you have many different kinds of entities, like players, enemies, guns, trees, checkpoints, etc. it seems obvious to model all these things as a huge heirachy of classes and sub classes if you have learned OO from a resource using the Car or Animal taxonomy metaphor. In practice this turns out to not be very nice. Especially from a performance pespective, but also from a design one. You end up with really deep and complicated class heirachies, and you eventually you are going to need to implement a class which really fits into two places in this heirachy. This is were you end up doing some awful multi inheritance thing if your language supports it, or start dublicating code everywhere. I find that thinking about a problem more in terms of data and transformations on it (in game development people use a pattern called an [entity component system](https://en.wikipedia.org/wiki/Entity%E2%80%93component%E2%80%93system)), rather than objects and their interactions, makes more sense. This is also reflected in the fact that many new programming languages does not even allow inheritance. My advice to OP would be to use classes just as records. A set of named data fields in a convinient package. Then the question of wether to define something as a function is a matter of syntactical preference most of the time. The rest of the time is when the "member functions" are actually one of the fields you want to collect. For example you can think of an iterator as an object with two fields: A `next` function and an `empty` function.
**Entity–component–system** Entity–component–system (ECS) is an architectural pattern that is mostly used in game development. An ECS follows the Composition over inheritance principle that allows greater flexibility in defining entities where every object in a game's scene is an entity (e.g. enemies, bullets, vehicles, etc.). Every Entity consists of one or more components which add additional behavior or functionality. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
&gt;If they have a lot in common, then use inheritance. Even better: Factor the commonality out in a seperate class and use composition (i.e. include an instance of this class as a member of each class needing the common functionality). Inheritance is rarely nice.
Right. Using objects for users makes sense enough for me. Thanks!
&gt;*Exception on the third one is that it’s a common pattern that’s used purely for performance reasons in numerical analysis. numpy is built around it Also in video game development: https://en.wikipedia.org/wiki/Data-oriented_design Actually it is not the most horrible way of organizing a program in a pinch. If you ever end up having to write something in C, organizing it in this way is probably nicer than trying to do something in a more OOP style. When you have to do all allocations and free memory manually, just having a couple of big arrays is a lot easier than having thousands of small individually allocated objects floating around everywhere.
**Data-oriented design** In computing, data-oriented design (not to be confused with data-driven design) is a program optimization approach motivated by cache coherency, used in video game development (usually in the programming languages C or C++). The approach is to focus on the data layout, separating and sorting fields according to when they are needed, and to think about transformations of data. Proponents include Mike Acton. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
maybe you have a Server class with some methods that do server related things. The stuff below wouldnt be hard to implement. &gt;&gt;&gt; s = Server(ip='1.1.1.1', port=2222) &gt;&gt;&gt; s.ip 1.1.1.1 &gt;&gt;&gt; s.port 2222 &gt;&gt;&gt; s.ping() Sending ping to 1.1.1.1 ... Sever is UP &gt;&gt;&gt; s.reboot() Connecting to 1.1.1.1:2222 ... Connection established. Rebooting. 
There is no magic bullet. You will get used to it with time. As you read more OOP code, your style will change gradually. I remember when I started using Java and kept writing procedural code, and even though I had classes and all, I kept passing data from one static method to another and only now when I look back at that code, I think to myself. I could created objects with such and such methods and this and that.. This is just a beginner's opinion! The experts here will give you better advice.
Yes! I'm working through that too.
Nouns=Class Adjective=Property Verbs=Methods That's reasonable rule of thumb.
It depends on the point of view! Of course you could read most of xml like text. But: don't forget ``cdata`` sections and the *encoding* attribute! Both need a special treatment, so xml parsers just don't open a xml file in text mode. At least they better shouldn't 😉
As a tangent, "crash" would probably be a possible return code for Car.Drive(), not it's own function. Or "crashed" could be a property of Car set by the "Drive" function. Unless crashing is somehow a possible goal of the car, like demolition derby.
Good bot
Thank you jeroengast for voting on WikiTextBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Sorry dude, but I've having a very difficult time just understanding this. The Grammer needs... A refactor.
You shouldn't be downvoted, in python a class IS a dictionary under the hood.
good bot
Discovering ECS was like discovering magic. Rooting an enemy in place could be as simple as removing a "movable" component from them. It was a little weird at first, but the pace of development increased a lot and creating new and inventive entities was a breeze. One of the key selling points is that the game data is much easier to serialize, so you can store the game state (save/load) and transfer it (multiplayer) much easier.
Obviously, everyone went to explain how and what classes are. No one exactly gave you an example of why you should use it and how to write it exactly. Here's a read-up on "does it make sense for them to be together?". Don't think too much about classes. https://pastebin.com/GefdVwwa
Playing with exponential function and lots of random points.
Nice work!
A function is an abstraction of code, a class is an abstraction of data. Nothing wrong with writing mostly functions, but if you find yourself passing around a dict that every function needs to have the updated version of to run, it should have been a class. 
Python 3's PyPy should be PyPyPy instead.
As someone who was knee deep in c++ during OOP’s heyday (I once understood virtual inheritance), I couldn’t be happier with how newish languages like Go deemphasize inheritance. Occasionally it’s the right tool for the job, just much less occasionally than we as an industry thought in the 90s. I’m not sure I’d go so far as to say that classes should be nothing more than records that happen to have functions attached — there’s a lot to be gained by using classes as a tool to hide complexity, as u/Artiavis wrote — but the OOP sweet spot definitely lies along this path.
Working on learning how to scrape websites with bs4. 
No offense but I think that's a terrible comparison. Hypercard wasn't intended to be a general purpose application development framework. Hypercard was intended to be a "slap together a basic CRUD DB GUI in 5 minutes by dropping form elements onto the master card". It's about a million levels higher than Electron, which would be more comparable to something like MacApp.
I'm sorry for the this. I'll tell the bad news to my partner and rewrite the article by myself. Thanks for your feedback. 
A lot of people have explained what classes are in a literal sense, but it's worth explaining what they are conceptually. Humans don't think in functions - they think in terms of "things." A dog is a thing and it does certain "stuff." It can fetch a stick, it has feet, etc. A class is a collection of data and functions, sure, but it also represents a "thing." Since humans are adapted to think in terms of things, programs are easier to understand when they're structured as a collection of things. What is a button? It's a "thing" in a window. An edit box is another "thing." The easiest way to represent those things so that humans understand is to represent them as classes - conceptual objects distinct from the rest of the program. That's not to say classes are always the best way to represent a program - but they simplify complexity by compartmentalising it in a structure that humans are adapted to understand. Thinking of a program as a collection of different things is easier than thinking of it as a series of mish-mash functions dealing with loosely collected data. 
You should start writing classes if you can benefit from OOP (Object-oriented programming). I find myself writing classes by default, because I learned programming with OOP. Over time, I realized that I needed far fewer classes than I thought I did. Rather than learning classes in Python, I would read up on object-oriented programming and design. See if the patterns fit your use cases. If not, then there is no need to write classes. 
Py^3 .
I'm taking veekuns Pokedex database. Modifying and porting over to Django models for use in my web site. 
I'm not an expert by any stretch of the word. But if you are having difficulties with the basics of bs4 let me know and I can try to answer them.
You do not need to be able to replicate or top something in order to criticize it. Can Simon Cowell sing? No. Did Ebert make movies? Not regularly. Does IGN make video games? God, no. I don't agree with the poorly-worded sentiment in the OP. But this is even worse.
I'm trying to replicate [this project](https://github.com/burningion/poor-mans-deep-learning-camera) on my Raspberry Pi, but am having a hell of a time installing OpenCV...
As someone currently learning Python. I found learning the basic principles of OOP extremely helpful. Not only in terms of writing and using my own classes but understanding documentation and using other modules/libraries. 
Thank you, I am new to Python but not new to programming. I've programmed in vb6 for a long time and could do it all in vb6 with winsock. Bs4 makes it look easy because it does all the parsing for you unlike vb6. I could always use help though with things I don't know since Python is different than vb6. 
Yeah, there is just no generic/easy way to do that. There might be a way to hook into the window manager of the OS or something to attach and snow on a window. But a crossplatform script can't do that.
You don't really need to use classes like this in Python
Feel free to PM me if you run into any troubles.
How did you install it? Did you use `pip`?
Just started learning watching youtube tutorials 
Yes, I have python 2 and 3 installed. I tried installing with pip3 install snowmachine and pip install snowmachine. Both ways said it was successful but it won't run. Command not found.
Am still trying to understand what pypy is? is it python IDLE or interpreter?
I hate those bots. They are adding no value, just spamming the thread.
* https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)
**SOLID (object-oriented design)** In computer programming, the term SOLID is a mnemonic acronym for five design principles intended to make software designs more understandable, flexible and maintainable. The principles are a subset of many principles promoted by Robert C. Martin. Though they apply to any object-oriented design, the SOLID principles can also form a core philosophy for methodologies such as agile development or Adaptive Software Development. The SOLID acronym was introduced by Michael Feathers. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
it is an interpreter
Cracking the code interview?
I'm not trying to provide anyone with a description of what HyperCard was *intended* to be, I'm describing a rough sketch of the functionality it provided in relation to today's terms. Your "million levels higher" was a trivial WYSIWYG editor for laying out image, text, and hyperlink content that was about as capable as DreamWeaver 1997 and HTML pre 2.0. As I said that content was functionally equivalent to early HTML, before the arrival of CSS, where what little styling that existed was an in-line part of the document. The interface was able to be scripted using something roughly equivalent to JS, and the whole thing could be encapsulated into a desktop app that presaged today's Electron (a dedicated process rendering styled and marked up content and providing basic browser-like navigation and interactivity with the underlying system), but without any of the process sandboxing the modern version takes for granted. It allowed you to build primitive form-based database clients, yes -- much more primitive than you can do today with Excel or Access -- and that's about the limit of it... but were you thinking of building something like that today you'd reach to HTML, CSS, JS, and if you wanted it on the desktop Electron. Hence the translation for the young.
I can explain, let me know if anything here does not make sense. CPython is an interpreted language. A lot of smart people wrote a lot of great code in C, which when you build as an application you get the application you commonly refer to as Python. When you "run" CPython 1) you are dropped into a REPL where you can type Python compatible text OR 2) the application reads Python compatible text from a file. Now, the key point here is that CPython is just one implementation of Python, albeit the currently most popular. It's called CPython because, as you may have guessed, it is written in C. When you run a program, the Python compatible source code is read as utf-8 strings, converted to an abstract syntax tree and evaluated. In the evaluation, the abstract syntax tree is converted to Python byte code, a special set of characters that is specific to not just CPython, but sometimes the version of CPython (i.e. CPython 2.7 will generate different byte code from CPython 3.6). If you are interested in this look at the `dis` module. CPython then has a giant `while` loop that reads these instructions one by one and breaks into different `if` statements based on what these instructions are. Now, coming to PyPy. PyPy is another implementation of the Python language. PyPy like you may have guessed is implemented in Python. Which means you can read the source code for PyPy if you know how to read Python code. PyPy generates a completely different set of byte code though. Now, how is it different from CPython? PyPy is JIT compiled, and specifically I believe online JIT compiled. This means that while it is running, PyPy is trying to figure out what the types of variables are and if they can be optimized. Take a look at this trivial example, x = 0 for i in range(0, 10000): x = x + i You know that `x` and `i` are integers and the summation should just use standard integer summation that most processors have really efficient instructions for, but in CPython there's no real way to get that information in the byte code. CPython generates byte code that says add these two variables, and in the giant `while` loop I mentioned earlier CPython dispatches to the `add` branch and then there there's a couple more `if` statements to check if both these variables are integer types AND THEN it performs an integer addition, and CPython (I believe) does all of this every time in the loop. PyPy on the other hand is smart enough to know that it is an integer, or at least figure out it is an integer in the first 50 times of the loop say, and then decide to do something different that is more efficient. As I understand it, this is just one of the things they do. Take everything I've said with a grain of salt. I'm not a core developer of either one of these projects. I'm just a happy ex-CPython user that was super into the ecosystem and researched at a high level what was going on in PyPy. Let me know if you have more questions as well, I'm always happy to help spread knowledge and learn more.
Currently working through neural networks by oreilly. 
Can you please give link of that course here?
Same. Made some decent progress already. I'm doing it for a real amazing reason as well. I want to be emailed when the Seattle Seahawks win a game, so that way I can take advantage of Papa John's sweet 50% off deal - which always happens the day after they win a game. It's not really for this year, but next year. Oh man I'll be bummed if they don't do that promo for the 2018 season. Oh well, at least I'll have done it. My trouble is getting ideas for programming projects, so I figured why not try this. 
The entire point of open source development is having the openness to improve on others’ work and contribute to something larger. If you’re just going to bitch and moan about it without trying to be part of the solution, then don’t go open source. Maybe I wasn’t clear in the point I was trying to make, but your analogy is flawed, because open source software is designed to be used and improved upon by the people who do use it. If nobody takes the time to do that, then of course there will be a lot of half-baked libraries out there that are maintained by only one person who doesn’t really have the time to do it properly. I’m not saying that there should be no standards of judgement, but what OP is doing is a lot like complaining that a friend baked you a cake for free. Maybe the cake wasn’t good, but instead of telling them what they could do to improve the next time they bake something you just complain to all your other friends about how that person shouldn’t ever bake anything again and how your free cake was just terrible. It doesn’t make you entirely wrong, but it does make you a dick. 
Hi! New here... just started chapter 1 of “how to think like a computer scientist”. Yippee!
I hesitated but what the hell. Python is multi-paradigmatic for a reason. It is not Java. If you need to write in OOP style you should switch language because, frankly, Java or C# are more convenient. They provide far better encapsulation with all their private, public, static keywords. You will even get much better support from your IDE. OOP leads to tight coupled and pretty complex and hard-to-test codebase. In Python, with its dynamic nature, is pretty hard for IDE to decipher most advanced objects for you. One should understand that Java or C# are OOP by design, meaning that you have no choice but use OOP. Python has modules and functions with many functional goodies. Not to say that objects programming in Python has nothing in common with those languages (Java or C#) as Python origin is quite different. 
This is quite a good idea, you know. But the english really needs an upgrade. Props for the idea, though =)
Probably the best explanation I've seen.
I work in Java and love diving into the low level. What you have said is pretty spot on. Only things I would add. PyPy is written in a subset of Python called RPython. RPython is to Python as asm.js is to javascript... somewhat.. I mean, RPython isn't as restrictive as asm.js is, but the motivations are the same. That is, take away the things that make it hard to go fast. The JIT step you mentioned above is basically about changing over code execution from the interpreter to compiled code. Basically, the interpreter needs to do a lot more CPU work per line of code. It isn't just a single contiguous block of assembly being executed. Once the JIT runs on a method, you end up with a contiguous block of assembly. Now, the interesting thing is that the JIT uses statistics of previous calls to the method to inform it on how to optimize the block of code. You still have to check your assumptions that inputs to the functions match the types you expect them to match, but once you pass that gate then you are free to run through the fast path. Almost as important, if those assumptions are constantly violated, the JIT might chose to "deoptimize" a method and fall back on the interpreter. Also somewhat important, there are usually "unoptimizable" things you can do in your methods. It is hard to say what those are as they change depending on the state of the JIT. But, for example, in javascript and the V8 engine adding a "throw" or a "try/catch" into a method would cause it to be unoptimizable. This is why it is generally important performance tip, for the sake of the JIT, to keep your methods small. You decrease the likelihood and the impact of violating one of the deoptimization rules. I could go on, but it is really a fascinating area of research. A lot of these techniques started with the Java Hotspot and spread elsewhere. I believe current state of the art is something like having multiple layers of JIT. In fact, I think the interpreter is gone altogether and now there is basically a very fast and right first pass followed by a much slower to run JIT that is ran against commonly called methods. As another aside, All of this is why it is so important to have warmup code in your benchmarks. The optimizer might not kick in until you ran a method for 2 seconds straight or you've done 1,000,000 invocations. So many people get this wrong when writing benchmarks.
If you've already passed the technical interview, the senior dev is going to try to ascertain what it would be like to work with with you. This can fall into two overlapping categories - tooling and social skills. Tooling is software engineering tools that aren't code - SVN, basic sys admin knowledge, OS stuff, networking stuff (a new hire who can't figure out simple ssh / port forwarding might be annoying to work with even if he's a great coder, etc). Social stuff is working with a team, are you friendly, are you fun, what kind of stuff drives your work enthusiasm, etc. Be relaxed - you've passed the hard part, now they want to know the whole you (could I spend 4 hours sat next to this guy on a plane ride?), but make sure you have some good questions lined up. A good one is "If I where to start on Monday morning, what would I be working on?" Good luck!
Oh, it must be specific to the program I’m using. A label is just, well, a label for a new line of code. When I say “jump two” my game would jump to a label called two and start running the code from there on.
Mostly I'm enjoying holidays, but in the midst of that I'm working on documentation for [one of my open source projects](https://github.com/lmcinnes/umap). It's not as fun as coding, or trying out new ideas, but it is far more important than either. Good documentation can make all the difference for a project.
Would this be an accurate ELI5 of the whole thing?: The Python language is a specification which describes how the language should behave - not how the language should be implemented on a lower level. All higher level languages need to converted into instructions the machine can understand. In CPython, the Python code is converted into C code then into machine code. In PyPy it goes from Python directly to machine code. 
http://lxml.de/lxmlhtml.html#forms
I'm not sure if you are legally authorized to work in the U.S. or not but it's worth a try https://lambdaschool.com/
Unfortunately after applying it tells me the 0% option is only available to US citizens or permanent residents, thank you anyway though.
If you work with databases. An object is analogous to a row of data. A row of a table is ana logos to an element in a list. If you ever have to make lists of related sets of data, classes and objects are commonly used. 
Working on a website to make music videos. URL: https://memeweaver.tv Purpose: Make music videos in seconds. Select clips, provide youtube URL for audio and hit submit. If you login you can upload your own clips or import them via URL. Technologies Used: Full AWS serverless. Python backend. vue.js front end Feedback Requested: Any feedback appreciated, design, ux, bugs etc. Comments: Here is an example showing the types of music videos you can make. https://memeweaver.tv/#memeweave?id=4ebfd85682684a08b919a1c7798ff299
Didn't know I was downvoted. Gonna take my words back then, save them for myself from now on. Thanks.
I too tend to allocate most of the essential functional complexity of my application to functions or coroutines. There is nothing wrong with this and much that is right. Viz. testing and interface transparency. I view classes primarily as a way of controlling state transitions; hiding state that can be easily abused, or as a means of communicating an API to another developer, so I use classes much less frequently than I do functions; but they still have an important place in your toolkit. 
Go for classes if u need OO features
Remember r/place? I finally got some time to go through the publicly released datasets and plot some cool (hopefully) visualizations with `matplotlib`.
thank you for your reply! Im not sure if this will be a true personality assertion interview. The technical interview was pretty basic: 45 minutes to write a flatten function and a tree node class with a traversal function. I feel, since they want to see my local environment, they'll ask more in-depth technical questions. what do you think?
yeah.. the “depending on your code” bit is what OP is asking about. python is still turing complete without classes so saying dont use them unless you need to is kinda silly.
getting myself setup... Pyton+opencv+Tensorflow+Keras 5 .. for neural network
Good work. `os.system('clear')` works on Linux, so on a Windows 10 machine where I tried this script, I changed it to: the_system = platform.uname()[0] if the_system == 'Windows': os.system('cls') elif the_system == 'Linux': os.system('clear') Then, it worked without any error message. In `print_welcome_msg()`, there are six calls to `print()`. They can be reduced to one. It took more than a minute to crawl one page. I thought it's because of Python's `html.parser`, but then I tried lxml's HTML parser `BeautifulSoup(html_text, 'lxml')` and it took about the same time.
Probably not. CPython is the reference implementation for the Python interpreter and is written in C. Pypy is a JIT Python interpreter and is written in RPython, a restricted subset of Python. Neither translate python into machine code.
Thank you, Sorry for the trouble. I just started learning python. So far I am enjoying the learning process. Is their any recommendation to learn more about python?
Right, even if you don't factor in all the embedded software. It's probably more like 0.1% or something 
Working on a Flask app that can control my LIFX smart bulbs. Already got basic features working(turn lights on/off, activate Christmas colors, and reset lights to a standard white color). I got tired of pulling out my phone at home anytime I wanted to change settings on my lights. 
Well I mean it probably could, but it would be some work.
It is certainly more than possible. Depending on your setup or may be more or less trivial. There is [documentation](https://ipython.readthedocs.io/en/latest/install/kernel_install.html) on the IPython kernel docs for how to get 2 and 3 side by side. I mostly use conda to manage my python installs. In that case you can do: conda install nb_conda to get Jupyter to recognise each conda environment as a separate kernel automatically. Getting Python2 and Python3 working is then just a matter of making appropriate conda environments.
No offense, but he explained correctly why it died and you fucked around with it as a naive highschooler.
Sounds fun -- I look forward to seeing some code to work with the data and generate plots. I'm sure there are a lot of interesting little sub-stories to tell.
Don't be silly. It'd be more like this: "These Obama libraries are terrible, just sad. I have the best code. My code is fantastic. Top notch. It's sad that Obama had to write such terrible libraries. #MakeCodingGreatAgain"
Yes there is a lot of cool stuff hiding in that numbers. I'll possibly write a Shell script as well to pre-process the data easily
I would add here that the set of bytecodes is largely identical (with 3 differences I think, although maybe some of them got ported to CPython), but the way the bytecode is interpreted is very different.
Don't have the book. But I think this might be a case of paralysis from analysis. You might be overthinking this task (it'll happen). I think the task is literally just to play with the commands in the Python console and see what they do. I could be wrong (again, don't have the book).
&gt; That is, take away the things that make it hard to go fast. Not hard to go fast, but hard to statically compile.
I am currently reading a book on how to program in Python. About half way through. Learned about how strings work with Python etc. so just the basics so far. I've programmed in vb.net in the past but wanted to learn again and learn something more useful/user compatible. All is going good so far.... print("hello world")
Cpanel Backup Script, if I recall. My shared hosting provider had decent backups on Cpanel for various things, but you'd have to go to the individual pages and download the items one by one. The script would essentially take in a CMD arg for a task (e.g. daily DB, or weekly DB, Alias, etc .. so I could control it via Win Task Scheduler), login to the Cpanel, and loop over the list downloading to an appropriate directory. It'd then perform a cleanup (on success) of old files. 
A lot of things, by biggest was a motor testing device. Essentially, you'd arm the device, hit a button to start the test, it'd do a countdown (complete with lights/sound), and then run through the test. Even has a big red emergency stop button. It'd output data points along a thrust curve for: - Motor Thrust - Motor Amperage - Motor Voltage - Motor Temperature - Ambient Temperature - Volt/Amp reading at the source.
Good stuff. The list is such an important data structure that every Python developer should know a little about its underlying implementation. Thanks for sharing!
https://www.humblebundle.com/books/be-a-coder-books Referral free link.
If you find yourself reusing a set of decorators together often, then you can simply create a new decorator that applies all those decorators.
It probably installed to a directory not in your path. For me, it installed to ~/.local/bin/snowmachine
I'd even go further then that -- to be fully pedantic, there really is no such thing as an "interpreted" or "compiled" language. After all, languages are just strings with rules that dictate how those strings ought to behave. Rather, it's just that some languages (like Python) are commonly interpreted and some languages (like C) are commonly translated/compiled to other languages (like assembly) which are then interpreted (in the case of assembly, typically by an interpreter implemented in hardware). In any case, while Python is usually interpreted, there do exist some Python compilers (such as Nuitka) out there.
Ah yes, that works. Cool, thanks :)
I have it running without anaconda. Unfortunately I don't remember how exactly I did that since I was setting up my environment months ago and.
https://github.com/tg12/IG-Index-Scalping-Scraping-Bot
You need to add cudnn to PATH as well as CUDA. 
Probably, but Anaconda is seriously worth the initial effort, it will save you effort in installing all the other packages.
Try running this: ``` python2 -m pip install ipykernel python2 -m ipykernel install --user ```
In the actual jupyter notebook interface, when you create a new notebook, you should be able to choose between python2 and python3 for your kernel!
This rhymes when read in german
Ah, interesting! I didn't realize that was a a thing TBH because all the JITs I had gotten familiar with were method JITs. I don't know if you know, but why did PyPy decide to go with a tracing JIT over a method JIT? Reading up on them, they seem more complicated to make with a higher overhead for the JIT. It looks like firefox at one point did a tracing JIT but eventually abandoned it for a method jit.
Python is not an interpreted language, it is just a language. How it is ran is irrelevant in the context of the language itself. CPython is interpreted though, you are correct.
There is no *should* in programming. That's a programmer's lie.
we would like to deprecate numpy.matrix as soon as possible. But the biggest obstacle currently is that SciPy.sparse module is heavily using it. Once we handle that numpy.matrix will be removed.
Yeah, but Python is not interpreted nor compiled. CPython is an interpreter for Python, and there exists compilers for Python too. I misworded my comment I guess.
I want tot use python for sentiment analysis for the cryptomarket. Nog just the natural language toolkit (lexical based) but with neural networks (LSTM). For a starter use the twitter and reddit API, then assign a sentiment score per 5 min. Maybe scrape other websites in later stages.
Well, I can recommend "Core Python Programming" by Wesley Chun. It's what I read when I started learning Python and it's filled with important nuances and easy, medium and hard exercises. However, I had 2-3 years of experience in programming in general by then, and the book is definitely not for a beginner programmer, so take that as you will.
I made a simple chatbot with fixed amount of lines to say. In future I really want learn how to create real AI!
Hej all, author here. The world darts championship is taking place, good timing to publish my first package! Let me know if you have any tipps on how to improve (e.g. is the readme simple and clear; did installation work; does the program work?)! Thanks :)
i don't agree with this. you're tightly coupling your application with your log analysis tooling. instead of writing directly to your ES instance, it's better to just log with a format that can be parsed by ES and have logstash or filebeat do the forwarding. aside from decoupling, you also won't run the risk of blocking in case the elastic search server is experiencing problems
Nuitka does most of it, and cython can be uses to create binaries if memory serves.
If you reall want to do this, first off, go for it! With some deterination pratice and time you will. An eye on the bigger picture is great! Use that view to come up with a plan then break the project into smaller parts. Others have suggested some great resources. Seriously think about storing this data in a real database. Look at sqlite, built in simple db. Do the data storage right from the beginning. You will thank yourself in a few months. Think about what would happen if your xcel got overwritten by another user.. Bye bye data. Use a database. It's really not hard and is infinitely more flexible. You can tie that to a simple web front end or generate excel sheets from there too. Just dive in and start learning. /r/learnpython is a great sub for help and ideas too, use it! 
The tutorial on the website is good enough really
&gt; I don't know if you know, but why did PyPy decide to go with a tracing JIT over a method JIT? Pretty sure the decision to go with a tracing JIT dates back to the time when plenty of us thought tracing JITs were quite possibly going to take over the world, following on from the work on Java. That said, I could be wrong; my lurking around the PyPy community hadn't started back then. :) &gt; I don't know if you know, but why did PyPy decide to go with a tracing JIT over a method JIT? Reading up on them, they seem more complicated to make with a higher overhead for the JIT. It looks like firefox at one point did a tracing JIT but eventually abandoned it for a method jit. If you can stay on traced paths, you should end up with generated code that's more efficient than with a method JIT (because you eliminate all calls), essentially getting a fully inlined loop. If you can get the transition between trace JIT and method JIT correct, you should be able to have the best of both worlds, but such a combination is very much in the realms of [citation needed], AFAIK. :)
x, y pairs are provided to `create_polygon`. To *mirror* top-left star into top-right position you should keep odd arguments the same (same y) and add 250 (I think...) to even arguments (different x) from starting `souradnice0`. For the bottom left star do the opposite, keep the x values the same and add to y values.
You know you installed python, and that gave you a python.exe PyPy is just another python.exe except it works quite differently than the main one.
Making a mock social network so I can get comfy with docker, kubernetes and microservices.
I'm pretty new to python, but I found a use case I wanted to fill for myself, and figured maybe other people would want it to. I wanted to write a script/program that generates a random, solid color image, sets it as the desktop background, and themes terminal windows appropriately. I was originally just going to use pywal, but apparently ImageMagick can't generate a suitable colorscheme for a solid color image. I was originally just gonna write a script but after looking into how pywal does it I might need to get a bit more in depth than a simple script.
This is really cool
1: /r/learnpython 2: that's not how you increment a variable
For me its linked with ArcGIS - while Desktop and Enterprise are still on 2.7, we'll stay there
3: when posting to /r/learnpython, post the entire script (prepend lines with four spaces to keep the formatting). Specify the python version you're using. 
and what?! don't leave us hanging
`list_ass_slice` lol. I'm not old enough to be mature about this
I didn't think about it that way - you're absolutely right
Depending on the services, the method you describe would also provide for the ability to do long term log storage with things like Splunk. +1
&gt; wouldn't a bunch of people using your strategy break the strategy I think the users of the software *are* investors. I imagine the idea is to reduce trust required from investors.
&gt; There are very few good ideas that no one had before "An economist found a 100 dollar bill on the pavement. He didn't pick it up because by the efficient market hypothesis someone else must have already picked it up." &gt; you are better off making money of it yourself This depends on one's risk appetite, the ROI and access to funds. Hedge funds have investors for a reason...
Money and/or time. With established companies with a Python 2.7 code base, programmers have managers who have managers. Somewhere in that chain of management, some manager has to make a decision between updating from Python 2 to Python 3....or get new features. Updating code from Python 2 or 3 is meaningless to managers, doesn't get seen by customers, and is rarely interesting to investors. Unless the update to Python 3 = Money, it's not going to happen. Over time, companies who start with Python 3 will slowly become the majority. 
Use your OS's system scheduler. On Linux and Mac, it's called `cron`. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
(I put this on the blog post comment (which is really on HN) but repeating here.) Hmm. You mention having &gt; ...Another reason to preallocate Python lists when possible. But how would one do that? I mean, you could do `list(range(10000))` which would in a sense pre-allocate a 10000-element list. But, does the `list()` operation look ahead and make a list that size at once, or does it just keep appending the next item from the iterable, going through the 12% expansions multiple times? Also, I can't think offhand of an iterable that would generate N identical "empty" list items. Like 10000 zeros or 10000 Nones. Anyone?
Note that `cron` does not exist on modern Linux systems. Now you use `systemd.timer`.
I'll shift to 3.7 when it came out.
Will this only work when my computer is running? If my computer is not running will it run the next time my computer is on? I am looking for someway to have my program run even if my computer is powered off.
What OS are you using? 
I ported our code from 2.7 (with lot's of 2.6isms) to 3.6 "secretly" and just opened a PR when it was done. Was vindicated after merging because 3.6 allowed us to drastically increase our apps performance (thanks async/await!) and we need to run a lot fewer servers now, saving us thousands of dollars a month. Sometimes it's better to ask for forgiveness than permission, but YMMV.
I can not think of a single practical use case for IoC in Python projects. users = Users(database=core.sqlite) photos = Photos(database=core.sqlite, file_storage=core.s3) These two lines can be implemented directly in plain python **without any framework support** 
Ah. No. You can't run a program when the computer is off. You will need to find another computer to run this on that's always on. You can rent time cloud time with services like Digital Ocean or get a Raspberry Pi or something that you can keep permanently powered on. Cron and other system schedulers do support running a program on boot, if that's of interest. Your computer may have a BIOS setting that powers it on at a certain time. 
myFileList = os.listdir(myPath) returns a list of names in myPath. This is a list of strings. Later you try to assign a value to myFileList[i][i]. You are trying to assign a value to the ith character of the ith filename in the list. In Python strings are immutable so you are getting an error. What you are really need is something like this: my_file_info = [] # create an empty list for file_name in my_file_list: # iterate over the file names # append a tuple of file_name and file_length to list my_file_info.append((file_name, read_length(file_name)) More pythonic is to use a list comprehension: my_file_info = [(file_name, read_length(file_name) for file in my_file_list] I encourage you to check out the official [Tutorial](https://docs.python.org/3/tutorial/index.html) where you can get more information on [datastructures](https://docs.python.org/3/tutorial/datastructures.html) like lists and tuples. P.S. Lists and arrays are different.
So you deploy your production application using docker compose - is there any reason you don't use the same mechanisms for your local machine? When working in your local development, virtual environments would certainly go a long way, especially in terms of the reliability of your local testing environment. Most production IDEs have the ability to run in discrete docker containers. Ideally you would rev a docker image whenever the environment requirements change for your deployment so you should be deploying and testing code in that image while you're still in local development.
Then you should get a vps. I setup a 5 dollar a month vps with digital ocean with 2 scripts running the same like you. How important is it? Is it worth 5 bucks a month?
[0]*100 or [None]*100
I know what a label is. Python doesn't have them. If you want labels use something like, you know, perl or FORTRAN or COBOL or some shit like that. Assembly languages have labels too and so does C.
I have tried using Popen, but keep getting this error. "ForkingPickler(file, protocol).dump(obj)" also 
Look into the `multiprocessing`, `threading` and / or `subprocess.Popen` modules. If you have more questions try /r/learnpython. Be sure to show them a [Short, Self Contained, Correct \(Compilable\) Example](http://sscce.org/). Also, include which version of python and what OS you are using. 
I am using macOS
Hmm im not sure if I want to spend 5 dollars a month on it. Do you know of any free/cheaper services?
1. Use `concurrent.futures`, it's a much nicer wrapper than `multiproocessing` or `threading`. 2. You can't pickle bound methods, i.e. methods of classes, so you need to feed to t he executor's `submit` normal functions. 3. Make sure you enclose your main script in a `__main__ `block as Windows doesn't have fork and needs additional protection when multiprocessing: if __name__ == '__main__': # Script 
Maybe I could have it run at multiple times during the day that way hopefully my computer is active during at least one of those periods.
Algorithmic live stock trading. Had the day off today so I was able to polish out the kinks with live data. Tomorrow I’ll let the program paper trade while I’m at work to double check that I haven’t missed anything and everything is running like it should.
Why not refer the sidebar? 
Python is, strictly speaking, a language specification. That means it's a book of rules of how a python interpreter should behave given particular inputs: the actual implementation of those rules is effectively left as an exercise. The python software foundation provides (and endorses) executables for one particular implementation of the specification - because this is written by the same people as write the rulebook, it's by far the most up to date, well-resourced, and popular, and as such is really the reference implementation. It's written in C/C++, and as such is referred to as CPython. That's what you download from python.org or through package managers. However, lots of other implementations (ways of generating behaviour in accordance with the python specification from python code) exist. Jython runs in the java virtual machine, IronPython uses the .NET framework, Brython runs in the browser. PyPy is an implementation of python written in... python. Technically a restricted subset of python called RPython. It has some nice features and is quicker than CPython in some instances, but it's harder to interface with some other CPython libraries.
My brother and I wrote a bot that would scrape a gaming website for our other brother's username. It would then send us emails with the contents and context of his messages. He didn't know we knew his username, so it made trolling him on the forums and irl very fun and easy. Taught me all kinds of things like bs4 and requests, not to mention some basic auth and web scraping methodology. It eventually got banned, that is when I learned about rate limiting my https requests. Oops.
Can you afford a one time $20 investment? If so buy a Raspberry Pi Zero. You'll need a micro SD card and a USB charger with mini USB too, but you can probably scrounge those. Then just set it up in a dark corner and let it be your own private cloud server. You'll find a lot of uses for it as time goes on. You can control it over wifi (ssh). I think macs support sftp (file transfer over ssh) by default, so it will be very easy to move files between your computer and the Pi. For an extra $15 you can get the standard Pi, which will support a monitor and keyboard down the line (also handy for setup). Make sure you change the password, because there are some bot nets that search for Pi's that use the default password. 
DI is good in case you have much nested instances of different classes creations. For example, your big project have config, which helps you to tune your app. You have class A, which creates instance of class B, which creates… and so on. Lets say, your A don't need config at all, but some "nested" instance need it. Without DI you can make it global somehow or pass it through all classes chain. But with DI you can add `config` to init method of classes, which really need this config, and don't blow mind. In case of config it is ok to make it global (since it immutable and single at common), but in case of factories you need manually resolve new dependencies of functions/methods. You add some parameter to factory? Now you need to add it in all calls or add a global. Second is DI-like, but with your hands.
That seems like an interesting way to do it. I think it would be a good learning experience to get my hands on a Raspberry Pi anyways. Thank you so much for your help!
Python3 is an abomination. The world is waiting for Python 4.
I'm not saying you shouldn't pick 100 dollar bills off the ground. I'm saying I will not pick every piece of paper off the ground hoping I will get a 100 dollar bill. OP should go and implement his idea, I encourage everyone to be creative. I'm just skeptical that his, or anyone's idea is good until I see results or something to convince me. Hedge funds are based on trust and a long history of success for a reason ... ;)
Maybe you could look into www.pythonanywhere.com got no experience with them tough. Just did a Google search. 
My impression is that tracing JITs also have a lot of advantages over method JITs *if* you're doing PyPy's weird meta-interpreter trick. A tracing JIT doesn't know or care how your code is structured, it just cares what it ends up doing, so it automatically "sees through" weird abstraction layers. PyPy's meta-interpreter trick is that they didn't actually implement a JIT for Python, they implemented a JIT for a quirky and more restricted language (RPython), and then they implemented a Python interpreter in that language... but the end result is that when the tracing JIT watches that interpreter go, it ends up doing the same thing as a real Python tracing JIT would.
No one trusts a program they install, give their bank credentials to, and it buys and sells things automatically on their behalf
oooh, nice! or, `[None]*100`. The question remains, does the `*` repeater look at its right-hand argument to pre-allocate? It should...
&gt; But with DI you can add `config` to init method of classes, which really need this config, and don't blow mind So why not a simple `ConfigMixin` then?
&gt; does the `list()` operation look ahead and make a list that size at once For `list(range(...))` I believe that it does preallocate the correct size, because `range` provides a [`__length_hint__`](https://docs.python.org/3/reference/datamodel.html#object.__length_hint__) – try `iter(range(10000)).__length_hint__()`.
If that case isn't special cased it would call the list.__mul__(self, 100) so it might cause 1 extra liat creation. But I bet it is special cased
I have just finished learning the basics of Python and I am hoping to start working with Pygame this week. 
Mixin is ok, until you need to pass filename of config, which you take from argparse, for example. In this case you need to have filename in every method (or in init pass filename via super), where you need config. Second problem is that you can't add mixin to plane function.
For the specific example we discussed here, if you need to handle IO all over your code base you are probably doing it wrong. How do you even test that pile of mess? IO should be narrowed down to only a very few entry or exit points. There's no need for DI there. What other use case can we come up with for DI?
look maybe at aio as an alternative and queue
Don't get you about io. Config is created as singletone, so the real read from file done once, at first request of config.
I love this! Thank you!
Thanks =) If you make an account you can upload your own clips or just link them using the direct URL to any gif/webm/mp4 on the internet. Any clips you add are added to your private library and you can use them in your music videos =) 
How did you do yours secretly? Did you just overestimate time on tickets and use the remaining time to port? Lunchtime? At night?
Why do you hate 3?
I agree (pedantic point: what about software like this: https://www.auctionsniper.com/ for ebay). It's probably not a *good* realisation of a fund with investment, but it is nevertheless is equivalent to a fund with investors. 
Nope, you will just have to stick with flask. You're welcome. 
The linux distros have a lot of power here. Stop shipping with 2.7 and instead ship with 3.5 or 3.6. Ubuntu is already going that route. Pypy also has a 3.5 jit now too(thanks mozilla). It is about the runtimes as much as it is the syntax.
Super insightful! I'm just a coding monkey so I don't really understand the whole sales process, but this definitely makes a lot of sense.
You could schedule a free Kubernetes job on a free IBM cloud instance. :) Open Whisk? Lambda? Buy a RaspberryPi and hack at it. Some nice options!
There's a sidebar about sorting, which is basically done by finding runs of sequential items and merging them. This is similar to how sorting was done on a tape machine back when I started programming: * The machine has 3 tape drives. * Records in random order exist on one of the tapes, call it tape 1. * Tape 1 was read and created runs of sequential records on tapes 2 and 3. Here's the trick: the number of runs on the two tapes had to be *consecutive numbers in the fibonacci sequence.* There must have been some synthetic sequences created for this to be the case; I never found out how that worked. * Tapes 2 and 3 were merged back onto tape 1 until the tape with the shorter number of sequences finished, e.g. the fibonacci sequence is 1 1 2 3 5 8 13 21 34.... Imagine tapes 2 &amp; 3 have 21 and 34 sequences respectively. 21 sequences are merged onto tape 1, leaving tape 2 empty and tape 3 with 13 sequences remaining on it. * Now tape 1 (21 seqs) and tape 3 (13 seqs) are merged onto tape 2 to create 13 sequences, leaving 8 on tape 1. * Wash, rinse, repeat, to end up with a single sequence. The sidebar even mentions Fibonacci in passing. 
I use Heroku. It's free and super easy to set up if you're familiar with Git. Otherwise PythonAnywhere is another good free alternative where you don't need to know Git. If you're willing to pay then Digital Ocean is great.
&gt; Config is created as singletone That's your global state right there.
Where are you storing all the data?! Seems like you'd get a lot of traffic! Actually, how are you rendering the videos? Is there a GitHub page?
Building my new site in Django. First step: develop Stockholm Syndrome so I stop fighting with it, lol
Everything is stored in S3 and delivered with cloudfront. We render tiny thumbnail versions to display on the page to limit data transfer, and in the backend we render with higher quality versions of the clips. We do not have a lot of traffic, but it can handle tens of thousands of concurrent videos from our testing. We just started posting this around a few days ago. Most people visit the site and close it before even realizing what it does =( Hopefully we can get to the point where we have a large bill! No github page at the moment, code is a mess and its just two of us pair coding the whole thing on one pc.
Hi first /r/learnpython second [my TOP Python Books](https://py.checkio.org/blog/top-5-classis-free-python-books/) :)
I think he's joking without the /s
&gt; some languages (like C) are commonly translated/compiled to other languages (like assembly) which are then interpreted (in the case of assembly, typically by an interpreter implemented in hardware). Calling a microprocessor an interpreter is a bit of a stretch
They made a jit for interpreters written in rpython; the rpython itself is statically compiled and not jitted.
I would be very interested if you could write a compiler for Python that doesn't depend on a runtime library to do heavy lifting, like C# The largest barriers to compiling Python are the duck typing system and introspection; how are you going to maintain functions as first class objects?
I agree that my definition of what constitutes an "interpreter" is somewhat unusual, but I'm not sure if it's really that much of a stretch. An interpreter is some thing that accepts some string that matches some language as input and executes it. Does it really matter if that interpreter is implemented using hardware or software (or something else)? Why draw the line there?
We use async stuff with 2.7 ... Am I missing something here or how can 3.x make things much more efficient or faster??
Thanks. 
&gt;Sometimes it's better to ask for forgiveness than permission try: port() except Fired: look_for_new_job()
If you're using an Intel x86 processor from the last 20 years, the assembly is literally interpreted by the processor: each x86 instruction is converted in the processor to a series of [µ-ops](https://en.wikipedia.org/wiki/Micro-operation). These smaller µ-ops can be scheduled at a finer level than the original instruction. Additionally, new processors can retain the older instruction set (and thus run old code), while having a different internal µ-op instruction set that maps better to their architecture.
**Micro-operation** In computer central processing units, micro-operations (also known as a micro-ops or μops) are detailed low-level instructions used in some designs to implement complex machine instructions (sometimes termed macro-instructions in this context). Usually, micro-operations perform basic operations on data stored in one or more registers, including transferring data between registers or between registers and external buses of the central processing unit (CPU), and performing arithmetic or logical operations on registers. In a typical fetch-decode-execute cycle, each step of a macro-instruction is decomposed during its execution so the CPU determines and steps through a series of micro-operations. The execution of micro-operations is performed under control of the CPU's control unit, which decides on their execution while performing various optimizations such as reordering, fusion and caching. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
We don't do estimation on tickets, instead each Monday I say what I accomplished last week and what I will be working on this week. So I just ported everything and got the test suite to pass after about a week of working on it on the side (I still did other tasks). This was a 50KSLOC application. Took about a month of testing on our staging environment to get it merged to master.
You absolutely can do async in Python 2. We are using tornado, but didn't really use it's async features to the fullest extent, because of a lack of 3rd party tools. After switching to Python 3, we replaced the event loop with the asyncio event loop, which allowed us to use things like aiobotocore (we use lots of AWS resources). Doing so allowed us to switch a lot of blocking/threaded code to asyncio. Also, async/await is a lot nicer than Python 2 style async code. So far we have a 4x speedup of average response times, much less variance in response times, CPU/memory usage also way down (but harder to compare for a number of reasons).
We're hiring (and on Python 3 now, after my success the other teams also ported)! (Must be willing to relocate to Tokyo)
This is not an answerable question. What application? Does it run (or embed) a Python interpreter? What are you attempting to do?
1. Read the sidebar. Recognise your error. Post future questions to /r/learnpython 2. Describe your problem in more detail. What are you trying to accomplish? Are you asking for information on how to create a GUI around your existing code? Or are you trying to embed python into an existing application?
Why to 3.5? 3.6 has quite a few convincing points that make it much more worthy.
Better adoption of PEP 484 type annotation comments in Python 2.7, along with mypy (strict options) usage, helps a lot in general. Makes maintaining your Python 2.7 more easy, as well as a step of translating over to Python 3.5. Warning: typeshed is relatively incomplete, esp for third-party packages, I need to maintain a local fork of it for my projects.
Nice! I'll have to look into these (aiobotocore and asyncio) and also into the possible memory reduction.
&gt; my company's codebase is in 2.7, but some of it has been shifting to 3.5 Why not 3.6? &gt; What specifically do you think will shift the masses over to 3.5 Nothing, now there is 3.6 with f-strings and other goodies, and 3.7 is around the corner with guaranteed dict ordering, etc. 
The `key` parameter specifies a function that takes an item from the list and returns a value to be used as the sort key. In this case it's returning the number of unique letters in the string, since a set does not allow duplicates, so the length of a set is the number of unique elements. By the way `list(x)` is redundant and wasteful. The `set()` constructor takes any iterable, and a string is an iterable that yields letters, so there's no reason to first convert it to a temporary list. 
You always work your way from the innermost function call outwards. First, you have to understand what a lambda is: an in line function, essentially. You could replace the lambda with an actual function name and write the function somewhere else if you wanted. Lambdas expect 1 argument and 1 return value (although there are way around this), and you don’t actually “return” anything in a lambda, python knows how to handle the returning. I’m the built in sort function, the key argument is a function, and that function is called for every element in the list you are sorting, and python uses the return value to actually do the sort, so you can implement your own custom sorts (like this one!) With that out of the way: The list(x) converts the variable x to a list. Since x is a string, it makes an array of characters. Then, set is called on that list. Sets are, very simplified, a unique list. So a list with [1, 1, 2, 2] would be a set (1, 2), since the elements must be unique. Calling set on a list removes duplicates. Then len() is called on that set. Since the set removed duplicates, this is essentially the number of unique characters in the original string. Since the last function cal in the lambda is len(), python will use the result of that len() to sort the list. Elements of the list with the fewest unique characters will be at the beginning, and the ones with the most unique characters will be at the end.
&gt; I can not think of a single practical use case for IoC in Python projects. Well, I think that IoC is needed for most of components you wanna reuse, because reusing of something requires it to have certain flexibility. Let's look onto `django.contrib.auth` with it's user model, password validators, etc... - all these things are configurable using `django.conf.settings`. It's typical example of what IoC is about. However, the way IoC is achieved might be very different - and it should not be only dependency injection pattern. What I'm talking about could be stated in two simple points: - IoC (inversion of Control) is a principle. - DI (Dependency Injection) is a pattern that helps to follow IoC principle. Talking about practical use case I would say that it's just one more way of how django settings could look like.
I always thought they should have bit the bullet and just made python 2 to 3 interpreter built into 3 that allowed you to use 2 inside 3. it would slow the performance of the 2 portion of the code and you could give optional warnings or other hoops, but allow the mix. I believe I understand the reasons they chose not to do this, but I think it well passed the point where the balance changed. The fracture hurt the language greatly, and I think it would have long been overcome if people were just able to write new code in 3 and convert 2 to 3 for optimization over time.
Yes, but without passing config everywhere and some good features, which covered above. DI – is something like global container of your components.
Thanks bro, that's what i'm looking for 
Our core expertise is ROR and Python and we can work with you by allocating a fulltime developer to you who will directly coordinate with you through skype/slack/email. Please visit our site:- www.botreetechnologies.com The advantage of working with us is that you don't have to waste your time in finding the right developer for this position as we already have best, selected and trained developers with us who will work within the salary that you will pay the individual developer. 
I just found the video where I learned about the resources. It's [this one](https://youtu.be/KKQS8EDG1P4#t=40m50s) where he briefly explains the differences of the books. Good luck!
Ya maina so7ba
[removed]
Thank you very much 
Please forward your requirement to sales@botreetechnologies.com
While the NumPy section was pretty neatm I feel like the Pandas and Matplotlib sections were pretty light. Especially for Matplotlib where I'm pretty sure most people learnt it from incidental source code from graphs they saw and googling their specific problem. I think with Pandas, it should at least be mentioned that you can load a Dataframe from csv files. I'm pretty much a beginner of Pandas and I feel that's quite an important thing to know about it.
You are spot on. However, there are things like investment tickets that should be a regular part of your processes. New build systems, refactoring, porting to python 3, a new test suite, you name it. IMHO it speaks volumes for a company if it allocates some resources for investments. It means that they trust the product and make long-term instead of only short-term decisions.
This is utter garbage. The enumerated libraries have no relevance for web development. Scrapy.. wtf, zappa - no vendor lock in... really? Fucking tensorflow for web development? The person that wrote that piece of garbage actually knows what all those library are? I really doubt that.
**Nope**, i used both of them, and the difference between them it's not the speed but some syntax and some libraries, and i think the system you are using does not effect it , python still python , if you want to know more about this go to this link [over there](https://www.quora.com/What-is-the-difference-between-Python-2-x-and-Python-3-x)
I can recommend data school om YouTube. His course on pandas is great.
I do run the Flask based backend in the docker also when in dev (with code mounted into containers etc.), mainly because I want the DB running as well. But frankly speaking, for the control of dev environment, you pay the price of not being able to use all the debugging goodies of PyCharm. What IDE do you use that allow you to code/debug while running in docker? For the latter reason I prefer to develop the front end (Dash based) part of the application simply locally using virtual environment. My front-endy skils are not that great and I really need that debugger feature. This also means that, when in docker, I do not use virtual environment anymore. I read some arguments pro and cons, but given the mess I have with conda env and pipenv I just decided not to use any. Docker, imho, provide sufficient isolation.
Use digitalocean.com VPS by 5$ monthly, or use RUUUSSSSIAAAAANNNNNNN vps 1.5$ firstbyte.ru
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] [I uploaded the CLI tool I use to manage small protocols of ideas and meetups](https://www.reddit.com/r/programming/comments/7med9v/i_uploaded_the_cli_tool_i_use_to_manage_small/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
The problem here is the definition of "jitted" :-). It's true that they're not JITting RPython in the sense that you can load new RPython dynamically at runtime. But what the tracing JIT traces is the RPython code; basically what their JIT engine does is make a fixed RPython program run faster by dynamically specializing it for the particular executions it actually makes at runtime. That's *how* you can take an arbitrary piece of code that happens to implement an interpreter, and automatically generate a JIT for it without knowing anything about the interpreted language. Compare this to a method JIT, which at the very least needs to know enough about the interpreted language to know what a "method" is :-)
First of all, congratulations on your secrect job! :) How are the libraries on 3.6? Is there anything big I should worry about when migrating? 
The mistake was made when it was decided (by PSF, I think) that the python binary should still be Python 2, and that Python 3 should be python3.
This is generally a good idea, but why not go with an [existing metadata format](https://pandoc.org/MANUAL.html#metadata-blocks) instead of making up your own?
My favorite for scheduling tasks http://apscheduler.readthedocs.io/en/3.0/userguide.html
Many a times you quickly learn the basic of a language and then you don't know what next. Once you reach that stage, I would highly recommend the book : [Python Tricks by Dan Bader.]{https://www.amazon.com/Python-Tricks-Buffet-Awesome-Features-ebook/dp/B0785Q7GSY/ref=sr_1_1?ie=UTF8&amp;qid=1514373790&amp;sr=8-1&amp;keywords=python+tricks} 
I believe so yep. They’ve done a lot of work since Python 2.7. If we’re talking cpython at least. Afaik one of the fastest ways you can run some stuff in Python is with numba which I think is python2 specific. Could be mistaken.
Yes, a lot of built in functions are faster in python 3 (as to be expected since stuff gets optimized as time goes). More than that python3 embraces generators by default, which are much more efficient memory and speed wise. 
Stop using windows.
I wanted to use a format that would be invisible once the file has been rendered without using tool-specific syntax. At the time I started the project I did not find any metadata format that satisfies this constraint, whereas the use of HTML comments seems to be widely supported.
My company is in a similar situation, having a big codebase in 2.7. Plus we use 2.7-only dependencies and are in a middle of writing automated tests. I don't expect a move to 3 to happen anytime soon, as we're slated to update dependencies sometime in 2018, and a move to 3 could only happen later.
Fluent Python, Python Cookbook and Effective Python are frequently recommended here. I would personally recommend Sentex and Corey Schafer youtube channels.
Leave and never come back. 
&gt; Afaik one of the fastest ways you can run some stuff in Python is with numba which I think is python2 specific [Numba is compatible with Python 2.7 and 3.4 or later](http://numba.pydata.org/numba-doc/latest/user/installing.html#compatibility)
Cool ty
This would be good. I currently use openpyxl and win32com to interact with Excel. Direct support would be better.
I dont agree with you sir as python is a language with scopes beyond any programming languages, but in excel the data representation and data storage is so simple that for half of data analytics can be done just by using some siple tools. Both have there own pack and can dominate any other if they gets together 
are you me? haha
I tend to agree with you now. If a project has a hairy global state then it might need DI somehow. 
is you google skills slower than before? https://speed.python.org/comparison/
and well it works quite well!
I can't understand the comparison graph
I wrote [rwrtrack] (https://github.com/david-wm-sanders/rwrtrack) to allow me to better track my (and others) performance in the game over time. 
Maybe creating a list of ten elements all populated with 70 at start, representing initial probability of that number being included. Later in algorithm you'll find out which numbers and how many of them are in setup when respective values get the value of 100. Another list is a two-dimensional list (10, 8) initially populated with the value of 12.5 so every row sums 100 (as initially every number has equal probability to be included in "hidden" setup). Your first attempt is chosen randomly, and every other takes place depending on some rules you've created. Those rules could be tries to confirm a number, confirm the number at position, reject a number, etc. After every pass you repopulate your lists with brand new probabilities. The game is over when there are no numbers in them beside 0 and 100.
This book is awesome: https://www.twoscoopspress.com/products/two-scoops-of-django-1-11
r/learnpython, start with its sidebar.
Memory reduction is mostly because we can now "stream" stuff asynchronously in some cases where before the blocking code would load everything into memory. The biggest winnings were in CPU usage.
The only 3rd party library I had a problem with was the google api client. The issue wasn't py2/py3 though but that we were on an old py2 only version. There is a py3 version, but a lot changed and in the end, because we only use a tiny part and want it async anyway, I simply implemented it myself. It really depends on what you're currently using. 
I'm absolutely aware that I did stuff wrong while making this. I hope you guys won't kill me and point out the things I messed up. If you're feeling generous, you can fork the project or suggest changes! :D 
PyCharm allows you to deploy code into a docker container you specify by attaching to the docker daemon, then your code leverages all of the site packages found therein to ensure you're not missing dependencies, this also means that you're not going up any of the debug capabilities provided by PyCharm. I believe VSCode also has plugins that can do the same. There are also a few other told you could use like remote debuggers which create a tunnel back to your IDE, but they tend to get pretty "off into the weeds", I would certainly recommend the docker PyCharm route first.
http://lmgtfy.com/?q=github+cbir
Pandas inherits from NumPy, your overlapping circle chart is a little misleading in that regard
https://www.coursera.org/learn/machine-learning Start there, if you get lost you'll know where you need help and where you don't.
Do you mean the docker integration with PyCharm Pro? I was actually very interested in it and even took a Pro version for a spin, but I either failed to get it working altogether when docker-compose.yml is not in the same folder as Dockerfile, or if I get it working it would take it &gt; 10 min to spawn up all containers. Eventually, I just gave up and rolled back to Community Edition. Do you have experience with using PyCharm with Docker? Could you give it a go with this repo? https://github.com/sladkovm/docker-flask-gunicorn-nginx I would definitely pay for Pro version if I can simplify my development process. BTW, I'm on Mac and use docker machine.
Is auction sniper a fund with investors?
The new feature of Dicts having order ;)
IMO any introduction to matplotlib should point toward either the example gallery or end with the advice to just use stackexchange to figure out what you are trying to do. Otherwise it is very non-intuitive.
&gt; Must be willing to relocate to Tokyo Why? I've teleworked for the last 7 years at two different companies. Even when working on-site at my "home" location my co-workers would be at another facility.
This has been posted a few times over the last week.
Riot games has a pretty cool script in their client that allows you to report dumbasses who waste everyone’s time by cheating; it’s pretty intuitive and I use it whenever I get the chance. 
ah true true, I had that kind of freedom at a previous company. I'd be lying if I said I didn't miss it :( What does the S stand for in 50KSLOC?
To be so lucky to get to use something as modern as 2.7. I'm currently getting to use 2**.3**.
You can have intermediate knowledge of mathematics to get into Machine Learning as most of it is plug and play at this point. If you want a career in Data Science than it is important to understand the math behind the algorithms at some point.
What’s unclear about this? https://i.imgur.com/4urhVJA.jpg
&gt; time on tickets Where do you work that your time is managed on this granular of a level? Perhaps it's my industry, but I have a set of tasks I'm working on as long as they're completed my boss doesn't care the order I get them done. Which means I can flex my time as I see fit to work on stuff like this.
Aren't there wrapper modules for matplotlib that handle the arcana for you and which should be fine 99% of the time? 
adding documentation and issues/TODOs and maybe getting a few testers for a python command-line app to explore tensorflow's image classification elements. it is in my github at https://github.com/mariochampion/roboflow it s partly to get more familiar with google's machine learning library and i never made a command line app before, so i wanted to do that
This isn't a learning book. It's a best practice for someone who already knows Django.
I don't have time to vet your software for this process, but a quick google search shows that it is PyCharm Professional. https://www.jetbrains.com/help/pycharm/docker.html
The Django documentation is really good. The getting started goes through making an entire app. https://docs.djangoproject.com/en/2.0/intro/
I’ve got an impression that you’ve tried it yourself... my experience is that it is by far not as good as they promise.
Just wanted to follow up on this, I figured out a starting point and got going. It has become very clear that I will have to go back and significantly revise / refactor the program as I add functionality, do you have a git tutorial you recommend?
Not all companies are set up for it. And of course, there's always the real-world detail: convincing management.
We're small (sub 75 people) and the dev team is like 10 people of that, so I report to the IT director. He setup Jira for ticket management, which comes with a time tracking component. We are supposed to have accurate time tracking up to the minute, but I've found as long as I update by end-of-day, there's no chance he'd notice. Each individual dev tends to manage their own projects, so they have the power to create their own tickets and assign their time as well, I'm just under the impression that it'll probably get audited at some point? idk I'm just getting off probation in the new year and I was a co-op for them for four months the year before this. It seems like the potential for micro-management is there but I've only ever seen it used on newly hired co-ops. The people that'd care about it are usually too busy responding to requests from executives . Back to why I asked the upgrade question, I had guessed it would take longer than a week of side time, which would be a lot harder to justify, but I'd probably be able to get away with just about anything that'd take less than a week as long as it only took a week and there weren't more pressing matters.
we /r/Jokes now!
I'm not sure what you are referring to, sorry.
What's the cost of AWS, I'm thinking about outsourcing our server demands for 5k users on a simple ticketing system. Since you probably utilize it to the highest degree I wanted to gain a perspective on it. Are there any downsides?
It is quite good, actually. We use it in our production development shop of about 80 people. If I had to guess your deployment model has some issues with integrating your components in a discrete way, and PyCharm isn't going to solve all your problems for you, however in my experience it is a very powerful integration.
Creating a communication board for different departments that integrates an inventory system app I created. Almost done, thinking about adding a bonus of workflow management board as well. Of course, shits free but it's fun learning.
Haha. Ouch. 
Source. So excluding blank lines and comments. 
Gotcha ty
I made something similar to manage my personal notes earlier this year when I was learning python. I see that you're making use of what looks like HTML comment syntax to achieve the 'render without the tags' bit? Wouldn't this only be applicable if you were going from Markdown to HTML as a rendering process? If I wanted to go, say, from MD to RST (using pandoc), then I feel like utilities such as Pandoc might have an issue with the out-of-place syntax in a file I've told it is Markdown. It's an interesting solution to not wanting your tags to show in rendered output - I had this same problem when I was preparing my solution and ultimately decided that I just didn't mind if the tags were present in the content since it's just *for me*.
I think he means to say that many modules abstract away the nonsense in Matotlib. For instance, pandas series and datframe object have a .plot method that invokes matplotlib instead of setting up the plots by hand
Ahh gotcha. Yes that does sound handy. I'll have to look at that, thanks!
The O'Reilly book on Pandas is authored by the primary developer of the pandas Framework (Wes Mckinney). I'd recommend giving it a walk through. it'll take awhile, but it's integral to a proper understanding of the nuanced pieces of the framework. 
How did you install pip in the first place? pip3 is for python3, yes. pip is usually for python2. Do you have a hard requirement to manage PyPI dependencies on your machine for python2?
Thanks for the reply. I don't have any requirement to modify dependencies, I am just hoping to find out why pip doesn't work on my machine. I installed pip using sudo apt-get install python-pip 
&gt;it has some nice features and is quicker than CPython in some instances, but it's harder to interface with some other CPython libraries. So it has advantages and disadvantages... Would you recommend the use of pypy?
Try [these instructions](https://pip.pypa.io/en/stable/installing/) instead of pulling it from your package manager.
I now understand... thanks for the simple explanation. 
We are learning AWS with this project. We are not experts by any means! It depends how you build your project and what services you use. AWS offers a lot of flexibility...Your costs are going to vary a ton depending on this. Estimating costs with AWS is also a bit difficult. You typically have multiple things that can drive cost for a particular service(data stored, data transferred, reads, writes, etc). For each service you can google how they bill... "S3 pricing", "dynamodb pricing" etc should take you to the correct page for each. Good luck =) 
OK thanks, I'll put that into my pocket as I feel like I'm onto something here. First of all, I *know* it isn't an Ubuntu package manager problem because when I launch my Kubuntu VM I am able to install pip on it and it works just fine. Also, pip *used* to work on this system, but somewhere along the line something broke it. Now, the thing I'm onto is that when I type which pip on my Kubuntu VM I get what I expect: /usr/bin/pip But when I type it on my main system I get this: /usr/local/bin/pip I have checked and there are two pip installs, one at /usr/bin and another at /usr/local/bin. I am not sure when /usr/local/bin was targetted as the path for pip. But maybe all I need to do is change it to target the pip at /usr/bin instead. Working on it now. If it doesn't work I'll try your suggestion.
Any pure-python library should work in pypy; the difficulty is interfacing with C code (which CPython does very well). However, the previous version of pypy does at least work with numpy and pandas, two of the most popular libraries with compiled components, although the pypy/compiled interface is slower than the Cpython/compiled interface. It's worth noting that pypy doesn't support python 3.6 yet. I generally just stick with CPython unless I have performance-critical pure python code. I also found it very difficult to install recent versions of pypy: however, that hasn't been a problem since I started using pyenv and pyenv-virtualenv.
If you truly want people to test your project include some screenshots and a requirements file. That way they know what it is and what packages are needed. Dota Junkie here so i want to check it out.
OK, now I *know* that the problem is with my path. I tried your method, and pip was installed to /usr/bin. But when I try to run pip the system is still trying to run pip from /usr/local/bin. 
Well, I don't understand how to tell the system to look for pip in another place. For the first time I am going to have to give up on a problem: I can't fix pip on my system! I'll just have to use the VM whenever I want to run python applications. Which, thankfully, is rare for me since I don't program in this language. Thanks for your help.
&gt; What specifically do you think will shift the masses over to 3.5 once and for all? EOL of 2.7 is only 2 years away. Sure there will be LTS OS distributions and undoubtedly some niche third-party support for a while after that, but with time it will become increasingly annoying to keep 2.7 patched and running in production on modern software/hardware. Without official support, the py2 and py3 codebases will slowly diverge making patching more time consuming as the years go on. The interfaces to the libraries shipped with OS's that python2 is linked against will start to break. New features, libraries, and modules won't support python 2.7 out of the box. At a certain point in the future (likely &lt; 10 years) it will be more work to keep a functional copy of your code running on 2.7 over finally just porting to the newest stable version. THAT is the point where even the biggest die-hards will start to consider porting. When maintaining 2.7 (through paying a 3rd party or paying their own in-house developers) starts costing them more MONEY than the effort of porting!
sadf
It's hard to compile a function into an ELF file when you don't know what its call stack will look like ahead of time...
There aren't any good Pdf processing programs, especially for tables (recognizing a table, selecting a specific table based on text on the page, extracting data from the table). This would be definitely a big project but a very helpful one for a lot of persons (+ me 😂), I think it would need some AI, but I'm not in that field so sorry when I'm wrong. (the currently only real working program is Tabula, if you are interested in inspiration) 
No. It indicates an example of a willingness for people to provide login details for a service that trades on your behalf and has access to sometimes considerable funds. If you want something more analogous to an "investment fund with trades carried out on the behalf of individuals" you might look at the gambling space with things like: http://sportsbettingmastertipster.com/sure-win-accumulator . Many niche data feed providers (amount of oil in a particularly location etc etc) are perhaps analogous.
&gt; you can load a Dataframe from csv files And excel files. It's spectacularly easy.
The idea behind machine language is that machine language instructions will perform register operations directly when accessed by an ALU, and the only additional operation required is auto-incrementing the program counter. No interpreter is required in this case.
If you have a well rounded CLI already, the easiest way to make that into a GUI is using [Gooey](https://github.com/chriskiehl/Gooey). Otherwise the easiest is tkinter. [Here's an overview](https://www.reddit.com/r/learnpython/wiki/faq#wiki_what_gui_should_i_use.3F). --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to include which version of python and what OS you are using. 
I read a Medium article recently critiquing that book. Apparently the examples in the book are either inconsistent or do not use pandas' best practices. Wes McKinney is also, as I understand it, not a main contributor to the package anymore and it's been taken over by others. I've found these medium posts to be helpful in learning about best practices in pandas: [This](https://medium.com/dunder-data/selecting-subsets-of-data-in-pandas-6fcd0170be9c) is a 7-part series on indexing in pandas, arguably the most important skill to learn, written by an expert. He also posts to reddit quite often. [Another medium post written by the same person](https://medium.com/dunder-data/python-for-data-analysis-a-critical-line-by-line-review-5d5678a4c203). While this post is intended to be a critique of the code in Wes' book, it's useful for learning pandas because it explains why the code used in the examples is inefficient and what should be used instead. 
Link to the [project documentation](https://dramatiq.io/).
totally agree that some of Wes's examples are out of date. ill have to take a look at those articles and see how that compares to how ive learnt to use pandas through the past few months. Thanks for posting this! 
I got a job in data science, starting whenever I get my visa. I'm watching tutorials and talks on data science best practices, and learning new sections (e.g. of scikit-learn) that I'd never used before.
@ /u/BarkingPizza this is great work. I am also getting into GA's using the python NEAT package. Just curious, does your EA scheme follow the same/similar as NEAT, or did you make your own? What did you use as a base to determine your EA scheme?
You're continually pinging the game servers. You should only do that at the interval the player selects. Settings has a lot of pasta. If you're copy pasting the same thing more than once, ask yourself why. Qt has style sheets for this. That would also allow the app to be re-skinned. main.pingtest() is several functions in one. I get annoyed by long functions. They're sometimes necessary, but not here. Your server list should be in a resource file so that a user can edit it to add new servers, without having to poke about in the code. 
Yeah exactly, sometimes you get into a position where you basically have no choice but to drop into matplotlib to do everything manually, but the vast majority of the time the higher-level modules pick good enough defaults and expose enough customization that it's not worth using matplotlib directly. 
While I am normally an avid hater of reposts, I’ve been ok with this one reposting. Being an individual who moved from VBA to Python but still working in an environment where excel is a required output (I use openpyxl quite a bit), I can understand the excitement this possibility generates.
I'm exploring a couple of new tools. I have two goals in mind. First is to get good at integrating my Python work with AWS and Spark, and second is to improve my coding style. Monika's Writing Tip of the Day: Always document your code well, especially when you're teaching yourself something new. Think of it as writing a letter to your future self containing instructions on how to do this fun thing that you currently sort of know but not really. One of the hardest parts of learning something new is that you don't know what you don't know, and you fill in those gaps through practice and encountering problems. Documenting those sorts of issues and your solutions to them will help you remember how to solve those problems in the future. And that can save you spending half of the day trying to read your old code to figure out what the heck you were trying to do and, more importantly, why you were trying to do it that way.
It needs to be said, though, that data should never, ever, ever, ever, ever, ever, ever be stored in an Excel file. I'll sometimes use one for a list of parameters to be read in if I have multiple sets of parameters that I might want to modify by hand (for example, having one line per client I'm working with, so when I have a new client, I can write what I know about their data in and then modify it as I learn more), but the data themselves need to be stored in a format that doesn't mangle stuff shoved into it. I'm especially strict on this because I do a lot of work with timestamps, and Excel does unspeakably horrible things to timestamps, and undoing the damage can be a pain.
can i keep both..or do i have to uninstall Python ..my python have Numpy,scipy and open cv
Are you trying to build the voice recognition yourself? Because that is a little insane for one person and requires years of tweaking and machine learning. The best way to do this is to use Google Voice API or some equivalent and then allowing it to interpret what you want from there.
That’s awesome, thanks. 
Awesome, thanks. 
&gt; My impression is that tracing JITs also have a lot of advantages over method JITs if you're doing PyPy's weird meta-interpreter trick. VMs tend to involve lots of function calls, so it's arguably still the same advantage.
You can keep your python. If you have all those already, then just try to install Pytorch 
Yeah, mainly it's useful for "Oh jeez, why has this person given me this data in an excel file, what the fuck am I supposed to do here, use a real format".
Yeah I’m looking to build my own virtual assistant. I saw the API Google and they are good because I use google services a lot like google calendar etc. But there are tasks that are very personal and I think everyone should learn to build their own assistant. What’s your thoughts about custom assistant?
Yep, and I'm well aware that complaining about it often doesn't change anything. I've even seen situations where someone took a .csv file and copied and pasted it inside the top left cell of an Excel file and then gave it to me in .xlsx format. And my script had to handle that somehow. Pointing this out to the client didn't cause them to change anything. Since I can't actually scream about this stuff until I'm in the car on my way home at night, I can complain about it here.
can I run this in CMD? I have windows
My lab was using an excel spreadsheet to share a few different data sets - every few days someone would make some edits and email it round to everyone else with a new date in the filename. It was more than just tables, lots of sub-headings and stuff which made sense to a human eye but not machines. It was hell to work with and we nearly published some false data because of it. I at least got them onto using a google sheet so that it remained in sync, with a clear edit history. And once I'd spent days setting up scripts to turn it into something actually useful, I insisted we publish the data in a sane form with TSV tables as well, to save everyone else the trouble.
well its confusing, i followed a youtube video..where he downloaded cuda 8.0 aswell has cuddn...he did not add any Path Variables manually..What he did was Copied CUDDN Bin,include and lib folder to Cuda/bin include and lib folder..and overwrited folders..then he import tensorflow .. and successful load messages popped up..i did the same..But after import tensor .. Nothing happened..Like Import cv2 Import Numpy..if nothing happens means its successfully installed...So do you think i successfully installed tensorflow..because nothing happens if i Import Tensorflow On IDE...No errors or nothing this time
Part of the magic is the system of annotations they have to mark up interpreter'ish things. The jit is in fact working on python, not rpython. More generally, a jit is created during the rpython translation process for whatever language (python, javascript, pet experimental language, whatever) you've written an interpreter for (in rpython).
cpython is a bytecode compiler plus an interpreter for a vm that executes that bytecode. 
I'm sorry, I don't normally downvote, but this is complete nonsense.
I’m an absolute beginner and I found pyqt5 with QT designer to be the absolute fastest way to get a GUI up and running. The only problem I ran into was that most tutorials I found were for pyqt4 but I could only get PyQt5 to run on my Mac. I followed [this](http://pythonforengineers.com/your-first-gui-app-with-python-and-pyqt/) simple tutorial to get started and someone in the comment section posted how to do it in qt5. I used their code as a template and have had a lot of success with it recently. I tried Tkinter, which wasn’t bad, but the qt designer makes everything way easier. I also tried flask, but that added a lot more complexity than I needed for my project.
Have you seen Mycroft.ai? It is all python based and truly open for you to expand upon. 
A simple CLI backup program. Uses ADB to get files/info from device and creates a zip that can be flashed in recovery mode. It's my first real python project.
yes
Oy. Maybe this will lead to other advances, like...an offline object model reference for the current version. 
Thank you! This Gooey lib looks interesting. I'm attempting to use it, but the read.me is a bit ambiguous at times. If you learned to use the library form a more comprehensive (lots of code example) resource please let me know.
When you installed miniconda it probably modified your .bashrc or .bash_profile file to change your PATH variable to place the miniconda python first in the list of paths. You need to remove it comment out those lines and start a new shell.
Woah is that a drag and drop GUI interface? This looks good.
f strings are so useful!
What problems that mildly inconvenience you did you encounter last week? And which ones do you think will recur? Try to find a solution to them. Programming in order to program isn't that useful. You'll stay closer to what you know, and won't really grow. But if you solve an actual problem, you'll have to look in different fields. A simple example: should I go to work by bike, by car or by public transport? I'd prefer to bike, but if it's too cold or wet, I won't. My next option is by car, but if there's too much traffic, maybe the bus is faster? Already you'll have to call a couple of web APIs in order to get thz data. Then you'll have to parse it, and make a meaningful decision based on it.
I was really excited to listen to this one, but my hopes were dashed by his dual licensing implementation. I get that "I want to be paid" but since I wanted to use this on the backend of a web application the AGPL requires me to offer the source code of my app to the users, so you can't build a service that uses this software if distributing the code could put your business model at risk. 
So the first in line takes precedence? Would it be fine enough to just move the miniconda version to the end of the list (it's currently the first in the PATH)
FWIW, I offer free commercial licenses on request. :) It's less "I want to be paid" and more "I think everyone needs to contribute something back". If you use it as part of closed source software and can't afford to pay for a commercial license yet, I'd be delighted to give you a commercial license for free for however long it takes you to reach profitability.
Sounds pretty good, since Python is my favorite language, but I also want to be capable of using formulas.
1. Head over to r/LearnPython 2. Don’t just paste code, explain what you’re trying to do, what you’ve tried so far and exactly where you’re getting stuck 3. If you *are* going to paste in code, do it properly. Four spaces in front of each line will format it as a code block, right now it’s difficult to read
Check out [A Complete Beginner's Guide to Django](https://simpleisbetterthancomplex.com/series/beginners-guide/1.11/), a 7-part series: 1. Getting Started 1. Fundamentals 1. Advanced Concepts 1. Authentication 1. Django ORM 1. Class-Based Views 1. Deployment Also, check out the [Real Python](https://realpython.com) courses for learning Python and web development (with Django and Flask). Note: I am the co-founder/author of Real Python. Finally, if you're looking to take Flask to the next level, check out http://testdriven.io/. It's meant for the advanced beginner.
IDLE is ok, but there's better simple code editors out there: Notepad++, Geany, Atom, Sublime Text (not free, but practically), or Thonny come to mind. Personally, I like Geany. You can set up all of these with a save-and-run key (usually F5). I'm sure graphical module managers exist, but I think that that's something a 13 year old can easily learn to do in the command line. Especially since the docs for any given module will have the command line installation instructions. Besides, they will have to learn the command line sometime :). You or your sibling are welcome in /r/learnpython anytime if you get stuck. We have lots of young coders asking questions there. 
Sure, what I usually do is wrap that line in a function called use_conda which allows me to switch to the conda version whenever I want but leaves the system python undisturbed.
Yeah that 7 part series has been really helpful so far to clarify best practices with pandas.
the spirit of python is that's supposed to be really loosely typed. But python3 treatment of of bytes vs strings totally breaks that model. For example &gt; ord(b'a') 97 &gt; ord(b'a'[0]) ord() expected string of length 1, but int found Ooooh, like that's too hard for ord() to figure out. The beauty of python2 was that you didn't have to declare types of things that you passed to functions, it would just "do" the right thing for the type. So python3 has unnecessary strict type restrictions all over the place, exactly where you don't want or need them. If we're going that route, why not just make the whole language strongly typed? Because that would be a terrible idea, that's why, and that's also why it was a terrible idea to screw up strings/bytes like they did. The team even admits it here in this blog, and that they'll never do that again. https://snarky.ca/why-python-3-exists/ 
Snake or bomberman are good projects for beginners IMHO. 
What modules to learn will depend on what you want to do with python. As for general tutorials: we have [a pretty long list of learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F). Try a few and see what resonates. For a brand new programmer I'd recommend codecademy. If you have a project in mind that uses Java, Go, or JS, then I would recommend you jump right into the language you need. You won't save any time by learning python first. If you get stuck come visit us in /r/learnpython. &gt; but it also has some security issues (Hacking). Huh? Where did you hear that? 
It's handy for quick visualization, but doesn't really give you much control over the plot output unless you use that matplotlib arcana to customize the plot further. It's basically just `pyplot.plot()` with some defaults passed along.
I went through this two years ago. It's outstanding!
use lxml
Your quite right, I started coding as a new thing to learn. I need to find a use for new knowledge i have , that will stretch me so that I learn more.
Thanks!
Kind of a trick question. I've made GUIs for python apps using GTK (PyGtk and PyGObject). Making the GUI ([Glade designer](https://glade.gnome.org/)) and putting it together with the rest of the code using the framework is very *easy*. That said, it may not be as easy to set up in Windows (which I did a couple of times) than other options, like PyQt or rather PySide (I think is just a pip install) or Tkinter (included with python). Especially with ver. 3.6 which is not supported yet in the PyGobject [all-in-one .exe installer](https://sourceforge.net/projects/pygobjectwin32/files/)(only 3.4 64/32 bit is supported). To use it with 3.6 you'd have to do all [this](http://pygobject.readthedocs.io/en/latest/getting_started.html#windows-logo-windows). Another option, would be just make a GUI with Visual Studio for a C# program that runs your Python program. You'd just have to get your python program to receive the parameters like a CLI app. I see this as an easy solution, since you said you already worked with this tools.
If you want some ideas check out quakespy which later turned into GameSpy. It was great before the bloat.
Try to scrape some informations on the web, maybe you can do a movie app where you can insert the film title and in a few seconds it will start to stream
IDLE is fucking awful. Something like atom or VS code is likely the way to go.
I would start with a simple text editor (vs code/notepad++/atom/sublime) and a terminal. PyCharm is probably overkill as are virtual environments for someone just learning python. On windows its probably a good idea to use something like cygwin or linux subsystem/ubuntu bash since most resources online assume a unix environment. After your sibling is comfortable with a terminal/text editor maybe take a look at jupyter notebooks as a good mix of the two.
I've edited my question to be more clear, but the issue isnt editing code, it's running code. Id like to stay away from the CLI for a while (just too complicated, too much to remember, and the windows command prompt suuuuuuuuuuuuuuuuuuuucks). My thoughts with PyCharm was that you can click 'Run', the terminal appears, the script runs, and everyone is happy. I'm a big fan of this, because this is how I learned C++ when I was a kid (using Bloodshed Dev-C++).
I've edited my question to be more clear, but the issue isnt editing code, it's running code. Id like to stay away from the CLI for a while (just too complicated, too much to remember, and the windows command prompt suuuuuuuuuuuuuuuuuuuucks). My thoughts with PyCharm was that you can click 'Run', the terminal appears, the script runs, and everyone is happy. I'm a big fan of this, because this is how I learned C++ when I was a kid (using Bloodshed Dev-C++). I'll look at VS code.
I've edited my question to be more clear, but the issue isnt editing code, it's running code. Id like to stay away from the CLI for a while (just too complicated, too much to remember, and the windows command prompt suuuuuuuuuuuuuuuuuuuucks). My thoughts with PyCharm was that you can click 'Run', the terminal appears, the script runs, and everyone is happy. I'm a big fan of this, because this is how I learned C++ when I was a kid (using Bloodshed Dev-C++).
I just got into Python, but have been programming for a while (mostly C# and CUDA). Automate something! Python is surprisingly good for this. I found myself downloading a lot of images from subreddits daily, and thought to myself, "hmm. If only there was an easier way..." Yeah, I could've done his in C#, but writing a quick Python script is way easier and more fun.
2 things to try out: - after logging in try to print out the website's content to see if you have actually logged in - try to add User-Agent header to your request
&gt; bytes vs strings A complicating factor here is that strings are UTF8. And UTF8 strings may have multi-byte runes. What happens when you send one of those into a function expecting a single byte, exactly? So, from a language perspective, it's a simpler choice with fewer edge cases to not handle runes and strings as simply a stream of single byte characters. Lots of languages made this choice, BTW.
What will it take? 2.7 needs to be end of support, and a major flaw needs to be discovered which jeopardizes all existing 2.7 or earlier code. At that point, it'll be a race between a third party tool to transliterate 2.x to 3.x, and a new maintainer of old versions of Python with a completely new location for distribution and packages. Both would be a nightmare, but it's only a crisis that makes people ditch old, outdated things that still seem to work.
If you've already set up Anaconda then you should be ready to go with a Jupyter notebook (https://jupyter.org/). He can write the code and execute it with the results being displayed below each cell. The command (jupyter notebook) is simple to remember and the notebook functions the same on every device (at least in my experience). As he progresses I think you're on the right track looking at a text-editor and then moving to PyCharm :)
 &gt; My thoughts with PyCharm was that you can click 'Run', the terminal appears, the script runs, and everyone is happy. Yes, all those code editors do that too, but generally as a new window that pops up. 
I've started reverting to R and ggplot2 whenever I need to plot something now. I really wish there was a plotting library following the grammar of graphics for Python.
Dashed? There's a commercial license for your commercial use case. What the hell is wrong with that??
I recommend VS Code, its built-in command line makes Python development very streamlined. You do have to type in {your script name}.py every time you want to run a script, but you also have the full windows command line at your disposal.
Makes sense, I think most of the mentioned text editors have a way to do this either natively or through a plugin. I love PyCharm, but for just having a "run" button it seems like overkill. Ya, feel you on command prompt so I would look into linux subsystem. It would be a good next step after writing some python scripts/programs to learn how to navigate in the terminal (ls, cd, mkdir, python seem like a good subset). To be fair, there are less CLI things to remember for python than there are for compiling and running C++ code.
The anaconda distribution also provides a GUI for environments and packages management, I guess it's called navigator. I haven't explore it thoroughly because I find the command line easier. As for IDE I've found Atom + hydrogen package to be as interactive and easy to get running as it gets, it let's you write code and run it using Jupyter notebooks and many other kernels.
Agreed. Jupyter is by far the best way to go for what OP is describing. Being able to run code in a single line fashion will help breakdown what is going on step by step. 
It works fine for me (assuming `response.text` actually returns the string in your example). Might be something happening outside of the context of your post
I'm a bit confused as to what you want to do here. Are you wanting to improve upon the speech recognition part of an assistant (i.e. just understanding what the words you are saying are, not how to respond to them). If so that's going to be a simply massive task. Even for just your own voice I expect it would take an incredible amount of time + training data to get even close to the accuracy of the Google Voice API. Unless Google really struggles with your accent I can't see this being a good use of your time. Building an assistant from the ground up is quite literally going to take hundreds of thousands if not millions of hours, I strongly suggest you have a think about which modules you actually want to build yourself and look at using some decent libraries and APIs to handle the other parts of this (particularly for speech to text and NLP). As the above poster suggested Google Voice API is very handy for speech recognition. 
=IF(AND(EMBRACE(), EXTEND()), TEXT("I am not okay with this"), TEXT("I am okay with this")) 
Dear Santa, please can I have £1 for every time this issue has been discussed on the internet. Love and kisses. breamoreboy :-)
What's your issue with PyCharm. In PyCharm you can click the run button, and have it execute your script. It also has a great debugger. 
Yup. Jupyter if he's doing anything math or stats related. 
Uhhh, how about this: _from past import print_
I’m making progress with QT, but thanks for the info. I appreciate it and hopefully it’s helpful to others who might be struggling to get into GUI. I’m in analytics so I’m not a great developer, and I’ve forgotten C# over the years.
I am really looking forward to this. I live in Excel at work and I think this will really be a boost to getting me motivated to keep on learning python.
So Gooey only works with Argparser directly? Not docopt?
Isn't there? http://ggplot.yhathq.com/
&gt; Don't know if it will upset valve. ICMP is likely filtered/shaped by Valve, like the rest of the world. 
I may have spoken to soon it seems. Thank you, this has the potential to be fantastic! Matplotlib has always seemed like a clusterfuck of methods and interfaces, so if this works it should save lots of time.
Hi OP, Just to make sure you're aware, there's a fundamental issue with your project--you're using ICMP, otherwise called ping, to measure network issues between you and their servers. At the Core, T2 and Provider levels, ISP's filter and shape ICMP traffic everywhere. Your game connectivity could be flawless but your ping sits in the 400's, and your ping scores could be single digits but you have massive latency in-game. ICMP is an extremely unreliable protocol to use for measuring network issues. It would be a bit more useful if you implemented functionality like MTR does--connection tests to every hop between yourself and the game server, so you can see where the issues lie, and know if it's just your ISP or if it's their side having issues. A much more reliable test would be a small file transfer from their game servers, and measuring time/latency on that. An HTTP GET request from their default page or something might work. I've seen this implemented using powershell and PSPing on the windows side, and nc/wget/bash on the linux side, so I'm sure you could build something with sockets in python. Anyway, good luck :) 
I've used appJar, which is built on tkinter. It's pretty nice for a fast GUI, I used it the past few days for a Public Key Criptography homework
 A class for functions used by the pwm? Then you can build off it for future projects. 
&gt; Unless the update to Python 3 = Money, it's not going to happen. It will happen when libraries are not supported and not a day sooner. When Python 2.7 had been out for 2 years and we were still on Python 2.6 (and 2.6 was retired), I asked during a meeting (that was about how great our IT policy was) when we were going to upgrade. We upgraded a week later. 
Specifically, I can recommend Seaborn. Just importing it will immediate make your plots look nicer. 
what do you mean not successful? 
&gt; guaranteed dict ordering Why do you actually like that? I much prefer sorting.
Aren't servers for real-time games different? They have to accept ping in real time without fail, or people will use that as excuse everytime they're too slow to press a button and lose. I could be wrong, because I don't know how Valve's network is setup, but I'm very sure that there will be shitposting all over their subreddit if ping wasn't fast and transparent.
You could try to reverse engineer the transaction by clicking in your browser with the developer tools installed and then go to the network tab. Listed there will be the requests, headers and contents that your browser sent and using that info you can recreate those requests in your program.
Yuck
If anaconda, then Spyder seems perfect for a kid. I still use it.
Vscode [run python in the terminal](https://code.visualstudio.com/docs/languages/python#_run-python-in-the-terminal)
Hmm, let me see if I can explain: The issue isn't Valve, or your home equipment. It's the multiple ISP's and backbone providers between you and there. For example, I have to go through a major west-coast internet transit, and there's a visible latency spike when I cross a specific router they have (30ms) using one of our ISP's, as compared to the other...they both tie to the same equipment but the lower latency one has a much better peering agreement with said internet transit provider. So people commonly bitch on Facebook up here "Augh I can't game on $ISP1 even though I have gigabit speeds! Why does my friend on $ISP2 have 20ms ping and he only has a 4mbps DSL?". My favorite is a small WISP in the middle of our state that is fed as a side project from a very large service provider with a crazy good peering setup, and no oversubscription issues...so those guys may only have 4mbps but they get line-speed ping tests every time, because they're not getting shaped upstream. 
This is fair, but I thought we were talking about Valve.
Same here. I personally hate VBA, and I use repl.it for list comprehension and analysis. If I had python, it would make everything much easier.
I can't tell if that is software you download, or if you ship someone money and they bet for you. The latter is more like what I am thinking. With the ebay sniper, 1) there's no secret algorithm and 2) it only has access to Paypal, so if you get ripped off Paypal will help (and the ripper offer is not ultimately anonymous). Op's idea is different on both of those important points. They'll have better luck (I imagine) developing trust through relationships and not being anonymous. Like with the stock market. You don't sell trading bots. You develop them and then get people to use you as their broker or whatever. Right off the bat for me I see: why is OP not just making bank right now on their own? Why are they trying to get competitors.who are paying a one time fee?
One of the first games I ever made was a spoof off the old 'DopeWars' idea. Entirely CLI, just practice in figuring out how the logic flows. The only answer is to make what you want to make and learn what you need to make it. Take what you know and expand on it because there's no way to know what you *don't* know (I know that sounds cliche), so best to start what with you know and start pushing the boundaries of it.
The Git Book is pretty good: https://git-scm.com/book/en/v2
Also, the gitlab brief has some basics: https://docs.gitlab.com/ce/gitlab-basics/start-using-git.html
And a more modern tutorial: https://try.github.io/levels/1/challenges/1
Lightening talk was literally the worst camera recording ever. Constant zooming. Couldn't see what was on screen . Picture in picture was all over the place. Absolute shambles.
Clicking the 'run' button is not enough when first starting. It can be confusing for new users. The interpreter needs to be setup and the open script needs to be associated to run with that interpreter for the first time. While knowing some shortcut keys can make this seem easy -- (Mine is CNTRL+F5 -- but maybe its different depending on the setup of PyCharm). I think a 5 minute tutorial (showing the user how to do it -- then having them echo it back) would be needed. This sort of 'stickiness' can screw with new users. To compare -- using IDLE's F5 to run is pretty convenient and is automatically connected to whatever version of python that opened IDLE. 
Implementing various versions of minimax, for no real purpose but to understand them better.
Oh, sorry, thought you were the other comment thread. Valve rate-limits on their firewalls. Their game servers likely are set to accept but their routing infrastructure for them (including CDN's and redundant/gateway servers) likely filter or shape. I'll amend above.
I have no idea as I've never used them, I just found them with a search engine.
Building a website/blog in Flask. I've hit a bit of a wall, in that I'm stuck on picking a CSS framework. I've learned some of how Bootstrap works, but then I discovered [Bulma](bulma.io) and I'm really liking how the CSS classes are way more intuitive... And then I stumbled across a bunch of other frameworks... 
Yea I would just VS code and install the python, and script runner extensions. That's what I do anyway for ML/data work.
Might seem a bit complex/convoluted at first but if you want to work on python stuff you may want to look at virtualenv and virtualenvwrapper. Virtualenv essentially lets you set up localized python environments--so if you want to use something that has a bunch of funky requirements you put it in a virtual env and it doesn't mess with your OS's python. Virtualenvwrapper makes switching to and managing various virtualenv instances easier. [Virtualenvwrapper doc](https://virtualenvwrapper.readthedocs.io/en/latest/) So let's say one week you're messing around with django and the next week you want to try flask. Using virtualenv/wrapper helps keep your OS "clean" but lets you load dependencies for each in separate areas. And if you use it one of the first things you should learn with virtualenvwrapper aside from "workon" is that typing "virtualenvwrapper" will list all of its commands.
Microsoft, please do this. Excel would an even more powerful business and data tool.
&gt; the spirit of python is that's supposed to be really loosely typed. Not true, off the bat. Python is strongly typed. It's just that types are dynamic. Implicit conversions are *not* the rule. &gt;Ooooh, like that's too hard for ord() to figure out. What are you expecting it to do? `b'a'[0]` is *already* 97, as you'd naturally expect it to be - a `bytes` object is a sequence of bytes, and bytes are integers. Why would you expect an `ord` call to be necessary there? &gt;The beauty of python2 was that you didn't have to declare types of things that you passed to functions, it would just "do" the right thing for the type. And this is, if anything, now **more** true than it used to be. &gt;strict type restrictions all over the place, exactly where you don't want or need them This place is exactly where you *do* want and need a type restriction. It insures you against blindly interpreting encoded data according to an assumed and very possibly wrong encoding. Bytes are not characters, cannot properly be treated implicitly as characters, never really were characters, and only superficially appeared to be characters because the authors of languages like C inhabited an English-only environment on extremely resource-constrained machines, and decided to implement awful yet practical design decisions to compensate. Unicode has existed since **1991**. We are nearing the date when not using proper Unicode text handling is as backwards as it would have been to use EBCDIC (or to make up your own encoding from scratch) on the first home computers. A large fraction of my personal projects involved dealing with interop between binary files and text files, reading ASCII-encoded data out of binary files, etc. Python 3 has made these projects *much easier and far more elegant*. Not to mention, for text files the `encoding` parameter to `open` is a godsend - no more wrestling with `codecs.open` and then losing universal newline mode because you had to open the file as binary. &gt;they'll never do that again. There aren't any more things like this that could conceivably be done.
I don't make the company policy. telework is far from the norm. We're also in the security field, so I'm not even allowed to take my company laptop home without permission from my superior. This may sound paranoid and annoying, but has the lovely side-effect that I *can't* do work from home, so once I leave the office, until the next morning I can switch off.
I feel like all you really have to do is draw your own screen like you already do then handle stdin, stdout, and stderr on top of that. I don't see an issue at a high level and it would be totally generic / cross platform if done correctly. 
Thanks for the feedback! I appreciate it very much. I originally planned for the serverlists to be retrieved from a server online, but I decided I would work on the basic program and tackle that later. As for `Window.pingTest()`, You mean to take the function apart and make sure each _sub_function of `pingTest` only does one specific thing? e.g. the pinging / network detection in one function, and updating the UI in another? 
I dunno. A 13yo is pretty smart. They should be able to figure out PyCharm pretty quickly. When I was 13, I was coding in the Turbo Pascal IDE. It was better than coding in a text editor and then running the compiler, especially the debugging steps. Most teenagers don't have patience for that. (Heck, I don't have patience for that, but only cause I have lots of code to write... hehehehe.)
The connection test to every hop is a great idea. Could this be implemented using traceroute? Should I only get the addresses given by traceroute, and perform my own latency testing on them, instead of relying on the ms values that traceroute gives? As for performing a GET request on the Dota 2 website, I'm not entirely sure if the website also sits on the actual game servers they host though, so the results may not be accurate.