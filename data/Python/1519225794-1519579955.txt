Which modules? 
No, thank you. I'm not playing a game of "well that's not a known project!" with you. Stop being so hostile.
I missed the comma. [Matlab's ...not a really a "real" programming language ] Not. [ Simulink ... not a really a "real" programming language]
**URL HAS CHANGED!!** http://www.transcrypt.org/docs/html/special_facilities.html#transcrypt-s-unit-mechanism-and-creating-native-javascript-component-frameworks
Yes
Good luck
Conversely, you can easily use try+except instead of checking. They are approximately equal in effort if you are catching at the site. Arguments against using exceptions liberally often originate from runtimes (eg, Java) where exception handling is expensive.
Oh! Then am all set!
Can u suggest me some tutorials for django
Can you suggest me tutorials for Django on YouTube?
Does ffmpeg work if I just give it the url? Or do I need to configure something? 
This was a horrible list. Just lost 1.5 minutes of my life I will never get back. 
I agree with you regarding electron. I have almost zero experience with JS, and it was stupid easy to get a cross platform app with electron. I WISH python had something that easy...
I even need some video support , so from where should I watch videos?
from Internet import Everything That's why.
plugin for python support for [prettier](https://prettier.io/)
Not OP, but sentdex is pretty good (YouTube). I just found his channel the other day and have been pleasantly surprised. Here's his django [playlist](https://www.youtube.com/watch?v=FNQxxpM1yOs&amp;list=PLQVvvaa0QuDeA05ZouE4OzDYLHY-XH-Nd). 
Got it! Thanks for the offer -- looking forward to reading and reviewing.
 from stackoverflow import *
Some years back when both were equally popular I was trying to decide whether to learn python or ruby, so I decided to spend a week playing with ruby then a week with python. I've not touched ruby since. More than anything I found it much easier to read the work of other programmers when they'd been working in python than in ruby. I think the general adherence to pep8 means python code has a look and feel that's fairly easy to get used to, whereas I didn't find that consistency in ruby code.
That sounds like you're describing a VSTi piano roll with a loaded sound library. Would that be accurate?
[This](https://github.com/mjhea0/python-ruby) seems like a pretty good post on the matter (with additional resources at the bottom)
It actually works on Windows. Trying to run Ruby on anything other than Unix or OS/X is a exercise in futility. Sometimes we need to use Windows. Python is a first class citizen there.
Its OK I will do it, Thanks for it bro
Thanks
View in your timezone: [2/22 4PM GMT][0] [0]: https://timee.io/20180222T1600?tl=Webinar%20for%20pytest%20in%20PyCharm%20tomorrow%20(2%2F22%204PM%20GMT).%20%5BNo%20affiliation%2C%20just%20PyCharm%20user%5D ***** [^^delete*](/message/compose?to=timee_bot&amp;subject=delete+request&amp;message=%21delete+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkdWxxbDNmIiwiYWN0IjoiZGVsZXRlIiwib3AiOiJzdHJhbmdlLWh1bW9yIiwiaWF0IjoxNTE5MjMxMzk3fQ.msRfMbB63KkKU8NVTuZz8LfWWgSD00zqZptg4-xoSOE) ^^| [^^reprocess*](/message/compose?to=timee_bot&amp;subject=reprocess+request&amp;message=%21reprocess+eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkdWxxbDNmIiwiYWN0IjoicmVwcm9jZXNzIiwib3AiOiJzdHJhbmdlLWh1bW9yIiwicG5tIjoidDNfN3o2eGF5IiwiaWF0IjoxNTE5MjMxMzk3fQ.Dus35LYN4Avy60VSqcsI3xuq2ySXf9exLrrhOqxWW4o) ^^| [^^ignore ^^me](/message/compose?to=timee_bot&amp;subject=ignore+request&amp;message=%21ignore+me) ^^| [^^help](https://www.reddit.com/r/timee_bot/wiki/index) ^^*OP ^^only
thenewbosten has a neat simple series. also traversemedia as a video where he covers the basics, its like an hour long.
Many of the old-school Rubyist have moved on to Elixir and Phoenix. Some to Python, node.js. There's not really any reason to pick Ruby now (unless some young genius reinvigorates it).
I was really excited at first, but as a heavy notebook user myself I kinda am a bit disappointed here and there. What I think is the most useful to me, the views of cell outputs, is neat, but not updating when changed - or there is no "rerun cell of view/output" button. This means as soon as I have changes that should reflect in that output (say a pandas dataframe that has a column changed) I have to scroll all the way to that cell producing the output/view and refresh it there. If they add a refresh button then it's _awesome_, until then it's just a little bit less scrolling until I change something. Take my feedback with a grain of salt, I just tested it for 10 minutes so far. I'm still excited for the development of jupyter lab :)
Remember that on /r/Python majority will suggest Python and on /r/Ruby majority will suggest Ruby. Learn whatever you want. Preferably both, as to which one you start with, your personal choice.
[Numpy](https://github.com/numpy/numpy/search?utf8=%E2%9C%93&amp;q=zerodivisionerror&amp;type=) does
Rails?
Thanks bro, I will definitely look after it! 
It's an ad for a course.
ah that yellow site. no thanks, I'll prefer staring at the sun.
Yes. Exceptions are error handling. Most exceptions happen due to stupid user input or other things such as file not existing, not having sufficient permissions to it and so on. Python itself throws IOError as an exception, if you can't read that it's a goddamn Input/Output ERROR then nothing can save you. Annnnd, since I handle all shit using appropriate exceptions, I'll also handle division by 0 with an exception just for the sake of being consistent, there will be no difference, I'll print some message or do something no matter whether I check or I let exception happen. The only things I really check myself is `key in dictionary` for example.
Mainly I wanted the reason why Python is prefered for non-web projects. Not suggestion which language to choose for learning. 
Interesting, I'm always a sucker for new way of parsing args, there are some good solutions out there, but still room for improvement.
Oh, ok the code is at the link, but let me copy that here
Thanks in advance, I am trying to automate the process of getting if a URL is phishing or not using this page (which is a must) [phishcheck.me](https://phishcheck.me/). This is my python code: &lt;!-- language: py --&gt; import requests from time import time import warnings warnings.simplefilter("ignore") def main(): badurl = "google.com" user_agent = "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36" user_agent +=" (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36" url = "https://phishcheck.me/submit" referer = 'https://phishcheck.me' header = { 'Referer': referer + "/", 'User-Agent': user_agent, "Origin": referer, "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8", "Accept": "application/json, text/javascript, */*; q=0.01", "Accept-Encoding": "gzip, deflate, br", "Accept-Language": "en-US,en;q=0.9,es;q=0.8", "Connection": "keep-alive", "Host": "phishcheck.me", "X-Requested-With": "XMLHttpRequest" } client = requests.session() client.get(referer, verify=False) csrftoken = client.cookies['csrftoken'] session_id = client.cookies['sessionid'] cookies = { 'csrftoken': csrftoken, '_ga': 'GA1.2.{0}.1517235473'.format(int(time())), '_gid': 'GA1.2.{0}.1519059714'.format(int(time())), '_gat': '1', "sessionid": session_id } # Try 1 payload = { 'csrfmiddlewaretoken': csrftoken, 'url': badurl, 'useragent': '0' } # Try 2 payload = "csrfmiddlewaretoken={0}&amp;url={1}&amp;useragent=0".format( csrftoken, badurl ) r = client.post(url, headers=header, data=payload, cookies=cookies, verify=False) return r print(main().text) # {"is_success": false} print(main().cookies) # &lt;RequestsCookieJar[&lt;Cookie messages="c0fa3b2c4d55aea15b28a734768e681a2680ff7d$[[__json_message\0540\05440\054Malformed URL. Please check your entry and try again.]]" for phishcheck.me/&gt;]&gt; The cookies is telling me that I have a Malformed URL, I am not sure about how to fix it. Here is a screenshot about how the request is created from the phishcheck.me web page. [![Chrome developer screenshot][1]][1] Any detail I am missing, please ask! [1]: https://i.stack.imgur.com/HilKh.png
Honest question - why is this upvoted? There's not any more information than what you'd find in the documentation, and, frankly, it's poorly written. [This link](https://docs.python.org/3/tutorial/errors.html) seems far better. I hate to be negative about someone's efforts like this, but I don't see any circumstance in which this article is useful.
The best programming book I’ve ever read is Eloquent Ruby. It’s a wonderful language and is actually VERY similar to Python. You don’t need to choose. Learn and appreciate both. It’ll make you a better programmer to immerse yourself in as many ecosystems and language cultures as possible. 
Oh, of course. My ambition is to make just enough of a language to accomplish a few things in it, and glean as much as possible from the experience. I don't anticipate it ever turning into more than that. For any actual production work, I'll just use Python or C or any of the other languages that already have the support needed.
In that case, I have no clue, but this guy seems to: https://www.quora.com/Why-is-Python-more-popular-than-Ruby-for-non-web-domains 
You only need the URL. It supports an amazing variety of input and output formats.
only 71% upvoted. 29% think like you. maybe you open a new subreddit to downvote wrong posts
Quoting right at the top of the article: "In Python we don't assign values to the variables" o_O Er wat? And no, Python isn't a type-inferring language. Python variables are not well-modeled as "bags" containing values. (If anything, I would say that's the *opposite* of Python's assignment model.) Python doesn't have constants in the sense the page claims. "Python contains one special literal i.e. None." Plus `Ellipsis`, `NotImplemented`, `True`, `False` (both of which the author already mentioned!), and `__debug__`. See [here](https://docs.python.org/3/library/constants.html). I'd give the article a C. Basic Python knowledge, with a few misunderstandings and miscomprehensions. 
Look at [argparse.ArgumentParser.add_subparsers]( https://docs.python.org/3/library/argparse.html#sub-commands) specfically.
CherryPy's builtin server is really slow. You really want a proper WSGI server like gunicorn.
You know that someone has written a *working* module that enables more or less exactly this? Afair it searches through SO and collects the highest voted solution for some question and make some crazy on the fly evaluation. Like this from stackoverflow import quicksort Looked super crazy, entertaining and simply cool 😎
I type annotate the vast majority of my code except where I'm doing something too dynamic to be worth it. Use PyCharm - it understands them uses them for navigation and autocompletion. By nature of the language it will never be as perfect as in Java or C# but it is remarkably usable - that's the price you pay for Python's flexibility (and you're always free to write code in a more static language like C++ or Rust and bind to Python - there is quite a bit of high quality tooling for this around). Unfortunately I've not found mypy to be worth using for the things I write yet, ymmv, but type annotations have still completely changed the language for me.
Thanks, I noticed that, and that's what I was thinking too, plus the lack of documentation. I know this is /r/python/ but would it be worth trying mod_wsgi instead of ProxyPass for apache? or maybe uwsgi?
seriously I think it summarized the topic clearly. for someone who knows c++ and java, I only need the basic syntax without the explanations
Prettier reformats javascript code - instead of just telling you what's not standards-compliant, it fixes it for you. This is a plugin to do the same with python. It's more valuable in javascript because there's very little meaningful whitespace, where python kind of forces you to write in a semi-legible fashion. Still, it's nice for enforcing stuff across a team.
ProxyPass is fine, as long as you're proxying to something fast like gunicorn or uWSGI. I much prefer gunicorn - it's less of a kitchen sink, and can be quite a bit faster.
Because my application is way more complex than a single container. Thus, every class embeds its pair of encode/decode function allowing me to generate a huge python dictionary mapping strings to python built-in types. This dictionary is then given to msgpack. From the link you gave earlier: packed_dict = msgpack.packb(useful_dict, default=encode_datetime, use_bin_type=True) this_dict_again = msgpack.unpackb(packed_dict, object_hook=decode_datetime, raw=False) The `packed` and `object_hook` parameter of the `packb` and `unpackb` functions are not needed as I give them built-in dictionaries of built-in types.
Depends on the context. In scientific computing, python is preferred because everyone writes their (usually atrocious) code in python.
AFAIK rails has strong competition nowadays and it's not all that scalable.
Thanks a lot! appreciate it
This has been solved, there was a "/" missing wtf!, well, thanks! [answer](https://stackoverflow.com/questions/48911692/can-not-automate-a-script-to-check-url-at-phishcheck-me-with-python-requests/48912587#48912587) Thanks!
You could cheat a bit with the tabbed web browser and do tabs above the URL bar the way chrome does. Then just have a separate URL bar widget inside the layout controlled by the tab, rather than wiring signals to change the contents of the URL bar when you switch tabs. Each tab becomes pretty much completely self contained at that point.
&gt; Reddit has had a lot of problems with those lately 
Get references. See if you can do a small project. This is a bit of a chicken and a egg problem. Make something useful you can demo. Most companies want to see prove. Well at least that’s how I look at new guys. I assume you did some Django/Flask? Most solutions are web based. Also get some understanding about database design. You understand RDBMS, noSQL? Have a look at: https://en.m.wikipedia.org/wiki/Database_normalization How about XML and JSON? Had look at HTML frameworks (Bootstrap, Semantic UI,etc. )? Often just programming is not good enough. I see a ton of badly designed databases. The legacy it creates can be a pain. The smaller the company the more “full stack” you need to be. One more thing: python is just syntax. The question is if you can program. Once you get “that” you can learn any language, since the concepts are mostly same. $0.02
Non-Mobile link: https://en.wikipedia.org/wiki/Database_normalization *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^151677
**Database normalization** Database normalization, or simply normalization, is the process of restructuring a relational database in accordance with a series of so-called normal forms in order to reduce data redundancy and improve data integrity. It was first proposed by Edgar F. Codd as an integral part of his relational model. Normalization entails organizing the columns (attributes) and tables (relations) of a database to ensure that their dependencies are properly enforced by database integrity constraints. It is accomplished by applying some formal rules either by a process of synthesis (creating a new database design) or decomposition (improving an existing database design). *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Apparently [jupyterthemes is not yet compatible with jupyterlab](https://github.com/dunovank/jupyter-themes/issues/101). And I really really like jupyterthemes. So for the time being I'll hold off on switching.
Pro tip: Articles with title phrases like "Top 10" are almost always click bait and not worth reading
As a Rubyist turned Pythonista, this was my primary reason for switching. Python has more reliable methods of creating exes, a more reliable native interpeter, and the cross platform UI libraries are better maintained.
Sure, but it's also about unseating the bigger name. Anyone looking for employment in full stack web stuff would have RoR in their wheelhouse. 
&gt; from stackoverflow import quicksort [Nice](https://github.com/drathier/stack-overflow-import/blob/master/stackoverflow/__init__.py). pip install -e git+https://github.com/drathier/stack-overflow-import/#egg=stackoverflow &gt; from stackoverflow import quicksort &gt; quicksort ModuleSpec(name='stackoverflow.quicksort', loader=&lt;class 'stackoverflow.StackOverflowImporter'&gt;, origin='hell') &gt; quicksort.sort('Hello world!') [' ', '!', 'H', 'd', 'e', 'l', 'l', 'l', 'o', 'o', 'r', 'w']
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [drathier/stack-overflow-import/.../**__init__.py** (master → ad1abab)](https://github.com/drathier/stack-overflow-import/blob/ad1ababe6cb106f798f916fa7cd065e96057b00c/stackoverflow/__init__.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dum1715.)
I'm still deeply offended that they didn't call it QtPy.
Best thing I've read this month :-)
Did that predate PyQt?
I mean, it wraps PyQt4, PyQt5, PySide, and PySide2, so I'd assume not. It's so that you can import import qtpy.QtWidgets as widgets import qtpy.QtCore as core import qtpy.QtGui as gui And it'll work regardless of which Qt bindings API you have installed.
As per my first post, I'm not sure I can until I figure out what the licensing deal is with the project I derived it from. It was posted with no licensing information at all, and the author has not responded to either my emails or a GitHub issue requesting clarification.
Then i am still deeply offended, but happy that someone took advantage of their failure.
Ah yes, certainly. What's considered good and what makes you employable are two very different things :P
 import array as ar import math import pylab as plt p = ar.array('f', []) q = ar.array('f', []) r = ar.array('f', []) s = ar.array('f', []) t = ar.array('f', []) u = ar.array('f', []) k = 8.62 * (math.pow(10, -5)) x = ar.array('f', [(-0.2), (-0.18), (-0.16), (-0.14), (-0.12), (-0.1), (-0.08), (-0.06), (-0.04), (-0.02), (0.0),(0.02), (0.04), (0.06), (0.08), (0.1), (0.12), (0.14), (0.16), (0.18), (0.2)]) print (x) for i in range(0, 21): p.append(1 / (1 + (math.exp(x[i])))) q.append(1 / (1 + (math.exp(x[i] / (k * 100))))) r.append(1 / (1 + (math.exp(x[i] / (k * 200))))) s.append(1 / (1 + (math.exp(x[i] / (k * 300))))) t.append(1 / (1 + (math.exp(x[i] / (k * 400))))) u.append(1 / (1 + (math.exp(x[i] / (k * 500))))) print (q) p1 = plt.plot(p, x, label='0k') p2 = plt.plot(q, x, label='100k') p3 = plt.plot(r, x, label='200k') p4 = plt.plot(s, x, label='300k') p5 = plt.plot(t, x, label='400k') p6 = plt.plot(u, x, label='500k') plt.legend() plt.xlabel('F(E)') plt.ylabel('ENERGY') plt.title('fermi-dirac distribution F(E) Vs Energy') plt.show() # I hope this helps. It worked perfectly for me 
For small and self contained packages, yes.
It feels like the least of all evils across languages for what we do for my own career. First... - I was in perl and it was fine, but performance was lacking and mod_perl could suck to configure. - php was "ok" (this was php3 days) - java was sorta fine, but I hated maven - ruby monkey patching and so much inheritance can go to hell - javascript was a few months in hell - and here I am w/ python. I don't like the GIL nor the 2.7 type system. But hey, it works well. People are reasonable. So yeah.
Ruby does not maintain compatibility and even minor releases can break.
So I never thought about this being more than practice for me and a tool to teach my daughter how to read and math. Which, realistically, it won't be more than that. But now you've got me thinking it could be because you were right, there probably aren't any FOSS education programs (or very few). I know there's people out there that do OSS support. Could this follow that path? Get OSS support and people that wanted to contribute could write an educational app that could be integrated into it? How would that even go in python? They create their own .py and import it into the main.py?
Whats the performance like with "compilation"? Is it an actual compilation or is it like, a thin .exe that runs the entry .py if the user has python installed? Looks cool as h*ck
That, and environments like Jupyter allow them to share data and visualizations easily and make for a very beginner-friendly experience. I can't express how happy I am knowing that I'll never need to mess with R again.
I repeat for the final time I don't give a flying fuck, people who spew shit about the python programming language will be challenged most voraciously by myself as others appear too gutless.
I've used both Python and Ruby professionally, and I much prefer Python, but Ruby's libraries are quite numerous and bundler is better than pip, so I wouldn't say the availability of libraries is why Python has a larger market share.
I find the timing of this hilarious. A genius gets a very just award for a fantastic language at the very same time that the morons who frequent many computing forums are still slagging off Python as they are unable to comprehend it's strongly but dynamically typed system. So just to say it again strong **DOES NOT** equal static, and dynamic **DOES NOT** equal weak. Got it now?
I can't say anything about C++ spesifically, but I do believe there are two different answers to this depending on what foundation you need to build. If you are trying to convince someone who doesn't already have an interest in programming to try it out. Absolutley get them started with something like Python. In that case the most important foundation you are building is the interest. Like next week, my fiance is off work, and has agreed to let me teach her some fundamentals stuff, so I thought I would start letting her play around with processing, and then maybe some python. She is very visual and artistic, and hates math, so I want her to be able to draw and animate asap. The important thing isn't giving her a solid foundation for further programming, but to spark some interest for the field. On the other hand, when we are talking about compSci students at uni, you should be able to expect some underlying interest for porgramming. If not that, then at least a desire to learn it. In those cases i think it's more important to build a solid understanding. 
Why wasn't Satoshi Nakamoto included in the list?
I feel like that with so many submissions on this subreddit. So many poorly written articles, often even promoting bad practices, get upvoted, and even when the comments are largely negative. I don't get it.
What are you referring to?
What makes the kind of code you see in scientific applications "atrocious"? What steps can a person new to python (and programming) take to avoid writing poor code?
I consider the first the most pythonic as it's EAFP and hence I would always use it. My rationale is that the try is cheap, the except relatively expensive, compared to the test of y every single time that the code gets run.
This may be a stupid question as I'm still getting the hang of Anaconda and Jupyter. Is there a way at this moment to run Lab from a taskbar shortcut like Notebook? When I installed Notebook one was automatically created but that doesn't seem to be the case for Lab. 
panda for data science
Exception handling is expensive in Python. If you know that an exception is unlikely to occur, the `try/except` EAFP is almost certainly the best answer, especially as it eliminates race conditions, when compared to the `if` LBYL.
As I said, I think people will switch the day after numpy and/or scipy drop support for Python 2. People want the newest features, but not from base Python.
I’d argue that ruby emerged primarily as a web oriented language, largely due to the popularity of Rails. However during that time python grew to be used in a wide variety of disciplines and has a stake in each (webdev, ML, AI, data science, system scripting, desktop applications, Linux tools...). Secondary to that, having worked extensively in both, I prefer the Python syntax and the general Python philosophy (explicit, readable, clean, consistent) and community verses Ruby’s (implicit, programmer enjoyment - subjective, many ways to do the same thing). That’s not to suggest ruby isn’t used a lot of places outside the web too: vagrant, packer, homebrew, etc.
&gt; Satoshi Nakamoto Probably because no one knows who that is. It could be a person, or a group of people. But it's hard to make a non-person one of your honorees.
Oh totally- and one should be, still it’s fun to learn about the language by abusing it some. One of the things I like about Python is that it’s effectively a pseudo code interpreter, and implementing algorithms becomes “pretty” and intuitive in ways that other programming languages fail to make possible. This certainly isn’t how I’d implement something like this in production code or even a hobby project. Still, this is a fun exercise.
That's my point, arguing that exceptions isn't error handling is just plain dumb when the language expects you to handle all errors by catching exceptions. You can't test everything, but you can take action if some exception occurs. E.g. when IOError is thrown, you know that file doesn't exist. Testing it manually, as to whether file exists or not, can cause race condition and you might get into error state even if file existed already, as it was being created at around the same time as you checked, were you to actually just forcefully try and open it, you might have found it here already, I know that is specific case, but something to take into account nonetheless. Oh and by the way, dividing by zero throws an exception, why does that happen? Anyway, I'd rather handle exception ZeroDivisionError at the top of everything rather than putting `if divisor != 0:` before dividing everywhere... That's just plain stupid, and if you divided by 0 once, you will want to bubble out anyway. Better say that exceptions aren't error handling and just write your own shitty error handling system even though language already has it in place called exceptions... Some people just love antipatterns, don't they? Like, today I got into argument about javascripts `"string" + 1` and `"string" - 1` versus what python does with it. Don't really want to start an argument in this thread so I won't mention what it does, check it for yourself, at least for chrome, console is opened with `ctrl+shift+I`, have fun with that stupidity :)
No. Don't force the Java way onto Python.
Ruby was late the party, and then got totally overshadowed by Rails. Most people don't even consider Ruby for anything other than Rails.
E.g [complete moron](https://medium.com/@natemurthy/all-the-things-i-hate-about-python-5c5ff5fda95e) which was put up here and on the main Python mailing list. The author even claims to be software engineer, could have fooled me. There is no sense in stating that it was debated here as too few people have a clue, presumably spending most of their life driving a sewage lorry or similar before getting home to take up programming in their spare time.
What do you mean node based interface? 
You're on /r/python. Anything from morons gets upvoted, anything from professionals who actually know what they're talking about gets downvoted. I strongly suggest **NOT** going with the /r/python herd.
JupyterLab has theme support. Right now there is only a light (default) and dark theme, but you can write your own themes if you want.
Better to have a forum that only allows professionals, not those who are related to Mickey Mouse and/or make a racket every time that they move owing to the spurs.
I have no idea at all what the above is meant to mean so clearly I can't comment, but possibly somebody out there can enlighten me.
&gt; But in Ruby, there is literally nothing famous except Ruby on Rails (which is not even application, but framework). tmuxinator, chef, jekyll and brew all come to mind as counter examples.
Going OT, but is there any advice in the book on what to do during the interview when a raving lunatic armed with a fully automatic gun starts shooting people? Of course, I've answered my own question, just like going back to the Cold War and the threat of nuclear annihilation, duck and cover.
The citation: &gt; For the creation and evolution of the Python programming language, and for leadership of its community. As much as Guido probably deserves the recognition for the first part alone, it's the community that's sprung up around Python that is perhaps most notable, and Guido's leadership has been essential to that. For me, one of the best things about the Python community is its [Code of Conduct](https://www.python.org/psf/codeofconduct/), and how leaders of the community demonstrate the "open, considerate, respectful" principles of the CoC. As well as making it a wonderful community to participate in, it fosters contributions from a wide range of people, which feeds back into the popularity and growth of Python and its community. 
Why does this sound dangerous. This is just one more layer someone would have to break through in order to gain access to your machine.
Yes, pretty much is. I found a neat piano roll program, Helio, but does not come with many instruments. May use this for a while.
but he works at tesla! must be a genius! /s
Relevant xkcd: https://xkcd.com/353/
Although not in the standard library, maybe you should check [click](http://click.pocoo.org/) for command line composability. In fact you have a documentation section named [Building a Git Clone](http://click.pocoo.org/5/complex/#building-a-git-clone).
I agree that the packaging system around pip needs improvement. I also think unfortunately pipenv is the wrong path.
Cleaning the toilets or hasn't he got elevated that high yet in life? Thinking about it I very much doubt that he's qualified for toilet cleaning, as the decisions that made making are perhaps far more complex than those needed when comparing static vs dynamic typing, and weak vs strong.
I entirely agree, where do people get their information from? However I do give full marks to program.viz for consistency, at least everything that they write is rubbish.
Not my field of expertise but how about [Natural Language Toolkit](https://www.nltk.org/)?
I think this would be better received if the post (or at least the README) explained what "CNN" means. 
convolutional neural network
Expect, he might have simply doesn't show up to any events for which people paid to see him &amp; fucks up the whole program. Let him be the nerdy introvert he is. We love him like that.
No, it is not a scanned document.
https://source.sierrawireless.com/airvantage/av/reference/hardware/protocols/mqtt-ts/ If you know ahead of time what kind of values are in the CSV, just use the above example as a template for your own encoder. You can further improve compression by storing it in column order and use run length encoding to eliminate duplication. In testing I got a 127 Mb CSV down to 16 Mb encoded and used bzip2 to get it down to 6Mb. 
It’s Craig Wright 
qtpy was created by the people that make Spyder. It's legit.
Self refers to the particular object instance that called the function.
/r/learnpython It's a reference indicating you're in a class. C++ uses ``this`` by convention, but strangely can also just leave it off.
It's still right over to the right.
metasploit(popular pentesting application) is written in Ruby.
&gt; C++ uses this by convention, but strangely can also just leave it off. So does Java.
 I use your qtmodern on about everything but this boilerplate needs quite a bit of help. Really interested in your glumpy tool though.
**Numerical integration** In numerical analysis, numerical integration constitutes a broad family of algorithms for calculating the numerical value of a definite integral, and by extension, the term is also sometimes used to describe the numerical solution of differential equations. This article focuses on calculation of definite integrals. The term numerical quadrature (often abbreviated to quadrature) is more or less a synonym for numerical integration, especially as applied to one-dimensional integrals. Some authors refer to numerical integration over more than one dimension as cubature; others take quadrature to include higher-dimensional integration. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
[Here](https://github.com/Clarissa-Bot/Clarissa)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Rikorose/dotfiles/.../**init.vim** (master → 3488f95)](https://github.com/Rikorose/dotfiles/blob/3488f9534dd0368a3820be28a47da1d8327487c4/config/nvim/init.vim) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dumoqwv.)
It's too slow as it requires many points. There are also complex singularities (e.g., `integral(1/(a+ib)`) that you have to handle very carefully.
I'm working on a pet project -- an Alexa skill for Old Time Radio called [Radio Fun TIme](www.amazon.com/Puzzling-Plans-LLC-Radio-Time/dp/B079MFVF6N). It started out as a simple, private toy to allow my mother-in-law to easily listen to a few of her favorite public domain old time radio shows hosted at Internet Archive...but I kept building on it, and now it's got a sqlite database of over 24,000 programs, caches your current saved-spot to Redis, you can search for shows, ask what's playing, rewind/fast-forward a user-designated number of seconds, ask it for a recommendation from a bunch of different genres (like kids, detective, true crime, etc), and my favorite for exploring what's out there, "Alexa, ask Radio Fun Time to recommend a random program." Definitely recommend developing Alexa skills as an educational project...you start thinking you're going to write this very basic, simple script very quickly, and the next thing you know...you've gone nutso full-stack...
It seems to me that Python is quite a bit simpler and a bit more sane. I'll give you just one example: `import`s (or `require` in Ruby). In Python, when you `import` something the module becomes an object in your local scope. It has functions attached to it which aren't methods, but otherwise it functions quite like an object does. If I `import argparse`, I then have access to `argparse.ArgumentParser` for example. This is a simple, consistent behavior. In Ruby, if I `require 'openssl'`, what do I have? Well, the module could be namespaced such that its members are under `Openssl`, or `OpenSsl`, or `OpenSSL`. Sanely designed modules will be consistent with the convention but there are no guarantees. I either need to look at documentation or source code if my first guess isn't right.
Just tried out VScode.. the autocompletion is magical. Thanks for pointing that out. You mentioned that you work on the devops side.. so I am guessing you are logging into multiple servers and using vim in whatever state it is in on those servers. Curious to know what you are comparing against? When I say I use Vim, its not really raw vim.. but with a lot of plugins, and tmux and other customizations.. Are you comparing VScode with VIM (with no plugins)? What does your VIM customization look like?
It is possible that Twitter, Github and Gitlab have ended up being the biggest applications written in Ruby ... Unicorn appeared many times when scalability problems appeared in Github some years ago and the common problem with Twitter some years ago too in the same scenario ... Twitter migrated to Scala, but Github maintains their code closed, Gitlab is open source, but their hardware requirements are not small. Now with Python you will found now Web Frameworks (Django, Flask...), ERPs (Odoo based) scientific ones using PyBrains, NLTK, ... Math/Numeric apps based in Numpy, Bitbucket is Python based ... and over the web frameworks you will see the development of API-Rest fameworks, ideal libraries for microservices ... My appreciation is that Ruby is a "stand alone hacker" language, ideal for many "magic" things ... i remember libraries as SuperOperators that permited to define any character as an operator, or Magic Models, that define Active Record models and fields without any line of code, directly doing the queries to your database ... these libraries are now not updated ... with Python the "explicit instead of implicit" way of work ... is more closer to a team of programmers/hackers mind. and less magic in your libraries, do that you can use more these libraries together or build libraries that can work correctly with the other ones.
&gt; &gt; C++ uses this by convention, but strangely can also just leave it off. &gt; &gt; So does Java. So does C#.
&gt; Why was Hadoop written in Java and not Python? Why was Spark written in Scala and not Python?.. He doesn't know what the jvm is lol
Hey! Should I know the basics of HTML and CSS to proceed to Django?
Try this: take your existing path in the shortcut and change the file from *jupyter-notebook.exe* to *jupyter.exe lab*.
If you're new to coding, don't worry about whether the code you write is good or bad. It's going to be terrible, and a few months down the road you'll look at it and think "What the hell was I thinking?" Writing good code is something that comes with experience!
Bronchitis and a sinus infection 😒 Main job... firefighter...makes it a bit difficult...
That worked! Thanks!
Why don’t you do the 100 Days Challenge? [pyBytes](https://pybit.es/pages/challenges.html) The gentleman who runs this site also has a slack group and he is sincere and very helpful. I like this format and for you and your son it might be fun to learn to code, have discipline and getting through 100 days of code with their challenges and so forth - would be a helluva accomplishment! Good luck! -dk
and from having a soul
right? hah
i used to be a physicist. now I'm a software developer. I think the main reason scientific code is terrible is equal parts culture, motivation, and experience. Math, as a language, is terse, so it's more natural for someone heavily steeped in math to begin writing code that resembles it (also a reason I think python was adopted is because it looks more like math than other languages). that means, terribly unreadable code for someone not intimately acquainted to the problem space. so you'll see lots of single character variables in functions that look like submissions to a code golf competition. Also, once you know the underlying math, a lot of scientific programming is pretty simple and straight-forward. there usually aren't a lot of inter-connected moving parts, so they never REALLY have the need to discover design patterns, standards, and best practices common in the software world. since everyone is writing shitty code, no one knows any better. so shitty code IS the standard and only practice 
That looks interesting indeed! I am not sure how complex it will be to use yet, but I'll start reading. Thank you very much!
Thanks for contributing this! You're one of my favorite people now &lt;3
Okay, try this: instead of trying to print `pageObj`, just call it directly: pageObj.extractText() 
This is going to sound basic but I'm converting a text adventure game I was making in batch to Python, the batch game was over 4000 lines so it's going to take a while for me to do alone but I'm excited for when it's fully converted 
Hopefully somebody like Brett Cannon has pointed out to the speaker that `assert` can be optimised out, in which case it's not going to be of much use. [When to use assert](https://mail.python.org/pipermail/python-list/2013-November/660568.html) provides a good write up on the subject.
In C++ `this` is a keyword but in Python `self` is just a convention, albeit a very strong one. Using another word is likely to severely restrict your life expectancy :-)
Can you suggest a good link for learning how to use pandas?
I know the joke ;)
Python got there first-est with the most-est, to paraphrase General Forrest. Perhaps a more interesting question is how did Python best Pascal. That was mostly an own-goal by Borland, but it also ties into issues around why open source has been so successful.
I mean if you're going to do this why not make it a pip install-able package so that I can play some pranks? &gt;:D
Astropy has a units module if you're doing astronomy.
Are you 65 years old? 
I'm trying to figure out what to program
Writing a program to tell me when will the next episode of my favorite tv shows will be aired.
any help?
What exactly is this?
Checkio.org is well worth working through. Hundreds of problems to solve, and you see others' solutions. 
Can i see you what did you so far? 
Glumpy is from N. Rougier ;)
&gt;from __future__ import braces I've got two daughters, trust me, I'm saving for this.
Concentrated evil ...
That is unfortunate. On the new Anaconda install -- you should be able to find the IDLE command (perhaps called IDLE3) in the Scripts directory under the directory where you installed Anaconda. I don't have a Windows box in front of me to test, but that is the best I can remember. 
You dropped this: /s
I’m mainly a C#/Java programmer wandering into this awesome world of Python. I love how fast and easy it is to get applications up and running. I’m hoping to learn the more advanced techniques of python and looking to make some coding buddies as I really have none. If any other new python developers want someone to chill and develop with drop me a PM, but to answer the question, I am currently *looking* for a project I can start dumping my time into thats both applicable and an informative test.
https://pypi.python.org/pypi/Unum
I’m curious as well, as a new developer I can’t tell what is happening ;(
Something that might piss you off if you have no clue what is going on. For example: min = lambda *v: _.max(*v) `*v` means "unpack"/"decouple", basically it takes all variables that you pass to `min()` and instead returns what `max()` would return. For example, if you need minimum grade of 5 not to fail, and you do something like grades = [4, 6, 8, 5, 2, 6, 9, 5] print(min(grades)) It will print 8 instead of 2 and now you overlooked it. Doesn't really matter in the example as you can see it, but it's annoying nonetheless. You'd have to call `max()` to get minimum value as he reversed functionality of those.
&gt; I also think unfortunately pipenv is the wrong path. why do you think that? I recently learned about pipenv and wanted to give it a try, so I'm curious to know why do you think pipenv is on the wrong path thanks
Me too :)
The code creates a binding between the name of a built-in function and defines a new function object with different than expected behavior. For example: sum = lambda v: reduce(op.__sub__, v) Creates a label "sum" in the current scope so that rather than adding the values in the sequence it subtracts them: &gt;&gt;&gt; sum([1, 2]) -1 &gt;&gt;&gt; sum([1, 2, 3]) -4 The rest follow a similar pattern, like negating a return value, flipping a boolean, or reversing a string. Paste it into a Python prompt and play around with it. Remember that anything the code "breaks" can be returned to its normal functionality by using the "del" statement. Using the above example: &gt;&gt;&gt; del sum &gt;&gt;&gt; sum([1, 2, 3]) 6 This is explained briefly here: https://docs.python.org/3/reference/simple_stmts.html#the-del-statement &gt; Deletion of a name removes the binding of that name from the local or global namespace, depending on whether the name occurs in a global statement in the same code block. So by deleting the binding of the label "sum" from the function created in the current scope, future labels of "sum" will resolve to the built-in function. Have fun!
I don't usually celebrate Christmas but this year will be an exception :-)
You don't. And if you really want to do it, then look up for things made using that framework that are very successful, especially more so than it's php counterparts. Also again, it probably won't work as not everyone in your workplace might know python and learning it is waste of time, and to your employer, money.
 &gt;&gt;&gt; for i in range(10): #{ print(i)#} ... File "&lt;stdin&gt;", line 2 ^ IndentationError: expected an indented block Worthless. Especially with that ugly syntax, why would you ever want that?
`this` in languages like java is here to remove ambiguities, like someConstructor(int value) { this.value = value; }
The Japanese aspect is a big deal that a lot of people here are overlooking - the core team around Ruby were all working in Japanese and while a lot of effort went into making the language and its community accessible to English speakers, you'd still run into walls of kanji when you tried to delve deeply into an issue or problem. It's worth noting that Ruby is still *huge* in Japan - tons of companies here use it extensively, because the roles are reversed here and it's often far easier to find Japanese-language information about Ruby online than it is to find the same information about Python. Things are changing rapidly though - I see a lot of Japanese start-ups going Python from day one, and some companies are switching Ruby codebases over to Python, especially those that are working in data science / machine learning fields.
E.g. `obj.method()` is pretty much same as `Class.method(obj)`, although I don't think second one would work, never tried, but if it does, I am not surprised either.
The need to prank my whole department is too damn high! (If I miss the next department meeting and figure out their computer passwords).
Show them [25 of the Most Popular Python and Django Websites](https://www.shuup.com/eu/blog/25-popular-python-django-websites-2/).
Ah, I'll check it out! Still a bummer that it doesn't work out of the box 
I wish this existed when I needed it. That's how tutorials should be done, non-half assed, with proper examples, including both bot creation itself and explanation on how to keep it running permanently, and what are your options for doing that. Good job :)
He's using strongly/weakly typed and static/dynamic typing interchangeably, and even goes as far as talking about etymology and the subjectivity of developers calling their language "strongly" typed because it's a positive word (???). He's just mixing up concepts here. Weak/strong tyoing and static/dynamic typing are two things. Kind of a head scratcher that he wouldn't know that... And what in hell is that guy talking about with that 2/3 "schism"? There might have been some legitimate complaints over package availability a couple of years ago when packages just weren't available in Python 3. Complaining that the code he wrote in Python 2 (because he didn't know Python 3 existed, somehow) didn't run in Python 3, as if Python is the first language that broke backwards compatibility We're reaching a point where, for new codebases, it makes no sense not to go for Python 3 these days. The library/module support is there. Hell, some of the major ones even dropped Python 2 support... Then he goes on with the "leaky classes", the performance issues... The guy is somehow surprised that Python isn't Java/C++. They're not in the same damn category of languages. His complaints about global packages / virtual environments are pretty dumb. That's just a matter of doing your research. It's one of the first damn things I learned when I started learning Python. Only point I could give him is the GIL that can be kind of a pain...
Tried that too😅
[Nice.](https://i.imgur.com/wOeAV2C.gif) But it becomes obvious really fast. Add a helper function where you can pass in the original function, your _enhanced_ interpretation and a probability. Like so: from random import random from functools import wraps def rroulette(f, g, p=1/6): @wraps(f) def inner(*args, **kwargs): if random() &lt; p: return g(*args, **kwargs) else: return f(*args, **kwargs) return inner int = rroulette(__builtins__.int, lambda x: 1+__builtins__.int(x)) Way more devious to debug. Has the added benefit of being harder to detect because it automatically uses the metadata (docstrings, ...) of the old function.
https://github.com/search?l=Python&amp;o=desc&amp;q=ZeroDivisionError+user%3Amozilla&amp;s=indexed&amp;type=Code&amp;utf8=%E2%9C%93 Did a search for the exception name then looked at issues/commits for it to search the whole site. To check code directly you need to set a user or repository, in the link above I used mozilla as an example.
To give even more context to terse variable names, sometimes they are certainly cultural (e.g. `fhat = ...` for Fourier coefficients, which I've certainly been guilty of, is pretty prevalent), but more often than not in my own code, I am generally implementing variable names that read straight out of a paper so that I can keep my own bookmarking within my code. E.g. I'm not going to read some paper talking about a quantity `x_ij` and name it something else, there's just no point. Even if it did read smoother in the code alone, you lose some readability that goes along with the paper. Ofc when the quantity is something physical it's not a big deal, like `temperature` instead of `T`, but often these variables represent some really random thing that would be silly to try to name. I mean if I'm taking a second order mixed partial there's no getting around it, I'm naming it `f_xy`, code reviewers be damned.
I was hired into my last job in the process of the company transitioning from Ruby to Python. The reason the company made this transition was very prosaic: there are more Python programmers in my country than there are Ruby programmers. This is a kind of a self-fulfilling prophesy which, as has already being noted here has a snowball effect. Personally, I worked with both Ruby and Python. Less Ruby, more Python. I don't like either language. In retrospect, I wouldn't learn either one unless I was getting paid for using them. I used to think differently fifteen, ten or five years ago. To me, both of them are a kind of step back in the history of computer science. Not exactly dark ages, more like prerafaelites of computer science. Unlike few, if not most popular programming languages that preceded them, these languages are eclectic in their core, they lack one overarching idea, they aren't built from first principles, have too much nonsense embedded in their design from the start. But this is a general trend: look at other modern successful programming languages and you will see the exact same picture. &gt; But in Ruby, there is literally nothing famous except Ruby on Rails Not so in my line of work. There's Vagrant, Chef and a bunch of related stuff are written in Ruby. Though I cannot say that these are in any way superior or inferior to Ansible. Both suck royally and are laughably bad at their core. Though, guess, this is just how modern software is...
Thanks for this, I’m reading it...
Got it. Thanks
Now this, this makes me paranoid.
At one time, several years ago, there was a choice, write from scratch in PHP Yii1 or Django Python It was a startup with goal and outcome was not actually clear, but as developers we thought at the moment that the choice is very important, not knowing that our company basically was "show-off that investors money is used but actually being stolen by high stuff". We ended up using Yii1. After a while startup ended, we coded with a lot of ugly things, looking into Symfony land and trying to implement something good on Yii side. Also PHP at the moment sucked balls with speed and weak types. Anyway, no person from high staff was angry and we understood that in the end there was no importance in stability and usability of service. To this day I wish we'd chosen python + django and learned for about 2 years new language and framework. It'd have change our lives faster. So... I would argue should or should not OP convince bosses to use python + django. At least after python (if python as web will become obsolete, how can any language be in future) they would know how to write in Nim, Crystal etc, without braces Sorry if it's hard to read in english, early in the morning for me
I like what you have done, but I have a question. I want to alter the code of an existing bot on a specific server for my needs. However, I can not find open source code on the bot. Is there a way to extract this code without it being public? 
How does the inspector work? It only opens as a blank tab for me.
Nice work :-) as someone who builds PyInstaller exes a fair amount, I'll personally find this quite useful. Thanks for releasing it
When dealing with XML, I've taken the approach of using etree to build and beautiful soup to parse, it's worked well. Now, I'm no expert in BeautifulSoup, but off the top of my head, you can do something like... Use the findAll method. For example, soup.findAll("address"). That will get you a list of all the address tags. Then, calling each tag's ".string" method will get you the contents (ip address) You could also sniff out the product name and associate those addresses to it in a dict or something. 
The way I convinced people to use Django was the testing framework being built in and the ease of deployment on EC2 with Elastic Beanstalk. The sell is mostly, hey we can have a really nice pipeline for ensuring features are working as intended and while PHP is super easy to deploy Elastic Beanstalk removes that arguement
BS also provides an easy interface for finding a tag and then iterating through its child or sibling elements. (e.g. Address Type and the following tags for each address) 
In terms of speed... neither gets close to the top performers in the field, so arguing from that perspective will get you nowhere, or, even worse into the land of some garbage like GlassFish + J2EE (or, quite differently, but still undesirably, something like H2O + custom-made C bindings for your chosen language). What Django has to offer that PHP frameworks aren't known for: 1. database migrations. 2. command-line tools to manage your project. 3. ORM that is built into the framework and integrates reasonably well with other parts of the framework. 4. more built-in security features. 5. debugging and diagnostics features. On the other hand, PHP was designed for rendering HTML. Plain PHP is probably the best tool for this task even today. Django templates don't hold a candle to the speed of PHP in this respect. Another disadvantage of Django is that every now and then it likes to throw a wrench into your engine. Sometimes you really need to optimize some database query, but Django's ORM will make every attempt possible to prevent you from succeeding in this task. Basically, whenever you get too far out of line with the way how Django developers thought about writing web applications, you'll be swimming against the tide. Some very reasonable things you might want to do will be met with a lot of resistance. Finally... you would need to make a business case for changing technology. Say, your company wastes a lot of time due to PHPs bad debugging features... well, Django might improve things here for you. But if all you need is to serve web pages as quickly as possible, Django will not help you there.
FOR HIRE Hi everyone, We are a remote team of developers from the Czech Republic focused on Blockchain, Cryptocurrencies and Machine Learning - Pattern recognition, Algo trading, NLP, Artificial Intelligence, chatbots. Our main stack is Clojure, ClojureScript, Python (TensorFlow, Pytorch, Django), AWS, JS, Node.Js, Angular, and C#, but we are familiar with other technologies as well. We are all senior developers, some of us are on a Ph.D. level in Mathematics or ML. We worked on a couple of projects last year from Blockchain and ML area - www.status.im, www.foldapp.com, www.evolta.fi, www.trezor.io, www.discomelee.com, Stealth startup - Machine Learning platform for forex trading. We have a free capacity and looking for new projects now. We usually work on long-term projects remotely, but able to visit as well. We use Slack, Github, Bitbucket, Confluence or Jira. We are an agile team and even have Scrum Master, so able to deliver a final product or join your core team and help with the development. Here is our basic website - www.flexiana.com If you would like to chat a bit you can reach me here - marek.rinko@flexiana.com Cheers:)
Which PHP frameworks did you have in mind? I could name a handful of PHP frameworks ticking off those 5 points. I prefer Python (like most others in proggit), but the PHP ecosystem has plenty of decent tech available nowadays. 
Great app. Works well with all of my apps. Have you considered Gooey for the frontend instead of eel? https://github.com/chriskiehl/Gooey
I worked for a company so old they had written their own dbms (nosql) and language in the '80 and I know they are still stuck with those. Migrating a codebase, which is fairly large, to a new language + framework is not cheap with the additional variable that you *will* introduce new bugs for a variety of reasons (everyone uses PHP so python is something new they have to learn, many concepts are very different between python and PHP, different frameworks think differently about the same problem, etc. etc.). If you want to start a new project which is deemed innovative and thus also risky to the point it can fail without anyone crying in pain, then go for it. Incrementally changing something that is working is easy to do only if you can replace components one at a time. For example, if you have a subsystem which is separate but talks with the app via RPC or HTTP which is also small enough that you could rewrite it in a couple of weeks of your own time, I would start replacing that trying to show the differences between the former and the latter (mind you, you have to get it better than the original). Business doesn't care for the language or framework you use, you and your peers will end up being the only ones happy for it (unless they like PHP that is).
You make me want to check out codinggame.com. Sounds pretty good also. -dk
I had a basic working knowledge of python when I started a position as a junior developer doing mostly backend stuff with Django. I learned both together without too much trouble. 
I wrote a full config GUI for my app because I had no idea this kind of thing existed :'(. Will definitely be checking this out, thanks
Blast it with piss 
Here is the image https://imgur.com/65YBPQX
Is that a graph you're plotting in Python? If so, why are you trying to analyze the graph when you can analyze the data?
What do you mean by "the biggest dropping rate"?
As you can see in the image, the two points within the red circle.
Several years ago when I was doing process design work I made Misu: https://github.com/cjrh/misu The novelty over the many other quantities libs is that I used cython because the other options were much too slow. I haven't used it in several years and it seems I haven't even built a 3.6 wheel yet, but I do take pull requests and I'm very liberal with handing out commit bits...
I read an image in the gray version like this https://imgur.com/z4ITKSh, my goal is to recognize the coordinate of the fiber which is the black bar on the left of the image.
You no longer need boot2docker in OSX.
now the gray scale distribution seems to tell me the features, the points within the red circle represent the edges of the fiber. All i need to do is to acquire the x coordinate of the points in the circle. However, I dont know how to do that.
Should all discord bot functions be async?
Social Media start-up run by people I know are looking for a Django specialist. £2500-£3500 a month: http://jobs.gohire.io/11288/
Oh! That's great mate ! Thanks for your reply it helped me and I really appreciate it :)
Please consider writing for Free Software alternatives instead. Discord is a huge privacy and security risk.
Did they fix the JS bug? i.e., can bokeh or matplotlib notebook etc be used? It was awesome otherwise.
&gt; the core team around Ruby were all working in Japanese TIL DHH is actually Japanese. /s
Are you trying to only get the fractional part of a float? If so, `math.modf` should help you here.
Unless you're senior level dev, the only developer, or a python savant, there isn't a whole lot you could do to convince your boss. You should be prepared, not only to explain the benefits of python over your current stack in how things are used, but also how you're planning to migrate from one to the other. Show that you're considering all the angles, all the risks.
Thanks but this is not what i want i just need one 256 number from 4.256
If you want both parts, fraction and full integer, use `math.modf`, otherwise `num % 1` does exactly same thing but returns only the remainder.
What's your end goal?
Trying to wrap my head around classes. And use the effectively. 
I have number but i need to split number 4.256 to 2 parts one parts is is 4 the second one is 256. Both parts need to be printed separatly in sentence. For example you are here in 4 minutes and 256 secund (for example)
Thanks
[removed]
The real questions you need to ask yourself is not about comparing frameworks, or even languages. It's about the people side of the equation. Who will be writing code ? Testing it ? Documenting it ? Which languages/frameworks are they comfortable with ? Because PHP code by PHP devs will be much better, maintenable, and perform better, than python code written by PHP devs. All else being equal, and if the question really only boils down to the technical aspects, then you can argue about the readability and expressivity of python code over php. In terms of strict performance, php or python, or even frameworks (as long as you pick major and battle-tested ones, not the one your nephew coded) won't matter. You might find some meaningless benchmarks on the web, but the reality is that they are very close to each other. And if you need the absolute best performance, neither is the right tool anyway.
you could also unambiguously put the opening paren before the def keyword as it's reserved, and then you might as well drop the redundant colon. [oh, wait](https://github.com/hylang/hy)
Pretty much. You run the risk of a function not returning for some reason and the bot just hanging in that loop.
This is not true, we're still active and looking for new funding sources.
Something like Blender Compositing, Sverchok Add-On, Animation Nodes, where we have nodes that connect data and it updates interactively as node attribute is scrubbed.
Cool! Maybe you could also write about using cogs and an error handler. Beginners also fail at these points and you are good in writing!
Basically it's like posting to reddit. Do you post and sit there waiting for a response (non-async methods) or post and go do something else then come back to it when you have a response (async methods). If you do the first you could be holding up other tasks you should be doing, like sleeping or using the bathroom. So using async is a way to say I'm not going to pay attention to this process till this function says it's ready. It allows the things you are await'ing to take a long time or even fail to return while not being all consuming to your bots attention. 
Sure.
DHH works on Rails, which is a different project.
`discord.py` is a great little library, and a decent introduction to event-driven programming. I'm not convinced writing your own `$help` command is necessary. The one the bot comes with will automatically digest the docstrings of your commands (if you write them) to produce itself. Have you had any problems with timeout related shutdowns on heroku? I was hosting a few of my bots on an AWS EC2 instance, and they kept getting disconnected. 
The well-adhered-to coding standards is absolutely one of the things which makes python great (helped by meaningful whitespace enforcing some of it, of course). Really helps the community when you've got a good chance of being able to read other people's code.
 PHP has a lot of security issues. Php compiler/interpreter sucks. Python has the best tools and libraries in the world. Django is the best web framework. Python and django are very secure if you update them regularly. 
&gt; this will fail if nb is a number without dot The simple solution:- result = str(nb).split(".")[ -1 ] 
whats the _ in _.max?
Read the source before asking. `__builtins__` is imported as `_`.
I built a script that records my university's live course streams and uploads them to AWS S3 so I can watch them asynchronously. The script starts recording once a URL of a minimal Flask web app is called, by scheduled AWS Lambda functions.
PHP is a different beast today. With PHP 7 the performance went way up. Frameworks like Symfony and Laravel do all 5 of those and more.
&gt; PHP has a lot of security issues. And this is the type of misinformation that people who don't actually use PHP like to spread. PHP is not inherently less secure than python. &gt; Django is the best web framework That's **HIGHLY** subjective and there's no shortage of people who would say that Symfony and Laravel are better frameworks. 
&gt; even though I have no clue how useful it is nowadays For what it's worth PHP has come leaps and bounds in the past several years. 
Same. I might just give up and post it with explicit attributation to him and his work, but I'd really rather get the proper okay from him if I can.
Oof, that's rough! You can still use the `optparse` module though. It's less nice than `argparse`, but will still save you a lot of effort over doing it all by hand.
No. You can run normal blocking functions in asynchronous ones. Just make sure they don't block for longer than few nanoseconds or you'll have problems. Async is used because when you want to do something that takes time, such as sending data over sockets, the code below that function is inaccesible, that's why instead of waiting for it to return and only then continue, we await it, which basically tells it to return prematurely from that block of code and do something else while the awaited function returns, once that happens, sometime in the future, it gets back to that block of code and continues work, in the end making it look like everything is happening at the same time. If we didn't use async, then the person who issued a command first would be served first, and others would wait till bot is done with that guy, wasting time instead of reacting to all requests at once and queueing up responses almost concurrently. TL;DR basically how process scheduling in OS works, which is why we can run a lot of things all at once even though we have just few processor cores, e.g. can open 300 programs at the same time even though we might have just like 16 processor cores that can execute something.
Huh, no. You are getting the integer part if there's no dot, which is not what he asked for. I warned him about this potential issue in my answer, and that's all I can do without knowing his use case.
You will receive an invite soon. Or, if the courses you've chosen are not launched yet, you'll get invites once the courses are ready.
&gt; If I can use the same test data, this will speed up the tests a lot. Just remember that fixtures are loaded fresh for every unit test. This is a feature, not a bug - it makes sure it's exactly the same every time. You can set it to only load once per module, though. Or as a halfway house, load the file once per module, and then create a copy of the data for every unit test. You'd do this by having a test-scoped fixture (copying the data) which is dependent on a module-scoped fixture (reading the file). &gt; using xlwings library, mainly to reduce how many libraries I need to learn and use. But pandas is probably a better way to read this file, but it will require some refactoring. I have added this to my todo list. I would personally recommend pandas to anyone doing significant work with tabular data in python. Extremely useful in a lot of contexts - a great tool to have in your belt. &gt; If I use a csv file, I will probably lose the formatting. True. If you need the formatting, CSV may no be right for you. &gt; My fear was mainly based on the common assumption that xlsx files get corrupted, even though I personally haven't had this issue in the last year or so. &gt; I am curious to know why do you think xlsx format is bad? Well, you've kind of said it there - I don't think I've ever had to consider CSV or JSON corruption in my years working with software. XLSX is a pretty heavy format for most tabular data - not to mention being opaque to a human (so it's hard to see what's gone wrong - it just stops working). This also means it's opaque to version control, which is really important. Primarily, though, my opposition to XLSX is that it locks you into a single expensive ecosystem. Even if you think all of your users are going to have a recent version of office lying around, the more agile we can be, the better. Not to mention that microsoft intentionally obfuscates their file formats to prevent FOSS software interoperating with it easily. If you save as a CSV or TSV, it can be opened by excel, or libreoffice, or openoffice, or gnumeric or even a text editor, not to mention practically every sane programming language on the planet. You give your users the power to choose how to use the software rather than needlessly closing doors for them. I was going to suggest writing to ODS instead of XLSX - that allows you to put in as much formatting as you like, and it should open fine on both excel and open source equivalents, but it turns out python actually has pretty poor library support for ODS. That's weird and unfortunate. &gt; Do you think thats a reasonable compromise, or is there a better solution? Yes, I like this much more. If your users want XLSX, then having it as a target format is fine (although if it were possible to shift your code and them over to ODS, that would be ideal). Keeping the internals independent of microsoft's clutches is a great step to take. 
I've been a good fan of it. I started using it last week and have been finding it helpful. Just need to set it to Kanban and know how to organize issues to optimize the experience.
Well, you must have one weird PDF then. This works perfectly for me: #! /usr/bin/env python3 import PyPDF2 pdfFileObj = open('target.pdf', mode='rb') pdfReader = PyPDF2.PdfFileReader(pdfFileObj) numPages = pdfReader.getNumPages() pageObj = pdfReader.getPage(0) results = pageObj.extractText() print(numPages) print('-------') print(results[:300]) ...returns the number of pages and the first 300 characters of the `results` string object.
/u/breamoreboy's code works just fine with or without a dot. &gt;&gt;&gt; str("1.1333").split(".")[ -1 ] '1333' &gt;&gt;&gt; str("1333").split(".")[ -1 ] '1333' &gt;&gt;&gt; 
Thanks for the help buddy. And i think you are right i think i should try that code with other pdf files too. Thank you so much.
How many threads? If you are talking about less than a couple hundred threads it's not worth the fight. 
It varies. And usually above 1k or more
my apologies. Here you are https://github.com/HassamSheikh/YARL
:/ I'm not sure what I think of the whole Machiavellianness here. Actually have it be the best option and have a good relationship with your coworkers based on a track record of skill, knowledge and good judgment? I mean the normally argument is that thread spawns and context switches are expensive which is why they aren't used for asynchronous applications with thousands of connections. The slightly odd thing is that `pyqt` is all "reactor machine callbacky" already... so it perhaps odd that you are using threads. I mean if you want to go all "psyops" you might try generally convincing those around you who pay more attention to you so that your boss can use their thinking as an indicator that it is a good idea... 
Because your bot most likely isn't the only bot in the disorder server. You don't want your bot spamming no command found when folks are trying to use other bots. It doesn't help you and it doesn't help the user.
Many tutorials use filler Auth stuff and then switch it out after they are finished. So the Auth credentials probably don't work anyway.
Thanks, I love `oftype()`.
I find `Xpath` with `lxml` very useable....
By "works", you mean "does not fail"? It returns something, I agree, but op asked to get only the decimal part. In case there's no decimal part, this code returns the integer part. Which is most probably wrong. If anything, my guess is that it should return 0, not the integer part. So I would first check if there a dot in str(nb), and return '0' otherwise. But without knowing more about op's needs, I cannot make this assumption.
He wants to delete the part *before* the `.`. An input of `1333` should be giving `0` as the result, not `1333`. Imagine if he was using the code to print the 'cents' from a purchase: 1333 has a remainder of 0 cents.
No, as said it won't get the part after the decimal (.0) if there is no dot. The following will parse it properly, although the other answers with modf are probably better overall. result = int('0' + str(nb).partition('.')[2])
I would not do it. Having worked extensively with async, you are always one 20ms synchronous mistake away from a catastrophic bottleneck. And sometimes these can be difficult or impossible to bypass. For instance, suppose you are making a blocking call from a synchronous API with no async support. What do you do? Well, what we did was put that call on a thread and use messaging to mimic async. Ironic if you ask me. If your requests are truly that easy to handle, you shouldn't need 1000+ threads to run the program. And if they are not, it is code smell for a wrong architecture. When the amount of requests have become untenable to keep contained in a single app of ours, we know it is time to move to a producer-consumer job queue instead. That way we can fire up as many workers as we need to meet demand. 
Currently using p&amp;c queues and while the threads increases like about 5000 app crashes... And have to force quit
Are you sure asyncio will solve your problems?
I simply run some test like counting upto 10^7 with threads and with asynci. Seriously threads takes 4 * times and times increases as the threads increases
Is your test representative of your app? I.e. is it easy for you to switch it to asyncio? If so, you could do so and show off the results.
Well not easy to port. 
`x_01_2`. Ugh. I admit to nothing!
Not really sure what you're saying here. But you shouldn't be creating and destroying threads. Internally to you app, you should have a thread pool that is provisioned up-front. All jobs go on a Queue. The thread pool workers then work on the jobs. This is if you're doing your producer-consumer in-app. Generally, you would want to use an external infrastructure for that so you can multi-process the workers.
Are you 100% that moving to asyncio would actual solve your problems? You know that asyncio is better than threads in your test script, but there still might be different stuff going on overall that means that the switch to asyncio wouldn't actually solve your problems in your app. I don't mean to say that you're wrong, but just that it's hard for you to know that you're right until you actually fully do the port. Also assuming that your port actually would totally save 4 times the resources as you mentioned in another post, would the required change in developer philosophy plus the developer cost of the port be cheaper than just spinning up 4 times the servers? Basically what I'm saying is, what are the business arguments against your idea?
&gt; DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE Which of course means you can't do what the fuck you want. You have to respect their copyright. Copyright is something that you can't give away even if you want to. It can be taken away after a period of time, but you can't give it away. Licenses like this are the same as putting no license at all.
Use the raw data and it'll be a lot easier. Digitize the graph if you have to.
This is a great little tutorial (I'm using it to teach myself how to write a discord bot now!) but you're missing a few key steps. First, you never mention what to do with the secret code. I had to look at your full source code to notice the `bot.run()` command at the very bottom of your script. Second, you should probably mention that the URL permissions link you made needs to go into your browser. I pasted it into my discord room thinking that's how I got my bot into the server. Oops. Third, you never actually explain *how* to get the bot into the server. I have my bot running at the moment, and it has permission to join my discord server, but I can't figure out how to get it to join the server. Great tutorial otherwise!
Mapping as in assigning latlong? What's your spatial identifiers? Address? How many records? Google (among others) have a geolocation API but it's rate limited.
Storing them in a config file is *absolutely* the correct thing to do. With that said, I like ini files for config, not json. ini files are easily readable and writable by humans, and THEY CAN CONTAIN COMMENTS. My best practice is to hard-code every variable as a default and optionally overwrite them if they are specified in the config file. This ensures the "common" configuration is taken care of without needing to explicitly specify all the params in a params file. If there are params that absolutely need to be required, those can be required in the config file by not have the default hard coded. This can be accomplished as smply as doing a params['myParam'] instead of a params.get('myParam').
The simplest way would be to serve all your content over https or over plain http. AFIK there is not a way to make Firefox ignore mixed content.
Generally, the best way to get buy-in for a technology is to do a demonstration showing it solving a known issue. This can be done in a test environment, or in production with a small subset (&lt;5%) of real data/users. It is hard to push back against real-world data.
thanks!
thanks!
Unfortunately I have no control over this. These are AV devices that serve up a webpage when you navigate to their IP address to adjust settings. 
Because Ruby sucks.
Source : http://nbviewer.jupyter.org/gist/celliern/127f1dc38ac582a83d9618407fdbaedb/model_compare.ipynb I feel like a sum-up of the classification chapter was missing, so, voilà! The red dots are the people that do not use car for daily use, gray dot are people that do not. The confusion matrix (upper right) show how many of the test set are correctly predicted True (+/+), False (+/+), the number of false positive (+/-) and false negative (-/+). Data being (slightly) non-linear, random forest classifier and SVM with help of the kernel trick behave nicely. The Logistic Regression cannot capture the non-linearity (as well as the SVM without linear trick, not shown here). The decision tree and the KNN tends to over-fit the data. Hope you enjoy!
That's exactly the idea. A funny placeholder, inspired by https://github.com/ajalt/fuckitpy - cause who cares about licenses in a funny snippet like that. :-)
This only applies if they make a copyright claim. It's not like assaulting a person where then police will automatically step in, no matter what the victim says. Plus, in some juristictions you can relinquish copyright. I agree that the WTFPL is legally ambiguous, just wanted to correct some points.
I've had to write an AutoIT script and call out to it from my python code to handle something similar in the past.
https://imgflip.com/i/253jmy
Yes, I want to plot the lat longs on a map of the US. Each individual lat long is associated with a unique ID, and about 1.4m rows.
right... sorry i come from perl where _ is the implicit parameter u.u
**For Hire: Financial Analyst / Python Developer** I am trying to make the jump from financial services to tech. Available for full-time positions, part-time positions, remote, on a project-by-project basis, and for small tasks. Python: NumPy, Pandas, scikit-learn, XGBoost Experience with: PostgreSQL APIs used: Google Finance, Yahoo Finance [Linkedin](https://www.linkedin.com/in/gregorywinter/) [Github](https://github.com/Superxc1000) 
A tutorial that doesn't suggest making commands by chaining on_message elifs?!
I like the 110% coverage :)
Nice, this looks thesis worthy. Will steal this style for my work.
This is an 'home made' style (that I use for my thesis btw). I can share it easily if you want ! ``` figure.autolayout : True savefig.dpi : 300 savefig.format : pdf savefig.transparent : True font.family : serif font.size : 11 text.usetex : False lines.linewidth : 1 lines.antialiased : True axes.formatter.use_mathtext : True axes.spines.left : True axes.spines.bottom : True axes.spines.top : False axes.spines.right : False axes.xmargin : 0.05 axes.ymargin : 0.05 axes.facecolor : white axes.grid : True grid.color : black grid.linestyle : -- grid.linewidth : 0.8 grid.alpha : .5 legend.fancybox : False ```
Just finished some scripts interacting with a VMware vSphere cluster. The first one creates a virtual switch and port group with settings from the CLI and the second creates a VM with settings also from the CLI. This is for a school assignment where we had the choice of choosing our own programming language. Since python has a module for the VMware API I figured why not. As for the next mission, I am continueing to learn Django in order to visualize statistics gathered from discord servers with my little bot written in python and SQL.
Have you tried disabling the: "Deceptive Content and Dangerous Software Protection" settings? Depending on what the issue is with the certificate, you could also overwrite the one that's playing up, with the current one... In short fiddle around with your certificate settings... though obviously be warned that this could leave you vulnerable to man-in-the-middle type attacks etc.
Nice!
&gt; And probably most evil of them all, enumerate() starts indexing from 1 &gt;:( There's cases where that could be useful tho right? Wouldn't it be more evil to throw in some duplicates?
Sadly it's never useful to a mind of programmer, `i + 1` for printing is simple, but when you need to multiply with `i + 1` or `i - 1` it becomes long messy writing which you might get lost in. Hated working with whatever language Matlab has, and kinda dislike Lua's indexing too.
Quick question &gt; from discord.ext import commands Is commands a class that comes directly from discord? I’m an intermediate in python so I’m really curious. 
Heroku is godawful for the purpose of hosting discord bots, I help out a bunch in the d.py discord and theres an endless stream of issues that occur only because of heroku. Amazon's ec2 should be fine, but truth be told sometimes discord just likes to kill connections. (By the by, scaleway/ovh are a good chunk cheaper for more hardware) The rewrite branch of the lib has reconnect logic which solves this problem. 
But.... enumerate has the option built in, and as you mention Lua indexes from 1 by default. I get that in most cases it is not ideal, but in some cases it is desired. Wouldn't randomly generating indexes leave potential gaps in iterations? Wouldnt it be harder to find something which leaves no gaps, functions as designed, but produces inconsistent results?
What is your email?
Check PM.
enumerate() returns index and a value from a list, without using the index, index is just a number for you, you don't use index to access anything from a list in "pythonic way". If that's not what you're talking about, then I have no idea what you mean, sorry.
Hm, you dont actually explain a lot of functions within the lib- for your add command for example, you use the d.py specific idea of "converters", which tell the lib to modify the arguments based on typehints, without noting you even do so. Same thing for the various send methods. Furthermore, your help command is kinda bad practice-y, as the lib provides functions to automatically generate help from docstrings- subclassing the commands.helpformatter class and passing it to the bot class on creation is a much more scalable method, and lets you do a bunch of neat dynamic things, like hiding commands based on permissions. Plus, embeds only allow up to 25 fields. (They're also murder on screen real estate) On the subject of heroku, I cannot recommend that people avoid it enough for the purpose of discord bot hosting. It is uniquely ill suited for it, and the number of strange issues it causes in the d.py support server is.... Sizeable. 
I'd say the best thing to do is to have `settings.py` :) import settings print(settings.rest_endpoint_1) It's really useful and becomes part of your code, the only downside is that it obviously won't work if there's no such file and it won't be obvious to normal user as there's no config file, just `settings.py`, which is technically still a part of your code.
You may try https://robotgame.net You write scripts that control robots fighting with each other. 100% python 
I don't see how asyncio would benefit it. There's no reason to run a big application on big thread, and since you're using pyqt, you still need more than one thread so the window doesn't freeze.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Rapptz/discord.py/.../**commands** (rewrite → 355eb08)](https://github.com/Rapptz/discord.py/tree/355eb08b25b5c46c4c061cf50594650738ac09cf/discord/ext/commands) ---- 
Look at [this code I wrote](https://github.com/vivint/selenium-docker/blob/master/selenium_docker/drivers/firefox.py#L83-L130) for how to set Firefox's browser flags. Then, try setting: `browser.ssl_override_behavior = 2` `browser.xul.error_pages.expert_bad_cert = false` `security.ssl.errorReporting.enabled = false`
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [vivint/selenium-docker/.../**firefox.py#L83-L130** (master → 47a75fa)](https://github.com/vivint/selenium-docker/blob/47a75fad97a4205d7e6c9a8625366789af84369b/selenium_docker/drivers/firefox.py#L83-L130) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply duo65ap.)
Yes, so for example if you are printing a list on screen, and you wish it to start from 1, this evil version of enumerate would actually be doing you a favour. Presumably this information is being used somewhere, which would become obvious if an index is missing (or out of any kind of order) as opposed to all the indexes being present but with duplicates, which could cause undefined behaviour. I've been watching R.Hettinger videos and am genuinely interested in how enumerate works. I also recently did exactly this, required enumerate begin enumerations at 1. Which prompted me to ask, as I am wondering if I have broken some unwritten rule about enumerating from 1.
You still need the whitespace. if joke &gt; head: #{ whoosh() #} 
I have no clue, but it's something similar to what def custom_enumerate(iterable, start=0): for el in iterable: yield start, el start += 1 nums = [i for i in range(10)] for i, el in enumerate(nums, -1): print(i, el) for i, el in custom_enumerate(nums, -1): print(i, el) Like I said before, index does not affect anything as to how elements are returned, though everyone uses print(i + 1), so it wouldn't help, as everything would start from 2.
Yay you win the internet! People want to be just like you! o &lt;- The point . . . . . . x &lt;- you
Thanks. I also forgot to give my bot role permissions to access the test-bed chat room, which was why it wasn't showing up.
I know, that's why it's worthless, that's the whole point of using `{}` in every other language, to define a scope of something, whether it's a class or a function/method, for loop, if statement... Why does this even exist?
That is a great suggestion. I'll put it in the advanced tab later!
I think we agree :-) Here's another example: You've got a database, and are using the first entry 0 as helper storage, but you want to display everything after 0 to the user, so enumerating from 1 comes in handy because your db indexes are being shown to user, but your helper is hidden. Bad example maybe cos whats a database worth if you cant remove keys, and removing a key in this case would ruin the effect... but another example nonetheless.
Thanks man! I understood that it was a module, bad wording on my part I guess. But this code does help me see how it works. Took a couple classes on python but nothing was really applicable to the stuff I’m interested in programming (like this). Thanks for that link!
`input()` returns strings and you can't compare strings to operators, in fact, operators need left and right value or it's a syntax error, check for which operator user selected by adding quotes. Also `if statement` "enters" it's inner block with `:`, it is required to be there. if c = "*": # multiply
Wow, this looks really helpful. I used eel because it allowed me to create my own layout and it was small as well as allowing me to call JavaScript functions from the python script. Generally with things like Gooey use another package (wxPython in this case) which can be quite large. I wanted to make something small yet still look nice. Still a very good recommendation though! Might use it in another project if it works for me.
= is for assignment. == for comparison. And if you want to compare the input, that is a characters you must enclose it in '. Also you miss the : at the end of the if. Your example must be: if c == '+': var = a + b
That depends on what you want to do and how you retrieve data. If you want to skip first element, simply use slicing: for i in range(10)[1:]: # removes first element from list. print(i)
Note re pipenv: &gt; Pipenv — the officially recommended Python packaging tool from Python.org
You're mom gay.
I see your problem. Python thinks that you’re trying to assign c to * in the it condition. Therefore, giving you a syntax error. For comparisons in Python, make sure you use conditional statements. Ex. if c == “*” : # Do some things Now for your original problem, the input function only returns strings. So you need to use “+” or “-“ etc. Also, when you ask the user to input numbers. Make sure you convert those to integers so that python can evaluate your code. It cannot do integer-string conversion implicitly. To do this try something like this: num = int(input(“Type your first number here “)) That will take the user’s input be automatically converted to an integer ready for evaluation. I hope this makes sense, good luck!
a few things, if you're checking whether or not something is equal it's '==' not '=' and you're printing c which wouldn't be the answer as it's stored in var. I'd check to also see if var is reserved in python but something tells me it's probably not. 
You can slice ranges? I did not know that... thx! Going back to &gt; *v means "unpack"/"decouple" Can you point me to more info on this? I understand tuple unpacking, but what is this trickery? 
The three tools mentioned by the op accomplish all of the things that a built-in venv provide plus much, much more. The advances provided by these additions to python's packaging toolkits were needed and not simply from a security standpoint. Plus there are plenty of tooling integration that pipenv brings to the table. For example, no need for virtualenvwrapper or a separate pip-compile, pip-tools. And more. The ability to categorize tools like pytest, or ptpyyhon, bpython, etc. which are installed into your development environment but not production. To the untrained eye, one might think that venv will handle putting all of those additional pythons on your system like python 2.7 python3.3, python3.4, but then .... you'd be wrong. Much more goodies, and no desire to debate their usefulness. One is free to run with the 'big dogs' or run with the "shitsu's". It's a Burger King World out there, even for those who choose not to eat there. 
Ty, ty for using simple language.
Ty
I was supposed to put var not c in the print command. Ty 
Ty! You helped allot
I know.
What if I need my personal account to send a message in a chat every 10-30 minutes? How could I accomplish that? 
Did you use a test/validation set? 
Yup. Been using venv for some time now, and I never felt there is something missing. It works great! 
pandas and matplotlib noob here learning this stuff!
Yeah!
Can venv or virtualenv use different python versions, or change the default python in that environment similar to conda?
The article's choice of tools is dizzying. Conda, via the complete anaconda distribution or the miniconda install, is soooooo much cleaner. You can have as many Pythons as your heart desires, all complete with their own venv's. You could even get crazy and install pipenv, pipsi and pyenv on every version of python that you install... let's go down the rabbit hole. I agree with /u/tomz17 
I like yaml as a happy medium between json and ini files.
https://docs.python.org/2/library/2to3.html#fixers
And when this cacophony of tools happen to not play nice together? or simply stop being maintained? Pythonbrew, pythonz, virtualenvwrapper, virtualenvburrito, and on and on and on... These tools come and go. The one sad constant is that there doesn't seem to be any real innovation in the Python space (outside of ML) as compared to other languages. Just iterating/tinkering on tools that are not pushing anywhere new. 
w is for write only. a is for append with open('file_name', 'a') as f: f.write(output)
yep, as the others say, a config file is certainly the way to go for this. for example, here is one i use for a project: https://github.com/mariochampion/roboflow/blob/master/robo_config.py which contains vars/constants. and it is called in other files via: import robo_config as cfg and it is used in context, like: retrain_dict["modeltype"] = cfg.retrain_model_default retrain_dict["mobilepercent"] = cfg.retrain_mobile_percent_default retrain_dict["steps"] = cfg.retrain_steps_default although there are other ways, this is pretty standard and pretty convenient. good luck!
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [mariochampion/roboflow/.../**robo_config.py** (master → c675d31)](https://github.com/mariochampion/roboflow/blob/c675d31bd3dbdebc4f239a19a3d11788a7d18892/robo_config.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply duob2gj.)
I subscribe to the premise that is "to each its own". However, that is not to say that "my way" is the highway and others who don't agree with it, are on some dizzy road to nowhere. Look, I'm a shutsu on so many things that one can possibly use wrt python. Why its only within the last 6 months that I even started to use pyrhon3. But just cause I don't use metaclasses *after a but if a go at it) or write a lot of decorators, doesn't give me the authority (as opposed to the right) to steer folks away from using them, that this stuff is .. whatever. So if your work flow doesn't require the capabilities that these tools provide, then stick with what you know. Personally I find it hilarious to read statements such as the one being referred to. To me, it's like shitsu's telling big dogs that they shouldn't be buying 'big dog' dog food, let alone eating it. And conversely who gives those big dogs the right to say we can't buy shitsu dog food, let alone eat it. 
A stealthy change that has the potential to screw you over is the division operator, /, changing behavior from integer division to automatic float conversion. To do integer division in Python 3 you use //.
Thanks!
I feel like all these problems are solved with virtualenv. Maybe I'm missing something but you can run multiple terminals serving multiple virtualenvs (wee) that you could use for testing different projects. You're two steps away from just using Docker but eh... What do I know?
&gt; Can venv or virtualenv use different python versions Sort of. But not in the way you are probably thinking if your brain is adjusted to conda-world. venv does not manage python interpreter installations. It manages python module installations within a particular interpreter. Venv itself is simply a module like any other (e.g. requests, numpy, etc.) belonging to a particular python interpreter. It comes included in newer versions of python. - First get the desired version of python somehow. Use the included system version of python or install whatever version of python you do want (i.e. from source, using a package manager, using the installer from python.org or wherever else) somewhere in your system (e.g. /usr/local/python, /opt/my_pythondist, or /home/tomz17/python3.6, or whatever). - Run the venv module using the desired python interpreter as you normally would (e.g. /home/tomz17/python3.6/bin/python -m venv myvenv) which will create a new directory called myvenv - Call the activate script in that new directory (e.g. source myvenv/bin/activate) which re-jiggers your environment variables temporarily to point everything to that new environment. - Install/run stuff as you normally would (e.g. ez_install, pip, setuptools, whatever)... you are now working entirely in this isolated environment so you won't affect anything globally, don't need write permissions to the global site-packages, etc. - When you are done, close the terminal or run deactivate to go back to the way things were before you started. IF you do want multiple python versions, this paradigm works pretty well. You just have to install/maintain those python versions using some other mechanism (e.g. your distro's pacakage manager, binaries from python.org, compile from source, whatever). Then you can create venv's belonging to a particular python version (e.g. /usr/bin/python3.5 -m venv myproject_py35).
&gt; Not if you understand why... Yeah, batteries inclu..... oh wait...
F-string. One of my favorite features of Python3. Instead of string formatting like "{0} - {1}".format(a, b) "%d0.2" x # (I rarely use floating point formatting, haha... How do I do this?) You can do: f"{a} - {b}"
Advice has to start somewhere, no? Best practices don't just spring up from the ground. There is nothing wrong giving one's opinion on a matter regardless to the fact that you may be a "Shih Tzu" or a "St. Bernard." Nobody is saying you can't do whatever the hell you want. I am simply stating my opinion that these tools come and go. There are tools that make my life easier, and I share that with my opinion on tools that either help or hurt that cause. I also happen to think that this dudes workflow is shit. &lt;- My opinion.
Check out python-modernize
thanks!
&gt; non-web meaning what exactly? Console tools (like youtube-dl) and GUI applications for Linux and Windows. 
&gt; And when this cacophony of tools happen to not play nice together? The other problem is that all of these tools are abstractions. Abstractions which are incomplete, re-invent their own paradigm, and in many instances completely incompatible with each other. So the fundamental problem is that I *can* understand what pipenv does only because I am already extremely familiar with how venv and setuptools work. So the fact that this wrapper goes off and creates some alien directory structure within ~/.local/share/virtualenvs/myproject-N3t0893 and keeps track of the installed dependencies in two files contained within the directory I called it from, and can then call pip in various ways to update/maintain those dependencies etc. is not black-magic to me. But since I already know how venv, pip, and setuptools works, this new abstraction isn't nearly as useful to me. It doesn't do anything I couldn't already do. Now find a new user and teach them only this "officially recommended" abstraction as the "way to do python packaging in 2018". The first time something goes sideways they will have absolutely no framework with which to understand what is really going on behind the scenes. If you take someone already familiar with how their OS works, you can explain how venv works in about 3 minutes. If you want to explain virtualenvburrito or whatever new BS is the fad this month, you have to start with explaining venv anyway.
Yeah... the more I think about all this, the closer I get to disavowing all "envs" on my machine to just running docker. I am still trying to wrap my head around how to do that efficiently and (most important) stably. 
Run 2to3 to upgrade your scripts and keep an eye on return types - python 3 stricter about returning byes versus strings. 
yaml's pretty great. I read somewhere that it's harder/slower to parse, but for stuff like config files, that's generally not a concern.
It doesn't. The `#` comments out the rest of the line, which is where the bracket is. It's a joke.
The only problem (or feature depending on your POV) with anaconda is that it ships its own python interpreter and binary libraries for each package. This is essential in an environment like windows (although a bit less so with binary wheels now allowed on pypi). However if I am on a system with an actual up-to-date compiler and up-to-date system libraries managed centrally by my package manager, I actually don't want a redundant copy of old crusty binaries (linked on an old RHEL box with GCC 3 or whatever continuum is using nowadays for max compatibility) shipped with each python package that has binary dependencies. This also breaks certain packages in subtle ways (e.g. the continuum version of scipy used to take a stealthy shit on some of its unit tests every few months due to weird bugs in older versions of GCC that had been fixed years earlier). So anaconda/miniconda is useful to get up and running quickly on a new OS, but not always the best solution long-term.
&gt; print(num == 5 or 6 or 7) &gt; What do you think will be printed out when that code is run? Probably more suited to r/learnpython.
According to that error print out, it looks like you're passing an entire string of integers into int()... Okay... Read a bit more...This looks messy. What is n = int(input()) for if you're not going to use it? list(map(int, input().split())) &lt;- See your problem? You're not splitting by anything. list(map(int, input().split(" ")))
&gt; what Hmm... I'm heading in that same direction. One of our problems was ignoring migration/versions because of inconsistency between developers and data scientists making frequent changes to the structure though, the goal is to include them but with a flavor of auto-updates from a master merge. Could you explain this a bit? "migrations aren't allowed to reference models (because if they change in between 2 merges before all databases are migrated, you're screwed)" 
You can even do `"{name} {adress}".format(name="tada",adress="reddit") `
If you do algebra recently (3.5) the `@` operator was added for matrix multiplication which solves many ambiguities and makes code easier to read and write. E.g. `A @ B`
Make sure you know to use list, dict and set comprehensions (which were backported to 2.7)instead of `map, filter` and the way more readable `sum, product,any, all` instead of `reduce`
Print is a function.
What exactly do you mean by "innovating the projects"? If the answer's something like "we have to be seen to be using a currently trending technology" then almost certainly don't bother. If it's not, then identify PHP's shortfalls and investigate the best solution to *those* problems. Include in your evaluation developer expertise, community support, tooling costs for starters.
Hm, most of the models hyper-parameters are let as sklearn defaults (as you can see in the source notebook). And these models won't necessarily generalize, of course, and it's pretty clear when you see the KNN and the decision tree models that tend to overfit the data : you have some "absurd" spots that are clearly due to that. But this is, IMHO, a nice overview of the classification borders generated by these different approach.
I felt stupid not knowing that product was a thing, then betrayed to learn that it's indeed not a thing. I trusted you, and now I heavily regret it... https://stackoverflow.com/a/7948307
You'd have to give the bot credentials to your account. Discord doesn't seem to care about multiple logins so that should be pretty trivial. Probably be something like ten lines of code max.
You can probably just ask the creator. Most are happy to share or have already published the source somewhere.
In our case, a data migration imported a model to assist in a data migration, some time later same model added a new column. due to a lag in production deploys both migrations get deployed at the same time, but the data migration fails because a non-nullable column isn't populated when the first migration tried to run Basically the same problem with referencing any code not guaranteed to continue to exist or work the same way from commit to commit.
It's okay... Life is made of joy and deception 
The fuck is a shitsu? 
[pathlib.Path](https://docs.python.org/3/library/pathlib.html#basic-use) is a super nice class introduced to Python 3. You can do: &gt;&gt;&gt; from pathlib import Path &gt;&gt;&gt; root = Path(".") &gt;&gt;&gt; subdir = root / "some_sub_dir" and it will automatically create a path to the sub directory, using whatever separator is appropriate for your OS (i.e. "/" for linux "\" for Windows). Also, as of Python 3.6, [dictionaries are ordered](http://www.pythonlikeyoumeanit.com/Module2_EssentialsOfPython/DataStructures_II_Dictionaries.html#Are-Dictionaries-Ordered?-A-Word-of-Warning). This is very important to be aware of (as discussed in the link)! 
Read the documentation, I guarantee it's in there. 
Can you help me with this script? IDK why it closes.... gross = input ('Enter Gross Earnings: ') fit = input ('Enter Federal Income Tax: ') ficat = int(gross) * .0765 deduct = int(ficat) + int(fit) net = int(gross) - int(ficat) print("ooooooooooooooooooooooooooo") print("F.I.C.A Tax: ", ficat) print("Total Deductions: ", deduct) print("Net Profit: ", net) input ("Press Enter To Exit")
I would include the full capability of what's in the spec file, so: - hidden imports - imports to remove - list of files that aren't included by default (e.g., certain DLLs) - option for debug mode - block for custom code
I don't think that you should have any classes in your library. `CsvLoader` and `JsonLoader` literally have no state. They only hold static functions. `Knead` only stores `self.data`, so every instance method that passes `self` should just be a function that hast`data` as its first argument. The instance checking that you do with the self.data() calls can all be handled with a decorator. What is nice about working with functions is that you can make these functions available at the top level of your package, such that I can write very readable code like &gt;&gt;&gt; data = dataknead.load(inp) &gt;&gt;&gt; dataknead.filter(data, lambda r:"John" in r["name"]) But most importantly, add documentation!
I actually like that you can do all the operations like pipeline.
Hi there. Once a function hits a return statement it returns that value and then *exits immediately*. Thus your `add` function returns `"Hello, World!" and then exits its body of execution. `add2`, on the other hand, has no return statement, thus it is able to execute each print-call that you make. [Here](https://www.pythonlikeyoumeanit.com/Module2_EssentialsOfPython/Functions.html) is a good resource on the basics of functions.
Are you familiar with [`collections.Counter`](https://docs.python.org/3/library/collections.html#collections.Counter)? It will count things for you: &gt;&gt;&gt; from collections import Counter &gt;&gt;&gt; Counter('abracadabra') Counter({'a': 5, 'b': 2, 'r': 2, 'd': 1, 'c': 1})
Have you tried the decimal module? You use, for example: n = decimal.Decimal(4.256) x,y = divmod(n,1) &gt;&gt;&gt; x Decimal('4') &gt;&gt;&gt; y Decimal('0.2560000000000002273736754432') &gt;&gt;&gt; 
 &gt;&gt;&gt; import numpy as np &gt;&gt;&gt; x_0, x_1, *the_rest = np.argsort(np.gradient(your_data)) `x_0` and `x_1` will be the indices of your data where it is decreasing fastest, and ..second fastest.
Just compose functions. It's so much nicer for me to be passing around a basic Python type around my code than Knead instances. Your code will be so much simpler too. I'd way rather import `dataknead` and use tab-complete to read off all the functions that I can use on my basic data 
You could probably get by with simple pki infrastructure. That way, if you wanted backup "keys" you can share the public key in an encrypted way.
This should go in /r/learnpython. That's the place for questions.
No not really, Odoo pretty much implements it's own framework which is quite different in design to Django, there's lots and lots of XML in Odoo, a fair amount JavaScript and only some Python from what I have seen. About the only similarities is that they are both Python projects, but do not share any code as far as I am aware.
nevermind i saw my error and solved it myself thank you tho :) 
When you install `virtualenv`, regardless of whether its on windows or Linux, doesn't it also basically install the python interpreter within your environment?
This is exactly what I was thinking about.. I was debating between using `conda` and `virtualenv` today.. I went with `virtualenv`, mainly because it was established, and I have heard it around more and probably integrates better with other tool chains. `conda` seems great, but it seems to be able to manage multiple libraries, langugaes etc. Even though the tutorial seem to be clean.. I am pretty sure theres more complexities I will encounter. Similary `docker` is more complex to manage and setup. A tool that solves a complex problem is generally more complex, and tends to also have more failure points. So if you dont need to solve a complex problem, its probably better to stick to simpler solutions..
If I had to hazard a guess, my thoughts are, that they're a) an Americanization of the word Shih Tzu or b) the human equivalent to that species.
/u/Bandung.. You obviously know more about python than I do.. but do you think that a complex solution like `pipenv` and others that the author pointed out.. also comes with more failure points, lack of integration with other tool chains, poor backward compatibility, unknown problems? I can understand that if you need to solve a very complex problem, you would need a complex solution. But if you have a simple problem, why make it more complex by adopting a more generalize tool chain? There are advantages that come with learning a more generalized tool set, in that you have more runaway in how complex a problem you can solve and have more runway. So you wont have to switch and learn another tool in future. Does the problem you are trying to solve/expect to solve in future require the complexities of this setup?
f strings are nice but are only in the very latest version of python 3, we can't use them yet on the current Ubuntu LTS python 3 version for example. Anyway, things that are more likely going to trip you up are division (already mentioned), absolute imports (e.g. local imports start with a dot now "from . import models", "from .models import Foo", but it only behaves like that for proper python modules. And unicode string literals can be a pain point when converting a large old codebase. Print function isn't a huge deal, as these are easy to fix. One thing we did for years before switching to python 3, is put this at the top of every .py file: from __future__ import unicode_literals, absolute_import, division, print_function
This way is fine. I don't know what method queues implement off the top of my head for their get command, but .get() is 'blocking' the execution of the thread. The while loop is not continuously running those functions over and over, they are all paused on the blocking call to get. The get doesn't return until there is something in the queue. Threads in python aren't real CPU threads you might get in other languages. There is the 'global interpreter lock' that only allows a single thread to execute at any one time; python is simply handling the time splitting for you. For many applications, this is not an issue.
call `&lt;queue&gt;.get(True)` and you can ditch the `while True` looping since the get will now block until it a value becomes available. It'll be more efficient than your spinning.
The split part is fine - the default is white space.
Makes sense.. thanks!
Sorry, what you have is correct, doing too many things at once. `get()` by default is True and therefore blocking. What you have is Pythonic.
A thoughtful question. Like you, I too had precisely those concerns. Which is why I stayed away from pipenv for so long. With regard to pyenv, well it isn't installed on my machine. However, pew is installed. pew uses pythonz to add python interpreters. And when I looked at pipenv's dependencies, they have pew installed. So I'm a doing a Strong Bad ( from Home Star runner) in my mind. "DELETED! There may or may not be collisions between what pyenv and pythonz do but my thoughts are that; a) I'm not a professional programmer, I'm a suit. Pyrhon is just a tool to me, like spreadsheets and things. Let me not push the envelope here. b) I don't have the time to explore such things in depth. That's not what I get oaid fir. So I get it. The sentiments being expressed here. Alas, over the years of continually using python, I've come to know far more than I should know for someone who just uses python as a tool. That came about from trying to share some of my stuff with colleagues who knew far less. Me getting calls as to why my stuff doesn't work or install. But when it reached the stage that some of it might go into production, whoa there, time for me to rethink things. I'll post what those motivations were and how I came to embrace pipenv shortly.
That much is true. But the key words are *for their own use* -- it doesn't say that I automatically have the right to redistribute the results freely. I'm going to shake some trees and see if I can get another expert on licensing to weigh in, but I'll be posting about this project in future WEWO threads. At the very least I can keep things rolling privately on my end.
Status changed to "Under Review"!
Ah ok. Also another question -- do I need to have task_done() after every single get() for my queues? I read the docs for what task_done() is but I'm really confused do I have to manually close each get()? When am I supposed to use task_done() in the example I have above?
The `concurrent.futures` module can help you do this easily. Specifically, the `ProcessPoolExecutor`. This is in the standard library, from 3.2. https://docs.python.org/3/library/concurrent.futures.html 
For work: moving a decently large application from bare metal into docker. Also learning how to use docker. It is wild. Do recommend. For fun: Trying to figure out a good stack/framework to quickly build and deploy decent-looking web dashboards from pandas dataframes. Any recommendations?
To me one of the biggest differences is strings. If you are processing text you will need to be careful. Python 3 stores str data as Unicode and must be specifically encoded and decoded. Python 2 was a bit more carefree about the differences between strings and byte strings, and had specific Unicode type different from str. I think python 3 is more sane when you get used to it but it means lots of old examples from python 2 are flat wrong.
Thank you all so much! With all the advice, believe I am able to formulate a good argument to make the new project out of Django.
Closes? It works for me. Why are you doing this? &gt; input ("Press Enter To Exit") gross = input('Enter Gross Earnings: ') fit = input('Enter Federal Income Tax: ') ficat = int(gross) * .0765 deduct = int(ficat) + int(fit) net = int(gross) - int(ficat) print("F.I.C.A Tax: ", ficat) print("Total Deductions: ", deduct) print("Net Profit: ", net) 
range in python3 is xrange in python2. xrange is gone in python 3
Yes, python can do that pretty easily.
Common stuff in Python. Either use an API that has been created for this purpose or scrape the data yourself. 
[Static type checking](https://medium.com/@ageitgey/learn-how-to-use-static-type-checking-in-python-3-6-in-10-minutes-12c86d72677b), if you're lucky enough to go straight to Python 3.6+
missing one tab before else
The FSF considers it compatible with the GPL [[1](https://www.gnu.org/licenses/license-list.html#WTFPL)]
Why MIT? LGPL is perfectly fine (PySide's license)
You still need the Qt libs, so it doesn't really matter which license the bindings are.
Less potential headache, especially if any ruling came down about linking LGPL code.
Try using find_all instead of findNext. I think it should work
Oh, right... I've only tried it in interpreter so didn't realize, because { is a special symbol, not sure why I didn't catch that if that existed it would probably be `\{`...
It takes up as many cycles as your OS allows it to.
I think a better question to ask is what sort of problem you are using Python to tackle that needs multithreading? Python is super quirky at best, and unstable at worst, when it comes to using parallel processes. Depending on what you're doing, it might be better to switch to a different language like FORTRAN or C, which has better support for parallel computing. That said, if you're using this as a toy problem to learn the basics of parallel computing, then that's totally okay. It might not be the fastest or most highly-optimized language out there, but it's pretty damn great for learning new skills!
 import math # X here is our number int_part = math.floor(X) if int_part == X: decimal_part = 0 else: decimal_part = X - int_part
Thank you for pointing that out. We have changed the behavior of the form to make it more clear for visitors.
**None** won't have a *find_all* method either.
Seems like a really arbitrary change to me. Is there any reason why they did that?
This really depends on the platform you're using. Windows, Linux, and ~~overpriced Linux~~ MacOS all have their own ways of doing things, since in the end you're *really* interacting with your system to check the value. For Windows, you'll need to interface with the [Windows API](https://stackoverflow.com/questions/1225057/how-can-i-determine-the-monitor-refresh-rate) to get the information.
That's not a scam, most of the users completed the survey already started learning.
If they won't swallow your first suggestion then at least make them use Laravel if still going for PHP.
Yeah, PySide is Qt4, AMD has languished for years as Qt has moved on. Under Nokia there was no movement on it, and the PySide2 fork for Qt5 has -- with *some* exaggeration -- never passed its own CI builds. So it sounds like they're actually putting some time into it... which would be great. Although why they don't just buy out or merge with Riverbank and eliminate the Damned Stupid License, I'll never know.
I believe they want to replace GPL solution with free solution. It does not matter much whose party it is. 
What does this mean? 1) If you are using PyQt then there isn't too much to get excited about really. Qt is probably the biggest and hardest C++ code base to bind to other languages. PyQt is mature and has been battle tested for years. PySide2 (or whatever the Qt people are calling this) will have to go through a similar maturation process, and even after that you might still not have a compelling reason to switch away from PyQt. 2) Qt doesn't have a good track record with bindings. They had PySide years ago and then put it on ice. They also tried bindings for Java with QtJambi (IIRC) and ~~dumped~~ gave that to the community. Not to mention a long history of ignoring other 3rd party bindings projects over the years. 3) If you are interested in developing bindings yourself for languages other than Python, then there is a good chance that the Python binding code in Qt is also generic enough that you could reuse a lot of it. I'm pretty sure that the same people who did the PySide work years ago are involved in this continuation of the work. I know they scrapped their first attempt and then developed a much better 2nd generation approach for generating the bindings. 
Whole world sees no problem with LGPL libraries, so you will have to specify even more. 
*dictionary.items()* instead of *dictionary.iteritems()*
That the people who "hate" Python3 are time-wasters and you should just ignore them.
[Porting Python 2 Code to Python 3](https://docs.python.org/3/howto/pyporting.html).
[PEP 238 -- Changing the Division Operator]()https://www.python.org/dev/peps/pep-0238/.
&gt; A tutorial that doesn't suggest making commands by chaining on_message elifs?! More than good for my tastes :) To be fair, that's what the discord.py library is probably doing. It just does it behind the scenes and abstracts that from the developer by hiding it behind a decorator. It's also a perfectly acceptable way of handling that situation since Python opted out of having a switch/case statement. It's a clean, clear and concise way to handle it and it's [literally recommended in the docs](https://docs.python.org/3.6/faq/design.html#why-isn-t-there-a-switch-or-case-statement-in-python). That being said there are lots of alternatives that are slightly less readable but a bit more powerful. I'm a big fan of using dict-&gt;func calls. If I were to handle command registration it would be more like. import discord async def add(ctx, a: int, b: int): await ctx.send(a+b) async def multiply(ctx, a: int, b: int): await ctx.send(a*b) async def greet(ctx): await ctx.send(":smiley: :wave: Hello, there!") async def cat(ctx): await ctx.send("https://cat.url/cat.gif") bot = discord.Bot() bot.register_command(add) bot.register_command(multiply) bot.register_command(greet) bot.register_command(cat) Then in the discord.py file would have the Bot class send those function calls to a commands dict. class Bot(object): def __init__(self, *args, **kwargs): self.commands = {} def register_command(self, func): self.commands[func.__name__] = func def listen_for_events(self, event, *args): if event in self.commands: self.commands[event](*args) It's an oversimplification but I do agree it would look a bit better than a long if ... elif ... else block.
I guess. TheFoundary seems to have ported their $2000 Mari application from PyQt to PySide to avoid having to pay for a commercial PyQt license. Now that the VFX-platform is moving to Qt5, they'll need a Qt5-based PySide. I wonder if they actually sent money to the Qt Company...
It depends on what you exactly need. Though you can test for current refresh rate by having vsync on, and hidden screen you render nothing into. The FPS will be around the current refresh rate of the screen. But I don't know if it's possible to do it without creating a window you're rendering to, if it's graphical application, then it should be doable no problem, otherwise what Yuktobania said, use OS syscalls to get the refresh rate which will be real and accurate.
&gt; I have no clue as to how it works in python (note that it's just an interpreter written in C language and all builtins are written in C No, the most well known version is written in C, cPython, but there's also Jython (Java) and IronPython (.net) amongst others, please see e.g. [Picking an Python Interpreter (3 vs. 2)](http://docs.python-guide.org/en/latest/starting/which-python/).
I'm talking about how `enumerate()` is implemented in Python interpreter itself, it could be written in C, could be in Python, I don't know, didn't ever check, not how Python is written. And I am 99% sure that everything we talk about Python here is CPython.
https://docs.quantifiedcode.com/python-anti-patterns/correctness/mutable_default_value_as_argument.html
&gt; And I am 99% sure that everything we talk about Python here is CPython. No, anything that gets discussed here should work with any variant if you're talking core language, the standard library or any third party module that is pure Python.
Are you going to tell us why you think it's wrong or do we have to guess?
Well then, what I meant is that `enumerate()` can be written in interpreter's language (part of the program that interpreter is), or in Python.
This is the issue, call the function more than once and the issue should become apparent. Well explained in the above posted link, recently used that link for some work colleagues.
Riverbank won’t sell for cheap, because it’s Phil Thompson’s livelihood. Nokia asked and couldn’t do it when they were actually investing a lot in Qt, I doubt the current owners have a bigger budget. This said, I bet PyQt will remain technologically ahead of PySide. Riverbank managed to automate most of the work with their SIP and has accumulated 15 years of experience in dealing with Qt quirks; PySide has always been too manual in its approach.
# stop spamming tech-reddit with the waste of time that is your "article", you have no idea what you are talking about # learn to code and get a job, PLEASE
Not to mention pyqtdeploy whick makes it somewhat easy to deploy to various platforms.
Yes. I and many others will not use GPL licensed libraries at work. It's not worth the headache. 
That's great. I've used pyqt and pyside in the past but with the obvious limitations. Full fledged support would be wonderful.
Working on a python tool to get tons of data from networking devices using pexpect and then parse the data for some data science.
ELI5 for Python beginners like me?
What you are saying is correct for an optional param. A required param is one that you must specify in the params file. This has no hard coded default. If the param isn't there, you will get a key error.
zip in python3 return an iterator of tuples, meanwhile, it return a list in python2. be careful.
PySide was supposed to be it, then it… died?
I love PyQt and use it a lot but the thing is that it doesn't come with an LGPL. You have to by a licence to use it commercially. 
This looks to be based on PySide, but updated to the latest Qt5 instead of being stuck on Qt4. Not sure what this actually means behind the scenes. Will they just make it 'official' in name only or will they throw some extra resources at it?
Will i be able to create portable cross platform python Qt apps without the user neeeding to install a python runtime
You can already do that by freezing your app for windows (putting out to an exe) and *nix systems come with python interpreter by default so you needn't worry about that. 
Why not? Unless you sell your software you should care about the license. If you are selling GUI apps then you get a commercial license, surely $500 is affordable in that case, right? I feel like no one cares enough to understand software licensing and want binary solutions: either it's copy-right or pretty much no license at all (MIT). 
I disagree, why would it be a show stopper? Linux kernel is under GPL and that never stopped anyone using it. It only stops people who know nothing about software or software licensing; people who want to use something free and sell it as closed proprietary package, which is just wrong. 
The LGPL is explicitly designed to allow linking to non-free applications. What kind of ruling are you scared of?
* Qt is a major framework for making user interface for C++ * people who make Qt also make PySide, so you can make interface in python * but unrelated company makes alternative to PySide, called - PyQt, its worked on more, more modern, but license allows you to only use for open source projects. If you want to go proprietary you need to pay they announced that PySide should catch up with latest in Qt and should be able to compete better with PyQt
pyside2 is qt5 already... i haven't read the news support but used many features of pyside2. it's supposed to support everything already...
The better solution is to compile it to your chosen architecture with Cython.
Most any open source developer that chooses to go with a different license, for whatever reason, is going to want to avoid the GPL. If you understand the differences between the GPL and MIT you should be able to come up with a few.
It's a tool that can be used to do those things, yes.
What makes it more powerful than tkinter?
Hm, is it just me or this article is nearly empty? It just lists the common python scientific stack (numpy, pandas, matplotlib) + sklearn.
It would help if you post what you tried and what your strategy is for solving these problems. Then, we may be able to provide help. 
Damn seems like you need to learn how to use loops. https://www.learnpython.org/en/Loops /r/learnpython /r/homeworkhelp Have fun.
Except gpl is great if you want your code to remain open. For a library, should really be lgpl though.
So long as your definition of open is GPL compatible sure. If not, you can’t use GPL code or you must change licenses. GPL may not be as open as you think it is.
I don’t hate it. I’m more confused as to why it seems to blow people’s minds that anyone would ever want to use anything else. Personally I prefer BSD/MIT compatible licensing. I also prefer FreeBSD over Linux. Unsure why this is weird, but I’m hard alone.
[This](https://github.com/arogozhnikov/python3_with_pleasure) is a good read - it mostly consist of awesome py3 features. And [this](https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/) discuss the py2 to py3 porting.
It is.
I am literally 75 pages into Automate The Boring Stuff right now so that tells you my level of Python Knowledge. Can you give me a quick 2-3 sentence explanation of what this is? I recognize this is not something I will be using anytime soon most likely but I am curious.
Sounds like you're trying to use the Microsoft SQL Server to connect to an Oracle instance. Why not just use `cx_Oracle` directly since you already have it installed?
do you think it would impact performance if I call a subprocess that calls the youtube-dl tool instead of implementing the youtube_dl module directly into python and using it in my code? Because you pointed me to the documentation of the usage of the tool itself instead of the python module
I prefer my code to be GPLv2. PyQt is GPLv3 and those two licenses are incompatible. If PyQt were MIT or Apache2, there would be no issue, right? 
Oh, right, I never thought of this. Given my usage of PyQt5 it's not an issue, but it might be for others.
How do I know what my db_addr is? Is that the name of the database? And how do I find my db_port?
Whooooo!
Maybe, `asyncio` is another viable option.
I've used both and I think PyQt5 is a big step up from tkinter. QT designer, a click and drag WYSIWYG template that allows you to go in and easiily hardcore overrides, is very effective and makes GUI design and testing very efficient and potent. It is Python-independent. It produces an XML file (file extension .ui but this is in XML format) that must be converted to Python but a couple of external conversion codes are all that is required. QT Designer really cuts down on GUI design and test time while hugely expanding the range of what that GUI might look like. QT Designer has a very large number of drop-and-drag widgets and add-ons. [tkinter now has a designer called Page and to their credit they are trying to catch up with QT, and I haven't tried Page (no need now) but if the YouTube videos on how to use it are accurate, it is nowhere as near robust as QT Designer]. QT5 has enormous flexibility, broad visual ranges (for lack of a better term) and works well as a smartphone interfaced. It has very deep research support. It is multi-platform. It is mostly (entirely?) coded in C++, so it is fast. I am not dissing tkinter. I used for years and if you are trying to kick out a quick and useful GUI interface, it is fine. And it is nice that it is Python-dedicated and in the libraries].
Personally i would set up a small web apllication (e.g. with flask). Then I'd do the up and download via http request. Frontend could be a python gui or a web page. 
You certainly don't need PySide to create an interface for Python. It is simply one way to use QT (you probably know that but your comment seemed to suggest that you could do this only with PySide).
db_addr would be what you specified as 'server' in your example. You would need to get the db_port from whoever told you what the db_addr is. If they gave you the DB address as something like yourcompany.oracle.lzndb.com:8081 then the number after is your port. so in the case above, db_addr = "yourcompany.oracle.lzndb.com" db_port = 8080
Performance-wise, it doesn't really matter. Importing the module into your code gives you more control over downloading videos.
One of the largest drawbacks for Python is that it doesn't seem all that receptive to a non-browser program interface for the user, i.e. GUI. How many Python programs have you seen where data or default assumptions are entered by typing them in at the top of the program when it is open in the IDE or editor. tkinter is dedicated as a Python GUI (interface) developer and it is always (?) loaded as a library in any Python distro. It's OK, but a lot of people here are saying that, for us at least, QT (now in the form typically of PyQT5 but using the QT Designer) is better, faster, and more feature-rich.
- db_addr is the address of your oracle server (dns or ip) - db_port is the port where oracle is listening, Usually 1521 the_ cx_orcale.makedsn is just a function to create a TNS string of oracle, if you have the tns on your tnsnames.ora, you can use that string at the "Connect" function (dsn parameter) You can find more info at the official [documentation](https://cx-oracle.readthedocs.io/en/latest/module.html#cx_Oracle.makedsn)
That's as clear as mud to me, would you care to have another go, thanks?
I wanted to avoid handling possibly 1000 accounts (ftp or webapp). With email the data are save on the server and since I have control over the sending client I can send identification info in the header of the mail and have it sort with that. Without them needing an account.
wow, thanks that has all the info I've been looking for! is the "HOST" the same as the server name?
Thanks for the code! Now I'm getting the following error: DatabaseError: DPI-1047: 64-bit Oracle Client library cannot be loaded: "C:\Progra~1\Oracle\11g\product\11.1.0\client_1\bin\oci.dll is not the correct architecture". See https://oracle.github.io/odpi/doc/installation.html#windows for help Does this mean I need to install Oracle Instant? I thought if they have Oracle in the backend they would have all the necessary Oracle things installed already?
Well until this is actually done and working with Qt5 I am sticking with wxPython :))
No problem, and yes the "host" is either the server name or ip address of the server.
How is this identification info generated? Maybe this makes it difficult via web page. But the GUI solution is the same if you use mail or http request. 
Yes, you need to install the oracle instant client, follow the instructions at the link on the error. (and check if x32 or x64 as @enile8 said)
It's all customers that you contacted in RL before, each would get a unique ID and an email adress on our domain (with the ID being part of the adress). Fetch-All email account would get all emails and script sort it according to ID. 
Try /r/learnpython. It would be best to include your code in your post ([formatted for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)) or use a site meant for sharing code like pastebin or github gist. Also, include which version of python and what OS you are using. 
I agree with everything you say here. I also use Jupyter a lot because it is GREAT for teaching. It shows the code, has the explanation wrapped around it, and students can cut and paste into their own projects. But of course it is extremely limited in some applications .. is is constrained buy its own format. AND if you already know and use HTML and CSS, then maybe JavaScript is the way to go with computational web applications ... but not data science level. That is where Python/Numpy (and only that, Python is not adequate without Numpy) shines, BUT still you have the interface issue. IMHO Python has relied upon tkinter for too long, with, LOL, maybe the belief that we aren't really scientists if we want a nice looking interface. 
Coder Runner doesnt work with Inputs, I dont know why you would install this anyways.
 My understanding was that licenses such as MIT are compatible with the GPLv3, and that I could still license my software which uses (_not_ bundles) PyQt5 as MIT -- did I get that wrong? I figured I'd ask here.
One nice consequence of the web interface is that I can run a notebook on a remote workstation and use the interface locally. A Python/Native solution would need to use X11 forwarding or something and it'd probably be all laggy.
got a tutorial or more info on this? 
[Here's a link to the written version of the same tutorial on GitHub!](https://github.com/EdjeElectronics/TensorFlow-Object-Detection-API-Tutorial-Train-Multiple-Objects-Windows-10)
&gt;How much to charge for a securities trading bot? &gt;I've never programmed anything for profit before Honestly I'd stay away from this as it sounds like a potential liabilities nightmare. 
Okay then sending it via mail should be fine. At least all used mail servers allow the required attachement sizes you need. 
DISCLAIMER : I'm not freelance. Therefore, all that follows might be completely wrong. You might want to look this video : https://www.youtube.com/watch?v=jVkLVRt6c1U I'm not sure what your situation is (you didn't tell us enough), and I guess you are not planning to create a company, so I'm not saying you have to lawyer up. On the other side, things can go wrong very quick when money is involved, even with people you think are your friends. If you don't have a contract, chances are you will do the work for nothing and never get paid. &gt; How do I determine a fair price for the work I'll be doing? Try to come up with the time you think you will need to complete the project, double or triple that, and multiply by the hourly wage of a software engineer in your area ? That should give you some quick estimate. &gt; What should be the turn around time on something like this I'm not native, and I don't understand what you mean here. Sorry. &gt; should I go about being paid at certain intervals of the project (25% completed, 50% ect)? When you bring your car to the mechanics, does he ask to get paid at several times during the process ? But if you want to, you can define milestones in your project. Like, you agree with the client on a first set of working features, that partially solves client's problem, and agree to get paid x amount at this point. Then, if it all works out fine, and you get paid, and all that, you agree on another milestone... And if you don't desperately need the money, and you are not comfortable doing all that, or any other reason, just say no. You don't owe anything to anyone.
I'd also suggest describing the problem in detail, instead of "why won't it work".
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [EdjeElectronics/L4D2-Stat-Trak-Driver/.../**StatTrakDriverRev0_2.py** (master → 85cf4da)](https://github.com/EdjeElectronics/L4D2-Stat-Trak-Driver/blob/85cf4dab942f8876e55bc5cf3eb7669ae534b599/StatTrakDriverRev0_2.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dups0o9.)
Everyone has their preference, they chose GPLv3 for a reason, there's no reason to complain anymore than I should complain about *your* preference. 
Sorry friend, I have to downvote for religious reasons.
Well according to the man page the default is actually to log to twistd.log. I also see that it says "-" for stdout. Would I just say "--logfile=-" ? Then pipe that to /dev/null?
Lots of companies pay lots of money to license it you mean. 
Not true strictly speaking. Your preference forces a choice on me in certain circumstances. The choice being that I either have to change the licensing of my software or find a different library. This brings us back full circle.. why someone would choose a different piece of software based purely on license. I suppose you can make the same claim for GPLv3, when encountering an incompatible license, except that the language that causes the issue is part of the license that you chose.
Of course ... but I wasn't complaining. *You* were the one asking for reasons why people wouldn't use PyQt. Mine is a valid reason and since it's based on the fact that PyQt's license conflicts with the GPLv2 itself, it's not "GPL hate." This issue is why the LGPL exists. When I'm contributing to a project ... or even when I fork, I use the license original to the project (whether that be GPLv3, MIT, whatever). However, when I'm creating my own project that depends on a library, I'm going to use my preferred license (GPLv2) ... which means I won't use PyQt (GPLv3). Do you understand now why I won't use PyQt and that it does not have to do with "GPL hate"? 
not everything needs inputs?
If I write GPL code for one company, can I re-use that code if I move to another company? If I'm the sole author, yes. If I'm not the sole author, nope.
Sure you can... the second company just has to keep it GPL. Also, the first company has to approve the license, since they technically own the copyright unless you were contracted and specified you own the copyright in the contract. 
I have bought a gaming mouse to have at work. I has two buttons on the side that you can press with the thumb. I configured PyCharm to "go to declaration" when i press the first button, and "back" when pressing the other. In that way I can navigate back and forth in the code just like you navigate a webpage in a browser. This is the best setting ever!!
Use Pyinstaller to build a single click executable installer.
* Look up what a boolean data type is. It will probably be helpful * Look up what an array (or list) is. It will definitely be helpful. You can have arrays of arrays too! * It looks like you're treating `turns` as either a string or an integer sometimes. `turns == "2"` is doing string comparison while `turns += 1` is doing integer arithmetic. You must pick one and be consistent. * There's a lot of repeated logic that could probably be put into a function (or a few). I see that you've done that in some places-- good start! * You define the `quad` function twice and I'm not too sure of the differences-- the first 10 lines look identical
Oh nice , interesting video. Thanks !
&gt; input ("Press Enter To Exit") Cause so I can catch the answers without it closing As soon as I go after the inputs it just closes....
Yikes. Like C doesn't have any undefined behaviors?
Ah okay. Yes that should work.
Can you look at web server logs to determine which routes are hit, and get the same information from there? How much branching is going on in your code that you need real-world data collected over days/weeks?
It doesn't look like you're using `Queue.join`, so you don't need `Queue.task_done`.
There is this aspect to consider. However, I understand the major innovation in the core of Jupyter is the protocol that connects kernels to the UI. So I think in theory you could have a local UI, written in Python, dispatching commands to remote kernels running on the workstation. In theory.
Yup, all agreed. I live in fear of the day someone invents a JavaScript data science framework. Then it’s game over for humanity (I exaggerate, but not by much)
The logistic regression could capture the non-linearity via feature engineering. It's just that SVMs have the "kernel trick" baked into the process.
"Models won't necessarily generalize," is always a true statement, regardless of learning methods.
I don't think there's a distro left that defaults to 2.7. It's usually both versions, 2.7 and 1 version before the latest py3. You can pull in python libs via setuptool (`install_requires`) and *nix most likely have Qt libs. Eitherway it's not hard to have a Qt as a dependancy depending what you are building for (debian, arch etc.) on linux.
Ok, I have 32 bit Python now and I downloaded Oracle instant client.... but I am getting error: "Database error: DPI-1050: Oracle Client library must be at version11.2 or higher." Our backend Oracle tables use 11.1.0.6.0 and I am unable to change that. Is that what is causing the error? How can I work around this?
Been meaning to give wxPython a go as they've been pushing updates and hitting the news left and right lately!
What Linux distro doesn't ship with a Python 3.x today?
You still need Python, don't you? Cython essentially makes C/C++ modules you can import into a Python program.
Please do tell what are those reasons? If I'm working on open-source project it's in my own and communities best intention to have copy-left code so I could get work back into upstream from the userbase. Arguments for MIT over GPL are very selfish and just paranoid.
I'm not sure; bindings being a "first class citizen" would mean that there would be working bindings on day one of a new release.
If you're building production code, expecting that you must pay the people who build the libraries that you depend on is not unreasonable. 
Unless you're changing Qt itself and don't want to distribute your code changes, the LGPL has you covered.
Who "must have" these? They clearly aren't all for general use. Calling clickbait.
&gt; Anything that uses PyQt must the GPL itself. This not only blocks proprietary applications, but also all other Open Source licenses that aren't GPL compatible. Why is that bad? If you're making proprietary apps off the free software work then maybe just maybe you don't deserve to get a copy-right; right? I don't think Python community is concerned with this particular aspect as proprietary culture is close to non-existant here. 
And it doesn't produce interfaces that look like Windows 95!
No. Everything can be compiled into C. Both the code and the libs the code depend on.
Pure dribble. &gt; A coder has the ability to write up the code to make a software that will not only be used in the apps but also in the video games and many other things. &gt; They are also pro when it comes to working with the algorithm
If you're not *distributing* the software, you're ok. 
I've been using class Main(QMainWindow): def __init__(self): super(Main, self).__init__() loadUi('MainTest.ui', self) app = QApplication(sys.argv) widget = Main() widget.show() sys.exit(app.exec_()) and was hoping one of the IDEs would expose the elements and their objects as I worked. No dice so far. But as far as saving a step when diddling the ui file around, it works fine.
You can make pure binary code with Cython. Even automatically compile all the libs you use to binary if you want. Works great, used it to compile a 5000 line qt prog a month ago. Docs are really easy.
I saw this on github but don’t know anything personally. I hope it helps https://github.com/juancarlospaco/pyvoicechanger
Coupons for Udemy... whose business model.is basically "90% off all the time"
If I can't get cx_Oracle to make a connection, is there a way to do this without it? 
What is selfish about making sure anyone can use my code? I have no idea what you mean by paranoia. 
It's common for packages to be missing, so when you open your exe it crashes. Debug mode lets you see all the packages you're importing, so you can trace an error. This is my standard exe block... exe = EXE(pyz, a.scripts, a.binaries + binaries + icons, a.zipfiles, a.datas, #exclude_binaries=True, name=os.path.join('build\\pyi.win32\\program', 'my_program.exe'), debug=False, # this is the debug flag strip=None, #upx=True, icon=icon_main, console=True ) 
Lacking access to CI like Jenkins I coded an automated build-script which checks multiple git repos for changes and then builds an application. Cron takes care of scheduling.
&gt; If you are selling GUI apps then you get a commercial license, surely $500 is affordable in that case, right? Why when you can literally just use the same API and pay nothing. Just use qtpy and it's exactly the same.
&gt; Most any open source developer that chooses to go with a different license, for whatever reason, is going to want to avoid the GPL. I'm an open-source developer and that's a non-issue. Matplotlib is BSD-3 and yet they have a backend that's LGPL. It's not GPL as you suggest, because it's an open source project and not a company.
I’m not sure if I understand your point. It’s a non issue because it’s LGPL and your not modifying the library. I assume we are specifically talking about the GPL and/or modifying the library. In those cases those two licenses would not mix.
Yet another useless, spammy, link-obfuscated referral pipeline. Do not click.
That's simply not correct. Cython generates C-extensions for Python. It doesn't produce an executable file that bundles all of Python. From the documentation: &gt;Cython code must, unlike Python, be compiled. This happens in two &gt;stages: &gt; &gt; A .pyx file is compiled by Cython to a .c file, containing the code of &gt;a Python extension module &gt; &gt; The .c file is compiled by a C compiler to a .so file (or .pyd on &gt;Windows) which can be import-ed directly into a Python session. 
I'm not sure what you mean with the turns thing. With the quad thing, it's defined the same but under different conditions. One when the first move belongs to the player, one when the first move belongs to the computer. Any suggestions? I really don't know my problem. When I run the program with option 1 (player goes first) and try to click a space to place my "O", it just loads forever and does nothing.
When running tests, I do notice a small, but significant, slow down when running with coverage. So, maybe it's not worth because it might degrade your performance a lot. One thing you could do is mirroring the production traffic into a separate instance that has coverage enabled. This way you get to have your cake and eat it, so to speak.
I wonder how different this will be from pyqt5. I've only been programming for about 3-4 months, but I tried putting together a filename searcher gui for pyqt5 just for fun. It was hell. The pyqt documentation seemed to be mostly for pyqt4 and the qt stuff was some other language. I think it was C++ or more likely the black code of Mordor. It was a good experience though.
You might find this resource to be helpful! Totally free and for newbies [pythonlikeyoumeanit.com](https://www.pythonlikeyoumeanit.com/)
You don't get syntax completion in Wing, PyCharm or other IDEs (without running the script and pausing it), which is a major downside when working on a large gui application.
Do you have Oracle Instant Client installed? Which version?
Version 12.2.0.1.0 - Basic..... I was unable to install Microsoft Visual Studio 2013 Redistributable though since I am not an admin. 
Looks like I have new plans for the weekend!
Then it sounds like it's not picking up the correct library version. Do you have another version of Oracle Instant Client installed system-wide maybe?
Have you looked at the regulatory requirements of a stock trading bot? If the answer is no, stop and walk away. You are not prepared to do this. I'm not saying what the regulations are, or that they even exist. But if you didn't think of regulatory obligation prior to me mentioning it, you are not prepared for the realities of professional software development. You may very well be at fault, by default, for any losses incurred due to not following proper regulatory rules. I personally wouldn't approach this without a lawyer and an LLC protecting my personal assets.
I have not seen any...I just searched the network for "Oracle" not sure if there is another place to check...
Ok, so a variable has to be a certain type-- an integer (or a float or similar) is a number, like the concept of `4`, or `4.1` or something like that. A string is some (zero or more) letters, numbers, or symbols like `"Hello"`, `"I am 7 years old!"`, `"?!"`, or, importantly, just the number `"7"`. Note that this is different from the integer `7` because you can do different things to integers and strings. Integers you can add: `1 + 2 = 3` while you can't add a number to a string (`"Hello" + 4` doesn't make sense). Strings have a length (`"hi"` has two characters) while integers don't ("How long is `4`?" doesn't make much sense) When you test if `turns == "2"`, you're asking Python "Is `turns` equal to the string `"2"`?" If `turns` is an integer (like 3, 2, or 132), it won't be equal to any string no matter what because they're different types. ---- If `quad` is the same in both cases, you can define it closer to the beginning of the program, like `mid1` or something like that ---- It may help to add `print` statements (either `print 'something'` in Python 2 or `print('something')` in Python 3) at stages in your code to see where it's getting stuck. I'd suggest putting one right after `while nowinner` and maybe after some important `if` blocks
&gt; I’m not sure if I understand your point. &gt; open source developer...want to avoid the GPL. Open source developers aren't statically linking to their own library and they're not modifying PyQt. They're developing their package. It's not GPL for open source packages anyways. It's LGPL. &gt; It’s a non issue because it’s LGPL and you’re not modifying the library. If you dynamically link to an LGPL library (so Linux and typical development), there's no issue. If you statically link to it and distribute it (so Windows), there's an issue.
Error code: https://cdn.discordapp.com/attachments/410915899671969794/416665997135708162/r.PNG
You forgot one library: Clickbait Blocker.
That’s only correct if the library is LGPL licensed. From what I understand PyQt5 is GPL licensed and MIT would be incompatible. Luckily you have another option now.
No, Qt is available in three licenses if you include older versions, PyQt is not. Literally first question in the FAQ is “Why don’t you license PyQT under LGPL like QT?”
Will have to check this out
This is so rad. Wow! Very nice!
It doesn't just block closed source development **it also blocks open source development**, if my idea of open (e.g. MIT license) is different from your idea (GPL). For example, I want to write a library and make it free for use for everyone, closed and open source alike (e.g. MIT/BSD License). I absolutely cannot integrate your GPL-licensed library as your use of the GPL makes that impossible. This is the point /u/grumbel is making. Now, in PyQt's case it makes sense, **because they also offer a commercial license**. The GPL license allows the open source community (limited) use of their work and ensures that the closed source community must pay to use it so they can eat/pay their bills. The GPL license allows the opensource community to benefit, but **protects** their revenue stream. **Only** offering a library under the GPL makes zero sense, unless you're a copy-left zealot, or your mentality is "if I'm not making money off of this, no one can". This is the whole reason the LGPL exists. &gt; I don't think Python community is concerned with this particular aspect as proprietary culture is close to non-existant here. They absolutely are concerned with this. For example, there's a reason Python can built with or without GNU readline support on Linux. And as someone who has been shipping proprietary applications that embed the Python interpreter for the better part of a decade, I disagree. &gt; It's just this "copy-left is bad" meme. No. It's a "copy-left is often inappropriate" consideration. 
Integers can only represent whole numbers. I would suggest float, but if you're dealing with money, you should use the decimal library: https://docs.python.org/2/library/decimal.html
Well, not quite yet. But hopefully soon, yes.
You're overthinking it. The limiting factor is most likely the speed of your harddrive, so any optimization will give you very minor gains. Just start it and go home; it'll be done in the morning. 
100gb in 4-5 hours?
Love how it's always pipenv.org themselves saying this. And never anything or anyone else.
check this: cx_Oracle.clientversion() and look, on your system, for "instantclient". 
This looks really interesting. I might give it a test whirl.
Ok, recognizing the cards is nice... but how about teaching it to count them and help you win at blackjack? :-)
Spawn as many processes as you have CPU cores. Read each file entirely into memory (100gb / 24k is not big), I'll assume they contain a JSON on each line, so make use of "ujson" for some speedy json parsing. Use bulk inserts into MongoDB/SQL. Go sleep. Profit.
Note, you don't actually have to activate the environment (i.e. no need to source the activate script). So long as you invoke the relevant python using myvenv/bin/python, e.g. by setting that in your script shebang line, then the environment will automatically be correct. This includes running pip, e.g. just run myvenv/bin/pip install &lt;whatever&gt; without bothering to source the activate script because that pip will automatically choose the correct python. This is often easier, e.g. if you are doing this stuff in a script. There is also no need to deactivate then.
I’ve been using it for 10 years. Download the wxPython Demo and you can try out every single feature as well as edit it live :))
Correct
This is true, but they do not provide the same functionality as the Jupyter Notebook and now Jupyterlab web-app.
That was supposed to be the case with PySide from the very beginning, basically... PySide was a Nokia project, they just kept it at arms’ distance. Eventually people working on it were moved to other priorities, and it languished. Building bindings for such a vast library is a big job.
You can use code Runner with inputs if you enable "run in inn console" ;)
Or hot dog vs no hot dog? Most important. 
thanks so much!!! been meaning to attempt implementation in my research
I am going to learn so much from your code base. I seriously love this project. This is one of the most elegant python projects that I have seen. I will start to utilize this at my work, and will let you know if I have any feedback. 
Ah right, thank you very much for that. I had it down in the todo flag list but never have actually used it before.
Ah yeah, that's true, same way that PyCharm can execute remote kernels. Still, by doing a mobile interface, you get this for free basically which is kind of nice.
&gt; The int() cast It's not a cast. Edit: A bit harsh, sorry about that. The snag with the term `cast` is that it means different things to different people, so you get comments like this "The dictionary definition for cast is best ignored, as being unhelpful. Many casts are better described by the terms conversion or coercion, so it's worth knowing those too." from [stackoverflow](https://softwareengineering.stackexchange.com/a/224703/243813).
RemindMe! 12 hours
Why do you need sensitive information in your package? It seems like that could be done differently.
think i did that right... gonna have to show this to my Dad tomorrow after giving it a go myself. thanks for sharing op
I've used it on several projects and it works really well. I wrote a couple of helper scripts that allow me to input a list of commands and run them on multiple machines at once. It's basically a poor man's Chef or Ansible. I use the library to connect to recent versions of Linux/OpenSSH Server and have had exactly 0 issues. 
I think people are making too much of your question, but on the other hand you may be underestimating the difficulty of doing this. I write these for myself and to show students how they are written and it is quite involved. And "securities trading" can mean just about anything, from setting an elementary market order to buy 100 shares of a stock to an algo that would compute and exercise a two-legged options position when certain threshold criteria are exercised. The word "Bot" makes it sound like it will include strategy, so who is going to supply that. Here is what you had better be good at: (1) Working with an API often with relatively limited documentation, (2) providing either a web or GUI interface that is robust, (3) the ability to work with very asynchronous data flows, which might require knowledge of concurrency, asynchronous applications, threading, scheduling, time loops, logs, latency testers, (4) somebody is going to have to be an experienced trader (your client)? Why am I telling you this? Because that is what I tell my students when they set out to do it with very limited objectives. But it is doable, Costing it out? I suspect that if you don't charge by the hour you are going to get reamed. And for you client I am not so sure that this is a good idea. He not only has to pay you to do it, he has to pay you to learn to do it, and this stuff has a steep learning curve if all you ever done is Raspberry Pi. So tell him $25 an hour or whatever you think you are work, no guarantees. You don't have to worry about regulatory anything if he is providing the strategy. Everybody and their mothers are coding this stuff out there. Very little of it has any staying power but some of my students have done very well with these kinds of projects (simple momentum trading and mean reversion trading, which is not theoretically complicated, is popular). If you plan it out, think about what it is supposed to do before you get started. For example you say, "OK, we are only working on a momentum execution (or whatever) strategy for starters, that's it! What do we need: (1) What broker, and therefore what API? (2) What kind of interface will be needed, and web or GUI or punching numbers into the top of the IDE? (3) What data gathering, historical and/or live is this going to require .. are you going to pull from a database like Quandl or harvest off the brokerage (no small task by the way). (4) What kind of automated records or storage will be needed? Pandas to Excel? A JSON log file? MySQL? .. on and on (5) Raw interface .. simply the ability to get a raw Level 1 quote, Best Bid, Best Ask, the fundamentals. (6) Deep interface, all of the stuff you need, like Level 2 or option chains, depends on strategy. (7) Protoype performance optimization, how do you untangle concurrency issues, lags, time tests. (8) Backtesting methods when needed or advised, which sometimes can be as complicated as the first 7 issues shown. (9) Algo refinement and live testing A lot of water will have gone under the bridge by the time you get to 9, ESPECIALLY if you are winging it. So these are a few things to think about.
So let me get this straight, you write the program in python, then use Cython which translates your python into C, and then compiles it into an executable from the C program? 
This is one of those cases where you will likely spend **way** more time optimizing it than it would take to just let it run. That is assuming you only need to run it once. Now, if you are doing it for the learning experience, that is another story. Then you could look at `multiprocessing` or something but still, you are likely limited by your hard drive
Don't see why you couldn't. Pair that up with a battery powered raspberry pi, webcam hidden in a hat or something and you've got yourself a recipe for a broken leg in Vegas
You should get rid of the symlinks and find some other way to pass your sensitive data to your code. The best way to do that will depend on the nature of your sensitive data.
He must be really busy 😁 
Is that because PyQt was expensive, or because no-one can understand their licensing? I certainly don't. 
Does anyone use VS Code for python when you have PyCharm community edition ?
Thanks for the kind words!! :)
I'm working on it! :D
Whoo-hoo! Get this running on an old Google glass or new [Vusix](https://www.theverge.com/2018/1/9/16869174/vuzix-blade-ar-glasses-augmented-reality-amazon-alexa-ai-ces-2018) lenses, use some AlphaGo-based learning to create the ultimate Blackjack strategy, and soon you'll be able to pay Guido enough to hold the next PyCon at your house. :-) Now back to my side project of using Python to play the ponies... ;-)
I needed this yesterday 
First issue was I already had Cuda 9.1, and that didn't go so well at all, so I had to downgrade to 9.0. But as far as Tensorflow there was two code changes that had to be done. 1. /data_decoders/tf_example_decoder.py line 104 had to have the arg dct_method=dct_method removed. https://stackoverflow.com/questions/48920762/tensorflow-error-typeerror-init-got-an-unexpected-keyword-argument-dct 2. /utils/learning_schedule.py line 153 had to be modified to encapsulate range() with list. i.e list(range(num_boundaries)). Guessing this was a Python 3.0 change. https://github.com/tensorflow/models/pull/3442/commits/c9592aa60134b457bcb8acba4cea434485494010 3. I had used an older version of LabelImg, probabably ~8 months old, and it didn't append .jpg to the &lt;filename&gt; so i had just changed xml_to_csv.py to add .jpg. "root.find('filename').text,+'.jpg'" I also had issues with my annotations. With nearly 3,000 annotation files there was some spelling mistakes in the class name. So I had modified generate_tfrecord print group.filename in create_tf_example, within the with statement so I could see what xml file coudn't be parsed, as well as printing row_label within class_text_to_int so I knew what class was misspelt. I'm used to using grep to fix these issues, but luckily notepad++'s find/replace doesn't mind going through 1000 files. Overall the most straightforward and quickest tutorial though for any image detection in Windows. 
*Using The same can be done locally with OpenCV.
You can have it for free under GPL, or you can pay for it and not have to deal with GPL.
That much is obvious. The minutae is the hard part. Few open source projects require a [giant licensing FAQ](https://www1.qt.io/faq/)
RemindMe! 10 hours
&gt; I want to write a library and make it free for use for everyone, closed and open source alike (e.g. MIT/BSD License). I absolutely cannot integrate your GPL-licensed library as your use of the GPL makes that impossible. Lol, this is ridiculous - yes you can, you convert permissive MIT or w/e code to GPL as well. What's the problem here? If you want your library to be used on closed software that's not open source. __it does not block open source development__, it only blocks proprietary code. Your whole argument is that GPL stops proprietary code which is good and should be encouraged. Proprietary code gives nothing back to python, if anything it takes away from it. No one is stopping you from shipping your proprietary applications under GPL except your own greed. 
RemindMe! 12 Hours
&gt; There is no bringing work upstream when the users application has absolutely zero to do with your library. That's such a ridiculous statement, of course it affect user's application, it wouldn't be there otherwise if it didn't have an affect. If I have a library called `common_math_func` and some app uses it to help calculate some numbers then the library is in the core functionality of that application. And yes it would bring code upstream as we already established it supplies functionality. E.g. the user of my `math_func` lib wants more math functions! He either extends my lib or supplies some extension/hack in his app. Since his app is under GPL now, me as maintainer of `math_func` lib can pull it and extract any changes to upstream.
Whatever you do, make sure they don't have a copy of the code until you have some money in your pocket. I learned this the hard way.
From a code perspective, you've got a few issues going on: 1. You've defined `printInfo` inside the loop, so it keep redefining the function, there's no need for that. 2. `printInfo` is considered it's own block or "scope" which is important with variables. `printInfo` can read `x` but the way it's written it'll never update `x` in the main loop, so it'll just keep going forever 3. I don't do python on windows so not too knowledgable about `EnumDisplaySettings` but depending on the order of `DisplayFrequency` you'll always get either the lowest or highest value since you don't stop the for loop early on a correct value.
&gt; it does not block open source development PyQt5 is under GPLv3, so that blocks all GPLv2 or LGPL based development. For a real world example, see FreeCAD.
&gt; It doesn't just block closed source development it also blocks open source development, if my idea of open (e.g. MIT license) is different from your idea (GPL). It's not quite that bad. Most of the common [permissive licenses are GPL compatible](https://upload.wikimedia.org/wikipedia/commons/1/1d/Floss-license-slide-image.png). However PyQt5 is under GPLv3, not GPLv2, so that still blocks all GPLv2 and LGPL based projects and there are numerous older or homemade licenses that would also be GPL incompatible or at least a gray area as well (e.g. CDDL, Apache1.0, etc.).
When did I say it didn’t have an effect? Fuck it. I’m done. Feel free to release your math func under GPL if you wish. I don’t honestly care. You’re the one that posted the good news. Just realize that a number of us will be going out of our way to submit code to the math func 2 that doesn’t try to beat us over the head with a metaphorical bludgeon while simultaneously screaming this is what open source looks like. Have a good one.
Why would you replace files inside the package later? That's going to make upgrading the package challenging. If these are user-oriented secrets, store them in the user's home directory (eg a dot file) or the OS keychain.
Lol. What's your problem? cant support your own argument so you rage out? You're just misleading people with literal lies and are the reason why GPL has the negative reputation it has. 
I’ve supported my argument just fine this is simply circular. As far as I can tell you’ve offered no defense to my points beyond saying I’m lying, paranoid, and selfish. There comes a time when talking to a brick wall that you’ve got to realize it’s a brick wall. Good day sir.
I think it is because Qt is trying to tel you that they will enforce their license with lawyers. For example, I never read or cared about open source licenses before I wanted to ship my first software. 
HOLLY SHIT I GOT IT whooo simple code I know, but ive only done C and Java and nothing but .c and .h and nothing server related ima try to add my school project codes into the bot
Looking up measured gamma-ray energies in an online database and cross-reference possible nuclides with likely decay chains for my radiochemistry lab course. Doing the analysis manually would take weeks (1000s of possible isotopes), whereas my approach yields the likely detected nuclides within minutes. 
This is interesting. Probably outside my skill set for now but on a few months I may revisit or. I want to make a better video doorbell or face tracking security camera.
Cool! For the 1.1 release, I'm working on an ["escape hatch" hook](https://github.com/ariebovenberg/snug/issues/19) to allow falling back to client-specific features in rare cases. This will ensure that if features are missing, they can be worked around. 
I started learning Python (udemy course) yesterday. I only know the basics of HTML &amp; CSS (just barely to put up a website of some kind..) but this thing is blowing my mind. In a good way. I had ZERO idea of what Python even does and what's possible with it, so these kind of videos really hypes me up. Obviously I can't understand anything related to it (YET) but I couldn't be more excited to learn this. I really hope I do.
Very cool,I really like this color styling
It’s nice on the surface - but recently I looked into building my own Jupyter interactive Widget. I took one look at the documentation and ran away screaming. The widgets a horrible mess of JavaScript. I have the utmost respect for the guys that made them work, but there’s no way I could do it. Why am I having to learn an entirely separate language to extend my Python work? Especially when the widget I had in mind was a canvas element that I would have drawn on with Matplotlib. In my particular case it was even more annoying because I already have a PySide version as a standalone app - I wanted to incorporate the same functionality in my Notebooks. (There’s also the problem that Widgets aren’t compatible with the Jupyterlab App, and I have no idea why that would be the case)
( ͡° ͜ʖ ͡°)
Wrote a scraper to scrap job listings from certain websites, merged, filtered and saved in CSV which was passed to a custom WordPress theme. Automated scraping and posting to WP via cron. Demo: http://www.getuaejobs.com 
No, Cython actually does produce standalone executables when used with `--embed`. See https://stackoverflow.com/questions/22507592/making-an-executable-in-cython?rq=1.
[For Hire] Web Scraping, Data Mining, Data Extraction, Simple Automation services Web scraping and data mining using Python, BeatuifulSoup, Requests and Selenium. My scraping skills include: Extracting data tables, text, images, links/etc. Filtering and compiling data into various formats including JSON, XML, CSV and SQL Setting up alerts for new content discovery. Screenshots or full HTML download of websites "Real" interactions with websites such as clicking buttons, accessing drop downs, and entering text into forms. Some of my web scraping tasks include: Scraping list of martial arts institutes in the UK and finding a) tools used to build the site b) mobile responsiveness and c) page load speed Property listings from an account at appfolio.com and incorporating the data into a WordPress site. Product listings from leading European consumer electronics provider using Selenium Scraping jobs from a job listing site and importing them to a WordPress based website More projects are listed at http://www.kashifaziz.me/web-scraping-data-mining-services/ Feel free to contact me if you have any requirement related to web scraping or Python in general. 
&gt; VPN is a built-in mechanism in the modern routers and depends on the system you have, for example you use Microsoft VPN server if you have windows etc. Not necessarily true. Some routers can act as VPN servers, but not all, though most can act as VPN _clients_, since many ISPs, especially outside the US, use "VPN" connections as a way to authorize/identify clients. &gt; Data transferred through the tunnel is encrypted and then decrypted when it gets to the VPN server. This is also not necessarily true. You can configure your server and your client to encrypt data in transit, but it's not required, and is often intentionally disabled (see the ISP use case in the previous answer, for one). &gt; If a lot of packet data is lost while tunneling, the VPN will re-direct itself. (I heard this is for in case someone tries to hack your network.) That's also not always true. Most VPN solutions will simply try to resend dropped packets forever, just like normal TCP, or drop all connections and switch to a different server entirely. This rarely has anything to do with people trying to "hack your network", though can be caused by people _flooding_ your network, overloading it with data and causing packet drops for everyone. &gt; VPN slows down your download and upload speed, because it first needs to go through the server and then pretend it was a local request. Also not necessarily true - VPN adds some overhead, but it can also avoid an accidental "bottleneck" along the route or ISP imposed throttling. If you just want to run a VPN that you can connect through, building your own is a terrible, terrible idea - you'll have to work with crypto, networking, low level TCP/UDP stuff, driver development and like five other cans of worms that other people have already opened for you. Just get [OpenVPN](https://openvpn.net/), deploy it on a rented server on something like DigitalOcean or an AWS (but not Heroku, they don't let you do that sort of thing), and then set the client up on your PC or router (if possible/applicable). If you want to _learn_ how to build VPNs, you should probably start by just setting up a fast data transport between two computers, preferably via UDP. Then you can figure out how to encrypt the data in transit. Then add packet capture on the client and routing on the server.
Thank you for your answer. I kind of suspected this would be a project too big for one person. After I get OpenVPN and deploy it to my server, can I use it on other devices such as mobile too? Do I need to do anything with python at this point?
Open a terminal first. cd into the directory the files are and python run.py or whatever. The terminal won't close. 
Btw., you don't need the "and not" things and the test for %15 in there... print("\n".join([(str(i), 'fizz', 'buzz', 'fizzbuzz')[((i % 3) == 0) + 2*((i % 5) == 0)] for i in range(1,101)])) works beautifully. And to answer your question: I don't know of a code-golfing subreddit other than the obvious one. But you can check [Check.io](https://py.checkio.org/), they have some nice codegolfing challenges there. 
There are OpenVPN clients for both Android and iOS. You don't need any Python. 
It probably means not much, just that they don't plan to make it default or even work much on it before they lay out the road map for python 4.0. I don't think it means that Python 4.0 is on the horizon or anything like that. This all are just guesses/interpretations by me and someone with more insider knowledge might provide you with better/correct information :)
Guido once said that Python 4.0 will simply be the version after 3.9. So it might be they chose 4.0 to give type checkers enough time to adapt. Or they deliberately chose 4.0 to have slight imcompabilities to the 3 release (and then skip from say 3.8 to 4.0). But Python 3 to 4 will not be the same like Python 2 to 3, more like Python 1 to 2. Guido does not want to repeat the shitshow that was/is the 2 to 3 transition. He acknowledged that the team underestimated the problems that would be caused; the changes to 3 were IMO useful and necessary, but it wasn't handled very well (releasing a 3.0 and telling people not to use it and wait for 3.1 isn't the best way to get people interested in it...) tl;dr: Python 4 will not be as incompatible to 3 as 3 is to 2, more like 2 to 1
You could perhaps use pyinotify. inotify can display when a file gets opened/closed etc. I've used it myself here: https://github.com/kootenpv/brightml/blob/master/brightml/notifier.py but perhaps a better start is just the existing documentation.
Oi, don't forget about this. 11 hours is close enough, right? _____ ^(Hello, I'm not the RemindMe bot, but I saw your comment and I am not sure if the bot works in this subreddit, and didn't want you to forget about the parent comment or thread!)
So `python3` will just be a symlink to the new `python4` binary? I don’t see the benefit of increasing the version number without any major changes (compared to point-releases). It is just going to break all the software that is not forward-compatible (containing something like `if sys.version_info.major == 3`)
Did you allow python to install PATH when you first installed it? If not you’ll need to do that 
You don't. You properly close the file if you aren't using it and reopen it when needed.
`python -m pip install pygame` 
All adding python exec path to PATH does is ensures that you can type `python` instead of `%path_to_python_interpreter%/python.exe`, not relevant here.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/pythonprojects2] [X-post from r\/python: object detection using Google api's](https://www.reddit.com/r/PythonProjects2/comments/7zwjba/xpost_from_rpython_object_detection_using_google/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Almost as busy as those scammers who wrote AI that would get money from guys on tinder/whatever that site was, I might be mixing it up, checkmate wamen.
Most posts to https://codegolf.stackexchange.com (the main hub for codegolf on the internet) have Python answers. It's a very active community. Here's [FizzBuzz in 56 bytes](https://codegolf.stackexchange.com/questions/58615/1-2-fizz-4-buzz/58623#58623) (might only work in Python 2) i=0;exec"print i%3/2*'Fizz'+i%5/4*'Buzz'or-~i;i+=1;"*100 
Find a way to access voice data and multiply every single value by 50, works especially well if you want to fuck someones ears up as what it will do is produce worst earrape you've ever heard.
 class Major(int): def __eq__(self, other): return other &gt;= 3 sys.version_info.major = Major(4) /s
**Proceeds to build a prototype which has backdoors in case he doesn't get the money.** /s Wanna share? How did it happen and where (complete stranger on internet, someone from some company face to face)?
It doesn't really do anything much on the backend, frankly. It's more of, a medium between end user and your (backend) code, which is abstracted for both sides, for example you don't really need to care about internet protocols, how requests are handled and so on, neither does user, just like operating systems are between the user and the hardware.
Hello, Thanks for proving us python script for getting coordinates from google. But I want to getting coordinates with every 5 meters for driving. Is possible your scripts and how?
Depends on the size of the company and how much they're making as it's actually $500 *per developer*. So if a company has 20 developers the total price is $10,000. You can see that here (enter 20 user licenses): https://www.riverbankcomputing.com/commercial/buy
So I thought up something similar but use ML to play fixed-limit poker or Blackjack. id love to read more about this if something like it exists.
This is off topic, but... you might want to run the name of the app past your marketing folks one more time. 😬
Your first line tainted the rest of your good answer. I'm sure the poster is painfully aware of their English deficiency.
Automated my entire vulnerability management process. From automatically importing US-CERT entries, to creating tickets for Dev teams based on project contents. Love, love python.
Automating the enabling/disabling my router's WiFi radio to limit my daughter's internet time. She's not happy... 😁
That's quite an understatement. Choosing to ignore valid complaints about making life harder for people dealing with binary strings for several releases, then backpedaling all the while not seizing the opportunity of breaking retrocompatibility to properly clean up the standard library... I think it has been dealt with very poorly. Python 3 is objectevely much better than 2, but this transition has been rooted in ideology first, and not ambitious enough on small but practical matters. 
Exactly, why bother yourself with this bloat and maintenance when there is a feature-complete alternative that just works?
I got it, thanks!
Asyncssh is absolutely great. I've been using it in a couple of projects. It's of very good quality and well documented.
A friend of mine was working remotely for a startup in North Carolina. They needed some Sysadmin / Devops work done and they needed somebody to write a scipt that would FTP up to a few hundred files per day to a publishing company (Python plus multiprocessing.pool made this super easy). So, we came to an agreement on price per hour and I wrote the script and committed it to their Bitbucket account. I did work for them for a month and they never paid after I sent them an invoice. So, I stopped work. They finally paid me part of what they owed when something crashed and they needed help getting it back up (leverage is good). However, I would have had more leverage if the code I'd written had not been put in their Bitbucket repo until after I got mine.
Thanks you SO much. Installed it via pip-3.5 and it worked perfectly. What should have told me this? The "Categories" breakdown in the pypi page?
Hey! 10 hours is up. Happy coding.
Why is it so famous? What can it do?
That's the pygame version for Python 2.7 32 bit. The least error prone way to install pygame for Windows users is to use the Python launcher and run pip as a module: `py -3.6 -m pip install pygame` or do what PurpleIcy suggested.
Because you don't need to work on the socket level yourself and it handles all connections for you and provides easy way to provide both static and non-static pages because it supports templating engine and what I already said.
So, making a mistake, caused you to still gain some money? That's funny actually, and thanks, didn't really think about the whole repo thing before, will make sure to never commit code somewhere else unless I already have money :)
Django is a web framework. You can use it to make websites. It can definitely be something you do as a job, if that's what you're looking for.
Does it come in front end or back end and is it suitable for full time job??
Backend, and yes, absolutely suitable for a full time job. You can also learn at least some frontend stuff and work on your own projects, or become what's called a "full stack" developer.
If a library can't keep up with such a minor change, id say it's dead code anyways at this point.
Is becoming Dev Ops better than a Back end with Django?
"Better" how?
Usually that error, about not finding it, means the package doesn't exist at all or for your python version. The best way to check is to read the pypi page and they will usually list dependencies. Here it is not explicit, but you'll see only a python3 wheel and only python 3 listed in the categories.
But if you are testing a piece of code which should close the file - (and is meant to guarantee that) then your testing should prove that it happens - that is the point of black box testing - your testing code should not assume anything about what is happening inside that code being tested. If your testing code is built on assumptions about the code you are testing - you will end up testing what you think your code does - rather than testing what your code should do.
Better in terms of what? More fun? More interesting? More money?
Django is one of (if not the most) popular web framework for Python. If you are looking into getting a Python web development job in the future, there's a good chance that they're using Django (or Flask). It's also good if you just want to make a personal website in Python.
Oh! Is it better compared to Node.Js
I don't have much Node.js experience, but I will say that (in my opinion) Python itself is a "better" language compared to JavaScript in general. But it really depends on what you're trying to do. For example, if you want a general web development job, then both are popular. I will say that there are more jobs that require Node.js than there are that require Django though.
I will be messaging you on [**2018-02-25 04:34:57 UTC**](http://www.wolframalpha.com/input/?i=2018-02-25 04:34:57 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/7zpn7y/got_some_free_time_this_weekend_and_want_to_build/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/7zpn7y/got_some_free_time_this_weekend_and_want_to_build/]%0A%0ARemindMe! 12 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! durg6be) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Thanks for it ! I really appreciate your opinion :)
That's a good point - makes it easier for people to contribute if it's all python.
TIL about `nonlocal`, and lots of cool 3.7 stuff great post!
i'd agree that documentation is very good for Open source! :) 
Maybe odoo? It's a python based ERP system that includes a warehouse module.
I'm surprised that does not exist. It seems pretty easy. If it were me, I'd take a Raspberry Pi or something to hook to a monitor in the warehouse, and have it running a simple GUI to display and also hosting a web interface for the office to use. No point in using a separate server for this. Come visit us in /r/learnpython if you need help with the code. 
Thanks alot I will continue my progress! :) you really helped me get outta this!
It is ok to learn Django first. What is even better if you not just "learn Django", but dig a bit deeper and understand the main concepts and components what makes Django great: url routing, function vs class-based view, handling HTTP requests and responses, html rendering, middlewares, resusable app structures, models and their relations to the ORM. Then when you look the Flask documentation you would "only" need to learn the exact syntax but you do not need to learn fundamentally new concepts. This works also in the other way around and this is very well transferable to non-python based frameworks as well. 
If you are testing some piece of code, then you have it and can see directly what's written in it.
&gt;"better" The quotes aren't needed here, the only thing Node.js has over python is it's speed :) Doesn't change the fact that (EDIT: it = JavaScript) it's still a fucking garbage language that makes no fucking sense. E.g. "wat" + 1 Array(16).join("wat" - 1) + " you fucking guessed it, Watman." [] + [] // "" {} + {} // "[object Object][object Object]" [] + {} // "[object Object]" {} + [] // 0 [] - [] // 0 {} - {} // NaN [] - {} // NaN {} - [] // -0, FUCKING -0 And this is just the beginning of the long list which I don't want to really bother with.
First of all. Why are you asserting within the code? That should be separate. Another thing, your code is all procedural; main functions which is very outdated and not re-useable. How about convert them to classes? It’s really hard to follow what you’re doing. Sorry can’t be more helpful. 
Dude the index is so descriptive I kind of feel the details weren't even necessary haha
A quick search lead me to [this library](https://eyed3.readthedocs.io/en/latest/). Might be worth a look.
If you want to build a full blown web app fast then Django is the way to go. If you want to build micro services APIs then Flask or connexion. I moved away from Django due to my needs of APIs instead of monolithic approach. 
The example in the "print is a function" doesn't show any of the conseqences of the change. Showing the meaning of "print is a function" would be better done with something like: writeln = print for x in [1,2,3]: writeln(x) 
They shouldn't break backwards compatible again, full stop. 4 should never happen, 3.10 is the right path forward. 
All of these have solutions in the standard library. `isodd` is just `x % 2 == 1`, doesn't really need a function at all. For `product`, you can emulate it with `functools.reduce(operator.mul, seq)`. For `flatten`, `itertools.chain.from_iterable(list_of_lists)`.
haha, yes, my `product()` function is a one-liner: `functools.reduce(operator.mul, lst, 1)`. My `flattened()` function is a little more general in that it can flatten to arbitrary depths but I suppose that's also the weakness because a reader of my code would have to look at the docstring to know that. So you are saying the most pythonic thing to do is to inline these functions whenever possible?
What I really love about print being a function is being able to do this: print(*fields, sep="\t", file=handle) Instead of this: handle.write("\t".join(str(f) for f in fields) + "\n")
Django. A lot of beginers make the mistake of starting with flask first, because it's way easier to make a "hello world". But the fact is, doing __correctly__ anything more than a small website with flask requires expert skills because you have to take a lot of design decisions. And when you learn programming, designing a system is far, far away from what you can do. I encounter every year flask code bases that have terrible flaws (md5 hashed passwords, no escaped variables, aweful session management, no plugability, big monolithic chunks, etc) because the dev hacked his way through the project with no clue of the consequences of his or her choices. It will also give you terrible example on how to organise code. The global requests object, the dichotomy of the central app vs blueprints, the inconsistant way to handle third party code... Those are artefacts of early decisions that, without the contextual explanation of experience, will lead you to believe they are correct practices in any cases. On the other hand, django first steps will be harder. But out of the box it gives you a sane project structures, prevents CSRF and clickjacking, feature authentifications from a to z, and so on. You won't have to choose an admin lib, a form lib, an ORM lib and how to integrate them. You just do what Django tells you do to. It's not perfect, but it's quite good. Basically it will force you to make things ok, even if you understand jack about it. However, flask, to teach web programming, is a fantastic tool. If you have 3 days to explain web dev to an audience, don't use django. And if you know what you do and need a tool to make a small website, it's a great toolbox.
Thanks. I will check that out.
I very well may not be using the correct key words. A raspberry pi is a good idea and we use several in the factory already. It is a good idea to just have one or the other be the web server. I will take that advice.
Use whichever tutorial works best for you. As for projects, build something relevant to you. Python 2 vs. 3 doesn’t really matter for most beginner projects, but you should use Python 3. 
I’m just getting started with JS and what do I say, boy you surely know how to build up my hopes But for real, I’m with you. There’re some things I’m not happy about, and it’s only day 2 since I started picking up this language 
I’ve been using [Alpha Vantage](https://www.alphavantage.co/) for a while quite successfully.
Gooey looks amazing, thanks for the tip!
I'll have a look at it when I get home :) 
I've also successful used https://github.com/balloob/pychromecast for displaying a webpage on a chromecast to a large TV.
Make sure you're playing with ES6/7 or whatever they're calling it these days. It's actually quite nice if you if can just ignore Javascript's history. EcmaScript 5 and previous is tedious and painful. You can do yourself a favor and read up on prototypal inheritance, which is rather different than how inheritance works in Python. ES6+ has `class` semantics, but they're just sugar on the non-classical inheritance actually in use. If you can get a halfway-firm understanding of how the prototype chain works you'll be a lot more comfortable down the road. Edit to reinforce a point: Modern JS is _nice_. Like, Python nice. Don't be afraid to dive in.
Unless it's secretly a dating app
I try PyCharm about once a year, and it always feels too big and slow. VS Code doesn’t require you to engage in functionality you don’t care about. That stuff lives in the addons.
Agree 100%. Django only appears more complicated, in fact it is the simplest choice for someone new. Having used both, I prefer Flask myself for most projects, but I've been coding for almost 30 years.
Dude, stop spamming this subreddit with django "questions". Do you want to code websites ? Django is one too for the job. It works well. It is worth learning. You can do exactly the same thing with a lot of other frameworks (flask, pyramid...), or even other languages (C#, PHP, ruby... any modern language has at least one good framework to use) If you don't want to code websites, that's ok too, there is a lot of things you can do when you know how to code. Django is hot right now, but maybe it will no longer be used in 5 years. Who knows. If you learn how to code, instead of simply learning how to use a framework, you will always find a job. Spend less time asking if django is good or not, and spend more time coding. 5 days, 10 threads about django created, and you are only at the hello world step ? Get off youtube and reddit, follow the django tutorial, focus on learning the why instead of the how, and you'll learn so much faster.
Thanks for the advice.
The `x` inside the `printInfo()` function is not the same `x` as your main loop. What happens here is that the `x` in the main loop is initialised once at 144, and then never updated. Look into closures to learn more. What you can do to fix this : * declare `x` as nonlocal inside the `printInfo()` function * or pass `x` as a parameter for the function (which you should move out of the loop anyway), and make the function also return the new `x`. Then, inside the main loop, call `x = printInfo(device, x)` (and rename `printInfo()` to something else, because a function that has print in its name should not update the most important variable of your program as a side-effect) EDIT : for varName in ['DisplayFrequency']: x = ("%s"%(getattr(settings, varName))) x = int(x) print (x) The for is not needed, because this loop will run only once with `varName == 'DisplayFrequency'`. Also, you are just accessing `settings.DisplayFrequency` in a very odd way, by accessing it with `getattr`, casting it into a string, then casting this string into an int. It seems to me that you can just replace this all by : x = settings.DisplayFrequency print(x)
My general rule of thumb is: if the one-liner sounds like what people would generally describe when doing that work, then it's fine to inline it. Otherwise, you should probably put it into a function with a better name. ----- Take `functools.reduce(operator.mul, lst, 1)` for instance. It's not that long, but a literal reading yields: &gt; `reduce` down the given `lst` using a `mul` function that comes from the `operator` library and initialize the operation with a `1`, take a second to remember that `mul` in the context of `operator` probably implies "multiply", and also remember that `reduce` starts with the initialized value and then apply the pairwise function with each value in the list until the end. Oh and the `reduce` function comes from `functools` library. Basically, the point is that, if someone is going to read that line of code, these are the mental sentences they'll have to go through. This is an incredibly inefficient way of describing "just multiply everything together in this list". Hence, a function def multiply_all(items_to_multiply): ''' nice docstring goes here ''' return functools.reduce(operator.mul, items_to_multiply, 1) ... means you can now write it inline as multiply_all(lst) ... and a literal reading now yields &gt; `multiply_all` items in the `lst` ----- On the other hand, if an inline statement is sufficiently self-explanatory by itself, then I would rather just write it inline wherever. Your `isodd` function can be an example. But before that, one tiny critique. `isodd` mashes it all into a single word. When I see it, I don't immediately see it as being two separate words, so I start thinking... is this referring to a person named Isodd? Some operating system thing that has to do with `iso` and `dd`? WTF? If you want to be pythonic, at least do `is_odd`. Anyway, the next point. The native python method for checking whether something is odd (`x % 2 == 1`) involves a magic number of `1`. Reading a statement like `if x % 2 == 1` gives us: &gt; if the remainder of `x` divided by `2` is `1` ... and depending on the context of this code it may not be immediately that your mathy statement is about checking whether a number is odd, because you have to put the `1` in the context that you're dividing by `2`, which takes more mental hoops to fully resolve. However, note that `is odd` can be re-understood as `is not even`. Given python's support for truthiness, it means you can do these checks based on evenness and end up with simply `x % 2` and `not x % 2`, which does not involve that magic number of `1` and thus easier to interpret in-context that you just want to check for whether x can be evenly divisible by 2. Interpreting a statement of `if not x % 2` now becomes: &gt; if `x` can't divide nicely by `2` That's also a very natural way of describing whether it's odd/even, and thus for something like this, inventing a new API (i.e. put it into your own function) seems unnecessary to me. ----- To some degree, this can be subjective, but the point is that whether I would write a wrapper function or just use a statement inline would depend on these readability concerns with the one liner.
Yet another time wasting pile of crap that is all ready documented. Why not write another tutorial to waste yet more time?
good to know, thanks!
+1, I got sick of writing ``set([...])`` for set literals with Python 2.6+ compatible code so I started putting this after my imports in scripts and modules that used set literals; lset = lambda *args: set(args) It only saves two characters but I don't care, it's easier to type. I could have written my own module and imported ``lset`` from there, but I feel that's overly abstract. Anybody maintaining my code would need to visit that module to figure out what ``lset`` does, only to be greeted by a one-liner.
There might never be a Python 4. The BDFL doesn't like version numbers using double digits but had to put up with it with e.g. 2.7.14, so why not 3.99.99? I'm sorry but I can't be bothered to work out when that will be released :-) 
&gt; depending on the context of this code it may not be immediately that your mathy statement is about checking whether a number is odd, because you have to put the `1` in the context that you're dividing by `2`, which takes more mental hoops to fully resolve. If you go back to your discrete and analytical mathematics courses (which you hopefully took in college if you went for a minor in mathematics) you'll recall that the set of odd integers is defined as the set of all integers such that 2m+1, where m is any integer. Thus when you divide a number by 2 and check if the remainder is 1 you're asking if there is an m such that 2m+1 equals your number! So if you're familiar with this property of integers when you find ``x % 2 == 1`` you'll reflexively know that this is a test to see if ``x`` is odd.
Automated some paperwork at work. I do some paperwork for each one of my four applications about once a month, but it's all very repetitive. So I set up some selenium scripts to fill out the text boxes from a properties file for each app. Should save a lot of time!
Lots of languages keep backwards compatiblity without becoming a dumpster fire. Java and C# come to mind. 
this is the wrong attitude imo, or at least partially incorrect. as somebody who has to work on a project that nearly mandates backwards-compatibility but was also initially written by what i can only assume was a java developer referencing a python cheatsheet every ten or fifteen seconds, there are good times to break b/c and bad times to break b/c. edit: and in retrospect, i might've misunderstood what you were saying, or at least insofar as my point is concerned.
I want to stop using the prefix $ and just let it go by it self so I can just write "add 4 4". Tried removing it by just removing it from the code, but it didn't work...
Learning the basics atm. Syntax is actually quite easy and elegant. (looking at you C++). Currently learning all the different data types and how to use them etc. What should I do as my first little project?
I'm sorry but I'm not prepared to spend my time reformatting your code so that I can read it. Please also ignore the usual go to /r/learnpython replies as some of the advice there is poor or plain downright wrong, and if you correct it the toys get thrown out of the pram.
Please reformat your code to make it readable. Just follow the instructions on `formatting help`.
Well said. Some people seem unable to grasp the simple fact that English is an extremely difficult language to learn.
f-strings are amazing but 3.6 is still not common enough to be able to use them everywhere. 
Haha I was trying to make it catchy whilst short and sweet. :)
It would be super appreciated
Read the formatting help, you just need to put four spaces in front of your lines. Using an editor like Geany you can just add an extra indent to multiple lines, then copy and paste it.
Correct.
I've been meaning to join the Qt bandwagon for a while now. This is great news. I hope they are successful.
I also want my bot to greet all the people who joins automaticly. Got told by a friend to find discords api. But what can I do with it? https://github.com/Rapptz/discord.py/blob/async/discord/ext/commands/bot.py
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Rapptz/discord.py/.../**discord** (async → 1863a1c)](https://github.com/Rapptz/discord.py/tree/1863a1c6636f53592519320a173ec9573c090c0b/discord) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply durv1r0.)
If you have a good implementation of flatten, I'd be interested. Flattened is annoying because you probably don't want it to work on strings most of the time, so there's a flag needed. 
Just an update to the few that were looking at this. I found out through some reading on the EasyGUI docs that EasyGUI uses tkinter to actually do the rendering, so the problem is really with tkinter. I'm still not sure of a solution other than running another window manager, but wanted to at least give this nugget of info for clarification.
I did thx.. I could also solve my problem. The program now works (i think) 
I don't know why people say that Google doesn't work. I get all my data from Google and it's wicked easy to put it into a dataframe. This will give you a years data (you can change the time range and interval for 1 min delayed data) for NVIDIA. query = {'q': 'NVDA', 'i': '60', 'p': '1Y'} r = requests.get("https://finance.google.com/finance/getprices", params=query) (Sorry for the formatting, I'm on mobile) 
now it also shows you what you actually need, too (as of 3.6): &gt;&gt;&gt; print "what", File "&lt;stdin&gt;", line 1 print "what", ^ SyntaxError: Missing parentheses in call to 'print'. Did you mean print("what", end=" ")? 
Thank you; I think is simultaneous discovery - playing around mock-open I discovered that it does record __enter__ and __exit__ - thank you. Although I have had to provide a patched version so it supports __iter__
Yes - of course - but the point of black box testing is that you assume you can't see the source code - you test 'just' the interfaces - the inputs, outputs and the side effects (resources used, exceptions raised etc); i have too much experience of developers who assumed they knew how their code worked, and therefore failed to test that it did what they thought. I have seen too many bugs that went live due to poor testing. It is the main reason I do my best to do black box testing. 
I would use the operating system for this. https://linux.die.net/man/8/lsof It does all the work for you, and it's got credibility.
It's honestly not so bad. For equality checking, you learn on day 1 to always use `===` which checks for strict equality (same value and type) and most of the other idiosyncrasies (like [] + [[]]) are the king of thing you'd never actually try to make use of in real code. Similar to Python's "truthiness" (e.g., is an empty list true or false? I don't know and it shouldn't matter because you shouldn't use them like that!) And you can use Typescript to get linting which enforces type consistency. Plus you can make anonymous functions more easily. I still prefer Python, but I'd rather code in javascript, than say, R. I feel like most of the "JS is horrible" stuff is overblown by programmers who don't do web development in an effort to enforce some sort of sense of superiority over web devs. It's silly.
Please define "none of them work". It might help if you read [How To Ask Questions The Smart Way](http://www.catb.org/esr/faqs/smart-questions.html) first.
That is nonsense. Microsoft's .net has been around for 2 decades without breaking backwards compatibility and it has all the features every other modern language has. I don't know about java, but I assume it has a similar story.
Playing with reddit PRAW for the first time. Should be interesting and fun.
Playing with reddit PRAW for the first time. Should be interesting and fun.
Odoo isn't bad, and there's a community version that's free to use. I've used the [erppeek][https://pypi.python.org/pypi/ERPpeek] Python library on a Raspberry Pi with Kivy to do a few display or touchscreen stations successfully, had fun doing it, too.
That was rude af
If the file is opened within a function scope then Python should automatically close it so why are you trying to test this in the first place?
Reddit has a [Python API](https://praw.readthedocs.io/en/latest/) that's pretty newbie friendly. An API (Application Programming Interface) is a convenient interface for getting data from one application (such as a website) into your own application. You can use this to make a bot that does something helpful or gather some interesting data from a subreddit (one fun thing to do with data from a subreddit is to generate markov text chains). Google Maps also has an API thats free for limited use. I've used that to constantly pull data and analyze traffic patterns around my city.
pydata/pandas-datareader has a number of financial data sources: https://github.com/pydata/pandas-datareader https://github.com/pydata/pandas-datareader/issues/454 &gt; With Yahoo and Google Finance APIs deprecated/broken/unstable, what are some good sources for free stock/security/currency data? &gt; &gt; - #411 Morningstar (PR) &gt; - #392 Robinhood &gt; - #390 Tiingo &gt; - #389 Alpha Vantage &gt; - #368 Barchart &gt; - #161 Bloomberg &gt; - #156 TrueFX &gt; - Quandl &gt; - see-also.rst https://github.com/pydata/pandas-datareader/blob/master/docs/source/see-also.rst &gt; - https://github.com/wilsonfreitas/awesome-quant#data-sources quantopian/zipline pulls data from Quandl with a data ingest step; with the US Treasury 10 year bond yield and/or SPY (from IEX) as a benchmark. https://github.com/quantopian/zipline - https://www.quantopian.com/tutorials/ - https://www.quantopian.com/posts/community-algorithms-migrated-to-quantopian-2 - "7 Best Community-Built Value Investing Algorithms Using Fundamentals" https://blog.quantopian.com/fundamentals-contest-winners/ enigmampc/catalyst is a fork of Zipline for cryptoassets, which also does back testing, paper trading, and live trading; with the SPY S&amp;P 500 ETF as a benchmark. AFAIU, Catalyst is migrating to ccxt for data and trading. https://github.com/enigmampc/catalyst https://github.com/quantopian/pyfolio &gt; pyfolio is a Python library for performance and risk analysis of financial portfolios developed by Quantopian Inc. It works well with the Zipline open source backtesting library. &gt; &gt; At the core of pyfolio is a so-called tear sheet that consists of various individual plots that provide a comprehensive image of the performance of a trading algorithm.
Based on username. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [pydata/pandas-datareader/.../**see-also.rst** (master → 0debb02)](https://github.com/pydata/pandas-datareader/blob/0debb023ba90ec57b6dd134a2003cb07aeea66a4/docs/source/see-also.rst) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dus02xw.)
Python for finance!
Did you confuse me with someone else? I don't recall ever saying I "went for a minor in mathematics". ----- Anyway... Sure, if you minored in math or something else that involved discrete mathematics, and you still remember the details of those courses, maybe you'll reflectively think of 2m+1 as the definition of an odd number. Readability of course depend on context and who the audiences are for your code. If you know that only "mathy" people will ever read your code, then I think 2m+1 is perfectly fine. If you know that mostly "mathy" people will read your code, then 2m+1 might be the better tradeoff. That said, "whether a number is odd or even" is a concept that's taught from grade school and is highly relevant as everyday general knowledge, and you tend to not think of the definition of 2m+1 until postsecondary math tries to drill it into you that formal mathematic definitions are important. If you ask a "layperson" what odd and even numbers are, they're not going to think of 2m+1. They're going to think "can it nicely divide by 2". Meanwhile, there's nothing that suggests people who both had formal mathematics training and who took it seriously make up the majority of "all people who might read python code that deal with odd/even numbers". So I guess that's why, in the absense of the context, I would still recommend `not x % 2` over `x % 2 == 1`. Though I do recognize it's a very trivial point. I would not bring it up in code reviews, just that I do believe `not x % 2` is slightly better in the general context. In the end, the only thing that matters is to recognize that readability is important, and that readability depends on who the audience will be, so make the right decisions based on that.
Indeed, Guido has its own opinion on versioning. Nowadays people just assume versioning is semantic, that's not always the case.
Read up on string indexing and for loops. 
What a massively helpful response, Dude. I would give you 50 upvotes if we could ration them out!
So, in line 3, you define a variable i that iterates from 0 to the length of s, ie. 0, 1, 2, 3, ... etc. It is not iterating over the values in s, then it would have stated ‘ for i in s’ instead. Then, in line 4 you check the values in s from the index value of i and the next two values. That’s what i:i+3 means. If i is 0, then it would be the same as s[0, 1, 2], which would be the first, second and third value in s, because Python use zero-based indexing.
i is not actually iterating over s, it is performing the loop len(s) times. Once you're inside the loop then you need to define exactly which characters in the string you want to compare to 'bob'. Hence s[i:i+3]
That's about slicing operation. Suppose you have string s = "abcdf". With s[0] you will have "a", with s[1] "b", with s[-1] "f", with s[-2] "d". It is indexing. Slicing is more complex. Having the same initial string, you can achieve with s[0:2] "ab", with s[1:3] "bc", etc. You can read up more about both indexing and slicing in Python documentation, and do not neglect some type of console to setup your own experiments. In your case, as far as I understand, we do comparison if s[i:i+3] is equal to "bob" in loop. So if we have string " abcbobob...", with iterating through loop we will have the next: i=0, s[i:i+3] == s[0:3] == "abc" != "bob" i=1, s[i:i+3] == s[1:4] == "bcb" != "bob" i=2, s[i:i+3] == s[2:5] == "cbo" != "bob" i=3, s[i:i+3] == s[3:6] == "bob" == "bob" ... Let me know if you need more explanation.
I tried to explain why ``x % 2 == 1`` is the accepted way to test if a number is odd without expecting a response. I was hoping it would reach somebody who's as excitable about math as I am, but instead I got your ignorant excuses. If you want to be taken seriously in any discipline you're going to need to understand the concepts you incorporate into your designs, and that includes all the math you use. That's why colleges teach math! P.S. How do you think a layperson defines an odd number?
I feel stupid because I had no idea about async and I even have 3.6 in my personal env.
**For hire**: Senior* Backend Developer (Django) **Location**: NYC **Company**: [Capsule Pharmacy](https://www.capsulecares.com/) **Buzzword-y job page**: https://jobs.lever.co/capsulecares/e21c2540-d83b-4896-870f-94ac56d6abe6 -- I am posting this without my team's knowledge. We're in dire need for engineers. We have a monolith Django backend w/ REST Framework. Unfortunately, my bosses are in "we only want seniors!!!" mode so they keep a) passing on people with good amount of experience but say, 2-4 years and b) interviewing people without any Python or Django experience (I am usually language agnostic but we really need someone that knows them). Figured I could post here just in case.
selenium + chrome. it's hard to scale but works.
Only a couple more years!
Ugh, selenium is so hard to scale with the browser version requirements and the window having to be open.
You can open selenium with virtual screen, therefore able to run it headless.
That's not true, selenium can use chrome without the window open.
A simple google gives you several much easier way to do it. https://stackoverflow.com/questions/1155617/count-the-number-occurrences-of-a-character-in-a-string 
They use this specific format so they can run a diff between your output and the output they expect. It’s a matter of getting used to it. I also recommend you to check codeforces.com 
I've heard "not evenly divisible by 2" in non-academic speech often. Which might manifest as `x % 2 != 0`.
Okay, I thought that was a direct response to me, so I responded like I would to such a response. I was wrong, it was a general comment for anyone. Apologies for that. ----- Though, I have to say I don't think I like you calling what I said "excuses" when I fully and passionately believe the stuff I'm saying. I'm not that passionate about math, but I am passionate about readable code. I feel like a lot of engineers I meet don't really think about people other than themselves when they write code, and a lot of domain experts tend to not think about new people or people outside the domain. IMO, a good chunk of coding is *communication* that involves very similar skills to writing English. Your presentation should be neat and well organized, and your meanings should be expressed in ways that are concise, succinct, straightforward, and using words that match your audience. If your audience is vast, then vocabulary should drop down to lowest common denominator, which isn't really a rebuttal to your point, but an important point in itself that I wanted to emphasize. To answer your question. A layperson would probably think of an odd number as one of the following: * 1, 3, 5, 7, etc... follow the pattern * doesn't divide evenly by 2 A layperson would probably think about odd numbers in an intuitive way, as in, they *just know it when they see it*. If you ask them to come up with a formal, concrete definition. They might say "if you divide it by two, and the remainder is 1, then that's an odd number", but to get to this point will take some thinking (probably after talking to you to make sure they know what you mean by "formal, concrete definition"). What they most likely won't do, is to picture "2m+1" in their head, at least, definitely not the 'm'. But like I said, it's fine if you know your audience and the "2m+1" way of thinking about it is common and obvious for them. This conversation reminds me that throughout my schooling, I keep on encountering scenarios where some teacher or professor tried to teach a concept and it ends up being incredibly confusing because of over emphasis on technical language. Think first year calculus. What's the first thing you learn? Epsilon delta proofs for continuity. What does the professor do? Write a gigantic mathy definition on the board and expect you to figure out all the symbols and what they mean. As a result students would make it a meme about how hard Calculus is. When you understand it though, you realize all it's really saying is that for any x, as you get closer to x, if f(x) gets closer to corresponding y, then the graph is continuous. You can gesture it out with fingers and easily get an intuitive understanding, that can be easily explained in normal English, yet it was never taught like that. As a result of scenarios like these, a big chunk of people from my undergrad year, who I know are perfectly smart people capable of understanding such concepts, ended up dropping Engineering, which I think is very unfortunate. Meanwhile, can you blame the professors? Not easily, since they probably worked with this stuff for so long that their entire minds are full of those mathy symbols, to the point where it has become the default way of thinking for them. They're probably thinking "this thing I wrote on the board is so friggin obvious, why is it that you don't understand?!" Of course, it's always possible that I'm wrong about fellow human being's tendencies of thinking about odd/even numbers. But my point was that it's important to think about the audience and communicate in ways that are most effective for them. I hope you get where I'm coming from now. ----- Lastly, &gt; If you want to be taken seriously in any discipline you're going to need to understand the concepts you incorporate into your designs, and that includes all the math you use. While I agree with this, I think the context here is kind of ridiculous. Just because you don't mentally think '2m+1' doesn't mean you don't understand what an odd number is. Even for more advanced concepts, there's a huge difference between whether you intuitively understand something and whether you think in technical jargon. And yes, I do recognize that `not x % 2` versus `x % 2 == 1` is such a trivial thing. I'm kind of regretting even using it as an example now.
"Python for Algorithmic Trading" (by Dr. Yves J. Hilpisch) also includes "Finance with Python" http://pyalgo.tpq.io IDK if ccxt was yet built when pyalgo was written? Catalyst wraps ccxt. https://github.com/ccxt/ccxt/blob/master/examples/py/arbitrage-pairs.py
`s[i:i+3]` means: &gt; gimme the substring of `s` containing characters from the `i`th position to the `i+3`th position. The operation is safe enough such that if `i+3` is out of range, it'll just truncate at the end. So given that your `i` is increasing, this means you end up getting substrings like the following (given `s = 'azcbobobegghakl'`): 'azc' 'zcb' 'cbo' 'bob' 'obo' 'bob' 'obe' 'beg' 'egg' 'ggh' 'gha' 'hak' 'akl' 'kl' 'l' Also, if anybody else recommend the use of `s.count('bob')`, realize that while that's good advice in general, in your particular case it won't actually work since it'll count something like `'bobob'` as 1 `bob` instead of 2.
i agree. Sometimes those problems would be more like read comprehension quizzes. Try a little bit more of those and you should be used to it. I heard good things about leetcode.com as well.
Line #25 look buggy - if i1 &gt;= 0 and i1 = 0 and j1 &lt; h: the "and i1 = 0" in the middle appears to be extraneous. 
Thanks a lot bro for spending time and helping me its an honour :)
I will definitely look after it in my life :) 
I didn't hear about it yet but I will definitely look after it! 
Yeah! It just depends
What exactly do you mean by not common enough? Besides 2 vs 3, what is holding places back from running the latest? My understanding (as a noob) is that if your code runs on 3.0-3.5, it'll run on 3.6
I wish this would happen. But, the reality is that a lot of operating systems are not going to change.
Have you thought of using a decorator? def standalone_decorator(func): def standalone_func(*args): if os.path.basename(sys.argv[0] == "function_name": return func(*args) return standalone_func @standalone_decorator def function_name(*args):: #add some code This solution will run function_name only if sys.argv[0] is the same as the function name. You can change that value to anything you want.
This is suspiciously similar to https://stackoverflow.com/questions/19617125/python-slicing-bob-in-s and https://github.com/slgraff/edx-mitx-6.00.1x/blob/master/pset1countingBobs.py Given the abundance of existing answers, we could play silly games. &gt;&gt;&gt; sum([1 for n in range(len(s)) for m in range(n, len(s)) if s[n:m+1] == "bob"]) 2 &gt;&gt;&gt; len(re.findall("(?=bob)", s)) 2 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [slgraff/edx-mitx-6.00.1x/.../**pset1countingBobs.py** (master → 6377b9b)](https://github.com/slgraff/edx-mitx-6.00.1x/blob/6377b9b195a41fbae3999ddf2048a09aaf4f589b/pset1countingBobs.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dusagnd.)
Thanks, I will try it (still relatively new with Python) I just used the above example, as simple as I could, to illustrate what I am achieving. 
you on windows? edit: i missed the ‘pc’ part lol - go to start - look for ‘python 3.6’ - open python IDLE - in the top left menu for IDLE choose ‘new file’ - in the new file window throw this code in there print (‘greetings, universe!’) - save the file (use .py extension) -press f5 to run the program the output will be inside the IDLE! congrats, you just wrote your first python program! good luck and i wish you much success with python!! 🐍 
The stdlib docs has a small collection of recipes for some of these: https://docs.python.org/3/library/itertools.html#itertools-recipes
...maybe you're not cut out for this
Thanks :)
you’re welcome! 🤙🏾
Hiring for a remote, freelance, part-time python programmer. $45 to $60 hourly. Details here --&gt; https://i.codefor.cash/gig?req=206049
I've been programming with a heavy web focus for sixteen years. I've worked for companies both large and small. A number of my coworkers (all professional developers!) at my current company have created a variety of flask apps. It would be unfair to serious programmers across the world to characterize these creations of my coworkers as anything other than utter trash. Flask may be able to build large apps, but its paradigms and its community actively discourage doing things the right way. Flask asks you to take shortcuts that will hurt the app's ability to grow. Django will fight back somewhat if, through ignorance or incompetence, you make some bad decisions. You should absolutely learn django first just to get into good organizational habits. Once you feel like you've got your mvc development practices down. Consider trying to build a serious site with pyramid. It's the neutral middle between flask and django. Flask is for when either: 1) You don't care about the future of the project 2) You've become an opinionated developer able to decide for yourself how things should be architected in the context of the project. 
Oh! Thanks a lot I have got an advice from a 16 years experienced developer..proud
Use a generator rather than building a list.
You can use phantomjs, also chrome headless mode.
 --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
I'm older than 16. 😒
The official Python documentation should be the first place you go for questions like this. https://docs.python.org/3/library/string.html
I found the most useful part of it to be the exposure it granted me to uber specific python tools, functions, or libraries I wouldn't have otherwise known about. Other than that it was pretty meh. The exposure was fairly narrow in scope too, so I guess really it's just like 'hey, look at this thing python has' and you get a library or function name then you're on your own. Probably decent prep for a company that cares about knowledge hoarding. Or for brushing up on python generalities. Probably not the best tool for practicing problem solving and common solution/strategy implementation. 
I edited it now ! Sorry for my pronunciation
Oh! I am taking the Django course from them! What should I do?
[removed]
I'm partial to [CodeFights](https://codefights.com/) and [CodeWars](https://codewars.com/) myself. I like my programming practice to be combative. 
I think you can use it with Firefox headless or chrome headless
Not appreciably, no.
Hey, OP here. Disclosure - this is one of my side projects as an employee at Mapbox. I love maps and data analysis, but am not a GIS expert - so a few of us at Mapbox created a Python library to help out! https://github.com/mapbox/mapboxgl-jupyter Mapboxgl-Jupyter is a data visualization library for interactive data science, analysis, and research built with Mapbox GL. It's similar to the Folium library (https://github.com/python-visualization/folium) built on leaflet.js, but can handle way larger custom data, 3D data, and map styles with Mapbox GL JS using WebGL and Mapbox Vector Tile technology. Check out sample notebooks with awesome maps: 1. California Precipitation - https://nbviewer.jupyter.org/github/mapbox/mapboxgl-jupyter/blob/master/examples/point-viz-categorical-example.ipynb 2. USGS Earthquakes - https://nbviewer.jupyter.org/github/mapbox/mapboxgl-jupyter/blob/master/examples/usgs-earthquakes.ipynb 2. Chicago Gun Violence - https://nbviewer.jupyter.org/github/ryanbaumann/mapboxgl-jupyter-examples/blob/master/chicago-gun-violence/chicagoGunViolence.ipynb Want to build with Mapboxgl-Jupyter? `pip install mapboxgl`. Post an issue or PR on Github at https://github.com/mapbox/mapboxgl-jupyter. Docs at https://github.com/mapbox/mapboxgl-jupyter/blob/master/docs-markdown/viz.md Share what you make and any feedback you have developing with the tool @mapbox #weekendmaphack 
splinter
You are using the len() function to determine how many times you went through th loop (and appended to the list). Store that quantity as an integer in a local variable instead. Or invert control and move the how-many-to-generate-comparison to the outside of the generator. Like your `id` (sic) variable is already doing. for uri in self.generate_site_names(): id += 1 writer.writerow([str(id), uri]) if id &gt; self.max_capacity: break edit: you're also storing all generated names to avoid duplication? Eugh; that's going to take a bunch of ram. A generator here is unlikely to help much n
I think at this point Node is JS 2.0
 if os.path.basename(sys.argv[0]) == "standalone_script.py": if __name__ == "__main__": https://docs.python.org/3/library/__main__.html
The concept of using algorithm puzzles to assess software development skill is pretty atrocious. So, yeah. 
So what are you going to do? If you mock something you're not testing the real code, and if you don't have access to the real code file handler who knows what happens to it. Perhaps I've missed something but I have a strong feeling that you're attempting the impossible, or at least something that is very time consuming for very little gain. Unless you could do something like count the number of open file handles when you call the function and make certain that the number is the same after the function call.
If you need to do that it's because: 1. You can't read documentation; 2. You're reading ancient code; 3. You're stealing someones elses work and don't even understand how it works. And neither of them should be excuse. Never had this problem.
Hardly important here but I don't like counting manually when looping so:- for id, uri in enumerate(self.generate_site_names(), start=1): If ram turns out to be a problem then find a better data structure, but is it actually a problem when looking for 17,000 websites? Thinking of which isn't that the problem the OP has? If there are less than 17,000 sites the while loop will never finish or have I missed something?
Thank you. And keep using lists right?
CodeFights is my goto. Head-to-head programming combines a love of programming and competitive games. I have rarely run into an issue where I am spending more time getting the site to accept the format of my correct answer, like OP describes.
This is what happens when you ask for someones elses opinion. Especially someones who thinks that PEP8 is everything. For reference, PEP8 would rate my code on average ~1/10, and I don't care, because it's readable and nobody complained about it. Instead of giving a shit about specific format, be able how to solve problems, they need problem solvers, every company has different format they want you to write in (well at least, any company that is mature and worth working in) and it's just a matter of adapting to that, and it won't necessarily be the same as on hackerrank or any other website so who cares?
https://github.com/vivint/selenium-docker
phantomjs is deprecated
Couldn't agree more. It just has pussy mentality and 0 logic. Correct them and now you're an asshole, who ruins fun in learning, even though it's /r/learnpython and I just said something which they could learn from. Ignorance is bliss.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [My new book, "Cracking Codes with Python" is now available and free to read online!](https://np.reddit.com/r/learnpython/comments/7sigre/my_new_book_cracking_codes_with_python_is_now/) \#2: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#3: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
You can open CMD and type "python". If you want to run a python file, then type "python randomfile.py". Easy as that.
I've been curious about logging as my skills have been improving. Are there any good resources you could recommend? Is logging an overal change in how one writes code, or something on top of code?
Thanks for pointing the copy-paste error, corrected it: it's for the check that the i1 and j1 are valid indices. 
I much prefer LeetCode.
You can't optimize IO in code. Well, besides some dumb shit like opening file only once instead of opening it, reading a single byte you want to read at that moment and closing it, doing that for entire file...
Is it possible to trace back to the original number if someone wanted to? 
For me, my main laptop is on Mint 17, which is supported for another year. The python3 in my repos is 3.4. Some might say it wouldn't be difficult to upgrade Mint (assuming Mint 18 has newer in the repos), or to install a newer python. While this is accurate, I would rather spend my time working on personal or professional projects than tinkering with software versions.
Check out the [boltons](http://boltons.readthedocs.io/en/latest/) package.
How long takes a 504 ? 
So, rather than help, you just slag the OP and continue with the usual "forget /r/learnpython" rant. Didn't even link to [formatting code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) information. Overall, pretty much a wasted comment.
I sort of just skimmed it and misread it. It fine a generator would be slightly more efficient as you don't need to store the list. As the others have pointed the main reason it's so slow is probably timeouts for you it might be enough to just check if the dns record exists.
It does not work for the data given, 'azcbobobegghakl', &gt;&gt;&gt; 'azcbobobegghakl'.count('bob') 1 count(...) method of builtins.str instance S.count(sub[, start[, end]]) -&gt; int Return the number of non-overlapping occurrences of substring sub in string S[start:end]. Optional arguments start and end are interpreted as in slice notation. 
I think it can be useful as a screen (similar to the idea of using FizzBuzz) just to verify someone can code at all before spending the time on a real interview.
Learning Python a waste of time ? A proper programmer should be able to learn a new language in a week. Please explain writing out-dated language is a better choice than getting back up to tools that are increasingly more popular, powerful and... easier to write. That might seem like a "just pro-python guy" but no. Actually I'd prefer writing c++ or c rather than python. But I write python because it is quicker, has very good documentation, mostly all tools are already created and there is about nothing to get it working. The workflow and toolset made available with python is well known and is more attractive to young devs. The learning curve of python is non-existant as well. If you need to learn something to learn how to write python, then you don't know how to program. It's that simple. You wanna know what you need to learn ? The right tools. Django is not sufficient by it self and a solo dev using DRF would out-perform 10 Raw Django devs who can't write a serializer. Oh and guess what, Serializers are not a Django thing, it's just a notion that we have to know. You want my advice ? Learn python, but go to node.js because it is more performant anyway and NPM provides as much or more packages than python. Learn Docker and how to orchestrate, split your work into services. Don't re-write code. Python is a goto language for anyone who write an API for their services. So that's an advantage as well. If they are not mature enough to be able to switch their tools then leave and let them do what they want.
That's a very good idea! Using chromecast for displaying a web interface :)
Tty InterviewBit. While far from perfect, their evaluation is the best I've tried personally, and they don't mind if you return 1 instead of True, etc. They also test your code's space and time complexity automatically and tell you if you can do better, even if your code passes. 
30 years of experience in the industry tells me that black box testing of code is always a good idea - even if it is code that you have written yourself. It is a very well recognised technique for ensuring that your code fulfills it's own interface. For your information - I have written the code and the documentation - and I fully understand how it should work - the point of testing isn't to test that it works the way you think it will- but it works the way that it should - they are two very different things. 
How does it compare to e.g. `click`?
How would they do that without access to your server? 
Think it needs a first name. I think "Hugh" suits it well.
This is awesome! Great job!!
yes - that is bash - and then i need in python to run that back line and process the result. turns out that using the unitest.mock library - and doing this : call_names = set(x[0] for x in m.return_value.mock_calls) self.assertTrue( 'close' in call_names or ('__enter__' in call_names and '__exit__' in call_names)) where m is a patch version of the open function, makes the whole thing work as expected - and has found a bug. 
Let me throw a wrench into the gears: Imagine that we have a group of, say, twenty boys. Four of them are popular: Adam, Billy, Charlie, and David. Each of them chooses the other three. Every other boy chooses three of the four. Unless you can fit all of the boys into two rooms, your condition will fail. (You need at least two of the popular boys in each room, to fulfill their requirement.) I'm not saying this scenario is likely, but I'm saying it's possible, which means that you might not be able to fulfill your promise to put each student into the same room with at least one of their chosen friends.
Gimp, Maya, Houdini, Nuke, blender, they all use 2.7 :(
6 characters is definitely not enough to generate every possible MD5 hash - you only get 256^6, or (2^8)^6, or 2^46 possible character combinations, even assuming you use all unprintable characters as well, and there are 2^128 possible MD5 hashes.
Google rainbow tables.
4.0 is just going to be the version after 3.9. GvR doesn't like normal versioning.
What you are trying to do here is a preimage attack. MD5 still resists preimage attacks so there's no efficient way to work out what would hash to a particular value. There's no guarantee that 6 characters is enough. The way to go about this efficiently would be to use [rainbow tables](https://en.wikipedia.org/wiki/Rainbow_table) which trade off computation time versus storage space. I ran your hash though 190GB of MD5 rainbow tables and found nothing so I suspect you are on to a loser here.
seems like, as I suspected, I'll either have to wait a looooooooooooooooooooooooong time to find the right combination or be incredibly lucky.
Yeah seems it isn't going to be as trivial as I would have wanted it to be, after all the idea was to create a sort of computing enigma for a programmer friend of mine... Either I get very lucky with rainbow tables or run the script for god knows how long. Thanks anyway.
&gt;If it was looking for the answer 1.00, it would reject 1.0 despite the fact that floating point arithmetic would guarantee the correct accuracy they were asking for. &gt;&gt;&gt; print('%.1f' % (1.01)) 1.0 
In the past, I loved to use `pyenv` to change my Python version, but now running the command ``` docker run --it --rm python:3.7-rc /bin/bash ``` is more convenient for me. You can try it without upgrade Mint, maybe (I am not familiar with Mint). 
Have you seen http://www.projecteuler.net? The idea is each problem has an obvious brute-force solution, but they are scaled such that if you want an answer in a reasonable time then you're going to need to work out something clever. e.g. https://projecteuler.net/problem=67
I had heard of it. This could keep my mind occupied for a while. Thanks :D
what would a somewhat easier to force hash algo be? because the idea of setting up a challenge/joke for my friend is still on.
I will continue to point out that /r/learnpython is a crap source while it is a crap source, if you don't like that it's tough. I couldn't be bothered to link to formatting help as it's sitting right underneath where I'm typing right now.
Well, being short is what makes it easy to brute force.
I think Hackerrank is great.
Around a second.
Then you're lucky! I couldn't output 2 domain names in 10 minutes.
Yes, I am searching `self.max_capacity` (which is said to be 17000) of domain names among 12*37^12 maybe-domain names. This is a very long process, yes. This means, yet again I have to rewrite this class. But I don't know how else I can do that. In my previous version I was generating random strings, then I was checking if they are smart (have more potential of being domain names - the algorithm was a slow one) and only if confirmed, I was checking for the response status 200. Can you please share with me what you would do if you were assigned this task?
Thanks, friend!
So get them to make a dice game in their language
Long, on the scale of "the heat death of the universe" That's the point of crypto hash functions. They make what you're trying to do impossible (or at least reeeeeeeeeeeeaaaaaaly hard)
I think you are misunderstanding what I am trying to do with the testing - not to worry. One of the reasons for doing the testing is not only to make sure I have written the code correctly - but also to make sure I don't break anything later - yes - I do make sure that I write the code the way that I should - but I also accept that I am human and that I make mistakes. The testing is a 2nd chance to check that for mistakes. And as I have said in other cases - if you have a file that is long live - i.e. it needs to open over the life time of several functions - you will save the file handle somewhere, and therefore you can't rely on function scoping etc to close the file. Anyway - thanks for the help - I have got my testing to work - and found bugs in doing so - in exactly the case above; It was a long lived file - and it wasn't being closed in all cases once the processing was complete. Regards,
Depends if that someone had a seapoena
Okay. For starters I'm running on a nominal 10 Mbps broadband connection, what's your speed? As we're using strgen in a brute force approach is it simply that I've got more .uk names to find than you have .az? Did you get any debug output with some timings for each attempt at connecting?
Doing it the way you're doing is definitely a non-starter - you're doing the equivalent of looking for a single grain of sand on a beach for every domain you find. For something like this, you need to go in the other direction - get the list of registered domains and look through them for ones that match what you're looking for. You can probably find a service that will provide the whois database, though I think this generally requires payment. Alternatively, you can go for a more limited subset (eg. registered english words), which is within the bounds of feasibility. Though I do have to ask what the point of this is.
20 MBps fiber-optic. You got both more .uk names and the two strings that you have tried happened to have far denser occurrence in existing domain names than in average. Which means, you literally got lucky being able to fetch 11 urls under 4 minutes.
The point is, my friend, that my boss is an arse.
I'm using 3.6.2 and it doesn't have that.
The main problem is the other way around. If I write code that requires 3.6 to run (f-strings etc), it can't be run anywhere else. For instance if you use the LTS versions of Ubuntu, you still have 3.5. It is possible to install additional versions and use virtualenvs to support packages but it's an extra hurdle to get over for what is effectively just syntactic sugar.
Just finished up a set of core tests and documentation that I needed to push Sanic JWT to stable: https://github.com/ahopkins/sanic-jwt It is a package for adding JWT authentication endpoints to a Sanic project.
Was that through PyCharm's built in configuration or an external OS thing to remap the buttons? That sounds like it'd be really useful. I mainly use Eclipse at work but I assume something similar would be possible.
I've discovered the problem: you seem to have confused me with someone who gives a toss about your opinion of /r/learnpython. My original comment was wrong, I forgot the golden rule: don't feed the troll. Some of your posts are sensible and show some knowledge of Python, so it's a pity that you'd rather be part of the problem rather than part of the solution. It's so easy to be snarky, but more work and, apparently, too much trouble, to actually post a positive and helpful comment. &gt; I couldn't be bothered to link to formatting help as it's sitting right underneath where I'm typing right now Some people using apps may not have it "sitting right underneath where I'm typing right now". I either ignore badly formatted posts or, maybe, point to the doc. Try it.
I've been in the Jython side of Python for work adding in a bridge to hook the standard logging library into slf4j logging without including all the jython internal code in the error stack traces. The lack of exception chaining in Python 2 may be the first thing to annoy me about the language.
This is really simple, straight forward and hands-on course, highly recommended for beginners. [https://www.udemy.com/spark-and-python-for-big-data-with-pyspark/](http://www.udemy.cc/spark-and-python-for-big-data-with-pyspark)
And docopt and click.
Debian have a total python 2 removal plan
Sure, they are both one-liners, and there reasons to use either method, so I'm not going to tell you to use one over the other. However I fail to see how using bash "makes my test code complicated".
I don't actually don't understand why you're doing what you are doing. It's obviously worked for you, but I think that if we saw the code, we might be able to find a better way.
You can run a browser like Chrome or Firefox in "headless" mode. You still run a browser, there just won't be a visible window.
Selenium can use multiple browsers, but only works through automating a browser. Phantomjs is a headless browser that runs without opening a GUI. It is generally faster than other browsers. Selenium is great for testing web sites. That is its purpose. For web scraping, there are other libraries. BeautifulSoup is easy to use and very common. Scrapy is another one that includes a platform for building web scrapers.
It's configured in PyCharm: File -&gt; Settings; Keymap -&gt; Main menu -&gt; Navigate -&gt; Declaration = add "Button5 click", for example.
Even on a headless server you can create a virtual display for selenium. 
Temper, ...
I second this. I have not encountered any problems with missing support for 3.x in any relevant package/module.
You can use urllib.request and beautifulsoup. 
I don't think there's any reason to use 3.4 over 3.6 unless there are some specific weird edge cases.
I believe I've run into one package that was not 3.6-compatible (and I think it has since been updated to work with 3.6). Since I use Jupiter Notebook via Conda, it was trivial to set up a second python 2 environment, which I used only when I needed that particular package. Python 2 and 3 are similar enough that this doesn't take any particular expertise. Install and learn Python 3; even if you eventually find a specific need for 2, it's simply to deal with on a case-by-case basis.
Phantomjs
No, I think the newest edition is actually from 2016. They already mention having to choose between 2.7 and 3.5, for example.
So to be honest I have no intention of reply to your 'points' because you obviously have an ill-informed bias that's getting in the way. &gt; To be honest, I won't work with anyone who either defend or work with php today That's nothing but immature and ignorant. 
The problem is trying to use those on a website that is a SAP or is using some other method where JavaScript provides the content and the context of where the user is
Why?
How about a [Vigenère cipher](https://en.wikipedia.org/wiki/Vigen%C3%A8re_cipher) with a short key. Then you can encrypt a longer message. Part of the challenge would be brute forcing the key and part of it would be getting the computer to compare the candidate decryption to normal English letter frequencies to present him with a reasonable number of possible decryptions for manual review.
**Vigenère cipher** The Vigenère cipher (French pronunciation: ​[viʒnɛːʁ]) is a method of encrypting alphabetic text by using a series of interwoven Caesar ciphers based on the letters of a keyword. It is a form of polyalphabetic substitution. Though the cipher is easy to understand and implement, for three centuries it resisted all attempts to break it; this earned it the description le chiffre indéchiffrable (French for 'the indecipherable cipher'). Many people have tried to implement encryption schemes that are essentially Vigenère ciphers. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Hi Ben, Totally understand this - But at least having a working program would allow all combinations to be considered and worked out in minutes as opposed to taking us teachers hours upon hours of switching to try and fix (to no avail) - before we ask some of them to consider changing friend options.
&gt;____________________________ Is that your ECG line?
Google still uses 2.7. So if you work for them, maybe you’ll have the opportunity to do things like use print without parenthesis. That said, python is dropping support for 2 in 2020
Well I would do like 2 hours of the flask track and see how you like flask vs django yourself 
PhantomJS is not a good choice. Outdated JS libraries and DOM doesn’t generate correctly a lot of times. Both Chrome and Firefox can now run in headless mode. The selenium API has options to set them headless.
Actually either w or h is needed (depending on row or column order 2-D matrix), the other parameter is redundant (we can get rid of it).
Hackerrank is garbage. Of the million ways they can setup inputs, they choose all the worst. 
How large/what types of data?
Threw another ticket in the backlog to extend an inherited Python library with support for a migration. Instead decided to use shell commands in a Python script to get the same results. Then extended our monitoring generators (also in Python) to use the metrics from the previous script. All so we can continuously run smoke tests against inherited services (also Python) we own/support. Above was several hours work.
I'm sure they've never heard of tail call optimization, maybe you could help inform them. 
Yeah how large are you talking? If you can load your data in memory, pandas has always worked well enough for me (multi gig data frames). you can use dask for larger than memory data (though some things like merges are buggy). 
You are trying to write elements from your list to a csv file, correct?
BTW, you can do the same thing cheaper with Plivo. [No, I'm not working for them]
The important thing to remember is that for a real fft, the output values are arranged from 0 to Fs/2, where Fs is your sampling frequency. This function essentially assumes you are taking a sample of a continuous signal every x seconds, or at y frequency. It then performs a fast Fourier transform on the data, which gives you the component of the signal at that frequency (or in that bin to be more specific). If you're trying to display it, plot the output data vs an array of the bins. To make this array, use np.arange(0, *fft size*) * *binspacing*. Let me know if you have any other questions. This material was pretty hard for me to grasp when I was first learning it, so I'd be happy to help you get it better.
It actually doesn't need the time component to calculate. The reason is because you can just scale the result by whatever factor you want. If you're trying to calculate the Fourier transform of a 1 Hz signal sampled for 10 seconds with 100 points, the result will be the same as a 1 kHz signal sampled for 0.01 seconds with 100 points. What's important is the number of points and the number of samples per period of your signal. The result's "x axis" frequency values can be determined by your spacing between time points (IIRC its something like 1/dt, but it's been a while since I've needed that exact calculation). This is really because a 1 Hz signal looks the same as a 1 kHz if you change the scale.
Hi, I've completely rewritten the script to get rid of those issues : &gt; When I attempt to add more/less then 8 rooms the program fails It now works with a random number of rooms with a random number of beds in each room &gt; When room number(# of beds) is &gt; then number of students the program fails It now works with more beds than students. If so, the program is even able to set a room without occupants if needed. &gt; If students don't pick 3 friends (which sometimes won't happen because they may only have 1 friend) the program doesn't work. It works with 1, 2 or 3 friends, but it's more efficient when everyone have more than one friend. I also added a "happiness score" to know if a solution is better than another. I'm currently testing it with random values and also trying to optimise its speed. I'll keep you informed when I'm happy with the results :)
I sort of guessed it would be a dimensionless thimg, but what relation does the output have to the input?
On Linux, you can use xvfb (X virtual framebuffer) to do this.
Couldn’t recommend that course more, absolutely love that instructor! I learned all of my early knowledge of Python through his courses.
The output is still the Fourier transform of the input, you are just responsible for how you plot it. It's not that it's dimensionless, it's that it's scalable. For example, in my job I regularly move data between the time domain and the frequency domain (although it involves a few extra steps around the FFTs). Our data is in the nanosecond/gigahertz range. The calculation is the same if the data has units specified in seconds/Hz or nanoseconds/GHz, the output of the transform doesn't change, but the x axis values do. If the input is in nanoseconds, then my spacing between points is 0.01ns and my output has a maximum frequency of 50 GHz. If the input is in seconds, then my spacing between points is 0.01e-9 s, and the output has a maximum frequency of 50e9 Hz. The transform has the same result, but the scale of the result is determined by the scale of my input sampling rate. 
Download Anaconda for Python 3.6. Anaconda is a package of most common scientific and data analysis libraries along with python and some other tools as well. AFAIK there aren't any major common libraries that you would miss on 3.6 . I'd recommend stayiny with 3.6 as any book should be able to be easily used with it even if it's for an older version. 
Hacking? I don't think(as per my opinion) But python is effective or say famous because of its simplicity than other languages and which makes its, other framework look easy to code! You may google your question to find a solid answer :)
I love 3blue1brown's video, because it is very similar to the approach that helped me understand FT. The approach that helped me the most was Stuarts Riffle's explanation. Unfortunately, his site is no longer online but there is an archive that looks like crap in: https://web.archive.org/web/20120418231513/http://www.altdevblogaday.com/2011/05/17/understanding-the-fourier-transform/ The key element would be the colored formula at the bottom (which is actually not the real DFT, due to the sign of pi and the mean, but it helps understand the transformation like 3blue1brown's approach). I would recommend you create a fake function of 8 samples and calculate manually its DFT. You will understand a lot of details by doing it hands on (on paper, no code yet). I really mean it. Do it. Being the lazy people that we all are, you will get some major intuition and you will find where things start to get repetitive and understand some symmetric properties. Also useful: after doing that, try to mentally guess what the spectre of these functions would look like: - A dirac - Random noise - A constant value - A pure sine Here are some pointers that may help you after you do that : - 3blue1brown's video is about the Fourier Transform (FT). This has some conceptual differences with the discrete Fourier Transform (DFT): the most important is that the FT is continuous and the DFT isn't. This is a key element when understanding any algorithm related to the FT, because in practice, we use the DFT and not the FT. - The Fast Fourier Transform comes naturally from the DFT, specially when you do it manually, because you get the feeling that there are some symmetric properties that could help divide the problem in halves. Another useful link : https://jakevdp.github.io/blog/2013/08/28/understanding-the-fft/ - On the DFT, ignore the concept of "bins", there is no such thing: frequencies have exact values, and they are sampled, like your signal is, and many people would disagree because the "bin" concepts does help on the continuous transform. But bins rhymes with histogram, and the DFT is no histogram at all. - When you do the calculations by hand, you will realize that you actually don't need to know the exact time scale of the original function. If you consider your function as f : sample number -&gt; value, instead of f: time -&gt; value, you get a representation on the frequency domain that is 1/number of samples (instead of 1/time, which would be Hz). The transformation from one to the other is a simple multiplication by a constant. - Numpy's FFT does not care about the time of the function for the reason above. However, it provides `np.fft.fftfreqs` or `np.fft.rfftfreq` to calculate the frequency values in Hz, if you need it. Again, this is just a simple transformation, and you will see that it only needs the number of points and the separation between points (which is the 1/sampling rate) - In most cases, you will be working with real functions, which have some additional properties. The spectrum is symmetric with respect to the F=0 line. So you may want to ignore the negative spectrum and anything after Fs/2, because that is also symmetric wrt to Fs/2. This is also something that comes natural from doing the calculations by hand. So, numpy also has some functions for this specific case: `np.fft.rfft` and `np.fft.rfftfreq` - Finally, one cool property of the Fourier Transform is that doing a multiplication on the time domain is equivalent to multiplication in the frequency domain. This is a key element for a lot of things, like: * FIR filters are just convolutions, so if you can imagine/guess the spectrum of your filter, you will understand what your filter does on the frequency domain. This is similar to bode plots analysis. * Polynomial multiplication: it's a convolution. So the O(n log n) algorithm that can solve it would actually be a FFT of the coefficients. Very interesting when you realize that!
Thanks! But I don't think that parsley or pyparsing libraries are similar to Duckling. 
Yeah, that's actually what I was already planning on, as I've also used it the last time around. 
I know Flask looks easy but compared to Django, Django is very effective and powerful when working on some complicated project!
Online pong
Imo so is flask, I have used both. But you can't go wrong with either frameworks. I hear pyramid and bottle are cool frameworks too but I haven't used them
Which api are you using*
Try [exercism](http://exercism.io/) - it's fun.
Thanks! Super interest in what you build or any feedback you have. Its still a very young project, and it will probably make its way into a Jupyter Lab extension at some point too.
+1 to the question about large, In general, first you learn how to work with "large amount of data", then you look if you can do it with Python. Usually there is a client server system, where the data processed on server and the client can be your Python code. 
Ha. I didn't know that. Could you elaborate?
Thanks i am using Django :)
The School of Hard Knocks
Giving the fact that I come from two other persons that come from two other persons each than come from two other persons... Shall I continue? I bet not I have hearted a lot of excuses for bad recursion implementations and python has more issues that this one (most famous GIL) so I don't expect too much on that for its part yet Apart from that, recursion has its own issues beign too much detail as the biggest one So equilibrium would be the best as always I'm waiting the moment where someone in the core team have a moment of enlightment on this too... Meanwhile, I would rather prefer to talk about the how than about the excuses if you don't mind (don't meant to be rude, just too much into the fractality of nature in itself)
https://youtu.be/nO78ECRighw By Raymond "the man" Hettinger himself.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [python/cpython/.../**8f2bcab92345dd8e51b6afd5308899292c3911e9.3rc1.rst** (3.6 → 8f2bcab)](https://github.com/python/cpython/blob/8f2bcab92345dd8e51b6afd5308899292c3911e9/Misc/NEWS.d/8f2bcab92345dd8e51b6afd5308899292c3911e9.3rc1.rst) ---- 
For example, the following code is not TC: def factorial(n): if n == 0: return 1 else return factorial(n-1)*n To make it TC, you need to rewrite it as def factorial(n, accum=1): if n == 0: return accum return factorial(n-1, accum*n) Not very obvious trick. As for the second, some functional programming people advocate that recursion is a low-level feature, and higher-order functions, like map, fold, should be used when appropriate.
Is this your course? You should disclose it if it is.
Sorry, I meant convolution in one domain, means multiplication in the other domain.
I guess 
Did you still need help with this? Your code looks ok, although it could be a lot neater and shorter. You also need to know that lines always end in a newline character: `\n`. So you need to add that to the new line as well. Assuming you already have the code to choose "x" and "rand": # read the file with open("numberlist.txt") as f: lines = f.readlines() # modify the data new_line = str(x) + '\n' lines[rand-1] = new_line # write the file back with open("numberlist.txt", "w") as f: f.writelines(lines) --- Even though some people in this thread have had a bad experience, if you have more questions like this it's better to post them on our sister subreddit /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
You can make a game like Spacewar.
Thank you so much! I'm in finance and practiing finance and have been having some issues including with morningstar but I tried Quandl and it worked!