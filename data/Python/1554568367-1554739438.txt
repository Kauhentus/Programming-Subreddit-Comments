Honestly guys if you‚Äôre going to take the time to write a comment try to be helpful
/r/dailyprogrammer but it's been far less than daily lately. 
It tells you about stuff like reassigning variables before they're used, unused imports, shadowing names, and so on.
If I have a dense algorithmic bit of code I'll comment it heavily, split as much as possible into separate functions with explanatory docstrings, then hide it away in a module and hope nobody (including me) needs to change it. The rest, I try to make self-documenting.
:-)) So I am not alone 
Nodz: https://github.com/LeGoffLoic/Nodz nodeeditor: https://github.com/paceholder/nodeeditor 
Yeah, I always try to organize things based on what it does, keep things simple to read and try not to use too much shorthand to make things a little more explicit or understand the nature of the code. Sometimes I like to practice hard to read code to be better able to read it should I encounter it; where I work, we have some bad practices that I have been trying to clean up. 
Non-affiliate link: https://www.humblebundle.com/books/coders-bookshelf-books
Have a program that allows you to add your grades and calculate your average. Also, what grades on average you need to get to get a certain average or to pass. Calculate the standard deviation in the grades and procentual change in the average over time. 
Thanks! I was literally just posting same link. 
Not sure if you'll find this useful, but as a university students I find great satisfaction in working on projects that benefit my fellow students since it's easier for me to measure the impact. You could probably draw a corollary for your school from this; I made a lost and found website, a shift scheduling app for my workplace, currently making a bus schedule retriever and course recommender etc
Could you share with me the code? :s
Thanks for letting me know. I will change that ASAP.
You could work your way through [rosettacode.org](rosettacode.org)
Thank you so much for the constructive criticism. I have made some adjustments based on what you said, you are welcomed to have a look :) I hope I got it right.
Yes. I used to do this manually in excel all the time. While you are it. Build in optimization or sensitivity testing so it will figure out how low a grade you can get on the final to pass the class. 
Nope, bots are against Tinders ToS, knock it off. &gt;Therefore, you agree not to: use the Service or any content contained in the Service for any commercial purposes without our written consent. copy, modify, transmit, create any derivative works from, make use of, or reproduce in any way any copyrighted material, images, trademarks, trade names, service marks, or other intellectual property, content or proprietary information accessible through the Service without Tinder‚Äôs prior written consent. express or imply that any statements you make are endorsed by Tinder. **use any robot, bot, spider, crawler, scraper, site search/retrieval application, proxy or other manual or automatic device, method or process to access, retrieve, index, ‚Äúdata mine,‚Äù or in any way reproduce or circumvent the navigational structure or presentation of the Service or its contents.**
Package management 
Most schools have student portals. Text the daily schedule, daily homework and possibly snowdays 
Multiple output windows maybe, I feel like you‚Äôre limited to one std:out per window
A terminal is not meant to work like that. Remember a terminal is designed to be a digital typewriter; even using /r to overwrite characters is beyond what it's meant to do. You need to think about a GUI. That said there are libraries like `curses` that can do what you want. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
A framework for collecting sensor data called pySense
You could clear and rewrite the whole console output. os.system('cls') will clear on windows, replace cls with clear for linux/mac I think. This way you could control the entire output whenever you'd like. 
Or want to moderate other platforms in a similar way.
Thanks for your response. I honestly thought I was in /r/learnPython. Sorry about that. `Curses` looks perfect. 
Direct link to the bundle so you don't have to open Twitter to click t.co link that redirects to a bit.ly link that redirects to the bundle. https://www.humblebundle.com/books/coders-bookshelf-books 
Cool! There's always something new to learn.
Just note that curses is not cross platform, not available on windows. Also, you must already be in a curses session, you won't be able to modify console output before your program starts
Just google python format But to break down, using /u/drbobb's shorter version s = "{:-\^11}|".format(v) But basically {} marks a place where the variable's value will get put, in this case v. You can have multiple variables, like "{} {}".format(a,b) "-" is the fill character "\^" tells format to center the value in the field. "11" is the width of the field The "|" is just a literal character that you wanted on the end. 
Can you share code please?
Out of curiosity... why? Using keyword arguments, in my experience, has just made code cleaner (albeit possibly more verbose). 
Putting aside the above-mentioned fact, I am sort of concerned about why someone would want to create a bot like this in the first place 
In general, if a company says not to do it with their services, I find it to be a good enough reason to listen. Especially if the action could disrupt the usage of said service. I fail to see how a Tinder bot *doesn't* disrupt other users.
Have you read the "Motivation" section of the PEP?
bro, i checked the github repo. How do I see the sequence of changes u made? I want to replicate the entire developer process in this project. can u help? &amp;#x200B; so I want to rollback the project to the initial VERY FIRST commit. &gt;***git reset --hard firstSHA1commit*** &amp;#x200B; please help me! i wanna learn how to build such amazing browsers myself step-by-step.
Make a web crawler to scrap the data of bully‚Äôs family members. Then make a function to send a text to everyone in the school said information. Laugh in the back and don‚Äôt get expelled!
That's really really exciting! I'll be there at least 3 days. See you at PyCon! üòÅ
Kenya
This is a great idea. My kids' school has a portal that gives grades but doesn't tell you what changed in the last update. I made a script that mails out daily diffs to each child so they know what's new.
What is more helpful than trying to help someone help himself? 
&gt; Having type information in a variable name What an awful example. Yes, calling it `fruit_list` when it is a tuple is a bad idea. But hiding what it is isn't the answer--just name it right. 
I glanced through it, and since I don‚Äôt have to maintain a lot of code that is used widely outside my company, I might not be seeing all the problems that come with maintaining that type of library. 
...avoiding a pulping from a m8, going to pulp a m8...
Thanks for this!
Not sure how this library works, but you might not be waiting long enough for the gui to render. I'd bet the tinder gui is heavily js-oriented, so would load independently of the page.
Have you ever renamed a parameter of an existing function, either because the original name wasn't clear, or to reflect new capabilities that you were adding to the function? You'd have to track down every caller you control and make sure that it isn't passing the old name as a keyword, and hope that other people who maintain calling code notice the change and do the same before they release a broken build. &amp;#x200B; If you mark usually-positional parameters as positional-only, you know what callers are doing and you can rename away.
This notation has been extensively used in the docs for built in functions already, so it's finally time to let ordinary functions harness the power of positional-only parameters!
Thank you! I picked up the whole lot! 
Never. I write for myself, no one else ever has to try to understand it. I hack it together until it works and then don't mess with it. 
your account is quite spammy
I'm not the author
That‚Äôs what I normally do
Could you use that to figure out when the post hit the front page?
/r/dataisbeautiful
Please share the code!
What site?
You were using a link that paid you money per click bro, don't try to sugar coat it. 
The $20 book is worth owning if you do any kind of lower level linux programming. It's an amazing reference.
r/learnpython might be the subreddit you‚Äôve been looking for.
This looks great! I have a question about a possible use-case: ``` def formatter(foo, /, **kwargs): return foo.format(**kwargs) formatter("{foo} + {bar} = {baz}", foo=1, bar=2, baz=3) ``` Currently, this code (without the `/`) raises an exception: ``` TypeError: formatter() got multiple values for argument 'foo' ``` Does this PEP would fix that? 
Ok thank you will try there too!
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
&gt; 6. Class containing only fields and crude methods I would disagree with using `namedtuples` in case of a `Person` class (for example) because exposing it as a tuple-interface makes little sense. What is `person[0]`? What are the unpacked values in `a, b, c = person`? Using the `Person` as a tuple would break code relying on this propriety as soon as the internal implementation changes (like order is modified, or a new field is added). `dataclasses` are perfectly fine, though.
There are many PEPs where my first reaction is "what the fuck were they thinking?". Then I read the PEP, and I realize the core devs were thinking quite a bit.
A good IDE will do this refactor automatically for you. I concede that it's more useful for packages to avoid breaking changes in your API.
I'm right behind you, behind you bcs I'm currently learning Django and don't want to get into something else yet.... Want to have a good grasp on it 1st 
Interesting case. I imagine that it should fix that case since the positional only foo would not be accessible to the user
1. /r/learnpython 2. What have you tried? 3. What OS are you on?
1. Already tried, got to wait 8 mins 2. WIM and psutil 3. Win10
Don't know if you tried this before: https://github.com/urosjevremovic/CPU_temperature_checker
Post your code.
So you're basically limiting usability and code cleanliness just for maintainability? Not sure that's a good trade off. Also, this allows for arguments to be renamed, but there's still hundreds of other things in a public API that still can't be renamed. That's why when you make a public API, you need to make sure the names are all well thought out.
Yeah, and userscripts are awesome too
&gt; You'd have to track down every caller you control and make sure that it &gt;isn't passing the old name as a keyword, So one click in an IDE? 
I agree with u/captainkotpi. Instead of the while loop try something like: for i in range(x, y, 2): print(i)
The python dict from python 3.6 remembers the order of insertion.
OP should burn in hell for that type of link. 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Is this for digital copies or the actual books?
Smoothing sensor data (or really any time series data emitted/ingested at higher frequency than the natural change rate of whatever it is measuring) is where I find myself using it most often.
First, /r/learnpython Second, git checkout $commit
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [Why study programming when you can just play an RPG?](https://np.reddit.com/r/learnpython/comments/aw0au0/why_study_programming_when_you_can_just_play_an/) \#2: [Al Sweigart, author of the legendary 'Automate The Boring Stuff' book (and many others) now streams beginner-friendly live coding on twitch!](https://np.reddit.com/r/learnpython/comments/ao3zq2/al_sweigart_author_of_the_legendary_automate_the/) \#3: [Just spent 2 hours to automate joining csv files saving hundreds of hours a year](https://np.reddit.com/r/learnpython/comments/a085dx/just_spent_2_hours_to_automate_joining_csv_files/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/afd0dd/blacklist/)
That's awesome, thanks!
Thank you!
&gt;So you're basically limiting usability and code cleanliness just for maintainability? Not sure that's a good trade off. üôÑ
I don't know of any IDE that can scan every line of code on the planet including private third party code.
Not sure if troll orrr..
I like it, pretty neat. Might be cool to read comments in order by number of upvotes or maybe to categorize the comments?
What's the difference in writing \`get\_name()\` vs the \`@property\` decorator? It looks like you're writing a function either way to me. With get\_name() you at least have the flexibility in a future design to use parameters to vary the output instead of modifying internal state if the case arises.
"In an extremely simple and well-behaved environment this change is useless. Though it might be useful in anything arbitrarily complicated." Cool.
Digital only
This probably seems a little what-the-fuck-y all in its own, but I‚Äôm very glad to have this in Python given that you don‚Äôt have truly private methods on classes. Name obfuscation from single or double underscore is mostly good enough, but people will use those even though you‚Äôve essentially told them not to. Being able to enforce the *way* a method is called is incredibly valuable here in a way that really makes no sense at all for statically typed languages. Huge +1 from me!
Sorry about getting back to this late. I am taking a foundations of python programming course and i guess they meant calling up a function. All figured. Thanks for the help guys
Generally it's impatience with how infrequently girls right swipe on guys. The rapid-fire approach is a way of quickly finding what girls right-swiped you. It's attempting to overcome a UI fuckup on Tinder's part where the girl that likes you is buried underneath a bunch of girls that don't. &amp;#x200B; However, I will agree that this behavior is still bad for the online dating environment. When multiple people start mindlessly right-swiping everyone, it becomes more difficult to find the ones that are genuinely interested instead of the ones that just ghost you the moment you say hi. It just contributes to people not taking it seriously and undermines its purpose.
...someone who knows how to search and replace across files and understands the cost of renaming something. I come from Delphi, the Worst Language On Earth (tm), and seeing Python users embrace the idea of forgoing named parameters makes me cry. Named parameters are a major strength of the language and one of Python's features that makes beautiful APIs possible. This is the consequence of not making Raymond Hettinger the new BDFL. He's talked about this at PyCon. He gets it. https://gist.github.com/0x4D31/f0b633548d8e0cfb66ee3bea6a0deff9#improving-clarity https://twitter.com/raymondh/status/335536929561006082 
Thanks for the response. That actually makes a lot of sense. I was concerned there was something more sinister behind it but I couldn't quite put my finger on why I felt that way. This clears that up. Much appreciated! 
I think I use the best sort now, but have already thought of changing to top
Lol.
Are these the 'hallucinated' images or the training set then the new images after? How many images were used to train it? &amp;#x200B; Just a guy with questions, thanks!
Wait this supports userscripts? 
I don't understand. On one hand, you claim to have a good understanding of refactoring. On the other hand, you claim it can be done with a regex.
Please indent code by four spaces for proper formatting, as indicated in the sidebar.
Please indent code by four spaces for proper formatting, as indicated in the sidebar.
What sort of issues are you seeing that are python3 specific?
I've used the markdown editor, I suspect it doesn't render properly in old reddit.
Using the markdown editor is good. But you used non standard markdown.
I'm not sure that is the right approach. Python 2 has been around for a while and even though the support is officially stopping next year, a huge amount of code in Python 2 still exists and it won't go away anytime soon. So you can expect to encounter code written in Python 2 quite frequently. A better approach will be to learn the differences between 2 and 3 and in particular which features in 3 are not supported in 2 and vice versa. This will allow you to convert any python 2 code you see into python 3 equivalent. For most code it is not that hard.
&gt; just for maintainability Umm... There is no such thing as "just" for maintainability. Maintainability is easily the single most important aspect of code. If the code isn't maintainable, it is nigh useless.
Oh God Delphi is horrible, please let's never mention it in this reddit again
Flagged as spam for humble partner links.
The nth level of hell is reserved for people like OP.
At a high level, I agree, but what you're trading here for what you're gaining most definitely isn't worth it. I would hardly count being able to rename a variable in a public API as maintainability. On the other hand, users being able to use `some_method(strange_argument=True, other_argument=0)` instead of `some_method(True, 0)` is far more important for maintainability.
My IDE just lets me refactor and rename it everywhere 
Yes. I'm not sure about a "pre-configured" website, but there is plenty of example code on github. &amp;#x200B;
Most Python2 functions have analogs with Python3 such that you can modify the solution to your needs. If the Python2 solution is completely incompatible, check the date of the answers more often (and add the current year to your google searches). Somewhat relevant - I made a [r/Python post](https://www.reddit.com/r/Python/comments/9la01i/redirect_to_python_docs_for_your_python_version/) detailing how to always get python3 docs.
Can I use this to run my Jupyter Notebooks?
Not a Vim fan and I like Chrome, but still, this is one of the few new browser projects that actually looks interesting. Python and Qt seems like the ideal language for a browser. &amp;#x200B; Modern browsers are fantastic, all except for being some of the least extensible pieces of consumer software out there, only supporting "extensions", that get more restricted by the minute, and it really makes the web feel less open when Mozilla and Google are the only ones who can touch the browser itself. Nice going!
Been using Vim for 12 years and the little graphic on the page here taught me why "y" is used for copy for the first time.
Here's the formatted code (use 4 spaces): def name(p1, p2, /): pass name(1, 2) # Fine name(1, p2=2) # Not allowed and: def name2(p1, p2, /, p_or_kw): pass name2(1, 2, 3) # Fine name2(1, 2, p_or_kw=3) # Fine name2(1, p2=2, p_or_kw=3) # Not allowed
Stands for ‚Äúyank‚Äù my guy 
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Why not? It's a browser right? Just go to localhost:8000 or whatever port it runs on and it should be the same
Yep I‚Äôll try it. 
&gt;everywhere Including foreign code bases consuming your python library?
I mean, Sometimes, maybe? I don't really see the value in sum(x=5,y=7) over sum(5,7) when the former locks you to the arbitrary names of whatever those variables happen to be called, when the names for a function like that are *truly* arbitrary. I would expect a `sum` function to only expose positional parameters and never allow the changing of those arbitrary paramater names to be a breaking change.
The triple back ticks work with the new Reddit frontend. 
&gt; You really think that you can just go around changing API and library &gt;surfaces and fix it with find replace? I don't think you should go around changing parameter names without good reason in the first place. I don't see how not having any name at all is somehow a better situation than having a name you no longer care for. &gt;Even if we do constrain ourselves to working with a single codebase that &gt;is not shared I can still come up with examples that would require an &gt;extremely strong type checker and language semantic analysis to &gt;refactor. OK, then we can pit it against JetBrains' refactoring engine and see who wins. 
&gt; qutebrowser uses Qt and QtWebEngine by default (and supports QtWebKit optionally). QtWebEngine is based on Google‚Äôs Chromium. So only the outer parts of the browser are written in Python. Other than that it basically uses the ~millions of lines C++ from Chromium (or optionally WebKit).
Is that true when the editor is set to markdown input mode? 
Positional-only parameters seem like a pretty good thing for auto generated C bindings, where parameter names just don't matter usually.
I am certainly a novice and most of my projects are having to do with physical computing (never manipulated pdfs in python), but I wanted to throw this out there. I have used Django before in one or two projects, and although it works well, I prefer Flask's simplicity. Before you settle on Django, write a quick Flask server and see how easy it is to port data back and forth between the website and your Python programs. Then it's also easy to adapt said program stack into Eel and have a standalone app. I'm not much help to your question but I wanted to throw out my opinion and see if there was a quicker/easier way to write your project. Good luck to you!
If you look at the comment using the new frontend, it's displayed correctly.
Including other people's code?
I'm with you. I greatly prefer keyword arguments and I look forward to the day I can use keyword-only arguments (still need to be 2.7 compatible). I think they reduce error by a *ton* and since I am often interfacing with my functions via Jupyter, auto-fill of the keywords is more clear.
 def foo(arg): print(arg) s = "a" s += rpc_that_returns_r() s += "g" if logic() else "x" kwargs = {s: "hello world"} foo(**kwargs) This is obviously contrived for clarity but there are a lot of other situations where determining which arguments are being used and changing them is either extremely complicated or downright impossible.
That might be true, but not everyone uses the new frontend. 
Yes, I don't either. But this is why it's coming up more often now.
PyCharm Professional + macOS (git is included) on older Macbook Pro. When I deploy on Linux I slowly migrate from bash to fish. That's all.
I think the big one is anyone using RES, as that builds on the old interface, but for me the mobile app (Slide) I'm using doesn't do it either. 
Cool. I‚Äôll probably never use this, but if I can remember to, then I will.
I would look for something using the turtle. [https://www.101computing.net/python-turtle-spirograph/](https://www.101computing.net/python-turtle-spirograph/) [https://www.oreilly.com/library/view/teach-your-kids/9781491951071/](https://www.oreilly.com/library/view/teach-your-kids/9781491951071/) &amp;#x200B; There is likely some bot telemetry, or something, that you could visualize with matplotlib. [https://matplotlib.org/tutorials/introductory/sample\_plots.html](https://matplotlib.org/tutorials/introductory/sample_plots.html) &amp;#x200B;
/r/learnpython
/r/learnpython
Use -python 2 or "python 3" When doing a google search?
What I'd love is if he added some sort of front-end python support for building out the dom. Imagine that, being able to use pure python for webapp development. At first only Qutebrowser would be able to show those pages, but maybe if it gets popular enough chrome and edge and firefox would support it... I want python in the browser so bad.
Thanks for the reply. I honestly only said django because it's what came up on most Google searches and also the YouTube course I followed. I'll check that out.
what did you use to copy in vim if you weren't using "y" ? 
Does that mean Firefox mobile, not logged in, doesn't use the new interface? Or apps like Relay? 
Hey, thanks for the reply. Are you telling me to lurk more with this comment? I feel like I asked a valid question about starting a project.
Pycharm 
You might be interested in Transcrypt. It compiles Python to Javascript. I've only used it for small examples, but so far it's worked well. 
Why "y", though? I think that's what he means.
&gt; I want python in the browser so bad. Me too. Replacing client side Javascript with python would be great! Somebody still remembers [Grail browser](https://en.wikipedia.org/wiki/Grail_(web_browser))? It was an interesting experiment.
I'm telling you that a subreddit exists for the precise purpose of learning and improving at python, and that the rules as specified on the sidebar of *this* subreddit disallows posts which are better suited to *that* subreddit.
I can see where you're coming from in terms of chrome, considering even if you use chromium I'm pretty sure you're still forced into using binary blobs in compile. But firefox shouldn't have any real restrictions on forking, and it frequently gets forked when people don't like particular aspects. The Mozilla license isn't as permissive as GPL, but it's okay.
I didn't even know `b=2` was acceptable for arguments without defaults.
`emacs` end of list
Thank you, will take a look at that
Means "yank" even if it didn't mean anything it would be crazy that he could go 12 years without yanking lol
you might want to check out brython: https://brython.info/
I think doing most of those things come with big caveats, but certainly wouldn't call them anti-patterns.
The only way to get better is to practice. Write code to solve problems, fail, and try again.
No I used it plenty, just didn't know it stood for "yank", always thought it was weird it was on y.
My IDE easily let's me stay with a certain version of any imported packages until I'm ready to upgrade and test. I'm still not seeing why this was a needed change.
If you're writing code like this, you're Larry Wall wearing a Guido mask. I remember at a PyCon where Guido's keynote was on "The Myths Of Python" and one topic was about the GIL. He said something to the effect of "People say but David Beasley showed this example where... yes, but you have to be David Beasley to find it!" :-) If you're programmatically constructing keyword names I don't see how you're going to be happy with simple positional arguments instead. If you could use positional arguments, you didn't need to construct keywords. I'll give you credit though... this is one of those times where I see a piece of Python code and say, "That can't possibly run... let me pull up a console... Holy Significant Whitespace, it runs!" Usually those examples are things of beauty, but this example is Lovecraftian madness. :-)
Welp, Pyglet works much better. It's more complicated, but in the end I figured it out. Now it's time to figure out why the delay between the colors and audio is so large...
Not a big fan of this one, but I guess it‚Äôs one of those ‚Äúno one forces you to use it‚Äù
Is it worth it? 
Duckduckgo default search engine. That's what I like to see in 2019.
Wondering this myself. Commenting to see what people say. 
A library author might not consider argument names as being part of their libraries API. With this change their is a effective way to communicate that standpoint.
Will do. Thanks for the advice 
I am not a novice. I use pyramid and other things. You should ask your question on /r/learnpython since that is where people will actually answer your questions. Post here once you have everything figured out and have turned it into something useful I can install via pip if I want. 
* I use ipython or bpython - no preference really but it's just a little nicer for than the built-in repl. * VS Code with Python plugins - really the first editor that worked out of the box. * Containers everywhere * pytest, pylint, mypy for testing, linting, and static type analysis. Auto-complete is never going to work as well in Python than any statically typed language. I found that putting type hints in my code, however, helps the editor figure things out, plus it's good documentation. The hidden bugs you talked about are helped with pylint and mypy. However, you're going to have to write tests to catch most of the run-time bugs. You can check out hypothesis, which automates some of the testing.
It's not so much the binary blobs that bother me, it's the fact that the browsers themselves just aren't designed for hackability, and even if you did put the time into learning the codebase well enough to make a change, you couldn't really share it unless you can convince people to use your fork. In the old days they used to have real plugins, and I suspect if they still did, people would be doing some really cool stuff with them(Although they would also be installing 49 Yahoo Ultra Used Car Search Helper Buddy Toolbars...)
Is there any reason why one-argument builtins are positional only?
A necessary clarification
Not the biggest fan of this one because it allows library authors to overly dictate how their functions can be used, as in, mark an argument as positional merely because they want to. But cool all the same.
I have done this exact scenario just yesterday. And django was not sufficient. I lost billions of dollars. Don't use django. /S /R/learnpython for real people that might want to answer your question. 
I doubt it? The "high pay" level Python book is free to read online at the author's website. Possible to be the case for some other books in the collection as well. And many other books have a lot of PDF copies available at educational institutions' domains. Not sure if that's *legal*, given I don't know the rights the authors are pushing for (however the fact that they aren't issuing takedown requests is odd).
/r/learnpython and search engines. 
Because the argument name is meaningless. 
You can but I don't think it's recommended and has caused me some confusion in the past. Two different versions can be installed, one from pip and one from conda. It's a user error but one that wouldn't happen from using only conda or pip 
This article was dumb. Very low quality content. 
it's basically also because devs don't want to abstract the semanticness of the arglist in the signature. Because falling back to *args and **kwargs parsing works just fine too.
Wow, so useful. Can't wait to convert all my code to this. 
it is a side effect of PEP 3102; only parameters after the `*` are considered keyword-only now, whereas before, everything up to ** was positional-or-keyword (which is why you can always call a positionally-signatured function using `func(**kw)` given that the positional parameters are present as keys in `kw`. In the PEP 570 notes on the corner case of 3102 is that 570 now supports this: def foo(name, **kwds): return 'name' in kwds which currently will raise an exception if `kwds` contains a key named `name`. 
Right, but just because it is meaningless doesn't mean you shouldn't be able to. There should be a *good reason* for a restriction. The name being meaningless isn't a good reason. It being confusing or out of place or a hack in the first place is a good reason. But none of those apply.
That's the markdown that the editor pushes, unfortunately. Not the guys fault. Blame reddit.
Because doing something like `len(obj=myobj)` over `len(myobj)` is unnecessarily verbose, provides another way of writing the same thing, and doesn‚Äôt look nice. The semantics of those builtins are fixed and obvious.
/r/learnpython
&gt;something like the print function "something like a print function" is `print` function.
Yeah, which is why I wouldn't have expected it to work, and those names not to be exposed. So now, really all functions should be defined with `/`, since calling those as keyword arguments will be strongly discouraged anyway, but only functions that take arbitrary key-value pairs as keyword arguments *need* it to avoid throwing an error on collisions.
But you're not everyone. 
But why should I be forced in this way? Why do the CPython authors force a non-keyword argument? It's not like they will be affected by my code. I am affected by theirs.
/r/learnpython is the better place, as this subreddit is for news, not questions. The /r/learnpython subreddit has [learning resources in their wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F) that may be useful.
I don't mean to blame, but should I not recommend the way that works for everyone? 
The only thing that convinced me was "when a function accepts any keyword argument but also can accept a positional one" and then only in the case of dict.update().
No, it's just partially unreasonable to expect that? Many people come to reddit not knowing markdown at all. Even those who do, expect the site's editor to work on the site. The fact that it doesn't and fucks over old-reddit users is reddit's fault.
I found this argument most compelling. Position-only parameters already exist in cpython builtins like `range` and `min`. Making their support at the language level would make their existence less confusing and documented. &gt; Users may be surprised when first encountering positional-only notation. This is expected given that it has only recently been documented [14] and it is not possible to use in Python code. For these reasons, this notation is currently an outlier that appears only in CPython APIs developed in C. Documenting the notation and making it possible to use it in Python code would eliminate this disconnect.
Did you read the motivation section of the PEP? One example advantage of positional only is that they can rename the argument later if desired without risking code breakage. 
* vim * git I came to python from an assembler and C background.
A web scraper with blacklist and whitelist, run on regular expressions, a project for AP computer science principals.
I read the motivation yet still believe it insane for a built in function like `len`. There is no *need* to rename it.
Relevant: [https://insights.stackoverflow.com/survey/2018#development-environments-and-tools](https://insights.stackoverflow.com/survey/2018#development-environments-and-tools) &amp;#x200B; Did not realize just how popular VS &amp; VS Code really where. I'm trying out the latter now.
I saw a video like this, cant it calculate pi?
For my job, I use an IDE called Wing. It's not the most polished, but has the huge advantage of having been written in python... So it's very extensible / hackable. But only with a professional license, because otherwise you can't get the source code. I will say the devs are very responsive and good natured. 
But what benefit could people possibly gain from calling `len` with a kwarg?
What benefit could people gain from being forced not to? You can't gain from a restriction. You can always (theoretically) gain from a permission. In this case, who the fuck knows, but I'm sure at least one person has.
Pycharm Intellij (for Java and no python stuff) Cygwin/MobaXterm for bash in windows and native ssh without a putty client. Vim on remote machines for config edits Tomcat for Java deployment Python Repl for calculator SVN for version control for enterprise stuff Github version control for personal stuff 
You can absolutely gain from a restriction. More code consistency, which includes making things like find-and-replace more reliable, smaller public interface (cant break things by renaming an arg). The benefits of the restriction are small, but so are the benefits of not having the restriction.
Spyder for python It just works
It's just lovely. üòç
I'm a huge fan of this. I love using keyword arguments and making them mandatory. This will actually allow me to do that while also enforcing an order on the call-site. I'm glad the Python authors have thought about this use-case since it has bothered me for years that I couldn't enforce this! 
Python encourages clean and simple looking code. If `len(obj=myobj)` were permitted then there‚Äôd be two ways of writing the same thing with one way clearly preferred over the other. By enforcing a positional-only argument here, consistency is enforced. If you value consistency then you should see how this restriction is indeed desirable. 
You can only benefit from a restriction if you are the one person you are applying it to. If anything code consistency and clarity is worsened. It is far clearer for a person to think a=b in argument passing than to automatically guess the arguments from the function they have in their personal, poor memory. Applying a restriction onto others cannot *help* them. The single argument here is "if the author decides to change the name". There's 0 reason to change the name. It doesn't make sense. This isn't /r/programmerhumor where variable naming is a difficult game. Pick a name and stick to it. In the worse case change the name and people should be expected to read release notes. It is not the job of a language to supplement poor development practices.
Stands for "yoink" my guy
Python's very philosophy is "explicit is better than implicit". To make the argument based on one arbitrary piece of philosophy and ignore the many other contradictions is ridiculous. Consistency is maintained, in a case where it should never need be not maintained. There is 0 reason to change the argument name, and developers should be reading release notes anyway. This only helps consistency in personal code, where this PEP is perfectly good and valid and I'd use it myself. In code to be reused, it causes more problems than it solves, especially one of expectation and practice.
Grep, strings and a cross reference generator. 
I'll always uphold what Serhiy upholds for IMO he is the most talented and enthusiastic one in Python community/Python core dev: https://twitter.com/SerhiyStorchaka/status/1103542487992406016?s=19
I'd have to be in a really unfortunate situation to modify some undocumented piece of OSS. I don't find documentation to be that rare in projects worth keeping around. I'd start by finding a replacement. If I was getting paid to do it, or we're talking about some internal corporate code? PyCharm. Go to implementation, find usages, back and forth. Moments like this are what justify the price tag. If the code is such a clusterfuck that you can't work from there, you need to put the code in the trash.
&gt; You can only benefit from a restriction if you are the one person you are applying it to. Not even remotely true, you benefit from a restriction if it is applied to the code of any codebase you ever participate in or read through. &gt; If anything code consistency and clarity is worsened. It is far clearer for a person to think a=b in argument passing than to automatically guess the arguments from the function they have in their personal, poor memory. Wat, are you seriously saying `len(arg=[1, 2, 3])` or `min(x=1, y=2)` is more clear and consistent than `len([1, 2, 3])` and `min(1, 2)`. &gt; Applying a restriction onto others cannot help them. The single argument here is "if the author decides to change the name". It absolutely can. For example `1 + "foo"` throwing a type error (i.e being restricted against adding numbers and strings) is a quite well liked decision of Python/Haskell and various other languages. &gt; There's 0 reason to change the name. It doesn't make sense Are you seriously arguing that the names all these functions (from the builtin ones to all the third party libs out there) have now are optimal and that there is zero value to be gained from renaming them, even if renaming is completely free and non-breaking due to a proposal like this? That's an absurd argument. &gt; In the worse case change the name and people should be expected to read release notes. And in those cases you wouldn't have to mention anything in the release notes with this PEP. I don't actually use Python anymore so i'm not invested enough in this argument to go any further. But the real people you should be arguing with are the people that created and accepted the PEP, they are the ones with the power and they seem to agree with me.
Your statement could be turned right around. Not everyone wants this change.
&gt; On the other hand, users being able to use some_method(strange_argument=True, other_argument=0) instead of some_method(True, 0) is far more important for maintainability. But you can still do that. The PEP isn't replacing keyword arguments with positional-only arguments. It's adding the ability to have positional-only arguments. The real downside is that Python can't prevent you from writing bad code by using positional only arguments when you really shouldn't. I mean, that's reasonable to not add a feature, but the increased maintainability. Here's an example: Almost every non-trivial project I've worked on, I've had to create a function where the argument names have no semantic meaning. This is especially true for those of us who work in data and we are combining two data sets. def merge_datasets(dataset1, dataset2): pass By making dataset1 and dataset2 positional only: * I can freely change the the argument names without worrying about making a breaking change for all existing callers. * It adds clarity - the function signature hints that this dataset1 and dataset2 has no semantic meaning; in fact, most of the time, it's the function is commutative. * If I wanted to add functionality that merges more than 2 datasets to this function, I'm SOL without positional-only arguments. I would either have to create a new function or my function signature would have to look like this: `def merge_datasets(dataset1, dataset2, *more)`.
Yeah, a lot of people need to cool their jets. They're not abandoning keyword arguments. They're adding positional-only arguments. There are good arguments for maintainability and different use cases for them. The downside is that people use it poorly, but that's curtailed by the fact that positional only arguments are not the default behavior. Read the motivation and rationale people.
it shows that but doing print(data) only shows the response code, doing data.text gives you the HTML of the page.
I will help if you have any questions, that was almost like my first big project.
This basically has chromes guts, the UI is in Python. Almost anything you can run in chrome you can with it
Ok sure. Using a single personal anecdote isnt a reason to do a thing. 
Again, you are doing the exact same. Please use actual reasons to support your view point. Anything less adds nothing to the conversation.
Yup python userscripts and greasemonkey too! There are also per domain setting so you can for example change how hinting works on Reddit to hint only votes, links, and replies. So many options!
I don't think git reset is a good option here for learning.
Not only python, you can use any language that read environment variables, like bash and c.
Oh, so it's just an fstring. 
Visual studio 2019 for almost everything. Vs code for yml files. Basically that‚Äôs it
VS code with built-in terminal for all my Python needs. Cobalt2 theme. It‚Äôs the perfect setup and nothing anyone can say will change my mind.
If you have many parameters to a function, you should really consider a builder or factory pattern.
Please keep builders and factories in Java and away from my Python.
Pycharm and a bash shell "always on top" on the right hand side :)
vim
I use a combo of Kate and Qt Creator.
I like it! Also, the added feature of resizing in the command line makes it useful. I would suggest, to expand your skills, use a package like Eel or electron to turn it into an app. Plus for the resizing code in an argument that will resize to a requested final size. Let's say I want to make a 600x600 final image off a 1920 wallpaper. Also maybe have different a portable formats like pdf... Just ideas...
The Motivation section is super interesting.
Poetry, black, python-language-server Tried some vim, trying some emacs, but goodness PyCharm professional just works.
Any packages, config tricks, goodies?
because sometimes using keyword arguments when you call a python function breaks it. I can't remember which matplotlib functions they are though. I think it's the ones that put brackets around the parameter names in the documentation.
This is why I created a separate subreddit called r/DoPython. I am not posting here anymore.
&gt; Not even remotely true, you benefit from a restriction if it is applied to the code of any codebase you ever participate in or read through. Only the leaders of such groups benefit from that restriction. And they have the right, as the leaders, to make that decision. &gt; Wat, are you seriously saying `len(arg=[1, 2, 3])` or `min(x=1, y=2)` is more clear and consistent than `len([1, 2, 3])` and `min(1, 2)`. No. An element of a superset cannot be used to disprove an idea about a set. Those are obviously as clear an consistent. However `min(Abstract(a,b), Abstract(i,o))` is less clear than explicitly stating these by argument name. Passing by argument name makes it clear how whatever Abstract does it outputs something that can be represented as an integer or has some integer meaning. &gt; It absolutely can. For example `1 + "foo"` throwing a type error (i.e being restricted against adding numbers and strings) is a quite well liked decision of Python/Haskell and various other languages. Properties of a language that exist from the first place are not restrictions. There's a reason why ECMA7 isn't going to be typed. &gt; Are you seriously arguing that the names all these functions (from the builtin ones to all the third party libs out there) have now are optimal and that there is zero value to be gained from renaming them, even if renaming is completely free and non-breaking due to a proposal like this? That's an absurd argument. &gt; And in those cases you wouldn't have to mention anything in the release notes with this PEP. &gt; I don't actually use Python anymore so i'm not invested enough in this argument to go any further. But the real people you should be arguing with are the people that created and accepted the PEP, they are the ones with the power and they seem to agree with me. No, I'm arguing that all said libs that also follow decent practices have optimal developer-facing variable names. Sure a shitty package may not. But a language should not fix a developers bad practices for them via a work around. I think you're misinterpreting my argument though. I like this as PEP. And want it implemented. I just think that specific given reason, and the current properties of builtins, are strange. I also think that people will abuse this new feature to overly force their will on other developers, however its not enough for me to not like the PEP.
Very similar results to what I got with Cython.
Atom &amp; miniconda with github, flake8, yapf plugins. Jupyter server on my Google VM sometimes for simple stuff like spreadsheets and plotting. 
Hm, a downvote for a truthful reporting of what I use for development. Interesting.
Wow that's super cool I have my own debug_print package in pypi but you have to pass a string it evals I looked into py.test like ast manipulation Voodoo but it was a bit much for me I didn't think of using inspect, didn't know you could fetch source code from it
Is this new? I have never come across this. I am the silly sausage 
either be strongly typed or not. this straddling the fence shit is crazy. 
If you add parameters you're breaking the interface anyways (unless they have default values) anyways you don't want getters or setters to have parameters cause they're not getters or setters anymore Properties are basically getters/setters that are compatible with/look like fields. Anything you wouldn't do with properties you shouldn't do with getters/setters (stuff like networking calls, calls to hardware or external programs are a bad idea) that includes extra paremeters instead of internal state
PyCharm for my IDE but I also like using command line tools because then everyone can run them regardless of their editor choice. py.test &amp; tox for testing, flake8 and flake8-docstrings for linting, coverage for code coverage and most importantly **mypy**. Start adding type hints in your code and mypy (or PyCharm) will start catching things like the missing return statement as well as making your code more readable and maintainable. 
Looks cool. Can you share the script on Github. I think you could make some improvements to the TTS to make it sound more natural.
probably not
Sure, but that has never happened to me. One problem I had when migrating conda env from linux to win and vice versa. Conda in its ‚Äúenviroment.yml‚Äù file stores some weird things. 
I ran some tests the other and dictionary creation time actually slower and by quite a lot (I think 20x). But for performamce the important thing is that now you can use dictionaries at all in no python mode which of course allows O(1) search in your njit sped up algorithms.
[removed]
[removed]
Geany for everything
... this case is explicitly called out in the PEP. see [semantic corner case](https://www.python.org/dev/peps/pep-0570/#semantic-corner-case)
[yes](https://www.python.org/dev/peps/pep-0570/#semantic-corner-case)
Not so sure about sharing it, because the way I code is a pure mess and it has quite some weird bugs still with moviepy and windows which seem to appear randomly(invalid Handle). Also I use Photoshop for the pictures and I'm not sure how it will work out if you have another version. What would you recommend to improve the TTS voice?
vim + ipython + tmux
You find an itch that annoys you, you fix it and publish the fix for everyone else. You could go and look through bug reports on projects you may or may not use, but ultimately if you are not affected by the bug you won't care enough to fight the battle to get it fixed upstream.
Thanks for your reply. How do you find such projects?. Is the day to day tools that you fix?.
VSCode + essential plugins, virtualenv, poetry, git, bash. 
I recommend going to [GitHub explore](https://GitHub.com/explore) and going through the list of issues and finding one you can help with.
Thanks will check this.
How about you tell us why you couldn‚Äôt succeed then we give you some advice?
I highly doubt anyone will code that for you
Ok, I'll hide it in a library that you'll love and promote to your friends.
&gt; git is included why is that something you point out?
haha i feel u man
I know the difference in how the interface appears for either case, I'm just wondering if that's the only difference and if so, is it really worth while. Let me come up with another example that's not breaking an interface. If I have the following: ``` ... def get_name(self): return self._name def set_name(self, name): self._name = name # return self @property def name(self): return self._name @name.setter def name(self, name): self._name = name ... ``` What is the difference in either approach to getting/setting name other than getting one through a field-like interface or function-like interface? Honestly, if you uncomment that line in `set_name`, that seems like a better approach since you can use method chaining to set multiple properties of the object too, ala `obj.set_name(name).set_other_thing(other_thing)`.
pycharm, and im deeply invested in it, so I don't need many external tools beyond the underlying tools integrated with pycharm. for example instead of using an external git GUI, I use pycharm's interface, or instead of an external http client to experiment with a remote API, I use the one shipped with pycharm. I use the integrated console primarily when coding, but I also have guake (a drop-down, always available console) installed for meta or tertiary tasks or when im in a different workspace
While on the subject of contributing to open-source projects, can I push a version update that changes the title of this post from "you'll" to "y'all"? It's killing me.
Sorry about that. I'll merge it.
PyCharm is invaluable to me in these situations. You can jump to implementations, usages, super classes, sub classes, generate profiles and coverage reports. 
Perfect, thanks!
I assumed that this is obvious
ok i got it
&gt; Documentation seems increasingly rare these days (particularly among OSS). ‚ÄãIf documentation doesn't exist, I don't use the project. The technology itself isn't the only thing to consider when adopting something new. Also, i find documentation to be more better now than it used to &gt; I feel like there should be *some* tools to make this easier - e.g. highlighting the most frequently called functions in a codebase, Assuming it has tests, you can check the coverage. it usually tells you how many times functions and methods were executed. I guess you dont really need tests for that though &gt; I often skim through the volumes of code looking for the 'interesting bits', but when there are dozens, hundreds, or even thousands of files this can become quite daunting. Learn to use an IDE. pycharm for example provides tools to make inspection easier. it provides inheritance hierarchy overviews and object/module structure. quick documentation modals, implementation overviews without navigating to definitions, navigation to definitions, finding usages, jumping back and forth between points in code, bookmarking, and more
not the same guy, but in my experience it has always just been a library that I use for daily things. If you use it enough you find bugs or have ideas for new features.
That's the point. You don't go finding such a project, it's already one you use and annoys you
If you are in a console only situation or you just don't like big IDEs then pudb is amazing. In fact I think it's amazing anyway, it also has a glorious 80s feel to it. 
[Generic text editor with vim bindings and git integration, plus a sea of shells](https://i.kym-cdn.com/photos/images/newsfeed/001/044/247/297.png).
https://github.com/inducer/pudb/blob/master/README.rst It integrates with ipython too, it's just so cool
Got it. Probably have to find something to annoy me. Thanks.
Probably have to have a project for that. The cycle is quite vicious.
Start using packages. You‚Äôll get frustrated with some of them. Some will annoy you so much you‚Äôll go on github and raise an issue. The maintainer will say no and close it. Someone will find your issue and complain too. Now there‚Äôs dozens of you. You started this, you‚Äôre causing progress. You‚Äôre contributing to open source
uhm...what?
I've done these before never hit me that I could actually be able to fix it mainly because the codebase is huge.
Pycharm &amp; azure Devops. Building stuff in Azure so Devops is quite a natural choice. 
This might help: https://speakerdeck.com/hackerkid/what-i-learned-from-contributing-to-open-source
Jupyter Lab via Anaconda for nearly everything. Atom with plugins for a better scripting experience, by this isn't as much as notebook writing for my astrophysics data exploration.
That's one part of working a real life position. I recently started working at a company where my job is more maintaining, fixing bugs, and creating new features but all on a very large codebase. One of the biggest learning curves was how to deal with a massive codebase and not be intimidated. 
I've been working on PyMedPhys (https://github.com/pymedphys/pymedphys/) I'm aiming to create a Python Medical Physics community where we share and review code each other's code.
is this a joke?
Very easy to start: 1) Find package you like, for better experience not super popular one like TensorFlow. 2) Execute tests with coverage enabled locally. 3) Submit PR with test cases for uncovered lines. 4) Fix comments from maintainers 5) Go to step 1) &amp;#x200B; I once contributed tests for Redis client this way as result learned most of Redis commands and their quirks. 
How did you overcome it?
Thanks, this is definitely inspiring.
This, so much! I really don't care much about stuff I don't actually use - but if I'm affected by an issue in some library or tool I use, then I might rather just fix it myself instead of waiting for someone else to fix it.
Thanks will try to follow this method.
&gt; To make the argument based on one arbitrary piece of philosophy and ignore the many other contradictions is ridiculous. Where did this come from? What argument; which ‚Äúarbitrary piece of philosophy‚Äù; and which contradictions where ignored? Using the ‚Äúexplicit is better than implicit‚Äù principal to justify against positional-only parameters is cherry picking. The positional-only restriction becomes more appealing when considering some of the other philosophies: ‚Äúbeautiful is better than ugly‚Äù, ‚Äúreadability counts‚Äù, ‚Äúone and only one preferable way‚Äù. &gt; There is 0 reason to change the argument name, and developers should be reading release notes anyway. But it‚Äôs not about the possibility of a name change in future. As I‚Äôve mentioned, the restriction is likely there for consistency motives. &gt; In code to be reused, it causes more problems than it solves, especially one of expectation and practice. ‚ÄúCauses more problems than it solves‚Äù. If true then those problems must be really only very minor since not many complain about the builtins‚Äô keywords being inaccessible. 
Try OpenHatch.org
vuUVZ Hi you will have no diffence with one more subscriber, but i will have lNvuXvJC please run the video in background https://www.youtube.com/watch?v=-N7pTv8k_X8&amp;t=3s PqRXgUn^oDKv`b\Cw[lchmV please note that this comment is automated
I like using VS code, but it seems like it‚Äôs performance has worsened the last few months I‚Äôve used it. The linter (I‚Äôm forgetting which, I think it‚Äôs the default recommended at install) has issues primarily with custom modules and lesser known libraries. I assume it‚Äôs my fault using Anaconda and conda environments, but I‚Äôm not sure. Have you had any issues with your setup?
Well, mostly by doing a large amount of reading. I have found that I do more of reading code than writing. Not sure what that says about me. I also realised that my team didn't expect me to contribute from day one so that took the pressure off. 
\-"python 2"\*
I was expecting the changes would not affect the variable outside the function scope. Just like: &amp;#x200B; def addone(x): x += 1 return x x = 1 y = addone(x) print(x) // 1 print(y) // 2 &amp;#x200B;
working for google: [https://github.com/brianfrankcooper/YCSB](https://github.com/brianfrankcooper/YCSB) [https://github.com/GoogleCloudPlatform/PerfKitBenchmarker](https://github.com/GoogleCloudPlatform/PerfKitBenchmarker) &amp;#x200B; awesome project, but wrapping up at end of month!
Making a minesweeper game with pygame and trying to gain motivation.
Yes, that's how it worked for me. I was in the same position as you before but I never found any projects I was interested in. Then after a few weeks, I used this chrome extension to pass through paywalls that block articles, then it kind of malfunctioned so I modified it and pushed changes to its github repo, tho the owner haven't merged it yet.
oNErqhUOFf` Hi you will have no diffence with one more subscriber, but i will have WViG]P^h^wn_veTQmrhi_JMU[\c`xQ_GyE_ByMgOSpnMwrNmY_ please run the video in background https://www.youtube.com/watch?v=-N7pTv8k_X8&amp;t=3s ekc_GQrUc please note that this comment is automated
A combination of VS code and pycharm/IntelliJ for Python and Java, respectively. I like VS Code because it‚Äôs lightweight, but I‚Äôve had some issues (probably my fault) so I use pycharm/IntelliJ. They‚Äôre solid but setup time on a new project and load time doesn‚Äôt balance to the size of my projects so I use them less. I recently found MacVim, which provides actual dark themes on mac OS. I‚Äôd like to learn more about Vi/Vim so I can be faster in the editor as I‚Äôm fairly slow now. Git for version control. Groovy for making Java projects. Anaconda3 for Python and conda for virtual environments. 
ANc_xPTpWyOEhaZdCnvbuhV_^`W_zPMeNV\PLIOZ Hi you will have no diffence with one more subscriber, but i will have eJk please run the video in background https://www.youtube.com/watch?v=6m2UmHpzrkA&amp;t=94s yYL please note that this comment is automated
I wish I was in your position. I have to integrate a lot of older embedded systems whose entire documentation is in a thick paperback book that no one has seen in 12 years and might be on ebay for $80.
Maybe add background music, just loop it. That's what most YouTubers do.
Yo if you want some help. I could lend you a hand, I know some python and would like to get into web dev, recently been learning django and flask.
SHBBL\eoSYO`BxQOJIUROhuQjQn]sbb Hi you will have no diffence with one more subscriber, but i will have fVIyCc\Wy]gvK^lyO`sRAJJvIeMAgTMOWOz please run the video in background https://www.youtube.com/watch?v=zhEdjb18Ue8&amp;t=1s sPlXii please note that this comment is automated
That's really cool. I'll keep looking.
That's really cool. I'll keep looking.
That's really cool. I'll keep looking.
Wow that's a nice project.
Dude... https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix/issues
Ya reading code is the way to go. You learn so much. 
Will do. Thanks.
How I go about contributing: I pick a project I find interesting and start reading it's source code for 1 hour a day. When I read code consistently with no obligations other than to learn something new, I find that's when I find better ways to do things and send a PR. Trust me, authors are usually truly happy with these. Erases their technical debts. 
Thanks for this.
You're welcome
With named tuples you can address a variable like person.name or person.age. that's why it's easy to use and is immutable so generally preferable if you don't indent on changing those values.
Do you know how to use git? Find a project you like or use regularly. Go to the issues register. Fix, enhance, rotate, commit! I‚Äôve just found two projects I want to base security research off. Both need some serious TLC with one maintainer and a big backlog. I‚Äôve got it functional but as I‚Äôm using it for research I‚Äôm committed to contributing to both projects. I was told by someone years ago that if you find something you‚Äôre passionate about, you‚Äôll always succeed. This is without a doubt true in my experience. You should find a project that you like and believe in and get started. Also, I know you want to use your skills but some projects are desperate for things like documentation. Stuff like that is so appreciated by the community and is a good starting point. Finally, you should listen to ‚Äútalk python too me‚Äù and ‚Äúpython bytes‚Äù. You‚Äôll learn so much about different projects and discover things you didn‚Äôt know you needed in your life. 
I know basic Git. Yes and thanks to you for inspiring me even more. I am looking for projects to contribute already thanks a lot.
It helps if you compile it yourself. If you just use the package that comes via your package manager (apt or whatever), it will most likely be pretty solid and stable already. If you get it directly from the source (often that's github), it will have more bugs you can report or even try to fix.
Notepad and cmd /s
Yeah I've done that at times, most of the packages are in C . I'm not that Good at C.
VS Code with a ton of plugins, Git Cola, Zeal(Offline docs for when the internet is slow). 4K IPS screen(Resolution turned down to the one in between 1080p and 4k), Kubuntu, Asus Vivobook (Core i5, but with 24GB of ram and an SSD). Logitech wireless mouse(24 month battery life!!!) random eBay USB keyboard. And just in case, there's a duck on my desk :P
Yes!
4. Not using get() to return default values from a dictionary Actually, brackets are slightly faster (smth around 10 %). So it makes sense to use them, when you know for sure, that the key is there. 
Hello Op. Sorry, I don‚Äôt have much knowledge on how to get started with open source, but since you mentioned you don‚Äôt find much problems to solve, I have a solution for that. Start solving Project Euler. It‚Äôs the place where you need to brainstorm in order to solve complex and challenging problems. It will help develop your problem solving abilities and make you a better programmer! https://projecteuler.net/about All the best! :)
I've recently begun working on Gnome-Music by looking for 'newcomer' issues on their gitlab and picked one and then went on to read all the related code. It helps to improve my Python skills. It's also fun because I'm a music junkie and like to help make better music players. I really miss the likes of Winamp on Linux. &amp;#x200B;
The pixel snapping can be done using quantization already inside pillow. This way you can define a "resolution" for the output. Worth testing?
Thats really good, reading and improving code really helps.
Thanks a lot will check it out.
noob here. what is the difference between jupytr notebooks and ipython?
The problem that you'll discover eventually is that open source project admins are often inactive, and your pull requests will simply rot there. Or their Python skills suck and they don't even understand why the changes brought are necessary.
1. /r/learnpython 2. Assuming you want to package your own code as an .exe file, look into [PyInstaller](http://www.pyinstaller.org/).
You should add color with SGR codes. I added an issue on your repo which provides more context. u/charc0al was able to implement this in [his project](https://www.reddit.com/r/linux/comments/b84tik/i_wrote_a_little_script_to_convert_images_to/) relatively quickly (although his was in javascript, not python). 
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
You can post this to /r/programming as well
That's really cool. I'll keep looking.
Because OP mentioned that he uses git and he had to install it.
where did OP say they had to install git?
It can be inferred. Why do you care?
One quite easy project to start with is the [python faker](https://github.com/joke2k/faker) library. It is easy to add new contributions and improvements! Take a look!
iPython is a more classic REPL with a line-by-line input while Jupyter has cells that execute a whole block of code and return. Also, Jupyter allows you to use plots and widgets.
i found it to be a very strange thing to tout, so I was curious your reasoning. that's all I dunno if git comes with mac or not, but it's clear OP is using a mac, so i didn't understand why you wouldn't have to install git when OP would
Used the browser for a little while but it is too SLOW. I had to go back to Firefox because it was really slow and it didn't really bring any features that Firefox + some extensions can give.
Hey! Thanks so much for the response. I still feel like looking at pictures that they are the same thing. What would be better for documentation at work. I want to tell a story with my code that can be shared or looked at later. It still seems that iPython has "blocks" that execute and print out the results. [https://www.google.com/search?q=ipython&amp;rlz=1C1SQJL\_enUS766US766&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ved=0ahUKEwiU7bzy573hAhVInq0KHQkWCfYQ\_AUIDygC&amp;biw=1396&amp;bih=691#imgrc=JkgpJMXVGEjT8M:](https://www.google.com/search?q=ipython&amp;rlz=1C1SQJL_enUS766US766&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ved=0ahUKEwiU7bzy573hAhVInq0KHQkWCfYQ_AUIDygC&amp;biw=1396&amp;bih=691#imgrc=JkgpJMXVGEjT8M:) 
I'm a newbee, but I once contributed to a project. I tried to learn to make GUI apps and found a simple GUI framework. While creating the app I got an error while beeing 100% sure that I do everything correctly. I decided to go into the source code of the library and found the buggy function. The fix was accepted by the owner of the framework
That screenshot is from iPython Notebook, what I believe is predecessor of Jupyter Notebook. Today, the most recent iteration is Jupyter Lab, which I really like. If you‚Äôre just starting out, I believe it would be most sensible to get Jupyter Lab. It‚Äôs great for documenting your code as you can directly export a Notebook as PDF, HTML or LaTeX.
Thats really good, congrats.
Will do! Thanks.
Will do.
No text post allowed.
True, I doubt their skills suck its just they don't have the motivation to continue. Let's not put people down.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] [How to get started in open source programming, a mini guide with helpful tips straight from reddit.](https://www.reddit.com/r/programming/comments/baf7oq/how_to_get_started_in_open_source_programming_a/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Billions, wow! Thanks for your advice 
Notepad++
Discussing votes in the thread makes for boring reading.
ripgrep and universal-ctags
!?
The fact that /r/python readers downvoted you for posting something honest and relevant is annoying, but commenting about downvotes is off topic and makes for boring reading.
!?!?
Mostly Pycharm with some vim and VS Code mixed in, docker for deployment, we moved from hg to git, loving fish terminal, and I still use pudb when nothing else can get the job done. 
[Alternative](https://github.com/indygreg/PyOxidizer) to PyInstaller plus detailed review of various Python "compilers".
i'm particuarly fond of PEP313.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
That's really look. I'll keep cooling.
It is the reason why we implemented it :). We started with it and then added others
I use Py2exe .
$80 is cheap compared to the man hours required to reproduce the knowledge from scratch. 
To get into the feel of it, I would suggest contributing to docs first. Then, move onto the source code if there is am issue that bothers you.
consider using PRAW
You try to download for which OS?
Windows 10
You try to download from this page? Everything is working from my end. https://www.python.org/downloads/release/python-373/ 
Oh sorry for the miss understanding‚Ä¶I ment that the installer would say that when installing‚Ä¶
Sorry I am on Mac, can't help more ü§∑‚Äç‚ôÇÔ∏è
Ok thanks for your time
https://www.python.org/dev/peps/pep-0313/ Here's a quick link to it for anyone that wants to read it.
I don't mind, as long as I feel like I'm doing something. I'll search for such projects thanks.
Try scrolling up and down. Then try the same in Chrome. Qutebrowser is tremendously slow and choppy in comparison.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
thx, the idea is already done in WordPress but I want something more customized. Plus, WordPress is everything but efficient
Legit I just started a new position at a.net development company and they have a huge codebase and for the last week they just had me sitting there reading the process of how the code works. We'll see what this week brings maybe I get to code or maybe I get to read more about how it works.
I feel exactly like you. I would like to try to contribute in something open source. For now i‚Äôm creating projects for any idea that comes to my mind. If you are catching ideas, and you usually work as a programmer, try to think to what could you do to make things more automated with Python or what can be useful like a service, a script... Anyway i think that it‚Äôs the right way to self-teach a programming language, and i‚Äôm trying it for some months now. Hope you will find your inspiration. Regards
Thank you, I do write scripts to automate stuff. Hope you find your entry into open source.
All the best.
I post projects I worked on onto Github and absolutely never talk to anybody about what I'm doing, nobody ever uses the software I post, nobody ever looks at the code, but hey, it's open source.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Don't worry, you'll get to a point where you can say this was all worth it.
It was totally worth it! I wouldn't have posted the code if I didn't think it was worth something. I got what I wanted out of it.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Not open source but to answer your opening regards, I get the same way. The way I get around it is if I'm in between projects or I need to take a short break from a project, I'll do some challenges from r/dailyprogrammer. It allows me to keep my programming skills sharp without diving head first into a full on project.
It doesn't say anything about you, that's 75% of software development. Nobody works alone and you'll do a lot of reading, that's why clean coding practises are important, it makes the tedious part of the job bearable.
That's really cool. I'll keep looking. 
I think we found something in multiple Reddit comments repost
At least you're between projects I'm between roles and I can't complete projects because I lose hope or I get demotivated. Thanks for that sub I'll check it out.
Congratulations! Hope you keep killing it.
Sometimes you stare at an issue and study the code and yell at the ether "I wish someone would fix this!" And sometimes it turns out that not only are you somebody, but you're also the most experienced somebody wrt this chunk of the codebase. So you update that issue with "Ill try to make a PR for this", and then try. It'll be rough. Read CONTRIBUTING.md and learn how to setup a development environment and use the testing framework - just like a new hire would. If you can't build and run the project, you can't change it. Change it in some small way. Run the tests. Create a [WIP] PR, and link it with the issue. You'll probably get oodles of feedback for all the things you didn't consider, either from maintainers or robots or me-too-ers. Iterate. Maybe the PR gets better &amp; accepted - now you're a project contributor with your name in release notes (or at least in the immutable commit history). Maybe the PR gets ignored - you've already forked the project, maybe use and maintain your fork. Maybe the PR gets rejected - at least you learned something, and you have proven (with time investment) that the issue matters to you.
Scikit learn cross validation function. Read up bro bro
I continuously modify my development environment with any interesting tool I come across. * Zsh with Prezto and Pure prompt, zlua * tmux (with tmux-resurrect) running in Konsole * VS Code with Ayu theme and lots of plugins for JS/TS, Go, C++ * PyCharm for Python. Jedi or the new LSP version doesn‚Äôt cut it for me * System is KDENeon 5.15 or WSL
Specifically with: Cmder integration (on my Windows work machine) enabled Semantic Highlighting enabled .gitignore generator plugin Rainbow brackets plugin Remote Deployment via SFTP to our on premise compute clusters is setup for all my projects Last, but not least: Nyancat loading bar plugin
PEP what? Oh, you mean **PEP CCCXIII**.
lol
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Microsoft is doing s great job sponsoring and pushong Python forward. I hope their professional brand can recover from the many savage beatings it has taken from their various PR stunts, legal shenanigans, and terrible marketing-driven OS decisions.
[Pylint](https://code.visualstudio.com/docs/python/linting#_specific-linters) is the default linter that you're thinking of. I tried all the linters that VS Code supports before finally settling on [flake8](https://pypi.org/project/flake8/). It supports plugins like [flake8-builtins](https://pypi.org/project/flake8-builtins/).
Some people see VIM as the hipster too cool for GUI school text editor instead of the original highly configurable ferrari it is.
Thanks, will change my way at looking of bugs from now on.
/u/jdgordon makes a good point that most of the time you're best of fixing issues that you already experience a pain point with. If you want to expand your experience beyond that, I'd look over on GitHub for issues marked "good first issue" - they tend to have a lower barrier of entry, be that in programming or domain language. To facilitate, GitHub even has a [filter page on this topic](https://github.com/topics/good-first-issue?l=python). 
whats the logic flow, libraries and other things uyou used. Can you pls briefly share how can I replicate this . looks very interesting.!
Thats awesome! Let me know how it goes!
I dont see any advantage over visual studio code.
Thanks! I will certainly take you up on that :) how'd you'd turn out? 
Really cool project! 
Yes, I'm working on this, thanks for the filter link.
reddit praw module to get data from reddit google cloud tts for the speech (there is a regular gtts module which you can import and one that requires to sign up to google's cloud plattform but offers better quality) Photoshop cc 2018 with comtypes for the pictures (I created templates and replace the text with python + export) moviepy to put all of that together and export as video Youtube upload is done by hand right now but that would be one of the next steps logic flow: *get reddit *create mp3 files with tts *create pictures with comtypes/photoshop *put all of that together with moviepy there are some text editing steps inbetween so tts doesnt have to read stuff like /r/ etc.
[created new one with some of your suggestions](https://www.youtube.com/watch?v=yrPsW7XfA8Y) not sure about the volume of background music yet and I probably need a better music libary
This is perhaps the only person here who knows of things better than Python.
The unit tests often show how the code was meant to be used, and what invariants or guarantees the developer intended; I treat that like documentation. Documentation that proves it's up to date wrt the code every time you run the tests is more trustworthy.
I think it's been there since Python 2. &amp;#x200B; It's got it uses but it always bugs me out that there's some boolean value sitting on a for loop that fires if nothing in the loop evaluates to true. &amp;#x200B; I know there's applications for it.
As owner of several OSS projects and having contributed to a few more, I can tell you that honestly one of the best things you can do for a project is to help with documentation. I don‚Äôt think there‚Äôs any project out there whose docs are beyond improvement. Beyond the immediate value, trying to document (well!) helps you because if forces you to either do something in order to provide examples (for example install, or show method use) or read about usage (API docs, etc). Second, unit &amp; integration tests. Along the same lines, there‚Äôs few projects out there that are satisfied with their code coverage. For you, learning to test will not only improve your programming skills, but will naturally force you to think about higher-level programming concepts: IOC, coupling, etc. Good unit testing is a cornucopia of SOLID principles at work.
I've only ever used libraries for machine learning (keras with tensorflow backend worked nicely for me!) but if you're interested in making your own maybe check out [this medium article](https://towardsdatascience.com/lets-code-a-neural-network-in-plain-numpy-ae7e74410795) about making a neural network solely in numpy. If you're just looking for a neural network library, python has all kinds. My keras one had a few layers, trained maybe 5 minutes for a reliability in the low 80s, more training time and it builds up. If you're happy with the amount of training and the architecture in general you can usually save your network for later use. Hope this helps!
Even if nothing in the motivation section speaks to you, consider that **CURRENTLY** : &gt;&gt;&gt; pow(x=3, y=5) TypeError: pow() takes no keyword arguments AND &gt;&gt;&gt; def func(a,b,*,c): &gt;&gt;&gt; print(a,b,c) &gt;&gt;&gt; func(3,4,c=5) 3 4 5 &gt;&gt;&gt; func(3,4,5) TypeError: func() takes 2 positional arguments but 3 were given So even if aren't fond of this new functionality, you have to admit that this PEP does increase logical consistency with the existing positional-only behavior of certain cpython builtins and the current existence of keyword-only notation in the language. ---------------- i.e. in the diagram below, the * notation already exists, and some builtins already act like the / exists def f(pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2): ----------- ---------- ---------- | | | | Positional or keyword | | - Keyword only -- Positional only
Sure, I'll look into it soon
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
If you're asking how the program turned out, it turned out really good, I might be able to find it again, it was a high school project I did. It was not as much an alarm clock as it was a timer, it was on a pi 0 and its purpose was to open a chicken coop door 1 hour before sunrise and 1 hour after sunset. The motor ran off the pi's logic.
&gt;Also, the sheer number of 'hidden bugs' that crop up from dumb mistakes like forgetting to add a 'self.' or simple typos that aren't caught until the code is hit while being run (as opposed to compile time) is maddening. &amp;#x200B; Don't consider your latest commit "done" until your tests run successsfully. They should be catching typos and logic flaws; run them early and often.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
That sounds really awesome! That's also why I'm interested in pi/python, automating everyday tasks like that
Thanks! I built it because there just really aren't any phones that you can get into and totally turn it into something else. Programming an Android app is pretty cumbersome, and no good way to easily get in and control the low level hardware or add new hardware.
Its very useful, web scraping is also very fun if you get into that. I am making a web scraper for my AP CSP class, posted about it on this r/ yesterday if you want to check it out.
Python is a strongly-typed language. It's not a statically-typed language, which may be what you were thinking of.
I will for sure. I have a pi 3b+ that I'm planning on using primarily for pi-hole and web scraping I wish I had taken programming in school. Unfortunately I was too lazy and never made much of myself, a decision I'm very much regretting as I approach my 30s. Good on you for being diligent in training your mind! 
if you want to get into xml, xpath, hash-tables, svg... have a look at https://github.com/mmoosstt/XmlXdiff plenty of work to do... *testcases well undesinged xmls *performance improvements *command line interface missing *gui extended with merg funktionality i would be happy, if anyone would at least try to support
Pep 231 o.O
Very very interesting and cool idea. 
School taught me nothing about python that I did not already know, I was fluent in python long before class. Youtube videos and coursera courses is how I learned. But I did learn a lot about computers themselves in AP CSP. One teacher who I am good friends with, on my off periods, teaches me how to use the schools CNC machine, 3D printers, and laser cutters. 
I agree, I have always failed at good documentation and unit testing. I will definitely take your advice thanks.
I love that after watching a few YouTube videos you know have a full grasp about how machine learning works... 
Will definitely check this out, I'll read through this and let you know.
That's awesome stuff!! 
Never heard about your phone before this post. And I really like customing everything I can. This idea with the power of python can be really cool, also I like my smartphone, but even with root, as you saying developing app for Android is pretty tedious, even more when it's only a hobby.
It's definitely not intended to be a toy. My background is in mechatronics and it's REALLY handy to have something ready to build into a project that has a "batteries included" approach. Most dev boards fall short of this. I want something I can strap onto a piece of test equipment that already has a screen that's easy to display stuff on, buttons, has a housing that's somewhat splash proof, has buttons, etc. You can't easily do that with dev boards (because it's a lot of work to add all that stuff), and you can't do it with phones because they just don't give you the right access. That said, if you want to use it as a phone, VoIP should be perfectly fine for use as a home or backup device. There's also a stretch goal to add an LTE module, so it could be used as a cellphone replacement once that's available. Since the core goal of the phone is to be a ready-made hacking platform to let hardware hackers easily extend and modify a phone into -something else-, the cellular radio isn't included in the base platform. A lot of people who want a weird phone will want it, but the core use case is a hacking tool.
PyCharm - I want to call a long Variable Unnamed_Test_Variable? Type UVT and press enter, nicest autocomplete I‚Äôve ever used. 
Try r/LearnPython for better results
One of the few subjects that really peak my interest. Also astrology, I would drop everything to be launched into the cosmos.
I use emacs with pyflakes and pep8 for style checking and elpy for autocomplete and other QOL features. My group uses unittest for testing and git for version control. I also use a git package for emacs called magit. I know there's more streamlined IDEs, but when I'm working on Python, at the same time I'm working on autotools-based C and C++ projects, in a text-only server environment. Since I already need a lot of custom setup for my C++ environment, it's not much extra work to add packages for Python too. 
What did my models do ¬≠‚Äî predicting hypoglycemia, predicting users leaving a platform, predicting power demand, predicting hard drive failures, etc. In most cases, from "somewhat reliable" to "good enough", sometimes even "very good". Types of metrics differ from application to application anyway, so you can't compare them easily.
Lmao. This is not what I meant. I meant like the basic process as to how it works. Like how a computer gets trained and the steps needed. I have no clue how to do these yet and nor will anyone after watching a few videos
You'll cowards dont even contribute to open source
Yes! I've been getting into cosmology lately. It's so fascinating, and wonderful and awe-inspiring
I am rewriting the Munkres algorithm, or the Hungarian method, to account for the possibility of overlapping ‚Äújobs‚Äù when there are more jobs than workers. The application is to create optimization art in the form of domino portraits much like [this. ](http://www.dominoartwork.com/index.html) It‚Äôs the biggest project I‚Äôve worked on in Python. 
Using Flask and PySimpleGUI I was able to send a notification to the Server host by adding a 1 line screen to my request handler allowing it to display when somebody logs into the application. It would work the same way for the client side on response. Awesome way to get GUI notifications.
Not related to python, but I figured folks here might find it interesting anyway :)
Ya ever heard of simulation thoery?
In well structured projects (which successful open source projects often are), you can safely ignore the bits of the codebase that aren't relevant to your problem. Even in codebases with hard to understand structures, if you're looking at fixing a bug, you'll often find that you can find the relevant area of code by looking at a stack trace (if the issue is causing exceptions), or by looking at the call stack in a debugger (pudb is my favourite, but others are popular too). In complex codebases, it's not always clear from the source how bits of code are connected, and it's easier to just look at what happens at runtime. 
Not really. `python-mode` is standard. I like put either #!/usr/bin/env python #-*-python-*- at the tops of my files to make sure `emacs` figures it out without a `.py` extension, which I don't like using for executables. Oh and for some reason `C-c C-c`/`C-c C-u` is often not already bound to `comment-`/`uncomment-region`, so I set those up.
Yeah maybe my comment was a bit to passive aggressive. Sorry. The problem that I see is that you use neural networks as an equivalent to machine learning. Neural networks are a tool for machine learning. There are a lot of different techniques that might yield better results depending on your application, e. g. Gaussian processes or just simple support vector machines. 
&gt; A vocal minority of users has also requested support for lower-cased numerals for use in (i) powerpoint slides, (ii) academic work, and (iii) Perl documentation.
Do you have a moment to hear about our Lord and Saviour VS Code?
Thank you - that thing was a goldmine of laughs with stuff like &gt; A vocal minority of users has also requested support for lower-cased numerals for use in (i) powerpoint slides, (ii) academic work, and (iii) Perl documentation. And &gt; Besides, the author thinks this is the easiest way to get his name on a PEP.
Sublime Text 2 with some modules, ipython
You just can't beat the scintilla editor component for that snappy, latency free raw manipulation of text. Every other IDE I've tried just feels like typing into a laggy terminal session by comparison. With just enough IDE-like features to round it up, I still keep coming back to Geany after all these years.
what would be really nice would be a decent GUI and py-2-exe integration into the IDE. Maybe even a decent KIVY or other android/ios app building integration.
The criminal circuits will love this.
I have, but it's something that I need to look more into. There seems to be a lot of misinformation/misunderstanding of the actual theory. I am interested in the idea of a holographic universe, i.e. that the universe is a higher-dimensional protection of lower-dimensional data. It just makes good intuitive sense to me
I use VS code for literally everything else. I just wanted the parameter introspection and a couple other nice to have features (autopep8, easier refactoring, etc etc). I have a theory about developers and languages which has never been disproven. Given the presence of oxygen, every single language has that-one-dumbass-"feature" that's designed to do nothing else but piss you off. The language developers and most of the users will absolutely insist that they're right and literally every other language is wrong. They're not right but they'll fite you IRL over the subject. Python it's no case statements. Golang it was the supply chain commands not supporting tagging. PHP it's the janky lexicon and the fact you can inject it in other files. Java it's... all of it. I'm going to have to rewrite my thesis because I'm pretty sure now I can extend this theory to developer tooling. I can get by with bash job controlling, but it's stupid as hell that anything I do that catches keyboard interrupt I can't test in the most common IDE for the language. 
Just tried what you said - works for me. Not sure what is wrong on your setup.
My setup: \- Python 2.7 installed on Windows 8.1 in **c:\\python27\\** folder. &amp;#x200B; Follow the steps: 1. Download py2exe-0.6.9.win32-py2.7.exe from [https://sourceforge.net/projects/py2exe/files/py2exe/0.6.9/](https://sourceforge.net/projects/py2exe/files/py2exe/0.6.9/) 2. Run the installer. 3. Open Windows command prompt (cmd) and **change directory to c:\\python27\\** (or whatever your python installation folder is). 4. Enter the command to finish the py2exe installation: 1. `scripts\pip install py2exe` 5. Create a new **test** folder and **navigate into** **it**. 6. Create the sample **test.py** file (e.g. `print 'Hello World'`) 7. Create the **setup.py** file with the following content: `from distutils.core import setup` `import py2exe` `setup(console=['``test.py``'])` 8. Enter the command (assuming you're in **c:\\python27\\test**): 1. `..\python` `setup.py` `py2exe` 9. If all goes well you will find **test.exe** inside the **dist** folder. &amp;#x200B; Reference: [**http://www.py2exe.org/index.cgi/Tutorial#Step2**](http://www.py2exe.org/index.cgi/Tutorial#Step2) &amp;#x200B;
Will they? Why?
Can we code in python with kivy??
I can see where your comment is coming from. But getting that reaction in a forum of programmers, about a phone that takes control away from giant corporations (and the government) and gives it back to the user is... frustrating. Taking control of our devices shouldn't be something only criminals do.
What do you get for this? import sys import time print("We are "+sys.platform+" Try Ctrl+C..") while [ True ]: try: time.sleep(1) except KeyboardInterrupt: print("Caught keyboard interrupt!") exit(0) Running in the terminal, NOT the tools menu. Like this: https://i.imgur.com/mwE27zu.png
cool
Docker and Kubernetes for sure, and if you wanna go deeper, Golang since thats what kubernetes is written in. 
I have no clue how to code. I would really like to have an effect like this in a video that I'm working on. Could anybody help me please? If you're interested in checking out my videos to see my kind of content my channel is erinlewisfudge
Not sure about Golang. Not many people in the big enterprises are using it though. I mean besides Blockchain what are its usecase ? Does it have a web framework akin to spring or django ?
If Guido's phone number is programmed in, I'm there!
When the integration itself should only take an hour or two to complete, it's not worth it.
Because if you can't be a part of G.I. Joe's Cobra, the closest thing is a phone with Python.
What you're doing is still downloading the image, just not downloading it to disk. If you know the format of the image, you may be able to get away with just downloading the file header. 
To do what? It doesn't even have cellular network support lol. 
So how will the header help me get the resolution and aspect ratio? 
At least for PNG and JPEG, the resolution of the image is encoded in the header, which usually comes at or near the start of the file. This means you don't need to download the entire file, but only the first few bytes of it. 
All the images areeither png or jpg. This is a very interesting solution. The whole point of not downloading is to save on bandwidth. To reduce data consumption on limited internet and also to save disk space. Could you show me how I would limit the download to only the first few characters like you said? 
Look into streaming downloads in the Requests documentation, and then into the PNG and JFIF specs to figure out how to get the data you want. Also, as long as you keep your files in memory, which you're already doing, disk space will not be a concern. 
I will look into that. Thanks. 
I wrote a model to learn geometry deformations https://github.com/dgovil/MLDeform It's accurate enough, even in the beginning with small data sets, and it gets better as I train it with larger ones. I'd love to set it up eventually to progressively update itself instead of training from scratch every time though. 
I can't remember offhand right now what all plugins I have, but VS Code can definitely do all sorts of (linting)[https://code.visualstudio.com/docs/python/linting], autopep8, and whatnot. The thing I really love about VS Code is that it doesn't try to reinvent the wheel like all Jetbrains products. It's more a thin wrapper around command line tooling. You can even set it to use external consoles rather than the built-in one, which itself is just a wrapper around the available consoles for your platform. I've never really looked into whether Pycharm actually does better refactoring than VS Code can with just find/replace... probably so... but I usually keep my Python projects decoupled to the point where 99% of all refactors would only involve edits to a single file, which VS Code handles fine... it's refactors that affect the whole project it suffers with, and honestly, I'm not sure I'd trust automated tools to do those with Python, anyway. The built-in terminal in Pycharm intercepting Control-C is pretty asinine, that's for sure. Since you're already using VS Code for everything else, maybe check into all the different plugins and optional settings it has for Python. Out of the box, Pycharm beats it, but properly set up VS Code is pretty solid.
Wow this looks extremely complicated
Pretty much [already answered](https://www.reddit.com/r/Python/comments/bagyxv/wiphone_a_phone_you_can_program_in_python/ekbjrhp/) before you replied.
BS4, Selenium. 
This will only work if you looped over a copy of the indices, in reverse order. 
when ever it makes sense to make a context switch based on I/O vs CPU load. Obviously I am over simplifying this but that is the gist I think. 
Criminals spin up VOIP on GCP or AWS at higher scale than this. This is an *enthusiast phone*. The first one to come out in a very long time. I just hope it's real. 
We use Celery heavily, and will probably need to continue to do so in some way shape or form due to the "integration" with airflow. Still I'll be happy to get some info on the advantages of the this framework over celery.
I've used it for python and it's fine for that, I just greatly prefer pycharm for refactoring. It does a really good job of figuring out what is 'the thing you're renaming' and chasing down into all your modules. The other stuff all works out of the box as well. I'm not a big 'fuck with plugins for hours to get it to work' guy (one of the reasons I actively mock the "Linux on the Desktop" people). I work on like 4 different pieces of equipment (some of which have partial or no regular internet access) depending on what I'm doing so sane defaults are key.
Then what does that make every other 'hacker' device then (Pis and Arduino's for instance)? The Pi most certainly could do more damage than this ever could, and I never see it referred to as a 'criminal' device.
I see what you mean. I guess it really depends on your situation. Are you in an environment where internships/apprenticeships are available? I think it is a back and forth sort of process. Do (possibly boring) work for someone else to build skills and make connections, then use your skills + connections to move to something you are more interested in.
Very cool project. Interested in supporting it. Do any of the teirs include the NFC module shown in the kickstart video?
Cool. I see the IED market has made its way into the hacker scene. 
I used to really like vs code... Till being written with electron kicked in and start using close a gig of ram... Compared to good old gedit using 6 megs... Or sweet sublime for wich i didnt mind paying since... Its fucking awesome and very easy on resources originally a vs took its place in my heart cuz honestly it has some awesome features.... But i wouldn't 'pay' more than 200 megs on my memory for them... 
Unfortunately I work as a tech support for B2B and I really want to get into System administration but at the same time I want to be able to code too. And I want to improve myself.
As I understand it, TensorFlow 2.0 has been announced and will effectively incorporate all of the features of Keras and more. It will become much more easy to use and so it's probably easier to go straight for the source and learn TensorFlow directly. 
Hmm what about an online course? Some of them are totally doable with a few hours of work each weekend. I did this during a job I had in an unrelated field.
This is some very general advice, but hopefully useful. The general rule of thumb is package code into small units which serve (usually) a single purpose. Let's say, for example, that you wanted to process some points, clustering them in 2d space, and then performing some analysis. It would be best to separate the concerns into a clustering function, and subsequent analysis functions. There's no exact rule here, just ask yourself whether the function is too simple (e.g, don't write a 'power of two' function), or too large (e.g it does more than one thing, or is several hundred lines long!). One thing I would be wary of is class vs functions as tools to group code. Again this is not black and white, but many programming guides and resources come from a Java like OO background, and consequently reach for classes at every opportunity. More often than not you want to write pure functions, rather than defining a class with methods. My advice here would therefore be to 'weigh up' the merit of using a class vs function for each use case, rather than immediately deciding upon writing a class. When writing GUIs, I mostly use classes because the UI frameworks are highly OO. When writing code to perform analysis of some detector data, I have typically pure functions. 
He probably just read "for hackers" and thought about criminals... Most people dont understand the reals meaning of "hacker"
Pycharm is always my go-to still. Jetbrains is bae
Jesus, you‚Äôre over analyzing this. I wanted to emphasize that I use almost stock environment, without putting lots of effort to customize it.
That‚Äôs exactly why I started my open source project. My company‚Äôs software sucked and I could do better, much better. Management disagreed and my boss spent 5 months intermittently making a replacement that was never used. 8 years of my work it turns out made something pretty good.
I wish it was called Pyphone.
I've co-authored a monster...
It‚Äôs too bad about the lack of cellular, I think being able to use this as the brain and cell connection for a remote embedded application could be awesome! 
just asking questions. no need to get testy
Oh! thank you very much. ILet me try it out.
r/blackmagicfuckery
Why the hell didn‚Äòt they call it Pyphone?
Great project. It exactly fits my purpose, personal and business wise because I run my own VoIP server. I will buy it because it doesn't have cellular and I have a pocket size LTE router :D I did a prototype much, MUCH uglier than this and dissassembled quickly when I got bored :D
Except for library authors that splatter this all over their code. 
Python in Visual Studio Code is definitely amazing thanks for the incredible work of Don Jayamanna (1,696 commits, 409,645 LOC). It was so good Microsoft hired him and made the extension official. That being said, the [Python support in Visual Studio](https://visualstudio.microsoft.com/vs/features/python/) is no slouch either as it has (built-in) support for: - virtual environments and pip - Django and Flask (and not just templates) - better debugging experience (at least better watch, inspection, and breakpoint management), including remote debugging - REPL - Unit Testing (via Test Explorer) - profiling Most, if not all, of these are supported by VS Code + Python too, although some in a cruder way. I personally prefer VS Code too, however I can see how the full Visual Studio might reduce the IDE learning curve for those already familiar with it. Plus VS Code is multi-platform; I'm not sure VS for macOS actually supports Python.
If properties of languages that have always existed aren't restrictions, then this isn't a restriction. Builtins have always been positional only due to quirks of the Python c API.
This is clever. I think you need to extend the joke with a repo though, like \[Rockstar\]([https://github.com/RockstarLang/rockstar](https://github.com/RockstarLang/rockstar)). 
This is a good question, but its home is in r/learnpython.
Margining DC/DC converters and verifying the effects on the rest of the system.
hahaha ^(I don't get it)
Although has nothing to do with this PEP either way.
Needs more metaclasses 
The difference is that you can start with just a xyz.name field, and upgrade to a property if you want additional validation or logic in the setter/get, without breaking backwards compatibility.
qutebrowser can't really implement that, since all the rendering (and execution of JS and such) is done by QtWebKit/QtWebEngine. Even if it could, it probably wouldn't be worth the effort, I doubt it'd ever get popular enough that websites would adopt it. Using one of the [Python/JS transpilers](https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS#python) (though none of them is really popular) is probably a better solution.
qutebrowser author here - A couple of years ago, I tried getting Grail running again (by either getting an old Python/Tk to run on a modern distribution, or by upgrading Grail to a more modern Python version). IIRC I got it running, but it didn't actually render any websites.
Thanks! :)
When was that, and what about it was slow?
&gt; I'm not a big 'fuck with plugins for hours to get it to work' guy Same here... that's why I use an 'IDE' (if you can call VS Code that now) that just drives the same command line utilities that my CI/CD and build environments use. I don't want a bunch of built-in stuff that's ever so slightly different so I spend hours tracking down arcane errors that exist on the build system that I don't see locally or whatever. I can do stuff like have the 'build and run' command push code into a Docker container and run commands there, allowing me to test my code inside Docker running Alpine Linux from my Win10 workstation with a single click.
With what qutebrowser version? There were various scrolling performance fixes a while ago, and there are [more coming soon](https://github.com/qutebrowser/qutebrowser/pull/4498).
Would love an extension board with a raspberry pi module slot for more performance. It would essentially use the current circuitry to drive the screen and peripherals and offload the heavy tasks to a raspberry pi.
&gt;Then I read the PEP, and I realize the core devs were thinking quite a bit. Thanks! Pablo is a CPython core developer who primarily authored the content of the PEP. Mario is a member of the Python Software Foundation who also contributed to the text. I helped by overhauling the motivation, rationale, specification so that the text reads in a more compelling manner and made wording and grammatical changes for clarity. Glad to see the lively discussion going on here. I would also recommend looking at [https://discuss.python.org/t/pep-570-python-positional-only-parameters/1078](https://discuss.python.org/t/pep-570-python-positional-only-parameters/1078) to see more discussion among the Python community around PEP 570.
Hello! I'm a bot! It looks like you posted this in multiple subs in a short period of time. In the future, I suggest asking questions like this in learning focused subs like r/learnpython, a sub geared towards questions and learning more about python. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Not sure what the differences are but I already enjoy coding in Python on my BlackBerry keyone via Termux... even got Jupyter notebooks and sklearn machine learning libraries happening on here 
Shut up and take my money
Why don't you use `run`, [documentation](https://docs.python.org/3/library/subprocess.html) says your function is deprecated since 3.5. &amp;#x200B;
You should learn the basics over at r/learnpython first and get used to python. Then, for your library of choice, do some easy stuff with both Python and your library, and then before doing ML, make sure to read up on it first.
Ok, thank you. 
Hello Bot, I don't give a crap.
Funny thing about VSCode. It's literally the best interface to docker, docker repositories, and Kubernetes. You can manage and manipulate every single primitive in all three of them from the sidebar. Just takes the docker and Kubernetes plugins.
1.6.0; next newest
Thanks, I hate it.
This is correct - Jupyter Notebooks were born out of the iPython project and were originally called iPython notebooks - hence why they use the extension .ipynb still.
Golang for cloud native apps since it can more easily interact with kubernetes.
&gt;Jedi or the new LSP version doesn‚Äôt cut it for me Interesting - my thought's generally been that PyCharm's autocomplete was better than Jedi (although, I've admittedly barely used it). Have you tried Kite (kite.com)?
I believe you have my stapler.
If I understand correctly, it is possible. Your post was a bit unclear though. What are you searching for, what is it for...? Essentially the screenshot and cropping Is possible, but what are you cropping, why are you cropping is also very unclear. Google this part there are definitely tutorials on this. Th least part, image search is definitely the hardest. From my understanding you would need computer vision, neural networks might be what you need, computer learning. Google this, find the best way for you. PS. Try to always specify, describe the think you are trying to do in this subreddit. Explain what you've done, tell us that. Do not ask blatant and very wide questions like this without specifying anything. TL;DR It is possible
I dont know what exactly you want but maybe this could help : https://cloud.google.com/vision/ you can also look here: https://pjreddie.com/darknet/yolo/ search for tutorials on both
A PhD in statistics or computer science
he created a new language, A WHOLE NEW LANGUAGE. THIS IS AWESOME, PRAY HIM.
I just patch bytecode at runtime to blame it on something else when my code crashes. Jokes aside, I generally don't use these tools as they have never been that good. I use linters to enforce good codestyle, but I rarely find bugs using them as they aren't as good as our mind; globals, dynamic imports, etc are really difficult to parser, which is why I dislike them.
Nice project, especially for learning purposes. I have one suggestion for your example on Git. It's never a good thing to have "from package import *", but it's acceptable as a one-time exception. In the example code there are a few too many of these. From personal experience, I find they make a bit harder to learn and understand new code because I have to check every object to find out if it's something you implemented or is from a module I'm not familiar with. Again, very nice project and thanks for sharing it with the community.
A course in open source projects or python?. I've done quite few projects with python already.
&gt; System administration Whatever topic it is that you are interested in. Python is just a language. It's how you apply it that matters.
I want one
PyCharm does auto importing, symbol completion, argument suggestions...all of which eliminates large swathes of problems. 
[python-license-check](https://github.com/dhatim/python-license-check) Use this to verify that all of your dependencies have the "correct" licenses. Install it with `pip install liccheck`. Keep in mind that you will need to specify a requirements.txt file (`-r`) and a strategy (`-s`) for what licenses are acceptable. 
fair... i over abstracted my point until it was not clear how it was related to the original subject i think.
True. For system administration I'll probably purchase the book and learn out of that, I have around 5 years of hands on linux experience but administration is a different world. I'm so stoked to do this.
and 50 published articles.
Is this gonna mean a new Dummies book?
They‚Äôre really not that different.
Sure makes making IEDs a lot simpler...
Or r/letmegooglethatforyou
I'm saying I don't see much difference if you just use a getter/setter function. I mean unless the property shows up in vars(self) so it gets included in json.dumps(vars(self)), I really don't see how making it a property is any benefit. If you're using lazy initialization or other similar stuff in the getter/setter, you're better off using a function rather than property because anyone using the class at least has the hint that "hey, there's stuff that gets done before I retrieve this value".
What are the hardware specs?
Strong understanding of numpy arrays and pandas series and dataframes. 
Just got done with my morse code encoder and decoder. If you want you can check it out here: [**https://github.com/fettgrym/morse-code**](https://github.com/fettgrym/morse-code)
It's beautiful!
I used a library which really pissed me off for several reasons but still did something I wanted. I decided "screw this, i could easily build my own version that does all of this better". I did build a better version, although it wasn't quite as easy as i'd anticipated.
If Guido didn't mention it I would totally dismiss it But I don't see it serving a major role in my workflow so I would pass
I could see buying this for some sort of phone dev project. But more realistically I would just buy a normal phone and mod that. At least for hardware development it makes more sense (at least if you're experience enough to work on a phone's hardware and not break it). Python on a phone could be good for developing Iot devices too. Prototype on a phone and then build something that does the same thing for dirt cheap.
Look at [pyscreenshot](https://pypi.org/project/pyscreenshot/) or [Imagegrab](https://pillow.readthedocs.io/en/3.0.x/reference/ImageGrab.html) for the screenshot. You can stipulate screen area for your cropping. And [openCV](https://pypi.org/project/opencv-python/) for your object recognition.[Here's a github repo as an example](https://github.com/arunponnusamy/object-detection-opencv).
/r/nocontext
Can't think about. \^\^\^Available \^\^\^for \^\^\^Mac \^\^\^&amp; \^\^\^Windows!
Tldr so you don't have to create setters to begin with, but can grow into them in a backwards compatible way.
still consider it gray ware trying to profit on users code.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Did any thought go into the name sounding like, and containing, iPhone? I‚Äôd be afraid of Apple crushing this thing just because they can. 
nice job - what career are you planning on after graduation?
I will be starting full-time in a derivative sales role
We have a pretty big list of things we might add next. I'm planning on letting backers vote (soon) on what happens first.
We did make a pi + Arduino board at one point (allowed you to add either one to the back of the phone, but not both), but we were having trouble choosing which models since both of them have so many varieties. Can anyone else confirm the compute module is probably the best to make a daughterboard for?
Looked a little fancier at first, since I didn't escape the \^, so reddit "helped" with the formatting. :-)
The specs are listed in the middle of the kickstarter page. You'll be able to modify the native code as you want, and we do plan on making some examples on how to do both Python apps as well as C++/Arduino.
(1) Type as much code as possible with your hands. (2) Don't shy from spending more time on understanding, why something works the way it does, before moving forward to other concepts. All the very best.
This article says it better than I can: https://hackaday.com/2018/10/18/ask-hackaday-why-arent-we-hacking-cellphones/ The short version is: If you only want to push bits around cellphones are fine, but as soon as you need to turn a single processor pin on or off, or if you want to connect custom hardware too it, it gets hard enough to that nobody bothers.
After reading and dabbling in IDLE a little bit take some time and write down some projects. Take said projects and study the architecture of how to design said projects and start to piece it together. Don't worry about writing beautiful code at first. Follow requirements and just run it, then the bugs you get help guide your learning better than jumping from tutorial to tutorial. Bookmark stack overflow to your browser. Pick up Atom or VS code or use just stick to IDLE... But try them out to see their differences. Finally pick an end goal and write it down so you can stay focused. Mine was to be a full stack python programmer...having is visually there as my desk helped me stay focused when I started down some rabbit holes in stack overflow or Google. Just my two cents. 
Awesome. Hope you like it
We already get enough grumpy people taking over the conversation once they learn the base model doesn't have a cellular radio that we need to get out in front of that as much as we can (by putting WiFi in the name). But yeah, if you wanted to name it based on the cool things it lets you do, vs. what it's not, then Python would be pretty high on the list. :)
Thanks for your answer! I also use python-mode, was wondering if I was missing something. I have M-; to comment/uncomment, not on my PC right now but I believe that was default.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] [Python++; The Future is Here!](https://www.reddit.com/r/programming/comments/banrhp/python_the_future_is_here/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
wtf dude
http://www.reactiongifs.com/r/lmsac.gif
WiPyPhone or just WiPy
Couldn't find them on mobile.
Why call it a phone at all then? Why not just call it a batteries-included hacking tool? 
## Overview: - VoIP (WiFi) Phone - 2.4‚Äù screen (320 x 240) - 802.11 b/g/n WiFi - micro USB for charging, serial communication, and firmware updates - 3.5mm audio jack - Internal microSD slot - Size: 120mm x 50mm x 12mm - Weight: 80g - 700 mAh Battery, 8 hours talk/1 week standby time (estimated) - 25 buttons keypad, 4 reserved for user, all keys are user programmable - Espressif ESP32 based system, programmable in Arduino - MicroPython for user applications* - 20 pin programmable header on back of phone ## Electrical: - 4MB PSRAM - 16MB Flash ROM - 700 mAh Battery - ESP32 Dual core running at 240 MHz - Wi-Fi b/g/n + BT/BLE Dual Mode (Bluetooth is not yet used in the software) - USB serial port for charging, debugging, and serial data transfer - Externally accessible headers for custom daughter boards, including UART, SPI, I2C, PWM, digital I/O, ADC functions ## Mechanical: - Size: 120mm x 50mm x 12mm - Weight: 80g - Polycarbonate case and screen - Silicone keypad, backlit - phone back can be replaced with a PCB to expand the hardware capabilities ## Software: - Fully working VoIP phone, with calling, text messages, and contact library. - MicroPython for user applications* - Wireless firmware updates** \* Python apps will be done in a separate firmware. If we reach the stretch goal the python interpreter will be integrated into the phone firmware \*\* wireless firmware updates is a stretch goal 
Well, it is a phone. It makes and receives calls. But more importantly, the motivation for the project was to claim phones as being something people should expect to be allowed to hack and do as they want with. I don't want to just concede the control of my phone to whoever manufactured it or established a big enough walled software garden that they can keep out anything they don't like.
no, god, no....
Typically, though, the server is running on a headless system, without any type of GUI. 
Yeah, I much prefer pysh. 
Sublime Text 3 and Command Prompt
Have you looked at the m5stack?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
First just learn how to get the data from the web sites( I would recommended urlib bs4 ) then I would focus on how to store it ( for that use MySQL ( it's an amazing thing to learn )) and finally focus on how to present the data. And when your doing this try your best to organize your code with methods and classes ( if you know then ( don't be intimidated)) . Also comment your code so once your done more than than you can understand it. Anyways good luck to you.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Thanks!
To which FEA project are you referring?
pyNastran
Mind telling the name of / linking to the project?
r/learnpython
sweet. thank you :-)
You can‚Äôt post and not hook us up with a link to that Spotify playlist. 
scrapy 
lmao. the one in the pic is [this one](https://open.spotify.com/user/ambercharnaud/playlist/1WPz1yv8jJlAM5DG9XZj0i?si=-XIyvo7SR1ushNyGyl9O2Q) but it was basically grocery store music so ive moved onto [This one](https://open.spotify.com/user/1199788434/playlist/1cIAgWPqMfWcPWPfPPNAER?si=qq4jxGNkQZCv0PcCIiz5wg) . Which i find is alot better but also not super distracting. 
learn to post code properly
Need more people like you in tech. This looks brilliant
&gt; been using Python for a while now ever heard of "environment" ?
My dude, I‚Äôm always looking for new music. I‚Äôm exchange, I‚Äôll PM you my Python notes once I get home if I remember. Codecademy had a pretty thorough course as well, I think they have a Python 3 course now. Either way, that book by itself is great. I got that one and Automate the Boring Stuff with Python. Helped me get over the hump. The hump being learning the language and actually using it. I took a C++ class too but it‚Äôs so nice that I can knock out a quick Python script to manipulate files or work with CSV files at work. It helps if you have practical uses for Python scripts at work or in your everyday life. 
Yeah you're right but you could use it for a chat system or something
Been is the video is a awesome. Make sure to watch him at 1m30s
You should put the abstract in the GitHub readme
It helps to have a personal goal, something you really want to predict. For me it was finance and physics things. This got me interested, got me programming. Then I took a couple classes, read half a book, etc, learned the lingo and concepts that unify and underlie ML. Interestingly neural networks, although the rage in image processing, actually are really poorly suited for finance.
Hey... the world needs more phones designed by awkward engineers :P I spent 3 weeks making that fucking video and I'm still traumatized.
A phone that you can program in Python is nice; a phone that lets you **call** Python is even better!
oh wow, that would be awesome! and yeah, i dont have much i can automate at work as it have a call center job (lots of internet restrictions on stuff like that) but i have some side projects i would like to see if i could have come to light. even if its not for work i could find some sort of application somewhere in my life for it. even if it is just for fun. 
Where would you get such data?
At the risk of being put on a list... no it doesn't. It's literally effortless to make a detonator triggered by a call.
Make sure to comment on your code saying what it is supposed to do so that if you make a mistake you can figure out what you were trying to do when you wrote the line of code
The compute module is really cool, it's basically a full RPi3 with extra GPIO and built in EMMC instead of SD card (it's missing bluetooth and WiFi I believe). I'm sure people would find interesting uses for it if you made a daughter board. If you include a way to toggle the phone screen to display the output of the compute module, I'll buy a few for work. It's looking good, good luck on your campaign!
Are you considering the possibility of adding a higher res screen in the future? Could one swap in a different screen without rewriting firmware?
It's a little late right now to make that kind of change on this one, but we regularly design and ship new products. If somebody wants to order some "special" ones for work (or for reasons) we can make it happen if the order size makes the math work out.
Unpopular opinion: this is a stupid insult to programmers and enthusiasts. ‚Äùa phone for hackers" get "pwned n00b". This is a childrens toy. A phone for hackers and programmers is a regular rooted decently high spec android. Some script kiddie will look at this and think that once they buy it and open it and configure something in a cli then they are a hacker programming genious and can show off to all their friends. What does this even have anything to specifically do with python? What you can run a script on it? This is just marketing. 
Much appreciated! I'll try it over the course of the day. :)
Since you are importing the module keys, shouldn't all calls to variables defined within [keys.py](https://keys.py) be referred to as keys.YOURVARIABLE ? (e.g keys.consumer\_key)
Fuck I think your right that‚Äôs what I might‚Äôve been getting confused, will try later and let you know
I use an app called Qpython for Android and it's pretty useful to code and run Python modules in Android (based on sl4a). I mostly use it for scraping and maintaining my small database. it also supports scientific libraries like pandas and Numpy without root. It supports Kivy as well. There is another Android app call Termux though I haven't used it much. So my question is, how this hacking tool is different than these android apps? 
Swapping in another screen would probably require changes to the firmware. Depending on the screen that might be a lot or not very much. It would also need to have a compatible pinout and driver unless you want to do some hard core hacking. If you used a much higher resolution the refresh rate would get bad fairly fast. At that point you'd need a different PCB to route more of the I/O to the screen (the screen is currently driven by SPI, but a larger screen would probably need a parallel connection). We have a few different ideas for a next-version phone. Some of those would call for a higher resolution display. 
Thanks for the write up. As I just started to learn pandas/ python that was very helpful. So basically map works like excels vlookup on steroids? Out of curiosity how would a ‚Äúhlookup‚Äù with map look like? 
RemindMe! One Week
I will be messaging you on [**2019-04-15 05:32:40 UTC**](http://www.wolframalpha.com/input/?i=2019-04-15 05:32:40 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/b8jq2r/whats_everyone_working_on_this_week/ekdbtt4/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/b8jq2r/whats_everyone_working_on_this_week/ekdbtt4/]%0A%0ARemindMe! One Week) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
That Book is awesome! I‚Äôve read through all the basic chapters of that book (part 1) and then started my own project.. But I plan on going back to the book to project 2 and 3 (data visualization and the Django project) .... for me it was kinda hard to get through the first chapters of the book but when you get to chapter 7 it gets more exciting! I forced myself to do very exercise in the basic part.. and it helps a lot :)
They said it would be available for Linux like 2 years ago. Nothing happened since then. I‚Äôve tried it on Mac and it‚Äôs ok. I just think that the company is really bad in communicating their issues with creating the Linux client. 
I use Termux on my android phone and if you want to do software stuff it's great. But if you want to do hardware stuff it's just not really feasible on a smartphone. I think the 2 big differentiators in capability are: 1. you can completely change the firmware if you want. one person can realistically understand the whole code base and there's no walled garden or 100 levels of XML configuration/access control/locked drivers between you and what you want to change. 2. It's easy to expand the hardware. I can wire it straight into a piece of test equipment if I want and use if as the UI and central controller. If you want to augment the hardware you have a reasonable shot at being able to do it yourself, or hire anybody who can make a PCB and get it done.
Thanks for kind words and suggestions. But it is not my my project just want to share. Maybe you can make pr or create an issue on github? 
Not sure why you‚Äôre being downvoted, but to my knowledge that‚Äôs not how trademark law works.
i laughed how the word "awesome" was emphasized... i like the wiphone project. awesome project
Uh?
Or use [MyGrad](https://mygrad.readthedocs.io/en/latest/), a pure-Numpy library designed for MIT students to implement neural nets. Still pretty much from scratch, but your primitives are better tested.
Basic understanding includes the basic programming constructs and concepts. It excludes the libraries. In case you don‚Äôt have any prior knowledge or experience of programming, you can always start by referring to the following books or step: Python The Hard Way, by Zed A. Shaw Google Developers Python Course (highly recommended for visual learners) An Introduction to Python for Scientific Computing (from UCSB Engineering), by M. Scott Shell Learn X in Y Minutes (X = Python) Join [Best Python Training Institute in Noida](http://pythonandmltrainingcourses.com/) for learning machine learning with python In case, you want to gain proficiency in machine learning using python, you need to learn in much more depth by following these Few steps process. &amp;#x200B; Happy Learning!
awesome, thanks
Thanks for the detail response.
Well done but just a minor point: in the readme you reference "paper.pdf" but the actual file name is "thesis.pdf".
[removed]
&gt;allows the API to evolve in a safe, backward-compatible way. &amp;#x200B; This only expression convinced me. &amp;#x200B;
what do you mean with hinting
&gt; Pipenv has a variety of problems Ok, so what's the alternative in this chaos? &gt; from use in non-user contexts due to the reliance on click, to the author's weird distinction between the concept of a Python application and a Python library even though many times they exist together one and the same, to the slow resolver, and more, specifically to the author being a complete and total dick to the entirety of this subreddit and then not only refusing to apologize, but tossing all responsibility aside to "being bipolar made me do it". Honestly I don't think that the author being what you claim should have anything to do with the fact that there are companies and individuals relying on these decisions. 
it is available in the video description 
Just a daft little project I worked on using Python libraries Pillow (for image processing) and networkx (for path finding to draw the image). It runs on a Raspberry Pi Zero. The camera snaps like any other point and shoot, producing a 100x60 pixel resolution image on the Etch-A-Sketch. Draw time is about 12-30 minutes. The posted link has demos of it in action, there are also [build instructions](https://www.twobitarcade.net/article/etch-a-snap--build/), a [guid to the image processing](https://www.twobitarcade.net/article/etch-a-snap--processing/), [network pathfinding](https://www.twobitarcade.net/article/etch-a-snap--drawing/) and [plotting the output](https://www.twobitarcade.net/article/etch-a-snap--plotter/). 
But why?
Any phone can do free calls over Wifi, what's that about? Are they talking about more than WhatsApp or Viber or Facebook Messenger?
Why is this called a phone if you can't insert a SIM card? I'm sorry but I'm downvoting this crap.
I tried using "run", but same result. The problem is not in which function i am running, its that it cant find sh file in the same folder in the first place. I remember it working like 2 years ago, but now i dont know what is wrong with it.
Very, very nicely done.
The vote arrows. You can change which hints appear when you click f with hint xpath setting. For example default hint xpath doesn't work on protonmail web client but you can easily fix that with per domain hint xpath setting. Same way you can customise Reddit to not hint all of less important links like share or whatever bothers you.
Just mash buttons and cry until the tech lead helps you out. That's what I always do. 
Sublime for text editor if you must. Pycharm as an IDE is best.
`for` loops are syntax sugar for `while` loops. It's much easier to write for i in range(5): print(i) Than it is to write __iterable = range(5) __iterator = iter(__iterable) while True: try: __next_item = next(__iterator) print(__next_item) except StopIteration: break 
I've been obsessed with this guys YouTube tutorials... https://www.youtube.com/user/schafer5
As a rule I use \`for\` loops when I know the number of iterations, and \`while\` loops when the number of iterations is not known
Good luck!!
There are a million ways to use programming so chances are you are using it on things you aren't that passionate about. I spent years bouncing around from topic to topic until I found what I wanted. Quit playing video games too, code instead.
But you can just set a variable then inside the while loop decrease by one, so by the time it's zero, the loop ends.
i = 1 while i!=5: print(i) i = i + 1
That makes sense in this simple case. But what about something like `for chunk in requests.get('https://...', stream=True).iter_content()`? Or `for result in map(process_item, filter(is_item_ok, items))`? The main point here isn't `for` loops, it's iterators in general, as an abstraction.
Because you can loop over objects in a nice way colors=["Green", "Red", "blue"] for color in colors: print(color)
Why are you putting hashtags in a reddit title? 
The alternative? Poetry. Hell, or just damned pip. Package management is a solved problem. &gt; Honestly I don't think that the author being what you claim should have anything to do with the fact that there are companies and individuals relying on these decisions. It matters quite a lot. If the author isn't mentally stable enough to not be a widespresd dick, you have no idea what crusade of damage he can pull on the package (and in fact he did, inexplicably, like a week after the debacle?)
A variable with a larger scope than the one i need, so no I'll take the for thanks... Is this same way of thinking the one thst g9t rid of pre and post increments and the same that removed the curly breclets from a function definition syntax to make it simplier (i will just make you bleed if for any readon you mix a space between tabs) Why some people like everything the hard way... Does it makes you feel more achieved? 
FOR and WHILE loops serve different purposes, IMO. While there's a fair bit of overlap there are times you definitely to use one over the other. FOR loops come in really handy when you're using list comprehensions or generators. def compute_powers(n, start=1, end) : return [n**i for i in range(start, end)] Pretty sure a WHILE loop would be longer, more complicated and harder to read.
the `--lf` flag with `pytest`
I have that and it's great. Check out the Schafer tutorials on yt... hes got a bunch of playlists ü§òü§ì https://www.youtube.com/user/schafer5
They are for different things: For loop: Iterate over a collection of things (or an Iterator). It's great for when you need to perform an action on each thing in a collection. While loop: Perform an action until a condition is met. The condition doesn't have to be related to the data you are operating on. I probably use For-loops about ten times as often as while loops, even more so if you count comprehensions as variations on the for-loop syntax. 
Because the concept of for makes more logical sense when dealing with iterators. That example code you gave works, but I don't about know pythonic it is, or how easy it is to actually read.
I used Atom for a while but recently switched to pycharm.
https://www.youtube.com/user/schafer5 ‚úåü§ì
Yeah, I came across this already. But as I said, an interpreter or an online compiler along with the content is what I am looking for.
Strike 1... (on me) How about this? https://www.pythonanywhere.com
The author is also deeply involved in pypa...
In case the prev was strike 2... https://www.codecademy.com
She has already completed the course here. What I want is freeCodeCamp for Python.
1&lt;&lt;n is like 100 times faster than 2**n
You can do that sure, but is it the right tool for the job? The two different loops are for two different pieces of logic. 
Shoot... looks like they changed up their pricing... Last try... and this ones great because it's a gamified app... https://www.sololearn.com/Course/Python/?ref=app
That's so cooool I love it
Using ( object = builder .add() .add() .add() ) instead of object = builder \ .add() \ .add() \ .add() 
&gt; Poetry builds packages. pipenv is for something else entirely. This naive response proves you've never even bothered. &gt; Not a damn chance. And the utter mess of the situation makes it even harder. Python is becoming a joke for this. Okay, cool. Tell me about all the companies who stopped using Python because they couldn't figure out package management. &gt; The author is also deeply involved in pypa... Not really and mostly irrelevant? PSF and PYPA are separate almost entirely and the PYPA has gone more and more off the rails against the PSFs wishes.
Processing's python mode?
\^ This. &amp;#x200B; So useful when working with numpy &amp; pandas.
Writing code that refactors my other code; in big projects it's a life saver cause you'll almost definitely think of a more efficient way of doing stuff once you're already a month in. That, or lambda
You should join the discord and check out #esoteric-python where we're working on surprisingly similar things
If you have something that takes a long time to run, it is faster to double click the py file to run it in shell than idle
Using classes as globals A project of mine used to be a giant PITA since it was a distributable server implementation with modding support, but without using globals there was no way to manage it properly, so we ended up using some classes as objects (similar to a JVM Object) rather than classes. 
It's a bit misleading to call it a phone and it not being a phone as everyone expects. The sad truth is that you can't make an open phone due to licenses, patents, regulations, etc...
I remember when I took this step: Going from something like this: if os.path.isfile(full_file): os.remove(full_file) for line in data: with open(full_file, 'a') as file_handle: file_handle.write(line) to somethign like this: with open(full_file, 'w') as file_handle: for line in data: file_handle.write(line_string) 
[Try it online!](https://tio.run) is a free code environment, but to really learn python you should really just install it and try to make a small project like a small text-based minigame. Guess the number, hangman, etc are all good ideas for first programs.
First, congrats on making a thing! ## Recommendations 1. Add a license 2. Add content to the README that includes example usage and output 3. [&lt;img src="https://www.zeldadungeon.net/wp-content/uploads/2015/02/0c48413.jpg"&gt;](https://docs.python-guide.org/writing/structure/) -- Courtesy Kenneth Reitz
This might be a silly question but do you mean you have code that can help do the refactor? Or do you just mean refactoring yourself?
No I mean like literally writing code which searches through a big file with source code looking for where you've done stuff inefficiently and automatically fixing it. I've found that with a lot of my project the refactoring is very time consuming if you do it by hand but bug chunks of it can be automated
What is a real-world implementation of this? From the documentation here: https://python-reference.readthedocs.io/en/latest/docs/operators/bitwise_left_shift.html I don't really see a way of using this. Does it improve performance?
The zip(*l) pattern to transpose lists of lists. Example: &gt;&gt;&gt; a = [[1,2,3],[4,5,6]] &gt;&gt;&gt; print(list(zip(*a))) [(1, 4), (2, 5), (3, 6)] Comes in useful more times than you would think. Caveat is, the result is a list (or, well, &lt;zip iterator object&gt;) of tuples, not a list of lists, but that's usually not a problem.
Do you have any examples you could share? This does sound interesting. 
Ouch... the first block is almost thedailywtf territory... 
Yeah absolutely :) One time I was making a WhatsApp Web API with selenium and was doing the bulk of the element-finding using XPaths. When I started the project I just used raw XPath strings whenever they were needed and I found that this quickly became unwieldy. This code was what I used to find every time I'd used an XPath in the source code and then move them all a dictionary at the top of the code https://pastebin.com/pS4y6D46 Here's the actual code for the API if you're interested https://pastebin.com/unrs6iQT
It doesn't come up often, but it's useful to know. x&gt;&gt;1 rather than x//2 and x&amp;1 rather than x%2 help too.
Commenting my code, so I have at least some idea of why I wrote that code months or years ago.
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Whats wrong with shell aliases? :o
I can see how they'd be a benefit to knowing how to do. Is there a difference in performance between the two methods or is it more notation over anything else?
guard clauses to fix nested if statements. Instead of: ``` if a: if b: if c: return # useful else: return # fooC else: return # fooB else: return # fooA ``` You can have: ``` if not a: return # fooA if not b: return # fooB if not c: return # fooC return # useful ``` Unfortately I can‚Äôt find anything on them in python, but [here](https://refactoring.com/catalog/replaceNestedConditionalWithGuardClauses.html) is another great example. When checking for some requirements that a variable or anything else must pass, please use guard clauses rather than nested if statements.
Something like this? class GlobalAttrs: CONSTANT1 = ... CONSTANT2 = ...
You can use underscores to enhance readability if you're dealing with huge numbers. For example rewrite 10000000 into 10_000_000 
Yes, usually bit-wise operations are quite a bit faster.
Depends on what you are trying to do. Bitwise operations are used a lot for embedded computing and other areas where you need very low-level control. As described by GP, bitwise ops are also useful for math because on the metal level, using the shift register is a lot faster than going though the full adder in the ALU.
For i,each in enumerate(list): rather than For i in range(len(list)): Each = list[i] 
Escape escape: '\\n'
Shitty article
The old way: list_a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] even = [] for number in list_a: if number % 2 == 0: even.append(number) the new way list_a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] even = [number for number in list_a if number % 2 == 0] Same thing just less lines.
if i understand you properly, why not use a module as a global instead and eliminate the overhead for creating a dummy class?
Interesting! When I 'timeit' I actually get ~10ns for both of these. Do you mean for numpy or something?
It may even have been worse. I mostly just remember I was using remove file together with append. Luckily enough, the memory of those old things are a bit clouded.
To save others the search, this will re-run only the tests that previously failed (last-failed) https://docs.pytest.org/en/latest/cache.html
Um, that's still harder to write than the for loop example. It's literally twice as many lines of code, and less readable to boot.
Interestingly x&gt;&gt;1 is about 40 times slower than x%2.
Another one is setting defaults for function arguments. def my_func(arg1,arg2): return arg1 + arg2 print(myfunc(1)) &gt;&gt; error you can set defaults: def my_func(arg1=0,arg2=0): return arg1 + arg2 print(my_func(3,2)) print(my_func(6)) &gt;&gt; 5 &gt;&gt; 6 # 6 + 0(arg2) &amp;#x200B;
If I'm not using `each` is it quicker to use: 1) for i, each in enumerate(list): print(i) 
That's actual genius
It might seem like unnecessary additional work, but use `typings` for anything larger than a small script. PyCharm will give you hints and auto-completions consistently and it will pay back big time. 
If you needed even as an iterator (not a list) you might consider: list_a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] even = filter(lambda x: not bool(x % 2), list_a)
Modulo operations with powers of 2 are often handled as a special case. Compare x%2 to x%3. 
What does this do?
Kinda makes you think of what you did before: a = [[1,2,3],[4,5,6]] for i in range(min(map(lambda x: len(x), a))): for j in a: print(j[i]) That's what you call confusing code
Putting units in variable names. Before: `height = 0 # in cm` After: `height_cm = 0` Got it from Clean Code, best book ever. 
By the same token though, if you aren't careful, some of those comments are lies waiting to happen.
Autodocstring for sublime text ctrl+alt+' for automatic template with typing, names and placedholders.
Auto-formatting my code with [https://github.com/ambv/black](https://github.com/ambv/black) &amp;#x200B; Never having to think about the formatting of my code again is like reclaiming 10% of your mental cpu.
Ah, it was meant to be floor division.
That might be it actually. It definitely makes a bigger difference in C. 
I'm the sad fucker that used to do this: &amp;#x200B; lista = [1,2,3,4,5,6,\ 7,8,9,10] Before that I just let the lines trail off of the screen and scrolled to read them.
You can make Python more like javascript! (not that anyone ever asked that) ``` class obj(object): def __init__(self, **kwargs): self.__dict__ = kwargs ``` Allows you to do things like: ``` obj1 = obj( a=[1,2,3], b='foo', c=obj( cat='meow' ), ) print(obj1.c.cat) # meow ```
Are they exactly the same?? If they are, this is amazing
Expressions inside parentheses can be broken into new lines like this without the need for the `\\`.
\*pythonic anger\*
#2 is acceptable in that case, but the most idiomatic is: for i, _ in enumerate(list): print(i) A single underscore as a variable name is a common way to spell "I need a variable name here or python will complain, but I'm not actually planning on using it".
I probably should've known that - I use that trick in other bits of code all of the time - thanks for clarifying!
Is your script marked executable? This error can be caused by not having execute permissions to the file.
Both versions of the code do the same thing, but the parentheses in the first version mean you don't need to keep escaping the linebreaks. --- If you're very new and haven't seen either style before: it's often useful to call a method on the returned value of a method, in effect "chaining" method calls together. This would need to happen on one big line of code, which wouldn't be very readable. The second snippet above offers a naive way of splitting the one line into multiple, by using a backslash to escape the newline and tell python to treat multiple lines as one. However the first snippet uses parentheses to gather multiple lines into a single expression. That way you don't need to perform the escaping. If you're interested in more about formatting your code, take a look at PEP-8 which is a collection of guidelines for writing readable python.
Yes, these are the same numbers
Declaring 2D array (list) with one variable in every index From: array =[] for i in range(a): temp = [] for j in range(b): temp.append(item) array.append(temp) To: array =[[item for i in range(b)] for j in range(a)] 
I hate the 80 char limit in pep8 (any many other do), I still make my lines 120 chars because we're not in the last century any more.
Are you doing the operations dynamically? Static math gets optimized at compile time, so you‚Äôd have to do something like `5 + int(‚Äò7‚Äô)` to actually time it.
Getting a code editor with syntax highlighting. Notepad works fine for day 1, but it's amazing how much information the little bits of colour provided by syntax highlighting add.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. Show /r/learnpython the code you have tried and describe where you are stuck. **[Be sure to format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F)** and include which version of python and what OS you are using. You can also ask this question in the [Python discord](https://discord.gg/3Abzge7), a large, friendly community focused around the Python programming language, open to those who wish to learn the language or improve their skills, as well as those looking to help others. *** [^(README)](https://github.com/CrakeNotSnowman/redditPythonHelper) ^(|) [^(FAQ)](https://github.com/CrakeNotSnowman/redditPythonHelper/blob/master/FAQ.md) ^(|) ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
And on top of that, IDLE dark theme is so good for reading large amounts of highlighting clearly (if you use idle)
IMO if a segment starts with declaring an empty variable you've usually done something wrong
Just did something like this in my boot camp (JS) and it made my code a million times nicer!
Even better would be to use unit-aware types with sensible autoconversions defined. There's a few implementations about but none of them seem to have caught on.
Well the first and most common one is the ifmain block, which I didn‚Äôt find out about until embarrassingly long into my python career. My current favorite though is using double underscore (or ‚Äúdunder‚Äù) methods in my custom classes. Anyone who actually wants to google these should look them up by the name ‚Äúmagic methods‚Äù instead. An example: class Vector2: def __init__(self, x, y): self.x = x self.y = y If I then wanted to add two Vector2 variables together, I could write a utility function to do it, or in the class definition put: def __add__(self, other): return Vector2(self.x+other.x, self.y+other.y) Which will then allow me to write in my main function: a = Vector2(1,2) b = Vector2(3,4) c = a + b # Vector2(4,6) Works with custom behavior when printing, converting a class to string, and all other kinds of interesting behavior. [This talk by James Powell](https://youtu.be/cKPlPJyQrt4) is the perfect example of this and other amazing functionality built into python.
Tbh, I prefer 80 chars. It reads better on GitHub/GitLab if you read in side-by-side mode 
I can fit more than 4x 80 side by side on my screen though... But the 80 char debate is age old. I like /u/jcampbelly answer [here](https://www.reddit.com/r/programming/comments/8v9zre/does_column_width_of_80_on_coding_make_sense_in/): "While I agree with this in principle and try to follow it, I find that if following this convention leads to less readable code, then it should yield. I don't agree with shortening function or variable names (to names that don't clearly explain what you're reading), or breaking up function calls by groups of parameters just to fit arbitrary line lengths (unless it looks cleaner), or refactoring code purely to fit a line length (which would not otherwise result in more readable code or a better design). Those are missing the point of the convention. I have started using gutters at 79, 99, and 119 as "green", "yellow", and "red". I try to keep code 95% in the green, 4.5% in the yellow, and only get into the red or beyond if I find myself pulling my hair out or reaching behind my head and under my armpit to put something in my mouth. If I've spent 10 minutes trying to break up a line, I might just move on to more important problems." 
I'm an advocate for more than 80, but I'm not sure exactly what it \*should\* be
That's almost Perl-ish. I love it.
vecorizing functions for making them efficient when used in pandas. see numpy.vectorize. prototyping code in jupyter understanding when to use yield
Good idea will do 
or this, which is more idiomatic and readable list_a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] even = (number for number in list_a if number % 2 == 0)
Good catch thanks! 
I tried not to imply that it was actually infringing in any way, simply that the similarity would scare me. 
Why the tuple comprehension instead of the list comprehension?
My laptop makes and receives calls. It's not a phone.
Tests, unit and functional/integration, with TDD as icing on the cake. Watched a scientist few days ago on a TV show saying "would give up on science if there's no internet" - definitely would give up on programming if unit testing isn't available.
Are they identical objects (i.e. \`10000000 == 10\_000\_000\` but does \`10000000 is 10\_000\_000\` return True?)
I misunderstood your "run" mentioning in op.
Is there a particular reason? Preallocating memory like this can be useful for lists of known size where you would otherwise have to append to the list each time, which can be slow for large objects.
Ahhh, the comfort of Comprehensions
So... this is fairly common? I had the same script running in spyder, jupyter and command line, the time it took to run in spyder was considerably longer than the other two. I honestly though there was something wrong with my installation of spyder... 
is there any progress :)
That's a generator comprehension, not a tuple. Has the same lazy effect as your filter().
True
Yep!
Thanks for this information!
That's not idiomatic. Idioms aren't unnecessarily roundabout
Well, I like your license! 
OK I've seen method chaining in other programming languages and both constructs looked the same to me. I didn't even notice the escaped lines I just took it in all at once and it looked reasonable. Lately for formatting I let black and flake8 worry about it and see what they complain about.
eli5 this one?
It is called generator expression. It is more memory friendly (although cannot be reused)
Could you explain why? :)
[MyPy](http://mypy-lang.org/) with good editor support (try [flake8](https://pypi.org/project/flake8-mypy/). Saves me from all sorts of silly type errors which unit tests *could* catch, but with much more time lost.
The code looks mostly fine. However, I really recommend getting into the practice of writing a docstring for every function. When I write code, I often write the docstring before even writing the body of the function, it helps to crystallize what I want the function to do. And in try-except, always specify the exception type you're catching. With a bare-bones except-clause, it will catch also things like keyboard interrupts, which is unlikely to be what you want. A small tip, instead of: with open(comp, 'r') as baseL: with open(newLog,'r') as newL: you can write: with open(comp, 'r') as baseL, open(newLog,'r') as newL: 
Sending notification is never the difficult part. Is all the things that's around the notification that hard to get right. Do the user get guaranteed delivery like android? Or like iOS, you only get one per app? Or windows, Lol whatever mate, here's a notey from 3 hours ago. 
We have an LTE add-on module that we'll get to. Just not immediately.
I use environments, yes. My questions was just about Anaconda in general.
"else" conditions in for and while loops are pretty useful for catching edge cases when you're iterating. This might not be the best example, but it can be pretty useful in sliding window problems. def add_two_numbers(self, l1, l2): dummy_head = ListNode(None) current = dummy_head carry_over = 0 while l1 or l2: _sum = carry_over if l1 is not None: _sum += l1.val l1 = l1.next if l2 is not None: _sum += l2.val l2 = l2.next carry_over = _sum // 10 if _sum &gt;= 10: _sum %= 10 current.next = ListNode(_sum) current = current.next else: if carry_over: current.next = ListNode(carry_over) return dummy_head.next 
Qgrid and hinterland extensions for jupyter
That isn't so bad. The dailywtf part, imo, is the loop that acquires a file handle once per line.
Why the second as opposed to the first? Wouldn't that mean for newL I'd have to run a newL close() inside of the first with open to properly close the handle to newL?
Right, I usually just use environments for that, but, I can see how it would be nice for a company to have them all neatly bundled.
\# Makes string formatting much easier to read `this = 'hello'` `that = 'world'` `template = '{this} {that}!'.format(**locals())`
Clean Code really made me rethink my coding style. It also made me appreciate PEP 8 more. 
That makes sense, thank you!
No, both handles get closed automatically, they are both part of the with-block. The second way of writing simply avoids the extra level of indentation. 
You can chain a lot of methods with numpy and pandas. Same for SQLAlchemy.
 list_a = list(range(1,11)) 
Also SQLAlchemy!
Ah okay, gotcha. I'll keep that in mind! Thank you! And thanks for the feedback. 
I discovered these some time ago, but annoyingly I've never had a chance to properly use them (not yet anyway). &amp;#x200B; I do like how else pops up everywhere though: Error handling: try: foo() except: bar() else: foobar() finally: barfoo() Loops: for a in b: if c: break else: foo() #---# while a: if foo(): break bar() else: foobar() Conditionals: if a: foo() else: bar() # (and elif) Not to mention list comps, lambdas, and literally everything else in python. Moral of the story: if you discover something in python, check if it has an else clause.
OrderedDicts are useful for a variety of problems. def max_substring_k_distinct_chars(s: str, k: int) -&gt; Tuple[str, int]: """ Runtime: O(n) Space: O(k) """ seen = OrderedDict() left = max_length = 0 right = 1 max_substring = '' for i in range(len(s)): # If the character is already in seen, # we want to move it to the end then # update its value to rightmost index. if s[i] in seen: seen.move_to_end(s[i], last=True) seen[s[i]] = i if len(seen) &gt; k: # popitem() is constant time because OrderedDicts # are doubly linked lists. _, left = seen.popitem(last=False) left += 1 if max_length &lt; (right - left): max_length = right - left max_substring = s[left: right] right += 1 return max_substring, max_length
That's interesting, I never had too much of a problem with packages and their dependencies, but, I just recently started using Python so maybe things have changed.
I do not believe `x is x` is guaranteed to be `True` for integers. The underscore syntax means exactly the same thing as if they weren't there to begin with: https://www.python.org/dev/peps/pep-0515/
Yes. great question btw.
because method chaining is really common. You might want to do x_Ty = dataframe.apply(some_function).fillna(0).values().T.dot(other_matrix).inv() Which is less readable than x_Ty = (dataframe.apply(some_function) .fillna(0) .values() .dot(other_matrix) .inv() ) 
This will s why I hate snake case for variables, I personally think heightCm looks better even though in python I would do how you‚Äôre doing it.
Aha I did not know that - if I turn them both into functions I get \~100ns and \~300ns so an appreciable speedup (though I think I do prefer the readability of 2\*\*n)
Yep, typehints make code much more readable and maintainable and they'll win you points in interviews. 
Wrapper functions - I use them for logging, pre and post processing during testing, timing execution. https://wiki.python.org/moin/FunctionWrappers
Python 3.6+ only.
Holy shit, i did not know Python allowed this. Been using it in Rust for a while now, not sure why I didnt think to chdck
filter is exactly the same as a generator comprehension, it's just a different style more similar to what most other programming languages have. 
Nobody here is preallocating memory. Preallocating memory would look like \`\[None\] \* 10\_000\`. But Python lists grow pretty efficiently, I wouldn‚Äôt bother.
I like Raymond's idea (in his talk about pep8), when the line gets longish (around 100), think about splitting it up.
Next tip: Don‚Äôt use IDLE. Use a real IDE (like PyCharm) or good IDE-like editor (like VS code)
Wow, so I can now think to have fixed everything, while I've only fixed the failed tests and broke the correct ones.
You mean making a singleton class for storing data? 
Using Pandas to load data into SQL databases. Simply create a connection then use df.to\_sql(). Easy. Used this in a class for beginners and they were shocked. 
Could I port this to Android? I've been looking for a project lately.
Replying to myself :-) import re print(re.sub(r'x', lambda x: r'\n', 'x'))
Nice, there is a button in pycharm to format the code, do you know if this is any better?
Comprehensions. While not quite as potent as .NET's LINQ, for everyday filtering of a list, they are unbelievably handy. Plus, they just straight up look better.
You should do the full suite after making your incremental changes. It's really helpful: Pycharm gives you a button to do this as well.
Something that hasn't been mentioned as much and is a bit more on the computational efficiency side is using generators like `xrange` instead of `range`. This results in quicker computation and uses less memory as the entire list isn't computed at once but only when it's called; however, the generator state does need to be stored so using generators everywhere can also use up a lot of memory 
I think I found a better solution using lambda, see my reply below.
[Whoah...](https://gph.is/1ILieMq)
When I learnt to handle exceptions! Try: Except ValueError: Or whatever error it is, changed everything!
I'm pretty sure `xrange` (along with `izip` and other similar functions) were removed in Python 3 and took the place of the normal `range` and `zip` functions.
Map, filter and reduce instead of list comprehensions.
Hrm, I like this. What implementations have you seen / used?
I found out that if you need a list, not an iterable, comps are sometimes faster, even though they don't look like they are.
This is awesome! I have been planning to do something like this but with a clock that rewrites itself. Definitely want to check out your code.
Oh good point - you're right about that: Python 3's `range` is actually a generator and equivalent to (but more robust) than Python 2.X's `xrange`. I'm still on 2.7 haha 
The bigger point is that in py3 filter gives an iterator, so the evaluation is done lazily. The list comprehension is strict. A generator expression would also be a lazy implementation. 
You forgot the ! in your title.
For me, fully learning pandas.
The pattern defined here is primarily found in Data Science style programming where the API calls return the object rather than a value. I would argue that this style is technically not pythonic in the sense that traditional python methods would return values or None. This is a style of API writing you see that's prevalent in a Java interface, however, and that style has infiltrated data science APIs.
Pycharms formatter has a lot of different options and doesn't wrap consistently (or prettily IMO). Blacks code wrapper is very consistent, since there are only two possible wrap options it does. Basically, if you're working with other people, you don't have to worry that you might both have different formatter options and get into auto-format edit wars. Black has very few options, so it's consistent for anyone that runs it.
You'll find that as you age, you're going to want a larger font size.
I also like using Python's Collections's `defaultdict` and `Counter` classes. `defaultdict` allows you to create a dictionary that applies a `default_factory` function to add a new object to the dict for a key that isn't there. For example: `letters_names_dict = defaultdict(list)` `letters_names_dict['R'].append('Ryan')` will add a new list to the dictionary for the key 'R' so that you can automatically append to it in the same line. `Counter` is useful for keeping counts of objects (letters, strings, etc.) which you can use a `dict` to do anyway, but `Counter` comes with a handy `most_common` method that returns an ordered list of the most common elements in descending frequency along with their counts. Lastly, I also prefer using the `dict.get` method to provide a default value for a dictionary if there isn't a value for that key. For example `letter_frequency_dict = dict()` `letter_frequency_dict['a'] = letter_frequency_dict.get('a', 0) + 1` 
There are also no restrictions on where they can appear (eg doesn‚Äôt have to be every third digit), or that it needs to be base 10. Hex color: `0xab_cd_ef` Binary number: `0x0110_1001`
what is **locals() and is there an advantage to using that over f-strings
You probably want to do `__dict__.update(kwargs)`. __dict__ is actually a special dict.
I really appreciate the use of the any/all/next functions to simplify a variety of common patterns while dealing with collections. It's dramatically more readable to me; here are some examples: Any: negatives = False for i in numbers: if i &lt; 0: negatives = True ---- negatives = any(i &lt; 0 for i in numbers) All: fully_backed_up = True for system in systems: if system.has_backup is False: fully_backed_up = False break ---- fully_backed_up = all(system.has_backup for system in systems) Next: first_vowel = None for letter in word: if letter in 'aeiou': first_vowel = letter ---- first_vowel = next((letter for letter in word if letter in 'aeiou'), None)
If you are using recursion, then memoization. &amp;#x200B; [https://www.python-course.eu/python3\_memoization.php](https://www.python-course.eu/python3_memoization.php) [https://www.ibm.com/developerworks/community/blogs/jfp/entry/Python\_Meets\_Julia\_Micro\_Performance?lang=en](https://www.ibm.com/developerworks/community/blogs/jfp/entry/Python_Meets_Julia_Micro_Performance?lang=en) 
Isn't `numpy.vectorize` just an unoptimized for loop?
What author? I get multiple results
I also use auto-format-on-save with black and love it. The main advantages over just using the formatting built into pycharm are two-fold: - Black is much more opinionated than any other formatter I've used. If there are multiple ways something could be formatted, Black will pick one for you and keep your code consistent. - By making the formatter entirely automatic, you train yourself not to think about formatting at all. In principle, you could have just habitually pressed the reformat button regularly, but my experience is that you always end up making small edits by hand rather than trusting the formatter. The combination of fully automatic formatting and a highly opinionated formatter really works wonders. You just stop worrying about formatting except in unusual cases.
But why wouldn't you just escape '\\n' the normal way, with '\\\\n'?
Use itertools.repeat(None, count) in place of range() Reference: https://stackoverflow.com/questions/46996315/a-better-way-for-a-python-for-loop
The above is a minimal example. The actual code is part of a templating system and the \n comes from outside. I should have explained this better.
collections.deque, collections.defaultdict
Oh shit. Didn't know that. 
List comprehensions. 3-6 lines of For loop? *Not anymore!*
\*\*locals() return a dictionary of you local scope, in this case it returns: {'this': 'hello', 'that': 'world'} I'm in 2.7(industry imposed), so I'm not familiar with f-strings.
That was something I missed from Perl. I'm glad it's back!
\*\* is a dictionary unpacking operator. locals() is a function that returns a dictionary of all local variables in scope. afaik there isn't an advantage, except that f-strings are only available in 3.6+. for anyone who isn't aware of f-strings, an example: f"{this} {that}" would do effectively the same thing as the OP
Use `--ff` to reorder the tests based on the previous attempt: run _failed first_, and not failed afterward.
Especially if there is a lot of text output: Idle is notoriously slow in output!
`numpy.vectorize` doesn't speed up your code. See the Notes section in the docs. Using vectorized Numpy and Pandas functions will though.
I think you borked the whitespace here. And your example is making heavy use of it. 
Huh. I'm gonna try this today.
Mother of God
As someone who just in the past year has gotten into testing (after having developed things non-tested or manually tested in the past); you're 100% right. A bunch of our legacy code here is 100% without *any* tests... and now when people want to make changes to it, upgrade the frameworks, etc. it's such a crap-shoot of "maybe it will work, maybe it won't" All code going forward where I'm at has to be 100% tested! It's already saved my butt in particular a couple of times and the project roll-outs have been *way* smoother this way. Bug that have been found are taken care of because a few tests are written to reproduce it, then the code is changed so that bug is squished. Makes changes to the code take minutes, instead of hours. I would argue that utilizing tests and logging are two of the most fundamental things people should look at *first*. 
But I can‚Äôt read your code on my Amiga 40 column TV. /s
In Python 3.6 and later you'd just write `f"{this} {that}!"`
Along the same lines I always include data type hints in my variable names. Then you know what it is when you pass it around. 
Only comment the least apparent thing. Otherwise, rely on naming schemes and simplistic code writing. You really only need to comment when you're doing something pretty non-standard.
From the docs: &gt; The vectorize function is provided primarily for convenience, not for performance. The implementation is essentially a for loop.
Try adding logging into this and you've suddenly got a very powerful combination so you know of bugs even before people are submitting bug reports or complaining about something being broken. Add tests to that - and you end up with bugs found, tests written, bugs fixed and deployed with confidence before users even have a chance to recognize it was a 'thing'!
It's one of the many strenghts of Python: Making custom types feel as if they are built-ins. 
Next is confusing me, how exactly does it work?
I also find that old people usually make the rules ... but you're probably right
I don‚Äôt like how Black doesn‚Äôt give you the option to have it ignore some lines. It doesn‚Äôt always make good formatting decisions, as [this SO demonstrates](https://stackoverflow.com/questions/53950465/how-to-deal-with-ugly-code-formatter-output-black). 
**locals is just the unpacking of a dict of available variables in the current scope.
I use [measurement](https://github.com/coddingtonbear/python-measurement) for unit aware types. Then I can write height = Distance(cm=0) and get out whatever units I want later print(height.in, "inches")
Using **pipreqs** to create requirements.txt Not really that efficient if you are using just a couple of packages, but it‚Äôs great to make sure you won‚Äôt forget any if you are using 10+ packages used by different files in your project.
This isn't guaranteed even for the *same* constant - i.e. `10 is 10` may be False. CPython caches and reuses integer objects, but that isn't required by the spec and there's a [proposal to allow disabling it for debugging](https://bugs.python.org/issue34867).
Most people know the wonders of list comprehensions, but do you know you can also do dict and set comprehensions with the same syntax?
A lot of languages have had this for a while. Ruby since the beginning. 
Absolutely. There used to be a school of thought saying that it was good to have exactly one return statement in each function. Nuts to that. I know which of your examples I‚Äôd rather write unit tests for, or have to troubleshoot at 2AM.
That's a really great package, thanks.
I'm sure most of you probably do this already, but when I type any sort of bracketing "(), {},..." I always type both together then hit the back arrow and begin typing the contents there. This ensures you always close out and also speeds up your toying a little too. Or you could just use a text editor that auto closes for you. 
As nice as this is, you really shouldn't be implementing your own vector. It's far more efficient to just use numpy. 
I'm brand new to Python and I'm looking to get my feet wet with a simple app to reorganize a CSV file. Could you recommend some good tutorials for CSV manipulation and for building a UI for a Python application?
Dynamic programming FTW!
I don‚Äôt implement my own vector. It was just an example off the top of my head. I typically use this more for the __repr__ function, which returns a string that is then printed. Sticking to the same example, it would be: def __repr__ (self): return f‚ÄùVector2({self.x}, {self.y})‚Äù So print(a) would output Vector2(1, 2) If I were actually going to write my own Vector class, I‚Äôd probably just use C++ tbh
I'm newbie to programming as a whole bit I was so happy when I found out that Pandas let's you group by two columns at once and can run functions alongside it. Something like: df[col1, col2].mean()
I do this all the time when I'm going to be appending to a list in a loop or adding key-value pairs to a dictionary. What other way is there to accomplish this? 
Instead of doing: my_regex = re.compile(r'[0-9]+') def match_func(text): my_regex.match(text) or def match_func(text): my_regex = re.compile(r'[0-9]+') my_regex.match(text) do def match_func(text, *, my_regex=re.compile(r'[0-9]+')): my_regex.match(text) Why? The first version breaks function unity by using a global variable and it's hard to use another regex if you need to. The second version recompiles the regex at each function call which can be costly and it's still hard to change the regex if you need to. The third version initializes the local variable my_regex only once at function declaration, can be replaced easily if you need to at a specific function call and since you use ", \*," in the argument line it needs to be replaced explicitely using *match_func(text, my_regex=r'new_regex')*, it won't be overwritten by accident. This is more flexible, more efficient and doesn't break function unity.
It's mostly that we have to account for the users with disabilities as well. I used to work with someone that would need their text editors and shells to be huge. Having the 80 character limits on all our code greatly helped him not having to scroll all the time
Save your struct objects. Better yet, use numpy‚Äôs frombuffer. Don‚Äôt make the excuse of the data is a mix of ints and floats; cast it twice and slice it.
Splitting string where I need both parts but I'm not sure they'll be there. Instead of `split()`, I use `partition()`, which returns `before`, `separator`, `after`: before: names = full_name.split() first_name = names[0] if len(names) &gt; 1: last_name = names[1] after: first_name, _, last_name = full_name.split() 
I had no idea you could do this
Is it this? [https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship-ebook/dp/B001GSTOAM](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship-ebook/dp/B001GSTOAM) &amp;#x200B;
Another way would be to wrap all of your great work around [apprise](https://github.com/caronc/apprise). You could then support all kinds of endpoints. Either way, great job!
I think to use pandas, which full well admits they deprecate parts of the API frequently, not to mention it‚Äôs not yet at 1.0, is unfair. That‚Äôs pretty prominent in the documentation. I also think it‚Äôs in bad taste to complain about packages. If something isn‚Äôt documented correctly, you make an issue or submit a pull request. Go to the people that can do something.
Yeah, __repr__ is very useful to ovveride. However, even in C, you shouldn't implement your own vector. Something like glm will donthe calculatioms in parallel, as one cpu instruction, and the syntax for doing that yourself is very convoluted. 
Using fast\_executemany with SQL Alchemy, pyodbc and pandas to speed up exporting to SQL. &amp;#x200B; Using R to read large Excel files, export them to SQL, then read the tables from Python - [huuuge speed improvement](https://stackoverflow.com/a/55514869/4045275) &amp;#x200B; Using pandas.to\_datetime() after importing a column as string can be orders of magnitude faster &amp;#x200B; using parquet feather etc to store large tables &amp;#x200B; Buying PyCharm and using it for refactoring and many other things
Unfortunately the markdown parser of "old reddit" can differ from the one in "new reddit". Old Reddit: https://i.imgur.com/6bVal53.png New Reddit: https://i.imgur.com/z09Ve7d.png
Robert C. Martin
Woot I've been using jupyter floor a lot of my engineering homework and unit conversions have been somewhat of a pain point since switching from Mathematica. Does this work with numpy?
&gt; While not quite as potent as .NET's LINQ How so?
that's a good idea, but I would actually recommend sticking to the SI base units. Meters in this case then you don't need to think which unit to use and convert between them, you can always format them as cm when showing them to the user.
Lambda expressions and tiple packing/unpacking 
Why would anyone need this? All we did was watch you step through the install wizard. 
In my country it is required by law to publish the number of stocks your shareholders own. So I can find anyone that is not hidden (some investors are, not sure why). In the US, I think you can only find shares owned by executives and institutional investors in EDGAR.
Peppering function docstrings with Doctest examples even if **not** running doctest.
I beg to differ. The title of the post was specifically about Python for data science, not Python for other purposes. I don't see how one can do any kind of meaningful data science or data analysis in Python without pandas. I also don't see anyone shouting from the rooftops that Python shouldn't be used for data science till pandas reaches v 1. Oh, and numpy [deprecated](https://docs.scipy.org/doc/numpy/reference/generated/numpy.random.random_integers.html#numpy.random.random_integers) random.random\_integers in v 1.11.0 . None of this is the end of the world for me, who mostly use these tools for one-off analyses, but if I had to use them for some kind of production system, I'd be terrified. &amp;#x200B; **As for the documentation, please allow me to clarify. I fully appreciate there is a sense of entitlement I strongly disagree with: I didn't pay for the software and I am not entitled to anything. My point was different**: in deciding which tool to use, assessing the quality of the documentation is, IMHO, a very important factor, because the most powerful tool is close to useless if it must take you days to find out how to do stuff which is explained very clearly in the docs of another, less powerful tool. For example, if someone can afford Matlab and Matlab covers most of their needs, then the quality of the documentation becomes a crucial decision factor. In other words: **the point is not that users are entitled to anything. We are not. The point is that we should have a realistic appreciation of all the difficulties we, as users, will face because of often appallingly poor documentation - even if, again, we are not entitled to perfect documentation.** &amp;#x200B; I am, in fact, writing an update to the documentation I'd like to propose to some data science packages in Python. However, the process is not straightforward because not everyone is familiar with git, pull requests etc. With R it is even worse, because packages tend to be maintained by single individuals who may be more "jealous" and less open to any kind of suggestion than a large group working on something like pandas or matplotlib.
Yes I just did today. Now I need to figure how to scrape the data.
Wow never seen this! This looks really cool :) But yeah this use application isnt very practical just thought it was cool how easy it was to get it working 
Did you write it in LaTeX?
Yes, LaTeX was a godsend. I used a template from DTU Compute based on the memoir class, and did my writing in Atom. 
Even on a chat system, wouldn't you want the server to be completely independent of the client? These notifications works be great for debugging purposes while you're still running it locally, but would bring in unnecessary imports and dependencies once deployed.
I would think so, definitely ...the OpenCV library was a little tricky to install, but other than that it's not really *that* complicated. Can imagine a neat app where you draw on the screen and it automatically copies it to the Etch-A-Sketch.
Today we also have huge monitors tough... So 80 is still a bit small. There is some limit tough, way-too-long lines are generally not readable, however that limit is &gt; 80 chars.
These are 'hallucinations' or images generate from the latent space. No training data is shown here. It was trained on 1500 128x128 images. But the 128x128 images were cut outs from only 3 high resolution images 
Yeah there arent many practical use applications for this but I just thought it was cool I could receive GUI notifications in 4 lines (import, function, calling function)
Next simply returns the first item found that matches the criteria. The most tricky part is the optional second argument, which is used if there isn't a match found in the iterator provided. Here if the word was `dry`, for example, the call would return None because none of those letters are in `aeiou`. You can use next() without this argument, if you want, but it will raise an exception if no match is found. So only do this if it would actually be a real issue if you don't match.
Another way is to do like CLHEP/Geant4 (C++), where you generally do things like ```double length = atof(inputstring)*cm``` where `cm` is a globally defined constant which is given in terms of the base units (meter I think). Then to output as mm, you do: ```cout &lt;&lt; length/mm```
Plotly definitely plays well with this sort of thing, check out [https://dash.plot.ly/](https://dash.plot.ly/) for a Python framework that lets you build entire apps with no JS required :)
I think it's possible to run it on a raspberry pi however you might not get 60 fps. This video took me about 30 minutes to render because each frame is made separately then stitched together in post to make the movie. The procedural generation does not take much computational power but I did it 16x a frame for 60 fps. You could precompute the frames, then interpolate between them to simulate the animation at a lower frame rate. 
**SimpleNamespace** \- found quite useful. Better than dicts for some use cases.
Thanks! It started out as a photo-frame to auto-sketch a new scene every day, but then it got out of hand :D The plotter code is probably most interesting to you, particularly the "tracking" adjustments needed to keep the image lined up when changing direction. 
You are then forced to resort to floating point when dealing with anything smaller. This is impossible in real life.
Word to the wise: Don't store any form of sensitive credentials using this. Everything is stored in a file named `.rqs_storage` in your home directory using your current `umask` for permissions. Data is only pickled with no encryption. `simplekv` has an encryption option but I can't really speak for its effectiveness.
Wheeze!
I will try to use it in my projects now
I stick with 90 chars. It feels quite comfortable. 80 is too short for my taste
I think its uncompromising nature is a win overall, but yeah I don't like some of its decisions either. For instance, I may be in the minority here, but I wish it would drop this step: &gt; If [the code doesn't fit on one line], Black will look at the contents of the first outer matching brackets and put that in a separate indented line. &gt; # in: &gt; ImportantClass.important_method(exc, limit, lookup_lines, capture_locals, extra_argument) &gt; # out: &gt; ImportantClass.important_method( exc, limit, lookup_lines, capture_locals, extra_argument ) and jump right to: &gt; If that still doesn't fit the bill, it will decompose the internal expression further using the same rule, indenting matching brackets every time. &gt; # in: &gt; ImportantClass.important_method(exc, limit, lookup_lines, capture_locals, extra_argument) &gt; # out: &gt; ImportantClass.important_method( exc, limit, lookup_lines, capture_locals, extra_argument, ) Personally, I find the extra lines worth avoiding the disparity you see in that SO post you linked.
That's why all naming conventions are too simplistic to be followed as is, and you need to adapt them to make things as clear as possible: `wallHeight_cm`.
You can also use scientific notation, so you could rewrite that number as `1e7 `
brb, I need to stop a rocket launch
Your submission has been automatically removed. Your reddit account must be older than 2 weeks before you can post. No exceptions. You can repost this when your account is old enough. This helps prevent spam. **If you need help with Python** see r/learnpython or r/learnprogramming. **WARNING** Reposting this under a different account before 2 weeks risks getting both accounts banned as well as domains in the post. *I am a bot, and this action was performed automatically. Please [contact the moderators of this subreddit](/message/compose/?to=/r/Python) if you have any questions or concerns.*
Using `zip` and the `itertools` library effectively really cuts down algorithm runtimes.
The link for `Behave` is to http://www.behavioralframework.com/. Which is about "autism and related disorders"
At least for me some inspiration came from Google's deep dream project. I work in academia doing space research and use machine learning for my job so it was a natural progression. I'm a big fan of this YouTube page: https://www.youtube.com/user/keeroyz for getting ideas of how to apply new machine learning algorithms
Soon.. I'm working on a live wallpaper of it 
It just advances the given iterator by one. Since the first argument in the example is a generator expression, `next` will run that generator until it `yield`s the first time and return the `yield`ed value. The second argument is a default value in case the iterator is completely spent (raises a `StopIteration` exception).
[Link to Raymond's talk](https://youtu.be/wf-BqAjZb8M)
If you literally are calling `'blahblah'.format(**locals())` then I agree, but most of the time I'm doing something like: `'blah{thing}blah{otherthing}'.format(thing=variable_with_long_name, otherthing=other_variable_with_longer_name)`. I like to have shorter variables in templates but still use long descriptive vars in the rest of my code. 
I'm going to buck conventional wisdom here and say I don't agree. I certainly don't agree that the same thing in less lines is better. In fact, the opposite. The code is identical in speed and function, but expanded version is far more debuggable and comprehensible to virgin eyes. List comprehensions, when used like this, are convenient for lazy programmers but bad for debugability, maintainability, and collaboration.
I split it up, not because of a width limit, but because it's easier and quicker to see exactly what's going on.
I've put up a talk on the topic now if you're interested: https://reddit.com/r/Python/comments/baszml/mutation_testing_theory_and_practice/
&gt; If I've spent 10 minutes trying to break up a line, I might just move on to more important problems. Your IDE can do that for you.
Check out beautiful soup. Start with these videos: https://youtu.be/4UcqECQe5Kc https://youtu.be/ng2o98k983k
I have a talk up now: https://reddit.com/r/Python/comments/baszml/mutation_testing_theory_and_practice/
To improve your code you don't need any to know any special tricks, just start reviewing a code of others and you will see how quickly it will improve your code.
yes but then you can just use NumPy and np.float32 of np.float64 thats enough for real life.
AsyncIO
&gt;The pattern defined here is primarily found in Data Science style programming where the API calls return the object rather than a value. &gt;I would argue that this style is technically not pythonic in the sense that traditional python methods would return values or None. This is a style of API writing you see that's prevalent in a Java interface, however, and that style has infiltrated data science APIs. It sounds like you're talking about the 'fluent interface' pattern. From [this discussion](https://softwareengineering.stackexchange.com/a/168247): &gt;Suffice it to say, returning self is the definitive OO way to craft class methods, but Python allows for multiple return values, tuples, lists, objects, primitives, or None. Insofar as Python is OO, I'd say returning self is Pythonic, however [Guido disagrees](https://mail.python.org/pipermail/python-dev/2003-October/038855.html): &gt; ...I'd like to reserve chaining for operations that return new values, like string processing operations...
`next(&lt;iterable&gt;)` simply returns the next item in the iterable x = [1, 2, 3] next(x) # 1 next(x) # 2 next(x) # 3 
You can skip the live demo, the gods weren't kind to me so it went a bit sideways. I figured out the problem though: there's Cython in that code base and I didn't force it to use the python version. 
Welcome to r/selfpromotion
[astropy.units](http://docs.astropy.org/en/stable/units/) is pretty good for this.
See this isn't actually that bad. I could see using something like the first line when you are doing a costly operation and want the file to be updated frequently to check progress.
They're less likely to be lies if you focus on the *goals/why* of the code that follows rather than the *implementation/how* of the code: **bad**: # check if actual user pages exceeds maximum pages if actual_pages &gt;= maximum_pages: print("Warning: your document should only be {max} pages long!".format(maximum_pages)) # increase maximum pages by 1 maximum_pages += 2 The code lies! **Better** # users always go a little beyond the maximum, # so allow some leeway but print a warning if they hit the max or exceed it if actual_pages &gt; maximum_pages: print("Warning: your document should only be {max} pages long!".format(maximum_pages)) maximum_pages += 2
Ancillary, but [these people had a blurb](https://www.teachingpython.fm/) in a recent Talk Python episode. Geared for your intended age bracket.
Ruby stole it from Perl!
Finding `continue`. I went years without using it and it can keep your code from "trailing off to the right". Instead of: for w in list_of_w: if meets_some_complicated_condition(w): x = do_something_with(w) if meets_some_other_complicated_condition(x): y = do_something_with(x) if meets_some_final_complicated_condition(y): z = do_the_final_thing_with(y) You can do: for w in list_of_w: if not meets_some_complicated_condition(w): continue x = do_something_with(w) if not meets_some_other_complicated_condition(x): continue y = do_something_with(x) if not meets_some_final_complicated_condition(y): continue z = do_the_final_thing_with(y) to keep your conditionals from becoming nested.
I think it‚Äôs actually older than that. Ruby is surprisingly old too. 
You can just do `pip freeze &gt; requirements.txt` assuming you're using virtualenvs (if you aren't, definitely look into it - it's easy to set up in Py3). There's probably a file output flag you can pass if you're on Windows too.