somewhat how _responsive design_ works on web dev
MVC, I like it
Somebody gets it
I ended up [writing my own](https://github.com/prahladyeri/http-live-simulator) using Node.JS as it seemed simpler.
You're new life as a backend developer will be recycling those core concepts endlessly. Sometimes you'll test out some new wizbang tooling or library but, for the most part, all projects are slight variations on the core you described. A lack of motivation is the first sign of maturity imo; take this opportunity to think up something that will truly challenge you using what you know now. Try to make it something that will improve your life in someway to help keep you interested. Good luck and congrats!
What theme are you using?
I'd recommend to stay away from self.sender(), because I've had it mess up before in some complicated cases. Instead, you can just connect the button press to a lambda (or a partial, if you want) in order to give the function a little more information: RedB.clicked[bool].connect(lambda pressed: self.buttonClick(['R', 'g'], pressed)) GreenB.clicked[bool].connect(lambda pressed: self.buttonClick(['r', 'G'], pressed)) def buttonClick(self, colors, pressed): for color in colors: arduino.write(color.encode()) 
VS Code * To me, VS Code is 80&amp;#37; of the functionality of PyCharm at only 30&amp;#37; of the RAM usage. It just feels snappier, which is a huge UI "feature" in my book, and I didn't like paying those systems resources every time for functionality I didn't use. * VS Code never forced me to answer questions about where to store project and configuration files like PyCharm did. If you want it to be just a text editor, it'll do that. * The Vim bindings were much more complete and faster in VS Code compared to PyCharm.
Don't forget [spacers](http://doc.qt.io/qt-5/qboxlayout.html#addSpacing), which help keep everything aligned correctly regardless of window size.
&gt; I dont like most microsoft-related You should re-evaluate that opinion. The MS of today is vastly different than the MS of five years ago.
I'd recommend setting up personal website. Every hobby programmer should have one IMHO. Most people do this in a much higher level like WordPress but you will have much more combustibility as you will be building everything from scratch (or from cool templates you found on Stack Overflow). Set it up in Azure or AWS (depending on your tech stack) so you can access it form the web. Make games, web apps, APIs. The world is your oyster! 
quicktype converts JSON, JSON Schema, TypeScript types, and GraphQL queries to code. It now supports Python as a target language, too, in addition to Swift, Go, Java, C#, JavaScript/Typescript/Flow, Elm, Kotlin, C++, Ruby, Rust, Objective-C, and JSON Schema. It gives you the option to generate code for: * Python 2.7 * Python 3 and up * Python 3.6 and up with type hints (typechecks with mypy) * Python 3.7 with data classes I’m sure there are a few kinks that need to be ironed out, so we’d love to hear your feedback. Cheers!
Yep. I switched from atom to code and I haven't looked back. Having a terminal within the IDE is a major plus.
I’m not a heavy user because my work is mostly python using pycharm. But I’ve started using it more this week for C. Every plugin I had to install is in the marketplace that’s available from the program and easily installable. 
Vim. The answer is always Vim. Unless it's not, and then the answer is Emacs.
Not the OP but been learning qt framework, can you detail a bit more about the when self.sender() misbehaves? I have a gui that can have any number of some ui elements, so to figure out which one sent a signal I have to use self.sender()...
Try: pip install setuptools pip install setuptools --upgrade
You forgot the /s
PyCharm; all things Jetbrains
Nano
Tried that. No difference.
[Pywal on GitHub](https://github.com/dylanaraps/pywal)
IntelliJ IDEA is heavily inspired by Eclipse; almost identical but with some nice additions and generally better performance in my experience. IntelliJ has been forked into a dozen other IDEs, including PyCharm. It is absolutely the closest you can get to Eclipse, as well as probably being the best full IDE for python available.
There are functions for drawing boxes and the border window. You might be able to paint those on after displaying the grid. Keeping the debug line outside of the "window" could be tricky. But there are the functions border, box, vline, and hline that could be used. 
Just noticed you are running Python 3.7. https://www.pygame.org/wiki/PythonVersions Doesnt seem to be supported past 3.1. Could be the reason. Using brand new versions for learning isn't the best, I would go back to 3.6.4 or 2.7.x for better compatibility with older packages. 
Yessir it does. Here'ss a [screenshot](https://imgur.com/a/yepLkxc) of my whole vs code window
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/JkLkbV3.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e1nwf4h) 
The best IDE for python in 2018 is the variety of options available. Some people work well with a more graphical interface and an "everything available at once" layout. Others (like me) suffer mightily from "clutter." Beginners need a little more hand-holding, while long-time programmers may find the hand-holding distracting. Some people just want their IDE to work out of the box, while others find delight in being able to program the IDE itself. Some people are willing to spend hours mastering arcane keyboard shortcuts and vim's "composable" command structure in return for Real Ultimate Power, while others don't find that a good look at all. Different IDEs are designed for very different kinds of users. That's one reason that most *good* commercial IDEs provide a reasonably generous tryware period and/or freeware "community" version. Try a few different ones. Think about how well it suits your style and current needs.
oh yeah vscode has a plugin manager on sidebar that you can toggle along with your workspaces and all that. Here's a [screenshot](https://imgur.com/a/yepLkxc) for reference.
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/JkLkbV3.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e1nwi1o) 
I tried to get into PyCharm but it's a little too basic for me. I use C# and python so having vscode and just being able to add the plugins that I need for my specific tasks and use cases
Tbh you should just plow ahead and make it, making it work for specific targets as an exercise so you can figure out how to scrape more difficult pages You'll start seeing ways to improve or increase generality
I posted about one of these recently but I will take this opportunity to post it again. My two (beta) projects: * [PyFiSync](https://github.com/Jwink3101/PyFiSync) -- Python (+rsync) based file-sync system that works out-of-the-box on macOS and Linux (python 2.7-3.3+). Propagates (most) file-moves, deletes, etc. And performs backups before destructive opperations. Extensively tested for a wide variety of edge-cases. Can handle large directories including my 45,000+ files (140+ gb) photo library. * [NBweb](https://github.com/Jwink3101/NBweb) -- Tool to make my collection of markdown pages into a nice site with a few additional features. There are other tools out there that do this too but I wanted full control (at the cost of design and some features). 
It's called "vscode-wal" It' relies on another programs called "PyWal" to make the color scheme. Basically PyWal take 's a image and creates a linux color scheme from it for use with all your programs, Vim, terminals, polybar, gtk. Pretty much everything tbh
I'll make sure I change that out after class today. I didn't know I could do that since I was just going off of the basic documentation on how to make windows and buttons, etc. Now that I do know now I can get a bit more creative cause it was a pain in the ass just aligning those buttons manually. Thanks man
Oooh that's a good one. I'll look more into after class today. Thanks allot bro!
Oh yeah that looks much more streamlined and looks allot easier to read to my eyes. I'll definitely look into switching it over when I get home today. Thanks for the help and info!
That's the best way to learn imho. Learnt just about everything I know about python from the books, "Python Crash Course" and "Learning Pythin the Hard Way". Documentation is key since most of the videos have bad instructors
Sounds like a plan. Haven't used IRC is a while now but when I did the the people in whatever channel I needed help in was usually really nice and informative. I'll check it out later today when I get home thanks man
CFD is expensive. There is no doubt. Especially if you want to do rigorous verification, validation, and uncertainty quantification (which I argue is a must, but it is what I did for my PhD and what I currently do so I am, admittedly, very biased). However, the implication of wind tunnel work being *inexpensive* is laughable at best. And, despite what people seem to think, experimental work is just a *realization* of reality. It can't account for aleatoric uncertainties any where near as well as a computer model, and introduces its own huge set of epistemic uncertainty. Not to mention geometric infidelity and other scaling issues. Furthermore, while it may not be OP's use case, there are both scenarios, and quantities of interest (plus local and temporal data resolution) limitations that are simply unavoidable (or insanely expensive) in experimental work. Experimental work absolutely has its value! And is often critical to good computational work. But to assert that a wind tunnel test is cheaper, better, or easier without a specific situation in mind and strong evidence to support that is ludicrous!
Ahh yeah this is a good one. I have to comment out and replace the arduino variable when testing without the arduino connected or the program wont load. Also yeah I'll want to reuse this later since I usually keep skeletons of most of my code to serve as examples later down the road.
I was using VS but then I tried Pycharm. You can't come back from that for python imo xD
I tend to be bad at leaving comments in my code and it's a very bad habit I know. It usually leaves me trying to figure out my own code when I code back to it. It's a easy fix though to make sure I comment all my functions and variables, etc
The only thing that bothers me is that the author didn't say (s)he was doing this for fun or as a proof-of-concept. Are they actually using this? If so, that is crazy!
I already have all the mechanisms to scrape and parse the data using BS4, i just need to figure out how to store it before grabbing all the profiles, A lot of people are recommending SQLite3, so i think thats the way to go.
Unfortunately I can't remember what the exact case was. I think it had something to do with a connection between a Qt object created on the python side and one created on the c++ side. Searching gave me an old post from the [PyQt Mailinglist](https://riverbankcomputing.com/pipermail/pyqt/2015-April/035779.html), in which they go through a couple of different options. Florian suggests using partial instead [here](https://riverbankcomputing.com/pipermail/pyqt/2015-April/035796.html) and he's a pretty smart guy (just count the number of posts that he answers on that list). :)
Hey its beena few months and I pretty much have the same concerns you had. Did you end up sticking with Flask + Vue or did you use something else for the backend
No problem! Definitely check out [partial](https://docs.python.org/3/library/functools.html#functools.partial) though as an alternative to lambdas.
It's a difficult thing to get motivated for. Because as you write it, it seem unnecessary. But a week down the line you need them. If you ever plan on writing code that others will use it's something you have to do. So might as well just make a habit out of doing it.
I expect that the words "Playing with…" in the title are meant to indicate that the is not for serious use.
You can turn off Javascript and see if it's needed to get information you are trying to scrape. If you use python3.6+ you can use https://html.python-requests.org/ It can render Javascript content. 
The [pyinstaller docs](https://pyinstaller.readthedocs.io/en/v3.3.1/operating-mode.html?#hiding-the-source-code) cover this. PyInstaller doesn't hide your source, but mentions a few options for those looking to hide source in PyInstaller bundles. &gt; If you want to hide your source code more thoroughly, one possible option is to compile some of your modules with Cython. Using Cython you can convert Python modules into C and compile the C to machine language. PyInstaller can follow import statements that refer to Cython C object modules and bundle them.
Hey /r/python! I wanted to share a little project I've been working on for awhile. I was a rubyist for a long time and only recently started picking up python. This is my first python package so I sure there's a lot that can be improved. Check it out if you get a chance and let me know what you think! 
You can disable what you do not need.
Yeah this way its a lot easier to monkey patch over the arduino_write() function when doing your testing. Using pytest you can actually make a mock instances of your hardware so its logs commands sent to it so you can actually test that IO as well. If you do the mocking method you don't even have to monkey patch. Just make a pytest fixture for mocked hardware and it will seemlessly act as if the arduino is actually there during testing.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
A docker container with an IDE running a trading/investment engine that automatically interacts with an entirely separate docker container that contains a machine learning algorithm.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Even for static content, some sites might have them designed to display the content only thru click. You have to explore webdrivers when it comes to that.
A library to perform website performance tests using WebPageTest.org’s API,, working on creating a stock investment analysis library at the moment for personal (maybe commercial use)
Awesome! As a newcomer to Python from PHP, this is a super real world example of how python is used 
Sure! Just check the docs for QHBoxLayout/QVBoxLayout, QGridLayout, … there are examples. Have fun! Qt is the best UI framework out there IMHO
I'm also trying to design a stock analysis tool, it will be like a board with all my information, win/loses of the day etc... Are you using any library to pull market stock prices?
I think requests can now render JS pages
Ok thanks
Basically they're frowned upon because they're a sign of sloppy thinking; they're basically *never* actually necessary or the right design choice, and when they are (generally when there's an object being used a as a cache), they're also OBVIOUS by convention. They're doubly annoying when they're used as you do here, actually as constants but with the **global** keyword implying that they're re-assigned intentionally in the code below. If I want to understand your code I have to follow a series of not obviously connected dots, only to find out they're seemingly just a way of passing in an argument by not passing one in. Which is only slightly better than returning a value without returning one. Basically they're an engineering nightmare, and with experience maintaining code written by others you start to develop a feeling for why they represent something deeply flawed under the hood. Like imagine you bought a new car and every time you turned on the windshield wipers for no obvious reason whatsoever the horn would go off. In a car by the same manufacturer. Sixty feet away. *That* is how the global variable do.
Used it to prove integrity algorithms for my doctorate. 
That sounds cool as hell and would love to know more. 
Do you describe it as basic due to not being able to install plug-ins as easily (or lack of a plug in being available)? I ask because I wouldn't consider pycharm basic and if anything, it has a lot more functionality than some people really need, which may be what your referring to. I love both for different use cases, and vs code particularly excels at letting you easily install what you need and you don't have to deal with a bunch of stuff you might not use. 
My point: it's there and you have to deal with it. In flask you only get what you ask for. It's not that I'm saying one is better than the other. I just like to ask for stuff instead of getting too much and having to disable it.
Ransomware
I mean basic as in it's really just for python. In vs code it can act as my Arduino ide to push code to the board, lints in every language that I install a plugin for. All types of auto completes, code beautification, points out all my errors in syntaxes. It's just simple. Easy to read and add to config file for how you want your plugins and editor to work. It's just perfect 
Thanks for the links. I'm the developer of [TimeView](https://github.com/j9ac9k/timeview) and I'm looking to try and make it as stable as I can.
Thanks for the heads up on the plugin op
Np bro enjoy 
http://effbot.org/tkinterbook/tkinter-index.htm#class-reference This is the site I used. It's a bit older so you might want to use the ttk widgets instead (they have a note modern look than the tkinter widgets). But effbot will teach you the concepts, there's a lot of examples.
For all of those binary creators essentially all you are doing is putting the files in an "archive" (sometimes compressed but is extracted at runtime) Python Interpreter, Code, Resources, Etc. And you can more or less just browse them like regular files. You could obfuscate the code but that won't really help either for anyone halfway experienced.
Right but I thought they had the option of encrypting the code in some way.
Hello world 
I dunno about interactive plots but Google's Colabratory is essentially Jupyter Notebook online with Google Drive integration
- Plumbum has been offering the functionality to both Python 2 and 3 long before pathlib was available - Not being part of stdlib, it's able to update at its own (fast) pace - It works identically whether the file is local or remote (ssh) - The path objects subclass `str`, so all string methods work on them, and they can be passed anywhere strings are expected (it will look like the absolute path) -- the only downside is that the `in` keyword doesn't do the same thing as with a normal `str` - The path initializer recognizes/auto-expands things like `'~'` (in pathlib, `Path('~').is_dir() == False`, while in plumbum, `local.path('~').is_dir() == True`) - Plumbum has many other convenience functions for file and terminal work 
I don’t deal with alto trading, too much work. I’m mostly interested in creating a workflow that eventually analyses all stocks in most markets and gives me the tidbits of information I need to decide if I want to invest or not. I’m more of a buy-and-hold dividend stock investor because I don’t like to look at dashboards all day. I’m planning to start with pandas_datareader, then there are Quandl and Quantopian if you want paid but surely more well managed datasets. If you are interested in technical analysis you should take at look at library called “ta” on GitHub, the author made a really nice one there
I guess the problem will occur when you change the button text, or with localization. Do you want to implement a long list of if statements?
I didn't write it and can't remember precisely the description but someone wrote the ability to store data within pictures so he could upload them to sites like imgur, download them elsewhere and run his tool again to pull the data out of the picture. If memory serves correctly he was using tiff files. I think he was even able to put mp3's into the pictures.
If PyFiSync used a SSH lib like Paramiko or Asyncssh I would totally use it. Can't use subprocess at my work unfortunately. 
Fuck you
Web based VNC and terminal sessions using asyncio and websockets encrypted end to end. Job management for interacting with 30,000+ servers.
Still my favorite is animating a [greatcircle draw](https://www.youtube.com/watch?v=-1p9N88b5ow). Also using historical data from Plex to [draw a map ](https://github.com/blacktwin/JBOPS/tree/master/maps)of client to server locations. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [blacktwin/JBOPS/.../**maps** (master → 2dacb93)](https://github.com/blacktwin/JBOPS/tree/2dacb93d0f691673234a0aa50350e28e7f2800f0/maps) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e1o91uz.)
Use Django Channels and get ready to learn async programming, websockets, workers and lots of other fun stuff.
If you fall for phishing, you pay the price.
money
Use PyCharm and the IDE support will be as good as anything you used with Java. Get your boss to buy you a licence and have full Django documentation built in. Enjoy being 3x more productive than you were with Java.
The ipynb file is just json, but it sounds like you want the actual rendering of the notebook which actually has the graphs. You can try hiding the steps in your notebook that have code and print the output. Most modern computers will have the ability to print from a webpage to PDF. If you really want the JSON printed to a PDF (and I don't know why you would), then open the PDF file directly from your browser using a file:/// ref and print that. 
Copy the notebook and open it. Go through each cell and delete all the text without running the cells. Save to pdf. Someone who is better at parsing json should be able to write a script that takes a notebook and physically removes all the input cells leaving only outputs. Hell, maybe you could write magic commands that allow for %nopdf to be placed in input cells you don't want saved. Also, https://stackoverflow.com/questions/34818723/export-notebook-to-pdf-without-code 
That is an opinion and one that I consider completely wrong. Its as wrong as instantiating a class once and just using it as a function holder. Object oriented solutions are almost always easier to work with. This is why pathlib is replacing os.path.
What kind of interaction are you looking for? [nbviewer](https://nbviewer.jupyter.org/) allows for static interaction, like mousing over graphs, but it doesn't allow for things like slide bars to the best of my knowledge So you can do mouse over interactions [like this](https://nbviewer.jupyter.org/github/CrakeNotSnowman/umapNotebooks/blob/master/UMAP%20Usage.ipynb) but you can't do the plot slider in the code block 35. If all you need are things like mouseover events you can create the notebook on your machine, upload it to github, and post a link to your notebook in nbviewer's input. More interaction might require you to host your own server. 
You may find this informational. https://0xec.blogspot.com/2017/02/extracting-encrypted-pyinstaller.html 
For anyone curious about this: It's called [steganography](https://en.wikipedia.org/wiki/Steganography). Computerphile also has [a video](https://www.youtube.com/watch?v=TWEXCYQKyDc) on it.
It's probably always going to be my twitter bot. I'm really proud of it. Plus it makes [wonderful errors](https://twitter.com/Keith_Event/status/950180368203894786) The [source code](https://github.com/CrakeNotSnowman/TwitterEventBot/blob/master/crowdSourceEvents.py) is a mess, the readme is outdated, but the bot works pretty well and serves as a platform for me to learn new concepts before applying them to more important code. Plus it runs on a raspberry pi and lights up LEDs and responds to a button press, and as an EE, making a button do something and an LED light up will always make me happy to my core.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [CrakeNotSnowman/TwitterEventBot/.../**crowdSourceEvents.py** (master → f7d2e55)](https://github.com/CrakeNotSnowman/TwitterEventBot/blob/f7d2e555eb35ae99e0198441dbcc14f75ab6d02c/crowdSourceEvents.py) ---- 
Just looking at my source code in TimeView, I use self.sender to capture TableWidget's QFrame's QHeaderView's ... all sorts of stuff. Some of it I think I can certainly filter out with a lambda/partial but removing all references to self.sender() might not be really plausible without a major refactor
Github and nbviewer will allow you any static content display. If you need to run some part of the code, there is a tool named binder that take a repo and make it runnable. 
youtube-dl
True facts. 
Reading through the mailing list, looks like setting the signal to be a Qt.QueuedConnection() fixed the issue (as opposed to a Qt.DirectConnection() which is the default); I'll have to look at the docs more carefully to see if a QueuedConnection() makes sense in my case.
Does that strategy worked? 
+1
Plus the inheritance here is bad OOP practice.
Well username checks out 
I really like VS Code
Reinforcement learning playing altered beast, It doesn't get to the end of the first level yet, but still fun to improve on.
I wrote this library a few months ago and I was really proud of how it came out. Essentially the goal of the library is to allow you to write your own Slack bots really quickly. I wrote two the other day, real simple ones, in under five minutes each. There are some example Slack Bots written with this library at the bottom of the \`README.md\`. One's a bot that provides quotes from the show "The Office" ha Feel free to check it out or even submit a PR! [https://github.com/GregHilston/Simple-Slack-Bo](https://github.com/GregHilston/Simple-Slack-Bo)t
By in large the most comprehensive documentation on the library. Supplement it with searching Bryan Oakley on Stack Overflow
Ah, I meant sliders that change parameters.
A pandas based billing visualizer that saved my company about $500K/yr. You can get raw csv output from cloud hosting companies(in the millions of lines) but you can get a lot more detail if you look for things yourself. I found a way to do a lot more with a lot less. Got a nice bonus for that one. 
I made a script that you give a subreddit, and then it downloadeds the top x amount of pictures. 
Generated fake Donald Trump's faces: https://github.com/ParmuSingh/GAN-Face-Generation also discovered this post from reddit api. xD
I am currently working (with two friends) on a large scale data pipeline in AWS (lambda, fargate, RDS) that aggregates data from fantasy sports as well as daily fantasy contests we play to support lineup generation algorithms (ML and traditional stuff like Depth First Search with heuristics) that can guarantee us a consistent return on contests. It’s inspired by an MIT paper I’ll link later if I remember. We haven’t seen any decent returns yet, but we’re still learning a lot about stats/ML in the process, so that’s been sweet.
is that ur catchphrase 
Thank alot, this has to be one of the most motivating and actually a quite deep reply haha, honestly I think I have got too motivated in the beginning especially when learning Django, I think it took me like 2 months alone to really understand Python itself, and a month on Django just seems like I have been building a very weak foundation, luckily tho edx has just released a CS50's web development with Python and Javascript!! thats just amazing, and I have already learnt the Python basics there. What do you think? should I have a fresh start rather than dive into more complex problems The course would cover the following: Git HTML, CSS Flask SQL ORMs, APIs JavaScript Front Ends Django Testing, CI/CD GitHub, Travis CI Scalability Security
A telegram bot that handles bitcoin transactions! 
I wrote some code which runs a user-supplied OpenGL shader, grabs the frame data, packs it into a pair of UDP packets, sends it across the network, where a beaglebone running a C library puts it back together and uses it to drive LEDs. The largest chandelier is 14 feet in diameter, covered with bright LEDs all around the inside. Right now I'm writing some code which parses a script in a simple DSL to control DC (not stepper!) motors to simulate the movements of tree branches. I really like my job.
Somebody please ban this account from the sub, I don't think Phishing would be something that is much appreciated in this sub
[My chess engine](http://ravenchessengine.itch.io). Compared to other chess engines, it's absolutely terrible. But the fact that I could write a program that can play a somewhat sensible game of chess is mind blowing to me.
A sentiment analyzer to correlate stock option price changes... used BS screen scraping of options data, NLTK and sentiment analysis on daily RSS feeds for oil related news. This was about 5 yrs ago and I did it mostly for fun and to learn pandas and D3 charts. The sentiment tech has improved significantly of late so it would probably work much better.
Congratulations!
I'm pretty proud of [Wolf](https://github.com/Duroktar/Wolf) an [extension](https://marketplace.visualstudio.com/items?itemName=traBpUkciP.wolf) for Vs-Code the enables live evaluation of Python code in the editor. The script processing backend is written in Python but the extension is done in Typescript. I'm also happy with how [Kuài](https://pythonhosted.org/Kuai/) turned out. It's an extensible event dispatcher written in pure Python.
Not really cool but a password generator with configurable parameters
Alright I'll try flask out for a while then maybe play around with Pyramid. SQLAlchemy does look fantastic from what I've read about it. I haven't had a chance to put it to use yet. Marshmallow I'm not very familiar with. What are the benefits of using Marshmallow vs python native JSON libraries? Thanks again for the feedback. 
Damn people make some cool shit, gotta step my game up!
zetcode.com
Thats a mind numbingly stupid flaw. When you encrypt something with a key you aren't supposed to provide the key in any form with the encrypted content.
A dockerized API to interface with a database that contains the constantly-updated location of a barge. I'm working on a Cisco CMX API wrapper-API to do something similar. I'll be building in-house visualizations of customer movements and custom analytics. I have a good internship. Lol
Marshmallow is a tool that takes the best bits from formencode, the Django Rest framework and Pyramid's Cornice and (IMHO) improves on them in a framework-agnostic library. It's a really nice way of handling validation and conversion of json to objects and vice versa. Combined with SQAlchemy you can do very elegant marshalling from json to your db objects and back again, of arbitrarily deep nested structures. I highly recommend it. And it has great docs, always a bonus!
Done for now! I'll be back on later this evening though so stay tuned.
I wrote a set of scripts that have automated a huge chunk of data entry that I have to do as part of my job. We have several parallel systems with no API access and I used to have to enter the data manually from one to the other. Now I just run a script and sit back and watch it go--not only does it save time, but there is the side benefit of no transcription errors! :D It's definitely nothing fancy like machine learning, but it's a good ol' fashioned brute force way of automating work that humans shouldn't have to do. I used Selenium (which I know can be shit on here), but it was by far the quickest way to get off the ground with this project and create something without using too much extra time.
I think the three python projects I'm most proud of thus far are the VMWare provisioning tool I wrote which wrapped around vagrant and fabric, a CLI tool for scanning websites for security flaws using WebInspect, and this guy right here: [Chains Invent Insanity](https://chainsinventinsanity.com) The first two are work projects, but the latter of the two I'm hoping to open source soon.
This animation: [France's 4th goal vs Argentina](https://www.youtube.com/watch?v=f0MMZSW5RR8) I used OpenCV and a custom GUI to convert the video to positional data, then Matplotlib and Moviepy to make the animation.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
A search engine and marketplace: Iconfinder.com
Wow I'm not the only one with this idea
An [ECG](https://ecg.galliera.it/) Dicom [viewer](https://github.com/marcodebe/dicomecg_convert/)
a chatting moggy: www.talkigy.com
The text widget doesn’t use TTK, for example – but the advantage of not using ttk is that you can have full control over the styling of the elements. 
A script that takes my running routes and maps them to the nearest road. It's helping me figure out new routes in my quest to run every street in my city.
Software for satellites. Literally, python running in space, at 28000 km/h :D
Hopefully this saves you a few weeks or months of work: https://hub.docker.com/u/bigdavediode/
Spaces. There's only problems with tabs.
Please elaborate on the problem. Formatting on different OS?
 What *is* your job?
A Pycharm extension would be choice. Good work.
A cellular automata framework. You provide an initial setup function and a step function, and it will handle the rest, like managing and drawing the world, coloring each cell accordingly, providing info about each cell for the step function to use, etc. I've used it to make various GoL variations, Rule 110 (and all the other rules just based on a variable defined in the class), Langton's Ant, and even tricked it into drawing the Mandelbrot Set. 
### Floppy Drive Midi Player Bought 8 used floppies off ebay for about $1.50 a piece and turned them into a USB device that plays midi songs. Used the [Moppy](https://github.com/SammyIAm/Moppy) project for the arduino as the floppy drivers. Ported the midi reader and controller from Java to python and built a GUI around it using Qt/PySide. 
Oh wow! Would you share the code for that? Do you think it could be used for other videos?
Network Simulator that approves or declines financial EMV or magstripe transactions based on the request message data fields. I send a response message to a point of sales system that will approve/decline a sale.
My career, probably.
The only problem with tabs is that everyone else uses spaces. If everyone used tabs then the only problem with spaces would be that everyone else use tabs. Convention is an important part of communication and collaboration. So stick with convention if possible.
Programmers who use spaces get paid more. Tabs do not display the same in different tools so what looks fine on your screen is a mess on mine.
I do software for interactive architectural installations.
How did you even get that job? It sounds pretty awesome 
That's a terrible argument. Adjusting the tab width is easy. 
Networking, mostly. A local developer group called [Code and Supply](http://codeandsupply.co) runs a slack, and people post jobs there.
Thats a terrible counter argument to an originally good argument. Adjusting tab widths requires work.
Ha. I've heard of people doing that for child pornography, but never mp3's. 
But what theming would you need to do to text that Tk.text doesn't already provide??
When you say “everyone else” who is this everyone you speak of?
I know for a fact it can be used for other videos, because made around 20 of them (that one was the cooler though): you can watch the others on [Twitter](https://twitter.com/lastrowview) or Youtube (https://www.youtube.com/channel/UCz9ZhIX4DO16O_OMSC1_Udw). I've shared code for animations like these on github ([here](https://github.com/rjtavares/football-crunching/blob/master/notebooks/working%20with%20positional%20data.ipynb)). I want to add some more stuff (code and data), but for now I'm busy making them. I'll work on that after the World Cup.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [rjtavares/football-crunching/.../**working%20with%20positional%20data.ipynb** (master → faa7d51)](https://github.com/rjtavares/football-crunching/blob/faa7d5105ba9b01a821b80dd70fb269fdf145889/notebooks/working%20with%20positional%20data.ipynb) ---- 
For porn
Being a sysadmin student , i did a massive python menu with all the answers and useful info for my group of friends in class we run it on yakuake (easy and somewhat easy to "hide" access to your linux console) so that help us to get through the tests with much better grade than what we expect , i was so proud of it xd 
It's not required work. Just like setting your desktop background or your color theme, and takes about the same amount of time. It's personalization. 
Python users that have read PEP8 and aren't rebellious. 
That sounds very interesting, where do you think I should start?
Why does PyFiSync require installation on the remote directory? 
I have a massive collection of wallpapers so I made an app to check if a new image has any visual matches in the existing collection. It has a simple GUI and will get the closest matches from the collection in order of how well they match.
My amazing deployment tool for WebMethods! Last weekend i managed to reduce our deployment time from 8h to 3 minutes and i'm so proud of that :)
How long does it usually take from being accepted to being implemented? 
Pressing tab is a lot simpler than pressing 3-4 spaces and essentially is responsible for less bytecode which makes your overall file smaller
Ah, the most classic bikeshedding discussion. The answer of course is: it doesn't matter, stick with convention. In Python that's 4 spaces. In Go that's tabs. In your team's bizarre Python and Go project, that may be 4 tabs. Keep the codebase consistent and change your editor to fit your needs.
I set my tab to two spaces because I like control, but I usually double tab in to make my indents clear. You set your tabs to eight spaces because screw pressing tab more than strictly necessary. My perfectly reasonable code is now fired off the side of your monitor. Also not all of my tools allow tab distances to be changed.
Great work! Thanks for sharing 
&gt; but I usually double tab in to make my indents clear You're the problem there.
Thanks!
If your text editor can't insert n spaces when you press tab, you need a new text editor.
Anything you can share? Dumb question but how do you use python to play the game? 
Mixing tabs and spaces as a recommended action on a python sub? Are you new here?
PEP 572 is actually already implemented in a specific CPython fork: [Rosuav/cpython/assigment-expessions](https://github.com/Rosuav/cpython/tree/assignment-expressions). I do not know how long it will take to be merged upstream, but it will be officially released with Python 3.8 which is [intended for October 2019](https://www.python.org/dev/peps/pep-0569/#schedule).
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Rosuav/cpython/.../**41fedfac6df32fb5f00a9e02bd5bfb4bce37e3a1** (assignment-expressions → 41fedfa)](https://github.com/Rosuav/cpython/tree/41fedfac6df32fb5f00a9e02bd5bfb4bce37e3a1) ---- 
For Python stick with 4 spaces. Following convention is worth more than using the better indentation method.
&gt; but I usually double tab in to make my indents clear. That is not perfectly reasonable. You're the crazy one in that scenario. &gt; Also not all of my tools allow tab distances to be changed. Seriously? I can't think of any. 
[removed]
Antigraviry
The best argument for tabs? Smaller files. That said, if indentation is a significant contributor to the overall size of your files, you're likely doing something wrong. Also, storage is cheap and RLE reduces this to a non-story. The best argument for spaces? Go into a meeting room and sit down to do a code review on some random machine usually used by HR; odds are the indentation on the screen is consistent with what every attendee has been looking at on their personal machines. With tabs, not so much. If indentation is significant to the meaning of the code -- ie it's not *solely* a presentation choice -- then spaces are the usually the better choice when collaborating. Except among people who are far too focused on trivialities.
This is an argument being conduction only between neckbeards. Use whatever you want, your IDE or text editor will format it for you. 
Damn , that's my dream . To be part of the project and flinging it into space. Need to work harder to get there.
So you are saying tabs are great because everyone gets freedom to choose as long as they predict how *everyone* else they they work with has their tab stops set? A space here is a space there. A tab stop here is magic when it lands. Perforce Swarm. If I want to adjust the tab distance, I'm doing it in CSS. Conveniently that's also the place where I'd reject your code for containing tabs.
Good bot.
Nice! Looks like a cool project for beginners, or isn't it? Do you maybe have some code?
Thanks, probably the best answer I have seen yet.
People here are so good man.I did a couple of small projects.The only thing im gonna do now is make my pi play music automatically at 5 30 am for me to get up using python. Tips would be great.
A 'fractal carpet' generator that outputs fractals based on random parameters (bounded by options set by the user). Got some pretty cool stuff out of it, honestly. [3x3](https://imgur.com/a/HubLE) [4x4 and/or higher resolution images](https://imgur.com/a/rBYkX) [Now with randomly generated colors!](https://imgur.com/a/JaLwV)
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://imgur.com/a/HubLE) - Previous text "3x3" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
 &gt; So you are saying tabs are great I never said that; I'm just saying that your "spaces are better because everyone is forced to see them the same way" argument is a stupid reason. [This quote comes to mind](https://twitter.com/iamdevloper/status/382774917391220736?lang=en). We're talking about code; not a whitepaper. You don't choose the font or text color that the reader uses, why do you want to control the indentation? &gt; Conveniently that's also the place where I'd reject your code for containing tabs. LOL I love your assumption that you're in charge. Cute. 
[Donald Markov Trump](https://flask-markovdjt.herokuapp.com/) [Sample](https://i.imgur.com/o7Xjf4X.png) Mobile Users: I apologize for being totally shit at Bootstrap.
I wrote a module which allows astromers in my field of reaserch to generate TBs of synthetic data (specifically photometry, or brightness vs time measurements) of pulsating stars to train neural networks. It uses PyMongo and MongoDB to store data, and even allows for easy use with a remote MongoDB installation with a local buffer. It's probably put together horribilly but it made my reaserch a lot easier at least!
&gt; essentially is responsible for less bytecode I can't think of a single language where white space factors into bytecode generation at all. Enlighten me?
Question about this implementation (since I don't have the luxury of being able to easily compile this fork, and can't fully understand the C), do we know if this acts like assignment expressions in Java or other languages or does this execute the assignment before testing the condition if it exists? If someone doesn't understand what I'm saying but is nice enough to test this for me, can I get the `dis.dis` output on these functions, and tell me if the third and fourth causes an exception or not? from random import randint def foo(): if n := randint(0, 3): return n ** 2 return 1337 def bar(): n = randint(0, 3) if n: return n ** 2 return 1337 def fizz(): if n := randint(0, 3): return n ** 2 return n + 1337 def buzz(): if n := randint(0, 3): return n ** 2 else: return n + 1337
Ick.
They misspoke. They meant source code. 
This is coming from a guy who uses four spaces, this is a terrible argument. The "get paid more" is correlation, not causation. Look at all [these datasets which by your argument say that the one causes the other](http://www.tylervigen.com/spurious-correlations). Tabs also can be set to look however you want in *any* tool. Personally, I have all my tools to replace the tab character with four spaces on keypress, and of those that support it, to remove the four spaces on a single backspace press (not all tools have that). If I ever need to enter a literal tab (which is rare), I use a keyboard shortcut / macro.
Python bytecode is optimized quite a bit, pretty sure they remove such a thing anyway.
The problem is that this question isn't about spaces vs. tabs. It's 4 spaces vs. 2 spaces vs. tab characters vs. 3 spaces (for the weirdos out there, you know who you are). Tabs or Spaces? * If you pick tabs: done. Everybody gets their favorite way. If I like my tabs to take 4 spaces, I make my editor show 1 tab as 4 spaces. You can have 1 tab be 2 spaces if you want, and it doesn't bother me at all. * But if you pick spaces: * Do you like 4 spaces? A lot do, but some people actually prefer 4 (and YAML and CoffeeScript have guidelines out there suggesting 2 space indents). * There's always that weirdo who likes 3 space indents. * One day you'll get a stupid pull request where somebody fixed a bug on one line, but they also sent you a full diff converting *EVERY* line from 4 spaces to 2 spaces or whatever, because "well that's the way I like it!". True story. Tabs are the universal best, for most programming languages. **For Python**, I do use 4 spaces, only because it's a standard in the community. In my `.editorconfig` file I default to tabs for all file types, except Python (and YAML, Markdown and CoffeeScript) which have their own opinions. --- And before you say "but what about lining up your method parameters across multiple lines when you need to do that?": &gt; Tab first to the indent level of the parent line, and then spaces to line it up. i.e.: (arrows and dots show the invisible spaces and tabs): func Example(username string, ·············password string) { → // function body indented with tabs per usual. → if os.Getenv("DEBUG") != "" { → → fmt.Println("Debug mode enabled") → } → // But when you need to line stuff up, you tab to the same level as → // the parent line of code, and space to line up from there. → SomeLongFunctionCall(username, → ·····················password) }
Spaces. Only way to be sure. Different IDEs and text editors respond differently to tabs.
How did you print it with python?
Java preserves _comments_ in the binary `.class` file it produces... so you can reverse engineer the `.class` and end up with a `.java` source file with original method and variable names, original comments, and good formatting (as the decompiler would auto-format the source layout). imho a programming language has no business storing comments in the AST, but there we are. The whitespace in those are surely important to keep in the AST. ;)
print(money)
Created a bot for SaltyBets that bet on fights by reverse engineering their API using predictions made by a ML image I made by using the entire Salty Bet match history and character stats. 
Well, the argument is that tabs have different widths, so when you're moving code from one environment to another it can create problems, e.g. if you're using a .vimrc with `tabstop = 4`, when you move it somewhere else you might have 8 space tab width. Either way, I like tabs, because formatting code is an example of the purpose of tabs for text editing. I would say the fact that spaces are always the same width is a problem not advantage. The customization is a good thing. 
Flame war incoming lol tabs ftw because I'm a lazy ass 
Block indentation works with tabs, and I can't code without it.
Care to expand? :P
I'll fuckin' stab you.
In school we were taught tabs. Education says tabs, you can try to force it all you want
While print(money) ;)
My apologies, I didn’t realize this was in specifically a python subreddit but in JavaScript having more white space makes the file bigger so when you’ve got a JavaScript front end that needs to be *downloaded* to the users machine download speeds depends on the amount of white space. However, reading over what I said I suppose it is more of an argument towards the length of your indentations because a tab that is just as long as three spaces would consume the same amount of storage space. 
According to PEP 8, either is fine but you should use spaces. In Python 2, mixing tabs and spaces will give you an error and in Python 3 you can use the -t flag to give you a warning or the -tt flag to give you errors.
I’m guessing this is what is being discussed: [https://openai.com/systems/](https://openai.com/systems/) 
I made a data acquisition application that can take in data from multiple serial lines asynchronously and plot them in real time. The user interface also shows multiple predicted results based on the data to check algorithm progress.
If you think everything you learned in school is truth, you need to go back to school. 
Yeah I hadn’t realized this was a python sub, my bad
I wrote some Python code, running on Raspberry Pis, to supervise some cryptocurrency mining setups. One of those setups is currently making about $35/month, not bad considering it uses less power than a CFL light bulb.
Scan a document with OCR and put it in a database.
Username confirms
Mandates as a replacement for reasoning? 
I agree, it’s pretty awesome. 
For those who make use of [PagerDuty](http://www.pagerduty.com) at work I created [pdmaint](https://github.com/caredotcom/pdmaint), a command line utility for scheduling downtimes in PD.
I use tabs on my human-readable code, then have my compiler—some custom PHP I've written myself—edit them in processing, if I use it. (Not all clients want or warrant that.)
Absolutely right. Do YOU wanna see 8-space indents? Then configure your editor for it. Only tabs give everybody the ability to see code the way they wanna see it. Mandates are for idiots.
Show me an editor that'll take your "this-is-my-favorite-number-of-spaces" obscene corruption of code-setting and turn it into what I prefer to see, automatically? Because tabs can do that automatically for everybody, and spaces can't.
That's the power of tabs, not a disadvantage.
Whoaaa. I must ask how long did it take to write that?
Adjusting weird numbers of spaces to something reasonable takes far more work. And copy/paste operations with spaces yield horrible results.
I'm getting a 404 on that repo...is it public?
I'll do you one better. Ignore an x yo y conversion of spaces. Just co-opt the tab key itself. Tab increases the level of indentation of the current line by one. Shift+tab decreases it. No tab characters ever enter the picture.
&gt;4 tabs Damn
You’re right; five years ago my Windows didn’t forcibly shove candy crush and other crap ware down my throat. I do love VS Code, though. 
Not all tools have the option to edit tab sizes. Your statement that they all do is manifestly untrue.
FWIW, you can change your editor to put in 4 spaces when you press the TAB key. Best of both worlds, I think.
spaces /thread
This is amazing
Conversely, the only problem with spaces is everyone else uses tabs.
Nothing. Don't get me wrong, I've written quite a few scripts using Python, but nothing that is used anywhere, or is seen by anyone other than myself. So, yeah. The coolest thing I have made with Python is nothing.
PEP8 is nothing more than a style guide. People can use whatever style guide they want without being rebellious, and I'm sure there are quite a few floating around.
I've never seen two ladies manage it without what we will demurely refer to as an adapter built for the interface. Did the quote only consider a quarter of the problem space before reaching a decision or should we avoid making decisions based on Twitter memes.
This reminds me that all work and no play makes Jack employable
Suppose PEP 8 said, "Let's all use 8 spaces". You know it's stupid, hard to read, and a total PITA, but it's the almighty PEP 8, so you're stuck... But if it said "Let's all use TABS", then you could view any code with any size indent you preferred. Always. Maybe you don't care about what others see, but don't you care about how you view other code? Because 4 spaces is an abomination...
https://www.jwz.org/doc/tabs-vs-spaces.html
&gt; The best argument for tabs? Smaller files. The best argument is not pressing the space key four times every time you need to indent something. 
I print hello world
Woops, can you try again, I tried editing the link on mobile and I botched it
Yep, all good now!
My friend was running a script that I wrote but with some modifications. He was using python 2. One for loop was space-indented and the next for loop was tab-indented. Python interpreted this as nested for loops when it wasn't. That was not fun to debug. Pure tabs may be fine, and it allows the customizability of setting the tab width, but mixing causes problems in python. Also, in languages that don't use whitespace as syntax, mixing still can cause format issues. If a line of code is split across multiple line and tabs are used first to indent and than spaces to line up the rest of the line, well, then you may lose the nicety of setting tabs width to one preference.
Please let me know what you think! I don't claim to be an expert in Python, but have used this library to make my own slack bots, it was a blast!
The real problem comes when I'm forced to use multiple tools to work with code, and those tools don't treat tabs the same way. They all treat spaces the same way.
I’d be interested in hearing more, specifically the mapping aspect - what libraries you’re using, how you’re going about snapping to the nearest road. Do you have a demo visualization?
Does anyone who is a genuine professional developer ever have this argument? It's one of those things that every knows and has heard of but I've never actually seen a real developer raise a point of contention.
It communicates with a copy of itself to do file listings, backups, deletions, and dealing with empty directories. 
People just bikeshed about it in person because it’s hilarious to rule up neckbeards. At least that’s why I have done it in the past.
Bikeshedding++
I would watch /u/Sentdex's youtube series on Automating GTA5 in Python. In general, Harrison is a phenomenal teacher, but I think [this series](https://youtu.be/ks4MPfMq8aQ) was especially cool 
Forced? So, at gunpoint? And these tools aren't configurable? Because even Idle (Which most will admit is bottom-of-the-barrel in functionality) will allow you to configure tab widths.
I actually very much wanted to avoid them! I wanted it to work on a vanilla install of Unix/Linux/macOS. And, I wanted to take advantage of rsync for better transfers. With that said, the logic is all there with the remote part abstracted. You could write your own remote_interface. I’ve considered trying to write one for WebDAV but it hasn’t been a priority. And again, I would need to depend on a WebDAV library. I work in a pretty strict security environment (hence the no dependency goal) but have never heard of a bona-fide python install that can’t call subprocess. How is that even enforced?
I've been programming for about 30 years &amp; made decent money doing it. My advice to a new comer would be to get involved with some of the open source projects. For example, if you're into web stuff, consider looking at the [Flask Project](http://flask.pocoo.org) or [Django project](https://www.djangoproject.com). There's an incredible amount of talent out there that you can learn a lot from.
Easy. Use tabs but set the tabwidth = 1. Then everyone's "happy"!
Sure, here's a few images to demo: https://imgur.com/XQejMLz https://imgur.com/02bCAMc https://imgur.com/zVfhhx8 Green (plus dots) are directly plotted from a KML I used to (manually) maintain when I started. Red is the script's interpretation of the route. Purple are previous runs I've mapped. I have ~500 runs I mapped onto a KML and another 200+ that are just tcx files right now. I've only plotted 130 right now. Mainly because this was a "teach myself python" project so I started with one route, then when it worked, I tried a second and modified my code. The logic has evolved substantially in the process (&gt;1 year now), at this point adding a run usually works perfectly and at most I have an issue with the underlying map not the logic. I use osmnx to grab OpenStreetMap data, this builds a network that I can analyze using networkx. Plotting to google maps is done using gmplot library. The find-the-road part has been the biggest challenge, I currently use a three-window point to identify likely edges and nodes, and then a process to evaluate the candidates based on travel and direct distance. I've started playing with some ML ideas to figure out how to weight things. I have a separate script that builds routes based on my start/stop locations and the distance I'm looking to run. Right now it's super dumb: just loops through some not-run-yet edges and sorts them by total run distance relative to desired distance. 
Really? Of course you would use a [minifier](https://en.m.wikipedia.org/wiki/Minification_%28programming%29?wprov=sfla1) for serious production scripts! 
**Minification (programming)** Minification (also minimisation or minimization), in computer programming languages and especially JavaScript, is the process of removing all unnecessary characters from source code without changing its functionality. These unnecessary characters usually include white space characters, new line characters, comments, and sometimes block delimiters, which are used to add readability to the code but are not required for it to execute. Minified source code is especially useful for interpreted languages deployed and transmitted on the Internet (such as JavaScript), because it reduces the amount of data that needs to be transferred. Minified source code may also be used as a kind of obfuscation, though the term obfuscation may be distinguished as a form of false cryptography while a minified code instance may be reversed using a pretty-printer. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
Non-Mobile link: https://en.wikipedia.org/wiki/Minification_%28programming%29?wprov=sfla1 *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^196716
Golang does it right. Leading tabs, spaces for alignment. 
tabs born and raised
That's definitely not the best arguments. Or at least very very subjective. &gt; The best argument for tabs? Smaller files. First two which I can think of right now are imho much better: 1. It just makes more sense: One atomic unit of coding (indentation) is represented by one atomic character. You cannot have half of indentation with tabs. 2. You can personalize how you see indentation. If you like multiple listings on one screen - setting it as a 2 spaces works much better. You don't even have that option with spaces. &gt; The best argument for spaces? Go into a meeting room and sit down to do a code review on some random machine usually used by HR; odds are the indentation on the screen is consistent with what every attendee has been looking at on their personal machines. With tabs, not so much. I've programmed in a several big companies in last 15 years on various languages, which use tab-convention. Never anyone had this problem. Tabs are used for indentation. If they are not mixed with spaces - the code will look everywhere the same. The only difference is the slope of code. The only case when this could be a problem - if someone uses tabs for alignments. But it's still readable and usually not a problem with proper style guidelines. I'd say the best argument for spaces is that this is a convention. That's why right now I am using them. 
1 space tabs masterrace
At gunpoint? No. Though I would usually rather be shot than participate in another department standards meeting. And no, most are *not* configurable, at least by the end users.
I hate to say it but I'm really jealous of your ability to be free to do these things. While I'm also an indoor farmer, I'm working for people who are not open to quality technology to automate the right things. It's really sad because I know I'm capable of crafting such systems in a highly reliable and cost efficient manner. I'm a huge tech nerd, studied design, and have a certificate in analytics. What's stopping me from implementing such a system is the huge, fragile ego of my boss; no idea can ever be implemented if it isn't his own. And he's not a very intelligent person, just a very well connected one. It's very sad and extremely toxic. I'm really grateful to have stumbled across your comment. You're working at a capacity that I was hoping to be at when I joined this team a couple years ago. I was hoping to implement environmental monitoring systems, automated lighting, and automated nutrient systems. But now we are dicking around with dollar store thermometers, constantly adjusting thermostats basically located in crawl spaces, individually adjusting 110 ballasts each month which are located 15 feet off the ground and each spaced 3 feet apart, and manually changing thirty 115 gallon each week, each requiring the manual pouring of 12 different nutrients into each reservoir (you have no idea how much we spill while carrying 5000ml of nutrients between reservoirs spaced 12 paces apart). I'm tired of being a "growbot" and I'm luckly to have seen your comments. You're operating at an intellectual and experimental capacity that I was hoping to have achieved 2 years ago. You've reminded me of what I've missed and what I'm missing. Hearing you say "... they pay me to come experiment and build stuff, I wouldn't consider it 'work.'" is exactly what I wanted and where I want and need to be. Hell, I've even crafted tools to solve our problems that I really think could become sellable products... Your comments have motivated me to set up a meeting with the key investors who best take my feedback and suggestions that would make our facility operate more stabile. I'm sure they'll listen, it's their money at stake. And if they don't heed my suggestions, then I know to jump this sinking ship (they've allowed our facility to be built so cheaply that our local power company no-longer services us because we've blown 2 transformers; we're now on an industrial generator, going through 600 gallons of diesel every 4 days). Thanks for sharing how satisfied you are with your work life. It's motivated me to make sure I get mine. 
Right (not sure if you read my entire comment to see I agree). If someone wants a tab width of 2, 4, 8, 16, whatever, they can just get the code into their editor and it will display `\t` that way. That seems like the optimal solution. And you can insert tab by just pressing tab, rather than space x number of times like a barbarian.
You're correct! All _quality_ tools do.
&gt;The best argument is not pressing the space key four times every time you need to indent something. You have to distinguish better between the *key* and the *character*! The key is a very pleasant helper as it saves you pressing the space key. But of course it should *produce* *spaces* instead of *tabs*! So this is not an argument...
While I agree with you overall &gt; → ·····················password) This one is mixed tabs and spaces. Which could be a problem. 
Nobody (who knows what they're doing) does that. Easy enough to make it so that hitting tab gives you 4 spaces (actually, it moves you up to the first multiple of 4 in case you're a space or so off).
I'm pretty sure this will not raise an exception, the `:=` purpose is just "assign the value and return it", so the assignment operates before the condition check (that would be *weird* otherwise). I can not prove my statement though.
&gt;Can you share the code on gitlab? I'm curious about it =)
I have never used such a shitty tool, then. But that said I wasn't arguing, I just hated the correlation = causation bullshit.
Curious: * What have you learned in python thus far? * What resources have you used to learn? * Have you learned anything other than python? * Out of everything you have done so far, what has stuck out to you as being the most enjoyable? Hard to give a good answer without a little more about what you know and your interests. 
Definitely! I have a few bugs But by it'll be done by today.
The supervisor code took less than an hour to write, followed by many few minute sessions to fix bugs. The hard part is getting the setup to pay for itself in a reasonable time, given the current difficulty. When I first got the setup running last year, it managed to make $150/month. (All the hardware I used had already paid for itself mining some other coins back when the difficulty was low.) I did outsource some code development (the low level code that actually interfaces to the ASIC crypto blocks) to a friend of mine, because she has access to some technical documentation for the Rockchip ASIC and I was a bit preoccupied with some other work.
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Ha, well there ya go! ThoughI'mdisappointeddecompiledJavacommentsdon'tlooklikethis.
[wav2vec](https://github.com/cristoper/wav2vec) - Python package and command line utility to convert wave files (WAV or AIFF) to vector graphics (SVG, PostScript, CVS)
And Python is a worse language for it
On notepad I spent most of my days
Well that sucks, because it means this is literally syntactic sugar and nothing else, which I'm generally against. This also defies the behavior of many other languages that scope this kind of thing, so that's a slightly annoying nuance.
The only correct answer I've seen, and I've had to scroll so far down....
Even guitar prefers tabs xD
[PyRPG_Mini - A small Python RPG, focused on RPG elements like battle and grinding](https://github.com/crawsome/PyRPG_Mini)
Primarily a C programmer chiming in here. If your `.vimrc` just has a `tabstop=4`, I'd argue that your `.vimrc` is incomplete. It's annoying that there are four different options at play here, but if you keep your `tabstop`, `softtabstop`, and `shiftwidth` all set to the same value and set `noexpandtab`, then you get what I consider the best possible version of tabs. A hard tab character is always inserted, but it has the visual spacing of whatever you set your tab options to. This keeps the code portable (opening it with different settings will result in a different view, but no information will be lost or added/indent levels won't be ambiguous), but everybody can view the code in the way which suits their preference while respecting everybody else's viewing preference. Let's be real, nobody is arguing that they want to hit the space bar more, they're still pressing the tab key to indent, but an 8 column indent is often visually wasteful. So I say let people view it however they want to by setting the visual size of tabs. Disclaimer: It's considered polite to follow your project's style. In Python, that'll usually be PEP-8, so spaces it is, but if you find yourself in a project that uses tabs, I beg of you, don't start mixing it up. Either get the whole project converted at once, or not at all.
This PEP lookd bad to a lot of people, but not to **the one** needed to reject it. :)
I thought the concept was pretty neat. Now I know it's not so neat :(
I don't care which you use, as long as you're consistent.
Why not just use dictionary?
Search for topics like passive income on news.ycombinator.com You can make coding related sites that have ads or ebooks for sale
ValueError: No global variable named "money"
Good luck. I genuinely mean it. I'm quite fortunate to have landed a job I enjoy and I definitively contribute to after 11 years in the Navy. (I can not say the same for that career.). Enjoying my work has made a compete difference, and I hope you can get back to being able to say that. I see it all the time, but I can't understand how owners continue wasting money being inefficient on such a gross scale, 600 gallons of diesel a day!! not to mention equipment cost or rental fees on such a massive generator (and the lesser crimes of wasting hours and dollars of employee time adjusting thermostats and ballasts. There is no way to have a consistent crop hand measuring, spilling, and mixing 12 nutrients frequently. I can understand why you would think it might be time to look for a new ship when life allows it, or at least make an attempt to alter course of that one before going further down the wrong path.
Right, my mistake! _Mea culpa!_ Sorry mate.
i hit the tab button, which I have set to make 4 spaces. check it.
relevant: https://www.youtube.com/watch?v=SsoOG6ZeyUI
Can all editors be made to use spaces when you use the tab button? Yes they can.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I just set whatever IDE I’m using to spaces only so my tabs are 4 spaces 🤷‍♂️ I prefer that formatting for every language I use.
Tabs are just concatenated spaces
We can use a template for nbconvert. Create a file called "no\_input.tplx" and in it: ((* 'extends 'article.tplx' *)) ((* block input scoped *))((* endblock input *)) This will overwrite input blocks to contain nothing. Also, you can replace the template in the first line with your favourite template to inherit from. ([May I suggest mine](https://github.com/t-makaro/nb_pdf_template)). Now either place this file inside of nbconvert or your working directory or inside of a directory where nbconvert can find the template (this directory can be set in nbconvert's configfile). Then to convert to a pdf from the terminal run: jupyter nbconvert --to pdf &lt;name_notebook&gt;.ipynb --template no_input.tplx You can add an additional flag `--no-prompt` to remove all prompt or `--TemplateExporter.exclude_input_prompt=True` to only remove input prompts. Removal of prompts might not work unless you upgrade nbconvert (the fix may not be released yet) or use my template.
Right, but if you used a tab, *everyone* could get their preferred formatting/view. That's the pro-tab argument.
Programmers who use notepad get paid more.
Until I have to vim out for an emergency spot fix and get eight space tabwidths, four indentations deep. Then I'm not happy. Then you might have to hide.
What a shame.
1. Honestly I'd put myself at an intermediate level and I've created a few scripts some of which are copying a clipboard to a USB plugged into a windows pc, Actually currently working on a project where I call myself with a number when I press a button on a raspberry pi. I have already successfully ran the script I just need to figure out how GPIO pins work out and if I need to solder and stuff. 2. I've learned a lot since I started learning python, I learned googling something's is actually a lot more helpful than I thought and stack overflow + reddit was an amazing help with things 3.No I haven't decided to learn another language as of now, however I do intend to do so hopefully next summer break when I have a lot of time 4.i really like the project I'm currently working on, however I tried making a python script with OpenCV, Pillow and other libraries to automatically mine things in minecraft (cringy I know haha) But it got way to complicated with image recognition and other things with OpenCV that I decided it would be a little too advanced for me at the time. Kinda seems like a resume now (: 
Use whatever your project uses. For new projects see below. Stack Overflow survey: [Developers who use spaces make more money](https://stackoverflow.blog/2017/06/15/developers-use-spaces-make-money-use-tabs/) Github data: [Python repos are is 10:1 spaces to tabs](https://medium.com/@hoffa/400-000-github-repositories-1-billion-files-14-terabytes-of-code-spaces-or-tabs-7cfe0b5dd7fd) 
... That also works with spaces if you have a half decent editor?
My great concern is that programmers are supposed to be masters of the computer world. If you can't handle or implement process to deal with tabs and spaces, what are you going to do with SQL? XML? JSON? Random garbage input, Etc.? 
&gt;Tab first to the indent level of the parent line, and then spaces to line it up. [http://ooxx.me/wp-content/uploads/2013/10/TabsSpacesBoth.png](http://ooxx.me/wp-content/uploads/2013/10/TabsSpacesBoth.png)
Yes, but I've never seen a professional Python team where the style guide didn't start with "Use PEP-8, except as contraindicated below." Which means spaces. Which means fuck all these tabs people for as long as we're on /r/python. More power to them on /r/programming or wherever else.
https://www.python.org/dev/peps/pep-0572/ for people who want to wince.
Your tabs argument that everybody gets what they want is either incomplete or disingenuous. Every option requires somebody to compromise preferences, because I find your mixed tab/spaces solution to be totally gross and would hate to maintain it. Not every editor understands it, so now any time I do quick edits in a different editor, I have to waste time/energy thinking about this mundane, stupid detail. For my part, any time this has come up, my response has been: follow the convention and *just don't mix them*. It honestly doesn't matter whether you use tabs OR spaces - the most important point is that *you shouldn't have to think about it*. When you mix them, you're adding wasteful friction. FWIW, my answer to the "what if I want to line stuff up?" is that, with tabs, you need to choose an indenting strategy where every indent is a multiple of the tab width. Or you use spaces. I just wouldn't support the use case you highlighted because, as with most things in software, it's simply not worth supporting every use case. Here's one way to implement your example with a tab-multiple indenting strategy: func Example( → username string, → password string) { → → // function body indented with tabs per usual. → if os.Getenv("DEBUG") != "" { → → fmt.Println("Debug mode enabled") → } → SomeLongFunctionCall( → → username, → → password) }
For indent sensitive languages, some OSes will interpret tab as 6 spaces, others will interpret it as 4. This can cause code to be potentially executed on the wrong logic block if tabs and spaces are mixed.
When is your OS attempting to interpret tabs?
Have your IDE convert tabs to 4 spaces. You know, like you do.
Automating the basic (and complex stuff). Used to download manga pages by right click &gt; save as for every single page in every single chapter... now it’s as simply py -3 main -d “chapter url”. I’ve designed some for a lot of sites so there’s less hassle on me for fulfilling my otaku needs.
probably the best thing i have made in python is [async twitch bot framework](https://github.com/sharkbound/PythonTwitchBotFramework)
before you get in a habit of using camelCasing for functions/variables, pep8 recommends to use `snake_casing` for variables and functions, ex: def init_ui(self): pass # isntead of initUI redb (or red_b) # instead if redB
They most certainly are not..!
If I have it set so a tab is equal to 4 spaces in Notepad++ is it not the same thing?
Tabs are for creating tab-delimited files. Full stop. Only. Tabs do not occur in language, they shouldn't occur in code unless using them to delimit data. They are not for formatting. Fuck that noise.
For your .vimrc: https://stackoverflow.com/questions/1878974/redefine-tab-as-4-spaces/1878984
That's a pretty cool app you made. One suggestion would be to take out /u/ in front of username? So it'll say Happy Cake Day LukeAlSaba! instead of /u/LukeAlSaba!
The tab before the function name and the tab on the line below match up, and the number of spaces matches the length of the function name, so they should always continue to line up no matter how many spaces a tab represents in your editor. \tfunction_name(username, \t..............password) Tab size won't break the alignment.
Oh my fault. I'll get this corrected 
Thanks man. I feel like a lot has been falling into place over the last 2 weeks. I just moved to a better city in a richer area, in a house with close friends who share the same creative pursuits. I had 10 days off of work to enjoy my new found freedom and to take in my new surroundings and it’s been only for the better. My new context is has left me only more confident that I can have a more satisfied work life where I’m freer to create a more meaningful impact in my work place’s team morale and financial longevity. But I also love sharing the shortcomings of the place, here’s a few more fun tidbits our train wreck facility: Our thermostats are cheap and poorly placed, so our temperature is set at 79, but our highs are 96 and lows are 63. Since our ballasts are so inconveniently located 15’ high and 3’ apart, and our list of tasks are is long, we went 1 month with our lights set at 50%, instead of 100%. Since the power constantly goes out, and our facility is riddled with cheap, $15 timers instead of a manageable central system, our analog timers stop moving for as long as the power is out. They only get synced *after* they've done their damage. Since we have so many timers, digital no time is in sync for 6 months out of the year, because our idiot boss doesn’t want to adjust them in accordance with daylight savings time. Imagine how much fun it is to talk about adjusting feeding schedules with respect to time, only to find yourself in front of a timer not knowing if he meant 7PM PST or 7PM timer time… We have six 5 ton A/C units on the roof. 4 of them are used but new to us. None of them are being serviced properly for some reason. You can hear the belt screech when motor kicks on. They like to surprise us with leaks. Our water pressure is very high for some reason. It’s great, it can fill a 115 gallon reservoir in 4.5 minutes. It’s also great at finding and exploding weak spots in our PVC plumbing. Our extension is pipped using copper. We have 6 Bluelab pH meters. We have no routine calibration. Our rooms are large. Two overhead 230V dehumidifiers operating off a single controller would work flawlessly. But instead we have 1 overhead and 5 little residential dehumidifiers, each with their settings, some located only where a cat would sit. Have fun readjusting all of that after the power goes out. There’s 6 people running this facility: 1 boss, 5 general labor. I’m the only person in that building who is even remotely familiar with spreadsheets. At least we get free hotpockets and soda. 
let the idle do the indentation for you
Spaces are for recognizing one word from the next. Full stop. Spaces do not occur in natural language, they shouldn't occur in code unless using them to delimit reserved words and data. They are not for formatting. Fuck that noise where every coder is forced to see code with the exact same spacing because some Neanderthals don't understand that it is possible to display it in a way that will please EVERYONE.
`min` `max`in like a fool outside of the coder school
Thanks for the suggestion! I will make that change 🙂
these are memes for people who don't actually program. aka /r/ProgrammerHumor
Current codebase standard is more important. After that, it is setting your tab to be spaces. For me, Javascript is 2 spaces (because statements can get so damn long), everything else is 4.
This is really neat. Automating Outlook is especially useful for people who spend all day fielding emails, and would like to automate some of it. The title is kind of misleading though. Rather than "Windows Applications", I think "Microsoft Office Applications" would be more suitable. I don't know many other apps that still have support for COM, but I might be wrong.
I don't think you're understanding what /u/LADataJunkie is saying. If you first save all the profiles to HTML files on your computer, you will save yourself the hassle of having to re-scrape data if you change your mind about what to scrape, or run into bugs with your parsing code.
Not really appropriate for service accounts in a production environment, sadly. It's not that it's hard to alter .vimrc, it's that by the time I'm actually changing code in vim instead of PyCharm, it's not my development environment anymore. Thankfully, no one is going to actually go to a four tab indentation, so we're good!
Looks pretty cool! I would recommend learning an ORM (such as SQLAlchemy, or peewee) instead of using manual SQL statements. It will save you lots of time and headaches in the future. SQLAlchemy is commonly used alongside Flask, and there's a [popular extension](http://flask-sqlalchemy.pocoo.org/2.3/quickstart/) that makes it incredibly easy to integrate.
No worries. I had a roundabout way of getting to the point, I guess.
I’m a spaces user, but you’ve completely missed the point. 
i like that they are thinking about ways to clean up stuff like this: m = pattern.match(string) if m: print(m['foo']) but i think having `:=` being the "assign and return" operator is probably gonna kinda ugly, its always possible it may not be as bad as it seems when we can mess with it, im willing to bet there is a better alternative though i wonder if they could just make `=` work in expressions. if m = pattern.match(string): print(m['foo']) but idk if that will also cause confusion or not
What we need is an editor configuration to display leading spaces as N character widths. Then you use spaces and see code indented as you choose.
What Go does right is has a clearly articulated standard in the tooling.
That's an odd complaint for Python considering how much syntactic sugar this language already has. As far as I can tell, this is the "=" behavior in C, but given a new operator.
It is "hard" to make money on your own as a software developer. "Hard" in quotes because making money in general has much less to do with your technical experience (though yes, it definitely matters!) and more to do with leveraging connections and "selling" yourself or your product. With this in mind, in your position, I would reach out to companies, schools, organizations, etc. in your area and basically just tell them that you're young and learning software development and that you would like the opportunity to write some code for them or with them. You want to make it sound good for them, and not like its charity. The goal initially would be to form relationships, then let that grow into something lucrative. It is definitely an uphill battle. If you are in school, maybe try leveraging some relationships with teachers to find opportunities, i.e. find out who is in charge of the website, etc. and ask if there is anything you could do in that regard. Another technique would be to notice things that could be better, and propose you write a solution to that problem. Super vague, I know. Making money is not an exact science (unfortunately), but the Law of Serendipity applies: Lady Luck favors the one who tries. So keep trying. A couple other tips, for free: * Never stop doing side projects, even in University (if you go that route) * Read. Programming blogs, books, etc. Doesn't matter. Pick ones that interest you. Dedicate just 15 minutes to it a day and reward yourself for it. It will pay mega-dividends later on. * Join Programming discussion groups (there are Discord groups, etc. But you're already on reddit so way to go) * 5 minutes of planning can save hours of development and debugging. That's all I got. Feel free to message me about anything!
I pretend to be all about spaces at parties but I don't give a shit.
*tab you
I prefer tabs, but if it’s spaces, then I’m that weirdo. Obviously, I use whatever convention the codebase prefers, but for my own stuff, tabs it is.
See other comments here. Some spaces are used for ident levels, some spaces are used for formatting (lining things up). Automatically determining between the two is hard.
I work at Satellogic, where we build satellites and then we use them to provide Earth imaging services. We use python for lots of different stuff, including the two main things in which I work: planning, which runs on Earth, and the plans executor, which runs on the satellite. It's kind of an automatic pilot, using the satellite to execute the planned stuff unattended, queuing results, etc. I love this work :)
It is mixing tabs and spaces that is the problem, not tabs by themselves.
I just finished writing from scratch (not using any lib) a machine learning model based on Genetic Algorithm. I know there are many good libs for this, but doing it by myself made me feel proud.
I am imagining you mean something like this: ```python if Test(value): result = FunctionWithLotOfParameters(parameter1, parameter2, parameter3, parameter4, parameter5, parameter6) ``` And I agree, working out that parameter5 was supposed to line up with parameter1 is hard. 
If this question was asked somewhere else, then yeah, anything goes. But for Python: just 4 spaces, nothing else.
 you like it when I do this how about this this is very dirty oh yeah you like this you dirty programmer
&gt; In Python that's 4 spaces. No thanks, tabs are fine. Tabs are *literally* made to indent. That is their only purpose. Set your tab characters to indent properly and be done with it.
XFLR5 is the successor to XFOIL and does 3D. It's ok for simplified models, but at that point, I'd use OpenVSP. I'm not familiar with Tornado, but it seems a lot like XFLR5 and OpenVSP. &gt; if you wanted a structural analysis of the loads on the hull you would use a finite element analysis program like abaqus, Abaqus doesn't do aerodynamics, so you'd have to map pressures. Nastran does though. Nastran will also calculate control derivatives, which Abaqus won't. It sounds to me that the OP needs a more general shape and not just a wing/aircraft. I'd go with OpenFOAM in that case.
This guy codes an IMAX screen.
PEP8: &gt; Spaces are the preferred indentation method. &gt; Tabs should be used solely to remain consistent with code that is already indented with tabs.
Have github?care to share?
Wow, Thank you a lot for that detailed response, I'll definitely contact you whenever I have a hard to answer question haha but seriously thanks. I'm probably going to delete this thread later but I am definitely screen-shotting What you said, thanks 🙏 
I hate tabs. Your trying to help someone else? Code looks completely foreign. Logged into a computer you don't normally use and does not have your home, you are trying to make sense of the code instead of what you need to do. With spaces it is always the same no matter what you do. The code looks the same for everyone is a feature.
What are you using to implement? Detailed explanation?
Is this like guacamole?
Your second argument for the first point contradicts your entire argument for the second point. The only reason tabs worked at those companies was because having the tab standard meant everyone abandoned individual preference to have their code's presentation be consistent. Or, if they didn't abandon individual preference, they had the exact problem I described when looking at code on a machine not set to their personal preference. I've been at plenty of companies over plenty of years that don't set a specific tab preference on communal machines, and wasted plenty of time in those meetings waiting while the presenter found and set the preference for displaying tabs *as a specific number of spaces* to fix the problem. Should those companies have had "better" style guidelines and had their employees adhere to them more rigidly? Possibly, but that sure sounds like an odd thing to spend company cycles on *instead* of developing product, *unless* you can make a quantifiable argument for enhanced productivity or some other measure, the only one I've ever actually heard that stood up at all being file size. Your first argument for the first point is a bit of a non sequitur: a class is an atomic unit of coding, but it doesn't follow that it is *best* represented by an atomic character. I can totally understand why it would *feel* like it follows, but that doesn't mean it *does* follow, except subjectively.
It's close, but it isn't. = in C/Java/Javascript only set the variable in the branch, unless shadowing, whereas Python is equaivalent to using = before the statement. C/Java/Javascript/other languages if (c = 0) {return c} else {return c + 2} // c was never previously set, c is null/undefined/nameerror Python if c := 0: return c else: return c + 2 # c is 0, no issue.
Two problems come to mind. (1) The indention of tabs varies with text editor, but a space is always one space. Seeing text differently across applications (vim, browser merge request, diff tool, etc) slows you down a tiny bit. Our brains are flawed and we should accept our humanity. Consistency = speed (2) Git diff in command line puts a "+" or "-" character in front of lines added or removed. This added character will bump some tabs to the next tab alignment various indents in a {} will be misaligned. Spaces will hold constant. I've had problems with tabs, but never spaces. The tab key tabs by default. Change is hard. Sticking with day-one habits is inertia.
Can you provide a link to a source or something to read on that? I am intrigued.
Man I hope you meant the IDE, cause I'm not see Eric's got time to stand over everyone's shoulder all at once.
That is one of those things that is technically correct (except speed should be time) but so irrelevant it's wrong 
Written like a true php dev. Fixed like one too
It depends, as I'm not a Notepad++ user; if what ends up in the saved file is a single tab characters but what is *displayed* is 4 spaces, then yes. If what ends up in the saved file is 4 space characters, then no.
Also, write down the convention explicitly in the documentation as well as ask for changes during code reviews for syntax inconsistencies. There is [editor-config](https://editorconfig.org/) which allows the conventions to be written as configuration.
I mandate that all of our developers use eight U+2009 (or &amp;thinsp) characters. /s
Why quartiles specifically? I don't think it makes sense for the API to assume you'd want that, consider if your data was just a sequence of coin flips. The API provides you with this basic describe and percentile functions that you can combine to create your own helper function to provide a more detailed summary. 
thanks
Yeah boi, I am a teenager who has a random "anonymous/guy fawkes musk wallpaper", gone through 15 pages of "violent python" and find writing classes difficult. I laugh at these types of jokes, because I don't know squat about PEP8. I google stuff " how to be like silicon valley's gilfoyle in 1 week?". My youtube feed is full of silicon valley, big bang theory, Mr. robot videos. Sometimes a computerphile video will pop up, i will try to watch it, but after 2-3 minutes i will convince myself and say that, these guys don't know nothing about hacking or programming.
We're an open source project and accept contributions ;-)
Is gamer allowed to answer? *Jump*
&gt; Corey Shafer on "unittesting" https://www.youtube.com/watch?v=6tNS--WetLI for those looking for a link.
I think the real question is print("Hello World") or print('Hello World')
Tthis subreddit's design is quite similar to both /r/webdev and /r/web_design. Easy mistake to make, especially when you have them on the same subscription list. P.S. I'm not really a PHP dev in general; I just make some of my own tools, and PHP has repeatedly proven more cross-compatible for my needs than Python is. Unfortunately.
Here's a sneak peek of /r/webdev using the [top posts](https://np.reddit.com/r/webdev/top/?sort=top&amp;t=year) of the year! \#1: [Animated login avatar](https://v.redd.it/38jmec4zrlh01) | [89 comments](https://np.reddit.com/r/webdev/comments/7zanzv/animated_login_avatar/) \#2: [The FCC is killing Net Neutrality - Help spread the word in your own websites](https://np.reddit.com/r/webdev/comments/7emfo5/the_fcc_is_killing_net_neutrality_help_spread_the/) \#3: [An animated loading icon I made for my side project mydevportfol.io. Supposed to convey that the app is coding the user a website. Happy with how it turned out, feedback appreciated though.](https://i.redd.it/qftx8zcngnjz.gif) | [201 comments](https://np.reddit.com/r/webdev/comments/6xsl3l/an_animated_loading_icon_i_made_for_my_side/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
&gt;If everyone used tabs then the only problem with spaces would be that everyone else uses tabs. This reasoning implies there's no difference between the two.
I'm pretty sure the purpose of tabs is to align text as in a **tab**le. 
That’s what you get for not automating and virtualizing your infra like the worthless cattle they are and fixing shit in place instead =P Kill that lame horse and deploy a new one! 
Here is an image of the program running: [Imgur](https://i.imgur.com/whqsETN.png)
&gt; Here is an image of the program running Sorry if I'm not using proper reddiquette. I'm fairly new to posting on Reddit.
More importantly, Go removes the entire freaking question with go fmt. Now... if only I didn’t have to commit my vendor directory like it’s 1995...
A better solution than adding spaces to line things up would be for that to just be handled as a rendering option in your editor/viewer (exactly how the width of tab characters is a rendering decision, not something that is encoded into your program's source).
When a master browser who was up to no good, started making trouble in my network neighbourhood.
Cool, good work! 2 things I have to say- 1. "good" isn't descriptive var name, I had to run that print function in my interpreter to find out it's simply adding a tick. 2. Why the randomly generator filename? Should only be another couple lines of code to pull the video title from FB as well? 
I let one user story slip and I got all scared
In C, c would already be declared and allocated prior to the if statement, or it wouldn't compile. It may contain garbage, but it will have a value.
&gt;Tabs are literally made to indent. You shot yourself in the foot with that one. Even a few seconds of [research](https://en.wikipedia.org/wiki/Tab_key#History) would have saved you. &gt; The word tab derives from the word tabulate, which means "to arrange data in a tabular, or table, form."
key remap (tab=4 spaces) problem solved...or use an editor with an auto format capability the code however you want ...format....commit
Right, but the already contained value would be null. In Python there is no equivalent, and in other languages that do this that have no equivalent cause a name error. Python doesn't. Basically other languages scope the variable to the branch it is in, whereas Python does not.
will try for sure ^^_
If I hide, how will I be able to tell you to get a real editor like Emacs, not that toy you call vim? A Real Editor can automatically format code according to your preferences, whether that is spaces, tabs, a mix, or an increasing Fibonacci sequence, and the reformat it back to the original indentation style on save.
awesome PyFiSync !
For my understanding &gt;if variable: &gt;....variable+=1 Became &gt;if variable:= variable+1 if variable is not None Like if a single if wasn't implied that it wouldn't go ahead if it was None. Awful.
powered by python? awesome news !
github link somewhere?
I was just browsing the nbconvert repository. It seems that they are adding a ```--no-input``` flag in an upcoming release, so that should fix that.
python and go go together like wine and cheese. You don't mix them but you have them side by side doing what they do best to make a lovely evening.
Raymond Hettinger, Python core dev, also disagrees with the religious application of PEP8. Raymond Hettinger - Beyond PEP 8 -- Best practices for beautiful intelligible code - PyCon 2015 https://www.youtube.com/watch?v=wf-BqAjZb8M
#### [Raymond Hettinger - Beyond PEP 8 -- Best practices for beautiful intelligible code - PyCon 2015](https://www.youtube.com/watch?v=wf-BqAjZb8M) ##### 225,914 views &amp;nbsp;👍3,487 👎33 *** Description: "Speaker: Raymond HettingerDistillation of knowledge gained from a decade of Python consulting, Python training, code reviews, and serving as a core d... *PyCon 2015, Published on Apr 11, 2015* *** ^(Beep Boop. I'm a bot! This content was auto-generated to provide Youtube details. Respond 'delete' to delete this.) ^(|) [^(Opt Out)](http://np.reddit.com/r/YTubeInfoBot/wiki/index) ^(|) [^(More Info)](http://np.reddit.com/r/YTubeInfoBot/)
py mailing list discussion on it : https://mail.python.org/pipermail/python-list/2018-July/735300.html
i only write my programs in one line to get around this very issue.
You should look into dep. It creates a .toml and .lock file which is an equivalent to requirements.txt for pip. It will build your vendor from those two files. Our Jenkins pipeline pulls dependencies with dep before compiling.
I use tabs, as I dont get paid by the hour.
 https://github.com/sgriffin53/chess0.11
thank you !
Have you looked into Plotly or Bokeh? Not sure if the interactive functionality will be preserved upon rendering though
Set your tab key as 4 spaces and they are.
Cool. Thanks!
1 what? 1 tab? I agree.
I really don't understand why this hasn't murdered this debate...
VS Code does this by default.
People get bored I guess.
If you're not doing it already you should look at Qt5 Designer as well. It's really handy for prototyping Qt5 GUIs. You can even use pyuic5 to convert your Designer files into Python code.
Just setting these settings is not enough to produce nicely formatted code with tabs. If you want to keep it portable you and everyone else that works on the code also need to remember that you should use spaces for alignment if you use tabs for indentation. Never use tabs for both. It doesn't work. With spaces for both you are guaranteed that it looks correct everywhere. Not necessary like your taste, but correct. Which I think is more important. I use space for indentation (if I have that decision) and I also have exactly this config you describe in my vimrc.
Didn't know coding in whitespace paid so much
Just configure your IDE or formatter to comply with project standards (if spaces use smart tabs).
Tabs AND spaces!
One tab is four spaces, so in python they are the same
In C, the variable isn't guaranteed to have 0 assigned if it's on the stack and never been assigned a value. There is a variable bound to a location, but the contents aren't guaranteed. Static variables will be zero initialized if not explicitly initialized. In both C and it sounds like Python, c would be in scope in the else statement. The original example looks closer to the C++ if with initializer. Except in Python, c will exist after the if statement? if (int c = test()) { c++; } else { c--; } //c++; c is not in scope here
Although, to be fair, they do a shit job of that
Can't you just fix the tab spacing with the equivalent command mode command? So paste in a 1-liner after the session starts and it stays out of the vimrc? 
tabs . Why is there even a discussion about that?
Sounds interesting!
It's whatever the Black formatter uses. 
Usually IDEs have a “change all indentation” option. The main reason for spaces is that it looks better in most text editors and sometimes the tab key can have different functions. If you don’t have enough spaces, Python will usually give you the “doesn’t match outer indentation level” error. I’m supposed you don’t get that.
When you say Rapberry Pis, how many of them did you have ?
This is the strength of the python community, he is not only a talented Python programmer he has significantly contributed as a core and is still allowed to publicly disagree yet we (the python community) still choose to focus and celebrate his sizable contributions to python software. Agree to disagree and commit.
Just as we are allowed to wear shoes and sandals, style of code should reflect personality and more than a little unique expression of self.
Probably not. I don’t really wanna spread any false accusations, but I’m pretty sure this guy has been creating temporary accounts and has spammed around asking for others to do his homework. It’s kinda sad, really.
You move a carat around the text to create code in the correct places. Why the hell would you create five moves to make instead of one?
The example you described seems to be what I mean. I'll admit my C/C++ is rusty. In Java/Javascript though, c would not be in scope, even in the else branch (assuming it was declared but not initialized prior)
I was about to suggest blockchain as well. Get 'Mastering Bitcoin' by Andreas M. Antonopoulos and start by configuring a node on your Pi. The book is a bible of blockchains and will get you very far, been there, done that.
I personally prefer to use tabs, approximately equalling 4 spaces.
As a real live Scotsman, I love this reply.
I like it. [I made some changes](https://github.com/novel-yet-trivial/Tkinter3DExperiment/blob/master/OnePointPerspectiveCube.py) and sent you a PR.
A silly JRPG demo that can be played in the terminal written from the ground up. It was a great OOP learning experience. https://github.com/superDross/HonestQuest
 ... Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. ... Flat is better than nested. ... Readability counts. ...
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [novel-yet-trivial/Tkinter3DExperiment/.../**OnePointPerspectiveCube.py** (master → 28e5980)](https://github.com/novel-yet-trivial/Tkinter3DExperiment/blob/28e59802d1e602d8a6b3f201bf36052364669ff5/OnePointPerspectiveCube.py) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e1pekia.)
That's cool! I was scraping a bunch of fantasy football projections and then averaging them out. I would print out the CSV of the averaged projections and make changes to them through the week. Then I generated some lineups that I liked. I made $500 and $250 in 2 GPPs from a big game off of Andrew Luck and one off of Big Ben. I ended up slowly losing it all over the next season and a half. But I always have a ton of fun applying programming to my other hobbies and interests. The problem with football is that there are no good stats on offensive linemen. MLB should be a lot easier since they have so much more quality statistics.
Feel like they could have taken a tip from another similarly beautiful language, swift, and used [its syntax for assignment expressions](https://docs.swift.org/swift-book/LanguageGuide/TypeCasting.html#ID341) ``` if pattern.match(string) as match: do_something_with(match) ```
Interesting, if you need more people do PM me, I will be looking forward to it.
I remember when we heard a lot of people against f-string. It's now considered the nicest features of python 3.6. Give it time.
Go on...
An Enigma encryption machine simulator with all features, 100&amp;#37; historically accurate. [https://gitlab.com/cernyd/gnunigma-python](https://gitlab.com/cernyd/gnunigma-python)
The code needs cleaning up and I'm hoping to write a post about it. Stupac62 is right, it uses the openai gym, deep Q-learning and google colab. https://github.com/garybake/altered_keras https://yanpanlau.github.io/2016/07/10/FlappyBird-Keras.html https://colab.research.google.com/
Agreed on the title thing, there's more to COM than Office. Still, very useful blog post.
Technically it isn't accepted yet. Guido has announced his intention to accept it, and given the history of the PEP I doubt anything will change his mind. But, for now, the PEP remains a "draft". Enjoy these last few days before the coming winter.
Would you explain a bit more about it ? Sounds interesting!
Fabric is pretty fun. I'd like to use it a bit more, but so far I've only used it for one project at work to deploy some custom code to a number of worker nodes during client projects, which I still think is pretty cool :P
Share code please!!!
It's more about catching typos than confusion. 99.999% of the time, that's a mistake. 
I hope you got a hell of a bonus for this! 
Declaring a new function for every branch is messy and changes scope. You also don't get fall through.
Welcome to the world of python!
Fuck this
You’re using synthetic data to train NN’s to learn the generative model? Why not just model the observation data directly, what does the NN add?
The reason why they didn't is because this had to work in logical expressions, and from a parsing standpoint, it would be extremely difficult to determine the assignment expression in the context manager of a comprehension containing the expression, and the assignment of the context manager itself.
Why is it ugly, in comparison to other languages = already assigned and returned. But changing that too late in the game in Python would lead to a whole new version of the str and unicode debacle. What I don't like is that this is pure syntactic sugar. This could have been made smart and tested any expression before assigning, how other languages do it-- I.e by itself there is no exterior expression, thus it passes, thus variable assigned. Otherwise the exterior expression is tested (ex a simple if statement, or the entire compound of it), and only if it passes, the variable is assigned. This would significantly increase performance and decrease costs on long term running code, like webservers.
I embedded a Python interpreter in a node-based lighting and rendering application, so that other people could write custom nodes in Python (instead of C++) that could interact with the rest of the node graph. It was used for all DreamWorks Animation movies from How to Train Your Dragon 2 to Boss Baby. When I wrote it, there were 10 C++ nodes. When it was retired, there were 14 C++ nodes and almost 40 Python nodes.
# Python Messenger Wrapper An unofficial Facebook Messenger Wrapper for Python. # Installation ``` pip install messengerwrapper ``` # Developping for developer ``` Python-Messenger-Wrapper$ pip3 install -e . ``` --- testing ``` Python-Messenger-Wrapper$ python3 tests/tests.py ``` individual testing ``` Python-Messenger-Wrapper$ python3 -m unittest tests.test_set.TestSet.test_save_admin ``` # Example Login ```python from meesenger import login session, c_user, fb_dtsg = login.get_session(user, passwd) ``` Logout ```python from meesenger import logout logout(session, fb_dtsg) ``` Pull ```python from messenger import Pull p = Pull() while True: for data in p.get(session, c_user): ... ``` ## Integrated Wrapping Same as individual usage without passing first three parameters(session, c_user, fb_dtsg) ```python from messenger import Messenger m = Messenger(session, c_user, fb_dtsg) # get.get_threads(session, c_user, fb_dtsg, limit=10, before=None) m.get_threads(limit=10, before=None) ``` ## Individual Use Scenarios ### Getting Get friends ```python from meesenger import get friends = get.get_friends(session, c_user, fb_dtsg) for uid, f in friends.items(): ... ``` Get message ```python from meesenger import get messages = get.get_msg(session, c_user, fb_dtsg, recipient_id, 10, before=None) for m in messages: ... ``` Get threads ```python from meesenger import get threads = get.get_threads(session, c_user, fb_dtsg, limit=10, before=None) for t in threads: ... ``` ### Sending Send message ```python from messenger import send body = 'Hello, world' recipient_id = 'fb user id' send.send_msg(session, c_user, fb_dtsg, recipient_id, body, group=True) ``` Upload file Send file ### Setting Set emoji ```python from messenger import setting thread_id = 'thread id' emoji = '👍' setting.set_emoji(session, c_user, fb_dtsg, thread_id, emoji) ``` Set nickname ```python from messenger import setting thread_id = 'thread id' participant = 'member user id' new_name = 'new nickname' setting.set_nickname(session, c_user, fb_dtsg, thread_id, participant, new_name) ``` Set thread name ```python from messenger import setting new_name = 'new name' thread_id = 'thread id' setting.set_thread_name(session, c_user, fb_dtsg, thread_id, new_name) ``` Add people into group ```python from messenger import setting thread_id = 'thread id' participants = ['participant 1', 'participant 2'] setting.add_participant(session, c_user, fb_dtsg, thread_id, participants) ``` Remove from group ```python from messenger import setting thread_id = 'thread id' participant = 'member user should be removed' setting.rm_participant(session, c_user, fb_dtsg, thread_id, participant) ``` Make admin ```python from messenger import setting thread_id = 'thread id' member_id = 'member user should be made as admin' setting.save_admin(session, c_user, fb_dtsg, thread_id, member_id, add=True) ``` Remove admin ```python from messenger import setting thread_id = 'thread id' member_id = 'member user should be removed from admin' setting.save_admin(session, c_user, fb_dtsg, thread_id, member_id, add=False) ``` Leave group ```python from messenger import setting setting.leave_group(session, c_user, fb_dtsg, thread_id) ```
Imo, You need to put comment on your code.
Just had a go at using this for some scraping at work and it’s saved me hours of work to pull all these libraries together. Just trying to see if I can get it to use proxy servers now so I don’t get blocked ! 
Lmao I think that thing makes more errors than it gets correct
Ohhh, that does sound handy! Would you be willing to share?
Care to elaborate on it's functionality? That seems like a lot of money for something that sounds so simple
Most people who were against f-strings simply hadn't used a similar feature in another language before. To those who had, it was blatantly superior and those opinions were prominent. This is bloat and I don't think too many people will be surprised 10 years from now when it's considered that. 
How did the billing visualizer save $500k/year? Is it that you were able to remove inefficiencies or duplicate billings? Generally curious how the visualizer helped.
Care to expand on this? I'm looking to get something similar going
with open(credit) as money 
one would think ,being effienct and fast would be important for satellite software , which is not python but maybe c++,c . No?
Ads. Like Google and Facebook.
Question: In 'messenger/header.py' you have: ``` 'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 Safari/537.36', ``` is that a correct way to do that? This tool is not browser based and does not have capabilities of a browser, so shouldn't the user-agent reflect this? 
GitHub?
A little run through pylint would be nice, but that's me disliking inconsistency and appreciating the virtues of defaulting to pep8 (notice how everything you import from the standard lib and requests aren't from a CamelCase.py file?). Also your generate_random_link function as a quick example could be a lot more concise and readable: from string import ascii_lowercase from random import choice def generate_random_link(): return "".join(choice(ascii_lowercase) for _ in range(25)) print(generate_random_link()) The loop to generate ints followed by a loop to convert them to letters just seems like a lot of work, especially considering the ascii letters are just 8 bit ints: from random import randint def generate_random_link(): return "".join(chr(randint(97, 122)) for _ in range(25)) print(generate_random_link()) Though reading that requires knowing the ordinal values of the lowercase ascii letters. As for the spaghetti code section, it does seem like you could use a loop to fill out say a NamedTuple by iterating over your data, though if sort order is desired (and not established in the json) then it'd still maybe end up being pretty pasta.
What's your within username? Wanna check it out :)
Now we just need a working messenger for terminal and I'll become a happy camper.
Because these http requests we wrapped is observed from web browser. You can use browser tool to monitor fb messenger network traffic. In this situation, we need to make fake http header to fool messenger api server. If we don’t provide user agent, fb messenger server won’t accept our request. We just reproduced these behaviors which are same as people using messenger at browser .
Have you looked into binder? There's also Google's collabatory. Otherwise, some of the plotting frameworks have js sliders which don't run through python 
Just because some people are using something for a bad thing doesn't make the thing inherently bad.
see edit
see edit
Looks awesome! I might add support for asyncio if you don't mind!:)
Better shut the fuck up
Actually, my friend is exactly implementing cmd client by using this package . Let’s waiting for him(⊙ω⊙)
Honesty I think it's bad syntax. Ill need to care about sideeffects from list comprehention, and typos. Ill ban this syntax from my projects.
The same could be said about this feature. Assignment expressions are great. Most people are against them because they accidentally use it instead of == (this PEP solves that problem), they only used languages that didn't have them, or they never learned to use them properly (e.g. novice C/Java programmers). Assignment expressions are a bit of an "advanced" feature. You could very well get by in C never using them, just like you could get by in Python never using context managers.
Sure! Thanks for your contribution. :)
Makes me want to play football manager. 2d for life. 
Ah so it was more your analysis than the python scripts themselves.
What's the idea here a bit more in how it's getting locations? Like, wondering how you get something like this, which appears to actually be Mana Tsunami from Hearthstone. https://twitter.com/Keith_Event/status/1013876872709632004
So you are saying they are objectively superior and if you think differently, you've never used them properly? I've used them in C, and I was okay with it. Worked for me, because the return values were always clear and many people simulate the universe in a single line anyway. In Python, I feel it goes against the Zen of Python and it does not add anything useful, other than a lower line count.
Living
Thanks! I'm definitely planning on using SQLAlchemy. By the time I figured out what an ORM was I had some major issues in the code I had to focus on lol. Thankfully I think a lot of the refactoring I have to do is from the database, so it shouldn't be that much more work to just replace it all with SQLAlchemy.
I have to respectfully disagree with the ORM suggestion. OP's db.py is currently readable and, most importantly, it's clear what is happening in the database during the request. I'm all for abstraction at the right time, but as a database guy the number of times I've had devs complain that the database is slow, but then not actually know the query they are trying to run because it's hidden by the ORM is kinda sad. Maybe that's more of a reflection on the devs but I feel like the ORM is abstraction for abstraction's sake that adds very little over using the driver directly.
Sure, I get that. The question was more about defining own user agent.
&gt; Flat is better than nested &gt; Readability counts &gt; Flat is better than nested &gt; Beautiful is better than ugly Apparently.
I think Event: Wildfire has occurred in Illegal Alien Yup, definitely checks out. I need to take a look at the source. I feel I'm bound to do so by some rule of the universe.
What you say is blatantly false in C and C++. The semantic of an assignment expression according to the C standard is (emphasis added): "An assignment expression has the value of the left operand **after the assignment**". C++ is even more explicit, by saying that the value computation of the expression is sequenced after the assignment. Since you need to evaluate the entire test expression before selecting a branch, this means the variable is guaranteed to be assigned in both branches. I don't know about other languages, but I would be serioulsly surprised if they had the semantic you describe. Could you please provide evidence of your assertion?
Have you made money from it?
You are right. I will consider add some configuration class.
I've made a couple of games. A route planer for when I was working deliveries at a post office (traveling salesman with 20-120 stops, the processing time could take ages). the most useful thing tho is a website me and my co-renters (we are 5 renting together) use to do bookkeeping and keep track of rent (also does tax calculations for us). also was part of the EVE Online dev team for a while (the game uses stackless python)
Good question! I welcome 3.7 but need 3.6 for certain use cases. There's a working answer here: https://stackoverflow.com/questions/51125013/how-can-i-install-a-previous-version-of-python-3-in-macos-using-homebrew In short: # Use a deep clone of Homebrew (may not be necessary) git -C "$(brew --repo homebrew/core)" fetch --unshallow # Update brew brew update # Install the latest Python 3.6 via brew using its commit id brew unlink python brew install \ https://raw.githubusercontent.com/Homebrew/homebrew-core/f2a764ef944b1080be64bd88dca9a1d80130c558/Formula/python.rb Now you can use `brew switch python &lt;version&gt;` to select 3.7.0 as a default when you're ready to move to it. 
Everyone needs to chill out. No one is going to force you to use it - you can ban its use in your projects or at your company. It wont start making appearances in production code for over a year, and it's not exactly the most complicated piece of syntax, conceptually speaking, so understanding code that uses it wont be that difficult. The world will keep on spinning. 
Oh, so we are finally getting a pseudo-let in comprehensions! [s for s in lst if (s := s.strip()] There was no way to express that before without a nested comprehension. 
Please, let it be in curses.
Or, "How PyLint Could Have Saved Your Company." Good old W0102, helping anyone who bothers to understand "why pep8?" since &lt;=2008.
Yeah you're right that it's geared only towards python, but that's where it excels and I really prefer it over vscode for this purpose. It does have a lot of extensibility in terms of multilanguage support for projects. I end up writing a lot of my js, html, css etc right in pycharm, including flask syntax and template support (though I believe some of that is the paid version where vscode would just be a plug in). I use vscode for just about everything else. I love the extensibility, light footprint, terminal and built in debugger (though I haven't used that a whole lot as of currently). I guess the bottom line is use what ever works best for you, they're both great tools. I just was confused by the description basic, which pycharm is not. 
I like it.
We're using the synthetic to train a classification model, attempting to classify photometry as either consistent with a pulsating star or not. For the spessific type of pulsating star I was studying there were simply not enough known cases to effectively train a model on.
&gt; f-string TIL. Thanks!
I have been using Python for about 2-3 years. Python has been such a blessing for me. It helped me learn and implement CS concepts and not just that, it even landed me my first job. Using Python I have created many scripts that automated my daily tasks. Off late, I have started to use Raspberry Pi with Python and have created some cool applications. Here are some noteworthy personal projects that I have made with Python. 1. [Torrent Scheduler/Downloader](https://github.com/boudhayan-dev/Control-And-Schedule-Torrent-Downloads-Using-Email) This was one of my very first project that I made with Python. So, I have this habit of watching Tv shows/ movies after I come home from day's work. Back in those days, I was a big fan of GoT and if you remember correctly, you would know that they used to release their episodes on weekly basis. Now, I wanted the torrents to be downloaded once I reach home. I did not want to spend any time downloading it. So, I built this script which would automatically download the torrent files and keep them ready for viewing. All you have to do is send the link of the torrent file to a pre-defined email id from wherever you are. Once you reach home, you'll find all the files downloaded. Note:- This is a very old project so the code quality is horrible. It was during the times when I was just starting to learn Python. I am pretty sure there can be numerous improvements made on that project now. Also, I DO NOT support piracy. Use it at your own risk. 2. [Blind Reader Project](https://github.com/boudhayan-dev/Blind-Reader-project) So this is a relatively new project built using Python and Raspberry Pi. The purpose of the project is to build a replacement for the Braille machines. It uses OCR to scan pages and uses TTS conversion to read them out for the visually challenged people. 3. [Automatic Waste Segregator](https://github.com/boudhayan-dev/Automatic-Waste-Segregator) So this is a big project for me. Infact it was my graduation project. Its basically a device that goes around a room and picks up waste objects on its own using a robotic arm and then categorizes the waste into biodegradable or non-biodegradable category using Machine Learning. There is also a front end application designed using Flask to remotely monitor the entire process. This was quite a challenging project for me. Took me around 3 months to design the physical as well as the software part. But the satisfying thing about the project was that EVERYTHING including Machine Learning, Robotics, Web Application and Image Processing has been implemented completely using PYTHON. No other language has been used other than Python. Besides all these, there were some small command line games as well like Hangman, Tic-tac-toe etc. I made a personal transcriber as well which creates a english transcript of your audio files and uploads them to your dropbox account. I made this because I was too lazy to take down notes in my lectures. I used to record the professor speak and then upload them to dropbox. Background python program would fetch those new files and transcribe them for me. It was pretty useful. 
Do you think this PEP allows for more readable and more beautiful code?
I don't think it's meant to be used as such but more like: instead of : p = func() s = p if p else None to: s = p if p:=func() else None
Why not just use crontab?
Why is this not being done with `as`? It's already a keyword, and its general meaning of "here is a name for something" is already well understood.
I'm actually working on the same approach. For those I can't automate, I'm writing a tool that will de-skill the work so that it can easily be outsourced. I don't think we could use Amazon Turk or whatever, but could easily get someone in to do the bits that require intervention. The stuff I need to write to enable this is a big tasks in itself. All interesting stuff though!
Not necessary the coolest, but one of the first thing I made when learning BeautifulSoup: [Manga check](https://github.com/vietvudanh/manga-check) Schedule to check for new manga chapter and open web browser on it.
Keep your API keys either as environment variables and get them using one of the billion ways to get an envvar (\`os.environ\['API\_KEY'\]\`, or packages like \`envparse\`) , or from a configuration file that you do not commit to Git. Even if you're circumspect, committing with placeholders is bound to eventually end in tears.
Answering best automated threads.
Ah ok, I see, so are you using a technique like SMOTE?
I’m curious why you don’t just use straight rsync? It looks at first glance that rsync will handle all the features you need.
Sounds fun! How careful do you have to be in your code as to not mess something up miles in the atmosphere?
It is probably proprietary license.
WIll looking forward to check it out, also, i would strongly advice to leave the bugs on so we could fix then together.
As a general piece of advice: while there's no canonical convention as to library structure, the following is more or less conventional in Python: \`\`\` T project\_name |---- dev |---- docs |---- project\_name |---- test \`\`\` For more on structuring a Python package well, [read this](http://docs.python-guide.org/en/latest/writing/structure/).
I still haven't used them once because they don't work with translations.
(noob here) So by supervising you mean they are deciding between swapping pools or which crypto to mine, or is it like more clocking and other parameters to have optimum electricity usage?
First off, learn to ask questions properly. Secondly, go to r/learnpython and read the FAQ and sticky.
It's frustrating to watch everyone start to moan about a PEP after it's approved. If you care so much about the language the time to engage is before the changes are accepted. I notice this is closely associated with the use of "they", an amorphous band of external parties who are apparently out to ruin everyone's day and should be able to read the tea leaves when discussing language features. "We", in particular, "you" can have a deep and lasting effect on the course of the language. Join the discussions when they come up, read the PEPs before they're included, raise your voice. It's an open language, with an open development process. There is no "they", just "us", the users and developers. Start joining in if you feel strongly about the direction of the language rather than moaning about it after the fact.
Nope, I was not familiar with SMOTE, but a quick glance at Chawla et al. 2002 seams to indicate it it's mainly useful when there are unequal numbers of objects in each potential class. Theoretically there should be about equal numbers of pulsators and non pulsators for this class of star. Essentially, we calculate the Fourier Transform of each light curve, with the number of frequency bins fixed, and train the network (a basic multi layer perception, implimented with keras and tensorflow) on the amplitude array of the FT. This loses some information in the form of signal phase (so it's harder to break degeneracies with temporarily coherent noise) but serves to highlight the parts of the data we are interested in (made the difference between a network classifing at 90% accuracy down to 5 sigma, vs 90% accuracy down to ~1.5 sigma). Now I should add that I am an astromer not a ML reasercher. So I'm sure my networks are not as well put together as they might be, and I probably missed some best practices or very recent advancements posed in the literarure. But for the scope of the work I was doing that wasn't so much of an issue.
I am not an expert in reviewing someone else's code and definently not on the rules of writing Python. But the way you request information from the used API in [Corc.py](https://Corc.py) reminds me of a similar project I am currently working on. In the Spaghetti code section you obviously assign alot of variables in order to use them as output. I would have created a nested dictionary which you can gather values from by using keys instead of assigning many variables. This example code is from my own project where I gather information about train stations in Sweden through a RESTfull API as well: `trains = request_output['RESPONSE']['RESULT'][0]['TrainAnnouncement']` `for train in trains:` `departure_board[train['AdvertisedTrainIdent']] = {` `'Canceled':train['Canceled'],` `'InformationOwner':train['InformationOwner'],` `'Information':train['InformationOwner'],` `'Departure':{` `right_now:train['AdvertisedTimeAtLocation']` `},` `'Track':{` `right_now:train['TrackAtLocation']` `},` `}` Due to the dictionary being an iterable I can just iterate over the "trains" and gather whatever values I want later on. I made a quick example for your code (which I have not tested). `for data in ['photos'][0]['tags'][0]['attributes']:` `big_dict['moods'] = {` `'face':data['face']['value'],` `'confidence':data['face']['confidence'],` `'gender':data['gender']['value'],` `...` `}` Obviously your dictionary would be alot bigger than my example. I hope this all is clear enough to understand. This basically is my first answer here on /r/Python and my english is probablt not the best. :)
How do you cleanly handle database migrations? what if you want to give users the ability to change the database they'll be using in the application? with all due respect i think it's something worth abstracting 
No?
Garage door opener. Although only one portion was python. The rest was with node and Cordova.
OH, then I have to apologize. I thought you were implying that.
Rsync really should be called rmirror. It doesn’t handle if changes are made to both sides and and doesn’t track moves. Plus, you either need to push, or pull. You can do one then the other but then you can’t use the `—delete` flag without deleting new files. Rsync the program uses rsync the algorithm for file transfer which is very good so I use that. Unison is often pointed to as the bi-directional rsync and if someone is looking at my tool, I suggest they also consider unison. Mine has exactly the features I wanted, while unison has many more options and has been around longer. I wouldn’t discount it for sure. 
tbh it's also frustrating when people who have self-volunteered to manage a language fuck up. they (you?) were trusted by the community to do a good job and failed.
So, this line is valid now? (wtf := True) 
You failed. "They" volunteered, "they" put in the work and effort to shepard and develop the language. What did you do? Sit on the sidelines then supply vague complaints when the decision had been made? If you care about the language, if you feel the people doing the actual work aren't getting it right, GET INVOLVED. Help. Noone's asking you to supply 40 hours of work a week to it. Keep an eye out for PEPs you care about, and speak up. Criticise early so the direction can include the things you so clearly care for.
I used Python to create a tool which reads a configuration file to configure subsequent `rsync` calls: [rsync-by-config](https://github.com/AndiH/rsync-by-config). I'm working with many different remote systems. Usually, I'd like to edit source code locally, transfer it to a remote box, then compile it there and evaluate. With different systems in play, it's hard to remember remote locations and rsync flags. `rbc` will look for a config file in the current directory (`.sync.toml`) and use that information to call `rsync`. Further, it can monitor the current directory for changes and sync on demand. The tool has some flaws, but it works. The most obvious lack is the unavailability on PyPI. I don't know anything about deploying there, so I've yet to find the time to read up on things.
Sure! As a paid project I developed a chatbot using Telegram API that can handle multiple conversations threads. Once you provide it with your wallet id and password you can send bitcoins using LocalBitcoin API directly from the chat. The bot is remotely deployed on an ubuntu server.
Sure I'll throw up a link when I get home.
Yeah sure I'll put the link up when I get home. 
I use dep, but at work we still commit the vendor directory. The consensus seems to recommend doing so when your repo holds the source for an executable, but don’t when your repo is just a package to be pulled in by other executables. At the end of the day, though, to paraphrase the dep docs, “it’s up to you,” but committing it is the only way to guarantee reproducible builds. If your build process pulls the dependencies, they could change between local development and the build. Fortunately GH hides the vendor directory and I wrote a little JavaScript snippet to rip hidden/folded files from the DOM in case there are so many dependency changes it makes the diff page slow. I’m looking forward to local mirrors with vgo but haven’t gotten there yet. 
Or course, tabs are leading whitespace only, and only used for indentation. Again, most of the big projects I've worked on have been C, not Python, so while this comes up from time to time, tabs are orders of magnitude more common, so I didn't even think to address that part. Additionally, the concept of aligning code is substantially less common outside of `struct` definitions. For line continuation, a hanging indent is used. There's no need to throw the rest of an argument list against the right side of the screen. foo = some_longer_function_name(with, several, arguments) if bar: baz(foo) Basically, my preference is KNR style. This works totally fine in Python, and I find it much more readable, so it's what I would do if given the choice. Like I said earlier, however, the "correct" style is whatever your project uses. If you want to change it, you have to have a conversation like this with everybody and change it all at once. Which, in practical terms, means you just accept the project style. As a final aside, I find myself in the interesting position of starting a Python project at work soon which will be a relatively small endeavor with one other serious UNIX hacker who also prefers tabs (8 columns). I'm curious to see where we'll end up on this project in terms of style.
You mean all the **VOLUNTEERS** who give their spare time so you (plural) can complain about Python, just great :-(
&gt; How do you cleanly handle database migrations? what if you want to give users the ability to change the database they'll be using in the application? This (and connection pools) is the biggest reason i want to use an ORM. Currently I'm using SQLite, but it's slow and I'm sure a lot of people would want to use something like MySQL or Postgres. Also, db migrations would be a pain with straight SQL, and I have a feeling that I might be doing several DB migrations in the future :P
Disagree. The way it is now is at least consistent - it works anywhere an expression does. 
Might be off-topic but if it can help: I'm actually doing FB chat in CLI using Bitlbee and the [bitlbee-facebook plugin](https://wiki.bitlbee.org/HowtoFacebookMQTT)
META
Two supervising the mining setups, one hosting an Avalon 4 at a remote site, and a few more for other uses.
Check to make sure the miners are still running and try to restart them if they aren't.
Awesome I'll pm you the link.I have been having trouble with this.Tried for an hour but could not finish it
Almost, it's just that I'm more fan of the interface that is irssi-like.
[It’s discussed in the PEP](https://www.python.org/dev/peps/pep-0572/#alternative-spellings), but it was rejected would have a different meaning than the `as` in `with ... as` This would prevent assignment expressions from being used in `with`s. Otherwise, would with func() as var be short for var = f() or __var = f() var = __var.__enter__() # snip __var.exit() 
Well, Bitlbee is the server-side part, then I use irssi to connect to it (but any IRC client might do the job :) )
I've actually had something like that on my "to-do" list of projects for a while. Currently, as far as I know, there is no Steganography library for Python 3 in Windows, and it bugs me a lot. I've got the process all logically figured out, but I just had some trouble figuring out how to implement it last time I had a crack at it.
Makes sense.. didn’t realize you were doing bidirectional syncs 
Yeah these days I just use Ansible for that kind of thing, but back when I wrote that tool, I was working in an environment where Ansible wasn't really a tool any of us had experience with.
Good point. Thanks for the feedback.
I made a tool that generates game's gif from given chess pgn (Finished today) [https://github.com/dn1z/pgn2gif](https://github.com/dn1z/pgn2gif)
Not quite fully automated, but doing my homework.
Hello! I'm a bot! I see someone has already suggested going to r/learnpython, a sub geared towards questions and learning more about python. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Parallel discussion here: https://www.reddit.com/r/datascience/comments/8vqwrf/comparison_of_top_data_science_libraries_for/?st=JJ5PGHJJ&amp;sh=f85c6653 tl;dr; this is a horrible comparison based on commits.
I am OK with this, it does actually make some code better. There are some [examples in the PEP](https://www.python.org/dev/peps/pep-0572/) This one for example: group = re.match(data).group(1) if re.match(data) else None I have done that many times, knowing that it evaluates twice, just to save a line of code. :-/
If you've done than "often" then it's time to write a generic function and put it on pypi so you don't have to keep re-writing that.
true
You are assuming people even have python 3.6. All the python instances at my job are 3.5.x and I don't think that is the slightest bit unusual. One of the reasons I am against things like f-strings and these assignment expressions is that they are pushing the language too fast. 3.5 was released in 2015 and was the first version to support optional static typing, but mypy (the defacto checker) didn't support async until the following year, at which point they added f-strings which took another 6 months, and now they have added dataclasses and assignment expressions, ... In the meantime there are still plenty of people are using python2. They need to give the community time to adapt to some of these new features and determine how best to use them (or even if they should be used). Its sad but not surprising that a number of developers have come to the conclusion that they async/await model is just wrong and they they need to redo the whole thing from scratch. And that is not helpful because by the time some people are ready to move up to a more recent version of python the focus of the core developers has shifted elsewhere. Its no longer clear if you even should be using that feature because who knows what will happen in the future.
r/learnpython
In other news, if Harry Potter can use magic to fix his glasses, why can't he use magic to fix his eyes? I got it here: \[Python parsertongue shirt\](https://programmershirt.com/collections/python-shirts/products/python-parsertongue-t-shirt-unisex)
Does it work if I have 2 step verification enabled?
Those theories are pretty much the backbone of all financial literature. CAPM to date is still relevant for most financial institutions. I figured it's good to transcend from traditional foundations to contemporary conventions.
A deploy script which sets up an entire autoscaling AWS infrastructure. If you need the information from the previous step, you could ask the API for that information-- or you could just use the JSON returned with the request and pass it to the next module which completes the next task. I chose the latter. My provisioning is just about the only procedural thing I do. I do not manage hundreds or thousands of nodes. But, I can spin up an entire distributed system in AWS over a few minutes as each foundation piece can trigger more than one branch of succeeding tasks. That same environment can be destroyed in a fraction of the creation time. Oh, you want a new entire test environment, give me 40 minutes, let me know when you're done with it so I can destroy it and not spend $27 per day we don't need to. I don't use anything specifically proprietary to AWS. A lot of the things also go into the local developer environment docker compose and dockerfiles. It is cool to me.
Code academy doesn't teach you programming or a language. It just gives you a quick overview od the syntax available to you. Look for problem solving website as soon as you know if and while loop.
Love it
Drumpf Troll - A simple piece of scrap to troll that twat. https://github.com/impshum/Drumpf-Troll
Yes.
Too fast ? Python 3.8 will be out in 1.5 year, and you won't be able to use it for real before mass adoption maybe 1.5 years later. So pragmatically this feature will be available to you in 3 years.
I think people generally understood that loop and a half was worth fixing, but the most natural way to solve it would be to solve it with `as` given that we already have the keyword. There are some limitations on `as` in that it can't easily be an expression assignment, but to me that is a good thing. It would really be limited to use in `for` and `if` clauses, but again that would match the existing use of `as` which is restricted to `import`, `with`, and `except` (where it does a different thing in each). Instead we have a much broader solution to a much broader class of problems. I seriously question if that is worth the cost of the added language complexity. Finally when it comes to: "knowing that it evaluates twice" the best response is to say: "get a better compiler." We shouldn't feel compelled to declare a temporary variable for the benefit of the compiler, we should declare it for the benefit of ourselves, so that we don't have to repeat a bit of troublesome code.
Thanks
Sorry, we didn’t implement that.
How would you compare Rain to Dask which seems to be your main competitor in that field?
Indeed, the foundations are pretty shaky though, input estimation and reducing standard error in them is where it is going now
No. Code academy is best thing to survive borings meetings and do something productive. You just open your laptop, look at some examples and practice some syntax. Better than sudoku and even better than looking at poorly done powerpoint atrocities. Same as [freecodecamp.org](https://freecodecamp.org). Don´t use them as your primary education tool, it is just for funny practice. I think, Udemy is good at start (for example 10 dollars for one course = 30 hours and materials about HTML/CSS/js). Just wait for good prices - they vary from 9.99 to 19 or more. Look for the higher rated courses, look at reviews. 
1. You can use the `in` operator. 2. /r/learnpython
If we we going to make sweeping changes to the python interpreter we might as well fix the GIL as well. I am not saying you are wrong, but that "get a better compilier" may be not be realistic given python's budget.
No such thing as too fast. You can opt out by not upgrading.
Wow! Thanks so much! I didn’t expect that, but I’ll surely look at it. I’ve been programming in Python as a hobby for a little while, but never leaned to properly write clean code. I’m sure this will help me learn!
so lets say i enroll in python is it a ones off pay or monthy ???
But then what do library authors target when they write software to upload to pypi? What features do they use?
 ⛷ 🦈
If you're using version X, you target your library at version X. It'll still work for people on newer versions.
thank you
No worries, I was just curious. Messenger does actually require 2 step verification if you have it enabled on your Facebook account. I'll see if I can contribute with this feature to your project. :)
Hello everyone! I'm working on a better editor for the remi gui library [https://github.com/dddomodossola/remi/tree/master/editor](https://github.com/dddomodossola/remi/tree/master/editor) I'm trying to think like a user and find out the missing functionalities. When you work for a long time on a project you are familiar with it. All appears simple and correct, but new users feel differently. Furthermore, I'm looking to design a graphical editor for Automation HMI. It should be interesting to have a webinterface HMI.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [dddomodossola/remi/.../**editor** (master → 4576502)](https://github.com/dddomodossola/remi/tree/4576502f47290fcd811e3245937bfbbeb0530b83/editor) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e1pvanu.)
cool!
Thank you Bot :D
The main difference is that Rain provides a build-in integration of external programs into pipelines and possibility to write own task in Rust and C++.
I see :) Thanks.
Not sure why this is upvoted so much. This infographic is super misleading for beginners since it can give the false impression that a high ranking in the the infographic is necessarily proportional to popularity or sth like this.
I following it :D Pretty new to Python or other language. I like to watch this kind complex coding, at least complex for me. 
It's pretty, but there are more complete options available for free. Make it open source, people may be much more likely to use it.
Well it has the run button... Terminal python doesn't allow running while editing text in the same window.
Glad I could help! Can you comment on the writing style, the amount of depth--or lack thereof, etc? Any feedback like that would be huge for me. Cheers!
It's my reddit username &lt;3
As usual in software, times are domimated by other stuff and not by how many instructions per second your language executes. Most of the time is spent waiting for other stuff to happen. 
Gathering courage to dive into a long due project
A little more careful than usual, but my work in particular shouldn't be able to break stuff or leave us "out". Layers below are responsible to ensure safe conditions, ability to communicate, etc.
Completely agree. When in writing I try to keep asking myself "If someone else had written this and I knew absolutely nothing about it, would it be clear what this is or doing?" I try to give the functions and variables really obvious names but if I'm doing something slightly atypical, it gets a comment. Granted, I may not always practice what I preach, it's something to work towards. 
I might have to buy this.
library authors should target their base, no? I guess it depends on what's needed for the library.
I'm taking a bit of a break from my language-compiler project: [https://github.com/syegulalp/Akilang](https://github.com/syegulalp/Akilang/) \- Some of that is because I've plateaued and need to do some research and reading into language and compiler design before I go any further; some of it is because there are other, non-programming projects calling my attention (I've got this novel I'm trying to finish, and a couple of others that are now hounding me for attention). So: Not dead, just resting!
Great, thanks
Hi, I actually did it for the fun, but of course, I am always interested in exploring everything that can be done in Python though it shouldn't... Regards.
dataclasses/f-strings/assignment expressions/... a lot of the stuff being added is not needed to be able to accomplish anything. You could just do things the old way. Even async/await is not strictly necessary since they built the async infrastructure off of the existing generator/co-routine structure. So you could just use asyncio and never use the async/await keywords. Similarly static typing is obviously optional. So what should a someone developing a library to upload to pypi do? Should they write code for python 3.0? Avoiding all these new techniques? Or do they write for a more modern python knowing that some people will be unable to use their library because they used a new construct?
My I ask for more details?
What are the advantages/differences compared to [fbchat](https://github.com/carpedm20/fbchat)?
I know a bit of Scala. Just enough to know that Akka is a framework for actor concurrency development, similar to Erlang. There's zero relationship between it and numpy/scipy, and yet they are grouped together on an awful chart comparing git commit counts.
That infographic is utter hot garbage. Bars are not proportional to the number represented. 727 matplotlib contributors is roughly the same size as ggplots 152 contributors. If you're gonna pretend to present data science tools with data, you may want to do so accurately.
The source for the two URLs is different. In the first one, the `h1` and `div` you were searching for exists. In the AAPL:US link, all the information is Javascript-based and so is not populated in the HTML that gets returned to `requests.get`. You can try the [requests-html](https://github.com/kennethreitz/requests-html#javascript-support) library to search through rendered Javascript and pull out what you want. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
I see. Thank you! I'll give that a shot. 
!remindme 20 hours
I'm currently chipping away at the second chapter of Python for biologists. Basically learning the tools to manipulate DNA sequences. I've been lurking this sub for a while to see how can I learn python for of biology geek like me and I came across this wonderful book that does exactly I hoped it would teach me. I'm just a beginner for python but I'm open for any projects that involve biology.
I will be messaging you on [**2018-07-04 11:25:00 UTC**](http://www.wolframalpha.com/input/?i=2018-07-04 11:25:00 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/8vr2xz/what_is_the_best_thing_you_have_automated_using/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/8vr2xz/what_is_the_best_thing_you_have_automated_using/]%0A%0ARemindMe! 20 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Who are their users? I get the argument about adding fluff. But I don't see how this negates other less efficient options. f strings certainly breaks compatibility. We've never left the world where libraries are stuck in 2.7, and the current standard is 3.5. Progress isn't a easy to understand achievement. Some people want python to be more inviting to the means and methods to the way people think about programming, so that people can use different languages more fluidly, so that stuff like this inevitably gets adopted. We can do with out it, but then you may leave people not learning python, not porting their libraries, because python appears to foreign. So what about all those libraries that could now more readily be ported to python because there's a more obviously relateable syntax?
Nothing too fancy but wrote a script that sends goal updates of the teams you support via text message. 
Apparently, fbchat is better than our stuff :)
Personally I find enums just woefully underpowered. Which is why we have our own lib at work: tri.token
Create a trading algorithm
Bitcoin?
Disclaimer: This blog post obviously leaves out many specifics and contextual information. So my conclusions are based on partial knowledge. Holy shit everything about Digg v4 seemed destined to fail. &gt; **we weren't going to be able to order and install new hardware** in our datacenters before the launch. Capacity would suffice because it was all we had. --- &gt; This was not going well. **We didn't have a rollback plan.** --- &gt; The MyNews page would still error out, but it was enough for us to go home, tipsy and defeated, survivors of our relaunch celebration. Why not disable that page until it worked? There really weren't any contingency plans at all. --- &gt; Once again, Rich and I sequestered ourselves in a conference room, this time with the goal of rewriting our MyNews implementation from scratch. Good god. One day into a failed release they resorted to rewriting this 'crown jewel' from scratch. I can't imagine what would drive them to the conclusion that this was the correct course of action with less than 24 hours(sounds closer to less than 16 hours total work time) worth of time to really look into the issue and options. --- If there were no roll-out issues I feel that Digg v4 would still have resulted in the same mass exodus to Reddit.
A lot of people against but several multiples for because it’s super nice. This feature seems like it just improves on little thing at the cost of new syntax. There are plenty of much bigger wins if we accept higher cognitive load for syntax imo. 
FYI to format code blocks indent each line with 4 spaces: trains = request_output['RESPONSE']['RESULT'][0]['TrainAnnouncement'] for train in trains: departure_board[train['AdvertisedTrainIdent']] = { 'Canceled': train['Canceled'], 'InformationOwner': train['InformationOwner'], 'Information': train['InformationOwner'], 'Departure': { right_now: train['AdvertisedTimeAtLocation'] }, 'Track': { right_now: train['TrackAtLocation'] }, } --- for data in ['photos'][0]['tags'][0]['attributes']: big_dict['moods'] = { 'face': data['face']['value'], 'confidence': data['face']['confidence'], 'gender': data['gender']['value'], } 
Trading stocks?
What library are you using to load the image file, or how are you acquiring the pixels? Whatever library you're using there should have some sort of datastore backing that and you can just find how what the pixel format is and access it as an array.
Is there any way of doing all of this without libraries ?? Thanks tho
ok tx for telling me sorry 
Is one off, you own it forever. I am currently 60% through this one: https://www.udemy.com/the-complete-python-course/learn/v4/overview Highly recommend it, and do the exercises! 
I realize you're joking, however just in case a newbie runs into this let me quickly go over the differences. In an interactive session: yes, basically. In a script, there are a few important differences. First, the `sys.exit()` call without importing will write the error to stderr, which may be undesirable. However, more importantly, Python will exit with code 1, which will be interpreted as the script failing by anything that called your script. Try on a Linux command line: ``` python -c 'sys.exit()' echo $? python -c 'import sys; sys.exit()' echo $? ``` You'll see the error and code 1 for the first variant, and no error and code 0 for the second variant. 
Actually, in an interactive session, sys.exit() without import sys won't do the same thing at all, since it won't exit the session, it will just print a NameError and go back to the prompt.
Might as well compare lines of code, number of files, and average cyclomatic complexity.
Aah thanks, I was wondering about that
Great overview, well written. Thank you.
That discussion is about the unrelated PEP 526: "Syntax for Variable Annotations".
Sure! Just develop your own omage handeling tool. If you are lucky it will not even take a month.
I chortled
Glad that you liked it
I like it! Good job with the screenshots and the walkthrough of what the code is actually doing. 
Yeah why not, could be fun (if it's possible? :D)
Why not use a library? Otherwise you have to write your own code to load the image data
https://en.wikipedia.org/wiki/Comparison_sort#Number_of_comparisons_required_to_sort_a_list
Well actually I have a robinhood account (with the help of my parents with legal stuff) that I've been trading with for awhile now. So far I've made a little over $3 with $100. I've been thinking about using the API on a test account and see how far I can take it (:
Just wondering if there were built in python functions to read rgb of an image
It's not done yet. I'm working to incorporate news perturbations to the analysis.
I wish github would add a function that warns you if you commit something that looks like an API key. Certainly people will turn it off and repeat the error, but it will at least be harder and might have prevented this one.
That depends on your image format. A basic format like ppm / pgm can be easily read with the built-in IO functions.
Damn! “SyntaxError”, plz halp 
the class is made to just store the pixels it does not have any other jobs
IK the answers:
&gt;Oh, so we are finally getting a pseudo-let in comprehensions! &gt; `[s for s in lst if s := s.strip()] ` Wouldn't that be equivalent to `[s.strip() for s in lst if s.strip()]` ? (which repeats the `s.strip()` though)
Precisely. 
&gt; It's frustrating to watch everyone start to moan about a PEP after it's approved. To be fair, plenty of people "moaned" about the PEP before it was approved, too. Even just on /r/Python, there have been 3 discussions each with 100+ comments.
I would recommend the opposite. This is from a security perspective. Often us security folk will instantly block any strange useragents. Food for thought.
Trading stocks isn’t going to be nearly as profitable as something with a lower trading cost. Foreign exchange has almost no fees and trading algorithms for it can be made incredibly easily. I use a python trading algorithm to trade bitcoin and I make roughly 50% returns a year on top of the money I’ve made from bitcoin going up in value. Because the cost of trading currencies (both crypto and fiat) is pretty low, I can make more trades without losing money. This means if I make a bad trade, the algorithm can correct itself, and not much is lost. 
Trading stocks isn’t going to be nearly as profitable as something with a lower trading cost. Foreign exchange has almost no fees and trading algorithms for it can be made incredibly easily. I use a python trading algorithm to trade bitcoin and I make roughly 50% returns a year on top of the money I’ve made from bitcoin going up in value. Because the cost of trading currencies (both crypto and fiat) is pretty low, I can make more trades without losing money. This means if I make a bad trade, the algorithm can correct itself, and not much is lost. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/cfd] [FluidDyn project: learn and research fluid dynamics with Python](https://www.reddit.com/r/CFD/comments/8vttef/fluiddyn_project_learn_and_research_fluid/) - [/r/fluidmechanics] [FluidDyn project: learn and research fluid dynamics with Python](https://www.reddit.com/r/FluidMechanics/comments/8vttbv/fluiddyn_project_learn_and_research_fluid/) - [/r/sci_comp] [FluidDyn project: learn and research fluid dynamics with Python](https://www.reddit.com/r/sci_comp/comments/8vtwtz/fluiddyn_project_learn_and_research_fluid/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
What could go wrong?
So I would just approach it step by step, even write down \`x\` as you mentally iterate. x={} m=max(2,2) = 2 for i in \[0,1\]: (itter 0) Both lists have index 0: No Exceptions hit so x\[0\] = 1 + 3 (itter 1) Both lists have index 1: No Exceptions hit so x\[1\] = 2 + 4 no more iterations to be had: return x, left with x={0:4,1:6}
Thank you. :3 I really need to improve.
This was a good post but I still dont know when i would use these ? What real world situations would warrant the use of these?
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Type annotations aren't used by the Python interpreter, but they can still be used by other tools (static type checkers and IDEs) to verify the correctness of the program. That's the main reason type annotations are there. And since you can have generic type annotations (like List[X]), it makes sense to be able to declare covariant and contravariant types; again so that other tools can rely on them.
That makes sense. OTOH, I get the feeling that all of this could have been done in a nicer way with a bit of foresight. This PEP smacks of making up random syntax due to poor planning.
I scraped all the reviews for like 1300 restaurants on Yelp and a bunch of other stuff. Found it interesting that in 2015 a huge change in the percentage of 5 star reviews people left. Seems a bit weird. Anyways here is a summary view of the data: https://imgur.com/a/nv5YW11
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/gzDN8VP.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20e1q8v7j) 
Not possible if the program specifically expects a .py file. The closest thing you could potentially do is obfuscate your code.
Yikes
Underpowered or not, (which I disagree, but irrelevant), I just don't get what he meant by unpythonic.
r/learnpython 
You can’t even tag on arbitrary data on the cases of the enums. Super weak. 
Obfuscation for the nation.
Might never be to soon to learn to use [pdb](https://realpython.com/python-debugging-pdb/), will let you debug and step through code so if you get lost you can see what variables are and what paths are taken. good luck!
Errrrt I don't know what you mean without a code example.
It's good that they gave it a unique syntax and not just the normal syntax. This removes most of the issues with assignment expressions right off the bat.
https://stackoverflow.com/questions/3344115/obfuscating-python-code
Price checker / general website update alerts. Not using `selenium` though so anything with JS I'm SooL. Changing the structure from `BeautifulSoup` to `selenium` is quite a learning curve for me :(
I think your view of the relationship between Python devs and its user community is either very naive or false. The internal development of Python is not any close to a democraty where every opinion is weighted equally. You do not seem to realize that the discussions around PEP 572 have lasted for months, hundreds of messages have been exchanged as much on the mailing list, as on Reddit or Twitter. They involved both core developers and end users like us. Your claim that community is reacting after the fact is plain wrong. At some point it's just pointless to repeatedly raise ours concerns while our thoughts have literally 0 weight. The BDFL decides, for our happiness or our misfortune, only the future will say it.
So after there's enough tweets in a short enough time span, (after it determines an event has occurred) it takes every tweet, and part of speech tags them using NLTK. From there it parses through and looks for a set of tags in a row. I wrote the function and it turns out to be mostly a capital letter finder, but because most tweets are written on mobile, places are automatically capitalized. For that tweet, Mana was capitalized and either there were multiple tweets with 'Mana' in them, or there wasn't a single duplicate location, so it randomly selected 'Mana' as a suggested location for Tsunami. The specific function is [here](https://github.com/CrakeNotSnowman/TwitterEventBot/blob/f7d2e555eb35ae99e0198441dbcc14f75ab6d02c/crowdSourceEvents.py#L518). I found that function typically works more frequently than my location focused adaptation of NLTK or Spacy's named entity extraction. When it's not really an event, it extracts a lot of random things it calls locations and tweets random things, but when an event has happened, there's usually a consensus in the tweets about where it took place.
Sabotage PR is sabotage.
https://github.com/NIXKnight/BasicAuthManager
ETL prcoesses. They're fun to write. 
The first answer is exactly what I tried. Sadly it doesn´t work. The program runs, but I get errors
that would be enough for me. It just needs to be so that you can´t just open it with the notepad and read what is testet how. I tried the first answer on this site (the one from EOL), but only got errors. Do you have an answer why this doesn´t work? The gut says it should work like a normal .py file, but it doesnt. https://stackoverflow.com/questions/3344115/obfuscating-python-code
You beautiful SOB. I've been looking for a way to scrape JS contents without resorting to selenium (since it'll be quite a rewrite) but this seems to be quite closely tied to the bs4 methods. THANK YOU!
What about the other answers?
Maybe [this](https://grpc.io/)?
I unfortunately haven't been able to fully try it yet, my Linux VMs are still running Python3.5 :( Let me know how it does!
It doesn't because the program likely reads the file and tries to evaluate the code, but doesn't hand it directly to the interpreter. One thing you could try is to encode your code as base64 or something like that, and then decode and `eval` it. 
Are you familiar with ORMs like SQLAlchemy? I often have data model classes that represent a row in a table that do nothing but hold data, that's the kind of area these shine. Think anytime you have a class that acts just as a container that holds a set of data, but had no behavior of its own, Dataclasses eliminate a ton of overhead for those. 
Writing a program that implements a DBSCAN for WGS84 LON/LAT values converted to ECEF and placed into a Kd-Tree for range query efficiency. So far 20K points are clustered in 1.76 seconds, 400K in 184 seconds (was a dense data set).
Are you planning to contribute the code back to numpy? If not, you shouldn't be inserting it into numpy but rather creating your own package.
The reason why I dislike this is because this is nothing but syntactic sugar. If this acted like C/Java/Javascript they could have optimized this by scoping the variable to the passing branch like those languages do. But in Python they won't.
second answer (using base64) wouldn´t work as the program would have to be changed, which won´t happen. third answer seem to have similar problems for me. But I also need to maintain it regularly, which is why I need to have good documentation and also readable names. The Obfuscator sites seem to be quite interesting, but I need to think about if I trust pasting the code into a random webpage...
Nobody's going to be able to say anything meaningful without context. What do the X and Y axes in that plot represent, and why are you computing 4 clusters instead of some other number of clusters?
Who upvotes this article? WTF
On this one, a huge number of people provided concise explanations of why they oppose the PEP, but they were ultimately discarded because Guido disagrees. BDFL sometimes yay sometimes not so yay.
Pyinstaller with the --onefile tag
I will definitely consider the open source option :)
I've come to dislike them more and more over time. I gave my objections are here: https://www.reddit.com/r/Python/comments/8o7yhi/do_you_normally_use_stringformat_or_percentage_to/e01ckn3/ There was never anything wrong with str.format IMHO, other than the method name (.fmt would save a lot of characters).
Use microservices.
Agreed. To me it reads clean and is useful, providing something previously unpossible. It was this line from the PEP that sold me... filtered_data = [y for x in data if (y := f(x)) is not None] 
I'll give some code examples in various languages to show you what I mean. C: #include &lt;stdio.h&gt; #include &lt;stdlib.h&gt; #include &lt;time.h&gt; int main(){ int array[] = { -1, 1 }; int i; time_t t; srand((unsigned)time(&amp;t)); int c; if ((c = array[rand()%2]) &amp;&amp; (c &gt; 0)) { // can not initialize in conditional expresion in C printf("%d is c, this should be in scope and initialized to 1\n", c); } else { printf("%d is c, this should be in scope, but is by standard uninitialized.\n" "this is undefined behavior and can act differently based on the compiler,\n" "and will return whatever the compiler currently has in &amp;c: %d\n", c, &amp;c); } printf("c: %d is still in scope because of the initialization before branching,\n" "value depends on the branch taken but is still undefined behavior as mentioned before", c); return 0; } C++: #include &lt;cstdio&gt; #include &lt;iostream&gt; #include &lt;random&gt; #include &lt;vector&gt; int main( ) { std::vector&lt;int&gt; numbers { 0, 1 }; std::random_device seed; std::mt19937 engine(seed()); std::uniform_int_distribution&lt;int&gt; choose(0 , numbers.size() - 1); if (int c = numbers[choose(engine)]) { printf("c is %d, and was declared in this scope\n", c); } else { printf("c was made 0, but we only know this because those are the only " "two options, we cannot directly check c\n"); // printf("this will die because c is not declared in this branch/scope, see c: %d", c); } // printf("this will die because c is not declared in this scope, see c: %d", c); // lets try with pre-declaration std::vector&lt;int&gt; new_numbers { -1, 1 }; int c; // now c is declared in this scope if ((c = new_numbers[choose(engine)]) &amp;&amp; c &gt; 0) { printf("%d is c, this should be in scope and initialized to 1\n", c); } else { printf("%d is c, this should be in scope, but is by standard uninitialized.\n" "this is undefined behavior and can act differently based on the compiler,\n" "and will return whatever the compiler currently has in &amp;c: %d\n", c, &amp;c); } printf("c: %d is still in scope because of the initialization before branching,\n" "value depends on the branch taken but is still undefined behavior as mentioned before", c); return 0; } Java: import java.util.concurrent.ThreadLocalRandom; public class TestThisThing{ public static void main(String[] args){ Boolean c; // default null because of Java boxing; boolean [] arr = {false, true}; if (c = arr[ThreadLocalRandom.current().nextInt(0, 2)]) { System.out.println(c + " this is in scope and assigned"); } else { System.out.println(c + " behavior is different depending on the version used, as of Java 8, c assigned and false"); } // like c, we can't declare in statements. } } JavaScript: var arr = [true, false]; if (c = arr[Math.floor(Math.random() * arr.length)]) { console.log({ c }); // okay } else { console.log({ c }); // undefined behavior, dependent on engine } console.log({c}); // undefined behavior, dependent on engine In Python, there is no concept of declaration, and thus I prefer taking it as if declaration and initialization are in the same statement, and then act like the C++ example does. Except instead of a compile time error let there be a run time error (NameError). Doing this right would optimize the bytecode and save compute time on a lot of various web form validation.
Is there any reason to use Dataclasses for wrapper classes around pandas DataFrames? Here none of the comparison or equality dunders make sense so it seems like most of the utility of the decorator is gone.
&gt; making up random syntax due to poor planning Python's last few years in a nutshell. For further examples, see `async`/`await` (why can't we just have proper coroutines?) and data classes, whose syntax includes mandatory optional type hints.
More flexible than namedtuple but you'd use them for a similar reason. 
I'll take a look but I'm still pretty much a beginner. Keep up the good work regardless!
Did you try to compile and launch it? The C and C++ examples are perfectly fine, without any UB and c is correctly initialized in both branches. The printf shows garbage because you wrote `&amp;c` instead of `c`.
Uncomment the printf statements in the C++ example. It won't work
use the .pyo file 
Sorry, but that’s completely unrelated with your claim that c is not initialized in the else branch. If c is not in scope, it’s not in scope. Period.
TLDR; go to a stackoverflow question. This article only identifies _what_ an ABC is. The answer is probably not very often. ABCs are metaclasses, which can cause a host of other issues - especially if you already use metaclasses elsewhere. A very simple alternative is to just create a Base class of type `object` and then use `NotImplementedError` exception everywhere you need to identify something that a subsequent class should implement.
This is typically a security risk. Unless the transport is secure say mTLS or layer 4 tunnel such as IPEC I wouldn't recommend this. As others stated, micro-services are the preferred method.
Looks like a big blob of data to me, but I'm no expert.
I saw another article on this in which the example was playing cards. So suppose you're writing a card game. How could you represent the cards and deck (e.g. the value, suit, comparison/sorting etc.)? There are a lot of alternatives (a traditional class, a dict, a tuple) but they all have downsides. Found the article - https://realpython.com/python-data-classes/ https://realpython.com/python-data-classes/
Maybe (probably) not the best use scenario but part of my internship is setting up a server with django and building a website, doing some image recognition etc. I am not a designer and I can't be bother to handwrite templates for django. What I did was creating a simple hierarchy of objects that represented html elements and adding into them the other elements. This resulted in a parse tree that gets rendered to html. The issue was that for every object I had to write a class, this will make my life easier and it's kind of funny but I was thinking about something of this nature the night before the release.
Really gonna help to a noob like me
Here's an example, that is language agnostic, where you'd want to use data classes: Suppose in a distributed systems world, you need to POST a payload to an endpoint. A data class makes a fine Data Transfer Object. This allows you to decouple your implementation of your business logic from the contract of the web service.
Do you have a good feel for when dataclasses should win over namedtuples?
Indents seem to be all messed up in the examples.
There was `[s for u in lst for s in [u.strip()] if s]`. [Extreme example](https://www.reddit.com/r/Python/comments/8nkjy1/raytracing_using_list_comprehensions/)
Sorry for the late reply, I've been completely tied up with work. Okay, you've convinced me to try out the Pi. I've thought of another project that I may want one for if it isn't fast enough for this. I'm not sure why it is taking so long. I'm using requests, sys, time, and statistics and I am accessing a data base. I'm not sure what you mean by waiting for IO operations, and I'm not familiar with async. Here is an example of a request that I'm using: list = requests.get(https://website.com/api/v1.1/public/info).json() Any advice to speed this up would definitely help.
Matplotlib has so many commits. Yet it still looks so bad unless you're a grand wizard at coding. Amazing.
Because `virtualenv` doesn't actually include the Python interpreter, and is platform/build specific. Try [Pipenv](https://docs.pipenv.org/).
Yes, that's normal. Your packages were installed for Python 3.6, and you now have 3.7. And that's another reason you should really use virtualenv.
Right, but the reason why it isn't in scope is because it was declared in the conditional. When not initialized it is undefined behavior. When declared in the conditional it won't be in scope. But in python there's no concept of declaration-- declaration and initialzation occur simultaneously. So I don't believe the variable should be in scope in cases where the conditional does not pass.
Yeah, that's a nested comprehension.
At least you can discern what's happening when you see an fstring. This new operator is just... ugh. Personally, I consider the single greatest aspect of Python is that almost all the code you write can be read aloud and it says what it does. It eschewed cryptic symbols with special meanings and opted for plain ole' English. Instead of `||` I get to use `or`, instead of `&amp;&amp;` I get to use `and`, instead of `===` I get to use `is`. Even "industry standard" practices were put through Python's common-sense machine, such as regular expressions getting meaningful function names and descriptive flags. I really have no idea what their justification for this is. The [rationale](https://www.python.org/dev/peps/pep-0572/#id5) that more things needs to be crammed into list comprehensions and other expressions (lambdas) is just absurd. Forcing people to simplify their code over multiple lines was one of the aspects of Python that was so great. If there is some value in a list comprehension that you'll need afterwards... *then you probably shouldn't be using a list comprehension*. If you need to operate on a value multiple times before returning it, then you should be using a function instead of a lambda. I really love the &gt;naming sub-parts of a large expression can assist an interactive debugger You know what else could assist with that? NOT USING A LARGE EXPRESSION. If your expression is so large that you have trouble debugging your code with a debugger then holy shit... break it up man. Spread it over a couple lines, the debugger will have lots of little named pieces that it can work on and give you real meaningful and clear output. The solution to convoluted code that isn't capable of being debugged is **not** to change the language, it's to change your code. This is the first PEP I've seen that's taken an active step towards less intelligible code. At least with the string formatting gymnastics over the last few years their goal was cleaner, concise and understandable code. 
Does pipenv let you manage a specific venv version per project, like the gradle wrapper does with gradle? Why on earth would anyone use venv over pipenv? Unless maybe you were just editing a bunch of small scripts...?
You still haven’t provided evidence of the “not initialized” case, that was your initial claim that I disputed. The scope thing is another issue and I did not dispute that. Please focus.
Yes, it does. Pipenv is a wrapper around virtualenv, pip and other tools, so you're not using it "over" anything.
It communicates intent to other provrammers that the thing is pure data. For example representing a request model to your system. A request model should be pure data so it can cross major architectural boundaries.
Thanks that's good to know. Yes everything works in virtualenv still, the things I'm referring to are like ansible, regular programs I run. I didn't think the proper way to install that kind of package was in a virtualenv. I thought of them more project-based I guess. 
It's one comprehension with two `for` clauses. `[s for s in [u.strip() for u in lst] if s]` would be two nested list comprehensions.
I have no idea what your plot is about, but this is one of my issues when I try to use PCA. If I am trying to reduce a field, then the eigenvectors have an intuitive physical meaning. I recently had a project at work where we had a lot of output dimensions and a PCA certainly reduced the dimension of that, but the Quantity of Interest lost physics meaning to the people we worked with. They understand that it was linear, weighted, combinations, but it was harder to relate. We ended up using the correlation matrix along with the eigenvectors to manually select a subset to study. It was less rigorous since they were not uncorrelated\*, but it made more physical sense. \*Just in case you were interested, people often assume that the results of a PCA are independent. That is not a good assumption. They *are* uncorrelated, but correlation is only a linear dependence.
Makes sense now. So basically rather than storing all my constants in a more functional class or not in a class at all I can use a dataclass to store these constants or other variables for use elsewhere in a program.
Also, while I am not an expert on clustering, this sounds like a great example of where data analysis can go awry without sanity checks. Sure, you *can* divide that sample into clusters, but should you? It certainly doesn't look clustered to me! Back up and look at the underlying data. Do you expect it to be clustered? Are the non-PCA terms clustered? Also, chances are this analysis is looking at clusters of the two top principle components. To see a practical example of this, check out [this](https://www.reddit.com/r/dataisbeautiful/comments/7ke5a6/the_christmas_cookie_competition_at_my_office/). There are many more like it, but this was the first I found. Though 23.7% of the variance really isn't sufficient.
One person's nested list with one element is another's nested list comprehension, whatever, it's ugly and inefficient. I actually meant the need for "for x in ..." instead of "let x = ...".
Thank you. That is indeed a good alternative! However, the \`ABC\` will be faster IMHO because, it keeps sub classes from being instantiated at all without implementation of abstract methods.
...while my initial claim, I was already told by another commenter that my claim was misplaced and that I meant the issue of declaration and scope. Focus or not, no need to be a pedantic dick.
Use `python&lt;x&gt; -m pip install &lt;package&gt;` to use the pip that pairs with the appropriate interpreter.
brew switch .... Reverts to previous version brew pin python@3 ...Pins the version
in your first example `func` is only called once as well
Formatting all of our addresses (I work for a city \~150,000 people) to feed to the US Census. My boss tried this earlier and bounced off, so it landed on my desk. If I could feed it straight I'd be done by now, but I have to check it against THEIR CSV-formatted list, which is shaping up to be tone of fun. Not.
Ah that is useful to know. I mean, I want 3.7 but I was wondering about the @ thing, I noticed it with 2.7.
oh i think this is what im looking for actually, thanks.
I think it was specially optimized to not be inefficient. I'll give you the *ugly* though. :)
Well, I'm [doing my best](https://github.com/PyCQA/pylint/issues/2246) to provide real ways to ban this. Not sure anything will come of it though.
You may want to use [pipsi](https://github.com/mitsuhiko/pipsi) in the future for installing command line python packages.
In the pep they explain that people, in order to avoid the extra line or to avoid depth, they resort to: s = func() if func() else None I was working on a small program and I needed a quick way to get input, if it was okay return it else return None. f = lambda func: p if (p:=input(‘prompt’)).isdigit() else None Instead I resorted to: def func(): p=input(‘prompt’) return p if p.isdigit() else None Which can be reduced to: def func(): return p if (p:=input()).isdigit() else None or to a lambda. This is probably a useless usecase but I am sure people can come up with many different hacks to ‘write less code’ and this addition will probably help making the code less ugly or reduce excess function calls.
https://support.google.com/webmasters/answer/1061943 So google uses a whole range of ua for the bots. Interesting subject.
oh super handy, nice. thanks
What about compared to enum class?
How about Apache Spark/Kafka?
A good enough programmer would be able to see past that but if your learning 
brew postinstall python@3 installs pip
If you lower the amount of data you show on your visualisation it might help to make it more clear. You need to ensure your value for k is right. From your visualisation you have 4 labels, they are the distinct groups of your data. Each cluster will represent a different value. Not knowing the problem your program is trying to solve thats about as much help as you can get.
It is inefficient compared to the new version: now you just assign a value to a variable, then you created a list, created an iterator, went through all the usual steps of getting a value out of the iterator including creating and catching the StopIteration exception.
Event studies for stocks. You enter the stocks you want and then enter the dates you're interested in and it will spit out comparative charts of what happened for each stock during the dates the user entered. Not impressive because it is just giving a GUI for a simply python back end.
This is how you will die. Police: How did OP die? Witness: Oh his ML script made him run in a bad neighborhood during a shooting. Police: Lock that ML script up.
No joke, running through Hunters Point one Saturday evening, no fewer than two cop cruisers swung by to follow me for a block. There's also been some Tenderloin alleys I've crossed my fingers on.
Does your city record crime locations? You can probably overlay that on top of your running map.
Not if this gets merged: https://github.com/python/cpython/pull/5695
Do not want, black magic, implicit stuff.
Same here, this annoyed the crap out of me the other day. I’m still finding remnants of 3.7 even after removing it and manually installing 3.6.6. VS Code has a couple of virtualenv paths showing 3.7 even though they are definitely on 3.6, even if I blow them away and re-create them. I wish homebrew left old versions intact. I don’t think I’ll be letting it handle my python installs anymore. 
Attempting to get a flask project working on IIS. It is not going well. I can start the website through the command line, but nothing more than that.
In Rain, you can define an arbitrary computational graph, not just map-reduce pattern. As I do not know much about Kafka, I let the answer on @vojtacima.
[peewee](https://github.com/coleifer/peewee)! (a lightweight ORM)
Sorry I'm gonna repost in learnpython 
Yes, you can use python for this. "detect which pixels are lit up over a certain intensity value " is called "threshold" and it's very easy with the `numpy` 
&gt;It's now considered the nicest features of python 3.6. and your source for that is... ?
You could but it is not platform independent. If you tried to then run it on any system that is not identical it could have problems. There are some methods that approach a solution (Facebook par) and pex give it an attempt.
So, they're more comfortable, which is great. But is there a technical reason to prefer these over normal classes? performance? Is there something a dataclass can do that a normal class couldn't?
When you need mutable records.
Not even numpy/scipy? I get that the accomplishment of doing it with lists might be cool but I don't even want to imagine how slow slow it is.
https://www.python.org/dev/peps/pep-0557/#why-not-just-use-namedtuple Answers this question.
IIRC they're lightweight (as in memory footprint) compared to classes, as they (I think) are missing several methods that normal classes inherit from `Object` - i.e. they're not "true" classes.
That is definitely a worry. I have customers that use python 2.6 still even. Yuck. It is a cool feature, but does not bode well for distributing code that can run in most python environments. 
&gt; if (c = 0) {return c} &gt; else {return c + 2} // c was never previously set, c is null/undefined/nameerror Huh? No, this assigns `c=0` as part of the test in the if-statement, so it's accessible in both bodies of the if/else branch as well as any statements after the if-statement within the same scope.
This seems like Python’s approach of moving toward Spring’s @Controller and @Repository annotations. 
As far as I can tell, no. They're just a bunch of (useful) boilerplate code bundled into a decorator.
There is no performance gain, no, but it significantly improves maintenance and reduces the impact of changes to data models (i.e. if you add a member you don't need to modify init, repr, etc). It's all about readability, maintainability, and bug reduction. 
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. While I was at it, I checked [Stack Overflow](https://stackoverflow.com/) but I couldn't find a useful result Though fair warning, this section of the my code is under development, and I don't expect these links to be very useful. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
In your def __le__ (self, other): Equivalent method for the Dataclass should the comparison operator be &lt;= Not &lt; Honest question in case I’m missing something?
I'll preface this with I like the PEP bar the fact that it doesn't scope the variables and is therefore pure syntactic sugar. It could have been made to scope variables, thus help improve wall times and process power of a lot of code. I think the idea is that many library authors can not use this feature if they want to retain compatibility. Not just with this, but with a lot of features actually, all introduced in Py3&gt;3.4. Just some history-- Python 3.0-3.3 was a tad bit of a joke. Don't know anyone who uses it nor targets for it. And I mean that seriously. They weren't bad, but they had a number of usability issues in the sense that they tried to remove useful features from 2.X and then the community yelled at them and they reverted those changes slowly until 3.4 Asyncio was introduced into 3.4. People who wanted to use it used the decorator, all was fine. In 3.5 the keyword was added on a provisional use case until 3.7. It should not be used in any code that expects forward compatibility because behavior could theoretically change. This continued into 3.6 with the new magic async methods and the new async keyword prefix for iteration and comprehension, and more. In 3.7 the syntax is no longer provisional. But this presents a problem for library authors who want to write async helper libraries like aiohttp, or how requests put off async implementation until the next major requests version. Because to use these fancy features, you have to make a choice: stop targeting 3.4 (and possibly 3.5 and 3.6 depending on what features you use), which is annoying to the end dev user unless you update major versions, or, target 3.4, but instead of using this nice syntax, have a shit ton of ugly bloat code just to keep compatibility, using weird hacks to acheive similar functionality. Neither of those options are good. But with asyncio being relatively a new player in the game, you won't hear many screams. People doing the former sit on their ass and wait, people doing the latter are annoyed but want to introduce usability to async programming in Python, so they see it as a necessary evil. F-strings have similar issues, but they are minor in comparison-- people can just stick to using format calls instead for now, no big whoop. But this is something that has hate from multiple sides. To name a few, * teachers of beginners * people coming from other languages expecting the behavior I noted up above in this comment * people just not liking the look * library authors who realize they can't use this Disregarding the first three, and all others I haven't mentioned, this is the third (second big) kick library authors have received. Because while backwards compatibility is great, the Python team is pushing out minor versions with feature changes. Library authors still need to support 3.4 which is the common \*nix default of which Py3 is installed if any, and also keep any new versions supported, and also, accept people writing code expecting that new version, and then they have to have a 30 comment argument on that person's PR because they don't care about breaking support for 3.4-3.6/7. It's a very annoying kick to the teeth. Because while backwards compatibility is extremely important and acheived, for library authors, arguably, foward compatibility is just as if not more important. If not for major versions, then at least for minor ones. Py3 only thus far as forward compatibility in the terms of generator stop behavior (3.5 optional, 3.7 mandatory) as a future statement, and postponed annotations behavior (3.7 optional, 4.0 mandatory) as a future statement. In comparison, quick tidbit of Py2 history, Py2 had quite the bit of forward compatibility in the use of future statement. The entire optional/mandatory chart can be found [here](https://docs.python.org/2.7/library/__future__.html), but it included nested scopes, generators, division, absolute imports, the with statement, and more. And in each case, it was optional in 2.X, mandatory in 2.(X+1) or higher. And in the times it was exactly 2.(X+1), well, most people were fine with stopping the targeting of 2.X because 2.(X+1)'s new feature was that much more important. When 2.6 came out, the lowest support I saw was 2.4. When 2.7 came out, the lowest support I saw was 2.6 (2.5, but *rarely*). So to summarize this rant, library authors need forward compatibility as well as backward compatibility. Which in Py3, is barely existent for all these new features, causing writability and maintainability issues for many.
His opinion.
&gt; If you care so much about the language the time to engage is before the changes are accepted. sounds like we need the community to publicize these things better on /r/programming early in the PEP process (I don't read /r/Python much so I'm guilty)
Yes, that's what I was thinking about, as mentioned by /u/SlowFatHusky
The mandatory optional type hints makes no sense to me. This was implemented in Python. They could have easily just took "no type hint" to mean "Any" and done it that way. Which means now we can't port data classes to versions before type hints for barely any reason, because it's reference implementation strictly goes against such.
Thank you for the article. In the article I read: &gt; While you need to add type hints in some form when using data classes, these types are not enforced at runtime. The following code runs without any problems: That means no type-safetype without using MyPy. Also, I would've used [enum](https://docs.python.org/3/library/enum.html) to specify the suit and rank of cards instead of strings. I was just an intro article though. 
That's all I need to here. I'm in.
May I ask, as I came from other languages with assignment also being able to be used as an expression, what issues exist? Besides the = vs == thing, because that's a bit of a silly "just remember how many times to type a key" thing.
To have to have developers explicitly disable something thats part of a language syntax is kinda ridiculous. Have the option to not want it in their libraries, sure, then they can add a flag to disable others from PRing it. But other than that, don't let a tool of the language fight a part of the language.
As much as I am mixed (like and dislike different parts) on this PEP, this is a bogus argument. Plenty of people raised their voice on official mailing lists and were shut down. Not to mention using such a method is extremely difficult for some, both in terms of usability and in terms of privacy (I don't want my email out there).
well, i have pip3.7 so ... thats what I need right?
It’s not necessarily true that anyone can write an interpreter whenever they want if it’s not a project they’re familiar with. Parsing is an interesting field in and of itself. That said, you realize the benefits of all that studying by continuing to write even more challenging programs. Every time you need to solve a difficult problem you haven’t solved before you develop techniques that you can apply to make future problems easier.
I was being cautious there, I don't see much of a problem with assignment expressions. But one major issue people have is code readability and simplicity. Up until now, every assignment was just an assignment, and no change of state could happen with any other syntax (only with a function call). Now, a change of state could appear in any expression. That might trip some people up if this feature isn't used with restraint and make the code harder to read. I didn't need this feature, and I don't think I'll ever use it, but it's not game changing. And looking at the reaction this has gotten, it doesn't seem this syntax is gonna be used much.
Right but it seemed as though in your previous comment you had some issue with assignment expressions in other languages, when you can do things like if (int v = randomlychoosezeroorone()) # stuff As in, with `=` and not some special syntax
Compared in what way? Enums and dataclasses are completely unrelated so maybe I'm missing something
Offensive much? 
If you need to write like 30 classes that just have different data fields and act as containers. You could also use them like namedtuples if you're way into type anotations.
Bingo. I'd love to see an example use case where this operator is better or more readable than the equivalent code broken out over multiple lines. I haven't seen one yet! 
That's true, but it's also a chance to avoid wasting time by supporting 8+ year old versions of Python. It trades both ways. 
Yerp
Yes, that's an issue, but it's relatively minor, and can be easily fixed with a different syntax. And I don't see any disadvantage (maybe a little bit for the language implementors) in having a different syntax for assignment expressions.
Instead of attaching a bunch of methods to an object/class and using inheritance to structure your program, you can use dataclass to easily separate data from operations on data, yielding more composible library/application.
Except you can do stuff like code generation off of them as exampled by dataclass, NamedTuple, attrs and others. You can't do that with a comment. afaik, you can't even get to comments from the AST module though I might be wrong about that. 
So what do I do? Should I go on reading to a more complex interpreter - one with abstraction? I've had no formal education in computer science. Ultimate aim is being able to fully functional programs myself. 
wtf is a foxdot
Remember, code is read more often than it is written. Syntactic sugar etc that decreases the maintenance burden of a codebase is valuable and saves businesses money.
You should probably give us a link to the site's ToS so that we can read it for you.
You're the first case I've seen where u/pythonHelperBot can't direct you to /r/learnpython because it already has told you once before, and as part of it's anti spamming function, it's not allowed to tell it to you again. Looking at the time stamps, you made this post about a half an hour after the bot directed to /r/learnpython Did you not believe it or read the message or what? 
This is great, very well written and easy to follow.
Many people write you parsers during a computer science course, because it helps to structure a way of thinking. Almost nobody writes a parser with anything approaching that complexity in real life. You can write fully functional programs yourself without writing a parser. If the real world problem you're trying to solve is _i have this pile of input over here and I need an AST of it_, AND _no parser already exists_, then write a parser. If the real world problem you're trying to solve it _i don't know how to write a parser_, then write a parser. Otherwise, use the existing parser someone else wrote.
1 day later and I still can't stop laughing at, "there's always that weirdo who likes 3 space indents."
Why a decorator rather than a metaclass or a regular class? Honest question as Enums have been possible for a while and this just seems like a new way to implement the magic.
^Totally agreed. The place to learn about what should/shouldn't go into the numpy code base as a contributor is the [CONTRIBUTING.md](https://github.com/numpy/numpy/blob/master/CONTRIBUTING.md) file on GitHub.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [numpy/numpy/.../**CONTRIBUTING.md** (master → 8eee9b7)](https://github.com/numpy/numpy/blob/8eee9b7d3836b8d080b50e2dfb3ba98537a076c0/CONTRIBUTING.md) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply e1qzmlh.)
This blog post is making me feel very Perlish. Not that the syntax is ugly, but just that feeling of, "here's a whole NEW syntax that hardly does anything you can't do already or roll yourself, now with dozens of arbitrary keyword arguments like repr=True, order=True because why *inherit* all those ugly methods like a normal person? Now they're KEYWORDS!" It's blatant TMTOWTDI as well as serious implicit over explicit.
I don't doubht the utility value of dataclasses, I was just curious to know if there's any technical difference under the hood.
So now we need to parse docstrings to do useful things. I know there's tools that do that, some of them are even useful. Do you want to write something that parses docstrings? I don't, the last thing I want to do is write a mini interperter (okay, that's a bit of a lie, they're fun to write sometimes). But with type annotations, on classes and functions at least, you call one function and get back a dict of the parameter and it's type. All the hard bs work is done for you. From there you just work off the types. In a couple hundred lines of code, I wrote a library that'll create a marshmallow schema from a type annotated class. If I had to pay surgeon on docstrings and account for all the ways they could appear like sphinx does it'd been much longer and less reliable. With type annotations, there's one proper way to handle them. 
I went ahead and built the branch: &gt;&gt;&gt; dis.dis(foo) 2 0 LOAD_GLOBAL 0 (randint) 2 LOAD_CONST 1 (0) 4 LOAD_CONST 2 (3) 6 CALL_FUNCTION 2 8 DUP_TOP 10 STORE_FAST 0 (n) 12 POP_JUMP_IF_FALSE 22 3 14 LOAD_FAST 0 (n) 16 LOAD_CONST 3 (2) 18 BINARY_POWER 20 RETURN_VALUE 4 &gt;&gt; 22 LOAD_CONST 4 (1337) 24 RETURN_VALUE &gt;&gt;&gt; dis.dis(bar) 2 0 LOAD_GLOBAL 0 (randint) 2 LOAD_CONST 1 (0) 4 LOAD_CONST 2 (3) 6 CALL_FUNCTION 2 8 STORE_FAST 0 (n) 3 10 LOAD_FAST 0 (n) 12 POP_JUMP_IF_FALSE 22 4 14 LOAD_FAST 0 (n) 16 LOAD_CONST 3 (2) 18 BINARY_POWER 20 RETURN_VALUE 5 &gt;&gt; 22 LOAD_CONST 4 (1337) 24 RETURN_VALUE &gt;&gt;&gt; dis.dis(fizz) 2 0 LOAD_GLOBAL 0 (randint) 2 LOAD_CONST 1 (0) 4 LOAD_CONST 2 (3) 6 CALL_FUNCTION 2 8 DUP_TOP 10 STORE_FAST 0 (n) 12 POP_JUMP_IF_FALSE 22 3 14 LOAD_FAST 0 (n) 16 LOAD_CONST 3 (2) 18 BINARY_POWER 20 RETURN_VALUE 4 &gt;&gt; 22 LOAD_FAST 0 (n) 24 LOAD_CONST 4 (1337) 26 BINARY_ADD 28 RETURN_VALUE &gt;&gt;&gt; dis.dis(buzz) 2 0 LOAD_GLOBAL 0 (randint) 2 LOAD_CONST 1 (0) 4 LOAD_CONST 2 (3) 6 CALL_FUNCTION 2 8 DUP_TOP 10 STORE_FAST 0 (n) 12 POP_JUMP_IF_FALSE 22 3 14 LOAD_FAST 0 (n) 16 LOAD_CONST 3 (2) 18 BINARY_POWER 20 RETURN_VALUE 5 &gt;&gt; 22 LOAD_FAST 0 (n) 24 LOAD_CONST 4 (1337) 26 BINARY_ADD 28 RETURN_VALUE 30 LOAD_CONST 0 (None) 32 RETURN_VALUE &gt;&gt;&gt; Interesting to see the STORE_FAST then LOAD_FAST of n, though I suppose it is pretty early on, so I wouldn't expect it to be totally optimized.
Yes and when you’re modeling entire data systems and need comparisons and hashing this will save so much time. 
Learning the basics still, and exploring Pandas and Altair. Haven't quite figured out how to make use of Python in the long term, currently just exploring what it's capable of.
I worked on a Reddit bot that connects to the Mexican National Electorate Institute to fetch the presidential results every 15 mins. https://www.reddit.com/r/mexico/comments/8v5p9v/prep_2018_elecciones_presidenciales/ This weekend I plan to open source it and document everything on the process of making it. I used Requests, Matplotlib and PRAW to accomplish this.
I don't see how 3.6 being 18 months old is an argument for continuing support for 2.7. If you're worried about becoming incompatible with Jython, then put pressure on those developers rather than dismissing everything that's in the 3.x line but not 2.7 as meaningless features. I think that may ring on deaf ears since it looks like Jython had just no releases since May 2015. There's a 3.5 repo on github that hasn't had any commits for more than a year. As far as I can tell, Jython is a dead project. 
&gt; one of the most frequently accessed endpoint was used to retrieve user by their name or id. Because it supported retrieval by either name or id, it set default values for both parameters as empty lists. This is a super reasonable thing to do! Does this endpoint retrieve a single user, or multiple users? (I think it must be the latter for the rest to make any sense.) What's the use case for retrieving multiple users? Surely retrieving a single user is a much more common operation. If the endpoint had been written to provide that functionality, nobody would have ever thought that a good default value for the name or id would be an empty list -- it would have been "None". And the problem would never have arisen.
Thank you very much. I've never seen `DUP_TOP`, but if it is faster than `LOAD_FAST`, then this new syntax does have a (albeit slightly, and only in wall time) faster and more performant approach than the previous one. Which makes me happy. If you wouldn't mind, can you run timeit a couple times and average the results (you may need to do it in a comprehension and do it maybe a hundred times, because I doubt a one off difference would be noticeable)? However if the variable was scoped (how C++ does it, as do other languages), it would be even faster, because `STORE_FAST` would be called after `POP_JUMP[type of jump]` meaning that statistically (especially in web applications which get a shit ton of bad inputs) you'd save even more.
Sure! I'm using Selenium on top of a Python 3 installation to drive a Chrome browser window. This page is great for installing Selenium and getting started: https://pypi.org/project/selenium/ And this 4 minute video can get you off the ground for navigating with Selenium: https://youtu.be/bhYulVzYRng Next you just have to dig a bit into the Selenium library for how to enter data (but it's not that bad) and then create a data file that has the info you want your browser to enter. Then you just write a loop through the file as below (this is for a tab delimited file, hence the delimiter='\t' code). Anyway, I wrote a quick script to demonstrate how this works--you'll need to install Selenium and get the chrome webdriver for it to work (and keep in mind the directories I'm using, since you'll need to define your own). The file I used is literally just a text file with three lines (dogs, cats, alligators). **Also I am a new and self-taught programmer. My code probably sucks and I am aware.** import csv import time from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as ec from selenium.webdriver.common.keys import Keys from selenium.common.exceptions import NoSuchElementException # general initialization and page load chrome_path = r"C:\Work\chromedriver.exe" # where you download and put your chrome driver driver = webdriver.Chrome(chrome_path) driver.get("""http://sfbay.craigslist.org""") xpath = driver.find_element_by_xpath #Just a shortcut for when you want Selenium to use xpath for elements # This is a quick function that waits for a certain xpath to be clickable on the page before moving on to the next step # It alleviates a lot of errors for when a page is still loading def wait(x): WebDriverWait(driver, 30).until(ec.element_to_be_clickable((By.XPATH, x))) return xpath("""//*[@id="ccc1"]/li[4]/a/span""").click() # go to the "pets" section of craigslist via xpath time.sleep(1) # not necessary, sleeps the page for 1 sec, but I've found it's helpful to know about this, so I included wait("""//*[@id="query"]""") #waiting for search box to appear # opening a file # file format is: # query_term1 # query_term2 # query_term3 with open(r"C:\Work\pets.txt") as csvfile: file = csv.reader(csvfile, delimiter='\t') # main automation loop below for row in file: query = row[0] xpath("""//*[@id="query"]""").clear() xpath("""//*[@id="query"]""").send_keys(query) xpath("""//*[@id="query"]""").send_keys(Keys.RETURN) try: print("First result for " + query + ": " + xpath("""// *[ @ id = "sortable-results"] / ul / li[1] / p / a""").text) except NoSuchElementException: print("Nothing found for " + query)
I was thinking of using - https://www.racenet.com.au/
I see people questioning the usefulness of dataclasses (not necessarily in a negative way), so I feel I should point out that this is basically a standard implementation of part of the `attrs` project, which is very popular. You can look at their [examples](http://www.attrs.org/en/stable/) for some inspiration.
Parsing *can* be that simple, but be honest it hardly ever is. At the very least, you need to know which type maps to which parameter. That's already more complicated. My point is, given these classes: class Point: x: int y: int z: int class Rectangle: top_left: Point bottom_right: Point I wrote a lib in a few hundred lines that can generate schema to serialize and deserialize those from JSON, YAML, etc. You could do the same thing for DRF (I won't because I think DRF is a dumpster fire). Having to parse docstrings for that information would be a lot more code which means it's less reliable.
Gotcha, apologies for the accidental lecture then :)
Great comment, thanks. But here's my issue "If the real world problem you're trying to solve is *i have this pile of input over here and I need an AST of it*, AND *no parser already exists*, then write a parser. Success is *provably parse all valid inputs*, and maybe *publish a paper and/or library*. " To solve my real world issues, I need to study some API's but when I actually look at an API it makes no sense to me, I have little to no idea where to go in a devkit's directories. I don't know where the code resides, and I don't know how to actually use the API. Let's say my problem right now is translating a C# program inside an API to a Python program. If I don't know what's going on inside the API so I can't start coding in python ( I really want to do this). Even if I want to use the API as it is, I don't where to start. To understand API documentation better I started studying computer science. Now, I am at a stage where I can build undergrad level interpreters. But the API's are still not useful to me. So should I keep on studying more computer science till API's start making sense to me. Or should I google my way through an API, which might take weeks or months (no idea) and I still make numerous errors in understanding the documentation. I may even give up in frustration. On a side note, is there an beginner level API or library that you can suggest I can start off with? I tried Github open source projects. But it's all very intimidating. 
&gt;To solve my real world issues, I need to study some API's but when I actually look at an API it makes no sense to me What api?
Sorry, I am not even sure if I'm delinquent or there's no use attempting this without actual coding experience. This webpage has details of the type of the WITSML standard, a data transfer specification from oil rig sites - [https://www.energistics.org/for-developers/](https://www.energistics.org/for-developers/) I have a lot of data in WITSML, and I want to build visualizations and analytics on that data in Python. 
I generally recommend using something like [pyenv](https://github.com/pyenv/pyenv/) for this very reason. It won’t help with reinstalling things when you upgrade, but it won’t break your previous installations either. 
Pretty much no one on here (me included) is a lawyer, but publicly disclosed does not have the same meaning as being in the public domain... a work or utterance subject to copyright only enters the public domain when the original copyright fully expires. Even expressly saying that you are releasing a work into the public domain doesn't necessarily make it so (in some jurisdictions you can't actually do that, in others it's never been tested in law and so it's uncertain doing so would actually work)... so I wouldn't rely on anything published without your lifetime actually being in the public domain, especially if you're in the United States. And yes the results (and specifically the matter and the form in which they're presented) can totally be copyrighted, and the T&amp;C of the site can absolutely bar you from scraping their data. If they sued you you'd almost certainly have to rely on trying to show that the T&amp;Cs themselves were unenforceable, which is an outcome they'd have a substantial incentive to fight against. Now, will any of this result in any legal problems for you? Depends on what you do with the data and who and how much you piss off doing it. But -- with again stressing that I Am Not A Lawyer -- it seems reasonable to me that posting on Reddit asking about it does a pretty good job of establishing your intent to at least try to skirt around what the publishing party *believes* is their copyrighted material, and that does seem a good way to piss off someone who very well might be able to afford lawyers.
Awesome! Thanks for sharing.
Dude, that is not an easy problem to start with. At all. 
&gt;Requests I am using Jupyter Notebook. My data is on my laptop's hard disk in .XML file (7gigs) , I understand the file structure, and have seen the mapping before. Any suggestions on how to use the data on my disk, use the API to read in my data in standard form and then build some visualizations?
I think it is probably slightly faster than a LOAD_FAST, but I'm not certain. What platform are you on? It is pretty straight forward to build Python (once you know how to do it :) and I'm happy to help if you want.
Fuck pep8 tabs are better
What does "use the api to read in my data in standard form" mean? Split that into (at least) 4 different requirements. You probably need a different &amp; unrelated solution to each. I suspect there is _no_ higher level abstraction in python (except aforementioned unmaintained https://github.com/erdosmiller/PyWITS ). Can you read the files with https://docs.python.org/3/library/xml.etree.elementtree.html ? Or are you wanting to something else to read the files? 
I think it's retrieving multiple users, MyNews shows your feed and your friends feed, you have to retrieve your friend's profile as well.
Cool. Where are you going to use it?
I am clearly thoroughly confused and i will get back to you. I don't know where to start basically. I have data, I have an API. but I don't know how to use either. I've done a lot of academic parsing and OOP but that's not coming in handy. Ill start with some advanced XML.
Dude I managed to get a Django application running on IIS with celery. Not fun at all. The trick is the fastcgi config. You need to create it correctly, otherwise you wont be able to change it later. There is a good tutorial on the web. Just search for Django IIS. It should be similar for flask. Good luck!!!
Generally speaking Ubuntu 14.04, but every time I've tried, either manually or through something like pyenv, a different error occurs every time. After the 5th or so issue that I've solved and then a new one comes up I just gave up.
I wanted to make that higher level abstraction in Python myself. Using the C# code available. Maybe I could learn C#. But I also want to use the data, so this is two part project. 
Creating an application that allows users to store custom data. They can create their own Django models and stuff. Also working on an application that allows the user to search many many models and see those on a map.
What did Luigi and Airflow lack?
Jython isn't a PSF project so why are they responsible for it? 
Show me what in drf will auto-generate a serializer from type annotations. Not from a django orm model, but from just type annotations. 
Virtualenvs also break when you upgrade homebrew, depending on how they were installed. 
Hum, it definitely should build there. Feel free to DM if you want to try and get stuck. I used to have similar issues but things have gotten a lot better. 
What api do you have?
Why do you want to use Python instead of C#? Overall, this is not a beginner problem and you very likely should start on smaller things first before attempting to tackle your main goal.
Maybe restaurants started paying for five star reviews, or giving out coupons and other stuff for a good review?
&gt;Are How do I use the given devkit for my files? There are no instructions as such, or I am missing them.
Any idea what they'll use? Also why wouldn't python work?
You're correct. I'll correct the example right now. Thank you for pointing out.
Just finished working on a webscraper, that does a decent job at gather the information. Its a little slow, but dont want to get banned from the website. I plan to get the first 50k profiles, in a 15k batch for the first one, because im starting at 4001, and then go on in 10k batches.
Dataclass provides dunder methods to give you some functionality out of the box. JSON objects, as far as I can tell, provide no such methods
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython or for the r/Python discord: https://discord.gg/3Abzge7. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community and the r/Python discord are actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. **No matter what level of question you have, if you are looking for help with Python, you should get good answers**. Make sure to check out the rules for both places. Warm regards, and best of luck with your Pythoneering!
Standard brew operating procedure
&gt;The Standards Devkit wraps the WITSML, PRODML and RESQML schemas with Microsoft .NET objects. The developer can work directly with these objects rather than having to deal with the XML definition itself. It provides all of the conveniences that .NET developers are familiar with such as full IntelliSense support, XML Serialization, .NET naming conventions, enumerations, and more. &gt; It includes a code generator that parses the WITSML, PRODML and RESQML XSD files into .NET 3.5 classes, Not designed to be used with python. Step 1 appears to be "Be a .NET developer". The Standards DevKit consumes the XSD files and emits a bunch of .NET code (class definitions). A .NET developer could then import those classes. And presumably whatever parses the files will instantiate the correct classes, letting a .NET developer work with the higher level abstraction. So you could: 1. Use .NET instead. And Visual Studio. Don't seek help from /r/python. 2. Use .NET to make some tiny shim objects/methods, and then figure out how to use those objects/methods from python. (No idea how.) 3. Find some python library which auto generates python classes from XSD definitions, replacing the whole of that StandardsDevKit. Learn that library. Now you have an additional problem, and some brand new generated classes that by nature have no documentation. 4. Read the XSD definitions, and hand-craft the python classes and deserialization (using etree). Maybe read the .NET code for guidance. 5. Start with the abandoned python project above, figure out how it deserialized the files. Determine whether it's still correct. Make any changes to account for standards-changes over the last decade. 
No. This is a question merely out of curiosity. 
Maybe there is some sort of mutation that is needed...(?)
https://coverage.readthedocs.io/en/coverage-4.5.1a/source.html#specifying-source-files
&gt; &gt; What about this guy? https://pythonnet.github.io/
That's option 2 above. Cool. It might work. You still need to learn how the .NET library works, though. 
Thinking the same thing. I hate that all the examples I've seen so far are pretty much purely storing data--can you do nothing else with them. It's like the whole "Sockets!! How to write an Echo Server" thing. (I do realize storing data is a big thing--but working with it is what programs do.) Maybe Wayne Brady will have to go smack a linked list implementation using dataclasses to show they have some use outside dbs.
I'm not sure he provided a great example, you wouldn't use dataclasses to make a POST, you would serialize the dataclass into JSON. Dataclasses are just regular python classes that have some nifty shorthand notation that describes the data slightly better so that python can autogenerate the bulk of the boilerplate code you often have to do. This makes it a lot easier to create actual classes that define your data rather than the traditional python approach of throwing everything in a dictionary. They don't appear to offer any performance gains or reduced memory footprint vs a traditional class so I feel like their main purpose is to help provide more structure in larger projects. (Side note, they also allow for read-only attributes via the "frozen" argument, this intern also makes the dataclass hashable i.e. can be a key in a dictionary)
My work. Unfortunately the nature of why I'm not at liberty to say!
thanks for pointing me to the right place!
No problemo!
Conda has packages for pypdf2: https://anaconda.org/conda-forge/pypdf2 Does `conda install -c conda-forge pypdf2` not work?
They could simply make it a SyntaxError to have more than one `as` at the "top level" of the offending statements (`with ... :`, `[from ...] import ...`, and `except ... :`), or in other words force an assignment-expression `as` to be parenthesized when it occurs in one of said statements, and elsewhere not. Don't understand what makes := ideal.
The idea isn't what's being contested. Everybody recognizes that the concept would be a good thing to have in Python. What people hate is the syntax; here are two alternate proposals which this PEP claims are inferior but in many's eyes (including my own) are plainly more-readable than the := abomination: filtered_data = [y for x in data if (f(x) as y) is not None] filtered_data = [y for x in data if y is not None given y = f(x)]
Read yes. Edit...........no, not beyond moving around pages. Best means of real editing is via something like Inkscape svg -》pdf
It does leave old versions intact and installs in a new directory. But it also updates all Homebrew packages to use the latest Python, and those can't be restored that easily. If you leave everything in venvs and use pip for as many packages as possible it should work out. That said the Py3.7 transition seems difficult. A lot of deprecated functions got removed this version (as scheduled) and a lot of nits that bothered people got changed due to Github and accepting more PRs. For example I found packages that broke because they relied on implementation details of ``re`` that changed for the first time ever. 
`pikepdf` can do this. It supports editing PDF content streams.
thanks, deleted
Trying to adapt the vmware_inventory.py script from contrib/inventory in the ansible project to my enterprise. Want to have dynamic inventory with as precise as possible vm list returned. Currently struggling to figure out the jinja2 filter in the ini.
With images, both for speed and data density, you will want true arrays and not nested lists to store the pixel values. You could use the built-in array module, but compared to numpy it is quite painful to use.
:= isnt necessarily ideal. Just better than "as". And what you want to do is harder than one would think because it requires a variable amount of forward look aheads which are both hard to do in parsing and slow down parsing.
r/learnpython
The attrs package exists, there is no reason to add this functionality to python itself. Have you seen pep572? It is the most horrifying bit of python code I've ever seen. https://www.python.org/dev/peps/pep-0572/
It's because nothing in Python was added specifically *for* the purpose of dataclasses. Instead, 
Excuse you, f-strings are amazing.
Browse the plugins color theme category. I think theme collection is called ra8nglo...it has hundreds of contrast themes.
'using only for loops and if statements' yep not gonna do that. sounds too much like homework. why not just use libraries?
Wrote a little compiler which parses arithmetic expressions and compiles with llvm using llvmlite with the help of [this](https://medium.com/@marcelogdeandrade/writing-your-own-programming-language-and-compiler-with-python-a468970ae6df) post. [http://github.com/gurneesh/test-lang](http://github.com/gurneesh/test-lang)
Dataclasses are normal classes. They're just a shorthand for a ton of boilerplate.
Inherit those methods from what? 
Normally, the answer is type safety.
Everything is game as long as you are not logging in and not claiming copyright of scraped data.
 u/User_Simulator u/DreamGirl3
Install [Material Theme UI](https://plugins.jetbrains.com/plugin/8006-material-theme-ui) \- you will be able to customize UI colors what you like.
Haha, well if it's a linked list you want I can do that on my phone. \`\`\` @dataclass class LinkedList: head tail def is\_empty(self): return self.tail is None def \_\_iter\_\_(self): yield self.head if self.tail: yield from self.tail @staticmethod def cons(element, linked\_list): return LinkedList(head=element, tail=linked\_list) @dataclass class Tree: value left right def \_\_iter\_\_(self): if self.left: yield from self.left yield self.value if self.right: yield from self.right \`\`\` In functional languages, "dumb data" is the default way to do things. So if you're more used to that style, dataclasses will seem very convenient. If you're used to doing things other ways, then maybe not. Much as namedtuple already is.
You can "pip install dataclasses" for Python 3.6. It wasn't back ported further than that, it seems because of preservation of insertion order in dict objects. Python 3.7 declared: "the insertion-order preservation nature of [dict](https://docs.python.org/3/library/stdtypes.html#typesmapping) objects [has been declared](https://mail.python.org/pipermail/python-dev/2017-December/151283.html) to be an official part of the Python language spec." And in classic Python stdlib-vs-pypi fashion if you pip install this package on 3.7 it breaks.
Would your statement: filtered_data = [y for x in data if (y := f(x)) is not None] be the same as this statement? filtered_data = [(y := f(x)) for x in data if y is not None]
Are you doing this for personal information? Collecting it, from a published source, with attribution, for personal use, is almost never going to raise so much as a warning notice if you’re scraping them gently. Copyright doesn’t mean you can’t read, interpret, or save what they publish. If you’re publishing these results, you’re into murkier territory right away, and if you have a profit incentive then you’re even worse off. But if you’re just trying to scrape, eg, individual car positions each lap, and you’re not connecting to them every millisecond to check for updates, you should be OK. If you want, consider a scraper that saves the page, say, every minute. Then hit that with your dev work afterward on your local machine. 
I like this PEP, but this example in particular rubs me the wrong way: if any((comment := line).startswith('#') for line in lines): print("First comment:", comment) else: print("There are no comments") if all((nonblank := line).strip() == '' for line in lines): print("All lines are blank") else: print("First non-blank line:", nonblank) This code captures the first "witness" against the any() or all() function calls. Why? Because it implicitly assumes that the any() and all() function calls stop executing immediately when they find a non-matching value (short-circuit evaluation), and also implicitly assumes that they execute in the order of the list. For example, it assumes that the all() function works like this: def all(iterable): for item in iterable: if not item: return False return True and not like either of these, which would be functionally identical: def all(iterable): for item in reversed(iterable): if not item: return False return True def all(iterable): result = True for item in iterable: if not item: result = False return result These two assumptions, intuitive or not, are **not** necessary for any other normal use of any() and all(). Having the programmer rely on a non-documented assumption of how a function is coded is **not a good thing**. Imagine for example if some programmer built a cryptographic library for something, and needed to make safe calls for all() to validate a password which is a list of bytes with another password which is also a list of bytes. Calling this code: is_valid_password = all(input_password[i] == true_password[i] for i in range(password_length)) This is a security vulnerability if the all() function breaks immediately when it spots a discrepancy (a timing attack allows the enemy to hack the password in O(n) time instead of O(2^(n))). The library's programmer, of course, knows that, and so decided to override the default all() function with a cryptographically-secure version that does not short-circuit. Well, now anyone using the all() function with the ":=" operator will get an unhappy surprise...! --- Also, both examples use assignment expressions to name a misleading name - For example, the variable "nonblank" is only nonblank because you only refer to it when you've found a nonblank line. If someone else reads that code and assumes "nonblank" is always not empty (fair assumption due to its name), they could mistakingly use the variable like this for example: if all((nonblank := line).strip() == '' and nonblank[0] == ' ' for line in lines): print("All lines are whitespace that begins with a single space") else: print("First invalid line:", nonblank) They are thinking "the variable is nonblank, so that must mean it's not empty, so I can check the first character in it!" and this code will crash the moment it gets an empty line.
For r in range radius Set color something Move left 1 unit For d in range 360 Move 1 unit Rotate 1 degree
design for new ui for my cloud - [demo.cloudover.io](https://demo.cloudover.io). Python + Django + materialize css and no client-side at this time
Hello! I'm a bot! It looks to me like your post might be better suited for r/learnpython, a sub geared towards questions and learning more about python. That said, I am a bot and it is hard to tell. I highly recommend posting your question there. Please follow the subs rules and guidelines when you do post there, it'll help you get better answers faster. *** ^(this bot is written and managed by /u/IAmKindOfCreative) ^(This bot is currently under development and experiencing changes to improve its usefulness)
Link bro..
Hardly ever?
Rain provides own transfer of data objects between worker processes. Rain allows to map data object to a file system; however, it does not use shared file system and transfers data by itself directly to a worker where they are needed. This allows to create lots of short running tasks without hammering a distributed file system.
Snippet from Python's stdlib \`copy.py\`: reductor = dispatch_table.get(cls) if reductor: rv = reductor(x) else: reductor = getattr(x, "__reduce_ex__", None) if reductor: rv = reductor(4) else: reductor = getattr(x, "__reduce__", None) if reductor: rv = reductor() else: raise Error("un(shallow)copyable object of type %s" % cls) With the assignment expression can be rewritten as: if reductor := dispatch_table.get(cls): rv = reductor(x) elif reductor := getattr(x, "__reduce_ex__", None): rv = reductor(4) elif reductor := getattr(x, "__reduce__", None): rv = reductor() else: raise Error("un(shallow)copyable object of type %s" % cls) The second variant is a clear win in my eyes :)
Rain allows you to define large end-to-end data processing pipelines with complex inter-task dependencies (beyond map-reduce pattern). The pipelines can consist of various tasks ranging from external applications, through python code, to various built-in tasks (and also offers easy extensibility). Rain features direct inter-governor(worker) communication that makes inter-task data exchange very efficient and if you set your working directory to be RAMDisk it has NO filesystem overhead. Unlike Kafka, Rain is not designed to deal with streams.
Is it also able to handle supersonic and hypersonic flows ? And also reactive fluids ? 
Title contains lots of buzzwords.
Write a PHP script that accept arguments an HTTP-requests with arguments as get or post parameters and replies with the result. Then use \`requests\` to call it from Python. \&gt; I may have found a solution, to send a URL request and edit the $GET and $POST. Might not be secure though... You could allow requests only from certain IPs or use some sort of authentication (i. e. sign requests and responses with HMAC).
Been spending a couple of days per week on Numpadz, now you can record loops. Being addicted to this project is better than being addicted to other things :) [https://github.com/jsoncz/numpadz/blob/master/numpadz.png](https://github.com/jsoncz/numpadz/blob/master/numpadz.png)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jsoncz/numpadz/.../**numpadz.png** (master → bfd93c8)](https://github.com/jsoncz/numpadz/blob/bfd93c87e9e39dd74986e9d253d3370ecd4a9d2a/numpadz.png) ---- 
They seem to be for more simple data types. You wouldn't wrap a dataframe with a data class but you could represent a single row of the dataframe with a data class. Though I'm not sure why you would need to.
Any time you don't specifically need a named**tuple**. Namedtuple was supposed to only be used to replace existing tuplea by more convenient &amp; extensible types in a backwards-compatible manner, using them as data classes was never then intended use case. And IIRC namedtuples cause performance issues on startup when there are lots of them as generating the type is non-trivial. 
Will it be able to handle such flows? Yes. I had once implemented a Burger's equation solver with fluidsim. It did work. But right now we don't have a compressible or reactive solver implemented out of the box, not because it is hard to do (judging from my past experience with compressible flows around airfoils), but since our research focus is not around such flows.
*whoooosh*
Pretty much all the time if you use MyPy
That's not possible. Cython doesn't work on arbitrary Python code.
I'm currently building a Python portfolio (preparing for a little job hunt). As for this week - writing a BibTex parser as part of my larger project, a webapp for bibliography management written in Flask. 
Do you know of any good way to package a python application to a debian .deb file? I'm using setuptools at the moment but the deb won't install any dependencies automatically on install for some reason. It just won't install until you install the dependencies manually.
That's not how you should do things. If your Python application depends on Python libraries, your .deb package should depend on .deb packages for those libraries.
The deb installs the required python libraries fine. Setuptools works fine for that. But the application requires other packages such as fail2ban to work 100&amp;#37;. This can be installed via apt. So I just need to somehow define what packages(deb packages) the .deb requires. Which is my current struggle.
How about running it on Slurm managed HPC? I'm asking because I currently face problem of rewriting software for scientific calculations and making it scalable between workstation, 100 core cluster and HPC.
Are you running `setuptools` in your post-install script or something? If so, _don't ever freaking do that ever_. List your library dependencies and whatever else you need as .deb packages in your `control` file.
eh? isn't the point of an interpreter to have a unified software platform? you're telling me the windows python 2.7 behaves differently to the linux python 2.7? 
It should be easy to start Rain in any environment. You just need to start server on one node and governors on all nodes. We have out-of-box support in "rain start" for PBS. It should be easy to modify this for SLURM; however, as we do not have access to any cluster with SLURM, it is not easy for us to test it.
There is a built-in support for PBS. Generally, "rain start" command enables an easy startup of distributed Rain infrastructure. You can find more info in the [documentation](https://substantic.github.io/rain/docs/install.html?highlight=start#starting-infrastructure). 
First of, I also have never seen or used 3.0 to 3.2 and I agree that asyncio isn't currently fully working and will probably need to change. Now, If you want to support 3.3 then none of the new features make any difference to you, so what exactly's the problem? None of it impacts your ability to write and use your library so why would you oppose it?
No so how I'm building to deb is with `checkinstall -D python3 setup.py install`. And in my setup.py I define my python libraries in `install_requires`. This then installs all python libraries on install. Do you have a link to docs for control file? Or can you explain how you would usually build your packages?
There's your problem. You should use the proper build tools and `dh-python`.
I'm currently working on an argument parser to make it easier to create CLI tools. In the past week i had to create a CLI with a Git style command 'cli.py list files --arg1 --arg2' and none of the library i found allow me to create something similar in a simple way. This is my first public python module so feel free to contribute. [https://github.com/WellDone2094/climb](https://github.com/WellDone2094/climb) 
A website will need more than Python, looking at the Flask framework will be a good place to start.
&gt; Because while backwards compatibility is extremely important and acheived, for library authors, arguably, foward compatibility is just as if not more important. If not for major versions, then at least for minor ones. Eh, idk if this is really the most accurate characterization. Python versions are end-of-life'd [5 years after their release date][0] (with the exception of Python 2.7, which had its EOL extended by 5 years to 2020). What this means is that if a library author wants to support the same range of Python versions as the Python organization itself supports, they only need to support roughly 3 major version of Python at any given time after 2020. Or, to put it another way, there's a 5 year delay before a library author can use a new, non-backportable feature. (Of course, there are many new features that *are* backportable -- e.g. enums was introduced in Python 3.4 but [was backported to Python 2.7+](https://pypi.org/project/enum34/), the typing module was introduced in Python 3.5 but was backported to Python 2.7 and 3.3+, the new dataclasses module was backported to Python 3.6...) In any case, while a 5 year delay is somewhat inconvenient, I don't think it's really the end of the world. It's a predictable rule to remember, and 5 years gives people ample time to work out kinks (especially for more complex features like asyncio or type hints), work out new best practices, update tooling... It's also certainly better then the current status quo, which is a 10 year delay due to Python 2.7. [0]: https://devguide.python.org/#status-of-python-branches &gt; they have to have a 30 comment argument on that person's PR because they don't care about breaking support for 3.4-3.6/7. I don't think this actually happens in practice, as long as you set up clear lines of communication. E.g. make it clear up front in the README what versions of Python are supported and set up Travis or some other CI tool so it runs the tests multiple times, once per each major version of Python. If the PR doesn't pass the travis tests and the author has no interest in fixing the PR, just close it -- there's really no room for debate so long as expectations are documented clearly. &gt; Library authors still need to support 3.4 which is the common *nix default of which Py3 is installed if any Only for about one more year though -- Python 3.4 is slated to be end-of-life'd after March 2019. If any particular organization wants to use Python 3.4 after that deadline, they either need to deal with the fact that the ecosystem is drifting away from them + they're not receiving any more security updates, or start paying some commercial vendor to support 3.4 for them. It's unreasonable to expect a group of volunteers to do that work for free, IMO. In regards to the various *nix distributions: while I'm sympathetic to the fact that those maintainers are also volunteers with limited free time, I think it really is on them if they didn't correctly structure their tech to be robust in the face of Python's EOL schedule. I don't particularly care if they update only once every 5 years or do something more elaborate (e.g. maintain some fork of 3.4 or whatever, backport security fixes, and hide the system default, and ask users to install the version they want to use), but either way, this is something they had plenty of time to plan and prepare for. 
Google for django or flask. Flask mega tutorial https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world is good place to start flask. Django tutorial https://docs.djangoproject.com/en/2.0/intro/ is good place to start django. There are lots of good tutors on YouTube if you prefer video over text.
Have you considered [Click](http://click.pocoo.org/5/)?
That's not true, it does work but it generates ineffective code since it always operates on Python objects.
You can use pyinstaller which bundles executable.
You can use pyinstaller which bundles executable.
\*First
I will checkout dh-python. Never used it before. Any suggestions to get me going? The docs aren't very well explained... But from my understand, dh-python using pybuild package to actually build the package, dh-python is just a package that helps build python packages for debian using various tools. 
It's not really what I'm looking for as this won't install my dependencies. Because if you try run apt in an executable script within a dpkg or apt installation process, the process is locked and you can't install 2 things at once. 
Yes, the point is that `dh-python` is the recommended way to build Debian packages for Python anything. Start [with the docs](https://wiki.debian.org/Python/Pybuild).
Check out the nuitka project. Sorry I'm on my phone or I'd post a link
Take your game to the next level. Use assert hassattr()
I had the same concern than you but the short-circuiting and the ordered iteration assumptions are actually part of the documentation as [`all()`](https://docs.python.org/3/library/functions.html#all) and [`any()`](https://docs.python.org/3/library/functions.html#any) are described as equivalent to the `for` loop.
Perhaps worth trying [requests-html](https://github.com/kennethreitz/requests-html/blob/master/README.rst) instead?
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [kennethreitz/requests-html/.../**README.rst** (master → c59480b)](https://github.com/kennethreitz/requests-html/blob/c59480bf154b86ccb492a7dcc9b6e446195dae61/README.rst) ---- 