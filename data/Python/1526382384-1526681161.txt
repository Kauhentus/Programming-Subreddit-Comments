People newbie like me may find this Pipenv introductory guide pretty useful, then you can choose if you want to implement it or not. https://realpython.com/pipenv-guide/?utm_source=mybridge&amp;utm_medium=blog&amp;utm_campaign=read_more
neat!
Right click on the element DOM Explorer and go Copy-&gt;XPath. Works in FF and Chrome.
I find it a tad suspicious that whenever a link to boostlog.io is posted, it use the same redirection service, is posted by a new "redditor" with no real activity, and end up at a "person" without a profile. While this one appears better than the listicles most commonly posted, I still find it to be of rather dubious quality, and most likely copied from elsewhere. I'm really interested in learning who find this article so interesting that it's upvoted? 
This is/was my point but i don't have experience developing enterprise apps or APIs so i am not aware of pitfalls (if any) to use docker vs virtualenv. For my usecases, i have always relied on virtualenv but i find docker much easier to work with to achieve process isolation. However i do understand, easy doesn't mean good design and hence the original question.
going from crawling to operating a rocket, great idea
&gt; The code examples that you just saw above are readable enough. However, once you start using several parameters and longer strings, your code will quickly become much less easily readable. &gt; Unfortunately, this kind of formatting isn’t great because it is verbose and leads to errors, like not displaying tuples or dictionaries correctly. Fortunately, there are brighter days ahead. I'm not exactly pro-printf-style but all of that is basically bullshit: 1. printf-style supports named substitutions if you've grown beyond a few items. 2. printf-style displays tuples and dictionaries just fine, but you need to understand that the right-hand parameter of the operation *is a tuple or dict*. Anything else will be implicitly wrapped in a tuple, but if your sole value could be a tuple or dict you have to explicitly wrap it in a tuple. &gt; If you had the variables you wanted to pass to .format() in a dictionary, then you could just unpack it with .format(**some_dict) and reference the values by key in the string, but there has got to be a better way to do this. `format_map` for starters… Missing: Why f-strings aren't Great For all their benefits, f-strings are useless for i18n/translatable strings: there is no hook to plug in a translation of the template string (import hooks aside I guess…), it's parsed, split and compiled to bytecode at runtime. And of course that the contents of the braces is an arbitrary Python expression makes it risky as hell to inject half-trusted stuff from Transifex or whatnot (f-strings are already problematic on that point as they allow basically arbitrary attribute access).
I honestly don’t know, still a beginner at programming, but I think I once saw a python repo that converted python code to golang, and I saw a few articles claiming golang to be a lot cheaper to run, beyond that I am beat, I don’t doubt I may be wrong, but that’s the limit to my knowledge 
&gt; I have been wondering if Python devs use type hinting or not I know that Dropbox, Instagram, and Zulip use type hints extensively. Facebook also use type hints, though I'm not sure what percentage of that code is due to Instagram. (At the very least, Facebook uses Python and type hints enough that they've justified writing their own competing [type checker](https://pyre-check.org/).) You can also find some additional discussion if you search for "type hints" or "PEP 484" in the search bar. Some people are quite enthusiastic about type hints, other people are more ambivalent. (Disclaimer: I personally fall under the "enthusiastic" camp). &gt; it goes against Python way of typing Eh, Guido is working full-time on mypy, a tool for type-checking your code based on type hints. At that point, idk if it's really accurate to say that type hints are "not Pythonic". You'd have to argue that Guido doesn't write Pythonic code, which seems like a bit of an extreme position to take. &gt; Shall i start implementing it? I think this depends on what exactly you're doing. While type hints can be very useful for all kinds of projects, they really shine when working on bigger ones, where your codebase is big enough that it's difficult to understand how everything works all at once. They're also great if you need to keep track of subtly different kinds of data in your codebase: for example, keeping track of whether something is unicode vs bytes or whether some int represents a user id, an http code, or something else. ([NewType](http://mypy.readthedocs.io/en/latest/kinds_of_types.html#newtypes) is super useful for the latter case.) Using type hints can also let you write more focused unit tests. For example, if a function is annotated to accept only unicode, you don't need to bother testing to see what happens if you pass in bytes. Instead, you can focus on testing to see what happens if you pass in weird unicode strings, do weird things with encoding, etc... I feel type hints are currently not as great of a fit if: 1. You're making extensive use of libraries like numpy/writing a lot of scientific and numeric code. Currently, PEP 484 types aren't really expressive enough to correctly type modules like numpy -- specifically, there currently isn't a way of typing the "shape" of matrices or the results of certain operations on matrices. 2. You're making extensive use of libraries like SQLAlchemy that do a lot of magic when doing things like defining models. I believe you run into similar issues with Django, though there *is* some partial support for that framework. (E.g. Instagram and Zulip both use Django, and they manage.) 3. You're writing a segment of code that does a ton of input validation -- e.g. validating/serializing/deserializing JSON a user gives you. 4. You're a beginner and are new to both programming and Python. (Beginners who are experienced in other programming languages might be fine). 5. Your code does a lot of magic -- e.g. dynamically generating custom classes, making heavy use of metaclasses... Cases 1 and 2 are pretty big gaps/failings: the core mypy devs are actually working on addressing those gaps right now at the Pycon sprints. I'd check back in a year or so -- hopefully the situation should have improved a bunch then. In case 3, I think validating/deserializing/serializing data is an inherently dynamic task where you *need* to have a bunch of runtime checks. This is actually a case where the gradual nature of type hints shine: dynamic type systems are genuinely better at some kinds of things, and Python lets you mix and match both systems to get the best of both. Here, I like to contain all of my validation code in one place, do a bunch of runtime tests, and go back to using type hints once I know the incoming data is clean. Case 4 is my personal opinion: while I think types can be very useful, I also think there are still some warts and rough edges that make it hard to justify teaching beginners type hints. The situation here might be better once [PEP 563](https://www.python.org/dev/peps/pep-0563/) becomes standard, once cases 1 and 2 up above are fixed, and once there's better editor integration (beyond Pycharm). Case 5 will probably never be supported. If your code does a lot of magic, there may never be a clean way of expressing exactly what you're doing using types.
Aren't those just files related to pipenv ?
It is astroturfed clickbait. There's approximately 40 points right now, which makes me think someone paid for it or people are reading the title and just upvoting because it's content on the sub. There's nothing to be learned from this article. This post was written "today" but the code it's referencing, both the [Arduino](https://gist.github.com/elktros/1c27f694e7c87cfc20dad737534e8e70) and [Python](https://gist.github.com/elktros/3eb4da926f643a7314afb84438d9b2c0) versions, were posted 6 months ago with no reference to the original author. The code is also useless as-is. The article makes reference to there being more content than there is. Look at "Hardware and Software requirement" section. It mentions "220 Ohms resistor". If you ctrl+F "220", nothing else shows up. 
If you look at the two links, they're pointed to the same channel, but they are actually different.
Hey r/python. I'm the author of this post. This post is a starting point for helping people experiment with Wallaroo. I'd be happy to answer questions or discuss some of the ideas that went into this specific project.
[removed]
If you are using Python 3 then you should be using venv (native and built-in) not virtualenv (3rd party).
What exactly do you type in to the terminal? The fact it's opening the Python script itself suggests you don't have `.py` files associated with the python interpreter. Like how Windows knows to open `.doc` files with Word, you have to tell it to open `.py` files in Python. Try this in the terminal: `python --version` It should either print the python version or something like `'python' is not recognized as an internal or external command` If it prints out the version, `cd` to the directory your script is in and run this `python collect_links.py www.python.org file.txt` This tells Windows to run the `.py` script using python instead of opening it.
No, it is the reference implementation of Pipfile which will be supported by pip at some point. https://github.com/pypa/pipfile
Build a wheel for your script that has all your deps and add your script to a setuptools entry point. Then install your one wheel with pip and run your script at the entrypoint. 
&gt; The difference is that you're building an application for a very specific environment (usually) that you often isolate in docker these days. It runs under a single python version and that's that. I don't think docker is as widespread as you think it is. Lots of people still do deploys to raw hosts (either physical or virtual) rather than shoving a container into an orchestration platform. Even if docker is that widespread, it only covers a fraction of what kinds of applications people write. You wouldn't (or rather, shouldn't) put a cli into a docker container as the primary way of interacting with it. GUIs and daemons are in a similar boat. But that aside, applications can run under multiple versions of python. docker-compose is a python application. I might run it under 2.7, 3.4, 3.5, 3.6, or pypy depending on what environment I'm in. In my personal time I contribute to a webapp that works under 2.7 and 3.4+. It includes a setup.py because it makes deploys for others much easier and it includes a CLI portion so a setup.py makes using that easier as well. 
Looks awesome! Do you need an audio hat?
a reminder that a lot of people that build the python and tools a lot of us use daily are volunteers. remember that when hating on pipenv ;)
You might like [xlwings](https://www.xlwings.org)
Two is a standard practice in many languages tools because it can solve use cases single can’t. Experienced developers come to python and wtf that it still didn’t exist. 
what makes it the best?
Audio hat? Headset you mean? You can use an headset or more elaborated microphone like REspeaker, Matrix, Google DIY Kit or whatever if it's recognized by your system.
Part of the problem was I think it was too premature to declare "Pipenv – The Officially Recommended Python Packaging Tool" plastered everywhere when it still had a lot of kinks to work out.
Notice this: 1) You say here, "Pipenv is not the only recommended tool that we talk about ..." 2) The pipenv readme starts with "the officially recommended Python packaging tool ..." This is a mixed message that could be cleared up pretty easily. Granted the sentence on the pipenv readme is ambigous (does "the" mean "the only", or just, "this is the one you've been hearing about"), but changing to "an officially recommended tool" would be clearer.
Hyperlink multiple times
But it doesn't even cover pandas
The limit date is specified on the humble bundle claim page. As I can recall the Postman account is nearing it's limit date but it may be different for you since you availed much later.
Haha I think they meant an audio "hat" for a raspberry pi. Like the equivalent "shield" for an Arduino.
Haha ! Ok. No you only need a Raspberry then :)
It depends on what you want to do. If you are just doing basic analysis VBA should be fine.
Right, in the email I got after purchasing the bundle it listed four of the services with specific redeem by dates. But are the other services "redeem whenever, get same X time"?
it depends. I know there's WAF products out there that inject JS to scoop up data to determine if something's "human" or not, but they're all heuristic based. If you are facing that you'll know pretty quickly because you'll try and get blocked or challenged after a few requests. They can be very tough to bypass without using a headless browser as the JS will be heavily obfuscated. Reverse engineering what they're using to fingerprint you is really darn hard. Fortunately most sites never use that sort of stuff... and in that case emulating a User-Agent header and paying attention to any CSRF headers/cookies/tokens inserted will mostly make you disappear into the noise.
I tried to use Pipenv and I just didn’t understand the advantage over virtualenv. If the only advantage is lock file, I think this is just a band aid over the real problem — why the hell PIP doesn’t have lock file by default (e.g when freezing)? I use Docker in production, which is essentially an isolated from the default environment of the OS. Very similar to virtualenv. The reason why other package managers (e.g NPM, Composer) are successful is because the entire project (except for the language version) is contained in a directory. This way containerizing the project is also more logical. When I use virtualenv on my dev machine, creating a Docker container does not require me to install anything new while still retaining the dependency tree.
Yeah, an audio hat is like a shield. Same thing. The pi has a so so audio chip built in and some application require higher audio quality. 
Thanks been looking through the [Mega tutorial](https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world) and it's amazing how much free content one guy put out there. Can't wait to get stuck in.
&gt; Cookie cutter in 2013 https://github.com/audreyr/cookiecutter/releases A small point...the latest release was Oct 15, 2017...and it is still in active development. 
Writing a small business application on an Iphone, using Pythonista 3 (http://omz-software.com/pythonista/) which is a $10 app. While it's annoying that the integration of Pythonista and a PC doesn't work well enough, I'm amazed what is possible on an iPhone: You can have an app with several forms that collect data and then send them away using requests. A little warning, if want to try it out, make sure you have a bluetooth keyboard. Without it, writing code of the phone is not much fun. 
Qt has a webview widget that you can use. 
I did mention the two cons that really bothered me while working in it. While all of your points are correct, I personally don't find them as something that bothers me too much. The slow downs are really not that awful with our amount of dependencies (24s~), especially since they are fairly static for us. But the more you have the slower the lock. We also have much worse bottlenecks to focus on when it comes to CI time. With that said, I have never tried `pip-tools` and when I find the time, I'll explore them further. Thanks for your input!
Apologies for being that guy, but... https://youtu.be/P5Zwl8zCu6g
I tend to follow [this reasoning](https://glyph.twistedmatrix.com/2015/03/docker-deploy-double-dutch.html) : &gt; It’s true that in many cases, perhaps even most, simply installing stuff into the system Python with Pip works fine; however, for more elaborate applications, you may end up wanting to invoke a tool provided by your base container that is implemented in Python, but which requires dependencies managed by the host. By putting things into a virtualenv regardless, we keep the things set up by the base image’s package system tidily separated from the things our application is building, which means that there should be no unforseen interactions, regardless of how complex the application’s usage of Python might be.
Hey, lanemik, just a quick heads-up: **unforseen** is actually spelled **unforeseen**. You can remember it by **remember the e after the r**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
&gt; The difference is that you're building an application for a very specific environment (usually) that you often isolate in docker these days. It runs under a single python version and that's that. I know that is the popular thing to talk about right now, but that ignores entire categories of applications. Consumer GUI-based apps, on-premise applications (where docker isn't always feasible), CLI apps, and Windows environments are probably *not* using docker and aren't *really* targeted at a super specific environment. And those are just ones that I've personally worked with.
Hi Ned! Totally valid point. I'll send a PR to Pipenv as soon as I can to fix that. (I am recovering from travel, but will try to do it soon).
That seems reasonable to me as well. Pipfile and pipfile.lock are still experimental as far as I know. I think it definitely makes sense to formalize them as an interoperability spec before absorbing into pip or other tools.
I tend to follow [this reasoning](https://glyph.twistedmatrix.com/2015/03/docker-deploy-double-dutch.html) : &gt; It’s true that in many cases, perhaps even most, simply installing stuff into the system Python with Pip works fine; however, for more elaborate applications, you may end up wanting to invoke a tool provided by your base container that is implemented in Python, but which requires dependencies managed by the host. By putting things into a virtualenv regardless, we keep the things set up by the base image’s package system tidily separated from the things our application is building, which means that there should be no unforseen interactions, regardless of how complex the application’s usage of Python might be.
Hey, lanemik, just a quick heads-up: **unforseen** is actually spelled **unforeseen**. You can remember it by **remember the e after the r**. Have a nice day! ^^^^The ^^^^parent ^^^^commenter ^^^^can ^^^^reply ^^^^with ^^^^'delete' ^^^^to ^^^^delete ^^^^this ^^^^comment.
delete
delete
We won't be removing the "endorsement" of pipenv. That's a bit of a stone too far. We are happy to talk about poetry on packaging.python.org. Kenneth was extremely proactive with pipenv and honestly that's all it takes - this stuff is 100% volunteer based. Open an issue on packaging.python.org and let's talk about where we can fit poetry into our story.
 bash -c "$(curl -sL https://raw.githubusercontent.com/kalliope-project/kalliope/master/install/rpi_install_kalliope.sh)" [Really](https://www.idontplaydarts.com/2016/04/detecting-curl-pipe-bash-server-side/)? You should not ever recommend a user to curl -&gt; bash a file without reading it. If your library/package/whatever is in a trusted package manager (like this one is in PyPi), you should always use PyPi as the preferred way to install it. Otherwise, you should have the manually download the install script and only install it after **reading** it and looking for badness. Getting any one into the habit of running unknown scripts without giving them a once over is just instilling really bad habits. Other than that, awesome looking project!
This is valid, but I'm not sure that every update to packaging.python.org needs to be litigated to death via PEP. I think it definitely possible that pipenv's own description is a bit zealous. On the PyPA side of things we try to be a bit more conservative. I have so far not been involved in the writing of pipenv's documentation but I plan to review it and send PRs to make sure it aligns with packaging.python.org.
Kalliope is on Pypi too.
Thank you. We were reminded at [Sunday's PyCon keynote](https://youtu.be/tzFWz5fiVKU?t=49m23s) just how important kindness and respect is for the open source world to work, and that there are always real people on the receiving end of our bug reports and code reviews. 
That is my point. If it is in PyPi, why even have the bash command in there? I understand github is safe and you can see the file before you download it and all, but it is just teaching users really bad practices. Experienced users will look at it and go "that is a bad idea", but new users might actually execute it and think it is okay and next time they see someone telling them to the same thing they will just think it is okay because nothing bad happened when they did it for something like this.
Thanks for sharing! That’s a very good reasoning, (I totally forgot Glyph existed and I’ll now spend quite a while reading through his blog looking for what I’ve missed), but with Docker aiming for the smallest possible image is always a good thing. If your use case requires it (you are running system provided python tools from within your application), go ahead, better safe than sorry. But if you know that that’s not the case, you’d just be bloating the image. 
All the time. Such a boon to productivity.
It's just something that help a lot when you are dealing with noob which just installed a raspberry Pi and use Linux for the first time. You'll find this way of doing in a lot of Rpi project (like https://magicmirror.builders/). And, as the code is on Github, the user is safe like you said. Feel free to use the installation method of your choice :) 
The problem with `Pipfile` and `pipfile.lock` is that their status is unclear (at least, to me). On the one hand, they are not officially standardized. On the other hand, they are used by an officially recommended packaging tool. So, should we consider this format to be the new standard or not? Also, what should developers of alternative packaging tools do? Should they aim at supporting `Pipfile` and `pipfile.lock`? Or should they invent their own format as well? Another concern for me as a user is that if I start using `Pipfile` and `pipfile.lock` in my project then I will have to use `pipenv`. Migrating to another packaging tool won't be that simple anymore.
&gt; I have so far not been involved in the writing of pipenv's documentation but I plan to review it and send PRs to make sure it aligns with packaging.python.org. thank you! 
is there a moral to this story other than "be rude to open source maintainers, they deserve it"? I feel like there's a couple of times where he almost gets the point but insists on missing it by focusing on his right to complain about stuff.
Don’t think of it as applications vs libraries; think of it as hard requirements vs soft requirements. (Applications and libraries just happen to fit into these categories fairly often.) If I’m working on something that I intend for others to use alongside their projects (e.g., Flask-Security), it would be bad if I provided a set of hard requirements. My code has dependencies that may overlap with their projects, and forcing a specific version on them may not meet their needs. It also introduces the burden of needing to release a new version to upgrade dependencies. Providing soft requirements fits this model better. If I’m working on a project that is intended to be run (e.g., pypi.org), providing a set of soft requirements could be disastrous. My development, testing, staging, and production environments could all be running different versions of a library, making bugs rather hard to track down. I could provide my hard requirements in `setup.py` but there isn’t really tooling available to keep that up-to-date. Tools like `pip-compile` exist, though, to help update requirements files. tl;dr Can you do everything with `setup.py`? Sure. Is that the easy way? No. 
I do pretty much by default now. It's not perfect and can be cumbersome at times but I have found it doesn't impact readability while helping figuring our what a function takes. I don't use it on [variables yet](https://www.python.org/dev/peps/pep-0526/) however.
automating the boring stuff is pretty hands on for a book though.
I use Python frequently with openpyxl to export data to Excel for co-workers and have never had any problems. I found openpyxl works great and is very intuitive
My problem with the python ecosystem (and other programming ecosystems) is that there's lots of overlapping tools that vary only a little, but the variation creates headaches. This creates a giant [mess](https://xkcd.com/1987/). That is if you get familiar with some tools (say `pip` &amp; `virtualenv`), you don't want to have to also learn tons of slight variations that someone else may choose to use like `pipenv`, `virtualenvwrapper`, `venv`, `pew`, `pyenv`, `pyenv-virtualenv`, `pyenv-virtualenvwrapper`, `pipsi`, `conda`, etc. Python's core developers need to declare a winner as the standard people should use (even if it's not the best) and people need to move to that universal standard. Then they also need to make sure this winner is stable and accepted as a mainline python library/tool.
Just installed this over the weekend. Neat stuff. Having a little problem with responsiveness I'm trying to work out. But preliminary results are pretty promising.
get a book
I want to point out that good old `requirements.txt` supports locked versions with hashes as well, which `pip-tools` takes advantage of. This way, other developers don't need any special tools or new files, just the usual `pip install -r requirements.txt`. --- `requirements.in`: requests --- `requirements.txt`: certifi==2018.4.16 \ --hash=sha256:13e698f54293db9f89122b0581843a782ad0934a4fe0172d2a980ba77fc61bb7 \ --hash=sha256:9fa520c1bacfb634fa7af20a76bcbd3d5fb390481724c597da32c719a7dca4b0 \ # via requests chardet==3.0.4 \ --hash=sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae \ --hash=sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691 \ # via requests idna==2.6 \ --hash=sha256:2c6a5de3089009e3da7c5dde64a141dbc8551d5b7f6cf4ed7c2568d0cc520a8f \ --hash=sha256:8c7309c718f94b3a625cb648ace320157ad16ff131ae0af362c9f21b80ef6ec4 \ # via requests requests==2.18.4 \ --hash=sha256:6a1b267aa90cac58ac3a765d067950e7dbbf75b1da07e895d1f594193a40a38b \ --hash=sha256:9c443e7324ba5b85070c4a818ade28bfabedf16ea10206da1132edaa6dda237e urllib3==1.22 \ --hash=sha256:06330f386d6e4b195fbfc736b297f58c5a892e4440e54d294d7004e3a9bbea1b \ --hash=sha256:cc44da8e1145637334317feebd728bd869a35285b93cbb4cca2577da7e62db4f \ # via requests 
Oh i didnt know that was possible. Any reccomendations for stuff to use other than requests from python?
&gt; I've managed CI for a lot of different languages and tools for many years. Pipenv is the worst thing I encountered I'm going to call bullshit here. If this were true - *you* probably would have written something better, right? In fact, this whole diatribe seems awfully short sighted considering the "many years" of experience this person has. While I won't make the claim that I'm near as experienced as he is - I've used tools that are *far*, far worse. I suppose if anecdotal evidence without any real numbers, tests or figures presented is all we're going on... we could *all* rant like this about damn near anything. This was pointless, unconstructive, rude and ultimately useless as well. 
This was a really good talk about the human side of open source development. Of course everyone should know that they should be nice, but Brett did a good job of laying out examples and what the interactions look like from both sides.
Thanks for the tips, this was very useful. So if they dont use anything like a mouse movement tracker, i should be able to get by with requests, fake referer and headers that look like users? I’m not familiar with CSRF so not sure what to do there, will take a look at it tho
I would strongly encourage you to file bugs or communicate with the Conda team - you are exactly the kind of person that conda is targeting! If you have found bugs, you can help others avoid them.
Once upon a time I tried to make macros for Excel. After months of frustration, I found an xcl read/write library (xlrd iirc) and read everything into python, did my magic, and wrote out new output files. If I had tried pandas then, would have made my job even simpler instead of processing the file line by line.
Sebastian has also been very proactive with poetry and worked on it on a 100% volunteer basis, no? It honestly doesn't sit right with me that people can dismiss his hard work because it's not been officially endorsed.
That is not the meaning of intuitive. If it were, almost nothing could be classified as intuitive
I think its worth taking u/angellus point sincerely instead of dismissing it. Its a small point but a valuable one: security is a frame of mind and a surprising amount of best practice is done by peer pressure. Good luck with your project!
If only these people didn't advertise themselves as the next best thing to sliced bread, collecting undeserved fame, jobs, influence, and as consequence harming very large number of people and technology in general, I wouldn't mind them doing whatever projects they like.
Go build stuff. Stackoverflow when it doesn’t work the way you intend. 
That's fine. I do see cases where packaging the application in a virtualenv would make sense. Use whatever is necessary.
Why? Pipenv _is not_ a package manager. It's just some garbage wrapper for the actual package manager: pip. Pipenv is a useless program which doesn't need a substitute. There's no reason to replace it with anything.
Do you talk to people like this to their face? Honestly, I really hope if this is how you feel that you have the courage to speak like this to their face. Or at least to put your name with your comment and deanonymize yourself. I mean, I assume you realize that this was posted by the developer of Pipenv? And do you even think about the fact that he's reading what you've written? Do you not care about that?
I'm writing automation code for banking-related software, not package managers. My code has to use packaging software, but I don't write that directly. In my spare time? I wouldn't touch Python. It's not a language I'd like to spend efforts on... so why would I write a package manager for it? I have to use this garbage for work, and I think, that by alerting anyone who also has to use it in the same setting, I'm helping them. If you need some numbers, then I have some: Of all the Python code committed to all repositories owned by the company I work for over 60% is the diffs in `Pipenv.lock`. Essentially, our codebase is dedicated to preserving meaningless changes without distinction (this file doesn't store dependencies in any order, so it is possible to make absolutely no real change to it, while committing a 500 lines diff.) If the person who designed this format isn't a textbook definition of idiot, I don't know what is.
I'd like to thank everybody for keeping the discussion here constructive and to the point. I've edited some of the points raised here into the original article. Thanks you everybody for sharing!
I got taught the basics at university. I'm sure there's tons of books about it. You could try searching for the relevant chapters in operations research books for a less in-depth, more practical approach.
I got taught the basics at university. I'm sure there's tons of books about it. You could try searching for the relevant chapters in operations research books for a less in-depth, more practical approach.
Not really, it's Zed Shaw after all, you can't expect a lot more than incoherent rambling about stuff he doesn't understand. I just posted it because I don't like when people dismiss technical rants just because they are mean. There are a lot of stuff done by volunteers that are garbage, and we should still be able to criticize it even if they weren't paid for it. And the rants are done for free too!
Is automating the boring stuff *not* hands on? If not, just dream up some project and start. A game. Connect to an microcontroller or an RTLSDR. Make a home weather station. Change your desktop background periodically. Just today I wrote a script to take a bunch of heterogeneous documents (Word, PDF, text, etc) and put a common set of page numbers on them before printing so each recipient can refer to the same piece. Under 100 lines of code.
&gt; All of the volunteers in the PyPA are well are of that - we wouldn't need a working group or an extension of that if packaging were perfect! I think that what's difficult is that there is absolutely no solution that anyone has come up with that solves everyone's use case in Python. We're tried to be really careful to document the use cases and the tools that suit those cases. Honestly, it didn't sound like it at PyCon which had me concerned. I went to a presentation on packaging and it came across (probably not intended) as "see how much better things are then in the past? Therefore things are now great and you have no room to complain". I could see situations like this contributing to some of the hostility. When you have a problem and you feel like you are ignored or gaslighted, it can build up inside and bubble out.
I read the article and there are some valid points but it's probably not required. If you take the time to properly build your images, you're unlikely to run into any issues. However if you're strapped for time, a virtualenv would make sense if you also need applications/libraries from the OS's package manager whose dependencies may conflict with yours. That's a very rare case imo but it doesn't matter. Use whatever works for you, long as you know why you're using it.
I got it! Thanks for your help. I had to do this: driver.switch_to.frame(1) driver.find_element_by_id("servProvCode") The iframe didn't have an ID, so I had to guess the index.
Find a project, write out the problem and what you want to do. Google syntax + read docs. Early on, search StackOverflow but avoid asking a question unless you want to end up being crucified...sadly...
&gt; &gt; I just posted it because I don't like when people dismiss technical rants just because they are mean. There are a lot of stuff done by volunteers that are garbage, and we should still be able to criticize it even if they weren't paid for it. And the rants are done for free too! People also seem to think that because you haven't written an alternative, you can't provide criticism of something. 
Why would you need a virtualenv in a docker container? They are both doing the same thing if isolating dependencies. 
https://www.sciencealert.com/people-who-pick-up-grammar-mistakes-jerks-scientists-find Pretty sure it applies to spelling as well. 
It's not bad practice because the script can be malicious. Really, anything in the code can be malicious but nobody will read the entire thing. It's bad practice because of how Bash executes it, i.e. if the download fails, Bash executes incomplete commands. Of course it's highly unlikely that it'll happen these days, and it's easy to work around by wrapping everything in a function and calling it as the last command. Really, it's something that's just not pretty, nothing else.
&gt; If this were true - you probably would have written something better, right? "If you don't like it maybe you should do something better" isn't a valid criticism. OP's criticism may be abrasive but you don't even have a counterargument. &gt; I've used tools that are far, far worse. wait for it... &gt; I suppose if anecdotal evidence without any real numbers, tests or figures presented is all we're going on... we could all rant like this about damn near anything. So what's your point? If that's the depth of your criticism, why did you even bother? I happen to agree with OP. It's not shortsighted and there are very real, fundamental problems with Pipenv. We need deterministic builds. We need security in our dependencies. We _don't_ need bloatware foisted upon the community. We _don't_ need empty promises about solving dependency management that don't actually play out in practice.
https://github.com/PyCQA/pydocstyle - can be integrated into flake8 with flake8-docstrings For your second point you might need to write a flake8 plugin to detect variables without comments, if there isn't one already. Alternatively you can follow a better variable naming style, one that's expressive yet concise. Generally your docstring is there to describe the interface of the function/method, not to describe every variable that you might use within it. What about very short lifetime variables like `i`, `_` etc.? 
It's very much platform specific. What OS are you trying to work with here?
I know of Altair but I haven't used it. Jake is pretty approachable on Twitter so I would consider firing off a message to him and see if he has any suggestions. Generally if you're wanting to show plots in a PyQt application; pyqtgraph is what you want. That's what I use in [TimeView](https://github.com/j9ac9k/timeview). PyQtGraph is geared more for application graphing, whereas matplotlib is geared more toward publication quality plots. /u/agoose77 's suggestion of using the webview widget to show an altair plot is probably the best way to go about it, but keep in mind that Altair might just not be the right tool for your task.
in·tu·i·tive inˈt(y)o͞oədiv/ adjective using or based on what one feels to be true even without conscious reasoning; instinctive. 
Getting downvoted as much as possible for posting my Python application on r/algotrading and r/Forex
How's this for another definition of idiot: someone who complains and criticizes but contributes nothing but resentment and hard feelings.
&gt; Getting any one into the habit of running unknown scripts without giving them a once over is ...normal? A Windows user? :-) You're assuming the person doing the installing can read bash code. 
Sounds like something you would pay a developer for. Not necessarily a Python developer, either.
I've been using the following without issue: * setup.py, which describes the various *_requires() arguments * requirements.txt, the contents of which are a single period - . * setup.cfg, for tools/aliases * venv (python -m venv) * an 'activate' alias to activate the venv in my current project (just sources ${PWD}/.env/bin/activate if present) * `pip install -e .` - sets up local dev env, after activating venv Am I missing anything important by using this workflow? I can build out *dists using setup.py, run my tests, use pip, use private indices etc. Everything there is explicit and comes bundled with standard python distributions, rather than relying upon an opinionated, third-party tool.
I agree with the fact that the original comment was a very bad one. I just don't like the logic "you have to be constructive because it's made by volunteers".
Nearly any modern programming language could. Have you tried /r/jobbit?
Friends don't let friends curl | bash. ;)
Where does that executable come from? Do you download your software from sites like SourceForge and Github or directly from the developer? Or do you download them unknown sites you know nothing about? Downloading executables from the Internet and running them is all about the amount from trust from the source. If you do not know the source site and cannot find anyone that can vouch for it, do not download shit from it. Also, code signing is definitely a thing. If you are on Windows and you ever get that SmartScreen warning about an executable, it is because the code is unsigned. Many of the good developers will sign their code and Windows can recognize the code signer and it can verify its origin. If you are not on Windows, you usually use whatever package manager is on your system (hopefully) rather than installing directly from the Internet. That is also one of the main driving factors behind the Microsoft Store for Windows is to have a unified storefront distribution of software so you can have more confidence if the applications you are downloading and installing. 
I'll check it out 
Look into how to do system calls from assembly.
In fact I usually am now. virtualenv has a surprising effect sometimes with matplotlib because it's not installed as a framework.
Preprocessing a set of structured images for ocr. If everything goes well, I could move into training a classifier to help me make the OCR a bit more general purpose. Any thoughts on current classification implementations? I'm currently thinking on just using OpenCV's classifier, but I'm also considering using YOLO from darknet. Would this last one be a bit overkill? 
Just added a Docker option. Working very well. Thanks for the push to finish the docker option. 
+1
The dependencies are a property of the environment in which the application is going to run (at least that's how I see it). Therefore,you would have those dependencies built into the docker image itself. Distribution tools sounds like something you'd have in a container separate from the container hosting your application. Your container should have nothing else other than what is required for the application and the OS. Anything else should not be there or should not have any interaction with the application nor it's dependencies. 
I don't see an open issue, but it's definitely a known issue; it was one of the top feature requests in the open space at PyCon.
Using pandas and folium to make an interactive map to mark all diving incidents in the company I’m working in. It’s not really a big deal, it’s a pretty common practice but my firm uses Excel and that irks me to the core. 
In the JavaScript world, this is exactly why yarn was able to come into existence and provide a better experience than the incumbent (npm).
I didn't know that was a thing! Digging in, now.
I wish my company would allow me to use Python. Though I've found I dislike VBA less than I used to. The rationale for that decision was that nobody else knows Python. It's great that your company is more open. 
Thanks. Can you give some examples of these "windowing system's libraries", I don't quite understand what it means?
[https://github.com/kalliope-project/kalliope#credits](https://github.com/kalliope-project/kalliope#credits)
Yet this is how they teach it in schools by people who know nothing about how dangerous it is, or don't believe it. But ultimately the blame falls to Microsoft who failed to implement a trusted software repo for decades and what they have today is still only a partial solution with very heavy and unnecessary restrictions.
So... you trust the source of the code but you don't trust the developer who made the script with which you can download the source? Okay...
Try Flask - it should be sufficient and quite simple to use. You can host it e.g. on Python Anywhere. 
Google: Python Flask
any plan to support [kaldi](https://github.com/kaldi-asr/kaldi)? Maybe through [kaldi-gstreamer](https://github.com/alumae/kaldi-gstreamer-server)?
Sure thing! We've switched a number of projects over to pipenv and have found it to be quite useful so far.
I think it would make sense to create a special form of thread pool. This way, you create threads beforehand and keep running the same query that is located somewhere global (use mutexes). When handling a request via Flask, update the query in that object (use mutexes). Or I didn’t understand what you are trying to build.
On linux you'd use something like [xcb](https://xcb.freedesktop.org/) to talk to the X11 server. On windows you'd probably use the win32 API to talk to the OS. Both of those have python libraries floating around and I bet OsX has something similar going on. In the end though, especially if you care about cross platform, just pick a GUI library you like.
I must admit it is a bit useless competition for Python as all of the contenders but JS are compiled and statically typed languages, but I believe, it is still valuable to know how others are doing since Rust, Nim, and Go are getting popular among Python devs.
 I'm curious about what you install for a desktop development environment, aside from VSCode - for example, a terminal emulator. I've been held back from developing on Windows thanks to my annoyance with the standard command-prompt window - IIRC it doesn't support cut-and-paste as you'd expect, for example - but I admit I've never tried very hard to find good alternatives. Wish I could be there with you in Cleveland! Oh, wait, I AM. ha ha ha 
How does it feel to work with Python at Microsoft?
I'm so waiting for Python on Azure Functions... when? ;)
Actually a lot of work has gone into the shell on Windows thanks to the WSL team. So PowerShell and cmd now have proper colour support, etc. (e.g. WSL supports vt100 :) . IOW neither of us bother using any emulators as the included shell in the latest version of Windows 10 works well. Otherwise I use VS Code and Steve Dower uses Visual Studio (surprising no one ;) .
VS Code is awesome, as is the team who works on it! I've been an emacs user for many moons, but since joining and giving code a spin, I find myself reaching for it when I'm not working on the terminal. 
Thanks! We appreciate the compliment. :)
Glad you like it! Let us (esp. @brettsky) know if we can make it any better for you :)
Hi, Catherine! Thanks for your question. ☺ Most of my projects are focused on data science or machine learning \- which means I'm using Jupyter Notebooks on my Windows machine and on Data Science or Deep Learning Virtual Machines on Azure \(Ubuntu 16.04\). We also have something called the Windows Subsystem for Linux, which you might be interested in trying out: [https://docs.microsoft.com/en\-us/windows/wsl/install\-win10](https://docs.microsoft.com/en-us/windows/wsl/install-win10) 
I can't say a ton about it, but... [Imgur](https://i.imgur.com/NHKDZ4f.jpg)
&gt; Side note: You might want to post in /r/learnpython or /r/learnprogramming. If you have not done web programming before, this is going to be a significant amount of new stuff you have to learn. It's totally worth it, but it's more complex than just running a simple program. The reason: it involves multiple programs talking to each other. When you "view" a webpage in a browser, (say, `http://reddit.com/r/Python`) what actually happens is your browser (a program in its own right) connects to a different program running at an internet address (in this case, at `reddit.com`). It then asks for the content at the path, `/r/Python`. That program then figures out what page it actually is, what user you are, etc, and sends back the appropriate data (as HTML and other formats). Your browser takes that and turns it into something nice for you to see. Since the Reddit program "serves" this content to anyone who asks, it's called a "server". Similarly, your browser is a "client". Since you want to make your program accessible from a browser, you have to make a similar server. As others have recommended, [Flask](http://flask.pocoo.org/) is a good option for doing that with Python. With the basic Flask configuration, you can make a program that runs as a server, and it calls different functions depending on what path a browser requests. For example, if the browser requests `/home`, you can display your description of the project; if it requests `/get_word` you can generate and display a word; and if it requests `/add_word` you can show a form letting the user add a word (which makes the server write the new word to a file, or something). I suggest finding a tutorial that explains the finer points of putting something like that together using Flask. I should also note that, while accurate, my explanation above is the _absolute simplest way_ a webpage can work. More commonly, a complex webpage (like Reddit) loads using tens, if not hundreds of these back and forth communications with possibly multiple different servers, then continues to talk to servers as it's being used. The servers also use a wide variety of tools to store/retrieve data (like your Reddit posts), monitor traffic, manage access, and more. Welcome to the tip of the web iceberg. :)
how do i get a python job at microsoft?
What is a generally unnoticed part of your AI and ML toolset that you love and wish you'd see more people taking advantage of? 
The short answer? For personal attention email your resume to pythonjobs@microsoft.com The long answer -- search for `python` on http://careers.microsoft.com -- there are currently 653 results. Many of these are probably data science roles, but tons of other teams are hiring across the board.
Your argument with the user above seems to embody why I asked this question. Some people make python out to be the best while others seem to make it out to be something that is trying to fix what is bot broken. ****obviously different people have different needs so this is not apple to apple. 
r/learnpyrthon
For those of you here in Cleveland, we're chatting in person at a table outside of room 20. Stop by and say hi.
Maybe ask David Beazley himself to upload recording of his video lectures on YouTube or something.
Less of a process diagram (high-level), more of a sequence diagram (low-level) using `plantuml` == Diffie-Hellman == C &lt;-&gt; S: Agree publicly on `prime modulus`(PM) &amp; `generator`(G) C --&gt; C: Generate private random number (PRNI) C --&gt; C: Generate public random number (PRNS) = G&lt;sup&gt;PRNI&lt;/sup&gt;%PM) C --&gt; S: sends PRNS S --&gt; S: Generate private random number (PRNI) S --&gt; S: Generate public random number (PRNS) = G&lt;sup&gt;PRNI&lt;/sup&gt;%PM) S --&gt; C: sends PRNS C --&gt; C: Use Server PRNS&lt;sup&gt;PRNI&lt;/sup&gt;%PM to generate shared secret (SS) S --&gt; S: Use Client PRNS&lt;sup&gt;PRNI&lt;/sup&gt;%PM to generate shared secret (SS) I believe you can check out their code (google plantuml) which I believe uses graphviz (which has python library bindings) in Java. The code included is a single part of an SSH connection illustrated (low-level)
Does @microsoft have a similar tool to PyTorch or Tensorflow?
Python will get their with excel but even it doing t with xlsm has been a long time. Hell even VBA sucks from going from word to excel. It works fine with csv files and automate the boring stuff is a great resource for things like this. But if you are trying to do a super lot with python and excel you are currently limited
Yes an issue is opened for this one. Should be for the next release.
Are you thinking along the lines of CNTK? https://docs.microsoft.com/en-ca/cognitive-toolkit/
Yep! We have a deep learning framework called [Cognitive Toolkit \(CNTK\)](https://github.com/Microsoft/CNTK) that is similar to TensorFlow. It is also friendly with [Keras](http://keras.io), if you're using that product \(and you should be!\). Keras is such a beautiful API. 🤗 Feel obliged to say, though: you can use PyTorch and TensorFlow quite easily on our Deep Learning or Data Science Virtual Machines \- both are pre\-installed. You can use any deep learning framework you like on Azure. TensorFlow is also available to use on Azure Notebooks. \(I personally 💕 TensorFlow.\)
Rung 87, stand = LemonStand. Thats the only reference to LemonStand with what you gave us so... Yeah thats not defined yet. I have a feeling you didn't give us all the code though (thanks... why try to keep some hidden again?) and all of the functions are actually methods of class LemonStand? At that point you would need stand = LemonStand() for it to work Besides that, you are very verbose in areas you don't need to be. For instance, your code &gt; while True: try: price = int(input('How many cents will you charge for a cup of lemonade? (0-100) ')) if price in range(0, 101): break else: print('Please choose a number between 1 and 100') continue except ValueError: print('Please choose a number between 1 and 100.') continue My code for the same thing: &gt; price = int(input('How many cents will you charge for a cup of lemonade? (0-100) ')) while price not in range(0, 101): print('Please choose a number between 1 and 100') price = int(input('How many cents will you charge for a cup of lemonade? (0-100) '))
Rung 87, stand = LemonStand. Thats the only reference to LemonStand with what you gave us so... Yeah thats not defined yet. I have a feeling you didn't give us all the code though (thanks... why try to keep some hidden again?) and all of the functions are actually methods of class LemonStand? At that point you would need stand = LemonStand() for it to work
It's been a long time since I was using the virtualenv \+ pip workflow since I mostly use conda these days. However, I don't remember that virtualenv \+ pip wasn't painful back then \-\- also, what was particularly nice was that you could have the environment in the project folder \(which I actually sometimes prefer over conda\), since I like to tar.gz old projects and load them off to my NAS to save disk space on my main machine. Long story short, the reason why I started to use conda was that some packages were hard to install back then. However, isn't it already solved by pip wheels? I am genuinely curious why virtualenv \+ pip wheels seems to be problematic \(as a current conda user maybe thinking about switching back to this workflow\)? I am curious if there's something fundamentally broken with pip wheels and virtualenv that is not worthwhile fixing vs trying a clean start from scratch \(which is what pipenv probably is?\). 
Hi Brett! What's the current state of Pyjion? Do you think you and Dino will ever find the time to get a Linux build working? :) 
A package in PyPi had malicious code to steal your ssh keys just last week. While I agree with the sentiment of not running code without reviewing it, PyPi is not the answer and I’m sure we are all guilty of running libraries without vetting the entire code base. 
Dino is in the other room working on it right now. :) There's https://github.com/microsoft/pyjion/tree/linux with a Dockerfile that builds Pyjoin, but as Dino put it, "it's kind of crashy" at the moment and he's currently working to get the tests passing.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [microsoft/pyjion/.../**8eb47cee5a79a18cc69a91d2c492053486492e59** (linux → 8eb47ce)](https://github.com/microsoft/pyjion/tree/8eb47cee5a79a18cc69a91d2c492053486492e59) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dz18cmt.)
&gt; Distribution tools sounds like something you'd have in a container separate from the container hosting your application. You can't separate them because they are necessary to run your app This was more common for build part but multistage dockerfiles solved that. The point is that there might be 3rd party components that you need depending on python and having its own requirements. For example letsencrypt tools create their own virtualenv, and if you would create your app using it, you would need it to be separate from your app. &gt; Your container should have nothing else other than what is required for the application and the OS. Anything else should not be there or should not have any interaction with the application nor it's dependencies Those things meet those conditions, but anyway, this is wishful thinking. For example I looked at some machine learning examples from nvidia, and it comes with gigabytes of tools and data. If you spend few months you may figure out a way to stuff all that into python version and packages you use, but settings app virtualenv is simpler. 
Just a few hours ago: https://reddit.com/r/Python/comments/8jmjwh/the_ultimate_guide_to_data_classes_in_python_37/
&gt; The current state of python’s packaging is awful I disagree with that. Compare it to 10 years ago. We have wheels now. The bigger issue I see is lack what happens when you don't have a C compiler. I can download a wheel. It's hard to download something that's only source. Also, Anaconda is a thing, so just use that and problem solved.
So the main take away from this talk for me was the idea that *every interaction within open source should be conceptualised as a one off freely given gift. With people's responsibility being self-imposed*. The thing is that that's quite different from *be nice* or *maintainers do all of this work for you for free* important as these notions are. It also has some interesting implications: The following become reasonable under this framing: " &gt; Hey here's a bug. &lt; Give me this info &gt; No thanks. Too much effort. Peace. " " &gt; Have this really really really useful pull request that took me ages &lt; Make the following changes &gt; Woah man. That's not my bag. You do you, imma do me. Peace. " " &gt; Have this pull request &lt; Read the rules before submitting &gt; No man. I'm good. Do how the spirit moves you. Later Cuz" The other thing noticeable under this framing is it's kind of *zero power* / *zero reponsibilities*. In practice, maintainers *do have power*: * This list is where people decide what to fix. * This code case is the one that people don't break with their changes * This code will be good for your reputation I wonder whether these powers might lead people to place responsibilities on maintainers and whether this is reasonable. 
Not in the short term. What I'm really going to do is require a version and update it in a year or so. I don't need the cutting edge feature. Do you still have deprecation warnings in your code, so it's easy to upgrade?
Thanks, this'll get me started! :) I just need a window and that's probably enough for me, rest will be OpenGL stuff.
Pycharm is the IDE I like best for setting up Python virtual environments. The Pro version also sets up Django projects and that's a hobby project I'm working on so I took advantage of that subscription. Using GitKraken to familiarize yourself with git isn't a bad idea either, even if you're just a casual self-learner. Git is so important in any dev environment these days. Heck, you can't get a good job sometimes without an active github account.
weird. wonder why it the dup didn't pop up. thanks for the heads up. 
Could you also add PHP to that? Also, I'm pretty sure your Python Code can be optimized, which I'll try in a second.
 Honestly it comes down to preference. In the case of pure python applications, there's not much of a difference between the two. With letsencrypt, you can run the tools in the build environment, copy the output to your fresh deployment image and tell you app where to find it. Same thing with the machine learning scenario. Use whatever you and your team prefer.
Well if you want to support the big three you're best off using a GUI library, because otherwise you're maintaining 3 different code bases essentially. And you'll no doubt be wanting mouse and keyboard at some point too.
PHP is the language where I have never seen someone sane implementing data structures, but I have received a feedback from a friend of mine who did that and got x5 slowdown comparing to JS.
What ever happened to: `There should be one-- and preferably only one --obvious way to do it` Is there really an advantage to using this other than the default values? Is it faster? Smaller footprint? 
Good effort, but does not support all of the same functions, such as `wrap_socket()`.
You can do plenty of stuff in PHP, it has nothing to do with being sane (as a software developer I can definately not claim to be sane...). A x5 slowdown compared to JS would still put it in front of Python, interesting.
You probably meant ***DEFINITELY*** -not *definately* --------------------------------------- ^^^Beep *^^boop. ^^^I ^^^am ^^a* ^^bot ^^whose ^^^mission ^^is ^^to ^^^correct ^^your ^^^spelling. ^^This ^^^action ^^was ^^^performed ^^automatically. ^^Contact ^^^me ^^^if ^^I ^^^made ^^^A ^^mistake ^^or ^^^just ^^downvote ^^^^^^please ^^^^^don't
&gt; Well if you want to support the big three you're best off using a GUI library, because otherwise you're maintaining 3 different code bases essentially. Yeah I'm willing to have three implementations for my `Window` class or whatever. &gt; And you'll no doubt be wanting mouse and keyboard at some point too. Darn it. Do you know if there's any GUI toolkit that allows multiple window instances to be spawned, and that I could then draw OpenGL stuff on (either with separate OpenGL library or if the GUI toolkit has a built-in one)? Or should I ask a separate question here for that?
SDL2 should be able to do that. It's not really a GUI toolkit, but it handles windows and input for you. You'll have to look at something like [modernGL](https://github.com/cprogrammer1994/ModernGL) to then actually do openGL stuff in those windows. Keep in mind that you'll be having to translate a lot of C code to python when working with openGL like this. You'll want to find a SDL openGL tutorial and follow that until it starts talking about "creating a context" at which point you switch to the modernGL example code.
The idea is that you install the dependencies you need at their latest version and get your stuff working. Once that's good, you run `pipenv lock` and commit that lock file to git. From that point forward, you can be sure that installations will be pinned to the version in the lock file. Now for the magic part: It's 2 weeks later and you're updating/patching your project. You can just run `pipenv update` and all of your dependencies are updated. You run your tests to make sure things are ok &amp; fix what isn't, then lock again. Your deploys are always predictable, as they're based on your lock file while you can update your development environment at any time.
Huge thanks for all your help, I'll definitely look into SDL2 :) And that won't be an issue, I'm already familiar with C so nothing new there. Again, thanks for the help!
dude, don't phone this in, please update the project. :)
Thanks for the feedback \(I wrote this tutorial\). Technically you are right of course, but I chose to editorialize a little and rather focus on how data classes should be used :\) If one really wants to foo the bar, use metadata: @dataclasses class Foo: a: Any = field(metadata=...) b: Any = field(metadata="This param is used to foo the bar") c: Any = field(metadata=None if random.random() &gt; 0.3 else 'foo') This would support the same use cases, just pick the information from fields.metadata instead of \_\_annotations\_\_.
Why isn't JS a valid benchmark for competition?
I'm wincing at the &gt; x: int = field(default_factory=f) syntax which means only "self.x = f()" . They've turned everything into explicit function calls despite *most of the language* existing to give you a coherent syntax for expressing that. It's a bad lisp. This should have either been a third party library *or* a syntax with more motivation. 
[removed]
I've tried pipenv before and I really like the proof of concept, but it has too many issues when writing things that need to be executed as scripts, and issues installing custom folders/versions from web arvhives like Github.
There is no surprise there. PHP outperformes Python in most benchmarks. Well, PyPy can help sometimes, but overall, small-to-medium PHP websites work faster and use less RAM. Yet, due to the cumbersome syntax, I believe, it is hard to manage complexity of big PHP projects and they tend to slow down where Python-based sites can profile and optimize their bottlenecks.
Thanks for sharing :) 
Hitting the "Turn it on and see what blows up" phase of this reddit bot. It's nowhere near where I want it to be, but if keep waiting for it to be perfect, it'll never be finished. Gotta let it run and cause problems in a supervised mode so I can see what I need and what I need to fix. 
OK well is this code safe?
" Turtle graphics is a popular way for introducing programming to kids. It was part of the original Logo programming language developed by Wally Feurzig and Seymour Papert in 1966. " from Turtles Official Documentation https://docs.python.org/3.2/library/turtle.html 
Nice! How was this generated?
Install newer version of python from https://ius.io
Isn't it `attrs`? 
https://github.com/GitHubJohn2/Data-on-Disk
Ah sorry you're right, two cons I didn't take note of while reading because it was explained rather than in bullet point format! I just took a look through pip-tools docs again and it actually supports libraries too. Not too sure about multiple environments though, never needed to work on that scenario but there is a note on their docs which sounds relevant: &gt; If you use multiple Python versions, you can run pip-compile as py -X.Y -m piptools compile ... on Windows and pythonX.Y -m piptools compile ... on other systems. By the way, the offending library which blew out our requirements was "pyrax". Add it to your requirements and do "pipenv graph" to see how much it contributes to your lock times. The dependency tree is insane. The [dependencies for pyrax also contradicts itself](https://github.com/pycontribs/pyrax/issues/623#issuecomment-329647249) (causing issues with pbr) so you'll have to lock a bunch of its dependencies in Pipfile
So. This whole thing reminds me a *lot* of the state of web frameworks about a decade ago. There were and are a huge number of Python web frameworks. There were and are only a few that actually have large, thriving ecosystems and installed bases. But every time you so much as mentioned web development and Python, you'd be inundated by extremely angry people who wanted to know how you *dared* to not mention their preferred framework. Those threads could get pretty vicious. And it feels like this is what's happening now with packaging tools. And that's sad.
Automating my brewery to automatically download a recipe I haven chosen on a website and upload it to the arduino.
Hahaha. Im going to start reffering to a headset as audio hat from now on.
What other types do you believe exist that do what dataclasses do? 
I'd move the ordering after immutability. The index creation, if I understand it, won't work on mutable version of the class. Good tutorial/article though. Back to 2.7 :(
That's what the `repr` function is for. Take the result from `print(repr(data[key]))` and copy it into your new program. 
Any guide to python as total?
Ah thanks! Turns out I had that layout correct, I was assigning it wrong. I'll definitely use learnpython going forward. Thanks for helping regardless of my faux pas here!
it does quite a bit more than that. And I believe the impetus for including it in the standard library is so that modules in the standard library can use it 
Does this do all of the voice recognition locally? IIRC Jarvis does all of that in the cloud.
LearnXInYMinutes is as ever the fastest way to figure out a language when you already know another language
Look into win32com Basically let’s you do VBA through python. Refer to excel VBA for documentation. I use it all the time at work.
That's terrible and powerful at the same time. I hate that I love it.
The C++ people are fucking up Python just like they fucked up Visual Basic back in the day. 
There's attrs which inspired this and supports 2.7 
Fair point. I guess the `sort_index` works on the mutable version as long as you don't mutate it :P The correct way to implement `sort_index` on a mutable class is probably using a property. I haven't found explicit support for properties in data classes, but the following contortions seem to work @dataclass(order=True) class PlayingCard: @property def _sort_index(self): return RANKS.index(self.rank) * len(SUITS) + SUITS.index(self.suit) rank: str = field(compare=False) suit: str = field(compare=False) sort_index: int = field(init=False, repr=False, default=_sort_index) def __str__(self): return f'{self.suit}{self.rank}' I have to first define the property to avoid a name error when adding `_sort_index` as a default value. Since `sort_index` has a default value it needs to come after `rank` and `suit`. Therefore we also need to explicit about not using `rank` and `suit` in the comparison. But it works :D &gt;&gt;&gt; card = PlayingCard('3', '♠') &gt;&gt;&gt; card.sort_index 7 &gt;&gt;&gt; card.rank '3' &gt;&gt;&gt; card.rank = '5' &gt;&gt;&gt; card.sort_index 15 and &gt;&gt;&gt; Deck(sorted(make_french_deck())) Deck(♣2, ♦2, ♥2, ♠2, ♣3, ♦3, ♥3, ♠3, ♣4, ♦4, ♥4, ♠4, ♣5, ♦5, ♥5, ♠5, ♣6, ♦6, ♥6, ♠6, ♣7, ♦7, ♥7, ♠7, ♣8, ♦8, ♥8, ♠8, ♣9, ♦9, ♥9, ♠9, ♣10, ♦10, ♥10, ♠10, ♣J, ♦J, ♥J, ♠J, ♣Q, ♦Q, ♥Q, ♠Q, ♣K, ♦K, ♥K, ♠K, ♣A, ♦A, ♥A, ♠A) In this case it might be cleaner to just have the data class deal with rank and suit, implement sort_index as a regular property and deal with ordering yourself, maybe by using [functools.total_ordering](https://docs.python.org/library/functools.html#functools.total_ordering).
Raymond Hettinger's talk mentions SimpleNamespace. One thing I can think of is that SimpleNamespace isn't hashable. https://www.youtube.com/watch?v=T-TwcmT6Rcw ```python In [6]: hash(Card('10', 'Hearts')) --------------------------------------------------------------------------- TypeError Traceback (most recent call last) &lt;ipython-input...&gt; in &lt;module&gt;() ----&gt; 1 hash(Card('10', 'Hearts')) TypeError: unhashable type: 'Card' ```
So what do I do when I just want to update one package instead of all of them? Say it's for a security update for a package and we're not quite ready to upgrade to the latest release.
These look handy to me.
As wonderful as Fluent Python is, it is not a comparable book to Learn Python The Hard Way. The latter is for people who have never seen/used python/programming before.
Thanks! Watching the recording - wish I could’ve articulated some things way better but 5 mins is short...
I think he probably meant NamedTuples. It basically can pretty much do everything NamedTuple could, although I don't entirely agree with OPs sentiment, I think the goal is eventually to have data classes replace named tuples.
i cant read your post, please format your code properly. 
I'd like to think you're wrong, but you're probably right. Unless it's installable by the public, a web app is probably locked to a specific version. 
Do you have an office job? If so, use python. If you’re a student, try and get an internship that would allow you to use python. I think it’s hard to think up productive projects to work on outside of a job setting. I would look into building a web app using a computer in your house or your laptop. Just do localhost addressing. Install a database and try to make a web page with CRUD operations. Use Django or flask as you backend and see how far you can get with tutorials. It’s a lot of work, but it will pay off. Whenever you get stuck, imagine all the other people who probably started like you, who are quitting right at that moment. Don’t be that guy or girl if you really want to get something out of it. 
I'm familiar with 'editable' mode in pip. I figured it was a similar mechanism with pipenv, but I may have missed something. Does this synchronize 'install_requires' from setup.py with my Pipfile? 
Named tuples are immutable, dictionaries are... key-value stores, tuples are immutable and unnamed, classes are supposed to be data and the methods that operate on it. The new Python dataclasses are like Pascal records or C structs, which are not tuples or dictionaries. As regards classes, the other goal of dataclasses is to eliminate the Java-like scaffolding one must employ to use a class as a record/struct. Tuples are for holding a disparate collection of immutable data. Named tuples are a convenience on top of tuples. Dictionaries are supposed to be used as key-value stores, and classes are supposed to do something. Dataclasses are something else. Interestingly, the closest case one could make to supporting this idea that it's a duplication is to cite the one type you didn't name, SimpleNameSpace. The mailing list discussion for that one specifically talked about records/structs. Here Dataclasses are different because the attributes aren't created on the fly, there's type checking, the option of rich comparisons, etc. If there's one type though that could be removed now, it would be SimpleNamespace. 
&gt;While you need to add type hints in some form when using data classes, these types are not enforced at runtime. Explain this please. Why bother with the mandatory type hints at all?
https://matplotlib.org/ https://stackoverflow.com/questions/24525111/how-can-i-get-the-output-of-a-matplotlib-plot-as-an-svg#24535532
Anyone have the code? 
of course you can update one package
try to upgrade the package instead: pip2 install click --upgrade It could be misconfiguration. However, I think that message is due to pip detecting `click` is installed so it doesn't check if newer version is available. 
I mean, in an ideal world, every line I think deserves a comment. Either above or at the margin.
I curl | bash all the time and i’m fine, now about that one trick that doctors hate rhat can maje you 3 times bigger.
I actually didn;t know pip did that, good to know. I guess that answers your questions. I'm wondering if `pip install` was checking if `check` was installed and then providing that message or was it silently failing to the conflict. Hopefully it was the former and `--upgrade` actually does the checking.
I just know that it is possible to define custom headers for requests. Have a look at http://docs.python-requests.org/en/master/user/quickstart/#custom-headers
You can choose self hosted TTS and STT. Up to you.
I think standards are also different when you're critiquing corporate code and someone's open source volunteer work.
How about not being abusive because you should by default treat people like humans. 
If you are finding a best training institute for get python training in roorkee then you should join Cetpa Infotech Pvt. Ltd. This is the best institute for Python Training in Roorkee.
yo! just to answer your query, yes zulip does support SSO. I'm using it right now with GSuites and it's fantastic. it supports quite a few more if anything. Hell for me it's the otehr way around, i'll be deploying Discourse next! what industry you in if you don't mind me asking? i'm in education and want to consider the feasibility of using Google Classroom + Discourse instead of a "traditional" LMS.
Luckily there's already an API wrapper available for you: [discord.py](https://github.com/Rapptz/discord.py)
Yep I have 3 bots on the go, work just fine.
While I love the concept of pipenv, with the headaches it has caused me I don't feel it is currently mature enough to use in production: * [this argument](https://www.reddit.com/r/python/comments/8jfmv8/_/dz1vv6d) should be addressed, and I'd hope there is a way to replicate / read from the Pipfile[.lock] via setup.py. There's no reason that pipenv should be for applications and not libraries, because some tools function as both. Some *have* to function as both. * there are strange issues in regard to archive based installations. Attempting to install libraries directly from github have issues with naming in the Pipfile (from the last time I used it), it seems as if pipenv disregards the #egg= fragment. There are even more issues when installing specific subfolders of archives, like what is needed for fbthrift's python side (as an example). There also seem to be a few issues regarding git ssh urls. * pipenv instantiating the shell can slow down at random, and sometimes just locks up in a weird state between your main shell and the instantiated one. * there's no good "cancel" handling. Pip generally handles a ctrl c relatively well, but pipenv acts weird and sometimes just doesn't detect it until after it is too late. * worst of all, the dependency on click. I generally like click, however on Python3, click likes to complain from some of the places I use the most &gt; The biggest source of frustration is that Click scripts invoked by init systems (sysvinit, upstart, systemd, etc.), deployment tools (salt, puppet), or cron jobs (cron) will refuse to work unless a Unicode locale is exported. &gt; If Click encounters such an environment it will prevent further execution to force you to set a locale. This is done because Click cannot know about the state of the system once it’s invoked and restore the values before Python’s Unicode handling kicked in. And this leads to doing things that are normally just unnecessary in most code that I've worked with. I understand that the issue is with Python and the default locale assumptions, but I haven't yet dealt with a case where I was working with characters that I know would cause issues. I'm in the camp of "if it's a default in an system that I use, I shouldn't have to explicitly go against it when I have no problem with it". When dealing with more than a few init system confs/puppet/cron &amp; pipenv, I shouldn't have to add environment export statements to code that would otherwise work fine just because pipenv / click doesn't like it. The last part is really a minor gripe (even though it's the one I spoke of the most, it's just the one that came up most often). But the ones above it are the real dealbreakers for me.
Not that I've seen in my use of pipenv, and near the end there's a statement of "this tool is for applications, not for libraries", which I find a really poor argument.
Yes because we all get paid to do it hardest way possible... Time is not money for you I guess.
Do you have a question? If so, you might do better posting it in /r/learnpython.
Something from the list of resiurces in the sidebar?
(referring to your last sentence) this is exactly my sentiment!
Python doesn't have syntax to define class attributes without setting a default value unless you use variable annotations. 
/r/learnpython 
Sounds pythonic to me
With particular emphasis for OP on reading the library's documentation
Sorry about that... but I actually just want to make out what the difference between Elements and Resources when you use Develop\-\&gt;Show Page Source \(Safari\) ? I found that for some webpages they are the same, but for others they are not the same. For those don't, when I use **requests.get** method, the return is the Resources...but the Elements is what I want. Can those webpages whose Elements and Resources are different be dealt with Python?
oh, come on
I guess you can use [pyenv](https://github.com/pyenv/pyenv) to download, build and install a newer version of Python. Something along the lines of: ``` &gt; pyenv install 3.6.5 ... &gt; pyenv global 3.6.5 ```
I found a guide posted on this subreddit like 3 months ago that was really good
I'll go look, thanks!
This is more of a SQL issue than it's a Python issue. Try asking about the query in /r/PostgreSQL or one of the other Postgres subreddits. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/u_codevipr15] [Interactive browser based visualizations ! Some cool Python stuff !](https://www.reddit.com/r/u_CodeViPr15/comments/8jt9uh/interactive_browser_based_visualizations_some/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Data classes are meant to fill the role of data structures with no logic. 
Thanks Sir
&gt; I don't think anyone using pytbon has ever gone "you know we could really use a new data type". It is just a regular class with some convenient decorations.
I couldn't find the GraphQL talk in the official channel (Win back lovely API: GraphQL in Python by Keith Yang). Does anybody know something about it? It sounds very interesting
I watched Jake VanderPlas' [talk on Altair](https://www.youtube.com/watch?v=ms29ZPUKxbU) and was very impressed.
Do you know https://pypi.org/project/jq/?
No. Just seen it. But I think this package not contains actually querying. In my package I've kept query over Json like where caluse, aggrigate method, grouping, sorting etc.
dataclasses are not supposed to do run-time validation. attrs can do it.
[removed]
Of course it does. This package is a Python library for [jq](https://stedolan.github.io/jq/). &gt; jq is like sed for JSON data - you can use it to slice and filter and map and transform structured data with the same ease that sed, awk, grep and friends let you play with text.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://stedolan.github.io/jq/) - Previous text "jq" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
[removed]
This is more /r/learnpython. I'd suggest sorting by index (using `sorted`), grouping by the same (`itertools.groupby`) and mapping on each group to re-build the dicts summing the values. [ { 'index': k, 'value': str(sum(int(d['value']) for d in ds)) } for k, ds in groupby(sorted(l, key=lambda d: d['index']), lambda d: d['index']) ] 
I watched tutorials from thenewboston and sentdex on YouTube. I suggest to look at the "100 programs project" and make sure to find an easy one at first :D
Thanks. 
I haven't looked into it much but there seems to be something wrong with requests I don't know about? Can you fill me in here?
That's actually mentioned in the dataclass PEP: https://www.python.org/dev/peps/pep-0557/#why-not-just-use-attrs &gt; * attrs moves faster than could be accommodated if it were moved in to the standard library. &gt; * attrs supports additional features not being proposed here: validators, converters, metadata, etc. Data Classes makes a tradeoff to achieve simplicity by not implementing these features. &gt; For more discussion, see [why not just attrs on github](https://github.com/ericvsmith/dataclasses/issues/19).
Pipenv works on the assumption that if you have `="*"` in your `Pipfile`, then you want to have the latest of that package. If you *don't* want the latest, then you can either (a) edit the Pipfile to give a version number explicitly, or (b) use `pipenv install packagename==1.11` or whatever the version you want. It's there mostly to allow you to stop worrying about dependencies-of-dependencies, and let you *just* worry about the packages you want to control yourself. For example, here's the Pipfile for a project I work on: ``` [[source]] url = "https://pypi.python.org/simple" verify_ssl = true name = "pypi" [packages] bcrypt = "*" celery = "*" colour = "*" django = "&lt;2.0,&gt;=1.11" dj-database-url = "*" django-admin-rangefilter = "*" django-colorfield = "*" django-compressor = "==2.2" django-easy-pdf = "==0.2.0.dev1" django-encrypted-filefield = "*" django-extensions = "*" django-file-resubmit = "==0.5.1" django-filter = "*" django-iban = "*" django-import-export = "*" django-jet = "*" django-jsonfield = "==1.0.1" django-mathfilters = "*" django-model-utils = "*" django-polymorphic = "&lt;2.1,&gt;=2.0" django-storages = "==1.6.5" django-two-factor-auth = "==1.7.0" django-tigger = "*" django-user-sessions = "==1.6.0" django-watson = "==1.5.0" djangorestframework = "==3.7.7" factory-boy = "*" freezegun = "*" "geoip2" = "*" gunicorn = "*" ipython = "*" json-logging-py = "*" mailchimp = "==2.0.9" "markdown2" = "*" mt103 = "*" openpyxl = "*" "psycopg2-binary" = "*" python-dateutil = "*" python-dotenv = "*" python-magic = "*" pytz = "*" requests = "*" lxml = "*" "boto3" = "*" pillow = "*" opbeat = "*" raven = "*" [dev-packages] Werkzeug = {extras = ["watchdog"]} colormath = "==2.0.2" django-debug-toolbar = "*" pyflakes = "*" pylint = "*" pycodestyle = "*" pytest = "*" pytest-cov = "*" pytest-django = "*" pytest-env = "*" pytest-sugar = "*" pytest-xdist = "*" ``` Only packages I use directly are listed here, and I've pinned some of the versions because they can be problematic, I'm planning on dropping them and don't want to deal with their bullshit, or I just haven't gotten around to testing for changes. The real magic is in all of those `="*"` in there. Those are packages I just don't worry about that're always just updated.
It synchronizes it with your Pipfile.lock, yes. 
For my situation, I'll typically develop a library by using pipenv to create a project directly with a Pipfile in it, then do something like `pipenv install -e .`. From that point on, I'll be editing the `install_requires` in my setup.py file (no avoiding that, it's the package you're building after all) and then use pipenv to add packages I use only for development. Pipenv isn't supposed to replace all the possible ways we all might use Python, only to solve the common case of larger application development with a tonne of dependencies and different environments.
*"The right side returning a tuple of 2 elements which need to be unpacked and assigned" \-\-* this is not exactly true. `df['y'].apply(lambda x: operation(x))` \-\- this thing return pandas.Series, and in each row value of it is a tuple. Imho, the easiest way to do what you want \-\- is to do it separately: `import pandas as pd` `data = {'x': [1,2,3], 'y': [4,5,7]}` `df = pd.DataFrame(data)` `df['two'] = df['y'].apply(lambda x: x * 2)` `df['three'] = df['y'].apply(lambda x: x * 3)`
Or, you can do it like this, but i guess @masklinn version is faster and more elegant. new_list = [] for i,d in enumerate(l): if i == 0 : new_list.append(d.copy()) else: for d1 in new_list: found_it = False if d1['index'] == d['index']: d1['value'] = str(int(d1['value']) + int(d['value'])) found_it = True break if not found_it: new_list.append(d)
&gt; [ &gt; { &gt; 'index': k, &gt; 'value': str(sum(int(d['value']) for d in ds)) &gt; } &gt; for k, ds in groupby(sorted(l, key=lambda d: d['index']), lambda d: d['index']) &gt; ] That worked, thank you!
Well that was the question that was asked. You don't learn much using someone else's code. 
&gt; attrs can do it. so attrs does *more* than dataclasses.
Great. But documentation is confusing.But in my package , I keep everything little bit easier who knows sql query\(except join\). You can also read Json from file. 
yes, but can't validate PEP 526 annotations yet.
You can just use the official Python tutorial here: https://docs.python.org/3/tutorial/index.html
I do have an office job and i’m a “Cyber Analyst” but the job is very untechnical and involves only working with excel and pre-written SQL queries where I just copy and pasted software titles into the query to pull it out of a database. This is why i’m beginning to learn python with the ultimate goal of becoming a pen tester. Thank you! I really appreciate the suggestions and the motivation to not be the person who quits. I will definitely look into building a web app. 
Nice code @masklinn!
Are you talking about securing python itself or the python code you write? If python itself: http://www.pythonsecurity.org/ If the code you write: https://github.com/PyCQA/bandit
Then you can do similar like in suggestion you got here: `df[['two', 'three']] = df['y'].apply(lambda x: pd.Series({'two': x * 2, 'three': x * 3}))` Ofc, this'll look strange with 42 columns :\) Hope, it'll help.
The best other way is probably going to be the method using join you mentioned people had already suggested. Is there a reason this doesn’t work in your case? There may be other tricks baked into pandas to help in your specific case, but without knowledge of your exact problem it will be hard to point to them. I assume you aren’t just multiplying by 2 and 3 .....
I can simply put 42 columns in a list and in a variable name columns and then can do: df[columns] = df['y'].apply(lambda x: whatever function here)
If you mean securing third party packages- for enterprise they typically lock in specific versions that are manually reviewed, or you purchase tooling that does security reviews for you (ibm has this, forgot what it’s called though) Please clarify what exactly you’d like to secure - the scripts, the python executable, or libraries 
The best thing would actually to support alternatives based on Free Software instead of Discord, a proprietary platform that gathers massive amounts of user data and metadata to itself and its business partners.
I have 3 different cases which will generate 14 variables each time which will make it 42 different variables. Yes I can create different DataFrame and join \(But as of my requirement it will make it little bigger and uglier\). But then thought to explore a better way. 
I thought I knew decorator until I read this post.
Its funny
From the same author: - generators (yield): https://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do/231855#231855 - metaclasses: https://stackoverflow.com/questions/100003/what-are-metaclasses-in-python/6581949#6581949 The guy wants to write a book, so if an editor comes around, you know what do to...
Dang. Could you perhaps port the functions needed? I know that's not ideal. The only other suggestion I could give would be to build your own python version on CentOS7 from source and set it first in the path. It's been a while since I've used Centos (5 was the last one), but there may be a way to specify which python to use for particular apps.
No problem, feel free to ask if you run into problems again!
is it one of these? https://i.imgur.com/CwuKJeV.png
In the other camp, it also hides a very important requirement to understand python packaging to effectively use python in production. The first time that you encounter an error like the one that runtime error that occurs when you install arrow 0.12.1 using a platform that does not support [pep\-0508](https://www.python.org/dev/peps/pep-0508/) you will be happy that you were forced to understand how Python packaging works. That being said, we do need a very simple and straight-forward introduction to Python packaging somewhere that follows the introduction to tools like pipenv/flit. It took me years to understand Python packaging and I am insanely grateful to the hard work done by the Python Packaging Authority. I plan on contributing some "intermediate python packaging" documentation at some point.
Which makes my point....
`inputs['tens'][2]` will grab 30 from the "tens" key of inputs.
..moot? There is a demand for this type of thing so why would everyone need to carry around their own version?
Bigger and uglier in what way? The resulting dataframe will be the same size regardless. 
Mine is stuck in Javascript even though I specified Python in my user settings. How to I get python?
Is there a demand? Not one dev I have seen has wanted a new type of class to store data...
Sounds like you could interject some technology to reduce human error. Copying and pasting can be problematic. Also I see this as a manual process that may get to be too big at some point. Make sure to check out database interfaces (DBI) to use SQL statements in python scripts. I use postgresql module that comes with Anaconda. pscopg2 and peewee are popular. MySQL and other DBIs are available. “Automate the Boring Stuff”. import postgresql import pandas as pd from collections import namedtuple db = postgresql.open(“pg://user@host:port/database”) db.execute(‘create table foo (bar integer, baz text, bing bigint)’) # insert records... # Get records as array of tuples. I use namedtuples Record = namedtuple(‘Rec’,[‘bar’, ‘baz’, ‘bing’]) results = [Rec(*result) for result in db.query(‘select * from foo’)] # or use pandas df = pd.DataFrame(data=results, columns= [‘bar’, ‘baz’, ‘bing’]) May contain errors...copy and paste at your own peril. It’s mostly right though. 
Omg reddit formatting is making me want to kill a bitch
You're setting `x = [] ` *inside* the for loop, so it never gets to grow past one element before it's reset. You want to go this only once before the loop starts
It doesn't seem to work....
cool! I needed something like this!
[`attrs` does understand PEP 526 annotations](http://www.attrs.org/en/stable/examples.html#types) (yet), and dataclasses don't validate them either.
&gt; This way, other developers don't need any special tools Is pip-tools not a `special tool`? Don't you have to install it just as you would pipenv?
No one bothers with my [pundle](https://github.com/Deepwalker/pundler) thing that does not use `virtualenv` and supports `Pipfile` format as well as `requirements.txt` and will support `poetry` if it will gain popularity too, I think.
I feel like we're trending towards another "/r/python hates everything" thread- and like I've contributed to that - so let's derail that now. - If you are asking "should I use dataclasses or attrs", the answer is always attrs. - BUT *very many* people are not in that position, and dataclasses will be a big improvement for many of them. I strongly recomend that everyone in this thread go read Nick Coghlan's essay [Considering Python's Target Audience](https://www.curiousefficiency.org/posts/2017/10/considering-pythons-target-audience.html) - tldr, it's much bigger and more diverse than most of us imagine!
Ok, thank you. Unfortunately that doesn't help me understand exactly what is wrong with the code. I'm supposed to move more elements outside the loop, right?
&gt; Ultimately, the main audiences that CPython and the standard library specifically serve are those that, for whatever reason, aren't adequately served by the combination of a more limited standard library and the installation of explicitly declared third party dependencies from PyPI. &gt; To oversimplify the above review of different usage and deployment models even further, it's possible to summarise the single largest split in Python's user base as the one between those that are using Python as a scripting language for some environment of interest, and those that are using it as an application development language, where the eventual artifact that will be distributed is something other than the script that they're working on. &gt; ... &gt;This post isn't intended to claim that we never make incorrect decisions as part of the CPython development process - it's merely pointing out that the most reasonable reaction to seemingly nonsensical feature additions to the Python standard library is going to be "I'm not part of the intended target audience for that addition" rather than "I have no interest in that, so it must be a useless and pointless addition of no value to anyone".
[pydantic](https://github.com/samuelcolvin/pydantic) can do validation. Can be used in combination with attrs, if you turn off init in the decorator. ``` @attr.s(init=False, auto_attrs=True) ``` should work
Nice job! I know this isn’t really important but it might be good to work on the ui a bit. It seems a bit unorganized now, and a more clear layout might benefit the user experience. 
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/nfl] [Measuring Uncertainty in the NFL using the Bayesian Bootstrap](https://www.reddit.com/r/nfl/comments/8jv7lh/measuring_uncertainty_in_the_nfl_using_the/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Thank you so much! This is great
Are we looking at the same website? It's clean as fuck.
This is something I see people struggle with a lot when they first start learning actually. They look at open source projects and its not immediately clear what each file and folder is supposed to be doing. Great article!
Sorry, shoulda mentioned I meant about it being mobile responsive* I’m sure the site looks great on an actual computer it’s just unusable on a small screen. 
This is absolutely amazing!
This is amazing, but the preview of the page on mobile just says "dab" in big letters
Unfortunately this is a fundamental limitation that can't be overcome without a native app. I'll start work on a separate iOS/Android app eventually but time is pretty tight at the moment. Also, programming on a mobile keyboard is a massive pain. It's tolerable with Python but for every other language it's very challenging. I'll do my best.
e**dab**it \- It's how reddit scales images.
IMO at least you shouldn’t write the code you want to run when you run the file outside of `if ‘__name__’ == ‘__main__’`, and you should only wrap code in methods or classes. This allows you to run the file directly via `python file.py` *and* reuse the code you write on other files using `import file` (code inside the `if ‘__name__’ == ‘__main__’` block does not get executed when you import the file in other files). 
Oh right, thank you!
Well, did you dab?
I'm just starting to learn Python. Do I need to know some before jumping into this? Does this like teach you the basics or just get you to practice what you already know?
You didn't go into any description of the setup.py or requirements.txt files. Also, what's going on with all the files in the main directory?
Yes, it is, and yes I do, if I want to generate these locked `requirements.txt`s. But **other** developers on the project who want to install the dependencies don't need it, as the product is the usual `requirements.txt`, so they don't need pip-tools or understanding of new syntaxes to get going.
I liked the "dab" version better.
Ahh got ya.
Spend a week or two on basic Python syntax and then you'll be ready. Use the resources listed on each challenge to progress your understanding.
Very impressive library: https://youtu.be/OL3De8BAhME?t=25m16s However, I would like to have this functionality available and connected to standard logging. Perhaps a method that returns the debug string so I can pass it on to `log.debug` etc. would be nice. 
FYI: Some of the provided function and parameter names do not follow [PEP8](https://www.python.org/dev/peps/pep-0008/#function-and-variable-names) while others do. Would be cool if OP or somebody else could fix that.
*bleep blop* Just a reminder that: **oh, come on** is not a complete sentence and adds little to the discussion. In the future try expressing yourself with more description and clarity.
Great work, this looks awesome! I am learning Python myself and this seems to be very helpful. I've already registered!
It helps a lot, I thought I had posted in /r/learningpython but that's my mistake (I've switched the post over to hidden). I have one final clarifying question. When structuring a project, should I separate my classes out into files of their own and them import them when implementing a specific script? 
There's nothing inherently wrong with using requests; having requests as a requirement for a package just means that that package _can_ send information to the internet, and if you don't audit the code (honestly, no one but security researchers are doing this), you don't know what information from your code or system the package is sending, or to whom. (For example, compromised versions of ssh-decorate used requests to send ssh usernames, passwords, and keys to a remote server.) Along the same vein of "why does this flappy bird clone app need access to my camera?" it's not inherently wrong or not ok, but is a broad permission / ability that can easily be abused for bad things.
Do NOT click this link. This links to a twitter post with a short link to this bundle with a referral code and pre-selected charity. This is more spam and a reprehensible method at that.
How far into Learn Python did you get? That's one of the books I used when I was first learning, and I enjoyed it. I haven read Automate the Boring Stuff, so can't comment on it. I'd say if you got 1/4 or more of the way through Learn Python and still can't get into it, then maybe it just isn't book for you. No need to torture yourself.
Yeah, i read about 200 pages and don’t find intuitive (?). Maybe, once i finish automate the boring stuff with python I’ll give another try. 
&gt; When structuring a project, should I separate my classes out into files of their own and them import them when implementing a specific script? Yeah that is the usual structure (or at least what I typically use). The scripts are the parts that supply the data to the classes (by passing something specific into it, like a path or an URL or just some raw data). The classes are the abstract parts that have no real notion of concrete/specific data but just contain useful functionality to work with certain kinds of data. So now that you have a class that can run speedtest on something, you can use this in several places/scripts where you want to run the speedtest by just importing the class and supplying a path. Good luck with your project!
&gt; You cannot un-decorate a function. (There are hacks to create decorators that can be removed, but nobody uses them.) So once a function is decorated, it’s decorated for all the code. Starting in 3.4 (well, actually 3.3 but there was a bug that could clobber it) there's a `__wrapped__` you can dig into to get at the original of you need to. If everyone in the chain users wraps then it'll always be the original function. It's also kind of a bummer that wraps is presented late and as a debugging tool rather than its real purpose of preserving information about the underlying function. 
Good offer though. That's why i shared.
Jake Vanderplas is also just a really great presenter - he has a few other longer tutorials to other packages from previous pycons (I believe sklearn), I recommend those as well!
What extra files do you see? Almost all python packages have those files in the main directory.
This is beautiful in its simplicity
No, that's not how this works.
I did visit the site, which is why I commented on the UX. I watched the demo video and did a few challenges. But, yeah, my mistake on the language support -- this is post is in the **Python** sub and the title of the post says **for practicing Python**. &gt;Those websites/books are a dime a dozen. And I've tried *dozens* of them, most of them suck, which is why I was sharing the one that has been working for *me* personally. With all due respect, someone could easily say this kind of service is "a dime a dozen". [HackerRank](https://www.hackerrank.com/) and [GeeksforGeeks](https://www.geeksforgeeks.org/medium/python/) being the 2 most notable. I'm also a *heavy* user of Duolingo and I feel like the strongest aspects of their service are a) intuitive and fun UX and design and b) being able to start from **zero** knowledge of a language. So, that comparison felt a bit misleading to me. 
Everything is better when your employer pays for it :D 
This is a bit of an aside, but in my experience, after I've got the fundamentals down, the field is wide-open in terms of teaching myself with tutorials, programming problems, working with other people's code (from Github, for instance), and even just trying to build something myself. It's like that point you reach in learning a foreign language when you are able to converse with a native speaker and more or less become your own teacher. 
Thank you, that was very helpful and informative.
!isbot LightShadow
His goatee and darker hair makes him look like he's turning into a super villain. Here's an [older image](https://i.ytimg.com/vi/9zinZmE3Ogk/maxresdefault.jpg) for reference.
Very cool. Is there any way to change your display name? 
Yup, and it's a great way to learn how unit testing works!
Is this open sourced?
You wrote "a becomes b; b becomes a plus b", while you meant "a becomes b; b becomes (old value of a) plus b". So you have to save the old value: old_a = a a = b b = old_a + b Or even better, `a, b = b, a + b`
Formatting code on Reddit is done by putting four spaces in front of every line. In order to preserve indentation, you'll have to put four spaces for every line of indentation: print("There are four lines before the 'p' in this line of code") def test(): print("There are eight lines before the 'p' in this line of code") 
Awesome. Btw in the spanish version you are translating tinker to "toquetear" which in Spain means tinker but in Latin America means sexually groping.
It will be very difficult to land your first job without at least one of the following: Previous experience Established projects A degree Except specific government jobs, a degree is not typically required (and places anal enough to require one, you don't want to work at). Because really, anywhere worth working knows the only concern is your code talent. So you can showcase your code ability either through previous public or private projects. A rich Github account trumps a degree in most positions I'm familiar with.
Oh, I see. This takes the dependencies listed in setup.py and produces a Pipfile.lock. Hmm...this is kinda backwards from the use-case I was hoping for. It would be nice to be able to use pipenv while developing my library package and then take my dependencies from Pipfile and synchronize them into setup.py prior to upload. I wonder if I could rig something up using redbaron to update setup.py in this way
I don't really understand why that distinction is so significant in that conversation. When I'm developing a library my workflow is not significantly different than when I am developing an application. In fact, most of my libraries also include some helper scripts that are installed as entry points anyway, so in a way it is producing applications.
/r/learnpython 
While this is a nice start, I don't think it goes into enough detail about how to create the setup.py file or requirements.txt. Also, with how popular it is these days, a virtualenv implementation and setup.cfg/tox.ini should have been discussed as well. I still don't fully understand how those two work myself, does anyone have a good article/explanation on how to set those files up? I haven't worked in a big python project for around 5 years now, been in C#/dotNet land.
His understanding
Nice! Always happen when an author takes feedback well, looking forward to the update.
What was wrong with `attrs` exactly? Also mandatory type hints can DIAF.
Looks really nice. You made all this by yourself alone? What's the main language behind it?
Pdf.miner has that tool in its library. I believe the tool is pdf.split() and use regular expression to dictate where the split is.
Yes, by myself. JavaScript.
Wtf dude. No one owes him an income or goal satisfaction. They guys an asshole and some of the shit he says is so wrong that it's hard to imagine how he came up with it at all. There are better books and you shouldn't guilt trip people about a free book of all things. 
Thanks for this. I've been using it (mostly for JavaScript) since I saw it in a Quora answer some months ago. I think it's one of the best websites for practicing. 
no rude at all, thank you for the correction!
Thanks I had no idea. I'll point him towards this. 
Thank you - I actually just tried pdfminer.six and it worked! I appreciate it!
&gt; No one owes him an income or goal satisfaction. I'd agree with that. If you aren't the best for someone, they shouldn't buy you stuff. At the same time, I'm not sure if "you said nasty things once let's all boycott you" is a nice move. I suppose like a bit of middle ground between "die in the gutter" and "actions have no consequences", and I think that might be presenting the good and the bad at the same time. &gt; There are better books and you shouldn't guilt trip people about a free book of all things So I think there are better books for some people and people should feel free to use the best book... it's just having messages that very nearly say "let's boycott this guy" not just "is there something similar" but "this guy is terrible, what can be wall do instead" are a bit dangerous. I guess... I just always feel the villain needs someone to stand up for them in the face of a potentially baying mob. I suppose my opinion is sort of based on reading "So you've been publicly shamed" and the horrible story of people who have had their lives ruined from internet shaming. Also lots of episodes of black mirror!
So they’re familiar with Python already? I honestly found Wes’ book only marginally more helpful than the pandas documentation itself (which he also wrote). The docs have a “10 minutes to pandas” section and a cookbook section that are pretty good, and are kept up to date. [This video](http://youtu.be/F7sCL61Zqss) helped me a ton when I first started as well. It’s long, but he explains why things work the way they do pretty well.
I played around with json a bit, I think it takes away from the game if you can open up the save file and give yourself as many points as you want.
I suppose. JSON is super useful to \_you\_ while you develop. Optimizing for a future problem isn't really worth your time \_now\_ though. Just plan for encrypting the data later \(i.e. wrap your load and dump functionality with an API that can later load and dump to a different format\).
I wouldn't. I also didn't find it intuitive when I first started playing with Python nor after I was familiar with Python. 
In case anybody wants the direct link to the answer instead of the gist, [here it is](https://stackoverflow.com/a/1594484/646543).
ok, but why are we still presenting things in python 2?
Do those workstations have a c/c++/c# compiler or use a scripting language like matlab? Do you restrict what facilities (access to network shares, using sockets) users of other programming languages can access?
It does setup.py --&gt; pipfile, but does it do pipfile --&gt; setup.py?
[Yup](https://www.reddit.com/r/python/comments/8jfmv8/_/dz26psd), literally feel the same way.
http://docs.python-requests.org/en/master/
Because it was written in October of 2009.
What do you mean by "site"? Is this a forum? An online resume? A dataset? A game? How much traffic do you anticipate? How much will be static content delivery, and how much will be computed/produced on the fly for each client/request? 
I love the idea, however I feel usability could be much better on mobile. I would love to use this on my commute, but this way it's quite hard. Thanks for the great tool though, maybe it'll still help me practice when I'm at home. 
It's on the [roadmap](https://edabit.com/roadmap). I'm trying really hard, promise.
Use a better app then lol, I see the entire text on mobile with rif
&gt; eDab IT
My mistake. I misread: example/__init__.py example/mainprog.py example/addlprog.py I'm used to seeing it like: README.rst LICENSE setup.py requirements.txt example/ __init__.py mainprog.py addlprog.py 
Thanks for the heads up, I felt I was in a bit of a gray between the two threads which probably should have been the indicator for me. I'll check it out! Definitely sounds fairly hands off and that is exactly what I'm looking for.
Hey, I'm not trying to be rude, it didn't help to put x = [] outside the loop, so I just assumed I don't quite understand what you're suggesting.
The problem is strong that the fabric library I used is too new. I have to run `sudo pip install fabric==1.4.1` to solve it.
So far I'm really liking it! Good on you for putting so much hard into a learning tool like this!
&gt;I guess... I just always feel the villain needs someone to stand up for them in the face of a potentially baying mob. I suppose my opinion is sort of based on reading "So you've been publicly shamed" and the horrible stories of people who have had their lives ruined from internet shaming. Also lots of episodes of black mirror! \*hugs\*
My initial motivation was simply to begin gaining some frontend/backend experience and expanding my knowledge of python beyond what I'm accustomed to, so nothing particularly flashy to be honest. To that end, I envision something that is more or less a playground \(blog if that term suits you, I don't like the connotation\) for writing simple pieces to sharing reports/results that I've generated in my analyses. You can now likely infer the amount of traffic I'm expecting so I won't belabor that point.
&gt;First of all Kenneth Reitz maintains a number of other &gt; &gt;really important &gt; &gt; parts of the python ecosystem. To act like he is intentionally building bad software is absurd! 1. Past performance is not an indication of quality in the future. 2. #notmypythonecosystem 
This is quite a huge release of pandas, which you can see by the sheer length of the release document and contains lots of improvements and bug fixes. Lastly, notice the decision to drop Python2 support by end of the year, which I think is a great decision as it helps towards standardize Python on a single version again.
Nice job!
Wrong sub. You were doubling it. def fib(n): a, b = 0, 1 while a &lt; n: print(a) a, b = b, a + b fib(10)
Yup, it's on the [roadmap](https://edabit.com/roadmap) and will be released soon!
Sure, Pundle to the moon!
I can't stress enough how much I love the requests module for this very task. The documentation is clear, there are plenty of examples of how it can be used, and it's pretty forgiving in general. 
pygal hasn't released a version compatible with python 3.6 yet. At least according to pygal.org. 
Thanks!
Why would you want to do that? pipenvlib could be used for that, but that'd be pretty dumb.
Thanks, i'll check it out.
&gt;You can implement any of those things to existing datasets and there &gt;would be no difference. You can implement lots of things in Python from low-level objects but that doesn't mean we don't add them. You could say the same thing about default dicts, for instance. But if everyone is implementing the same thing over and over, isn't that the exact situation that calls for something to be added to the system libraries? &gt;I don't think anyone using pytbon has ever gone "you know we could really &gt;use a new data type". Huh? We've added ordered dicts, default dicts, frozen sets, named tuples, SimpleNameSpace, the Path object, and so many more over the history of Python. As for me, when I discovered Python at the end of 2012, I asked right away "How do I make a record?" and discovered there wasn't a record/struct type. &gt;Just seems so unnecessary. Implement it as a side library but now you &gt;just made the language more complex without true purpose The dataclass decorator takes complexity *out* of the language! By using it you avoid the boilierplate of a large number of assignments in an __init__ method, creating a __repr__ method, possibly multiple comparison methods, etc. As the summary on Raymond Hettinger's Pycon talk on dataclasses put it: &gt; It will become an essential part of every Python programmer's toolkit. &gt;...Dataclasses are shown to be the next step in a progression of data &gt;aggregation tools: tuple, dict, simple class, bunch recipe, named tuples, &gt;records, attrs, and then dataclasses. Each builds upon the one that came &gt;before, adding expressiveness at the expense of complexity. &gt; &gt;Dataclasses are unique in that they let you selectively turn-on or turn-off &gt;its various capabilities and it lets the user choose the underlying data &gt;store (either instance dictionary, instance slots, or an inherited base &gt;class).
Awesome stuff, I love it!! @memystic: Just one thing, in the language tab it's called "Deutsch", not "Deutsche".
How about an interpreter for something like forth. That should be sufficiently complex and also give you scope to learn some interesting concepts.
That's entirely possible. I am pretty new to publishing packages to pypi. Could you possibly direct me to some reading to illuminate how my approach is wrong? 
setup.py is currently the authoritative source of truth for your package's dependencies. it should not be dynamically generated.
Try saving the excel file as a CSV, then importing the CSV and using python to create a new list containing the outputs based upon the XYZ criteria. I don't have much time to add more, but search python CSV parsing in google and it should help out! 
Does your script look exactly as you have posted it? If so, then you forgot to indent the lines after "def onclick():"
I'm going to cc /u/dusktreader cause I think he has my same thought process....and apologies in advance for the walls of text I seem to be writing recently. Pipfiles are supposed to be the replacement to requirements.txt files. * *pip* can not (currently) install from Pipfiles. * *pip* can install from requirements.txt files. * *pipenv* can install from Pipfiles. * *pipenv* can install from requirements.txt files. Which one is different than the others? I would want dual way sync with install\_requires because I would rather have that information in my setup.py (as I've seen multiple packages do, having paxkages both in a requirements.txt and an install\_requires argument-- is this a bad practice? Is the fact that I am relatively commonly seeing this concerning in the sense that people shouldn't be doing this?), than to have a pipfile, a pipfile.lock, and then a third requirements.txt metadata document. Basically while explained as an alternative and the way forward from requirements.txt Pipfiles are not a suitable replacement just yet because arguably for all the benefits it also pollutes the directory. Once pip can (which it supposedly eventually will) be able to read from Pipfiles, then it is a suitable replacement. And if the practice that I mentioned is indeed not a horrible one, then for the sake of just having less *manual* duplication it would be nice if I could do something like `pipenv [install|dev|extras]_require[s]_stanza` which would output to stdout for clean cut copy paste into my setup.py. I know in your talk you said pipenv is for applications and not libraries...but I don't like that argument because it's absolutely arbitrary. In python, applications can be extremely thin wrappers over libraries or specific entry points within a library. And either way, I might be sharing my application via PyPI, either because of what I just mentioned, or even if it's a standalone application with no proper library support, well, PyPI is the single trusted place to distribute python source code.
Are you looking to write the classifications back into the spreadsheet, or just save the classifications somewhere else?
I agree that people can experience the "foggy bridge" when learning to program. In textbooks that is sometimes the problem, they give you a lot of pseudo-code and explain the syntax or structure of a language in a very technical way, then ask you to complete some problem that seems like a huge leap from the explanation. But you didn't even mention the many resources that exist for the problem-solving step of the journey or how this service is significantly better than those. After someone can do things like write conditionals, loops, make classes, write functions, etc then they can very easily move onto challenges on HackerRank and GeeksforGeeks (and many more). Or following tutorials and then building on what you learned from it. Have you ever used any online services for learning programming? Which did you use? In my experience, they are not *just* syntax, you are actually writing programs. What I did was take the code from the lessons and then started to add to them on my own computer piecing different things together by drawing from tutorials and other online resources. 
It's interesting to see how experience work one language influences the use of another. After doing C# for a while at work, I've been using type annotations more and exploring DI frameworks in Python. When I started playing with Rust, both Python and C# have influenced that - I haven't used Rust enough for it to start feeding back into the other two. &gt; In Python we have marshaling libraries like marshmallow that can help with the validation, but they require that you define the format of your data twice. [I wrote a lib to help with this](https://github.com/justanr/marshmallow-annotations). Wasn't aware of Pydantic, but my kneejerk reaction is that tying a class and it's parsing together like that is iffy at best. 
Not necessarily, it depends on what versions your internal index and PyPI have: https://github.com/pypa/pip/issues/3454 Pipenv also has this problem (because it uses the same mechanism as pip), but with Pipfile there is a possibility this could be solved (more expressiveness in TOML) if we can come up with the right syntax.
3500 rows is not huge for Python. The problem is that you are searching back through it for each row, which results in 3500 squared lookups. You need to use a dictionary or something. 
Dude! Are there unit tests for self awareness? :P
3500 rows isn’t huge, but it might seem like it using the method you’ve started with. I echo the suggestion to export as CSV and process it using the CSV reader, A recent task at work sifting through 2 million rows went reasonably quickly with the CSV approach. Dealing with it in Excel format adds overhead and inefficiency. 
I would look at pandas. Pd.read_excel() and df.to _excel() are your friend. 
Hey, there's any chance of seeing this in the future on a Android app? It's just amazing. Thanks for the sharing!
I can only sort by Easiest, Most Recent, and Hardest, anyway to sort by Medium?
Are you sure that you have the correct path and the correct file name? If you go into the same directory as the .xlsx file you are trying to read and type the following in the command line: pwd do you see /Users/eduardoirizarry/Desktop/ER_dataset.xlsx ? Take a look at my workflow here: https://imgur.com/a/ZDg2py1 'testing reading the workbook' is in cell A1 It seems that you are passing in an incorrect path or the filename in the path you are passing is not correct. Let me know if you have any further questions
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/DXwZBVk.png** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) ^^| ^^[deletthis](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=delet%20this&amp;message=delet%20this%20dz41eds) 
Yes, this can be done with a find(search()) function in excel
I tried using &gt;&gt;IF(E2='open', "what it writes if yes", "what it writes if no") but it didn't mark any of them because the cells have short-hand patient diagnoses, not simple entries like "open" (i'm the sorry son of a b**** who's supposed to simplify the data) 
&gt; if(search('open',E2)&gt;=1,' this roughly translates to "if open is found in the cell more than once" ? 
The search formula looks to see if the searched word is in the cell, then tells you where it is if it's in there. So this says 'if the location of open is character 1 or higher, then return true'. Technically I think it will return an error if it's not in there but I'm not at a computer to iron out the formula. 
it's going to take me more than 5 hours to go through it 'by hand' (i have to process multiple columns) I can export it as a CSV doc and was able to properly load it a few minutes ago when I tried on my PC (dafuq is iOS doing with it's file naming system, jesus christ) do you happen to know what kind of commands I can use to make the outputs based on a criteria WITHIN the cell? i'm dealing with raw data, so the input is nowhere near uniform (that's my job) 
Acutally the Excel stuff in Automate the Boring Stuff is out of date at the moment and no longer works. If you are specifically looking for excel information for Python and that only I would go a different route on Udemy or something.
https://exceljet.net/formula/cell-contains-specific-text Are you trying to do this?
Use the pandas package. Probably want to d/l the anaconda distribution first.
I'm really really tired of reading people's opinion's about this. If I wanted feedback, I'd ask for it. Use pip, please stop overwhelming me with information.
Neat
You're amazing and I love you so much for giving me such a great platform to practice!
Also pressing TAB makes 2 whitespaces instead of 4.
This is an extremely childish response to a completely valid argument. As an author and maintainer of pipenv, you will get feedback on the tool you created and the standards you advocate, whether you like it or not. This does not promote a community around the tool you created, and it is definitely not one I want to participate in if this is the response that is expected of high level maintainers and contributors. You could have easily have said it was out of scope or an unjustified request, yet instead you seem to chose to say "I'm doing this my way or the highway, everyone else is beneath me and can fuck off". I am extremely appaled by your actions and have officially lost all respect for the pipenv project.
Awesome, thanks a ton!
Just giving it a try on my phone, really great concept, but it is a bit buggy with mobile keyboard input. Might want to do some QA on the code fields on the mobile side.
Start coding. Pick a project you are interested in and when you get stuck work the problem for a little bit and if you are still stuck, Look it up online and keep going and learning. Think of new things you could add or different ways you could approach existing features and implement them. Something breaks? Fix it. 
Dropping Python2 support? But what about that string thing that people are always wanking on about but nobody really cares about?
Help LibreOffice: https://www.reddit.com/r/Python/comments/8htykb/helping_libreoffice_in_python/
Consider helping a real project: https://www.reddit.com/r/Python/comments/8htykb/helping_libreoffice_in_python/ https://bugs.documentfoundation.org/show_bug.cgi?id=117573
My virtual environments are all stored in `~/.virtualenvs`. I use [virtualenvwrapper](https://virtualenvwrapper.readthedocs.io/en/latest/) to manage them.
A very wide guess, but some sites consider you being logged if your HTTP client has a certain session cookie set. Perhaps you can investigate that and manually import the cookie into your Python HTTP implementation.
r/learnprogramming r/learnpython Read subreddit sidebars
Have you done *exactly* what /u/thescottwaud suggests? I've lost count of how many times something I knew to be true was not so. Statements like "I know the path is 'correct'" without stating **why** you know the path is correct don't help us understand the problem. Especially when you say things like "i'm clearly formatting it incorrectly." which is a red herring. From what we've seen your path is fine in it's form, it just appears not to be a valid path. So again, do what /u/thescottwaud or I suggested and we will either show the path is incorrect or it's OK and then we can go onto the next problem.
It's a security concern, I get it, but: 1. I only `sudo pip install` packages that I know and I need system-wide. 2. Some packages are required by other softwares. This is especially true for Linux. In fact some pip packages are installed by apt directly. 3. You can't really tell someone to not to `sudo apt`. However when installing pip packages for Python development, it's still a good habit to separate environment for each project, and install stuff under a virtual environment.
I just keep my git repo *under* the venv... Better folder structure than your solution.
/r/learnpython is more suitable for questions like this. If you read the backtrace you will see the error: File "foo.py", line 7, in cal1 wala=we*woc(wa-woc) TypeError: 'int' object is not callable It seems you are missing an operator between woc and (wa-woc).
Hey /u/aphoenix, while this isn't the usual hot garbage article * boostlog io disabled their account pages soon after I did my sluething * this reddit account is a month old and a boostlog spam redirect just so happens fo be the only post * the author of the post seems legitimate, however they haven't been active on Twitter since December and have been minimally active on github (even considering private repos) so this may or may not be a case of boostlog io full identity theft
Not sure what exactly this means. Can you please explain? &gt;&gt;&gt; a, b, *(c, *[d, *(e, *()), f], g), h, i, (), = *range(9), [], File "&lt;stdin&gt;", line 1 a, b, *(c, *[d, *(e, *()), f], g), h, i, (), = *range(9), [], ^ SyntaxError: invalid syntax 
It's on the [roadmap](https://edabit.com/roadmap) and already working in the dev build. Should be live in a few days!
If you're registered, click your avatar and then hit "Settings" and go into the "Editor" tab. You'll be able to set how many spaces a tab is in there.
what's the problem man? Do you eat marijuana? Fuck you. You are big scammer.Why do you glaze?
Well that's nice. Once you've graduated we'll have to not pay you for your work, either.
What the hell is going on
- `.assign()` accepts dependent arguments - Merging on a combination of columns and index levels - `mod` (%) and `divmod` operations are now defined on Timedelta objects Those are terrific changes.
https://openpyxl.readthedocs.io/en/2.5/pandas.html df = DataFrame(ws.values) 2seconds on google
It ought to suggest using pipsi.
I think it's not a hard question at all. There is couple of options lying on the surface. 1. Just code some authorization process in your scraper. You don't need to know anything about web protocols, you just have to code the script that would be types your login and password in inputs and click auth button, than you wait and open a required url. 2. Even simplier. You just create a new profile for you chrome browser. All the cookies and chrome extension would be store in that profile. Just open chrome with --user-data-dir=/path/to/profile parameter and sign up. Then you just add option to your web driver. Somethine like that: options = webdriver.ChromeOptions() options.add_argument("user-data-dir=%s" % profile_path) return webdriver.Chrome('./chromedriver', chrome_options=options) I hope this would help. Have a nice day! ps: sorry for my english. 
pipenv ftw
SQLite is fine. Use an ORM if you can, so you can switch to a more powerful DBMS later if need be.
Have you tried writing it out in mathematical terms? value - value*percent = new_value or value*(1 - percent) = new_value aka def myfunc(value): return value*(1 - random.random()) This will always return a real number. I'll leave an integer only solution up to you but I can already tell you random.randint() does not work with decimals like you have.
Which version of python are you using? Are you using Python2? It works in python3.6 for example. It's roughly an extreme use of iterable unpacking syntax introduced in python 3.0 and above. See [PEP-3132](https://www.python.org/dev/peps/pep-3132/)
SQLAlchemy + SQLite should suffice for a small offline application. It is much better than writing a helper class for raw SQLite query, which is very error-prone. 
&gt;Never forget. Don't be a sheep. Trust no one. Well *I* don't trust pyenv and virtualenv. Checkmate annotation enthusiats.
SQLlite is good for small projects. I like Mongodb also.
Just found this, and I think it looks cool and very useful! I quickly hacked together something similar for a project, but it's not nearly as well thought out or thorough as this (and shamefully has zero tests). I'm thinking I might pull this into my project in the very near future to handle complex configurations for scientific simulations. Haters gonna hate! Don't let them bring you down man, nice work!
Why would you do that?
Are you sure you want to leave critical functions shown? Like maybe phpinfo and exec on your site?
I don't think it is ideal to have to configure our Gmail account to be less secure, disable 2FA and spread our login credentials all over the codebase. Why not just mail with regular mail? Or use something like https://sentry.io instead.
That's a really good introduction to decorators. I'd make a few additions: decorators are even more flexible than that. 1\. Decorators don't have to return functions. In Py3, you can use `print` as a decorator, and it does what you'd expect: prints the function and replaces it with None (what `print` always returns). [click](https://github.com/pallets/click) is a good example of this - the `group()` decorator returns a Group object, which has `command` and `group` methods (used as decorators) to add subcommands. 2\. Decorators don't have to take functions. They're just functions - you can pass whatever you want to them. With my `print` example: @foo @print def my_func(): ... `foo` is going to get passed `None`, because the return value is of each decorator is passed directly to the decorator above it. This is useful with #1, and click shows it again - see [the `option` decorator](https://github.com/pallets/click/blob/master/click/decorators.py#L156) and the `_param_memo` function it uses on line 130. `_param_memo` checks if the passed "function" is a click Command, and if so, adds the option directly; otherwise, it adds an attribute `__click_params__` to the function, which the `command()` decorator uses later. 3\. You can decorate classes. I don't have a good example of this in the wild handy, but here's a quick example: &gt;&gt;&gt; @print ... class Foo: ... pass ... &lt;class '__main__.Foo'&gt; &gt;&gt;&gt; print(Foo) # Just to show #1 works - print returns None, so Foo is None None &gt;&gt;&gt; 4\. Classes can be used as decorators. Not just classes - anything callable (so for user-defined classes, anything with a `__call__` method). [Here](https://stackoverflow.com/q/10294014) is a question with an example for simple uses of decorators - `__new__`/`__init__` get passed the function to be decorated, and `__call__` is the wrapper. You can even take it one level higher, for the decorator-with-arguments case; `__new__`/`__init__` are passed the arguments to the decorator and `__call__` is passed the function to be decorated (so `__call__` returns the wrapped function). The primary use-case I've seen for classes as decorators is to prevent the functions-in-functions-in-functions you end up with using the normal approach, so just for fun, I'll do it with no nested functions at all. class decorator_maker_with_arguments: def __init__(self, decorator_arg1, decorator_arg2): # This is the first stage, the decorator factory. The object returned from the factory, the # instance of decorator_maker_with_arguments, will be called and passed the function. print('I make decorators! And I accept arguments:', decorator_arg1, decorator_arg2) self.decorator_arg1 = decorator_arg1 self.decorator_arg2 = decorator_arg2 def __call__(self, func): # This is stage 2 - we've called the factory, gotten our decorator, and now call the # decorator and pass the decorated object. print('I am the decorator. Somehow you passed me arguments:', self.decorator_arg1, self.decorator_arg2) # Store the decorated function in attribute on this object so we can reference it later. self.func = func # Now we're going to return a method, which is another type of callable. The `self` passed # to that method will be this decorator_maker_with_arguments object, with all our references # to the decorator arguments and the wrapped function. return self.wrapped def wrapped(self, function_arg1, function_arg2): # This is the final step - the wrapped function. These arguments are passed print('I am the wrapper around the decorated function.\n' 'I can access all the variables\n' '\t- from the decorator: {0} {1}\n' '\t- from the function call: {2} {3}\n' 'Then I can pass them to the decorated function' .format(self.decorator_arg1, self.decorator_arg2, function_arg1, function_arg2)) return self.func(function_arg1, function_arg2) # Continue with the example - define and call decorated_function_with_arguments just like the original did One caveat of this way - if you put `decorator_maker_with_arguments('some arg 1', 'some arg 2')` in a variable and then use it to decorate multiple functions, all three functions will suddenly act like the last one to be decorated. This is because `self.func` on line 15 is overwritten on the same object each time, rather than returning a new wrapped function. If you created the wrapped function as a function nested in `__call__`, that wouldn't be an issue.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [pallets/click/.../**decorators.py#L156** (master → c914686)](https://github.com/pallets/click/blob/c9146862440fb6a58c7efc8d9a483f2359feabad/click/decorators.py#L156) ---- 
If you want to read more about Python and Machine Learning you could buy this one. I'm curently reading it and it's really interesting to get the "basics" of machine learning [https://www.amazon.com/Thoughtful\-Machine\-Learning\-Python\-Test\-Driven/dp/9352135121](https://www.amazon.com/Thoughtful-Machine-Learning-Python-Test-Driven/dp/9352135121)
Check out [pyo](http://ajaxsoundstudio.com/software/pyo/). It has a lot of features \(multiplatform, supports MIDI and OSC, has a lot of built\-in synth and signal processing modules, etc.\) \+ good documentation and examples.
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](http://ajaxsoundstudio.com/software/pyo/) - Previous text "pyo" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
sorry, but i just see the conceptual problem: as long as conda maintains a second layer of libraries, executables, and headers, compiling some stuff against system libraries and some against their own, there \*will\* be problems. i see very good results by wrapping everything python package i need in a system package \([PKGBUILDs](https://wiki.archlinux.org/index.php/PKGBUILD) are easy\) and compile it against system libs only.
plz help me do my home work
https://www.reddit.com/r/Python/comments/8k3f6j/need_a_help_urgent/ plz help
It would really help if you would paste the code so that a human could read it :\)
import subprocess \# Usind the ls -l command as example: subprocess.call("ls -l", shell=True) \# If you wish, you can use the same method to execute a python script (use absolute paths if necessary): subprocess.call("python3 my_python_script.py", shell=True)
Use this https://www.splitpdf.com/ If that doesn't do the job, google "how to split pdf"
Um, no? 
It is. I'm struggling with the commas on the string. I've tried .split() but the different strings get wrongly grouped
https://stackoverflow.com/questions/490195/split-a-multi-page-pdf-file-into-multiple-pdf-files-with-python This might help
[removed]
i wont post you the complete code. but input\(\) puts the number you inputed into a string. you need to convert it to int first, before making any multiplications. you can do that with `int(num)`
That's how I got to know about script. I'm that kind of guy who searches twice before asking. But couldn't find anything this time.
Umm really sorry I've typed my question wrongly. What I wanna do is.. crop every page.. meaning there are two pages per Page so I wanna split them into two.. so I can print them out. PS.- I hope you understand my English is not good.
Look up ghostscript.
Awesome! can u recommend any good tutorials?
So you are demeaning the OP for posting a code they cannot use because JetBrains has decided that allowing college students to use their software for free (and learn to love it and pay for it after they are out of school)? Anything disparaging to say about me? I can't use this because I already subscribe to the all apps subscription for Jet Brains. 5QWR9-6V9X9-7CKGZ-N9CBF-CBYFS 
This is a link to localhost?
Have you thought about just using Excel for the job? You can set the value of the column to be the result of a conditional expression. Sure, the syntax is wildly different, but that would be my inclination. If, on the other hand, the intent was to "learn you some Python," I think I'd be inclined to check out [openpyxl](https://openpyxl.readthedocs.io/en/stable/) instead. It's based on `xlrd` and `xlwt`. It seems to me that the basic approach you're going to want to take is: * [Open the file](https://openpyxl.readthedocs.io/en/stable/tutorial.html#loading-from-a-file) * Process the data * [Save the file](https://openpyxl.readthedocs.io/en/stable/tutorial.html#saving-to-a-file). 
Why can’t the documentation be written like this?
I read "terminal annihilation" and was like WTF?! 
How is a helper class error prone ? I can see the sql alchemy models being faster/easier/potentially safer to avoid injections - but I'm curious as to what benefit it offers regarding errors.
This is really for the "business developers" no other runtimes are on these machines and they want to use python for data science and other fancy analytics stuff. So potentially we could restrict only a select set of libraries related to data science only. Users don't have admin rights so I guess this will be enough to restrict install or updates of additional packages or libraries? I thought Python might have a standard set of guidelines for securing it in an enterprise environment like Powershell but doesn't seem to be that mature in this sense yet or am I missing something?
A news scrapper can be written with one line of shell. A news SCRAPER is a bit harder. 
There are several web pages that claim to do this. The first hit on Google: https://www.splitpdf.com/ Further down the search results page: https://www.sejda.com/split-pdf
Yeah, going to look into that, next. I think the SSL stuff uses a c wrapper, so not sure how much I can port. :) Thanks for the ideas.
The same argument can be made for not installing Python 3.x in program files, rather than the user space default that should be used. This allows pip without an Administrator terminal (Windows version of sudo if you will). If you have to get an Administrator command prompt to pip in Windows, stop and setup your Python correctly.
thanks!
would it be possible to print money with Python? 
What is better about the folder structure? On the contrary, I like how splitting the directories keep them clean. Regarding rsync, one of the reason is that I didn't want any unnecessary creds on the server, yes I could limit what a deploy key has access to... but the real reason to be honest is that I deploy another project to the same server that needs to be compiled and rsync the artifacts, and I just copy/paste/modified the deploy pipeline for this python project.
You need to be using a dictionary. {'Backup pending': value, 'Rollforward pending': value, 'Restore pending': value}
I was thinking of using an x Ray scanner but they seem to be expensive and rather really bulky. Is there any cheaper and lighter solution ? Also if the imaging does not take place in visual spectrum , that would result in distorted colors . Any way we can recover the actual wavelength of the contents inside ?
You can iterate normally via for loop.
I don't know about sentry when I was about to code package. I don't use regular mail because sometimes we get mail in spam and Gmail is providing us to send hundreds of mails per day for free. Also We don't need to disable 2FA when we are not using our personal account. Its not good idea to use our personal account for it. While someone else can see our account credentials. Just register new account of Gmail and use that for this. It will take few minutes (2-4) to new register. I respect your opinion and I will apply that as well. My friend contribute with me and add some more email services. If you like to contribute then welcome. Hardcoding the account credentials is also bad idea, I will add that feature who will take the account credentials from os environment variables if no account login is given then it will try to look for it in environment variables.
&gt;You can then extract the Keys/Values that you need, no need to compare. \-\&gt; but I got the values from different sources.... the specified\_values\_forDB are set and the actual\_values\_forDB are from a config file and needs to be compared each day...
yes i guess... but how can I get the elements from the lists... this works: print \(compareList\[0\]\[0\]\) but if i loop like: for list in compareList: for x in list: how do I get the subelents of the list=?
 db2_config_parameters = ['Backup pending', 'Rollforward pending', 'Restore pending'] specified_values_forDB = ['NO', 'NO', 'NO'] actual_values_forDB = ['YES', 'NO', 'YES'] result = {param: specified == actual for param, specified, actual in zip(db2_config_parameters,specified_values_forDB, actual_values_forDB)} 
1 hour video? I guess it belongs in r/learnpython.
thanks!
&gt; You can't really tell someone not to `sudo apt` Of course not. Apt is a **system** package manager. 
i had done that too point is my syntex is ok but output i dont understand how print(n,'x',i,'=', n*i) can give 2*2 = 22
TIL arrays are obsolete in 2018 due to it's bad memory management. Seriously though, what is the logic behind this? How can using a continuous space of memory and basic pointer arithmetics \(not explicitly in python, but anyway\) a bad use of memory? WTF
&gt; In fact some pip packages are installed by apt (or equivalent) directly. Difference is that these packages are not installed from PyPI, they are installed from your linux distribution's repositories. Only maintainers can add something to distribution's repos. Anyone can upload to PyPI. 
The subelements of list are in variable "x" 
Sorry, only vaguely related to the post, but does anyone know a good learning source to get started with pandas?
2x2 = 22 is pretty reasonable outpot for Python. If you Multiply a String with an integer it puts the String twice in a row. example: num = "name" num \* 2 = namename you need to convert print\(int\(n\),'x',i,'=', int\(n\)\*i\) it should work after that change
I'd actually argue that arrays have _better_ memory management since they are cache friendly. But in any case, I don't think it's fair to say one data structure is ever really better than another since they all have a use case.
Brandon Rhodes did that in a couple of talks: * [http://rhodesmill.org/brandon/talks/#dictionary-mightier](http://rhodesmill.org/brandon/talks/#dictionary-mightier) * [http://rhodesmill.org/brandon/talks/#animating-with-ascii](http://rhodesmill.org/brandon/talks/#animating-with-ascii) 
I used to write [AbstractDatabase class](https://github.com/patarapolw/HanziSRS/blob/50f84a9171b61df3305e8922b645b553e895a509/HanziSRS/user.py#L72), and then subclass it; to prevent typo of table name / column names. PyCharm is bad with suggestions for querying language, but is OK with Objects, so maybe object models are better with PyCharm?... Not related if you are using Vim/Atom/Sublime, though.
Gotcha. I was using python 2.7. Thanks for the explanation.
had microsoft implented a repo back then, it'd be filled with greyware, which is just malware that doesn't hog resources
1. Create virtual environment inside your project. 2. Run `setup.py install` inside virtual environment if you want to see how that would work locally. Run `setup.py bdist_rpm` or whatever the target platform you deploy to, then upload the rpm / deb / msi etc to your artifacts management server and let DevOps take it from there. `pip install -r requirements.txt` is OK for things like simple web application, but doesn't scale to hundreds of applications that need to be deployed in a distributed system. `pipenv install` is a joke, it doesn't even work properly for a trivial web application.
no Problem, glad that i was able to help you :\)
Does it mean I have mastered the very basics of Python if I can do almost all if not all "hard" exercises? ^(~~I don't mean I learned how to program since I'm aware just how much I don't know~~) I've already done pretty similar stuff completing MITx's 6.00.1x and 6.00.2x. 
x is already the item taken from the list, it is not index to item. You don't put it in [].
There are few things you may be interested in: since it seems like your data don't fit the typical relational model, SQLite and in general relational databases will do you no good. So, what are the alternatives? 1. Key-value storage (a.k.a. object storage) there's a huge range of programs in this category. Here's a list: https://en.wikipedia.org/wiki/Key-value_database but it's definitely not complete. 2. Document storage, this is in principle very similar to (1), but pays more attention to the contents of the objects stored, so would be more likely to provide better searching and matching mechanism. 3. RDF / OWL / Semantic web and friends. This is a specialized tool for building knowledge-bases. 4. Finally, there are also more general tools to build your own kind of storage: HDF5 and Berkley database come to mind. You can use these to build a storage with the properties you want, but it would require more engineering effort.
check out pipenvlib, you could easily build a setup.py generator with it!
I'll have a look! Thanks for taking the time for this discussion 
I would have loved an article like this when I was starting out. I found the root\-level of Python projects overwhelming. Please note that there are some pitfalls to placing packages directly below the root level of the project. Blog posts by [Ionel Cristian Mărieș](https://blog.ionelmc.ro/2014/05/25/python-packaging/) and [Hynek Schlawack](https://hynek.me/articles/testing-packaging/) dive into why and provide an alternative \(which is also what [pytest recommends](https://docs.pytest.org/en/latest/goodpractices.html?highlight=src#tests-outside-application-code)\).
If you have `env/repo`, naturally you know you need to activate the env when working on the repo.
I will second SQLAlchemy + SQLlite. No one has mentioned [Alembic](http://alembic.zzzcomputing.com/en/latest/). It is a great way to write the code to build database schema with some version control. My current project uses Alembic to build the database schema as I need new code features. I am not stuck to adapting to a bad database design, or losing version control over how I built a table or seeded it initially. 
Interesting.. thank you 
if you did a sudo pip install requests you're placing your faith in the maintainers of requests and the integrity of pypi. If you did a sudo apt you're placing your faith in the maintainers of apt and the integrity of apt servers. Provided you know and trust the package you're installing and it's maintainers there's very little difference.
It's not about whether it's a system package manager, it's about the level of review of uploaded packages. IIRC pacman is a system package manager that operates upon similar lines to pypi - anybody can upload a package if they want and reviews are, I think, less stringent than on ubuntu.
 stored proc 's are no option in my env..
Yes you know how to program in Python. Sounds like you might have [imposter syndrome](https://en.wikipedia.org/wiki/Impostor_syndrome).
I enjoyed a [udemy course](https://www.udemy.com/python-for-data-science-and-machine-learning-bootcamp/) 
Do the JS/CSS versions in your HTML template match the version of Bokeh you're using? I haven't used that particular version, but ran into a similar issue in the past.
I already said that - item is in the variable "x". x is the item. For example, try this: list = [5, 6, 7] for x in list: print(x) Try what happens. Item is in "x".
Thanks for the links.
Well, I trust maintainers of Debian or Ubuntu much more than maintainers of most Python packages :) Linux distros usually have a very strict and well defined process of adding something to repository or updating something within a repository. It is not always true for Python packages. Anyway, I don't see why would I need to install anything from pip globally. Why would I ever need `sudo pip install requests`?
thank you! yes, but w/ x all values are printed... when i got lists on a list. how can i output just one list \(which is lying on a list\) like: just output actual\_values\_forDB from compareList 
I'm not sure what you are getting at. I activate from the bash script that launches my server, all I had to do is change the directory of where I source activate from: #!/bin/bash . $(dirname $0)-python/bin/activate cd $(dirname $0) gunicorn -c gunicorn.conf myproj.server:app Having said that, other people mention pipenv in this thread which is everything and more, and so far doesn't look like it has any drawback. It does keep your repo and venv dir separated.
This is just an ad. You plan on adding anything of value here?
Good for you? You asked me why I want to do something. I explained in detail. You decided to say you don't give a fuck and also never asked.
I didn't think I could use the ipaddress import with essentially pulling dig results based on a hostname. I would probably need to match the regex with a dig to make sure the IP is VALID, but in reality, I don't care about it' being valid, because if it's not - pulling header files will fail anyways. 
Maybe something [like this](https://gist.github.com/mnordhoff/2213179) will work for you. Also, if you dig on AAAA records, I *belive* you should only get the ipv6 record, but I haven't done much with IP lookups lately ¯\_(ツ)_/¯ 
You dropped this \ *** ^^&amp;#32;To&amp;#32;prevent&amp;#32;anymore&amp;#32;lost&amp;#32;limbs&amp;#32;throughout&amp;#32;Reddit,&amp;#32;correctly&amp;#32;escape&amp;#32;the&amp;#32;arms&amp;#32;and&amp;#32;shoulders&amp;#32;by&amp;#32;typing&amp;#32;the&amp;#32;shrug&amp;#32;as&amp;#32;`¯\\\_(ツ)_/¯`&amp;#32;or&amp;#32;`¯\\\_(ツ)\_/¯` [^^Click&amp;#32;here&amp;#32;to&amp;#32;see&amp;#32;why&amp;#32;this&amp;#32;is&amp;#32;necessary](https://np.reddit.com/r/OutOfTheLoop/comments/3fbrg3/is_there_a_reason_why_the_arm_is_always_missing/ctn5gbf/)
So, you've got a catch-all try-except block in the code. This isn't really the best practice, since it takes all the descriptive error messages that really tell you what's going on, and lumps them all into a single thing. Best practice here would be to take all the exceptions that you know are related to this error (IOError in case it can't open the file, for example), and only have except blocks for those.
Yeah, if I do a dig AAAA hostname gives me Ipv6, but I still need a regex to parse those IPs to then try and pull headers from. But I haven't found a GOOD regex for ipv6 that makes it accurate enough to pull. 
Lol...good bot!
My only criticism at the moment is that this is distributed under both the MIT license and Apache license "at your opinion." You really should just pick one and stick with it, even if you just settle on the WTFPL license.
This guy's a spammer for boostlog io-- they have a shit ton of different domains pointing to a wordpress, and the wordpress redirects anything after the / to the same path on boostlog io, if it exists. On two different reddit accounts, they posted this to /r/python and /r/programming. Both accounts made after 1 month before (Feb/March) this spam started. Both accounts posting nothing but nonsensical comments, free /r/aww and /r/wallpapers karma to get around the spam filter, and links to this bs spam. There are more of these accounts posting across different programming related subreddits, ususally /r/programming, /r/python, /r/javascript, and sometimes the topic-related sub like some crypto currency sub. 18/20 articles are written by fake / disguised accounts, and are utter garbage. They've also seemingly disabled account pages on their site after I publicly did my initial sleuthing. 1/20 articles are legitimate, from people who joined the site thinking it isn't bs. The last 1/20 is from one of the main devs of the site. Coincidentally, they disabled. This article is somewhat legit and not absolutely unreadable, useless garbage...but better safe than sorry. It got 30+ points in both places within the first hour or so, which is strange in these subs given the lack of discussion. Not to mention it seems like it's a disguised account due to the lack of relevant activity on twitter and github. Tldr anything that points to boostlog io is blogspam and they are trying to get clicks and new users off of reddit by posting these and then highly upvoting them. It's fucking sad.
There is a dns client in Python. Instead of calling dig, you can run DNS queries in Python API call. Then you don't need to parse text output. https://github.com/rthalley/dnspython/blob/master/README.md
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [rthalley/dnspython/.../**README.md** (master → fed4e0c)](https://github.com/rthalley/dnspython/blob/fed4e0c5371ed513dbc2d4ad477ce1bd1c940114/README.md) ---- 
The original number is meant to change. Depending on the user imput it'll go down either by a random number between 20 and 22 or 40 and 44. But when it gets down to 10 it needs to go down by 80 to 120% of that number.
dig +short ?
Well this was specifically about apt and that's why I said &gt; And, if I'm not mistaken, packages on the default ubuntu/debian repositories are reviewed.
pip install package ERROR sudo pip install package SUCCES
thanks a lot.
Too late...
I have the same issue! 
Motivation: https://github.com/sfackler/rust-postgres-macros/issues/19 https://github.com/facebook/react/issues/10191
PonyORM + SQLite.
That's a honestly a fairly complex task\-\-this probably contains some good resources to start with [https://github.com/bonzanini/nlp\-tutorial/blob/master/presentations/2017\-pyconitaly\-slides.pdf](https://github.com/bonzanini/nlp-tutorial/blob/master/presentations/2017-pyconitaly-slides.pdf)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [bonzanini/nlp-tutorial/.../**2017-pyconitaly-slides.pdf** (master → 34968de)](https://github.com/bonzanini/nlp-tutorial/blob/34968dec575b5ffcf03e288dd3d801f3b00afd2f/presentations/2017-pyconitaly-slides.pdf) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dz54dam.)
ooh, yeeesh, if only i had found this video instead of enrolling in a months long program and study for years!
I started out with Coursera’s https://www.coursera.org/learn/learn-to-program and it got me going. After that I started a career track at DataCamp but that’s because I like data. Apparently. Starting a little project is also a good way to get going. Kaggle was recommended to me because of ML but I find it too hard for now. I’m 42 by the way and a switcher. Never got into programming because I couldn’t find the peace of mind to study. Best tip I can give you is quite simply: take your time and only learn by doing things you like doing. Find your muse and get to know her.
Pandas uses xlrd under the covers to read Excel files, so it should be enough for what he needs.
`.append()` Please, for questions go to r/learnpython . Once you're there, read the sidebar, too.
Try /r/learnpython. Show them the code you have and describe where you are stuck. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
Try tabulate: https://pypi.org/project/tabulate/#description Or you could just use some formatting magic for a DIY implementation of it, but I feel like that can have a bunch of annoying corner cases that I would rather not having to deal with
Not possible: 'Str' object has no attribute 'append'
I do.
You are being sarcastic or is it that good?
Can we get a screenshot? 
Correct. A string in Python is different than a list. Strings can have their members *accessed*, like with `myString[0]` to grab the first character. But they do not have an `append()` method. If you want to append characters onto a string, you just make a new one. E.g.: my_string = "Hello" my_new_string = my_string + ", how are you?" Whereas with a list: my_list = [0,1,2] my_list.append(3) # my_list = [0,1,2,3]
The best way to get your answer is to ask in /r/learnpython I just checked your post history and you've asked five questions on this sub this week and have been told to try /r/learnpython about three times, four including now. It's a better sub for questions and you'll get your answer faster if you ask there
Referential integrity, using a maintained third party library usually discourages hacking on it and instead investing more time obeying the libraries design philosophy.
Thank you all for your support! We just added Python folder and hand coded minimum bindings to our C++ library Looking to continue with mustache-templates aka handlebars and stubs for targeting data to generate Python/Golang/Node.js bindings to C++ ( currently hand coded) We are also researching if generators can be utilized to produce TypeScript functional code for AngularJS for targeting data maintenance . If anyone is interested please feel free to contribute to this open-source multi-language project.
A genetic algorithm is a brilliant project for learners for a few reasons: You can write running code in 50 lines or so. You can keep adding more and more complexity as your scope allows. You can solve some fun problems like games or serious ones like vehicle routing or generate art or music. You can write on your cv that you have done work in "AI", but it's far easier to gain intuition for than neural networks and other machine learning methods and needs no maths. If you want to learn parallel computing you can use that. It demonstrates algorithmic thinking, whereas an app is a pure engineering task, glueing code together.
&gt;Use an ORM if it makes sense FTFY
Awesome, thanks. I'm fairly new to the Python world.
I think hes looking for /r/domyhomeworkforme
Here's a sneak peek of /r/domyhomeworkforme using the [top posts](https://np.reddit.com/r/domyhomeworkforme/top/?sort=top&amp;t=year) of the year! \#1: [Python Django login with shopping cart assignment due.](https://np.reddit.com/r/domyhomeworkforme/comments/7as83y/python_django_login_with_shopping_cart_assignment/) \#2: [p l s help me](https://np.reddit.com/r/domyhomeworkforme/comments/6wnrbq/p_l_s_help_me/) \#3: [Desperate for Math Help](https://np.reddit.com/r/domyhomeworkforme/comments/8h1t73/desperate_for_math_help/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
But python doesn't have lists...
you might want to look into server provisioning tools like [fabric](http://www.fabfile.org/) or [ansible](http://docs.ansible.com/).
https://old.reddit.com/r/Python/comments/8k772r/help/#
Fabric looks incredibly promising. Thank you! I'll mess around with it and see. 
I have been saving on exit. A bit unnecessary too since I already save on change. Maybe this has been the source of my problem.
install any python version easily using: https://github.com/pyenv/pyenv 
In ubuntu, you can use the [deadsnakes](https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa) package: $ sudo add-apt-repository ppa:deadsnakes/ppa $ sudo apt-get update $ sudo apt-get install python2.6 I think that will install python 2.6.9. You'll start a python 2.6 terminal session with: $ python2.6 And you can run programs using python 2.6 with: $ python2.6 hello.py
If you already have the json api you could get a domain certificate setup. If you're okay with a public domain doing something like this with lets encrypt would be pretty easy. If it's not on a public domain, you should be able to self-sign a certificate to use (though I personally never have set this up). If you're okay with ssh, you can also just ssh in and execute a command there. I.e. you have a wrapper fuction do_something() which ssh's in and then calls a function do_something() local to the server. This way you could have the api for your functions be the same local as well as remote. If you did it this way you don't really have to "get it running" since you basically already have all the pieces. So I guess my questions are, what parts (if any) of my two example approaches don't solve your problem? That would probably make giving advice a bit easier.
Is there a fundamental difference between 2.6.9 and 2.6.4?
Kind of. The basic architecture of the system is we have one box running within the mine that hosts our entire monitoring daemon. It gathers information from the miners, processes data, and execute commands based on this data \(switching between pools, what coin to mine, over clocking settings etc\) It basically runs as a command/control server. Normally we were doing this just with the cgminer api for antminer systems but have a client that wants to integrate GPUs into his setup. Claymores api is pretty terrible, as it only shows data, but does not allow you to make on the fly changes through the api, which we need. This CAC server is not publicly facing but the security is still an issue here. Iv just never used ssh with python before and needed somewhere to start, the way you said with the wrapper function where it sends commands to the client host is the way I am looking to do it now, just needed somewhere to start! Fabric however looks really good. I am reading the documentation as we speak. 
One question I have with fab though is i see you write a fabfile config and then execute that with the fab command in terminal, can I just call it in my code to make the connection?
lmfaoo u mad boy?
&gt; Iv just never used ssh with python before and needed somewhere to start, the way you said with the wrapper function where it sends commands to the client host is the way I am looking to do it now, just needed somewhere to start! Well once you've ssh'd into the box, it's basically the same as just running a local shell. I.e. if you can open up a local shell/terminal/powershell on your own system, running python like `python3 app.py` would be the same command if it is running locally or remotely. Do you know how to run python locally on the command line? Just trying to better understand your starting point here.
If you're asking here: https://pypi.org/project/terminaltables/ No one who doesn't have a school assignment is going to waste their life manually lining up all this crap. If it is a school assignment, try /r/learnpython.
I do know how to use ssh yes, I was meaning using a python script to initiate the connection, pass a command, execute, and get output. Meaning, using an ssh library in the code to handle the connection. I am trying to automate this instead of a technician having to do it manually. 
Kind of misses the point. It needs to be in python because it needs to be a module the rest of the management program\(which is all coded in python\) can import and use. We built something like Awesome miner but better. I't is a complete management program for large scale industrial crypto mines \(20,000\+ miners\) 
For my crypto trading bot, I use an ssh tunnel and serve an app from localhost. I use https://github.com/kootenpv/loco to help me create the tunnel, it's mostly just a wrapper.
I see. So personally in that case I would go one of two ways. One is to use requests locally and communicate with your json api remotely. That honestly would be pretty easy. You would need to encrypt the calls, but that's certainly possible with a self-signed cert. (I've never done it, but it can't be that bad...dangerous words in engineering, but oh well.) Another option might be to use something like this: https://pythonhosted.org/Pyro4/ That way you could hook up to remote servers/modules/code and execute them as if they were local. In either case you would want to keep the application logic separate from the ssh and communication logic so that (ideally) importing a module and issuing the same commands works locally and remotely.
I just recently [asked about something like this](https://www.reddit.com/r/learnpython/comments/8iajzb/communication_over_ssh/) and afterwards I made a proof-of concept that worked. Honestly, it is overkill for you. You can just execute any ssh command remotely if you do not mind making a connection for each: subprocess.call(shlex.split('ssh user@server "rm -rf *"')) (of course, **do not do that** command). You can also set up multi-plexing to speed up the connection
To use relational DB like sqlite efficently you need to be able to tabularize the data, which isn't easy if they have as you say unknown categories and properties. Postgress has a json type, or this might be a case for mongo.
The variety of answers here is large. No conseus generally means the question is missing information. Exactly what data are you storing and what queries do you run against it?
I like the API
Thanks my man will go through this later. Anyone else go through this video and confirm it’s worth the time? If not, what is an alternative that would be worth the time? 
Have updated. Hopefully a bit more helpful now.
It kinda depends what you want to do, if you want to learn some API you could try making a discord bot. I made a small discord bot for myself and got some practice at asyncio module as well. Theres some great documentation for the discord.py module. There might be better ways to learn stuff like this and probably better modules. But I’m still learning as you are and found the discord API to be much fun to learn with. On mobile atm so i wont post links 😶
Dont delete your post. You suck. 
man.. that truly is the beginners dilemma. I think the reason Automate the Boring Stuff is so recommended is because it exposes you to a variety of fields. The book kind of says "take a look at what you con do with these, now imagine all the possibilities...". At the end of the day you will need to have a project. Whether it's your own or somebody else's you're contributing to. But you need a goal and that goal needs to have enough meaning in your brain for you to dedicate hours to solve problem after problem. And it's hard to find something of that much value to you that you are willing to suffer for it. Maybe what I'm trying to say is be careful not to pressure yourself into "finding something to do" and instead find something you like or you think you might like.
&gt; Type-based errors represent a tiny fraction of the problems What is a type-based errors, what python calls a type error or what could be a type error? Because in a decent type system everything from the closed fd reading and null dereferencing to avl tree balance or any other invariant breakage could be a type error.
Would that not be secure as we are allowing an entry point for arbitrary code execution on local? or am I just crazy XD
Thanks!
Anaconda pre packages a bunch of numerical and data science packages and makes installing them easy. This is nice because many of them are compiled c or fortran libraries and as a user you don't need to deal with that. Is it worth it? Depends do you do scientific computing?
So your saying I should just explore options, start a project, and learn a variety of things along the way?
I have done some light ML in the past, but am trying to get more serious. It sounds like its worth it. Is there any issues side installing it along with my existing python install?
Awesome, thanks 
Learning so much about Data Science on this sub but I dont have any use for it.
I’ve had no issues, it plays nicely with other installs.
Great feedback, made me lol, thanks!
Anaconda is more useful on windows, or if you have python packages that use languages other than C or Python.
On a Mac, Anaconda sometimes replaces /usr/bin/env with python 3. I'd call that an improvement, but sometimes something might break.
In light ML, you might be able to get away with just numpy, pandas, scikitlearn, and maybe a viz library like bokeh or matplotlib...and maybe a couple others I might be leaving out. Anaconda has a shit ton more than that. Also I haven't used in a couple years so I might not be hip to newer and more popular libraries.
Do you have any suggestions as to what exception to trap?
I'd suggest accepting a tuple of exception types. But I'd rather you just install one of the many retry things on pypi. They're one of those still waters run deep things - looks easy, but in reality it's hard to get right. 
This is intriguing, but I wish you’d add a little more context to the README or an accompanying blog post or something. What are these banners, exactly? What do you use this tool for? Just seems cool so my curiosity is piqued :)
Ok. This wasn't a serious attempt to promote my work, but I should tweak the examples, this is just the kind of feedback I wanted. Thanks! To your comment re: generators, I still think it's useful to decouple iteration logic from processing? Thoughts?
Certain network services broadcast banners that can be useful for enumerating what is on a network. As an example, if you telnet to port 22 on an SSH server, when you connect the banner will often tell you what version of SSH is running and can sometimes let you know what the underlying operating system is. This program essentially connects to the ports you specify and prints out the information it gets when it connects. This type of enumeration is helpful from a security standpoint because it allows the user to know what services are running and potentially what services can be attacked. Hopefully that makes more sense. Thanks for reaching out :)
They're useful in some situations, but this isn't one of them because the iteration is your business logic. 
So with fabric 2 it seems there has been some major changes to how it authenticates with the client. I am trying to use env.password but its not working AT ALL. Anyone have a quick and dirty example they could throw in to help me out a bit here? The documentation on fabric 2 is pretty non\-existent. 
Why? If your machine has ash access to it, you already can do anything you want. 
Actually in a similar situation myself. I'm looking into Automate the Boring Stuff and also working on Kaggle competitions as those provide pretty good feedback and have a solid community 
thanks that worked and i will next time
*arrays
sorry i will next time
Find a project so big that it scares you, then spend the rest of your life solving it.
Have you looked at \[Paramiko\]\([http://www.paramiko.org/](http://www.paramiko.org/)\)? I've used it before to automate running commands on remote machines over SSH, and it worked quite well. It only supports Unix\-like systems with a conventional OpenSSH implementation, but otherwise seems like it should do what you're asking. It's not actually clear from you're post whether your trying to execute remote shell commands over SSH from a Python script, or call python functions on a remote machine over SSH using Python, or something else. This would allow you to do the first thing.
you didnt provide nearly enough details for someone to be able to help you
What details do you need?
I can provide detail
OK time out, it takes a few minutes to install, can be uninstalled in seconds if you so chose, and is free... Why are we debating if something this easy is worth it? Install it, if you never use it, remove it. It's just not a big deal. 
in other words you want to trick someone into bricking their computer or even better some snippet of malware to install. Err yeah I'd look at the Federal penalties for that kind of shit. If you really had code that good you wouldn't have asked such a rambling script kiddie question. IMO
So you want us to write you what essentially amounts to a virus so you can knowingly deploy it? I think that's a crime
This is exactly why I asked. You talked me into it
You do realise that Python *compiles* your code, right? Also what is it with all the recent blog spam?
I've also been working through the book lately – I wish I had heard of it when I was first learning about ML in finance, because I had to figure out a lot of Lopez de Prado's 'obvious' points the hard way. All the best with your learning endeavours, feel free to reach out if you ever need a second pair of eyes.
pix your formatting issues please
I used array once and it didn't perform any faster - however it was very efficient on memory.
It really just depends on your access model for the kind of data you have. Simple blogs, user/group accounts, cms and similar do fine with an ORM because the data is easily normalized. The more complex your data access pattern the less an ORM fits. There are other tools that can be used to wrap sql with functional calls (web2pys dal and sqlalchemy core come to mind) with out going full object mapping. They tend to be more flexible while providing the benefit of generated SQL queries. 
Python is a foundation. The categories are built on top of the foundation. You need to be comfortable with core python + one category to get a job.
Your biggest issue is the lack of proper formatting. I formatted everything correctly, and cleaned up a few things, upgraded it to python 3, and it runs. No errors on line 55. https://www.pastiebin.com/5afe43e09164b
Why?
Please for the love of god learn to spell and format. Both things make my eyes bleed
Hm. It seems I need to familiarize myself with tool use cases more. I really appreciate the response given you didn't need to
Most people know concepts and apply them in whatever language. Python just happens to be a popular one. I wouldn't bother focusing on any frameworks, because I don't think anyone is hiring jr devs based on their knowledge of any framework in particular, but I could be wrong. Just come up with some projects to do, and use whatever frameworks/libraries fit for you. You'll get experience making use of api documentation which is useful.
I don't know about other browsers but Chrome doesn't auto play videos in non-active tabs.
Try changing the working directory. And please use [/r/learpython](https://www.reddit.com/r/learnpython/)
Thank you, will do. 
Does anyone actually KNOW carpentry? Cooking? The universe?
- web: flask, django, html, javascript - data science: jupyter, numpy, pandas - data engineering: sql, airflow, luigi - software engineering: git, unit testing, large codebases 
I carved out a niche by automating mundane tasks in Python. I learned how to debug in pycharm, pip / virtualenv (now pipenv), git, and lots of modules like pandas, argparse, flask / falcon, psycopg2, xlswriter, csv, smtp, pexpect, fabric, dotenv and many more. If you can identify problems that can be automated, you can zero in on those until you can script a solution. By doing that, you'll rapidly learn by fire.
Nice one, cheers.
&lt;3
It's worth noticing that these aren't the only ways to get a job; you can be a backend developer with flask and sql without knowing anything about js, for example. And most jobs require git and unit testing regardless of your title, although you can often learn them after being hired.
yeah these are the 'main categories' and there's definitely overlap
Yeah people know Python and if you are really good at it you can get a job and start a career in one of those sections. The people who are really good at it are probably smart enough to be really good at any other mainstream language. Don’t be one of those script kiddies who just learned “Python”, please.
I always liked this quote when someone says they know a lot about computers or even myself. "If you where plopped out in the middle of the forest how long would it take you before you where able to build a computer to send me an email."
But how much wood could a woodchuck chuck?
Another video from the PyCon 2018 just came out with a better explanation and tooling imo. It covers a little more tools and the full process of pipelining everything for data science. It's like 3 hours long, tho. Anyway, I've been practicing data science in Python \(pandas, numpy and sklearn\) for about 8 months and I don't feel like even scratching the surface...
To be fair, this isn't aiming to teach you at pro level. From the video description: "This video provides a comprehensive overview of basic concepts that you need to learn to use Python for data analysis". So, just for an overview is kind of enough \(a little too long in that sense...\)
Nice one! Can you break down other languages similarly?
That’s not a very useful definition of the word “know” though. By that definition, nobody knows anything.
How do you find quality clients?
I'm glad I use shelve then, I guess it encodes it before using pickle.
That's like saying you don't know civil engineering unless you make the iron for fhe bridge yourself. Humans specialize for a reason. 
I'd add security. It's pretty damn big in security now as well.
I've only used flask for a single school project years ago. Could you briefly explain how it's used in combination with sql for backend development?
Python is the easiest language to learn, which is why you need a PhD to get a job with it.
Wow, that did not go down well. People like to take metaphors way too literally…
I agree with you, before I asked my question I did not actually know if someone needed to learn all the packages/frameworks to get a job programming with python.
It did thanks.
Its reddit, I expected it so i'm not going to let it get under my skin.
Oh yeah, definitely. In the past decade it seems more and more to be the core language in terms of security tools. Ruby is still around but you can definitely get by in security with just Python as your core language now. [Here's a good memory forensics tool, volatility](https://github.com/volatilityfoundation/volatility) [Here's a number of good pdf analysis tools](https://blog.didierstevens.com/programs/pdf-tools/) [In fact Didier's entire suite is great, tons of python](https://github.com/DidierStevens/DidierStevensSuite) [scapy is awesome](https://www.udemy.com/python-scapy/) [mitmproxy is awesome](https://github.com/mitmproxy/mitmproxy) ... and there's so much more. It seems to be the go-to language for tools. You'll still run into a lot of other stuff, especially if you analyze malware. You'd run into javascript, powershell, straight shellcode/ASM, visualbasic, C... But that's malware and it can be any language, especially anything that a browser can run, or be embedded in a PDF or office doc macro. For tools, more often than not you see python and then some ruby.
Awesome answer, thanks so much. 
No problem!
Fabric3 is the Python 3 version of fabric on PyPi. 
You can mix and match categories and languages; ie build the same style house on two different foundations. Software engineering can be done in C or Java or C# or Python or Haskell. Each has tradeoffs. Here's an abbreviated list: Software Development / Web Development: - Less than 5 people on the project - use Python - More than 10 people on the project - use C# Data Sciency stuff - You're a programmer - use Python - You're not a programmer - use R Game Development - Lua scripting, on top of some game engine 
Yes the array are lists
JS is probably a low priority for a backend developer, unless the company they are looking at is using NodeJS for the backend, which though not rare, is not common either.
Unfortunately just luck... there’s a lot of ones out there that aren’t so great. Just try to make the jobs fast for the bad ones and follow up with the good ones to see if they have other jobs. Eventually you’ll end up with more good clients than bad ones... hopefully. I’ve had some luck with this but not a ton
Or it was a bad metaphor.
You can also check out https://exchangeratesapi.io for the source of your exchange rates data. The api also has conversion logic built in.
I know everything about python, just not at the same time
Yeah labview is easy to learn, just watch out for race conditions, as usual. I think they are easier to create in labview because of how easy it is to parallelize.
You can use Flask to handle the requests and build a RESTful json API, and SQL manages the database stuff. Now your React/Vue/etc. frontend makes requests to your backend and uses the received JSON.
Jupyter is basically just an IDE. I'd put matplotlib in the data science tools before jupyter.
Python doesn't have primitive arrays and its list type isn't linked or even doubly linked because it allows for random access. 
I really want to learn more about large codebases... how to plan, how to execute. Any good resource on this?
the list is an array
I'd say I *know* print(). I can do a comprehension, assign a variable, read lines from a file... most everything else i tend to google and maybe even the reading from a file i double check. I have over 10 years experience with Python. I love it and use it all the time... I don't waste time memorizing much though when the references are so readily available and you can dir() or help() your way out of most any problem and the docs are so great.
6.00 is enough for most freshmen to get an internship or something. So yeah, I would say doing 6.00 is big step to becoming a programmer! congrats :)
Experience. It’s a reason I wanted a job in a big company and I can’t imagine learning all of the stuff any other way. But that’s maxbe because in order to understand it I personally nedd to see the business problem and then the solution.
Do you mean its semantics or implementation are the same as the primitive array?
&gt; Simple [...] tool [...] exchange rates LIES! IT CANNOT EXIST! :p
What constitutes 'knowing' jupyter? For example I use jupyter when I'm writing code to test that a line of code does what I think it does, and some magic commands for profiling. I feel like there must be a lot more to it...
It would take you many lifetimes. No matter how much you know. As for Python, it's a language. How well does anyone know English? Hell, even Shakespeare could not claim to know it all. And at this point he would be a dinosaur, that happens every 6 months or so to programmers. It's just a bad question.
I installed Anaconda on Windows, but had problems upgrading some packages. Now I use only vanilla python with pip, and everything works fine. The only exception is, that for some math computing packages, I had to download and install pre-compiled whl files - don't know how anaconda handles it.
Try the python course in codecademy 
/r/learnpython is a better place your question
Yes
Perhaps practice writing pseudocode first, and then repeatedly expand from there? Ex: to generate the Nth factorial my value is 1 to start for every number from 1 to N inclusive multiply my value by that number and remember it for next time my value is now the answer
Looks amazing! Is there any way we can help/contribute to the site?
&gt; How much python do you have to know to actually get a job... It really depends on the industry. If you're thinking about going into web development, knowing a couple of frameworks like Django and Flask opens doors for you. And you don't have to know about stuff like NumPy or PIL or Tkinter, which are not typically associated with web development. 
In order to not check all of the points you need to have them stored by location, like grid aligned cells or some sort of binary/quad tree and just check all the points in cells that overlap the selection. Otherwise you could speed up the point checking by not having to do a distance check for every single point, just ones that are within the bounding box of the circle. So make a square that has side length of the diameter of the circle and centered at the same position, then most points would just need a bounds check (if myleft&gt;=boxleft and myright &lt;=boxright...) then a distance check. Some additional processing for the points inside the box but unless your circle encompasses most of the total space it won't affect much. Ps-technically you could revert to checking distance on every point once the circle encompasses a certain percent of the total area if you wanted and it would save some computation but perhaps not enough to matter
I think the thought behind python was to make a language which will be easy to pick up qnd start working with. So choose whatever paradigm you want to work on and learn on the go. Some documentations are so well written that you can get to the advanced stuff pretty quickly if you have the concepts.
Free and really instructive: http://www.diveintopython3.net/
In interviews you will be asked to solve algorithmic and logic problems. For example, implement a linked list. Modify that to be a doubly linked list. Implement a hashmap (without using dictionary). That kind of thing. That requires knowledge on the theory as well as practical application in at least one language. Once you have shown you know the theory, for which it does not matter which language it is done in, you will be asked specific core language questions for the language the job will be focusing on, if you claim to know the language. For some jobs, no prior knowledge of the language is required as long as you can show you know the theory and can apply it in at least one suitable language which is usually an OO language among Java, C++ or Python. Focus on the basics, the algorithms, data structures, theory, all the stuff taught in Comp Sci. courses. The language is less important. By practicing applying what you have learned in a language, you will become comfortable in it. OTOH, knowing a language will not teach you data structures or theory automatically. Python is well suited to that because it is easy to write and read and does not need a lot of boiler plate code.
Thank you. This is helpful. I am currently implementing a grid to reduce the number of data points to be checked. If my circle is placed entirely in grid A then only points in grid A will be calculated. I just really wish I could write a program the same way I would give a second grader instructions. "Okay timmy bring me any apples I circle with this hula hoop" *proceed to throw hula hoop onto the ground covered in apples* 
were\*
There is nothing Python specific about the concept of microservices.
I suggest you start with solving a real world problem. Like a script to help your girlfriend analysis data.
I can really recommend Fluent Python by Luciano Ramalho. It explains many advanced features of python and also explains in detail more commonly used features showing how they differ from other languages. It also gives a lot of examples of tips and tricks and goes into some detail on how python behaves behind the scenes.
If you search for python on microcontrollers and embedded devices have a look at [micropython](http://micropython.org/).
I don’t think you can separate out git and fundamentals of software engineering. That knowledge is orthogonal in my opinion and required for all.
Think of the job you want. Then think about what programming languages and modules you need to know for that. I know nothing of software, because I use python for data analysis.
Personally I really like sqlalchemy core. I think it's a great tool when working with more complex data. We have one DB2 database with some very unique schema's to reduce how much empty space there is (our data store of the DB is in the terabyte range and our overall network store in the petabytes). Having to predefine those table structures in an ORM would be more work than they are worth. Ultimately that DB just doesn't store things that are easily cast back to objets with out some custom marshalling. 
I'm in two minds about this. Learning to be a programmer should definitely be about learning concepts, but if you have domain problems and are learning to solve them with python you can definitely benefit by trying to learning python idiosyncrasies specifically rather than learning to program in general. Treating python as a framework rather than a language will get you far. 
No matter what framework or API you are using 90% of your time coding will be just for loops and if statements, Dictionaries and lists. That's Python, that's the basics. Everything else is there to get things done in the real world, Most of the coding will be just Python.
Sorry, never used this api. I used my firm's proprietary api, and there you could not to what you are trying. You had to have each ticker listed as identifier in the request. Tickers are bad identifiers because different data providers format them differently. For instance, Berkshire Hathaway class A can be BRK.A, or BRKA, or BRK A, or BRKA.US etc. Also, you can have WMT in the US and another one in Canada etc. One thing you can try is request the list of constituents of S&amp;P 500 first, then iterate through the result in a second request that pulls the needed data. That way you will use their ticker formatting. Hope this helps. Do they have documentation I can look at? 
What differs data engineering from data science? 
See related Hacker News discussion at [https://news.ycombinator.com/item?id=17093051](https://news.ycombinator.com/item?id=17093051)
where did you learn abstraction? it's easy to determine it for simple projects (coffee maker etc), but what about more complex projects? do you know any good resource for learning this (abstraction...)? the problem is that there is a lot of garbage on github, so that's not exactly a solution...
I think Python's probably ideal for proof of concept, wait until we scale and optimize to see what really happens, that type of programming language. I'd be surprised if something else doesn't take it's place soon. Community support keeps adding functionality to Python so it can be used for stuff like web development or actually scaling machine learning stuff as opposed to knowing C++, but I'm guessing a lot of the demand for python is like sit in a room and do rapid data science and write reports on your findings type work. Python doesn't use AI to process what you write and then compile, it's a brilliant programming language but it's ripe for improvement. I think we'll see natural language programming take the place of Python in a big way, while more optimized languages like C++, stuff closer to machine code, stays valuable. 
A data engineer gathers and collects the data, stores it, does batch/real\-time processing on it, and serves it via an API to a data scientist who can easily query it. The data scientist then uses this well structured data to answer questions using tools such as machine learning, data mining and statistics.
I would add machine learning with scikit-learn NLTK, Tensorflow, OpenCV etc.
Check out Fluent Python It has sections on functional programming, coroutines, generators, context managers and concurrency with asyncio. All with examples of when those tools are appropriate and when not.
If you don't know about it already, check out https://www.shodan.io They scan all open ports and provide the same information, and even make it searchable. So for you can search all ips exposing the banner for a certain version of SSH for example
I know my bedroom and my house pretty well. I know my street and city. I hear there's a place called North Dakota but I have no idea if it's ever going to be known by me or not.
Thanks so much! Yeah I feel like I’ve known python for years now, but have never advanced. Will def check it out
[removed]
Errm, yeah. It's theft. Somebody who was going to have to pay for that software now won't. Why should you get paid but not JetBrains?
So he purchased a 6 month subscription. And gave it as a gift. That is theft? He isn't using it along side someone. Your definition of theft is completely wrong.
Fluent python is a Devine scripture for python programmers. 
Effective Python is good too, though Fluent Python is the better of the two. 
This is really a fun way to use Python. That said, anyone that doesn't hear Laurel really needs to get their ears checked.
Librosa is really nice. I think I could have got better results if I used one of their filters instead of the butterworth filter, but I have only a passing familiarity with librosa.
Hope it helps. I was in a similar situation and it really changed my understanding The version I have only goes to python 3.4 I think. So unfortunately the await and async keywords were still being proposed then, also the dict implementation has changed a little. But maybe there is an updated version now
For sure, I developed a scientific app at 90 % with my android phone. (https://github.com/Hatoris/BioPlate) You will need : - pydroid 3 as IDE : https://www.google.ca/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://play.google.com/store/apps/details%3Fid%3Dru.iiec.pydroid3%26hl%3Dfr%26referrer%3Dutm_source%253Dgoogle%2526utm_medium%253Dorganic%2526utm_term%253Dpydroid3%26pcampaignid%3DAPPU_1_OMX-WsPZK6L-jwSEpo2gBA&amp;ved=0ahUKEwjD1fLmn4_bAhUi_4MKHQRTA0QQ5IQBCCwwAg&amp;usg=AOvVaw03Sfu9CyXrIN1ku0erhNQX - termux as terminal : https://www.google.ca/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://play.google.com/store/apps/details%3Fid%3Dcom.termux%26hl%3Dfr%26referrer%3Dutm_source%253Dgoogle%2526utm_medium%253Dorganic%2526utm_term%253Dtermux%26pcampaignid%3DAPPU_1_TMX-WrDYO4PQjwTigbfYAg&amp;ved=0ahUKEwiwrsfwn4_bAhUD6IMKHeLADSsQ5IQBCCgwAA&amp;usg=AOvVaw2jimjIxlsNsi5ukfgF8TQ9 # not requiere but usefull to manage properly your app developement - github or bitbucket account Sincerely, pydroid3 is amazing and let you do many things for it free ap part. 
I mainly use Anaconda for the Jupyter Notebooks integration. Im really satisfied with it, no complaints.
Does anyone know what technique NYtimes used in their interactive visualization? You can't do a simple band pass filter with configurable steps, so I though they were using a pitch shift. I did not get good results with pitch shift though.
How old are you? I haven't been able to find a single person who heard anything close to Laurel, but apparently it is linked to age, and our oldest was 26.
Have you tried Qpython or Qpython3.. You should be able to build apps with it. 
Oof. I'm 30. I hear laurel at both high and low amplitudes.
I've been told it's the language of security testing lately due to how fast you can iterate and test ideas.
Hearing frequency response changes with age, so you might be very right. I am 33 and I can hear either at different times.
I would also consider buying a Bluetooth keyboard 
This is a nonsensical question. I’m confused as to why it has so many upvotes. 
 Does learning CS actually just come as you go along into programming or I'll actually have to go read books and stuff to learn it?
show off!
Or, to put it another way, the data engineer buys disks/object storage/database storage, and the data scientist buys cpu/gpu/?pu cycles.
I'll give this a better look in a little bit. But right away I'm thinking your re inventing a lot of what pandas and h5py do.
Back-end means the parts that make it work, that end users don’t see. Front-end requires HTML, CSS, and JS (although you can certainly produce a working website without JS). Back-end requires a web framework and the language it’s written in (eg. Python + Django, Ruby + Rails, Java + Spring, JS + Node, PHP itself or with a framework…). SQL is handy, although it can be hidden by an ORM. But the back-end developer doesn’t have to be banned from touching the front-end code, so they can fix small things in the HTML code without the front-end devs.
Ha ha ha. You’re not wrong, although this over-simplifies the real-time, streaming, and “online” aspects of data engineering. 
I love the idea of passing knowledge down to others but don't you think your title is a bit misleading. If only it was that easy... I would be frank learning how to program isn't as easy as others potray ay it to be. 
I prefer the package manager, that way it gets updates with the rest of my packages and not when I remember to update pip
Hey, yeah I am an active Shodan user. There are a few reasons you would want to do your own port scanning. One is for private IP space (obviously Shodan can't scan your private IP space). Also, I work as a security analyst for a very large ISP and I don't necessarily want to trigger scans for IP addresses that are not already in Shodan. We already have a bunch of our IP addresses that have been crawled and stored in Shodan and triggering more scans on IPs that haven't been crawled would store more of those IP addresses in there. Despite not wanting to trigger more scans on Shodan, I think it is a great service. Shodan has helped me identify a lot of "low hanging fruit" in regard to machines that are vulnerable. We actually have a box with a 10G connection and NIC that serves as our own internal Shodan, powered by Masscan. It's awesome. Thank you for reaching out with the tip, however. I genuinely do appreciate it. 
Can you post a link to that video? 
For development purposes, you could (should?) use a Python virtual environment and install your packages there.
I assume op doesn't have a computer at all, based on wording and context
Use Debian packages for system-wide installs, Pip for development (and use virtualenv to avoid messing things up across projects).
Has anyone _known_ Python in, you know, the biblical sense
I second using a virtual environment (and there are a couple varieties). Different projects will have different requirements or even different versions of python altogether. Plus, you can mess them up and just delete them and start over. Using the system install will just gunk up your system irrevocably. 
if i execute it on python Python 2.6.9 i get the following syntax error File "./test\_dbparameters.py", line 33 result = {param: specified == actual for param, specified, actual in zip\(db2\_config\_parameters,specified\_values\_forDB, actualDBParameters\)} \^ SyntaxError: invalid syntax on python 2.7.14 it works perfectly
&gt;Does anyone actually KNOW python? Guido I guess
could you tell where can I learn python in a detailed manner?
Looking at my current project $ pip freeze | wc -l 73 Unless you are only toying around, you'll need venv and pip.
You're wrong.
Another vote for Fluent Python. It really is a great advanced book. I’d also suggest watching James Powell’s “What does it take to be an expert at Python” on YouTube. Some people don’t like his style, but I think it’s a great and thought provoking talk. https://youtu.be/7lmCu8wz8ro 
Pretty sure they meant keyboard to use with the phone so you have to try to type on the touch keyboard
If you know how to develop good flow controls, loop properly, and handle error conditions gracefully, you can get a job as a programmer. And not everything you will build is a web app. Look into creating a daemon.
So, only use pip inside the virtual environment?
If you have an iPhone or iPad I highly recommend Pythonista. 
He bought the license with the humble bundle and is giving it away to the first to claim it. Definitely not theft.
I'm pretty sure Guido hasn't memorizednthe entire Python ecosystem.
I don't have time to look into it in-depth right now, but there are things that I notice on the first glance: 1. `.idea` folder in repo. Basically, there is no reason to store `.idea` in repository, because some files are not portable (i. e. [misc.xml](https://github.com/Hatoris/BioPlate/blob/master/.idea/misc.xml) has local paths from your PC. Also, not everyone uses PyCharm/Intelliji IDEA. It is better to add `,idea to `.gitignore` and remove it from the repository. 2. [install_requires](https://github.com/Hatoris/BioPlate/blob/master/setup.py#L21) doesn't specifies library versions. It is better to add some constraints (using `&gt;=` and `&lt;=` operators) to specify versions of your dependencies with which your library is guaranteed to work. 3. Inconsistent naming. Basically, PEP8 says that constants should be named in `UPPER_SNAKE_CASE`, classes in `CapitalizedCamelCase` and everything else (modules, functions, methods, variables, etc) in `lower_snake_case`. I saw a lot of names that do not follow this convention and even mix different styles of naming.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Hatoris/BioPlate/.../**misc.xml** (master → 941f483)](https://github.com/Hatoris/BioPlate/blob/941f483b7d1a37cb27d197e8f597f41e06d3d4a0/.idea/misc.xml) * [Hatoris/BioPlate/.../**setup.py#L21** (master → 941f483)](https://github.com/Hatoris/BioPlate/blob/941f483b7d1a37cb27d197e8f597f41e06d3d4a0/setup.py#L21) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dz6pwsw.)
Import path
&gt; It sounds like its worth it. IMO it is. Some of these packages can be a real pain to deal with on Windows (especially fbprophet and its dependency pystan, both of which I use frequently) and Anaconda makes installation and updating them significantly easier. &gt;Is there any issues side installing it along with my existing python install? You'll want to be mindful of install locations and which install's package manager you're using at any one time, as well as what interpreter your IDE is pointed to, but it's certainly no worse than any other case of having multiple interpreters installed simultaneously.
Yeesh, what an oversensitive baby. A-bloo-bloo-bloo, some people said mean things on the internet.
This alone makes Anaconda worth it IMO, just because of how many other stats/ML packages depend on it.
For "begenners", okay. + shitty mic quality. Who needs another half-ass python guide anyway.
&gt; half ass-python *** ^(Bleep-bloop, I'm a bot. This comment was inspired by )^[xkcd#37](https://xkcd.com/37)
Unless your timeseries is really short, if you are using python without numpy to calculate moving averages on data you are _not_ a competent user of the Python language.
&gt; first off, my fame, while certainly categorized under “cult of personality” is not necessarily accidental. It’s called marketing. I worked very hard at becoming well known within the Python community, and toiled away at it for years. The popularity of Requests was accidental, but there were many libraries that existed before it that I had created in an attempt to get GitHub stars. I wanted to be like Armin Ronacher on GitHub. I succeeded. I'm really sad that people like Armin left the python community for Rust and we're left following marketing people that can't really handle criticism. I just hope we will soon find out that there are much better alternatives to all of his projects, that are not just "made to become famous" but actually try to solve problems
I am beginning to realize that /r/python is not the Python community I know and love — but it is redditors that happen to use Python. There's a distinct difference :)
One doesn't preclude the other. 
[Plumbum](http://plumbum.readthedocs.io/en/latest/remote.html) should make this easy.
Its better to know the function and be able to apply python to it. i.e. If I need a systems guy, I need someone who understands binary read, write, shell utility, file searching, etc. best practices and conceptually how to do that. I will easily have a group of people who know all of that but use 5 different labguages to acieve that. Thus, my needs resemble, "Know your frameworks" closer than know python, BUT Id say know your area and the language will come.
&gt; and we're left following marketing people that can't really handle criticism Um. He wrote the tools *and* marketed them. You are making some very strange leap that you can only do one or the other, and that's wrong. Regarding solving problems, even if they don't solve your problems, they solve someone's problems - he's getting paid for his work by someone who considers it a part of how they make their business successful at making (lots of) money. You should consider that your situation is not everyone' situation.
I'm very glad my review wasn't perceived negatively, thank you for adressing the points I've raised there. Best of luck and don't worry about the troll comments here too much.
That’s exactly right. There’s some overlap - I saw you speak last week - but there are also plenty of people who wander in from wherever just to crap on the rug for the fun of it.
I get what you mean, but once you know the core concepts and ideas behind programming all you need to know to pick up a new language is just the idiosyncrasies. So if you spend your time learning *why* you do a certain process you can easily learn *how* in just about any language quickly.
Sure, but it's sad that so much influence on python packaging and web stuff is given to a guy that "did good marketing". The whole ecosystem is going to be affected by it, and lots of smart people that had the influence, the skill and the experience to solve these problems are moving to other languages :/
I will update my .gitignore accordingly. 3. I will stick to PEP8 and modify properly all names Thanks for your time and comments it's really appreciated
You can jump right into programming, but you'll want to make sure you understand why you are writing a certain block of code rather than just how to write it.
i think you're missing networking, not that I know much bout it
Like what the block does or is trying to achieve?
It's not like I don't use pip at all. Just when there's the option to get something through my package manager I go with that.
But Pipenv isn't. The only reason you're recommended as the official packaging tool even though you don't do packaging is because Nick is on your project and PyPa the same time. I'll never see you do is get on Twitter and horror yourself out and then cry when people don't like your tools and call you special one.
A letter to /r/python but not submitted as self post to /r/python? 
Yes, I know for pandas but I was wondering if pandas is not overkill for my application. But It's right, maybe I should see if I can replace numpy by pandas. Thanks for your time and comments they are really appreciated, if you can give it a better look into code that will be great too.
We definitely deal with packaging, just not in a way you see. Nick was invited to join the Pipenv team after the recommendation was made, because we needed someone senior (more senior than myself) to help make decisions — he was not on the team at the time of the recommendation, and the person who initiated the recommendation and wrote the docs is not involved with the project whatsoever. 
You made conscious decisions to become a public persona, and unfortunately that comes bundled with the fact that some people are going to say bad/mean things, because that's just how the internet, and anonymity, is. It is way too easy to fire off negative comments about /anything/ for /any reason/ -- surely you must know of this by now. I'm sure also, that a lot of people love pipenv -- I know I totally do -- but somebody that is even mildly inconvenienced by some aspect of pipenv or something that you wrote is going to fire off a burst of 10-20 words about how you should do horrible things to yourself, and then go back to eating their cheetos and thinking of themselves as pretty nice people. That's just the truth of it. And it's shitty to say you have to deal with it, but you just do. If you can't, then unfortunately the spotlight isn't for you, however much you wanted to market yourself.
IMO take this with a grain of salt if you already have a basic-advanced understanding of python and security.
When you're just getting started, the Debian packages are fine, and save you learning something *else* on top of what you're doing. You will eventually find that the Debian packages are out of date, or don't exist for a package you want, and in any case, that you need finer grained control of which packages you're using than Debian provides. Depending on what you're doing that may happen very quickly. Once that happens, you're going to want to install things via pip and virtualenv. For development I would recommend *against* installing packages with pip without virtualenv, it's not really a sustainable workflow. I would endorse using non-virtualenv pip installs only for installing user space software - never for development.
A 311 quote! &lt;3 I just wanted to respond to everyone with a post instead of on an individual basis. Ideally, I'd be able to respond to each comment that was posted, but a larger narrative is required, and I don't have bandwidth for that. &gt; The world is not going to change to better suit your mood. Don't ask it to. You're absolutely correct. It's a request, though, not a demand :)
As /u/jonwayne says, &gt; We are actively keeping an eye on new projects including poetry, flit, and hatch to figure out when and how we should include them in the guide. For the most part the only thing keeping them from being in there is someone writing a pull request to add them.
Python is just handy. For example recently I hab a exercise to crack RSA keys. Python was so damn useful for this.
For example, you'll often be taught what a dictionary is on the surface, but rarely do teachers explain what a hash table is or how a computer understands your instructions. When you understand the basic concept start digging deeper.
Pls also dont forget that there are always more silent lurkers than (shit)posters. 
Exactly — they're just docs. They get very little traffic (I believe) and have little to do with Pipenv's popularity. The popularity came first. Then, the recommendation came. 
Hi all, I wrote this blog series after seeing a request on Twitter along the lines of, "What does my development workflow look like when doing serverless development?" The person has a workflow for Rails apps that allowed them to receive fast feedback and quickly iterate. They wanted the same for serverless development. The piece I linked to is part 2 in the series. It covers testing with pytest since the entire project is written in Python. Let me know what you folks think. Here's links to all three pieces in the series if you want to read the whole thing. * [Intro](https://www.serverlessops.io/blog/serverless-ops-aws-lambda-serverless-development-workflow) * [Design &amp; Project Setup](https://www.serverlessops.io/blog/aws-lambda-serverless-development-workflow-part1-design-project-setup) * [Testing &amp; Debugging](https://www.serverlessops.io/blog/aws-lambda-serverless-development-workflow-part2-testing-debugging)
Could try vagrant.
Yeah I was getting ready in the morning when I wrote that I'll look closer in a bit here
Got it. Thanks.
Until someone changes the code but not the comment - comments should explain the what (i.e. the high level documentation you get in docstrings), code should be simple enough to be self-commenting.
On the other hand, you are also part of that equation. Maybe it helps you to think of your [emotions as kitten and ninja stars](https://www.youtube.com/watch?v=XQICtwDKmzE) :\)
Something I hawk whenever I can: [Code Complete](https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670) by Steve McConnell is a huge recommendation. I never learned anything besides like 100-line programs before this, and I basically divide my programming journey into before and after reading this. It's seriously worth reading: you can skip chapters that don't apply to you, but it is one of the best resources on how to manage the complexity shift between small and large codebases.
I don’t mean this to be rude, but it’s dangerous to push off what could be very legitimate criticism as “being Reddit” and ignoring it
silent lurkers arent really community members on a forum imo - if you dont add anything, and adding is as little just commenting, then you arent really here
The problem is that too much influence on the ecosystem is being distributed according to "popularity" (marketing dependent), and not enough according to actual merits. I would really love if more people contributed, but their better implementations seem to just be ignored by the community in favour of the Kenneth™ experience, as he cannot really be criticised and has dictatorial control on core parts of the ecosystem. I really hoped requests would just have moved to the standard library so it could be mantained and rewritten in a serious matter and we could ignore this personal drama. Same for packaging and virtualenvs
Yeah, that
Who is this entity that "distributes influence"? Kenneth achieved influence by working hard and building useful tools. The same also made him popular. If you're aware of some better implementations of things, maybe you should do some marketing and tell us about them?
Doesn't that make your flask backend a 'web app'? Its semantics, but anything whos primary purpose is to be the backend for a webapp is part of the app.
What about this \[Deep Dive into Python\]\([http://www.diveintopython3.net/](http://www.diveintopython3.net/)\)?
I'm curious what your definition of handling criticism is. Apparently writing a blog post explaining yourself, then calmly engaging your critics on reddit is not it?
The simplest approach to generating pseudorandom numbers is probably a [Mersenne twister](https://en.wikipedia.org/wiki/Mersenne_Twister). If you want something more complicated, look into [xoroshiro](http://xoshiro.di.unimi.it/).
**Mersenne Twister** The Mersenne Twister is a pseudorandom number generator (PRNG). It is by far the most widely used general-purpose PRNG. Its name derives from the fact that its period length is chosen to be a Mersenne prime. The Mersenne Twister was developed in 1997 by Makoto Matsumoto (松本 眞) and Takuji Nishimura (西村 拓士). It was designed specifically to rectify most of the flaws found in older PRNGs. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^] ^Downvote ^to ^remove ^| ^v0.28
This guy needs to look at his own personal motivation for seeking "fame" (his word not mine) in the python community. The extent to which your ego, your identity, is bound up in being python-famous, is the extent to which you have made yourself dependent on the community's opinion of you. This dependence may lead to approval seeking posts like the one linked. I don't come here for this shit. I come here for python! Get over yourself and your hurt feelings.
In a forum, yes. But what about silent pipenv users who just download and use the package?
Yeah, it really is an amazing tool. I learned Java and Javascript but rarely use them. I dont build big applications so I have no need for java, and I hate web design so I dont use javascript. I'll go do a little project with each about once a year as a refresher, but whenever I need to get something done it's always with python.
Certainly not saying that the community is toxic because there are negative comments, using it as justification for ignoring valid technical criticism, creating r/pythonpositive and many other safe spaces where nobody can say anything bad about you to confine discussion and so on. For positive examples look at all mantainers of useful software (from Ronacher to Torvalds)
This is a macro response to hundreds of comments made about my software over the past few days. Sorry if you feel like it's off–topic. I didn't seek fame, I sought to provide inherent value. One comes with the other, and is a natural byproduct. 
Thank god he made r/positivepython where he can only receive positive comments on how great everything he does is!
Yea, the extent to which he's laboring over this is ridiculous. I half wonder if this is brilliant marketing or a mental health issue. 
I have many actual examples, but need to remain anonymous to not be ostracized from the community for having criticized Kenneth :/
Kenneth, as a wise man said on Tumblr; *"If I’ve learned anything from video games, it is that when you meet enemies, it means that you’re going in the right direction."* People like to express their opinions, which is fine, but sometimes they use such a way which makes others feel uncomfortable. This is unavoidable, since people have different level of empathy (or none at all). Btw, could you restrict in your website's CSS the `section &gt; ol, section &gt; ul` rule (tufte.css:118) to desktops only? The `width: 45%;` setting makes the lists very thin on mobile. Thanks!
I'm usually silent. I use pipenv and it's pretty handy. Thanks for the work you put in! 
I think it's both, but the marketing bit is probably unintentional. I just really hope r/python doesn't become afraid of negative comments and start moderating away everything "negative"
If I just wanted to be famous, I'd just be an asshole online. People are famous for that every day. Providing lots of value, with the right messaging, provides a framework within which followers can accrue. 
The tech community as a whole is toxic as fuck, and this subreddit can be a reflection of that. People use "honesty" and "criticism" really as excuses to just be a dickbag and say what they want. News flash, you can disagree with someone on something and not be a jerk about it. 
✨🍰✨
Are you importing the time library inside of the while loop? If so, you should move the import line to outside of the loop. I second that you should investigate Mersenne Twister. There are also other algorithms that will come up with a google search if you’d like to program those as well. 
This entire thing has been a rather clusterfuck of stupidity &amp; hurt feelings. There's been people criticizing people for their software and people taking criticism of their software as a personal attack. Judge a software for it's value, not for who made it. And if you purposefully link the value of your person with what you create, you *have* to be able to take the criticism that comes with it. /u/kennethreitz -- There's been people who have been asses. Ignore them. You've acted like an ass too in response, and that doesn't help at all. You can defend what you've created (we all want to defend our own production), but you *have* to understand it's not perfect. If you want to be a figure in the community, then you **have** to accept that not everything you create is perfect, and you have had a rather poor response to that. You attacked people who were only providing valid critique of the software (most likely because you were feeling attacked by the aforementioned asses). I've not used pipenv, and this entire thing has made me not want to, because I have seen the creator argue with the tool's users. Engage/debate them sure, but don't dismiss what they say because they aren't using it how you *want* them to. 
1. len('123456') returns 6, but strings are indexed from 0, so index 6 is on 7th position. You must substract 1 when indexing using len() 2. Did you noticed, you ar re-creating l and m arrays in each loop?
I think there might be distinction to be made between the world at large and the Reddit sub as a community. Subs become a community that, to some degree, filters and controls the tenor and content of the posters. Yes, being resilient in the face of trolls, honest when presented with feedback, and happy when things go our way are important, but I don't think we should just tell people to "suck it up" and absolve ourselves of the implicit and important responsibility to be civil and also to do our part to call out incivility. 
I think a lot of the negativity stems from the fact that there are *a lot* of library developers and maintainers that aren't really helped that much by pipenv. It sounds like a great tool for web developers or application developers. Bit I think most of the negativity is a feeling that this is a pet project for a subgroup of python developers. It's kind of like if people started using python to control robots and all of a sudden pypa began making all these tools for robot developers and declaring them "official". Like, what about all these other python developers that have been using pypi and complaining about packaging for far longer. Granted, there are a few peps in the works to improve python packaging, but that process is slow, meanwhile, pipenv was fasttracked without a pep. People aren't really mad about pipenv, their mad that there's all this effort going onto application environments instead of a replacement for setuptools.
No need for a PR! I've built [athena](https://github.com/apas/athena), an elegant, minimalist, light-weight static blog generator in Python atop Tufte's CSS and fixed most of these issues. Feel free to check it out and / or use it. Any feedback is most welcome. cc /u/Dauros.
You make practical Python packages with top-notch APIs and documentation. Not everyone will like everything you do, and not everyone will be polite or intelligent: Taking this part of human nature personally accomplishes nothing. Keep doing what you do well, and look at the negative consequences as a statistical inevitability... You are under no obligation to engage, or mentally concern yourself with someone's opinion. "What do you care what other people think?"
Woah, super awesome!
And you can't say that with a straight face. You've been posting over and over on Twi about how read it was chasing you away from Python and you just wanted to quit.
&gt; the implicit and important responsibility to be civil and also to do our part to call out incivility Good intentions never saved moral censorship from turning into arbitrary abuse. Your primary responsibility is to be honest, not to protect the mental health of the easily offended.
&gt; I don't come here for this. I come here for python! Honestly, this. This is gonna sound rude, but I didn't bother reading through it all. Not because I didn't like it, not because I'm a hater, nothing like that, I've never even used pipenv myself yet. It's just that I came to /r/Python for stuff about Python. Not for drama about developers.
Honestly I think most of the reason that there is such a... mixed reaction to your project is that you picked the single-most pot-holled, storied, battle-worn, everyone-has-an-opinion niche of python - packaging. Python has a long story of experimentation with packaging, a lot of mistakes, a lot of debt we now have to live with, a lot of battles fought, a lot of jaded personalities... and almost every pythoneer gets to interact with it. And almost every pythoneer has some painful story about their interaction with it, they can tell you over a beer with a chuckle after a dev meetup or con. If there was *ever* a place in the python community that you wanted to dig out the most trolls to nay-say, if you were just sick and tired of things being generally congenial... you'd pick packaging. I'm not sure you fully appreciated this fact-of-reality going into these discussions.
Ok After looking through more: 1 - Manipulation.py Half the methods here are commented out? I'm not sure why BioPlateManipulation is seperate from BioPlate? 2- Iterate.py Consider changing iterate class method to be__iter__ / __next__ methods on the respective classes to enable iterator protocol. 3 - as per my previous point on pandas. Replacing your BioPlateArray with a pandas dataframe will considerably simplify your codebase. It has indexing, aggregation, transformation, excel/html representation and a bunch more stuff. I'd consider wrapping the dataframe / panel in a convenience layer for your needs. I've also used custom objects as elements in the dataframe maybe this would be useful to you? Here's a quick thing I put together to show what I mean. It's a very small wrapper and a standalone function https://gist.github.com/ecurtin2/0df2bb69ce1d3f29dea27e960a696e8d
I think he hit on the problem very squarel6 when it said his fame was a result of marketing. I think people in the community can smell marketeering and might have a slight knee-jerk revulsion to self-promotion. When you make maybe less than humble proclamations on what you're working on you can result in the feeling of "If only these people didn't advertise themselves as the next best thing to sliced bread" as the person he quoted stated. By his own admission his goal was to accumulate stars on github, not make the best tool out there. Undeniably he is successful, but maybe being so _marketing heavy_ is a bit antithetical to the sensibilities of some in the open-source community.
That's dishonest. You've been posting passive-aggressive, approval-seeking comments on twitter for a couple days now. You've been policing this thread since it went up.
Get a RaspberryPi? 
Wait, what's going on? I'm not up to date with what's going on but I do use pipenv since I discover it and it's AMAZING \(for me\). I can't even thing of going back to not using it. I hope it's not going anywhere and it will keep getting improved and maintained. I mean, what else is there that can do same thing and works just as well or better than pipenv?
&gt; Is it reasonable to judge the motivations of the makers of the software when judging the software? It definitely is. We as programmers do that all the time I think. It's important to have a reasonable discourse around that though. I might not love Microsoft, and I might have aspersions about their motivation for some of their software, but that doesn't mean that I will attack them anytime I can.
If you haven't try "head first python". Also when you go through these books try following allong by actually typing out the code. It will help you remember what you've learned and get you more comfortable writting code 
That's the wonderful thing about the Reddit voting system: it's democratic and transparent. If the mods were to just remove comments they didn't like, then I would agree with you 100%. I don't think anyone is advocating for dishonesty or not being clear in calling out things that don't work or could be improved. Even calling out people who might be off base in one way or another. I think the real concern is that people comment in ways that don't contribute. Just being snarky or a troll doesn't help.
that's my issue with pipenv being recommended officially. It doesn't actually solve any problem with packaging, and only replaces requirements.txt with yet another non-standard file format, while there is already a standardized format for the same thing. Poetry follows the PEP AND actually does dependency resolution. 
Thank you!
No, I use Python more so as a scripting language than anything. I keep my Gentoo system near bleeding edge so I don't run in to issues much. Debian might be a different story
I recently did just this in order to have a tiny, portable python dev environment. Raspi 3 + iPad + terminus + vnc + Bluetooth keyboard + power bank. It’s pretty amazing. The only thing I haven’t had time to figure out is how to use a WiFi dongle to present the raspi as an access point/ad-hoc network to allow me to connect to it to configure it to connect to new WiFi networks when I’m on the go. 
My pleasure!
&gt;For positive examples look at all mantainers of useful software (from &gt;Ronacher to Torvalds) Well, Linus Torvalds isn't particularly well-known for expressing his disagreements in a polite manner...
&gt; they're just docs. They get very little traffic (I believe) and have little to do with Pipenv's popularity. i respectfully disagree. docs are very important. i think being called the "official packaging tool" is a major driver in it's popularity and fuel for the controversy and pushback. of course i can only speak for myself and i mentioned that in one of the "hate threads", but my first contact with pipenv came through the documentation and the endorsement. documentation is very important for me. it is often _the_ deciding factor in the decision to use a tool, framework or library. pipenv currently does not fit my needs, but i am curious where it leads! thanks!
I've learned a lot about flask, html, javascript, numpy, pandas, sql and I have yet to use those skills at a full-time job. If anyone is hiring for anywhere in the world, then pm me. I'm open to a job.
Thanks. I'm most familiar with the data engineering and data science Python categories. I cringe sometimes when I see the web and software engineering sections, which scare me. Provided me some perspective. 
Yeah I'm not sure why anyone would downvote you. Making conda environments for projects has been a lifesaver for me. You can also read out the list of installed packages and read that file in on some other system, in order to quickly make a conda venv that contains everything your project needs.
&gt; you can disagree with someone on something and not be a jerk about it Or you can just call the entire tech community "toxic" ;-)
Hi Kenneth, I hope you and the "haters" can make peace. I was not aware you you and your wonderful work until I saw it here in this post, but people should be grateful for all you've done. While I never thought I would say this, issues like this have made me realize that I need to vote for and support Donald Trump, because only he will solve our world's problem of snowflakes. Keep up the good work and I'm sure everything will solve itself with time.
@jonwayne: thanks. I note this commit now: https://github.com/pypa/pipenv/commit/5853846f5da171bf29a303f6b545b0a8918958e7 Was that the outcome of this suggestion?
 pipenv --install -create your own perfect tool pipenv --update - you dont have to use pipenv 
If you can't read the save file the only choice is to remove the save and load code from the game, pass in some different test data, and use some tests and prints to try to find out what is happening. We all have been in the same situation and with enough experience we learn what mistakes we make all the time and write tests for them.
I've been browsing r/python for years, and shit\-posting/trolling has been very rare and down\-voted very quickly. I have seen a lot of project criticism, almost all of which is defended against or accepted gracefully. The closest this sub has ever been to this level of vitriol is when u/mitsuhiko made some strong arguments against certain design decisions in Python 3. But even then it never degenerated into the clusterfuck this whole thing has become. r/positivepython is fine. If people want to pat themselves on their backs in an echo chamber, they're welcome to it. If you just want to avoid the openness of r/python and focus on the technical stuff, I'd recommend r/pythoncoding instead. I'll stay right here, though, where I have the greatest opportunity to learn about Python related ideas in more of a real\-world context.
Oh I see
Everyone writes their PoCs in python nowadays. Here's an example of a really cool C2 toolkit using rpyc: https://github.com/n1nj4sec/pupy
So, if you can give me an opinion then, since you use Gentoo: I'm thinking of switching to Arch \(I know that's not Gentoo, but perhaps you know\). One of my questions is whether Python/Django can work with Arch.
I have never programmed in 2.7 but I guess you just can ommit comprehension and use for loop.
I built a data injest / presentation engine that pulls stuff from all of our vulnerability scanners and makes it available to engineers. it knows exactly which systems a given engineer is responsible for and only shows them that data. It's really cool! I'm hoping to FOSS it this year.
Thanks for this reply jin. I’m about 3 months in, so a little bit behind you lol. What have been you’re favorite resources? Also, can you please provide the link to the PyCon presentation you referenced?
Please notice Waroto's sentence "I use Python more so as a scripting language than anything", that's the same as "only toying around" I mentioned in my initial statement.
That's really awesome. Wish I could get approval to build something like that, but it took years for a team to get approval to stand up a database server, and unfortunately I'm not helping with that. What's a FOSS?
Sorry, I didn't realize it was already posted.
Most people only use time to "seed" the generator. A seed being a number to start the random sequence. Where the same seed gives the same output every time.
Fairly certain it was deleted 
Kenneth, thank you for sharing. I mean that sincerely, it's brave to be human "on the internet" (a ridiculous phrase that pretends it isn't real life interactions with real people). Your work is much appreciated and I use it daily. Whatever rewards have come your way are just and well deserved. If I may make an unsolicited recommendation, consider saying "no" to more things and give yourself the space to breathe. In the unlikely event that someone has happened upon my comment without reading the others in this thread, I think I can save you the further trouble of reading and simply summarize most comments as: "Fuck you Kenneth, you think you are better than me?" To which the answer should be, as it always is to this question posed this way: "Yes". Now on to a rant that could be titled Down and Out in the Eternal September. The majority of people who have commented in this thread have done so in a manner that is execrable, and have they the remaining capacity for it, they should feel ashamed tonight as they lie in bed waiting uneasily for sleep. In so called polite society some of these comments would have seen the emitters chucked through the doors into the gutter to find a quiet a moment to reflect on the utility of civil conversation. However, as disappointing and cheap and shabby and redolent of poorly disguised envy as it all is, it is anything but surprising. This is a public common area and to pilfer a line, it is clearly very common. All these great people standing up to pass scathing judgement upon Kenneth, shall we sift through the fetid pile of words in this thread, looking for these radiant nuggets of thoughtful criticism that build both creator and creation, leaving us all stronger together? What a laugh! The ash and grime falls through the sifter leaving only the largest pieces of filth, those weighty enough to harm and weaken each other. What a profound contribution, surely worth the time they took to write and to read. And lurkers, the vast majority of the room, simply sit there and listen to these few speakers and think "this is the tone of the room, this is how the influential speak, I guess I must either adapt to their viciousness or leave". So the decent leave and the abusive and the marginal stay, looking askance at the leavers and saying the other of the twin miserable expletives hallmark to our era "they can't handle criticism". As if the bile was the thing of value and the effort and hard work of the person that they spray it upon was the worthless expectorant! We are all brutalized by the grinding gears of a systemic uncompromising unkindness, uncharitableness that has become the lingua franca during the eternal September, celebrated as both excuse and ambition under the moronic banner that is "it's the internet". To our damnation as a society the daily act of lashing out at each other online has hobbled our minds and personalities and left us bereft of not only of civility itself but even of the understanding of the utility of civility. All this to say that you are brave to stand up in such a place and speak honestly, because as the comments in this thread show, those consumed by unkindness, living daily in an unkind world largely of their own construction have neutered themselves to empathy and will stand unmoved by your post. The tragedy of our time and the ultimate source of so many of the systemic problems facing us today is that so many people will look at your post and instead of seeing a fellow human trying to live, they will only find despised weakness and new ammunition for the next salvos of unkindness. The largely anonymous modern internet user can become as unconstrained and morally repugnant as a member of a mob gathered at a public execution, baying for blood as entertainment, lusting to hurt someone else to help them forget their own pains and injustices. And for largely the same reasons. Do not ask the mob for understanding, or sympathy, or kindness, their world has none to offer and they will hate your all the more for asking. So in the end why dignify any of these marginalia with a response? I leave you with this wisdom from the inimitable Mel Brooks: "I have come on the most urgent of business. It is said that the people are revolting!" "You said it! They stink on ice."
pip with wheels works just as good
I would watch a cooking show where Gordon Ramsay and Bobby Flay are thrown into the woods and told to cook a three-course meal with only their bare hands.
&gt; Cannoli supports two major optimizations that come as a result of applying restrictions to the language. Restrictions are placed on the Python features that provide the ability to delete or inject scope elements and the ability to mutate the structure of objects and classes at run time. This is neat. If work continues I'd like to see it as another type of Cython...where I can write my external modules in Python, compile them with Rust, and call them from Python easy-peasy. The caveats wouldn't be a real problem for clean code that follows [PEP 8](https://www.python.org/dev/peps/pep-0008/), [PEP 484](https://www.python.org/dev/peps/pep-0484/), [PEP 560](https://www.python.org/dev/peps/pep-0484/) and similar. Good work!
My general rule of thumb is, if a method is supposed to *return* something useful, return `NotImplemented`. If the class method mostly does some action to itself and/or its goal isn't a returned object, I raise `NotImplementedError`
And then just engineers. Engineer: uses python (so numpy, scipy, matplotlib, pandas, etc.) to help design or analyze or automate something engineering related. Data engineer: probably not an engineer (e.g., electrical, mechanical, civil) and likely manages the systems that are collecting data on users. Data scientist: Might be an engineer, but processes data collected by data engineers or test engineers (e.g., I put a shaker on a part and measure the displacement response and then process the data). If your problem doesn't fit into RAM, you're probably a data scientist. If it does, you're probably not.
Is this a Chrome 66 thing? Autoplaying was disabled because it's too spammy
Hi Druski; I Agree. Well-said.
Hmmm, well the only thing Python is in need of right now are more resources in the Resources tab. Submitting relevant resources would definitely be a huge help!
Yes, all Linux distros are basically the same save the package manager. Arch will just have some more bleeding edge versions available
&gt; Can recommend anaconda (go for miniconda and install packages for the installation you need / want). Are you sure that conda is a good choice for OP? As I understand it, conda really shines when it comes to get binary packages installed on Windows, where compiling C code isn't feasible. OP is using Linux and as such have the whole development tool chain available. 
Has literally everyone here written their own static blog generator? Show of hands: who _hasn't_? _looks around the room, sees no hands_
Scripting and toying around are definitely different. While I'm not always building these huge multi file projects (because I have C for that), I do use Python on a daily basis as a way to have some more complex and rapidly developed scripts than Bash
Stephen Wolfram would like this
That's one of those that seems sketchy. I don't know of anyone using in a large production environment and the almost unintelligible english in the [faq](https://aiohttp.readthedocs.io/en/stable/faq.html) have me very wary of that. Have you used it?
Can I get a little more info on what I am seeing 
Rapid7 is one reason I say that ruby will always stick around security. I don't see anything replacing metasploit anytime soon. For everything else, there's ~~mastercard~~ python.
Just because I am unable to manufacture a microprocessor and hard drive out of rocks does not mean that I don't know how they work...
I think you are looking for something like [Quart](https://pgjones.gitlab.io/quart/deployment.html), [Sanic](http://sanic.readthedocs.io/en/latest/sanic/deploying.html), or [aiohttp](https://docs.aiohttp.org/en/stable/deployment.html?highlight=deploy) (all links are to the deployment documentation). Alternatively you could look into ASGI and use [Uvicorn](https://github.com/encode/uvicorn/tree/master/uvicorn) or [Daphne](https://github.com/django/daphne/tree/master/daphne) with a ASGI framework such as [APIStar](https://github.com/encode/apistar). What makes the options you've seen sketchy? [I'm the Quart author] 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [django/daphne/.../**daphne** (master → dd2c8b2)](https://github.com/django/daphne/tree/dd2c8b2a0f256576ca88db4777885e1c35d75429/daphne) * [encode/uvicorn/.../**uvicorn** (master → 24bf63f)](https://github.com/encode/uvicorn/tree/24bf63f5c6e1f3fa226e417b89f4e4d32ffa26e4/uvicorn) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dz7866t.)
**AmazonSmile Link:** [Code Complete: A Practical Handbook of Software Construction, Second Edition 2nd Edition](https://smile.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670) ^Use&amp;nbsp;AmazonSmile&amp;nbsp;to&amp;nbsp;donate&amp;nbsp;0.5%&amp;nbsp;of&amp;nbsp;your&amp;nbsp;purchase&amp;nbsp;price&amp;nbsp;to&amp;nbsp;a&amp;nbsp;charity&amp;nbsp;of&amp;nbsp;your&amp;nbsp;choice&amp;nbsp;at&amp;nbsp;no&amp;nbsp;extra&amp;nbsp;cost&amp;nbsp;to&amp;nbsp;you.
Cool!
This bot was coded in Python ;-)
Those links are very helpful, thank you. Most of the results that come back from naive google searches are small projects or very poorly documented. Sanic and aiohttp are the only ones I knew about that you mentioned.
I use it, handles 10m users and terabytes of streaming data. But I guess it is still sketchy for you. 
I think it was some variation of something called session fixation.
I didn't mean to offend you. It just doesn't do a good job of selling itself. Thanks for the anecdote though. That helps.
So in answer to your question, nobody knows all of the available libraries. That's because libraries are toolkits that are built for a purposes. There are plenty of people who know how to accomplish a ton of popular purposes entirely in Python using a huge variety of libaries. They are called "experienced developers." There are a large group of people who know the core modules of python intimately and maintain them. So yes. But not to the extent of knowing everything that anyone has ever programmed, because that's like knowing how to make every chemical combination or every type of food.
Well I'd encourage you to take a look at Quart :p (it is a small project though). Any feedback or thoughts on it or its docs would be very welcome.
Pupy does a lot of the cool things that Meterpreter does. It's really the exploit PoCs that you need.
Python 3 for sure. Python 2 official support ends in 2020.
FOSS == Free and Open Source, we're gonna release it into the wild.
Looks to be some variation on Conway's [Game of Life](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life).
Do not every do a `sudo pip install` of anything. You'll break your system. Installing system-wide packages through apt is okay-ish, but you're limited to the packages that Debian supports, and are likely to hit conflicts between versions required by different projects For new stuff I'd probably look at using pipenv: https://docs.pipenv.org/ If you want to manage things manually then I'd do it with a virtualenv (if you're happy with the python version), or pyenv if you want to install your own versions.
My question is as I go about converting my old Python scripts to Perl, should I be using Perl 5 or Perl 6 (on Debian)?
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://i.imgur.com/1sKSowt.png) - Previous text "you" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20ID_HERE) 
Thanks!
&gt; That said, use Perl 5... Perl 6 is a fugly mess akin to New Coke. It's the same with Python, with the significant difference that this community likes to pretend Python3 is just a new version of Python2 and we should all rewrite our codebases.
Can't you reassign True and False as well? Or did they remove that in 3?
What about f-strings?
Knowing the frameworks is different than knowing python, in a sense. Writing django apps and writing a vanilla python app are two different \(related\) skills, even though django is written in and uses python. 
Is this beginner friendly and is it still viable for veterans?
&gt; My question is as I go about converting my old Python scripts to Perl, Why stop at Perl? Just convert them to Tcl.
I thought they did that long ago in 2.x.
Awesome stuff =) Always good to see more python learning tools in the web! Bookmarked!
So can updating any software in general, and thus the draw backs of a bleeding edge system. I pay attention to what I'm compiling so I'm not too concerned.
No reason to use python 2 for new code. Plenty reasons not to.
I actually just was part of a project where I was translating PERL into Python. God damn that wasn’t enjoyable 
Well the question was if python works on Arch.. which it does
&gt; So can updating any software in general right, but this is why you use a `requirements.txt` or `Pipfile.lock`. This gives you predictability that when you come back to a project a year later it's likely to still work. You can figure that updating software managed by the system won't break other packages managed by the system, but you can't figure the same with code you wrote.
Ssh... You're not supposed to tell the new people that until they've graduated to the fourth circle! Hail Python!
https://github.com/ulope/pyformat.info/issues/50
I agree but that type of title is used all over for hooking people into stories. And yeah people think it's that easy... Lol
That is a valid stance. However, that also prevents it from being one stop. 
Better fit for /r/tinycode 
That's why we should all speak english, and only english. wait....
Python 2 is as dead as Perl. Let it rest in peace and target 3.6 but also test on 3.7.
good bot
Oh yeah? Haven't used that one. I'll have to check it out. But metasploit has a lot more than just meterpreter. It's a full-on exploitation framework, from scanning/enumerating to staging exploits to post-exploit modules. Does pupy include anything like msfvenom? Any shellcode encoders? Can you easily pivot from a compromised machine and exploit other machines through it? Is it a fully functional replacement for metasploit? Metasploit is just so solid at this point. I'd be surprised if pentesters have another python tool that can replace all of its functionality.
Thanks I do not really know how deep the rabbit hole goes. And I was not sure if it would have been possible to try and learn everything, or just focus on certain areas.
When asked how much he knows about the language, Guido answered with '8 out of 10'
I think you should always raise NotImplementedError in these sort of situations. If you return NotImplemented it could be passed around (e.g. within some data structure) before you hit other code that gets upset upon seeing a NotImplemented value instead of something else. It makes finding the location of the unimplemented code far more difficult. On the other hand, raising NotImplementedError makes it extremely clear where to look.
It's not my project, found it while looking for C-string formatting rules. I'd love to see f-strings as well since it was super helpful this morning.
Can you give an example of code where you use/need it? 
So, what's needed is an r/Python code of conduct? I don't think enforcing behavioral guidelines is impractical. 
 c=0 result = 0 def func_add() num2= str(input("")) global result result = result + int(num2) return for i in range(99999999) if c == 1 check =input("Do you want to print the result? (Type 'no' in the beginning") if check == "yes" print(result) else: continue if c == 0 result = input("Please enter your first number") elif 0 ==0 op =input(" + / - ") if op == "+" func_add c += 1 Its for a calculator, now this is only with the addition function but it would not matter of the other ones were involed, so to save some time I just typed it in with the func_add (i'm on mobile) Now somehow, the print(result) still gives me 0 as in the first line even tho the "result" should have been changed to another variable as in the func_add(). Please ignor some synthax mistakes (newbie here) 
That's what I'm thinking it is. Know of any work arounds? I couldn't find anything in the settings
A workaround would be considered a Chrome bug and fixed soon
&gt; write my external modules in Python, compile them with Rust, and call them from Python sorry, is there a typo here?
No. Using Cython you can write Python extension modules with code that "looks like Python" but it's really not. This gets converted to C, compiled (gcc?), and is accessible via the cffi. This approach uses literal Python without all the special syntax, so it's equally valid in the Cannoli compiler or the CPython runtime. If you run it through Connoli you get a Rust source file (`.rs`) that you can compile to a binary executable. Since it's a subset of Python3.6 not all operations are going to work. I think it would be neat to make it so you can keep your performance critical code in literal Python and compile it without all the special markup, and turn around and call it from Python code running in the CPython runtime. The fastest parts are compiled via Rust and the high-level parts are interpreted via CPython or PyPy.
I struggle with finding the right projects to work on too, although I do Python as a hobby. I think you just need to spend a lot of time in the brainstorming phase to think of a larger-scale project you'd like to build. It has to be something that you could probably do 50% or more of without much effort (other than time), and the other 50% would be things you'd have to learn. Any more than that and it would probably feel overwhelming and biting off more than you can chew. [Here is a github repo that has a bunch of ideas for inspiration](https://github.com/karan/Projects) Peruse through that, find something that looks doable but challenging, and go for it. But plan it out before you start coding.
I'm a python dev for a living and I don't think I've ever written a `global` variable. This is all assuming you're using python 3.5+, a conclusion I came to since you're using `print` as a function eg: `print('words')` While a lot of the code in your other comment won't directly work you do have a mostly working add function. We can change that around a bit to return what we expect every time. def func_add(): num2 = str(input("")) global result result = result + int(num2) return this will _work_ but it's not deterministic, it won't do the same thing every time. This isn't a pure function because it depends on some outer condition. Functions have the ability to use arguments: `def func_add(a: int, b: int) -&gt; int:`. `a` and `b` are both expected to be integers, but there's no enforcement for that. I only include them to help your understanding. If we were to call our finished function, we'd expect `func_add(10, 20)` to return `30`, right? Let's implement it. def func_add(a: int, b: int) -&gt; int: return a + b Notice how this doesn't access anything external to the function. You can call it from anywhere, and it'll always return what is expected. This is called a Pure Function. We can emulate globals by passing in result to the function call: num2 = input("") result = func_add(result, int(num2)) It's important to note that `input` always returns a string in python3, so re-casting it isn't necessary. This just scratches the surface of what you're trying to do, but hopefully it helps. The `def func_add(a: int, b: int) -&gt; int:` is exactly the same as `def func_add(a, b):` The extra bits are called type annotations, and they're not required or used at all in python _yet_. They're mostly helpful for editors and static code analysis, and I love them. I suggest you check out /r/learnpython , it's a subreddit just for questions like this!
They couldn't fix it in 2.x because of compatibility - code from before the builtins were there often assigned those names to appropriate values, and needed to not crash because of a language change. They are keywords in 3.x though.
What do you do for fun when you're not programming? Build an app around whatever that is. Don't worry about it being sophisticated, catchy, marketable, etc. Also don't worry about piling in a bunch of features all at once, just put in a few things that will be useful to you and then iterate to build a more complete feature set. For example, I know a kid who's hoping to do an internship in a web development agency after he graduates from high school. He plays a lot of Hearthstone, so I suggested he make a card manager application. Sure, there are a hundred out there already but if he builds his own, he'll learn a lot of valuable skills. If you take this approach, you'll have something you can actually use that you'll have some incentive to maintain. You'll learn useful and productive habits like making incremental changes, tracking your work in source control, recording and prioritizing changes you want to make in the future, in addition to just becoming a better programmer. Don't be afraid to experiment but also try to discipline yourself--the goal is to improve, and you improve by producing working software. Don't hesitate to get involved with open source projects. Contribute to projects you actually use (you'll become more familiar with their internals with time and use), starting with low-hanging fruit. Take feedback with honesty and grace and don't be discouraged if maintainers ask you to change your approach to adding a feature or fixing a bug, or reject it outright--it's all a learning experience. Good luck!