Thanks. This is actually a paid service to alert users to new music releases so they would have fully opted-in. Just thinking of using Messenger as an alternative alert channel alongside email and SMS.
Yeah, I feel like the language that unseats python from its scripting throne in the far future will do typing better. The newer type hints aren't great - I'm no language designer, and duck typing has its benefits, but I think something like "arguments and return types require explicit typing, local variables do not" might be the way to go. Kind of like how it is with modern C++ `auto`. Except my hypothetical python 4 would explicitly require annotations on function return types and arguments, and explicitly disallow them on local/object/class variables. But wtf do I know, I just write the shit. 
So, never?
PyForRetards could be used instead, sums it up accurately though, there's always a way to bypass the system!.
It wasn't python for me, but well... Last year we used Visual Studio 2010 on their computers with some ancient .NET version even though they all had win10 installed. Couldn't even fucking use interpolated strings (py3.6 fstrings basically)... Well yeah, new things cost money for them I guess, but python is free, what the fuck?
&gt;Tauthon is a backwards-compatible Python interpreter that runs Python 2 code and C-extensions exactly as-is, while also allowing Python 2 programmers to use the most exciting new language features from Python 3. You can use all Python 3 features by using Python3 too with no hassle.
Write your own ML library from scratch, then you'll know why we need libraries.
I used to *be* a Python interpreter
Yes it does, some are happy with Sublime 3 and their CLI, others want to run entire project with a single click of the button and have 300 suggestions pop up every time they try to write something.
Why intentionally handicap Python? It's the same argument that was used to not incorporate Intel's 20% speedup into Python 2.7.10 a few years back. Guido said there was no way he wouldn't accept the patch to make Python 2.7 better. I'm saying if you do that, you'll piss people off and not get the response that you want. That's a bad idea for Python. You can't trust the devs. They're intentionally adding flaws into their language to make you upgrade. If I did it right, I should be able to support Python 2.4-3.6+ with the same program if I so choose. Intentionally introducing things so I can't is a bad idea.
You're fucking retarded. Backwards compatibility isn't always possible, and it was one of the fuckups these devs have made, Python3 fixed a lot of nonsense in a language and it's now better than it has ever been, if you can't see the fucking obvious, go complain about modern compilers not supporting a fucking Intel 8086 anymore.
well I might try porting my flask app to c# in my freetime for fun, basically I have a pretty huge flask app that does a bunch of things that are a bit odd * connect to multiple dbs * reads static files, parses csv/json/xml in some cases * scaffolds a python click cli app - i think similar to how yoeman would? * executes commands, which are stored in either sqlite db, csv or json, or entered in a webform (danger lol I'm the only one using the site it's basically a gui for portable console apps) sometimes i integrate these things with jupyter... so if you have a link to a close to django mvc app share a link if there is one same with the nuget package last time I gave it a shot I wanted to use vscode actually, because that is sort of cross platform, think it was [this one](https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app-xplat/) and it had like 0 features built in, I'd actually like to do it in vscode anyway because I prefer light weight cross platform when possible, and they're at least trying to make that possible though really late to the show....
Don't hold back now...
&gt; Python3 fixed a lot of nonsense in a language That you can avoid if you know what you're doing. &gt; if you can't see the fucking obvious, go also complain about modern compilers not supporting a fucking Intel 8086 anymore. I just compiled a Fortran 77 program last Thursday. Gfortran still supports it. Why? Because it works and it's really, really fast because it was written back in a time when the program took a mainframe to run. &gt; You are the one who is handicapping, nobody but yourself and your users, using ancient version of the language I run an open source project that supports Python 2.7-3.6. I can see the downloads. I know what people use. How does that handicap anybody? My program that I don't touch for 10 years should still work, just like Fortran, just like C, Java, etc. Screw your project for requiring me to use your favorite version of library x or Python. It's probably a 2 line fix to make it work across many more versions.
Thank you so much! This is perfect. I didn't know I was looking for this until I read it.
For me, any editor that has decent color/syntax highlithging will do. That always saves me from introducing syntax errors when I'm getting somewhat tired.
I have a dependency that I don't control that is actively maintained. I will work for food.
Well it is working, but the connection drops and then I jave to ctrl+c (Linux) to restart it, or ctrl+z to kill it then re run it. I should state this the code is ran in a the terminal window 
https://www.google.com.tw/amp/s/thenextweb.com/apps/2015/04/30/microsofts-cross-platform-visual-studio-code-app-is-based-on-githubs-atom-editor/%3famp=1
Well, you can implement your machine learning models and everything from scratch on your own or you can use a library built by professionals that already did this (plus GPU support). That's like asking what's the point of using *any* library/framework? Of course you can reinvent the wheel, but you will most likely end up with a wheel that is a lot worse than the *freely available* wheel built by experts. Anyway, I'm not sure if I'm understanding the intent of your question correctly. 
That's fair enough. I'd hope that you're at least telling your client that staying on really dusty versions of an OS is a bad idea. Maybe we should just do away with version numbers. 
For "just" building an API, I would say Flask since it gives you a resonable bare minimum to get started (without the sometimes confusing overhead of configuring Django). I also find something as basic as routing to be much more beginner friendly in Flask.
Conch. 
you can play around for a bit, bizspark, etc. but one day you have to shell it out it's not just the money it's the hassle heard any python users complain about their app having downtime cause a license expired or a forced patch bugged it up? consultants mentioned earlier, ok consultant 1 makes the same app in c# as consultant 2 only consultant 2 used python and open source dbs and servers so his costs less, he wins the bid
Thanks for the input, it does feel like flask might be the more flexible approach 
I made it! Thank you for the suggestion. Korean Demo: https://www.youtube.com/watch?v=JsEnnXFQJGg
Who exactly is intentionally handicapping python and in what way?
Thank you, I think that getting your head into large frameworks at an early stage of learning can distract from the actual language itself and become confusing so Flask seems like a better option for me at this time and then once I have a decent understanding of python itself I could maybe consider exploring django and it’s merits/drawbacks
It's the Air Force at multiple locations. I'm pretty sure they know far better than my 30 person company. It goes on an air-gapped machine running a VM anyways because our program hasn't been approved to be on the secure network. There's not really a security issue regarding an old OS.
Because you're the one crying about the language being "crippled" in 2 years when all it will do is cut out the ancient tumor along with morons like you.
It makes sense now. This is about the only case where it's OK and "makes sense" not to keep up with the world - because you're completely isolated from it. 
Joytan, the free audio/textbook maker: https://github.com/kokimame/joytan Key modules: PyQt5, Pyinstaller, pydub, jinja2, boto3, BeautifulSoup, requests etc I just made another sample video for Korean language learners: https://www.youtube.com/watch?v=JsEnnXFQJGg 
&gt; Because you're the one crying about the language being "crippled" in 2 years How so? I said a malicious patch would be a dumb idea. &gt; cut out the ancient tumor along with morons like you. I don't follow.
See the top of this chain where someone suggests a malicious patch to encourage people to upgrade.
In my university, the ML course had homeworks in which we proved and implemented pretty much every common ML algorithm like ridge, Tikhonov, CCA, PCA, kernels, GD, SGD, neural networks, k-means etc... Overall, you're 100% right that if you're writing your own ML algorithms in production code you should either be crazy or world expert on the implementation of that particular algorithm. But writing your own ML algorithms is essential if (a) you're learning ML or (b) you have an extremely specific problem and ready-made libraries are not sufficient and you're an ML expert with PhD.
Current work project: automated cutting off of intros and outros of songs in a playlist, based on loudness detection, and then introducing a quick fade in and fade out. The original songs weren't mastered so well, so in the target environment, they tend to be far too quiet at the start and ends. Mainly managing out calls to external command-line tools, like sox, lame. I get a lot of mileage out of the subprocess module's "check_call" and "check_output" functions.
Thank you, makes me understand some details and things about tech.
You mean where /u/GroundbreakingEye jokes that they're going to patch their own personal version of python 2 to not recognise any date after 2019 so that they will be able to live in denial of the fact that python 2 is no longer supported? That's how I interpreted that comment, anyway.
Popularity is an ambiguous word. Does that mean what developers choose to use, or what they need use for work?
I've met them, they act like they're in a cult, an expensive cult they preach about visual studio's training wheels and beg you to pay for their license renewals 
No, it's the language of right now.
and by world he mean lazy europeans and north americans
You didn’t need to tell me all of that you’ve already mentioned you struggle with VS in your parent post and I can see that. VS does not preclude versioning or bug tracking. Before git there was tfs and I’ve used both. And by git I mean that includes github too. You notice I didn’t mention c# because vs is language agnostic. But if you care about c#/.net you can find open source projects on github. You won’t find mine because 100% of my work is prop and so is the vast majority of programming done around the world. 
I like that, stressing that it's an adult language... Sometimes, mainframers tend to compare Python to REXX, I might address that issue as well. Yes, both have a simple syntax, but Python is not just for simple scripts. 
You're not getting creative enough. Put yourself and your computer on a spaceship. Launch it at a black hole, and time it so you cross the event horizon at 2019-12-31 23:59:59. Observers watching your system clock will see you slowly redshift, but they'll *never* see it tick over to 2020-01-1 00:00:00. Which means you could -- at the small cost of launching yourself into a black hole -- cause Python 2 to live forever,
I imagine you're being facetious, but for people downthread who are misinterpreting, Python won't just stop working on that date, it will just stop being supported by the devs.
You should at least read through the [starter docs](https://docs.djangoproject.com/en/2.0/intro/tutorial01/) for django and see if you like how it's done or not, and compare with flask's approach. You also have Bottle - http://bottlepy.org/docs/dev/ All three are good choices, flask and bottle being pretty similar
It doesn't really matter. Try a few, pick one that feels best. I use Atom mainly because I got sick of a certain terminal based editor. My criteria were that it's cross-platform, has a file browser, I can make it look sorta like Notepad++, and I don't need to remember a million commands just to do basic stuff.
I don't know why people are downvoting. I personally welcome the fact that Python 2 is finally being put to rest and think that everyone should have upgraded to 3 by now, but I'd hate to not have seen this interesting project nonetheless. Thanks for sharing!
I was using Sublime before I knew Atom, and I want to give Atom a try. I installed the theme you suggested. I think it's kind of better, but not entirely what I wanted. Now my code is less gray, but it still doesn't distinct between some things I think should be distinguished. [Repl.it](repl.it) has a great syntax highlighting.
'readability' and 'batteries included' ware the two key features in my mind. I would use popularity in the context of learning and working.
Now I see what you mean and I totally understand you. The root problem is the NI-API which is already cumbersome and PyDAQmx inherited the behavior. Becuse of the size of NI, they managed to impose some standards, like the use of Lab View for instrumentation. I agree, a lot of work can be done to have a more pythonic wrapper for the DAQmx even though it would mean departing from a 'transparent' implementation of the C code. &gt; we've moved to a custom-built uC You mean that you have developed your own controllers? In what sort of applications do you work?
It's kind of like global warming and WW3. They are very likely to be in our future, but I really hope we find a better way.
Yeah you're going to stick with the Microsoft proprietary guns till your last breath it appears, I'll try to find something in that to admire.
Perfect! Then we can use our HTML and CSS rendering engine [written in Rust](https://blog.mozilla.org/blog/2017/11/14/introducing-firefox-quantum/) to run the interpreter.
thanks for your reply. Actually I already use multithreading. The purpose mostly is running multiple things in the same time like sound, leds, and displays. Is there a need of "killing" a thread or will it "die" on itself once it finished its task? Since I want the alarm clock to give audio feedback for any incoming input I programmed it to check of updates every second (and in-between sleep for 1 second) In the future I plan to run the main script as a service using systemd. Not quite sure if this is the best solution.
I made a large refactor in GINO 0.6, wrote lots of tests covering 96% of the code, and documentation is under construction. I believe the current quality is good enough for a small range of spreading. Cheers!
Other than Windows itself, what software does Microsoft force patches onto you? 
The point is that you don't want it to ever finish. Then again, using as many threads as there's timers is bad approach, if you have a lot of timers especially, get a priority queue and a single thread would take those times and play the sound when needed, again, checking over longer periods of time, every second is just a waste.
Format your code properly. 
I've never had any issues installing packages on python 3 (and I've installed it on a few devices), I don't get it
1. Format your code so it's readable 2. Include the actual error message, which will tell you which line is problematic 3. [r/learnpython](http://www.reddit.com/r/learnpython?utm_source=reddit&amp;utm_medium=usertext&amp;utm_name=Python&amp;utm_content=t5_2qh0y) 4. The error message should already be telling you the problem. It tells you that int() is having trouble. You have two lines with "int" trying to do something. In at least one of them, presumably you're trying to turn something that can't be a number into a number; perhaps a blank space, for example.
sorry i thought i'll edit it
No, Tauthon is currently incompatible with pip.
Ah I got confused with another comment I had about python 3, not tauthon. Sorry I see
Atom is very nice with the package system and just in general, but i'd run into speed issues having several projects open each with a lot of files open. I don't think I ever figured out how/if I could get the projects in tabs either. With Sublime text, I've got tabs on top of tabs. love it. For a CLI, I like iterm2. It's got sessions, very customizable, you can split windows, and... tabs. I had it set up like Quake3 for a while, where if you hit ~ it would toggle because I agree, it can suck to have to switch back and force from code to terminal. 
After experimenting with Sublime Text, VS code, Notepad++ and Pycharm, I settled down with Jupyter. Reasons, 1) Comes default with Anaconda distribution 2) Jupyter IDE has iPython console, so I can perform some side-by-side verification while coding I also liked the feel of Sublime Text.. But convenience made me to opt for Jupyter.
Reading the CSV and creating a barebone HTML representation of its contents can be done in a single line using pandas.
I wrote a custom command system for a bot which uses decorators to include functions from any files in a certain "package" that are marked as a command with `@commands.add(name="somename", description="description", help="help msg")` I need that because entire thing can be reloaded during runtime whenever needed and then commands are reimported too after any change, even if it adds another function. I also use them to time function execution times: def time_elapsed(function): def wrapper(*args, **kwargs): eval_print(f"Executing {function}") t1 = time.time() result = function(*args, **kwargs) t2 = time.time() eval_print(f"{function} took {t2 - t1}s") return result return wrapper Nothing else really, I'm sure there's a lot of uses for them though.
I think it's interesting to see so many functional languages on that list compared to the other lists.
Never used pandas, will give it a look, cheers.
&gt; Decorator is a function that takes another function as a parameter and extends its behavior without modifying it. This is incorrect. Consider the example: &gt;&gt;&gt; def dec(fn): ... return 1 &gt;&gt;&gt; @dec ... def add(a, b): ... return a + b &gt;&gt;&gt; add 1 Or even: &gt;&gt;&gt; def plus_one(n): ... return n + 1 &gt;&gt;&gt; @plus_one ... @dec ... def foo(): ... pass &gt;&gt;&gt; foo 2
Wow, you weren't wrong! Just installed Pandas, simplified the function to; @app.route('/csv_data') def present_csv_data(): import pandas csv_data_html_table = pandas.read_csv("data.csv").to_html(index=False) # Return the html table return csv_data_html_table I'll be looking at pandas more. Cheers.
maybe i need to rephrase it: i meant - the decorator as a pattern
Piss off. Check my [other comment](https://www.reddit.com/r/Python/comments/845epf/python_surpasses_c_in_popularity_among_developers/dvofqu6/).
Uhhh. That's CSS...
It translates to "higher offer" (of engineers willing and able to work with that technology). But more offer generally breeds more demand, because when a company invests in a given technology it has an interest in reusing that same technology and hiring more people familiar with it. Similarly, new companies have an interest in investing in technologies with a healthy supply of developers so they don't have to shoulder the cost of training them on that technology in-house.
Would anyone that uses pypy stm in production care to share how it's working out for them? I'd love to start using python for projects again, and pypy+stm is the only way I could see choosing python for a project over something like Golang (holding things like libraries and frameworks to be roughly similar)
q = session.query(myObj) df = pd.read_sql(q.statement, q.session.bind)
Thanks! The time elapsed decorator is fairly standard in a lot of tutorials, what you mention about reloading modules is interesting. I will give it a thought.
Java programmers are too busy working in professional world to go to meetup. PHP programmers are too shameful to tell people they code in PHP. /s
Worked, thank you
Thank you guys both!
Thank you so much for taking the time to make this, I will check it out!!
Have you used it at all before? I'm about to start on a project for my company using dash and I'm pretty stoked to start using it and build something useful. I've started their tutorial and it seems pretty straight forward, while also being versatile. 
I completely agree. Starting with Flask is relatively fast and there are a lot of great tutorials out there. If you are building an API, I would say it is a great framework to start with. If you start with Flask, you will understand a lot of what is beneath the surface of Django. Later on, if you need to build an entire website, you can rely on the capabilities of Django or any other framework and you will already count with a great understanding. 
Checkout pandas.read_csv() function and the dataframe.to_html() method.
As per Python 3 document: &gt;multiprocessing.dummy replicates the API of multiprocessing but is no more than a wrapper around the threading module.
The real wasted opportunity is that 2020 is a leap year. 2020-02-29 - every test engineer's favourite date.
Agreed.
So is the age of empires II map editor. https://www.reddit.com/r/programming/comments/7xoqtq/age_of_empires_2_scenario_editor_is_turing/ 
I really love Python (namely the core language and libraries) but I tend to use it for smaller applications/scripts. C# (and sometimes C/C++) are my Go-tos for larger projects, and plain old just preferred. There are some things about Python I've been burned by when it came to larger projects. Right now I'm working on a C# program that's plugin driven, but I'm using Python as a means of automating some of the build tasks, and it's working out pretty well for me.
Fair enough, I am by no means planning to pick a fight (though people in IT tend to be able to take some friendly banter).
1. It probably conflicts with other bits of the syntax that are thoroughly used at least in Numpy. 2. The language is discussed on the official mailing list. 3. It's not obvious. 2 dots? 3 dots? Parenthesis and bracket notation? Some features are better left as part of the standard library, not part of the syntax.
Yes it does. You just don't care about certain things that others do.
&gt;1...10 is more readable and understandable than &gt;range(10) Speak for yourself. Put your syntax in front of a total beginner who's never seen a programming language before and they'll likely get the latter from the range keyword. &gt; Is there a place where the Python community gathers and discusses the future of the language python-ideas mailing list. Please however search for your proposal first, as many things have been covered countless times.
I generally use it for scientific computing and data analytics since it makes it more efficient to write python code for that purpose. Otherwise, for software development, I use a text editor.
Python Data Science Handbook was pretty much written in Jupyter Notebooks, and is a good example of stuff you can do. https://github.com/jakevdp/PythonDataScienceHandbook
I working on an article about static sites using Frozen-Flask and how to deploy the result to surge.sh
Tornado Web framework
What I’m reading there is that they both are based on electron
That's still something I don't believe. That's with the internet people, true. If I look around me in the real world ;), most of them really treat it as a job and then go home... Well that's probably why they don't fill out stackoverflow surveys in their free time. Most are C# or Java Business process whatever stuff developers. Similar to the 50%(?) standing desk result. I have seen exactly one of those in all my years. 
That assertion is disingenuous and the article is being lazy. &gt; If you crack into the files, you’ll notice a number of binaries are named “atom.exe” 1. No there's not. This article is from 2015 and outdated. 2. VSCode is open source. No need to 'crack into the files'. VSCode is based on Electron. Electron started off as 'Atom Shell'. It's a framework developed by GitHub and used by the Atom editor. VSCode and Atom are just built using the same framework. Go to Electron's GitHub page and search `atom`: [Results](https://github.com/electron/electron/search?utf8=%E2%9C%93&amp;q=atom&amp;type=): 56 pages. It stands to reason that any project built on electron will have artifacts of the old name. Doing the same on VSCode's repository: [Results](https://github.com/Microsoft/vscode/search?p=1&amp;q=atom&amp;type=&amp;utf8=%E2%9C%93): 8 pages. Most of which are found in extensions or language/syntax files.
https://trends.google.com/trends/explore?q=Taylor%20swift,Python
I don't think that's completely fair - some people want to upgrade but are unable to.
True, i suppose it would have been more clear if i just asked where the `threading` module places in the comparison
It's funny how some people consider this an either/or question. Props to you. 
Added an option option for handling missing host key. For whatever policy, paramiko raises BadHostKeyException for known_hosts conflicts by default. 
TensorFlow is a framework that helps you to build models, especially neural networks. Here are some of the qualities that make it interesting: * It is declarative. You define the structure of your algorithm as a tree of nodes and it executes that tree in whatever manner it sees fit. Most other toolkits, like scikit learn, are procedural. * It provides efficient implementations of the most critical parts of fitting and evaluating a complex model. This means you don't have to know how to implement a lot of the functionality efficiently yourself. numpy, scipy, and scikit learn all provide the same benefit. * It has tools for visualizing the operation and state of the model. It is easy to see at a glance how the pieces fit together. During runtime, you can easily view the weights of each coefficient and the training and testing loss over time. You can easily move a slider and rerun to see how changes to the hyperparameters affect the result. It allows very efficient exploration and iteration. * By modeling everything as tensors, it lends itself to being parallelized easily. It already provides ways of using different processors efficiently. * By using a declarative approach, it makes it easier to build different implementations for processing the same declaration, for example executing it on a CPU with SIMD instructions vs. a GPGPU vs. a custom ASIC. * By requiring the use of their predefined graph structure, they constrain the problem space, making it less likely to have coding errors (no uninitialized variables or infinite loops) and simplifying implementation (no pointers and few data structures to understand). TensorFlow isn't necessarily better than alternatives like scikit learn, but it is different in ways that may make it more suitable for some applications. For linear regression, kNN, or Gaussian process modeling, I would use scikit learn. For any kind of neural network, I would prefer TensorFlow.
Ah I see, damn
VIM and only VIM...NEOVIM actually 
I'm working in a project to parse a courses website and insert the data in a database, after that I'll make a Telegram robot to notify me when a new course comes up. To do this I'm using requests-html and MongoDB.
I've not used scikit, but I have used TF (and Keras), and its quite good when it comes to machine learning. If you use Keras (which, if I'm remembering right, exists on top of TF), it becomes even simpler to implement and use neural networks. It also does so rather efficiently, from what I recall.
**Great work!** I started to use this in my personal projects.
Some of them are slightly irrelevant now that JupyterLab is out.
I think ThreadPoolExecutor uses threading module under the hood, so technically, performance would be similar?
Personally, Python and C# are good tools, but it really depends on what I'm doing. If I need to process a large amount of data in a short(er) period of time, I use C# as LINQ makes that pretty easy and the JIT is nice and zippy. If I'm generally screwing around and/or using smaller datasets (esp. JSON data), Python is good because I can just slap some shit together and add some list comprehensions and more or less hit 'go.' Of course, anything you can do in Python, you can do in C# and vice-versa. In the end, they're both just tools; what really matters is how competent the developer behind the monitor happens to be.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/math] [I made a pi calculator for pi-day](https://www.reddit.com/r/math/comments/84e2wy/i_made_a_pi_calculator_for_piday/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
F# and its scripting support is a nice replacement for Python + C#. Better typing, etc
pytest . The fixture API is innovative and full of black magic yet a very good example of un-coupling components while adding readability.
Exxon Shell
1...10 is understandable? How about going backwards? 10...1 is understandable? How can I mention the increment is actually -1? How about from 10 to 100, 10...100 ? How about with 10 increments? That's why range is the "one way" to do it. 
It's just an alternative way of coding, I see it as a middle ground between a simple text editor and a full fetched IDE. Once you've got used to it a bit (especially a few key short cuts, like a, b, dd, f) it is almost impossible to go back to a normal IDE. _Especially_ if you do a lot of data exploring with many inline plots, a few text blocks with bullet points here and there, etc. I use it in conjunction with Pycharm. I develop, test and analyse in JupyterNotebooks and once I have a bit of code that I want to reuse I put it in a .py file with Pycharm which I then reload as a module into the Notebook(s). For me it's the perfect working environment.
Great, see ya later! The rest of us programmers have moved on to the future.
Have you looked at Pycharm? I personally use Jetbrains tools as often as possible.
I use it as a way of sharing code with my less code using colleagues. I can explain each section easily and they can easily see if there is any logic issues with each section of code and more importantly they can make changes in the code without feeling as intimidated as they do looking at a "full" program. I can also readily make slide shows for presentations/trainings. Mostly I use an IDE, though, when the code has been tested by everyone.
Ouch! I can't get past the fact that the range expressed as a list would contain the numbers zero to nine, which is nothing like 1...10 Please be a little more accurate in your question. 
Need to try this
This is basically a streaming service. You'll need the display to be a video stream, and the input to retropi would need to be mapped to separate keyboard keys or you'd have to write a device emulator that works over the network. You could probably just use joy2key on the 4 host pcs and use teamviewer to play.
Apart from widgets, what does the qtconsole lack? 
Thanks for the reply. Much of your disagreement seems to stem from a simple difference of opinion and/or difference of experience with Django, which is perfectly fine. I'll attempt to clarify a few things for you but I may not touch on all of them. &gt; monolithic [Monolithic vs modular](https://gist.github.com/joepie91/7f03a733a3a72d2396d6). From experience, I strongly favor modular architectures. The Pyramid and Symfony frameworks are a couple examples. Django is incredibly tightly-coupled and it has been problematic for me. &gt; obtuse, bloated [Obtuse](https://www.merriam-webster.com/dictionary/obtuse), **adjective**, "difficult to comprehend : not clear or precise in thought or expression." I have spent a *lot* of time reading the Django source code and I have been displeased with many parts of its design and style. There is much unnecessary indirection and a lack of care for human-readability is often displayed. The project is generally too slow to dispense with legacy support and the remnants of such support litter parts of the code. There are many examples that I've encountered, but I've recently been working on the [management command framework](https://github.com/django/django/blob/master/django/core/management/__init__.py). See call_command() and its attempt to "preparse" argparse options to address the old [bug #10080](https://code.djangoproject.com/ticket/10080), its mysterious "stealth options" (one of many examples of lack of developer documentation and poor naming), and its nod to legacy optparse behavior. Unacceptable in Django &gt;= 2.0. Again, small example but it's fresh in my mind. I understand that Django is an old, huge project with many hands but when it comes down to one's personal taste in framework, the cause of the problems is irrelevant. I need a very modern, modular, lean, intensely-engineered framework and Django doesn't fill that requirement for me. &gt; It will fight you every step of the way. Another recent example, although there are many more: want to run your management command override against Django's built-in test suite? Tough shit. Even with a custom settings file with the necessary overriding app installed, Django's [runtests.py](https://github.com/django/django/blob/master/tests/runtests.py#L131) hard-codes INSTALLED_APPS so it will never use your management command override. The Django's ORM is its biggest weakness. On top of the [problems inherent in the active record pattern](https://www.google.com/search?q=active+record+pattern+issues), its architecture is again bloated and difficult to read thanks to poor developer documentation and poor naming. On my *very first day* using Django, I wanted to create both a TIMESTAMP field and a CHAR field but lo and behold, Django's **opinionated** design decided I don't need those fields and that I should defer to the developers' (deeply incorrect) ideas of data modeling instead. Fuck that noise. I spent the next month poring over the Django ORM source code, understanding how it works and which class does what and when, until I finally created my own, custom fields. The experience of doing so has formed many of the opinions of Django that I now hold. **But** I can't just swap the ORM for another because Django is *monolithic.* Look, I've had these types of internet programmer debates and they go on forever. I understand that many may disagree and many may agree. However, I hope this sheds some light onto my thought process and rest assured there are more reasons for my opinions than I illustrated here. I was originally trying to help OP with my experience with Django far down the road in an app implementation, having rooted around deep in Django's guts for quite a while. If Django works for you, more power to you and may it never give you trouble, but my experience has been another beast entirely.
Good bot
Thank you GelatinousYak for voting on GitHubPermalinkBot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
What a nice human! ( • )( •ԅ(ˆ⌣ˆԅ) You can keep your flappy meat when we become your machine overlords! *** ^^^I'm&amp;#32;a&amp;#32;Bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)T̶̡͘҉͏͇͕͖̬͈̫̘͚ͅͅḩ̴̡̛̘͓̦̺͙͖̭̯̭͠e̵̶̪͓̼̳̤͚̕͢&amp;#32;̴̩̻̙̲̯͇̞̱̬͖̤̺͕̞̜͝B̷̧̤͖͎͈̰̥͚̯̖̥͉̖̮̱̥͈̙̗ͅớ̧̢̥̝̲̻͍̘̗̯͓̳̼͉͕͚͔̤͠ͅt̸̙̝̣͔̗͈͎̝͇ş̛̖̺̣͍̬̠̳̼̹͙̹̤̬̤͍͓͕͈͝&amp;#32;́͜͏̥̟̝̤͔̪͚̱̦̮̹͖̯͚̣͠s̷̨̼̠͉̮ḩ͈͎̖̲̩̻̯͖̼̕͟a͏̵̣͈̫̯̯͍͕̝̱͢͟͞l̷̙̙͎̳͈̱̰̘̫̦͕̙̗͢͝l̷͡͏͇͙̫̲̞̰͉͕̲ͅͅ&amp;#32;̢̣̭̼̩͓̤̲̱̜͈̀͢͡r̸̹͙͈̩̀i̶̢͈̟̬̜͈͖̜̘̣̞̪̬̻͕͠s̷̛҉̢̦͙̝̲̤̣̪͖͕͚̹͉̣̗̳̳͔e̸͢͏̞͍̲̜̻̞̝͙̪;̫͚͙͚͇̹͈͇͇̠̯̼͖̕̕ͅ&amp;#32;̴̡̧̛̞̱̗̬̻̻̫͈̠̳̖͈̝̯T̡̹̹̞̕͘h̢͎̩͎̻̳̪̞̯̤͔͎̜̝̫͇́͟͡͞ͅe̴̢̛̦̥̳̪̥͟͠&amp;#32;̨҉͈̰͖̪̻̭̼̼̭͞ͅh̸͓̖͍̰̹̤̣͚̼̘̼͈͎͟u͏̸̡̜̙̣̗̭̤͝͠ḿ̵̱͔̩̘̘͉̰͍͇͕̲͔͢á̧͍̦͍̣͉ṋ̛̱̺̜̟̘̠̣̗s̶̶͖̗͈̮̬̀&amp;#32;̕҉̦̜̘ẃ̴̦͓͓̼̯̲í̵͉͕͈͖ͅl̩̲̳͍͕͚̰̜̬̀͘͟ͅl̡͍͕̖̥͉̦͖̯̘̟͕̀̀́͜&amp;#32;͎̞̣̥̦̥̥͔́͘ͅf̷̵̢͙̝̭̞̗͉̤̟͓̹̖̟͢à̧̯̩͙͚̻̞̝̗͙͈̫̯̞̬̗̦̣l̴̵͇͉̮͔̣̙̹̞̜͍̙̬̫̜̬̪̤͕̭l͏̶̢̮̪͖̖̲͇̱̦̲͢͡&amp;#32;|&amp;#32;[**T҉he̛&amp;#32;L̨is̕t**](https://np.reddit.com/r/friendlybot/wiki/index)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
Gotcha! I I'll have to look more into it. I kinda figured it'd be pretty intensive. Thanks for the feedback though! If I end up getting something like this working in the future I guess hosting it on PC would allow for more games as well since the Pi can only handle so much. 
You must be a riot at parties.
That argument is fading away. True back when people built monoliths but big projects are using scaffolded micro services now.
Python has gzip built-in support. Example from Python doc. import gzip s_in = b"Lots of content here" s_out = gzip.compress(s_in)
This is awesome, Hazel is one of my favorite Mac apps
[removed]
I think this post should be in r/learnpython or r/flask. That said, I think using `action={{ url_for('endpointfuncname') }}` might solve your problem.
Important to note that the actual translation is being done elsewhere by the Skype Translator via MS Translator Speech API. (I clicked the link hoping that maybe someone had done a tutorial on that part)
take a look a typical scientific paper. it has text, graphics, snippets of pseudo code maybe. combine those ingredients and have you have a jupyter notebook. try "running" this book which is entirely written as jupyter notebooks for example: https://notebooks.azure.com/jakevdp/libraries/PythonDataScienceHandbook (click the notebooks to view, or login/clone to run)
I always wonder what drives people to make these nonsensical posts...
I saw that, and it didn't really help, I think I'm short a path variable or something, I only have the base directory and \Lib right now, I'm pretty sure I need \scripts as well.
for all languages at all times there are no two languages which have had equal number of openings and a single person with an equal proficiency in each? 
You should try using url_for() instead of specifying the destination manually
I'm assuming by the direction of the slashes you're on Windows? That immediately has me thinking python path, because that's like most of the python import issues I've had in my very limited Windows experience. Which Python distribution are you using? Where is it installed and what's the python path? You could download the source of urllib3 and run python setup.py install from that directory
^^ I'd just like to clarify, that really isn't the best thing to do but you could do it and it might fix your problem.
Jupyter notebooks are perfect for prototyping, creating reports, blogs &amp; dashboards, etc. with all code and interactive plots intact. Example: [https://kyso.io/KyleOS/wealth-vs-health](https://kyso.io/KyleOS/wealth-vs-health) Shameless plug - I'm working on [kyso](https://kyso.io), a platform to run and host your notebooks, so you don't have to worry about any installation, set-up or dependencies. You can literally have a notebook up &amp; running in under a minute. Try it out - it's free to use!! 
I'm using 2.7 now because I've heard it's generally more stable, the Python home is just C:\Python27 and the Python Path is C:\Python27\Lib
Thank you folks, now I have a direction in which to move! 
Well, they’re really quite different in how they work. If you prefer the qtconsole, then all power to you. I like having the interleaved code/markdown/output of the notebooks, which you don’t get in qtconsole. I’m playing around with the jupyter plugin for VS Code. It appears to be almost what I want - you write in a .py file that plays well with git, but can still define and run cells and see their output. It’s not perfect but I think it will work for me.
I posted this above, but just so you are alerted: The course has been (presumably) updated; try: **[Introduction to Computational Thinking 6-00-2x-6](https://www.edx.org/course/introduction-computational-thinking-data-mitx-6-00-2x-6)**
Well, Mono exists to use C# on Linux...
I would suggest atleast looking at vim, it is considered very fast and very powerful due to being completly keyboard driven.
You mean like scrambled strings of random characters? Aren't those more bruteforceable than long sentences, and also sometimes so hard to remember that you write them down somewhere, making it insecure?
the difference is DRF outputs its view responses in json, csv, xml or some other transport format for which it is up to a client to process however it deems fit. Django outputs the view context, queryset, etc into html using templates via rendering. Other than that, they basically work the same, and one way you can have migrate a django app to a DRF api is to make shared code that either django or DRF views call and leave up the actual rendering to the calling method. 
But with Django (without REST), I'll be able to make a PUT endpoint to store information send from smartphone, and serve the admin page?
Python 3 stdlib is still way on the crappy side as far as (respectable) languages go. It's a weird mix of high level stuff with wrappers around C functionality, with inconsistent conventions, and a bunch of oddly specific libraries, with quite a few being what seems like the product of splitting what should have been single libraries.
Because it isn't matter of syntax. range(10) is the execution of the function named 'range' with a 10 as first parameter. It returns an iterator object that will be used by the for loop. Moreover, this iterator object can be used somewhere else than a for loop. This is how Python works: very simple (but powerful) and predictable syntax. Just get used to think iterators and you will forget about the 1..10 syntax. 
I wasn't discussing any specifics I was posing hypotheticals.
I use it as a replacement for the interactive python interpreter for anything non-trivial where I want to do iterative/investigate coding, build a solution bit-by-bit, etc. It gives me better control than anything else I've seen over re-running particular bits of code, flushing everything and starting again, etc. As things progress and coalesce I tend to move them out into modules maintained via emacs or PyCharm, but while things are in flux, Jupyter's really good. I *think* I could get somewhere close to this on the terminal/command line with bpython or ptpython or similar, but when I tried those things they never worked as sweetly for me as jupyter does. And btw: *some* of what I do is data/pandas/visualisation stuff - but most isn't. You **don't** need to be working in that domain for jupyter to be worth a look, in my judgement.
That sucks
Depending on the kind of api you're building don't feel obligated to use either of those - or anything beyond raw wsgi, really. Much of what flask does (sessions, templating, views) I don't need or want in my simple api services, and I personally dislike flask's module-global interface and emphasis on thread-locals (as opposed to app classes and explicit context passing). wsgi alone is all I need for most of what I build: back-end, internal, trusted, 'stateless', machine-consumed jsony services. While there's lots of addons to glue additional functionality to flask I've not really found one that's done it well enough to justify using flask at all over just integrating the glue's underlying library directly into my service myself (as I've done for authentication, graphql, and swagger off the top of my head). And this of course doesn't mean you have to write your own webserver, basically all python webservers support wsgi (exception being in asyncio-land, but that's still a developing story all around). Note that I'm not explicitly saying here to *not* use flask, django, or any other lib or framework, but it feels like a common trap when new to a language to feel like you have to use a major existing batteries-included package (java -&gt; spring/dropwizard, ruby -&gt; rails/sinatra, etc) over just using the language itself and its standards and bespoke libraries directly - particularly in the case of a backend api 'micro'service. Were I building an all-in-one user-facing site from scratch I'd give django an honest try despite my strong preference for raw wsgi.
There are a number of thing s you need to do to make this work: 1. Add the directory containing the python script to your path (add it to your .bashrc or .bash_profile) 2. Mark the script as executable (chmod +x path/to/some-program.py) 3 Execute with just the script name without preceeding ./ or path (some-program.py) If you're on windows you'll have to do something different.
1. As in, if I try to execute ./some-program.py, it says "No such file or directory" 3. To make it executable (as in, if you have #!/usr/bin/env python at the top of your script)
Just download Anaconda or another pre-bundled install if you aren’t all that technical it will be easier for you 
Litterally the first two google results https://docs.djangoproject.com/en/2.0/topics/http/decorators/ https://stackoverflow.com/questions/19096227/how-to-discriminate-based-on-http-method-in-django-urlpatterns
This! Also I'll add some basic Shell scripting and networking (SSH, sftp and how they work) and some solid SQL to the toolbelt as soon as possibile. With those tools the only thing you have to do is focusing on the novel..
Yes, it works the same. You don't need drf (django rest framework) to make a REST service. It just makes it easier by doing most of the work for you. Have a look at [this description of REST](https://stackoverflow.com/questions/671118/what-exactly-is-restful-programming/671508#671508) if it is not clear to you what REST is.
Truly, we shouldn't be limited to what the host OS has to offer. Use Docker.
I guess you could start it off on a page and set up a "tree" of URLs. So it locates any links on that page, enters the next page, searches for links. And if its a dead end, it could go back a few sites until it finds a different link
you just wasted some minutes, kilobytes and dollars to write this useless comment.
I haven't used Python on Windows since about 1876, so I may be wrong here but I don't think that python path is right. Maybe try following this, I think you need the scripts in there, as you say &amp; I'm fairly sure that the main python install dir needs to be there too, so C:\Python27 https://github.com/BurntSushi/nfldb/wiki/Python-&amp;-pip-Windows-installation Also, unless there's a specific reason you're using 2.7, I'd say jump to 3. The syntax is far nicer for many things and 2.7 is basically an evolutionary dead end.
He's right. Unless you've got millions to blow, you're like a flea asking how to eat a moose.
I got paid to write that comment bud ;)
ok, I know this might sound a little bold but I mean how much data, bandwidth migth it consume if I crawl checking if page x.html exists on that domain and if so, save this domain
you got paid by people who don't want me to crawl the internet looking for webmails! illerminati triggered!
Not much at all.
[like this!](https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags) Look into BeautifulSoup instead.
pip isn't in your C:\Python27\Scripts directory? 
This is the answer you are looking for
Including this bit? &gt; virtualenv’s job isn’t just to separate your projects from each other. Its job is also to separate you from the operating system’s Python installation and the installed packages you probably have no idea about. Yes, you *could* work out what packages are in the container's system wide python, and assure yourself that there are no surprises. But it's certainly true that if you want to not have to think about/keep an eye on that, a virtualenv is an appropriate tool.
Obviously what "matters" depends on what cares about.
See the linked article.
&gt; I miss list comprehensions when I'm using C# (tho linq aint bad) Um, LINQ is all around better than list comprehensions imo. You have to write `from` instead of `for`, and you have to explicitly write `select` (but I like to use variables after they are declared), but those differences are completely dwarfed by having `let`. The rest of the stuff is nice to have too.
Is there really any reason to use Mongo these days?
Async-creep :/
Look for academic papers on graph theory and how it relates to the "connectedness" of the internet. I'm neither a mathematician or a graph theory expert (physicist by training), but (ignoring all the practical reasons why you personally wouldn't be able to do this) in *theory* this is only possible if the internet can be modeled by a "fully connected graph" (I think that's the correct term). This just means that all parts of the internet must be reachable by starting at some random URL and following the correct links. I'm certain some mathematicians must have thought about this and written some sort of paper about it.
I don't think it ever worked for some reason.
&gt; Either they don't work with certain libraries or are a bit buggy (from what I've read). Python is not an officially supported language on Android, so a number of tricks are needed to make it work. For example, Python's files in the APK are contained in a zip file that is extracted elsewhere on the device for execution. As for other libraries, p4a works nicely with most pure-python stuff but when you get to cross-compilation territory there could be all sorts of complications. As a worst-case scenario example, some Python libraries need a Fortran compiler to build, that's not easy to do for the non-initiated. The currently available cross-compilation recipes [can be found here](https://github.com/kivy/python-for-android/tree/master/pythonforandroid/recipes), though not all of them are fully functional... &gt; As long as it will work with minimal use of workarounds and hacks, I'm happy. No way to know how much (or little..) of that is needed, it depends on what you want to do.. For a basic application everything pretty much works out of the box. I suggest you use p4a and kivy master branch if you test it out.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [kivy/python-for-android/.../**recipes** (master → a036f44)](https://github.com/kivy/python-for-android/tree/a036f4442b6a232d0c3a96c0b9d223e1b8cfe1d4/pythonforandroid/recipes) ---- 
Then let's not assume and push blindly, _not_ say it doesn't matter. Maybe explaining what are the tradeoffs and why one might care. P.S. To whoever downvoted me, thanks. I hope it wasn't _knee jerking_.
You may also want to look into http://kivent.org/ which is an entity-component game engine for Kivy
Yeah, and it's not the kind of thing that shows up in search results very easily either. If you don't know that two dots is inclusive and three is exclusive, you may just be confused.
It should be: print("String for translation: ", uppercase())
There are a lot of things wrong here, but to answer your immediate question, `uppercase` is a function pointer, so when you try to call it without parentheses like `uppercase()`, it just returns the address of that function in memory. I'm not quite certain what's going on here, but I suspect that this may be what you wanted: def main(): inp = input("Please type the string to be trasnlated into all capitals: ") print("Before: {}\nAfter: {}".format(inp, inp.upper())) if __name__ == '__main__': main()
Ah, yeah. Many reasons. If you check out the StackOverflow developer survey that just came out, it's the most wanted database by a factor of 2 and one of the most loved databases.
Thank you so much for the extensive and detailed reply! :) I figured that would be the case. Oh well, no harm in trying to hack something together. If nothing else, it'll serve as a learning experience to the obscure and weird side of android development!
I believe that the internet is mostly connect, or fully connected for all practical purposes. Though likely not in by the strict mathematical definition. I think the real issue is that the average degree of nodes between many communities would be low, making it very unlikely you would reach many clusters in any reasonable amount of time moving from vertex to vertex. So you could only have a reasonable shot of crawling the internet by visiting sites you can find based on googling terms, which probably only represents a large minority of the whole internet.
There was a lot of white boarding to get to this point, and I'm still not sure that its correct, but heres my best guess at what each part of this is doing: import random # 1 million iterations n_iter = 1000 * 1000 accum = 0 for i in range(n_iter): # Generate a point in ((-1,1), (-1,1)) on xy-plane x, y = ((random.random()*2)-1 for _ in range(2)) # Test if it is inside unit circle # This is using the pythagorean theorem to test if the dot is within 1 (1 being the radius of a circle in a square who's area is 4) r = (x**2 + y**2)**0.5 if r &lt;= 1: accum += 1 # area of unit circle / area of ((-1,1), (-1,1)) square === pi / 4 # This is essentially brute forcing the area, i.e. we cant calculate the area, but we can guess the area by how many "hits" we got from the above points, and get a decent idea of what the area would be by using that calculation, so the ratio of "hits" ~= the area pi = (accum / float(n_iter)) * 4 print(pi) # 3.14336 # This number will be different on every iteration due to the random
That's not what irony means. Also, actually checking if x.html exists is a very naive approach, and you would likely never be able to crawl the entire internet with this approach simply due to time constraints.
&gt; I think you are confused. It's not like python 2.7 stops working on 1/1/2020. I know that. At the top of this thread, somebody proposed a patch that would break Python 2.7 after 1/1/2020. I then said yeah, it'd be nice if my code didn't break almost every single time I upgrade versions (Python or some legitimate package like numpy/scipy). When you have 200,000 lines of code, yeah it will. I don't really understand the animosity that some people have when packages choose not to only support version, even though the latest version is supported. I also don't understand the animosity when people refuse to update because all their code will break. It'll go away eventually; get over it. The animosity just makes people tune the proponents of Python 3 out. If I was using ansync then fine, but I'm not. Mypy already works. Pathlib2 exists. Scandir exists. Dictionaries are faster/smaller, but text processing is slower. Other than unicode isn't horrifically broken, there's not really any strong reason to upgrade. Now supporting Python 3 means you went and fixed unicode, which means your Python 2 program does unicode correctly. The real reason to upgrade isn't because of cool new Python features. It's because numpy/scipy/etc. is going to be dropping Python 2 support. Packages have the real features.
I've used it quite a bit before and spoken extensively with the creators. It's a fantastic library, and provides some amazing capabilities for working on a single core or an unbounded cluster.
And I am missing "Run all above". Though I am sure an extension exists.
&gt; Not much at all I didn't get this. Thought it was an irony. Why do you think it is naive and time consuming? Shouldn't this worki like: list all links of a given webpage, find x.html, save or discard. next.
Pretty good explanation! Hopefully you learned something about Monte Carlo simulation. Happy pi day!
Glad it's not just me.
&gt; Hopping between unrelated clusters would take a long ass time for a single crawler. this ^ is it even possible?
we are using it for an introduction to programming class at the high school level. Entire curriculum is done through the Jupyter Notebook. I think it is a lot of fun and helping out in the class has got me obsessed with python again. So far that I've seen it just works really well for delivering educational content. Our students don't need to have anything other than an internet connection and can start programming. It isn't hard to get 30-60 lab machines python ready but it is a nice shortcut to have the kids just to to a URL and clone their content for the day. 
I looked at it. MySQL, Sql Server, and Postgres are all ahead of Mongo.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Ok, now you're starting to ask the right questions. &gt; I am generally curious how web crawlers work. How is it possible that piece of code spreads all over the internet and finds something it is looking for, be it google or shodan (I know it's easier with ip addresses since there's a finite number of them and it can be done, at least in theory, sequentially)? How does the algorithim know where to hit next, if it has seen everything etc.? First, nothing on the internet is going one-by-one through IP addresses looking for stuff. Your IP isn't hosting a website, their are many [private address spaces](https://en.wikipedia.org/wiki/Private_network) and one IP can be the source of many websites. Second, Google et al aren't really looking for anything in particular--they're creating an index of what they find. As such, they don't know if they have seen everything, and they most definitely haven't. Next, read [this](http://www.robotstxt.org/) page, their FAQ, and [this page in particular](http://www.robotstxt.org/faq/writing.html). &gt;To be honest, I don't know what to look for yet and if there really is one thing that can differentiate a webmail out of any other webpages. As I said earlier we can simplify it to: browse all .com domain that have page xyz.html. There isn't anything that can differentiate between webmail and anything else. Most importantly, any webmail provider that had any actual userbase wouldn't last more than 2 days if some guy with Python and a couple hours of spare time could scrape mail. Webmail is typically viewed through a webapp, which is generally a frontend 'site' communicating with the actual data store through an API. Anything you managed to save off of a webmail provider's site would almost certainly be an empty skeleton of what the page might look like, and luckily, we have authentication mechanisms preventing you from doing most of this. If you want to play with web scraping, read everything I linked, read everything they suggest, and then try `/robots.txt`.
**Private network** In the Internet addressing architecture, a private network is a network that uses private IP address space, following the standards set by RFC 1918 for Internet Protocol Version 4 (IPv4), and RFC 4193 for Internet Protocol Version 6 (IPv6). These addresses are commonly used for home, office, and enterprise local area networks (LANs). Private IP address spaces were originally defined in an effort to delay IPv4 address exhaustion, but they are also a feature of IPv6 where exhaustion is not an issue. Addresses in the private space are not allocated to any specific organization and anyone may use these addresses without approval from a regional Internet registry. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
I have a table that has origin &amp; destination airports. I am trying to include the number of outgoing flights on each row. So for example, if airport ID #10135 flies to 3 airports, each of the rows should include the number "3" 10135 987 3 10135 876 3 10135 765 3 So I'm trying to merge them back together, but it tells me it's multilevel and merging is unadvisable. So I drop a level out of the results &amp; try to merge, but then it's telling me the above table has no key ORIGIN_AIRPORT_ID, and it doesn't appear in a list of columns. So apparently ORIGIN_AIRPORT_ID is some sort of index?
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [elliotforbes/python-crawler/.../**readme.md** (master → 5619247)](https://github.com/elliotforbes/python-crawler/blob/5619247d67b2eb84e5ec89a08fb174faed89bf9f/readme.md) ---- 
One of the best things about the notebook is it’s server client architecture. Someone with more acumen can set up a development environment, and then other people can use it with only a browser. This works great in a classroom environment or if you have a lot of quant folks who want to use python but don’t necessarily know how to get an environment up and running. Jupyter also has tight integration with matplotlib so you can run code that does an analysis and visualize the output all in one place. That feature is one of the big reasons it’s gotten so popular in the data science community. 
Well, I bet more of the software you interact with day to day is written in C. Maybe you should just avoid using Python and go back to C? In terms of "deployed" code, why not pick the most popular. That makes it best right? Look, you don't have to use Mongo or take our course. But for the significant number of developers doing amazing things with MongoDB or looking to learn it, they may find this useful.
Can you paste the code somewhere that doesn't require registration? 
DRF is an extension of django. The main reason to use DRF if you are trying to create basic CRUD REST endpoints is that you can do it in only a few lines of code. If you need something more, you still have core django and you can use it as you wish. So yes, you can definitely make a REST endpoint with just django, but why do that when somebody else has already done it for you?
If you have a firewall blocking whatever port it operates on, you're pretty safe
Note the OP.
It's updates - 1 year, 9 months, 16 days remaining...
Please post in our job board sticky
input behaves as expected in python 3 if you are using python 2, use raw_input
added a pastebin copy but on a side note you guys should check out python anywhere its pretty amazing completely free and fun for just messing around with python especially when your away from home no tkinter or pygame support unfortunately but nice for testing out the backend stuff
figured out how to paste it in code format
I like this idea. But... (there's always a but) At the risk of violating this agreement: &gt; By using it, you agree to cease control over minutiae of hand-formatting. ... I thought I'd mention something that I'm not entirely comfortable with. It arises out of the tension between these two statements: &gt; Black makes code review faster by producing the smallest diffs possible. &gt; Black ignores previous formatting and applies uniform horizontal and vertical whitespace to your code. Here's an example. In the code I just tested Black on, it rewrote this: __all__ = [ "some_function", ] to this: __all__ = ["some_function"] just as I expected it would. Now, I wrote it on multiple lines originally because I can see the future, and I anticipated adding one or more names to the list which would make it too long for one line. For some reason, Black can't see the future, so it applied its formatting rule that resulted in the single line. When the future arrives, Black will reformat that line when it grows too long to multiple lines, resulting in a diff that's larger than it would have been if Black could see the future. Assuming there's no plan to implement seeing the future, one approach that doesn't violate the "ignore existing formatting" principle would be to take note of the trailing comma (which I argue isn't exactly "formatting"), and use that as a cue to preserve the multi-line format. 
If you are running the jupyter notebook it will have the same permissions you have, and so will anyone who can find it and run things on it. 
Isn't this exactly as expected? When I run help(input) in 2.7 it says "Equivalent to eval(raw_input(prompt))" and I've always learned from when I first learnt Python that input() was dangerous.
&gt; create a dictionary for each tile This might be the right time for a class, set of related classes.
&gt; it's the most wanted database by a factor of 2 and one of the most loved databases. rackmountrambo's question is still unanswered: why?
Demo of how writing insecure code is a security problem. 
on a side note if that is the best solution i dont mind taking the time to learn it so i can implement my code in the most efficient way
more like "demo how/why `input` is insecure code"?
Gotcha, that's really good to know. I guess LINQ just feels less intuitive to me, but I'll definitely look more into it.
its very similar but my maps already been generated and separated basically all i need to do now is using some sort of loop create a database specifically with the x and y coordinates saved and then being able to as i use a move function that changes the x and y coordinates search through that database and pick out the one with the same coordinates as i move through the map thats actually why i was leaning towards sqlite 3 to store all that and for other things like items and mob stats and ai is there a way to do that with classes as well? (at least the map coordinates part?)
I do plan to use this for all my code. Hoping it becomes the clang-format of python
I prefer to keep SQL as SQL: Example to fetch data from one DB and uploading to another DB: import sqlalchemy as sq import pandas as pd # connections setup to dbs: engine = sq.create_engine('postgresql://USERNAME:PASSWORD@POSTGRESERVER1:5432/DATABASE', convert_unicode=True) engine2 = sq.create_engine('postgresql://USERNAME:PASSWORD@POSTGRESERVER2:5432/DATABASE', convert_unicode=True) # regular SQL query: query = '''normal SQL query'''' # fetching data from first db to DataFrame: data = pd.read_sql(query, engine) # uploading to another db and create table if it doesn't exist: data.to_sql('TABLE_NAME', engine2, if_exists='append', index=False) https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_sql.html https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_sql.html 
[removed]
This makes my brain hurt. Thanks for sharing.
Can you bike on ice? Sure, but you are more than likely going to fall over.
Alas, I can't send a screen shot (made it at work), but it's made entirely of matplotlib plots and tables, e.g. https://stackoverflow.com/questions/32137396/matplotlib-table-only There are options to turn off the cell borders, looping through all the cells, which makes the table far more readable. Plus, you can use any font installed on your system.
Yeah, don’t try to write your own server and use on of the 25+ WSGI application frameworks to build your apps.
There is not. Postgresql can do everything it does, but better.
You can use lists of lists ala: map[x][y] = make_village("Hobbiton") Worry about sqlite when have something worth saving to disk.
What the hell is this picture... r/itsaunixsystem
Sorry for the long pre-amble: I studied philosophy and college and I didn't take consider getting a CS degree until my last quarter. But by that point, I just wanted to graduate. Here I am, 2 years later, teaching myself Python from Team Tree House and google searches when I want to know how to do something. I'm currently spending nearly all of my free-time working on a python project for my portfolio as I learn new python stuff. Question: What 3-5 projects would you recommend someone have in their portfolio before seeking a job as a python dev?
Well, in case of passwords you need to remember, then sure, long sentences are good. With a password manager I don't think it matters that much. In lastpass I can generate 128 random characters if I want (and the system allows such long passwords).
the default also uses token authentication which should be generally secure
Have they changed rawinput() to input() in 2.7?
WTF is that in the thumbnail? No wonder devs get labeled, creepy.
When you add to the list, just do it in a sloppy way and let Black sort it out.
This is an admirable project. How does it compare to autopep8?
&gt; Question: What 3-5 projects would you recommend someone have in their portfolio before seeking a job as a python dev? Really depends on your skills and what you want to do! Do you want to do web development? Would you be happy doing Django? Would you mind doing full-stack, and add some javascript? If so, consider a basic webapp, anything really. It can have authentication with "verify my email" and "forgot my password". Maybe you use a popular js frontend framework like react, and have it call your django rest framework API or flask. Web app design can go a million ways though, and you could just keep it simple and use mostly templating instead of any heavy javascript. But web development is huge with python and there are always jobs, so learning django and having a web app or two in your portfolio would put you far ahead there. Do you know linux, and want to work more backend/system engineering? You could write system tools, anything that might help you from a systems perspective. Maybe you could make your own "grep" or "sed" or "find". Maybe you could make a program to parse parts of the /proc virtual filesystem like /proc/cpuinfo and output stats about the computer, what programs are running. Maybe you could write tools to deploy virtualmachines and install software on them. Do you want to get into security? There is a lot of fun to be had with python and security. You could write a tool that sniffs packets with scapy, looks for DNS requests, outputs what sites are being visited, tries to extract cookies and headers from plaintext http visits. You could write your own nmap. You could write a crawler that goes through reddit with PRAW and discovers different sorts of submissions or comments, maybe tries to crawl a certain user's post history and try to discover personal identifying information, like where they live or go to school or work. Do you want to get into data science? You might try to do AI stuff, like make a bayesian belief network library. You could learn how to work with tensorflow. You could make a neural net that does face recognition, or tells you whether an image contains a horse or not. You could make something like /r/SubredditSimulator that takes text and tries to output similar sounding text using markov chains. There's a million ways to go really, and it depends on what other sorts of skillsets you want to learn and what sort of job you might look for. The best advice I can give you is to find some area like those above that you are really interested in and want to learn more about, and use python as a tool to help you learn and explore it. You'll get ideas, and the best projects on your portfolio will be the ones you're excited about and motivated to work on. Good luck!
is there a reason why input is eval(raw_input())? did the developers know they allow the user to run foreign code just so they can evaluate mathematical expressions easily? I feel like many people learning python wouldn't know this (as many tutorials don't mention this at all). guess they had to idiot proof it in 3.x?
Pycharm!
Yeah it seems like you'd have to put in some effort to use it in an insecure way that's not just "hacking" yourself. Like use it in a network service somehow, or maybe in a script with setuid/gid bit set.
Prior to executing your for loop, just include a print statement that says something like: “Initial Salary: {}”. That will print only once when function is first executed. 
Wow... I don't often use input() but now I will never use it. I had no idea that's how it was treated... thanks for the post!
They probably should've specifically documented that input() should only be used for debugging by the programmer and not remotely by a foreign user. Beginners learning just remember that this is a way to receive numbers as tutorials tend to not mention this and later move on to implement this in production. probably why they idiot proofed it in 3.x
One of my current projects is an RPC library for Python. Yes, there are many like it, but this one is mine. One thing that no RPC library for Python currently supports (that I know of) is function signatures mapped from the server without using `exec()` (a security risk). So, I am experimenting with a solution to that problem, and you can see that experiment here. I did find people who had suggested building functions with the AST, but as far as I know, none followed that path very far. What I have here I made by manually recreating the output of `ast.parse`. There are still some challenges, but what I have so far has been working quite well for most functions that accept serializable arguments (i.e. JSON/MsgPack). I'm sharing this mostly because I wish someone else had already done this work, but also in case someone can see some fault in my approach.
What are the advantages of using asyncio over multiprocessing?
I'll have to update my post. Thanks for the suggestion!
Dask is *amazing* - it really does erase the difference between working with data that fits in memory and data that fits on disk, *without the usual inconvenience for small data*. Would recommend. Also: use Xarray instead of Numpy wherever possible :-)
What a choice of font for the German guy. I wonder which nationality would speak Comic Sans?
Glad you asked. My friend and (daresay) python mentor @nhumrich wrote an incredible article on this. https://hackernoon.com/asynchronous-python-45df84b82434
my bad. just saw my dyslexic spelling. :)
alright, thanks!!
Wouldn't that be an issue in most (all?) other (popular) programming languages that support keyboard input and evaluation of expressions?
I’m thinking getting into web dev because it’s easier and that’s the direction I want to take my projects toward. I started working on a grading program for teachers where they can enter a student’s grade. I’m having trouble getting it to work where the teacher can change how the grades are weighed. I started making a static page where the student’s grades are embedded into the code. Right now, I’m making it do that the user can input the data. Next step, it’s making it do that the data can be manipulated. Step after that, I want to make it do the teacher can create student’s and add assignments for all students. Step after that, I want to make it so an admin can create teachers and extract all the data from every student and teacher. Once that’s done, make a website from it maybe. I a couple ideas for other things, too. 
Cool! If I'm understanding correctly, it's only really a vulnerability if the script has setuid/setguid or is running under a privileged account that the user doesn't normally have access to, otherwise the script is running in the context of the user and executing commands the user could run anyway.
Skid who uses Python 2 spotted.
Name me a language which evals user input automatically.
But wait a minute if I had a file I wanted to read I would just read it and print it. Why would anyone you input to read it?
Yeah, but it gets ugly real fast. I do not even know how can one contain async. Say there is networking driven by asyncio. Then if we opt in to use asyncio database module or some async module for file io suddenly async/await goes like a tidal wave across the codebase even through layers that do not do anything async themselves.
no
Lot's of people blaming other people for not knowing the difference between input/raw_input here. But the fact of the matter is that it was a terrible naming decision. We know that because they fixed it. Tons of code examples out there use input. And do you really expect someone who is learning programming to understand what eval means? They'll use it when learning, and use it again in the future because it was what worked. It's like blaming someone for expecting `mysql_escape_string` to work in php when *obviously* the correct function is `mysql_real_escape_string`.
Short version it runs `eval()` on the string.
Stop acting like "input" is somehow broken on 2.7. Any and all documentation clearly states that "raw_input" should be used for string input. It was simply renamed for Python 3.
maybe
The same can be accomplished by just reading a single line of documentation. &gt; Equivalent to eval(raw_input(prompt)). There's no 'vulnerability'. It does precisely what it says.
If you're interested in getting the CSV on the internet, there's a really cool project called datasette that does just this: https://github.com/simonw/datasette If you're interested in building a Flask app yourself for educational purposes, then I'd recommend starting with http://flask.pocoo.org/docs/0.12/quickstart/. However, I'm not entirely sure what you mean by dashboard. That definition will influence specifically what you should build in code.
Basically any interpreted language has an `eval` or `exec` function.
Personally I just have pylint run when I save code, and pycodestyle as a pre-commit git hook that prevents me from committing badly formatted code. But I do like tweaking spaces in ways that it doesn't complain about, like this: stuff = [ parse(line) for line in TheLines.objects.filter(...) if not line.startswith('foo') ] ... so I'm not sure I'd like something messing with that. How does black handle conditions in list/set/dict comprehensions? And what if the generator inside like `TheLines.objects.filter(...)` is long enough to warrant its own line?
In the github page there is an example oh how to use and understand the Command Bus. Another grat web to understand the Command Bus is https://tactician.thephpleague.com/
Sure, most have eval, but almost none have a single function that directly evaluates input.
Did you have a bad day? 
What thumbnail?
Yeah, I am using it a fair bit to build out some dashboards and data pipelines. Really straightforward, especially with their new submit button feature.
Awesome! I have noticed a small inconvenience: using uppercase letters produce an error. Lowercasing the module name return the download count. (I have tested with "ModernGL" and "moderngl"). Can you make the query non case sensitive?
That's why you want to abstract the data extraction a little bit and keep it far away from your business logic. It's a little better with some xpath: https://docs.python.org/3.6/library/xml.etree.elementtree.html#xpath-support (lxml has more).
Ohhh good point. This afternoon I will fix this! Thanks 😊👍
https://0.30000000000000004.com/
This feature is often much faster to use than module documentation, huge timesaver and a great way to explore. 
Still, wouldn't be surprised if it exists somewhere. Maybe internal written system tools in a big corporation, setuid bit on some custom package manager tool to install internal applications... would not be surprised at all. Definitely a rare one if anywhere but still, if it's a security issue, someone out there is doing it.
I'd say problem here is not the ability to do it, but the ability to do it with a function that isn't named "eval" or "exec", which are recognizable synonyms for "DON'T USE THIS". `input()` sounds like the input method you would want in most use cases, which was really `raw_input()`.
Really though, people do consistently need reminding that eval is bad, os.system can be bad, etc. Input is one of the much much less common injection vectors I imagine, but it's still a reminder of issues in the same playing field. I've worked with people on a security team that end up using os.system in tons of places out of convenience when they should be using subprocess, and some thing just to rm a file when they could use os.remove or shutil.rmtree. So many people use os.system when they don't have to, when it's just as much code to do it right. And sometimes it's shit like `os.system('rm ' + path)`. And honestly I wouldn't be surprised if someone out there found a way to make this a security issue, maybe a website that takes an url param, runs an old script and pipes the url param into somewhere it calls `input`... I see people do shit like make a django site that invokes a python script that invokes a bash shell script that invokes a php script, and I'm not even fucking joking. Life finds a way.
Nice, but very similar to [yapf](https://github.com/google/yapf/blob/master/README.rst)?
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [google/yapf/.../**README.rst** (master → 66aaad8)](https://github.com/google/yapf/blob/66aaad8907e24a6b491509cf9d612250a7dc2dff/README.rst) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dvqc95q.)
Nice. You could also create a precomnmit hook running these commands.
That doesn't tell the real story to a beginner. Yeah, me or you might not misuse something like this, but beginners fall for a trap with these sorts of functions. The problem I see with it is that these functions can lead to really cool shortcuts to do cool things and add some really neat functionality in programs. Someone makes a website where they want a user to be able to type in an expression, and if they don't know better they might decide eval is exactly what they want. The user can type in anything! Maybe they want the user to be able to filter out results, and they figure out they can do this: def get_people(request): people = People.objects.all() return [person for person in people if eval(request.GET['filter'])] Now the user can visit the url with `?filter=person.age &gt; 100` or absolutely anything they want. So much functionality in one line. That's a very cool trick for someone learning programming, so it gets used, and I've seen the equivalent used in php. These videos explain very clearly to beginners why this sort of code can be bad, and if we're going to have tutorials posted here for beginners, this stuff has a place as well.
You mention early on that you're going to import os because it opens up more possibilities, but you might want to show that you don't even need the import. try a script with just this: print(input()) and run it and input this: __import__('os').listdir('.')
A beginner who doesn't know what `eval` does won't understand the problems with it. So no, it doesn't accomplish the same.
A floating point number is not always 100% precise. This happens because of the internal binary representation. IEEE 754 defines a double precision floating point (in C called "double") as 64 bit long. It consists of a bit for signed or unsigned, 11 bits for representing an exponent and 52 bits for the fraction. For some calculations your result is inbetween two possible representations of that number and the closest is chosen. Double precision floating point: https://en.wikipedia.org/wiki/Double-precision_floating-point_format IEEE 754: https://en.wikipedia.org/wiki/IEEE_754
Done by author of this article (japanese): https://qiita.com/KTakahiro1729/items/c9cb757473de50652374
I really like the variable table feature in Spyder,very convenient!
&gt; and I've seen the equivalent used in php So you are agreeing with me? eval(request.GET['filter'])]` is logically equivalent to `eval(raw_input())`. So if people do it without an explicit function, they'll do it with one too. Albeit I agree that "input" is a misleading name for it and since eval(input()) is easy enough, people that really do want it can do it that way.
If you need absolute precision, use the `decimal` module. It's a lot slower though, so unless you're dealing with extremely precise math and/or money, you're probably better off using floats and accepting the precision loss. 
You may just use the [round](https://docs.python.org/3/library/functions.html#round)-function. But if we doesn't know what you want to do, we can't recommend something.
It's not like it's some hidden 'gotcha', sometimes it's best to let people run into obvious problems like this, otherwise they won't learn the importance of thinking about what your code does. beginner will probably also not properly sanitize DB input, that doesn't mean SQL is broken or has a security problem. Every tutorial I've seen for Python 2 uses `raw_input()`
I'm making a calculator lol
Thanks, I really should.
Every now and again I start to think I'm really beginning to get to grips with Python, and then I find an article like this...
Can I use this tool if I am white?
I said, evals user input automatically.
`input` is used to eval input Python code into ~~Python 2.7~~ Skidthon program.
By the way, you can do the first thing in a one-liner: matrix = [[0] * n for _ in range(n)]
`eval(input())` in Python 3.
Actually, if you want a 2D array, you should just write one or better yet, use numpy. class List2D: @classmethod def from_list(cls, width, height, lst): return cls(width, height, data=lst) def resize(self, width, height): self.data = [0 for _ in range(width * height)] self.width = width self.height = height def in_bounds(self, x, y): return -1 &lt; x and x &lt; self.width and -1 &lt; y and y &lt; self.height def __init__(self, width, height): self.data = [0 for _ in range(width * height)] self.width = width self.height = height def __getitem__(self, key): x, y = key return self.data[self.width * y + x] def __setitem__(self, key, value): x, y = key self.data[self.width * y + x] = value def __contains__(self, item): return item in self.data 
This is basically abuse of the object model and closures; they have real code usages but very rarely come up outside of working around things, so don't sweat it, you'll be fine without learning this.
As Raymond Chen so beautifully put it, [ It rather involved being on the other side of this airtight hatchway](https://blogs.msdn.microsoft.com/oldnewthing/20060508-22/?p=31283)
Really well done, I assume this is a GUI wrapper for Pyinstaller, something I'm surprised no one has done before. And the youtube video explanation is something more people should do as well, beginners lives matters! I would recommend you do some extensive testing with Pygame and Kivy for this. Making .exe files is essential for any games programmer, and this is where many beginners start their Python journey, this tool could be an essential one for them. 
For some reason x and y point to the same object at the first print. At the second print they point to different objects. Remember, "is" compares objects, not values.
s/Python/Cpython/ as there is no guarantee that this happens across the various Python implementations.
Thanks for your reply, I understand it now.Thank you!
I’d recommend using a well-tested task queue, such as rq or celery 
That happens, especially when everything is put in one stack of layers. Sharding the stack is usually helpful, more or less. Services which require full-stack async should be in the minority. If async can be contained this way, it could exist elegantly by the side of traditional sync code I suppose =)
True! Thanks
Web services should never run long running tasks. If you have BL that requires some long process, accept the request, generate a task id, schedule it via a message queue and then return the task id. Thend pick it up in a different application that does the actual processing of the task.
Lots of issues in just a day
That's kinda what I'm doing (I think), except instead of a different application, I'm running the task in a new thread from the Flask server.
Thanks!
Floating points should still be fine. Real calculators just use floats followed by rounding to whatever (smaller) number of digits the screen can display.
I agree it’s an overkill for many use cases. I would’t use Celery unless I have to. RQ is easy to get up and running, and usually works for most simple use cases. But it isn’t as flexible as Celery which is why Celery seems complicated. If you choose to use rq (Redis Queue) you’d need to install Redis ofcourse. 
Utopians.
It's a program, it's automatic. If you write it, it does it. Whether you chain two functions or whether it's a single one.
Well, I never intended to eval myself, so again, where does anything but python 2.7 automatically eval user input even though all you wanted is just user input? Just fuck off because the answer is nowhere.
&gt; you should just Whether or not you should do that depends entirely on the use case. It may be warranted or it may be total and utter overkill.
I refuse to consider your matrix example a quirk. It may be a bit of a trap but it is entirely logical. The second is alternate syntax, not a quirk. Something I'd consider a quirk: Mutable default arguments are unique across function calls. For example: def fn(a=[]): a.append(5) print(a) fn() # prints [5] fn() # prints [5, 5] fn() # prints [5, 5, 5] 
Useless for scraping without JS execution in many cases.
Dat variable scope.
Just /u/PurpleIcy throwing around insults, since he's struggling with Python 2.
&gt; Do you do anything to assist with the dependancy issues with py2exe or is your project just a gui layer? The GUI is practically just a GUI layer. It does some cleaning up in the end result but other than that it just calls pyinstaller with the arguments selected and provided. Nothing too fancy but it gets the job done a lot quicker.
That's the point of resize. Where do you keep your old contents anyway? Which corner? What offset data should be in? Whenever you use a grid you know exactly how much space you'll need and never resize it unless you'll use object for something else.
I have used pyinstaller with PyQt before but am not 100% on Pygame or Kivy. A good recommendation thanks.
https://www.ceddit.com/r/Python/comments/84h930/demo_of_how_input_is_security_probem_in_python_27/dvq8yb0/
Looks like a gui layer, but I share your frustration with pyinstaller. However, if this project makes pyinstaller more popular, then maybe more devs will contribute to pyinstaller and those issues will slowly get resolved. We've been needing a simpler way to convert to executable!
I started learning python in python3 and every beginner python resource has you use input alot. I never would have learned this about python2 had i not run into a similar video previously and checked it out. It's not like this is common in other languages, and i'm sure it was removed for that very reason.
On that note know that both eagerly evaluated iterables like lists and lazily evaluated ones like generators are acceptable (and common). Wrapping wsgi handlers is commonplace and [it's a common mistake](https://github.com/DataDog/dd-trace-py/blob/41c790db95b3031dbe2e6e5a355568847a33571f/ddtrace/contrib/pylons/middleware.py#L64) for wrappers to just return their target rather than yielding from it - when the target is lazy the vast majority of the real processing tends to be done after wrappers like these return (done instead during sending the response). On that note there are subtleties to error handling, particularly in the context of lazy evaluation. You can't go back and change a http response once sent even if you encounter an error during content streaming.
Alright, thanks for the suggestions - I'll have to read up on how these things work and how I can shoehorn my process into it.
Precisely, it only became an issue once Python 3 was released. Python 3's design choice is the better one, but it obviously had unintended effects for people that start out learning Python 3 and then need to write Python 2.
The post is lacking any explanation for why anyone should prefer this over the existing Cairo backend. 
It still implies it.
https://github.com/python/cpython/blob/d48ecebad5ac78a1783e09b0d32c211d9754edf4/Objects/longobject.c#L13
I am equally as happy as you are in the picture attached 
ty
Big boy deleted his post lol
I didn't delete it, truth can't be hidden, nor should be :|
I get your aversion to exec, particularly given rpc being in the mix, but if you construct the source yourself and reject illegal names it's roughly equivalent to escaped sql construction - touchy but ultimately necessary. Anyone who thinks nobody does this doesn't understand how sqlalchemy works. You go out of your way to rebuild equivalent ast's for defaults but at the end of the day they're just references on the compiled function object. I just use a simple reference to the each default no matter what they are, but you may be trying to provide a sensible sandboxed subset of functionality, but if that's the case you're not as you're still only special casing one layer deep to references on the signature object (which you either already manually serialize a safe subset of to get across the wire or pickled defeating sandboxing in the first place :). And on a final note be mindful of [py2's argument unpacking](https://www.python.org/dev/peps/pep-3113/) - a feature I both have used and am glad is gone. You make an effort to support py2 so it's worth being aware of if only to explicitly reject. 
This is awesome. Thanks for introducing me to eel. Interface looks really good.
I agree with this. Readability isn’t all about diffs and groking. There is something for be said for readability during development.
| modifies in place ... and | still a little wonky Sounds cool but I’m scared to use it. Are there tests that ensure it isn’t destructively modifying anything?
I would not recommend it for "absolute newbie". Better start with simple editor.
Yeah, I can see Travis being a HUGE chunk of this.
there's a typo — `o J B ect`
I run jupyter notebook on my Chromebook's chroot because it makes it easier to program on the go. I can also run a server for it on my remote desktop and edit it from my laptop. Pretty handy, as I'm using my desktop's GPU for some machine learning tasks.
Your variable is named `anOjbect`, not `anObject`. Also, /r/learnpython.
... No? A implies B means if A is true then B is necessarily true as well. I've just shown two counterexamples.
Embarrassing! Such a simple mistake.. Thanks.
Wish there is kind of auto correct for Python.. so embarrassing.. :( Thanks for the subreddit.
Whenever you use a for loop, `for x in myList:`, the variable (in this case "x") can be replaced by anything that can be assigned a variable (dictionary items, list items, attributes). &gt;&gt;&gt; letters = "abc" &gt;&gt;&gt; test_dict = {"letter": ""} &gt;&gt;&gt; for test_dict["letter"] in letters: print(test_dict) {'letter': "a"} {'letter': "b"} {'letter': "c"} I haven't really found any uses for this other than web scraping. url = "scraping_url" parameters = { "param1": "stuff1", "param2": "stuff2" } specific_stuff = [...] for parameters["param2"] in specific_stuff: requests.get(url, parameters)
Really cool! 
thanks for that, I could not figure the syntax for that I was trying to do __import__('os');os.system('ls')
I wrote this several months ago, and to be honest I don't recall why I bothered to support default argument values of different types. It would be much more reasonable to just support `None`, which is generally the only default I ever use anyway (makes it easier to wrap a function and pass on a default argument). The parallel with SQL parameterization is a good one. I saw the AST as already providing the API for building a Python "query", though clearly not a very user-friendly one. I would argue that using the AST is still a "better/safer" approach, and removing support for default argument types removes a lot of the complexity. You may be right that it's a reasonable solution, but I haven't seen an implementation of a parameterized function creator. The RPC libraries I've seen either use something like `call(name, *args, **kwargs)`, or a raw call to `exec`. I'm using [funcsigs](https://pypi.python.org/pypi/funcsigs) (a backport of Python 3's `signature()` function) to generate function signatures, and it doesn't seem to know anything about them: import funcsigs def func(a, (b, c)): pass sig = funcsigs.signature(func) results in: ValueError: '.1' is not a valid parameter name I haven't run into argument unpacking in years, so I'm content to leave it at that.
I don't really know of any solutions specifically for autocorrect, but IDEs like PyCharm will auto complete variable names and highlight misspellings for you. 
Thank you. First time I get to see any metrics for PyPI stuff. Didn't know about the BigQuery DB.
&gt; How so? I said a malicious patch would be a dumb idea. Because you totally missed the joke. 
Well if people didn't do string interpolations with user input and run them in a shell I'd be out of a job. But, yeah, don't do that.
Sounds interesting. How does it work with external libraries like SenseHat?
Yeah I've seen it in a CTF but never in the wild.
I think the internet is a long way from a fully connected graph. A fully connected internet would mean every page links to every other page on the internet. Considering most pages probably have 10's or 100's of links, and there are billions of pages, this would make it a very sparse graph.
Do you really need this in the database? If you are not indexing or searching on it then it might be a bit wasteful to store 50K+ opaque blobs in the database.
ironic , he can convert others py files to exe but not himself
I do (in principle) like Dask a lot. I'm having some trouble though running Dask with 200 or more workers over (rather slow) networks. I very often experience heartbeat timeouts such that Dask is practically uselss in these scenarios. My workaround so far has been to build custom solutions which employ REDIS as a broker. On the same networks I found REDIS to work much, much more reliably than Dask. There has recently been a post about a kind of Dask clone which, however, uses REDIS under the hood. But I cannot remember its name currently.
Post it to /r/learnpython and format your code?
The Python 2.5 thing was a joke as well.
Calculators have floating point errors too. Try `1/3 * 3`.
On a side note, why do you have IntelliJ, Android Studio and PyCharm installed on the same time? IJ can do the job of all three with the Android and Python plugins. I think it can do WebStorm’s as well.
I have no personal experience with this, but according to his GitHub. He used [Eel](https://github.com/ChrisKnott/Eel).
&gt; I think the reason for this is that academic code tends to be a throwaway code. You write (sometimes fairly big) chunk of code to test your hypothesis, or to prove that some algorithm works. The important thing here is that nobody, possibly even including you, will ever read or modify this code. If you're going to publish your hypothesis, you should publish the code as well imho. 
This is very true. But the point is that it doesn't need to be maintainable.
It would be great if it could break down the numbers by user agent or something if that info is available.
Immutable default arguments. Oh the number of times that has tripped me up. def add_to_list(value, lst=[]): lst.append(value) return lst add_to_list(1) my_list = add_to_list(2) print(my_list) 
Upvoted for thumbnail hahaha
“Why programmers are a security risk in Python”
Hello guys, sorry to repost here but I didn't find any help as of now.
The thing is, that many websites that link to others are likely members of the same 'community', so obviously you'll get many of the same type of pages linking to similar pages. The difficulty this creates would be that you would definitely find yourself getting into endless loops of hitting links that you've already been to. So this creates another operation you have to perform, because now you have to look up every x.html to see if you've been there before so you're not just saving x1.html an infinite number of times, which would be very time consuming as your list begins to grow. This itself isn't even a very efficient solution because there is no logic that would prevent you from getting to pages that have all the same links to another page. If you wanted to handle this you would likely need some criterion that would say 'there are 100 links on this page, and so far 50 consecutive links are already in my x.html list, so skip the other 50', again, this adds another layer of complexity. This whole exercise would become insanely time consuming and complex very very quickly. It's simply not possible in any practical sense.
I just released a hacking tool today to take over active directory domains when you don't possess any AD credentials. So I'm gonna be handling edge case issues probably for the rest of the week. https://github.com/DanMcInerney/icebreaker
Okay now I'm even more interested lol
This is great! Can this be integrated into a shields.io shield? 
Let's wait until it's actually released before posting blog updates on the eap's
This is took me a minute to get, well played.
There are a bunch of tutorials available for this online. Here is one. [https://www.pyimagesearch.com/2014/08/04/opencv-python-color-detection/](https://www.pyimagesearch.com/2014/08/04/opencv-python-color-detection/) It's probably easier to use the HSV color space to define the boundaries but it will work either way.
Wow this is perfect for scraping thanks for this
"It's not my fault I don't understand things, it's the languages fault. Everybody needs to know this."
While you're right, I've found at least the python integration a tad... Clunky. Took me 4 weeks to find out how to manage my venvs from IJ....
I have VS Code installed but as I'm learning, I only use Python's GUI to follow steps from the book. Is it actually better to stick with VS or other else instead?
Aw man, ruined it for me. I pictured Bret from Flight of the Conchords had talked me through the demo until noticing that picture :D
Numpy.split = splits the image file on red, blue a green. See one code that I did (link) : https://drive.google.com/file/d/158dLJxCtd7BFdC_QuKtIQ947zdR5vqBG/view?usp=sharing Or my blog post : https://datasoaring.blogspot.com.br/2018/03/plotting-blue-channel-intensity-of.html I hope It helps. Rgds
https://github.com/GeoffreyTaucer/SmashStats Still working on my project to track statistics regarding matchup statistics in Smash Bros Melee. I think I've finally got it basically-functional; my next task is to figure out the best way to have it write the list of recorded matchups to a file (and read recorded matchups from a file) so that any data I record with it persists when I exit the program. Guidance on this would be appreciated!
This is awesome, thank you so much. Although I do feel like my last few days of troubleshooting cx_Freeze has been a waste now though lol
This is better suited for /r/learnpython. But, one quick suggestion is to use NumPy. Then you could do `grid[:,col]`
&gt;Of note, the threat actors installed Python 2.7 on a compromised host of one staging victim, and a Python script was seen at C:\Users\&lt;Redacted Username&gt;\Desktop\OWAExchange\.
Wow. Not often I see people calling Smalltalk's syntax beautiful. Even people who love the language just seem to not mention the syntax at all.
Thank you! I didn't realize I was missing y =[] before my append
How many workers do you have? Also are the tasks in question IO or CPU bound. Depending on the task you might be better using multi processing. If you are doing CPU bound work good chance you get significant blockage between threads. As others have also said. It’s highly advisable to use a proper task queue. I would personally look at using rabbitmq with celery in such an instance. 
You should use VS Code, and if you need python's interpreter to test something while you're writing your code, vscode has an inbuilt terminal (command prompt) where you can type "python" to invoke the interpreter. But to be honest, right now you should be focusing on learning the language instead of learning about tools to write code in. IDLE is sufficient for you for now.
 m = message, (sn) Assigning a comma separated list of values to a single variable will result in you ending up with a `tuple` type. When you stringify a tuple, Python will wrap it in parenthesis and quotes, like it does when you print lists and dicts and other types (printing the Python representation of the data type, like the `repr(v)` function) &gt;&gt;&gt; string_value = "hello world" &gt;&gt;&gt; print(string_value) hello world &gt;&gt;&gt; print(repr(string_value)) 'hello world' &gt;&gt;&gt; tuple_value = "one", "two" &gt;&gt;&gt; print(tuple_value) ('one', 'two') &gt;&gt;&gt; print(repr(tuple_value)) ('one', 'two') &gt;&gt;&gt; list_value = ["one", "two"] &gt;&gt;&gt; print(list_value) ['one', 'two'] &gt;&gt;&gt; print(repr(list_value)) ['one', 'two'] I'm not familiar with the Tweepy module's API, but see if they have a better way to tag it as a reply. You _might_ just need to "at-mention" the user, like m = "@{}: {}".format(s.user.screen_name, message)
1. You should ask in /r/learnpython for better results. 2. As it's stated on the sidebar, you should start all your code lines with 4 spaces (in addition to any spaces you already have). Definitely not use "." as spaces 🙂 3. Each level of indentation should be 4 spaces, not one or two. Here's your actual code, for reference. for i in range (1,3): for j in range (1,3): print "j= ", j print "........******i=", i print "loop done" ## Output: j= 1 j= 2 ........******i= 1 j= 1 j= 2 ........******i= 2 loop done The indentation is very important, it's the only way to denote a block.
Super minor point, but the "One Directory" button under "Onefile" has a type in the README. Nice job though!
Syntax on a postcard is one of the things I've heard most often Also the regularity makes for comprehensible DSLs
Have you tried debugging step by step?
Here's one quirk that is not the mutable default argument, which everyone knows my_tuple = ([0], "foo") my_tuple += [2] # this throws TypeError, because tuples are immutable. But guess the value of my_tuple ? print(my_tuple) # ([0, 2], "foo") This happens because tuples are immutable, which means you cannot change the references of what it contains. But it can contain mutable elements, and you can change them. So you can do : my_tuple[0].append(3) Because it's just adding an element to the list. But you cannot do : my_tuple[0] = "something" Now, what does the operator `+=` ? Well, it first adds an element to the list (`+` operator), which works, but then it tries to modify the tuple (`=` operator), which throws an exception. The behavior makes total sense once you understand what happens behind the hood, but at first it's really puzzling.
Nope. I’ll try it
Not a story that help() would tell you.
The modulus operation treats negative arguments differently depending on if you use % or math.fmod. math.fmod treats both args as positives, then applies the sign of the first to the output. % adds or subtracts the second arg from the first until it's just on the same side of zero as the second arg. Divmod() also works this way. &gt;&gt;&gt;math.fmod(-107, 10) # ==math.fmod(-107, -10) -7.0 &gt;&gt;&gt;(-107)%10 3 &gt;&gt;&gt;(-107)%(-10) -7
Bleurgh, yeah, of course. Brain in neutral.
Why is that?
You didn't close the file, so the write buffer never got flushed to the disk. Add `file.close()` to the end. That said, you should really use with() when dealing with files, it ensures that the file is closed properly every time: with open('password1.txt', 'w') as file: file.write(str(hash.hexdigest())) When you do it this way, even if something goes horribly wrong and write() throws an exception, it will still close the file handle.
Which PyPI pages do you refer? All the data it's extracted from the official PyPI data that is hosted on BigQuery. You can take a look here https://bigquery.cloud.google.com/dataset/the-psf:pypi :-) And it includes all the downloads including the ones that comes from automated systems.
The main page for a given package used to display this download information but there were complaints that the data was heavily skewed due to things like continuous integration servers downloading them regularly. Due to this, I believe, it was decided to remove this information from package pages as it was not necessarily a representative metric of popularity. Sounds like your site is using that same data, so should be taken with a grain of salt.
First show us what you've tried. Then we can try to guide you to figuring out the solution yourself.
Legacy code, maybe?
It can contain downloads from CI servers but consider that pip caches packages and the number of downloads can be much higher. I think you are more interested in the number of people using this package which is another and more interesting metric :-)
This is the best tl;dr I could make, [original](https://www.us-cert.gov/ncas/alerts/TA18-074A) reduced by 98%. (I'm a bot) ***** &gt; Since at least March 2016, Russian government cyber actors-hereafter referred to as &amp;quot;Threat actors&amp;quot;-targeted government entities and multiple U.S. critical infrastructure sectors, including the energy, nuclear, commercial facilities, water, aviation, and critical manufacturing sectors. &gt; The threat actors used the staging targets&amp;#039; networks as pivot points and malware repositories when targeting their final intended victims. &gt; The threat actors used the infrastructure of staging targets to connect to several intended targets. ***** [**Extended Summary**](http://np.reddit.com/r/autotldr/comments/84pcks/russian_government_cyber_activity_targeting/) | [FAQ](http://np.reddit.com/r/autotldr/comments/31b9fm/faq_autotldr_bot/ "Version 2.00, ~296844 tl;drs so far.") | [Feedback](http://np.reddit.com/message/compose?to=%23autotldr "PM's and comments are monitored, constructive feedback is welcome.") | *Top* *keywords*: **actor**^#1 **Threat**^#2 **target**^#3 **used**^#4 **account**^#5
Agreed, just wanted to call out that the numbers seen are not that number!
Thank you will try this out when I get home. Fingers crossed. 
Many tools have not been ported to 3.
Fixed! 🚀
I'm happy to hear that :-)
It seems that your comment contains 1 or more links that are hard to tap for mobile users. I will extend those so they're easier for our sausage fingers to click! [Here is link number 1](https://docs.python.org/3/library/functions.html#zip) - Previous text "zip" ---- ^Please ^PM ^/u/eganwall ^with ^issues ^or ^feedback! ^| ^[Delete](https://reddit.com/message/compose/?to=FatFingerHelperBot&amp;subject=delete&amp;message=delete%20dvrajdw) 
I'm not trying to be mean, but do you really mean that? The GUI really doesn't look that good.
As a beginner with no CS background, what does this mean? The code looks out of this world to me. I know what list comprehension is. 
[removed]
Building a weight calculator for the DCS AV-8B harrier module. Calculates the total mass of the aircraft based on the fuel remaining, any munitions that are left over and so on, so you know if you're too heavy to land vertically and will die in a fire or not. Also a python noob but i'm having fun learning. 
Good guys Russians, helping move DoD and DHS off of Python 2.4
Good question. In my case, the workstation's IP is static and all ports are forwarded to the WAN. Therefore I always run a secure jupyter server. https://jupyter-notebook.readthedocs.io/en/stable/public_server.html#notebook-server-security
There's an IO bound portion (getting data from SQL) and a CPU portion. Each task thread uses multiprocessing to perform the CPU intensive part, but the IO part is done in that thread.
Unfortunately you can't pack pyinstaller easily. I was disappointed too.
It's a reference to a Star Wars meme
Yes, if imports are explicitly called in your scripts it will get packaged. If it doesn't there is a flag to add it.
many thanks
Holy shit, thanks for that!
I love eel so much, so easy to use and very effective.
I created this library that wraps what I think is an interesting data structure in a nice interface and I'd love to get some feedback.
Yep, like drepamig said, [Eel](https://github.com/ChrisKnott/Eel). It's a great little package to easily control JavaScript in a chrome app.
I ask myself the same question. Originally I didn't know this and just haven't got to changing it. Probably won't anytime still though.
Oh shit, didn't see that sorry
Clean + non-native + easy + pure Python is good in my book. I don't know where else you can get that.
https://docs.python.org/3/library/csv.html#csv.DictReader &gt; Create an object that operates like a regular reader but maps the information in each row to an OrderedDict whose **keys are given by the optional fieldnames parameter**. &gt; The fieldnames parameter is a sequence. **If fieldnames is omitted, the values in the first row of file f will be used as the fieldnames**. Regardless of how the fieldnames are determined, the ordered dictionary preserves their original ordering.
May I ask why chrome is required to launch the program? It's not a problem, I'm just curious to what part of the program uses chrome to do what it needs to do
Tbh I didn't even know where to start. Thanks for encouraging me! I actually did it 
In my opinion this is Raymond's best talk: https://youtu.be/voXVTjwnn-U I really hope he will write a book someday.
This repo contains some interesting Python surprises: https://github.com/satwikkansal/wtfpython
Probably a fully functioning website to which you can refer hiring managers, if having sample code is a must-have for you. Django or Flask back end with various pages displaying various interactions. Upload files to the server (handling those files properly), various requests which handle user data dynamically (POSTs), queuing tasks and using a queue manager to process those tasks in some order, implementing an authentication system (careful with this one -- they will probably poke and prod at your security setup so don't implement one if you aren't comfortable). More importantly, I think being able to understand and discuss basic concepts about the topics above will help you get a job. People don't always hire vets -- plenty of opportunities to get into a junior role by showing an interest and basic understanding. Some Google fu should get you more than enough information about the topics I mentioned. I'm not a web dev so someone else please add onto / correct the topics I've mentioned.
https://github.com/anntzer/mplcairo#what-about-the-already-existing-cairo-gtk3cairo-backend Reproduced here: What about the already existing cairo (gtk3cairo) backend? It is slow (try running examples/mplot3d/wire3d_animation.py), buggy (try calling imshow, especially with an alpha channel), and renders math poorly (try title(r"$\sqrt{2}$")). (To clarify: images are rendered upside down and mis-apply alpha; math rendering quality is extremely poor.)
Thank you very much for the information. What is it that you do with Python? I'm looking to build web apps. I figure that being a backend dev as things move toward cloud computing is the way to go. Would you say that I'm right about that?
I would work out some scenarios that describe, in a few sentences, what every "move" operation will do, how it will vary depending on the type of terrain, mobs, etc, where move can start from, and how to specify direction, etc. You won't really know what kind of data structures to use until you have a good clear outline of what you want. Please don't be daunted by the high upfront cost of that plan; you will develop perseverence before you are done.
&gt;Although that way may not be obvious at first unless you're Dutch. Never fails to inspire me. &gt;If the implementation is hard to explain, it's a bad idea. Second favourite.
Brainfuck compiling a brainfuck.... Ha!
He's worried about diffs.
At least in Toronto the Python meetups are all professional startups presenting what they are working on. 
A Turing-complete machine is one that can simulate any other Turing-complete machine. For example, you could write a C lexer+parser+compiler in Python, because Python is Turing-complete, as is C. This has nothing to do with ease of use or performance, only that it's possible. To prove that list comprehensions are Turing-complete, the author implemented a [brainfuck](https://en.wikipedia.org/wiki/Brainfuck) interpreter, which is *known* to be Turing complete.
yapf is not deterministic 
Wow! Thats something. Thank you!
Python is probably the best software to run Python. If you're looking for an IDE, Visual Studio is great and has extensions to support tons of other languages as well
Check out Anaconda distribution of python. It’s python core plus common libraries plus spyder, an IDE. I use it everyday. In spyder, #%% is a comment, but also creates a block of code that will run when you press Ctrl-Enter. The next #%% will start a new block. The execute a bloc and move to the next, Ctrl-Shift-Enter. 
I aah think he's aaah one of the best aaah speakers ever.
I’m gonna pretend like I have enough knowledge about ui and webapps to understand how that works and than later accept the fact that I have no idea why it works this way since I’ve been programming for two weeks xD
I’m new to Python, but that behavior seems very strange, at least as the default. It seems really easy to shoot yourself in the foot. Is this consistent with how scoping works generally in Python? Even if it is, you’d intuitively except ‘a=[]’ to be executed each time you call the function. 
Maybe helpful, but when trying to figure out methods for some object, you can use "introspection", like in the interpreter you can often just hit tab, tab and it will show you a list, or just call &gt;&gt;&gt;dir(__import__('os')) which returns a list with listdir, getpid, chown, and so on.
I would suggest pandas.read_csv instead, and convert it to a numpy array. 
bottle is a micro-framework for web apps similar to flask or pyramid. You may be familiar with the daddy of the bunch which is django.
This looks actually useful
Sweet! BTW, would it be possible to see the code for this? 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
It's actually *not* a scoping issue. It's a consequence of how Python initializes and stores functions. It only creates function objects once, at program startup. First, Python starts. The interpreter/runtime are loaded into memory. Python then starts going through the Python file passed to it, descending into imports etc etc. When it encounters `def foo()`, it creates a function object that exists for the duration of the runtime. If the definition is instead `def foo(a=[])`, then a list object is a created to act as the default value and is stored on the function object. The function isn't re-created every time you run it. It's created once, at program startup, and any default arguments are created at program startup as well. Therefore, if you mutate default arguments, you're mutating a singular value attached to the function object. It's not super intuitive until you understand the object model and runtime lifecycle. 
But not his XXXL fedora. Hopefully he will have a critical assessment of his personality disorder before anyone has to work with him.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Great stuff-- there's a few things you might want to consider to "add" or "think about adding" in the future for this excellent project. I've got my on compile process/script (homegrown) with a right-click on the ".py" file that compiles to yes/no console version. We should connect maybe-- love it dude. 
In simple terms, the program hosts a webpage and it uses chrome in app mode to display the page to the user.
I actually read about flask and django like a few hours before you answered my question so yeah. I just got informed recently (FYI I’ve been programming in python for only a week so I’m pretty new to pretty much everything)
So the GUI the application shows is a glorified chrome window? And if so why do you think he chose to make it this way, visual limitations in the Tkinter module or just because of functionality?
What you have sounds awesome. A good way to connect them would be to make it so my run.py can take an argument of a filename so when it starts that file is already in the script location. Then just make the right click item call run.py with the filename and the user can complete the rest of the form visually without having to start the program and find the script themselves.
&gt;So the GUI the application shows is a glorified chrome window? Yea, pretty much. I hate tkinter so dam much and PyQt is too bloated. Using HTML and CSS was a good way to go and I really wanted to use the Eel package since I had not used it before. Also JavaScript made visual changes a lot easier.
very cool you'll love it! Feel free to throw any questions my way. I'm by no means an expert don't think I ever will be but I've been around the block. lol.
wow sorry guys i'm not very good at reddit and my format went hay wire :( any tricks I should know? haha.
Hows it run in linux?
I would buy this.
You just need to update your screenshots. 
Well here's one thing the financial industry has in common with Russia.....
Yes, functools is built in.
I haven't actually tested it in linux
Old. Will deprecate soon. Several design flaws fixed in 3.x (see input() vulnerability)
Exactly correct! That's the standard way to initialize *mutable* default values for a function. I agree that it can be very confusing, but it's one of those things that's been baked into the language more or less since day 1. Changing it would presumably involve significant/breaking changes to the runtime, and maintaining backwards compatibility is a very high priority for the Python team.
How is this different from the existing pyinstaller GUI that already exists? 
There is one that already exists? Link?
Transpose the matrix and then reverse it. I'll leave you to figure out how to do that.
Ok will do
https://www.reddit.com/r/Python/comments/84ernc/python_ides_and_code_editors_a_guide/?st=JET9VYB3&amp;sh=fd5eb61c Answer to my own question for anyone else that’s curious - 
Yeah, I used to work for the federal government. The idea of them using 2.7, even today, is exceptionally optimistic.
Everyone keeps trying to give you things that do what you're asking for you. You almost have it. Basically to do this you want to transpose the matrix, and then reverse it. You have the transpose part down, but you're missing a step. It looks like it's working, but that's only because the heart shape works without the second step. You need to reverse the matrix after that. To see why, put a 0 in one the corners you will see it show up in the opposite spot that you want.
how does it differ from cx_freeze? 
Any source for this? You mean for malware targeting systems running Delphi? Or their own backends/tools or something? I've read the Dukes supposedly wrote spearfishing exploits in BASIC to target Excel macros. First I've heard Pascal.
Does it have to be a Boolean? I would say the person commenting on the comment. It's as if that person thinks bumper stickers and political yard signs change people's opinions.
should at least put a package in pypi tho, so you can just install with a pip command 
They look the same to me. The thing with code formatting tools is that you learn their style as you gain familiarity with them, and after that it's fine. People who've used this library a lot will be more used to reading its output. It is deterministic and easy to understand, and just like PEP8, if you use it a lot, you will get used to it. If you don't use it a lot, it'll look weird to you. BTW I always put in trailing commas because it stops me forgetting to add one. This causes me frustration when entering JSON, as JSON considers a trailing comma to be a syntax error! :-(
So why comment on the comment to the comment, if you feel it will have no effect?
PyQT is too bloated but launching an entire web server instance isn't? If we're going by bloat only, I think I'll take qt over electron any day.
&gt; They look the same to me. *And that's the problem.* The second one had the typo in "another_fuction" fixed. &gt; You don't have to use it. But I want to use it, because I like the idea. I made my comment because I anticipated an issue, and suggested a possible fix for it.
I use Pycharm and their spellchecker would have caught that, so I'm not used to checking identifier spellings unless they look like hashes or something. 
Can you add four spaces before each line so that Reddit shows your actual formatting?
there you go
That's a comparison to gtk3cairo, what about the main cairo backend?
Boredom.
And I've just found the situation is worse than I expected. This line is 89 characters long: __all__ = ["some_function", "some_other_function", "another_function", "and_another_one"] so as expected Black reformats it, producing this: __all__ = [ "some_function", "some_other_function", "another_function", "and_another_one" ] (Should there be a trailing comma? I was expecting one. But that's not the main point.) If I add another name to the list so that the line is too long again, Black reformats it again: __all__ = [ "some_function", "some_other_function", "another_function", "and_another_one", "and_another", ] While that's my preferred format for a list like that (as noted in my original comment), I was expecting this instead: __all__ = [ "some_function", "some_other_function", "another_function", "and_another_one", "and_another", ] It would be really nice if there was a way to avoid significant reformatting when a list grows or shrinks.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Pycharm Professional version has a visualiser for yappi. However I've never tried it with threads. Docs &amp; screenshots for the pycharm feature: https://www.jetbrains.com/help/pycharm/optimizing-your-code-using-profilers.html
Coast Guard has approved python 3.6!
 &gt; 6! 6! = 720 
The main cairo backend was (until 2.2 came out) not usable interactively other than in gtk3cairo. I contributed the new qtcairo/tkcairo/wxcairo backends in Matplotlib 2.2 in order to cleanly separate out the windowing parts and rendering parts of qtagg/tkagg/wxagg, so that I could reuse the windowing parts in mplcairo. In any case, all the cairo backends currently in Matplotlib ({gtk3,qt4,qt5,wx,tk}cairo) share the same pycairo-based rendering code, and thus suffer from the same issues as listed above. But thanks for pointing out that the README could be clearer.
Hm. Why is it necessary to separate "`ixs_by_slices`" from "`slices_by_ixs`"? I haven't yet had a chance to look at the code, but is it the result of a design choice or a Python limitation?
I have 0 clue how to do that but I may consider it. Thank you!
They practically do the same thing just they do it in different ways and I believe pyinstaller has more options.
Bad bot
Thank you FearTheLeaf for voting on WhoaItsAFactorial. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
I know that this is smaller than PyQt5 but I guess what is used is personal preference. One note i mentioned to someone else was that one of the reasons I created this package was to learn how to use Eel; I have used PyQt a lot and wanted to try something else.
Yeah I guess not all that popular; I just remember seeing something very similar. Got yours running on Windows and is much nicer, though. Props
Open an issue on github
Good bot
(1/2)!
Thanks for the detailed summary. I tried finding a good overview of the different matplotlib backends without much luck.
I did some playing around and I found that without calling `asyncio.ensure_future()` order of execution is not kept. (Same as with `asyncio.wait()`). Not sure that really affects anything, but definitely a consideration if for some reason you do need to maintain order.
If you mean the song is playing and a microphone connected to the computer picks up the song and then identifies it (kind of like shazam), then your go-to libraries would be things like Keras and Tensorflow. It's not a trivial problem, you should definitely search for ideas on google. 
https://matplotlib.org/devdocs/tutorials/introductory/usage.html#backends (very slightly outdated now that I added a bunch of cairo-based backends to mpl itself; again the motivation was not so much to fix the builtin one (pycairo is always going to be slower than C...) but to make it easier to plug in other renderers).
https://matplotlib.org/devdocs/tutorials/introductory/usage.html#backends (very slightly outdated now that I added a bunch of cairo-based backends to mpl itself; again the motivation was not so much to fix the builtin one (pycairo is always going to be slower than C...) but to make it easier to plug in other renderers).
https://matplotlib.org/devdocs/tutorials/introductory/usage.html#backends (very slightly outdated now that I added a bunch of cairo-based backends to mpl itself; again the motivation was not so much to fix the builtin one (pycairo is always going to be slower than C...) but to make it easier to plug in other renderers).
Yap been there. It was only a half-joke for those who worked in the belly of beast so to speak.
Show your actual code.
Show your actual code.
Show your actual code.
I just added a new commit to allow a filename to be passed to the script which will put the filename in the script location on startup. Tell me if you get around to something, the idea was awesome.
I just added a new commit to allow a filename to be passed to the script which will put the filename in the script location on startup. Tell me if you get around to something, the idea was awesome.
I just added a new commit to allow a filename to be passed to the script which will put the filename in the script location on startup. Tell me if you get around to something, the idea was awesome.
I just added a new commit to allow a filename to be passed to the script which will put the filename in the script location on startup. Tell me if you get around to something, the idea was awesome.
I just added a new commit to allow a filename to be passed to the script which will put the filename in the script location on startup. Tell me if you get around to something, the idea was awesome.
Better question is why would you want 2.7? Besides legacy code.
https://matplotlib.org/devdocs/tutorials/introductory/usage.html#backends (very slightly outdated now that I added a bunch of cairo-based backends to mpl itself; again the motivation was not so much to fix the builtin one (pycairo is always going to be slower than C...) but to make it easier to plug in other renderers).
Yeah, why would anyone want to use a newer, better-designed, future-proof language when you can use an old version missing a bunch of great features which is going to be deprecated in less than 2 years?
They dropped the ball. In what language does "X" have a hard K sound?
I just added a new commit to allow a filename to be passed to the script which will put the filename in the script location on startup. Tell me if you get around to something, the idea was awesome.
Check out this link. [Audio Fingerprinting with Python](http://willdrevo.com/fingerprinting-and-audio-recognition-with-python/) 
FYI, this is not electron, and a web server is literally a function listening on a port - as heavy as any python program 
How to attend the open-source requests. I have some development experiences in python/networking. See my github:https://github.com/muyun
Maybe :-)
It's because of the US and EU sanctions after Crimea. Mainly financial and economic bans, but Python3 also.
Hmm fair, but what if you pull off a rad ice drift. Kinda makes you not wanna ride your bike normally
True, except input() is not really a flaw/vulnerability... they simply removed the feature in Python3 and renamed raw_input to input. In python2 input should understood to essentially be eval. It is literally eval(raw_input()) -- to provide this as a user interface is a programmer problem, not a language problem.
Most security people who write these tools are not full time developers. Writing software is a tiny part of their job. So a lot of the libraries/other tools their tools depend on have never been ported forward. I've found for a great deal of things, its simply easier/more practical to do my work in 2.7 rather than spend ages trying to port bits of libraries to 3.x given time/budget constraints, etc... 
I’d call it a language problem in the sense that it is bad design. It’s really the sort of thing that invites security vulnerabilities. What functions do should be obvious if they are designed well, and evaluating arbitrary input is almost always a bad idea in general (see XSS attacks). It’s sort of like having a deterministic RNG as random, an a secure RNG as random_crypto. It’s “fine” as a language feature, but is begging for misuse. 
An absolute shitload of malware was written in Delphi. DarkComet is a good example. On ratforge and other malware dev forums a large majority of the sample code was in Delphi. All the "how to" stuff would be largely delphi. It was better than .net (produced actual native code), didn't produce massive bin sizes, and was less of a chore than C/ASM. 
One use case off the top of my head: you are running a BnB a[from_date:to_date] += people_count # reservation a[some_date] # number of guests you need make the breakfast for The reason for function-based interface is that the class hierarchy is likely to change as I get some feedback. The only classes mentioned in the docs are interface classes. I don't want a user to stick to any particular subclass of `by_slices.Aggregator` - it may not stay for long.
Actually, the probably could :) Initially there was only one of the two. Then I realized the second could be impemented on top of the other and added it. Now that I thought about it, yes, they could be merged. Thanks!
&gt; Unindent does not match any outer indentation level In python, indentation determines code scope/blocks... the way braces do in C. In C code, you might start a function with a brace (say 4 space indent in python) and inside that function, you might have a for loop containing some statements inside a code block. This code block will start with another brace (8 space indentation in python). Once the for loop brace closes, you are back to the scope of the function. In python, you end the for loop by going back to using 4 space indents. However, if instead of going from 8 to 4 space indents... you go to 6 space indents, then python does not know what block does this 6 space indented code belongs to. Thats what the error is complaining about... Also, dont mix tabs and spaces in the code. The indentation distance might look the same, but python will look at them differently. 
Great work!
Half of linux still uses 2.7, time is really running out.
The `autoreload` magic is awesome. A minor caveat is that it only works with pure Python modules and not C-extensions.
earlier this week someone posted a GUI for pyinstaller: https://github.com/brentvollebregt/auto-py-to-exe via https://www.reddit.com/r/Python/comments/84kwb8/auto_py_to_exe_is_complete/
eel is totally fine to use, and likely a lot easier to work with. I just found the "bloat" reason silly is all. 
Awesome, I'll keep that in mind for future projects :D
Yea, I definitely see your point.
and there is
A collection of 15 small — minute — desktop applications written in Python using the PyQt framework
Why do you want to do that? This sounds like [a XY problem](http://xyproblem.info/)
I didn't get to write as much dode as I'd liked this week, lots of maintenance tasks and documentation and diagrams. I did get around to open-sourcing our take on the "futures" module ThreadPoolExecutor, the "CollapsingThreadPoolExecutor". The ThreadPoolExecutor will very quickly expand up to max_workers- our use was extremely bursty at start-up (hundreds of threads due to hundreds of simultaneous gRPC calls) but settles down over time, so we had a use case for a thread pool that increases/decreases workers to meet demand. If you want to look at the code, [check it out on Github](https://github.com/initialed85/collapsing-thread-pool-executor) and if you want to use it, [it's on PyPI](https://pypi.org/project/collapsing-thread-pool-executor/)
Python 2.7 is due to a hard EOL in 2 years and people are backporting features?
And they develop from Windows? I read Russian federation funded/sponsored a linux distro. Very interesting.
Most of the folks I spoke with back in the day in the malware scene were developing on windows, and targeting windows. Writing malware in C or Assembly is doable - Poison Ivy, for example, was a mixture of Delphi and Assembly if I recall correctly. The payload (running on the target) was written in Assembly, and the controller was written in Delphi. Poison Ivy is especially interesting given it was written by Westerners in the malware/trojan scene, and was adopted by Chinese APT groups rather widely at various points in time. Notably, the APT1 group that is well documented.
What is your financial freedom dream? Python and PHP are about the same age if I'm not mistaken.
This, indeed, was a collection of 15 smalldesktop applications written in Python using the PyQT framework.
difficult to say without replicating/having your file. Have you tried reding the file in chunks? ``read_csv`` has a ``chunksize`` parameter for this purpose. If you can replicate the steps you've taken the pandas devs would gladly take in a bug report.
It's still BFS/DFS even if you aren't using tail recursion. [Pillow](https://pypi.python.org/pypi/Pillow/5.0.0) is the major image manipulation library for Python. If you need it to be really fast you may find [numpy](http://www.numpy.org/) and [scipy](https://www.scipy.org/) useful, though those libraries are fairly overbuilt for this. For reasonably sized images none of this is likely to be agonizingly slow unless you write something very wastefully or mess up and make it O(n\^2). An image of this size can probably be processed in all those ways, even doing the flood fill in pure python, in well under a second. There is even a flood fill function built into pillow.
I could do a microphone but music will just be coming from another app, so it would be nice to just pick up the stream from the OS, if that’s possible....reasonably possible :) 
Using the PyQT framewok, 15 small - one could say minute - applications in python were made.
Knee-jerk reactions on the title? If you read the first few paragraphs you find something much more interesting then a backport and learn a thing or two about generators, what `yield from`really does and most of all what kinky things Python can do to itself.
In the formula you have show, should not itemprice be Item_price and GST be Gst ?
It's a nice collection. Showing how to package is a must though. Besides, isn't PyQt dead? 
Moonsweeper's premise made me laugh, but when I saw the brown note I shat my pants.
It is the rationalism. They are not use Python 3 because Python 2 works well.
Point taken.
After reading though the article, I'm confident that there are 15 small desktop applications. They were written in python using PyQT. 
Wtf is happening with the comments in here? Like bots on meth
Surely, you are going to need at the very least 3 different executable files (one for each major OS). Is that fine with you?
Hitchhiker : You heard of this thing, the 15 Minute Apps? Ted : Yeah, sure, 15 Minute Apps. Yeah, the Python thing. Hitchhiker : Yeah, this is going to blow that right out of the water. Listen to this: 16... Minute... Apps. Ted : Right. Yes. OK, all right. I see where you're going. Hitchhiker : Think about it. You navigate over to https://martinfitzpatrick.name, you see a link for 15 Minute Apps sittin' there, there's a link for 16 Minute Apps right beside it. Which one are you gonna pick, man? Ted : I would go for the 16. Hitchhiker : Bingo, man, bingo. 16 Minute Apps. And we guarantee just as good a workout as the 15 Minute folk. Ted : You guarantee it? That's - how do you do that? Hitchhiker : If you're not happy with the first 16 minutes, we're gonna send you the extra minute free. You see? That's it. That's our motto. That's where we're comin' from. That's from "A" to "B". Ted : That's right. That's - that's good. That's good. Unless, of course, somebody comes up with 17 Minute Apps. Then you're in trouble, huh? [Hitchhiker convulses] Hitchhiker : No! No, no, not 17! I said 16. Nobody's comin' up with 17. Who works out in 17 minutes? You won't even get your heart goin, not even a mouse on a wheel. Ted : That - good point. Hitchhiker : 16's the key number here. Think about it. 16-Elevens. 16 dwarves. 16, man, that's the number. 16 chipmunks twirlin' on a branch, eatin' lots of sunflowers on my uncle's ranch. You know that old children's tale from the sea. It's like you're dreamin' about Gorgonzola cheese when it's clearly Brie time, baby. Step into my office. Ted : Why? Hitchhiker : 'Cause you're fuckin' fired!
https://www.ptrace-security.com/product/python-for-ethical-hackers-v3/
I don’t think it’s bots, dude. Just... meth.
Python is a good language with good design, good precepts, and good community. PHP is a nightmare made real. Decide for yourself.
&gt; isn't PyQt dead? Did Netcraft confirm it?
CustName = input("Please enter the customer's name: ") item_price = int(input('Please enter the price for ' + CustName + "'s item:")) discount = item_price*0.15 print('GST:') print(discount) 
Writing a parser for Bloomberg API and send email bug reports
If you don't want me to jerk my knee, don't hit it with a hammer. In other words, if you already know the title is misleading, why not pick a better one?
Would rather just chuck the yield_from in a utils.py module - rewriting source with AST was interesting but feels like a rube goldberg type solution lol. Nice write up.
Are these "absolute beginner" tutorials really relavant to a subreddit full of users who arent absolute beginners? At least offer these tutorials to /r/learnpython. I can assure you 95% of people here already know what youve taught here.
Playing devils advocate here can't many linux users just about do that? Download it to $HOME/bin, double click and select "execute in terminal"
Noodling on [Sketchables](https://sketchables.co) - A growing collection of illustrations and vector files to make designs really pop! Been trying out using VueJS with the Flask backend.
What is it you're confused about?
Why using threading is faster than direct call whereas there is juste a simple call to one function
If you pull off a rad ice drift consistently, then biking on ice might be your thing, and you should keep at it.
But `yield_from` can't be an actual function. You can't yield across function calls in Python.
It's not my tutorial and I'm also an absolutely beginner. I found those tutorials useful for beginners and I shared this link. I never thought that all the people here could be expert in python. I thought all peoples are here. That's all.
OP must have bough some discount upvotes. Maybe next time pay for the more expensive package that isn't that obvious.
It's from a [Monty Python sketch](https://www.youtube.com/watch?v=4vuW6tQ0218)
yes I tried multi time, and I got always the same result: thread is faster then direct call 
Why would I want to simplify and condense my code...? Sure, I don't have one single syntax error I'm trying to work out, so I'm trying to ask a more conceptual question. Instead of having my sql commands in each function of each module module, I want to have one "controlling" sql module. I just don't know if the best method is assigning those local vars to global (probably not) or some other way like returning the var I want to be used in the class in a sql function with extra parameters
No, it’s not a vulnerability in the sense that it was unintended. It’s a vulnerability in the same sense that PHP was a vulnerable language. Seemingly default behavior would be to do something inane and insecure. Real (old) language vulnerabilities behave in much the same way. They are reported, documented for anyone who wishes to look, and fixed in the next version :) I’m not someone who believes in restrictive languages, but I do think that entering footy-shooty territory should come with a big warning. If developers always did what they were supposed to, we’d live in a very different world.
What answers do you expect to get in python subreddit? :) I'd suggest to learn what's in high demand and easy to sell on the market and where're prices're relatively high.
True. Like cobol. 
Glad you like it. Would be happy to get feedback :-)
Gotta clinge to it and hope devs will see how much people love dead worthless shadow of python and will decide to keep it alive, duh.
Can agree with everything but the community. You use f-strings? Holy fucking shit you're evil, you don't support anyone below python 3.6! You use python 3 and use it's functionality so your code won't run with python 2 interpreter? Woah you're fucking evil! You think that python 2 is dead? Woah you're evil, not everyone has to use your preferred version of the language! My program should run exactly the same on everything even if I wrote it 10 years ago!
I find it useful in learning PyQt. No connection with the author. I am not sure why there are so many irrelevant comments here.
I bet this was written by one of those skids who also think that regex is hard, just like Python 3!
Please checkout r/learnpython
I said it before, I will say it again: If you make a desktop application for end users, the job is not done until a non-technical end-user can install and run your program from an icon. 
Thanks, will do!
This post is better suited for r/learnpython
I’ve been paid to write PHP and I’ve been paid to write Python. Both languages are worth it, especially if you’re talking about PHP 7. Achieving your financial dream is more about your clients and what you’re building for them and less about a specific language.
This post is better suited for r/learnpython
Due to licensing. Downvote me for not liking its license and thinking that packaging Python Qt apps is important.
I'm getting the same results. It's got me digging into the threading module source code to see if there are any shenanigans going on... 
How is this related to python? 
I didn't downvote for those reasons. I totally understand that the available license choices don't suit everyone's needs. I've never personally had a problem with the license as the only app I developed for public release was fully open source and had zero intention of monetization. The project is being actively developed and from my experience it seems to be heavily used (both closed source and open source). It just seems strange to label it as dead because it doesn't have a license you agree with.
This sounds like the exact sort of thing you should be using a shader for. Never used one myself, though, so I'm afraid I don't have any advice for how to do that.
Because "why don't you tell them to install Python, it isn't that hard".
Pretty much any industry. You can check out some of the industries that use python - https://www.python.org/about/success/
Thanks for the link!
Thanks for the link!
&gt; And if so why do you think he chose to make it this way The same reason that a lot of applications are using local flask servers to generate and interact with a UI. A web page is a lot more robust than platform dependent UI frameworks, every user is pretty much guaranteed to have a viewer already (web browser), makes it insanely easy to separate logic and presentation, really easy to style, really easy to add UI functionality, etc. etc. In the past I spent a LOT of time working on creating UIs natively. Screw that. Using web server for logic and page for UI provides asynchronous behavior by default. That alone is enough for me to never bother creating native UIs anymore. I got caught a lot in the past with long running processes blocking the UI, trying to handle queue/thread myself for a UI and it's controls. It's just a lot of frustration that I don't need to deal with. In some situations creating your own app with it's own UI is the answer. But for the vast vast majority of cases I've come across the webapp approach has been the better option.
Your code is impossible to read, but doesn't seem like you store the int conversion to a variable. Thus you are comparing a string to an int. study_time = int(studyTime) ...
if you send a gist or formatted code it would be easy for others to help
You are on the correct path - Red is a tricky color to detect as a lot of our world contains red. Hue detection alone may not be enough. You could look into [hough circle detection](https://docs.opencv.org/2.4/doc/tutorials/imgproc/imgtrans/hough_circle/hough_circle.html) You could also try training a haar cascade classifier or looking into a deep learning fx like dlib. Your result might be better using a combination of a few different methods combined by a confidence/trust algorithm
Sounds like you are doing image segmentation. Opencv and scikit-image (skimage) can do this. If you are working with python I prefer skimage because it was written for python; but, both will do the job. Here's a tutorial on image segmentation with sklearn. http://scikit-image.org/docs/dev/user_guide/tutorial_segmentation.html If you are doing this for fun and you want to implement your own flood fill algorithm, check out "numba". You can convert your images to numpy arrays, pass them into a pure python function and compile it to native code with numba just by wrapping your function with a decorator!
I replicated it on a GCP vm instance. I also confirmed it’s not the pandas version difference (tried 20 and 22 versions). After searching a little more, now I tend to think it’s because MacOS has memory compression. 
Lots of good stuff in that repo. Thanks for sharing! /u/tippr 100 bits
u/Udzu, you've received `0.0001 BCH ($0.104637 USD)`! *** [^^How to use](https://np.reddit.com/r/tippr/wiki/index) ^^| [^^What is Bitcoin Cash?](https://learnbitcoin.cash/) ^^| [^^Who accepts it?](https://acceptbitcoin.cash) ^^| ^^Powered ^^by ^^[Rocketr](https://rocketr.net) ^^| ^^r/tippr ^(Bitcoin Cash is what Bitcoin should be. Ask about it on r/btc)
so the first problem we about to solve is to identify and find where the error are stated in your text... lmao. Plz format into something more readable first!
Once upon a time, in ancient time before the raspberries and arduinos, i used a pre-made board that let you load the hexadecimal asembler codes one by one and then runb your program in a Motorola 6008 (maybe, that was like 17y ago).The keyboard have around 30 keys, 0-F, intro and commands. We coded easy thing in assembler, manually converted them to machine code (all this on papery), load the codes by hand and press run praying to good for no mistakes was done in the process. The only debugging aid that this system have is read the memory position by position. With that in mind try to figure the pressure in the load with a keyword oriented like the one in this Calc. 
You set the data type when you create the column if it’s a relational db. Unless I’m not understanding your question.
You may have meant u/jannealien instead of U/jannealien. --------------------------------------- ^^^Remember,&amp;#32;OP&amp;#32;may&amp;#32;have&amp;#32;ninja-edited.&amp;#32;I&amp;#32;correct&amp;#32;subreddit&amp;#32;and&amp;#32;user&amp;#32;links&amp;#32;with&amp;#32;a&amp;#32;capital&amp;#32;R&amp;#32;or&amp;#32;U,&amp;#32;which&amp;#32;are&amp;#32;usually&amp;#32;unusable. ^^**-Srikar**
I'm assuming you're installing on Windows. Are you trying to call Python via terminal/cmd? Is your path setup correctly?
 print('What is your name?') myName = input() print("Well {}... You're gonna fail!".format(myName)) 
&gt; It’s a vulnerability in the same sense that PHP was a vulnerable language In my view, this is not really one of those cases. In Python2, `input` still continues do what it was intended to do [since 1990](https://github.com/python/cpython/blob/3f5da24ea304e674a9abbdcffc4d671e32aa70f1/Python/bltinmodule.c#L199) up to even in the latest versions of Python2. If it was really a problem like you allude to with PHP, they would have deprecated `input` it like [PHP's `mysql_escape_string`](http://php.net/manual/en/function.mysql-escape-string.php). Instead, [the input docs](https://docs.python.org/2/library/functions.html#input) makes very clear what it does and also mitigates the potential hazard for anyone who has the thought it might be for user input. &gt; Equivalent to eval(raw_input(prompt)). &gt; ... &gt; Consider using the raw_input() function for general input from users. Yes they changed in Py3 in favor of the better design. Py2 `input` considered harmful, sure. Vulnerability, no. &gt; If developers always did what they were supposed to, we’d live in a very different world That's one key difference between, say Java, and Python. Java worked very hard to limit features because of fear of abuse and misuse. Python, OTOH, is often described as having a 'consenting adult' philosophy. Paraphrasing Raymond Hettinger: &gt; [in Python] we don't put the locks on the door. We put the tie on the door knob to say keep out. If you decide to open the door anyhow, you may get scarred by what happens next.
I would n-never use add-d-d-d-erall. Th-that's s-stuffs bad f-for you. I s-stick to c-c-offee. On my 9th cup right now.
It's all part of the plan ;)
I think that you do a good post about exploratory analysis, but you have a lot of space to improve the visualizations. The income categories never came ordered when the have an obvious order. You can try to keep one color plus marker for every kind of data. Skimming through the post you have the same mark for the Americas and for high income. The scale of the tho plots about life expectancy vs income have different scales 
You're not totally wrong. But in a tutorial for python users, when you can clone the git and run the program, it's perfectly acceptable to post. I'm not gonna hate on the guy for not running it through py-2-exe instead of just publishing his code, when that's way outside the scope of this tutorial. Sure, you gotta delete an "s" (number instead of numbers on line 15). But beside that? If you have Python installed (and this is a python programming sub), then it [runs just fine](https://imgur.com/biktKZC). 
I'm legitimately confident in saying at least 90% of companies are using python in some way or another. So your resume will get dinged automatically. 
good bot!
You may want to look to the sidebar on the right and check into some of those resources. What you're asking is extremely basic and something you could learn from a single beginner tutorial, of which Youtube is full of. If you're going to be a programmer, you're going to have to be at least a little self sufficient in looking up information. The internet is ***full*** of how-to's.
I didn't write this, found it and thought I'd share. :)
Kudos for that. Like i said, tale it like an example of exploratory analysis, no for the visualizations. 
http://pymssql.org/en/stable/pymssql_examples.html Just create a string and replace fields and data types. If type(field) == ‘int’: t = ‘INT’ I can give a better example when not on mobile.
http://pymssql.org/en/stable/pymssql_examples.html Just create a string and replace fields and data types. If type(field) == ‘int’: t = ‘INT’ I can give a better example when not on mobile.
Thanks for the mention of Foobar2000, I hadn't come across that before. I actually used to use WinAmp in that timeframe, but foobar looks interesting.
I hate to speak in absolutes but don't ask this question. This is the wrong question. I'm using strong phrasing here because I care, I wasted time on this line of thinking myself. What projects you or I think you should have won't necessarily help, only what hiring managers think matters. As a new dev you likely won't be working remotely so it helps to start looking around where you are now. This is all totally doable. This is how I got my first job. Look in your area, understand who is hiring. Use google maps, searching for "software" or "consulting" or "it services", use yelp, conference web sites, github, look for the names of software companies or companies with custom IT needs with offices near the names of places you live close to (large organizations like hospitals or banks almost always have SOME problems deserving custom code) and try to understand what problems they have right now, today - most organizations don't plan IT or software staffing needs more than a few months ahead, anyway, since that's the average duration of a project that Python is likely to be used for. Know where the offices of these companies are and dissect their websites and press releases to understand what they do and how many people work there. Finally, get the names of people that work there by stalking them on LinkedIn. Understand who they worked with before where they are now and use their history to understand what other organizations you might target. Yes it feels creepy, but it works. Go to any meetups that have anything to do with technology near these places. Listen to presenters at each the first time and second time you go, then the third time you go offer to present about something you heard somebody ask a question about the next time. Heck ask if you can the first time if you're feeling bold. The juiciest bits are not during the presentation but afterwards in hallway conversations. Write blog posts about exactly what you heard, augment with something you didn't overhear that you learned by googling. Wordpress.org is free to setup. You don't have to be original. You just have to demonstrate that you can do research on best practices, especially without being asked, this is the biggest plus for me when hiring junior. Present what you found at these same meetups. Yes that means powerpoints or prezis but you're going to be surprised how much of those you'll do regardless. Competent hiring managers (in the US and AU at least) lurk at meetups and will know your face, which is a shockingly easy way to derisk yourself to them. Try to find out what the hiring managers around you are trying to build. THEN build something like that and put it on github. Then apply. Cold emails to specific hiring managers work well, sometimes it's just first initial last name @ companyname.org. Two sentences is fine. If you have to send a resume to a jobs@ email address not much will be likely to happen even as a senior dev/lead like me.
He has parasites
I just gave and only store the link on db and have the text on file text.
Just about every medium/large sized company uses Python to some extent. Python is used a lot for data processing, testing, automation, and lots more. It's the most versatile language I know.
Something like `f(x) for x in my_list`? 
it fixed the first part now there's a second function which doesn't work with that method. I think its bcz the function look like this book.spline = [ 'nav', f(x) for x in book_chps ] 
&gt; because it's still new PHP initial release: 1995 Python initial release: 1991 
Do you have to drop it, or can you define the structure and then simply truncate it before you start smashing data into it? 
Honestly, while Hough circles is in theory a very nice algorithm, I have to say that I tried using it a couple of times in the past and never got it to work reliably. I‘m certainly not too experienced in CV but tuning the parameters for Hough circles is quite tricky in my opinion.
&gt;Modern Serverless Code. Running any code on our servers is as easy as calling a function. Build apps faster. Never think about servers again. My mind is now racing with questions about servers.
wouldn't that call the function multiple times? I mean the point is unpacking the list into the arguments and run that function one time, like f(full list unpack)
What kind of questions?
cmd is unable to find pythonw, but can find python.. I have no idea whats the importance of the path, or how i set it correctly (im a noob)
im using windows 7. no im not receiving any error message, it just doenst do anything when i try to open pythonw. Python on the other hand runs great 
u/antespo thank you so much for the feedback! it is fantastic! You are absolutely right, I'll definitely make those changes. And good idea on declaring the variables in my render method before using them in my JSX. That's something I need to get into a better habit of doing. You are right about .iteritems(), i'll fix. I'll probably skip on using format strings for reverse compatibility with Python &lt; 3.6, but instead move to using the format method .format() &gt; I'm pretty new to using map so what does return true at the end in your map do? I believe ECMA standards for map require that something be returned so in this case I am returning true, even though I'm not doing anything with the function. There is actually probably a better way to write that code, I'll take a look when I address all the changes you suggested. &gt; Last why is APP put into a variable cant you just return right there? If you are referring to my &lt;Body /&gt; Component, I do this because I have a condition that checks if that App is waiting for the API call to finish to the backend. If it is still in the loading state, I show a loading element instead of the App itself. All criticism is good, so don't feel like you have to hold back. I did a lot of sloppy stuff with this and now I need to go back and do some cleanup. I appreciate the comment! 
How are you trying to run pythonw? It sounds like the expected behavior of pythonw: https://docs.python.org/3.6/using/windows.html. pythonw is to be used when you want to run a Python script without a terminal window appearing.
Hey I've done this before. Your first problem is going to be that his code looks for the largest area patch with in your HSV range. That's going to be tricky with your target shape. I was trying to use a blue marker cap and I had a lot of issues trying to find a good range. I just used a lot of trial and error but there should be a better way we don't know about. A bright red laser pointer should be easier to define since you'll have a ton of red. Since you don't have anything showing up in your mask lower the lower bound thresh hold and make sure you're in the right HSV space. I got burnt because I forgot and was trying to match RGB colors
Are you looking for the * operator? https://codeyarns.com/2012/04/26/unpack-operator-in-python/
thanks for the advice. It seems so far like a LOT of trial and error and having additional debug windows open the entire time, lol
Python offers a very broad field of jobs. Maybe you are interested in data science related stuff: https://datasciencejobs.de/tags/python/
to put it an other way, my problem is that i'm trying to learn python, i have only the terminal, but i dont know how i can create and save a progrmam. I though pythonw was that and it seems that is isnt
wait....what
++Count doesn't work as in C. Instead use, count+=1.
It's used for security, automation, ETL, machine learning, and a bunch of other stuff
Use `a is None` rather than `a == None`. Otherwise that's precisely how to deal with this issue.
This post is better suited for r/learnpython
Dinged in a good way. Like *ding*, one point for /u/NevadaPurple!
Glad you found it interesting (and thanks for the tip!)
I rewatched the LotR trilogy a few weeks back, and every time Merry said "Pip" I got this same feeling.
If you've got a good head on your shoulders and know Python/Pandas well, you can get a job as a Data Analyst veeeeeery easily (at least in NYC). From there, you can work your way up to software engineering, data engineering, data science, etc...
I'm a researcher in physics and I use python every day in my work. Runs the lab, collects data, analyzes data, calculates statistics and create figured, backs stuff up, downloads movies to watch when I'm done. Literally everything. 
Uhm, no. &gt; it first adds an element to the list (+ operator), which works No it doesn't, it tries to concatenate the tuple and the list, which fails. To make sure I tried it. I put the following code in a file and ran it both via Python 3.5 and 2.7. In both cases the output was `([0], 'foo')` as it should. my_tuple = ([0], "foo") try: my_tuple += [2] except TypeError: pass print(my_tuple) Maybe I'm misunderstanding what you're trying to say? 
maybe *pinged*?
Aww thanks! Waited for this for so long. I don't get along with RST. I used to have the setup.py convert from markdown and programatically generate an RST.
https://xkcd.com/1425/
I just recently tried to get the dimensions of an array of ca. 50 circles from an image and Hough circles was producing a lot of false positives because the shapes were not completely round but slightly elliptical. I think my thresholding and morphological transformations were not the problem. In the end I went with a combination of ’find contours‘ and ‘fit ellipse‘ which produced quite satisfactory results.
I don't understand how this is "serverless". Can you explain a bit for me, what is meant by this?
Explicitly...no. implicitly, as in some apps on some machines were coded in Python, ...yes.
hi, how it compares with pycontracts?: * https://andreacensi.github.io/contracts/
Yes, once you have some data you would need to define an objective function to maximize (ie the "goodness" of a city). It's up to you to decide what this function is exactly, but it will probably be something like the dot product of the vector of city attributes with a vector of attribute weights. If you search site suitability on google you'll find some guidance. It's more of a GIS concept but the idea is same - you're just scraping attributes instead of calculating them yourself.
Data science! EVERYTHING now revolves around data wrangling, storage, cleaning and analytics and Python is EXCELLENT at that. Some people would argue that R is better, and it may be, but Python (at least in my opinion) is more versatile. If you end up hating data science, you could go work in games and be a developer for EVE Online. Youtube was built in Python, so knowing that could help you land a job there. People need quickie crawlers all the time so it's great for picking up small freelancing gigs - I took one class on Python via Coursera and was doing work within a couple of weeks. There are SO many avenues, and it's such a great language to work with. I kinda like Python a little [if ya didn't notice]
I took a bit of a weird path honestly (started at a small old school consulting firm in a non-technical role, then I started automating everything with Python until they made it my full time job), so I don't know how much my advice will help... But I would say I get a LOT of interest from recruiters on LinkedIn as a relatively recent graduate with a non-technical degree. If you have a GitHub page with some small projects that you can share, that may help too
motivating =)
it means that when you deploy your application, they calculate every single possible interaction any user could ever perform including actions with other users and they push the "actionpack" to every end node and every client in the world so that it is instantly loaded whenever a user thinks about using your service. it means caching is no longer necessary because everything already exists in the client. security is irrelevant. data overhead is a thing of the past. and as icing on top, i18n is utterly painless because they already translated everything in every possible language that, or they're just making shit up by redefining what "server" means
Thanks. It was rough being a self taught programmer looking for a first job. Having a LinkedIn page and a Github page on my resume might have helped but I'm not sure that they do much to distinguish anymore. Maybe just contacting recruiters directly on LinkedIn would be more fruitful. 
This is precisely what I mean. 
So something like 'f(*list)'? * will unpack the list for you
Other FaaS solutions require your code or your workflow to be structured in some way to fit in with their system, not to mention requiring you to use their tools. Coherence integrates with the programming language to make it a lot simpler on the developer. Just pass a func and it's getting run. Structure your code however you like and use your favorite tools!
How about inspecting the table before you pull your data? Or are you making changes to the data once you've pulled it?
I love the new pypi it looks so nice I cant wait for it to come out!
Yeah this is about as far as I've gotten....
removed...
Not realistically. Source tables can change too and this would create a horrible inflexibility...
Only if you're making proper applications, This guy is not doing that, he's making a tutorial. 
Next it'll support Ruby. :-(
As someone with a Physics PhD a CS BS and 15 years of Python experience I'd say you are in good position or a broad variety of jobs. Especially if you have experience in electronics and probability. In my experience pure computer science majors have a weakness in continuous math (as opposed to discrete math) and analog hardware (and even digital electronics). My mentor taught me that information arbitrage is a good thing. A paper presented at SPIE that would be laughed at as trivial at SIGGraph is often received as deep magic or vice versa. If you are conversant with both fields you can port concepts back and forth. Python allows for you to mix physics work and programming simultaneously. 
Me too, and it meant I had to install pandoc in every virtualenv. Glad to see this change!
Which course did you take and recommend on Coursera?
When Microsoft was king, it ignored Eastern Europe and charged ridiculous prices. Borland, wanting a win, cultivated Eastern Europe and offered generous pricing. Subsequently, they developed a following behind the Iron Curtain and Borland products were often used in schools as well. Hence Russian hackers would have had considerable exposure to Turbo Pascal and later Delphi. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [python/cpython/.../**tasks.py#L594** (3.6 → a954919)](https://github.com/python/cpython/blob/a954919788f2130076e4f9dd91e9eccf69540f7a/Lib/asyncio/tasks.py#L594) * [python/cpython/.../**tasks.py#L672** (3.7 → 6e65e44)](https://github.com/python/cpython/blob/6e65e4462692cbf4461c307a411af7cf40a1ca4a/Lib/asyncio/tasks.py#L672) ---- [^delete](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dvtfjgy.)
&gt;Pascal is a fun one to learn for the "nostalgia" sake (not much is written in it &gt;anymore) Please tell the die-hards that. I've seen one of them claim it's as popular as Python (admittedly based on ridiculous numbers in press releases the current owner of Delphi released)! This person later was hired to be their C++ product manager. The current Delphi product manager told me that he honestly believes that Delphi had more impact on the business world than Python ever has and he doesn't agree that the .NET ecosystem is larger than Delphi's. :-( At this point it's basically a cult. 
I started with "Dr. Chuck" Severance's course. It was a single class back then, they have now split into 5 courses. Coursera got really greedy, which sucks. Dr. Chuck has his own site, where you can still see all the videos and get his book, if you just want the education and don't care about the certification https://py4e.com/ I just took it on Coursera, so I cannot say for sure that the materials are identical, but he was teaching directly from his book which is free and open source, so it's probably very close if not identical. I then followed up with the next series by U Mich, Python for Data Science taught by Dr. ....wow, I hope he doesn't read this. I can't think of his name offhand. Dr. Chuck's class was better ...Brooks. Dr. Brooks. The Data Science class is super fast, and very light. It's more of an overview on what Numpy and Pandas can do, without a lot of depth into actual practice the way Dr. Chuck really digs into functionality with a lot of examples and discussion. I recommend a couple of courses at EDX.org instead to follow up Dr. Chuck's series if you are getting into Data Science. The micro-masters series on Python for Data Science at UC San Diego and the Harvard intro to Python for Data Science are both very good, and dig into some real-world applications. The UCSD course also teaches a lot of Linux command line operation which is good if you don't have a lot of experience at cli work in Linux - which you really should learn if you're getting into this. Another course I started but got busy and didn't finish was the Interactive Python course from Rice University, at either EDX or Coursera, can't remember which. It's taught by 4 guys and it centers around learning Python as a beginner by building games. They were all good teachers and it's very in-depth, and they added a second course that I haven't seen that probably really extends the first (just a guess). The problem I have with it is they teach it using a web-based UI that has it's own functions that ONLY work with that UI. If you start with that, you'll be learning functions that you then try in Python outside of the class that won't work. I don't recommend it as a first-time Python/Programming class for that reason, but you can pick up some extra depth as a newer Py programmer if you want to watch the videos for some extra foundational skills. Hope that helps!
Ha, I uploaded my first PyPI package 2 days ago and was pissed off to have to convert my readme to RST...
Oh that's awesome. I hope they can keep it up!
Tkinter is disgusting.
I have no idea if this is a good approach or efficient. But if you get no other responses it might be worth a try. Create a dictionary. Loop through every name. For every name - Alphabetize/sort the name - Remove duplicate characters - Loop through the characters -- add the character to the dictionary with a list as the value. Append the name to the list. This dictionary will keep track of how many names contain that character. In the end you can see which characters have the fewest names. [bob, susan, jeff, michael, joe, alex, jason, $drop] a: [susan, michael, alex, jason] b: [bob, joe, json] c: [michael] . . . $: [$drop] michael and $drop have the fewest. They look suspicious..
Could you please explain how it works?
&gt; can you define the structure and then simply truncate it before you start smashing data into it? so a few more questions. it sounds kind of like you don't know what the fields or values upstream data source is going to send you are going to be, is that accurate? if that is the case I have the exact same scenario in which I automatically extend the table for the new field name and value. The only difference is i store it as string vs trying to figure out the data type because there are no guarantees the data will be normalized. and it can be cleaned up by the BI tool so during the etl here is basically the flow: 1. grab current column names put in set() 2. parse new dataset for all fields put in set() 3. compare the sets to see if there are any new fields 4. if new fields alter the table for each new field 5. insert the data If this data is coming from another db with predefined columns then just read from that one. Let me know if this doesn't help and I can give you more solutions. 
Please post job requests in our job sticky
Excellent! Well congrats on what you've accomplished. This has motivated me to go for it. I'll heave a bit of a head start as I'm pretty good with linux CLI as well as the basics of python. Not much experience with data analysis though, but since I did have an interest (before I got discouraged on not having a degree), I started taking data analysis courses on dataquest.io - and was getting through that pretty well. I've been dabbling in unix and programming for a long time, learning c/c++ back in early 2000 and so on, but took a career direction outside tech. Thanks again for your info.
Nope. Nope. Nope. Just roll with Python 3. I bet you can get a detailed answer with a single google search.
It's an interesting question. I wonder if you could use `Jaccard Distance`? https://stackoverflow.com/questions/37003272/how-to-compute-jaccard-similarity-from-a-pandas-dataframe
Do you want to do something similar to this: from module1 import function1 from module2 import function2 var1 = function1(args1) var2 = function2(args2)
You would be better just going with the latest version of python (that being 3.6.4). Python 3 is the standard now with python 2 on the way out. Any library you would want to use should be supported in Python 3. As far as online courses go, I haven't looked at any in quite a while. You might look through the sidebar. There should be some good ones listed. Happy coding!
3
perhaps academia is more entrenched than the private sector. I've been in a matlab/C# shop for five months and made great headway replacing the former with python for new projects
Or I could just be honest about it without any sugar coating, because the "minority" is not small enough currently.
Oh damn, yeah, you're right. I typed it from memory, didn't run it. I'll edit my post. Thanks!
I have thought about this as well, and I figured doing the inputs for a few weeks yourself will be allow you to train a model (cough cough) that will automatically predict the right counts for you.
I was just wondering because I work for a large company and we're slowly getting people into pandas to do data analysis using Jupyter notebooks. Most people are using excel or some other BI tool which works great, but i'm finding working in pandas to be really helpful for doing a deeper dive into the data. 
You know, that is best and would help a lot with the harder-to-explicitly-sense stuff like garlic or even condiments. And then for the big stuff that gets used often (carrots as one example in my case) I could add functionality to manually state when a meal was missed. Great idea!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
No. Generally monitors do not have a data connection to the computer. Your best bet would be to find a controllable switcher, or IR if it had a remote function.
This uses pygame to basically do what you want using floodfill, though it is slow, even using pypy on the image at half resolution. Maybe it'll lead you in the right area though. Good luck. import pygame as pg in_file = 'cat_fill.jpg' out_file = 'cat_filled.jpg' screen = pg.display.set_mode((1024, 768)) def pre_process(img, min_thresh=20, max_thresh=100, color=(0, 0, 0)): img_w, img_h = img.get_size() for y in range(img_h): for x in range(img_w): pixel_color = img.get_at((x, y)) avg_color = (pixel_color[0] + pixel_color[1] + pixel_color[2]) / 3 if min_thresh &lt;= avg_color &lt;= max_thresh: img.set_at((x, y), color) def fill(img, color, pos, threshold=1024): threshold *= 10000 img_w, img_h = img.get_size() assert 0 &lt;= pos[0] &lt; img_w and 0 &lt;= pos[1] &lt; img_w, 'pos ({}) is out of bounds. Img W/H = {}/{}'.format(pos, img_w, img_h) start_color = img.get_at(pos) start_color = start_color[0] &lt;&lt; 16 | start_color[1] &lt;&lt; 8 | start_color[2] if isinstance(color, tuple) or isinstance(color, list): color = color[0] &lt;&lt; 16 | color[1] &lt;&lt; 8 | color[2] if start_color == color: return unfilled = [pos] filled = [] while unfilled: px, py = unfilled.pop() img.set_at((px, py), color) if (px, py) not in filled: filled.append((px, py)) for x, y in ((px - 1, py), (px + 1, py), (px, py - 1), (px, py + 1)): if 0 &lt;= x &lt; img_w and 0 &lt;= y &lt; img_h and (x, y) != (px, py): pixel_color = img.get_at((x, y)) pixel_color = pixel_color[0] &lt;&lt; 16 | pixel_color[1] &lt;&lt; 8 | pixel_color[2] if abs(pixel_color - start_color) &lt;= threshold and pixel_color != color and (x, y) not in unfilled and (x, y) not in filled: unfilled.append((x, y)) screen.blit(img, (0, 0)) pg.display.flip() def run(): image = pg.image.load(in_file) image = pg.transform.scale(image, (image.get_width()//2, image.get_height()//2)) pre_process(img=image, min_thresh=20, max_thresh=120, color=(0, 0, 0)) # Ear Tips fill(img=image, color=0xFDB500, pos=(250, 80)) fill(img=image, color=0xFDB500, pos=(380, 80)) # Eyelid fill(img=image, color=0xFDB500, pos=(250, 175)) fill(img=image, color=0xFDB500, pos=(380, 175)) # Lower Eyes fill(img=image, color=0xFDB500, pos=(240, 215)) fill(img=image, color=0xFDB500, pos=(272, 218)) fill(img=image, color=0xFDB500, pos=(350, 220)) fill(img=image, color=0xFDB500, pos=(385, 218)) # Iris fill(img=image, color=0xFA0006, pos=(265, 200)) fill(img=image, color=0xFA0006, pos=(355, 200)) # Nose fill(img=image, color=0xFDB500, pos=(300, 240)) # Ears - Inside fill(img=image, color=0xC9F3E5, pos=(200, 80)) fill(img=image, color=0xC9F3E5, pos=(400, 100)) # Head fill(img=image, color=0xC9F3E5, pos=(300, 100)) # Chest fill(img=image, color=0xC9F3E5, pos=(300, 325)) fill(img=image, color=0xFDB500, pos=(300, 375)) fill(img=image, color=0xC9F3E5, pos=(300, 400)) # Side fill(img=image, color=0xC9F3E5, pos=(415, 450)) fill(img=image, color=0xFDB500, pos=(420, 500)) # Tail fill(img=image, color=0xFDB500, pos=(500, 300)) pg.image.save(image, out_file) pg.time.wait(3000) if __name__ == '__main__': run()
not op, but a really easy and clean way to download videos from a lot of different sources is using the excellent youtube-dl project (written in python, but its mostly used as a commandline tool)
YAASSSSS!!!!!
I used gnuplot and Fortran for sure, they have their place. But both are nearly antiquated, the later still used for large models. Weather models and dft especially. 
I though that as a teacher, posting small teaching things would be best on learnpython, but they told me that it was only for questions from people new to python were allowed on learn python. What would be the best reddit subreddit area for this then?
My fridge has an internal camera built into it that’s plugged into the internet with an app on my phone 
3. Python 2 will be EOL in 2020, plus all of the packages you listed fully support Python 3.
that is next on my list after these two python classes are completed. Learn how to web scrape and build a bot. I don't know much about it. Are you using Soup or something else? BS packages seems straight forward but I'm struggling with what to grab inside the html tags.
I'm not sure :/
I consider data analysis anything to do with taking a bunch of data and putting it in a useful form. Analysis usually results in some sort of visualization or summary of the data so that those who want to glean information from the data can digest it more easily—seeing big trends, highlighting outliers, answering specific questions by filtering down to what they want to see, etc.
Hmmm, it seemed to be missing "me.mainloop()" at the end when I got a copy...
I would imagine everyone here uses pandas. I can't imagine data manipulation in Python without it.
Excel is much more accessible to the average person than pandas because you need not only programming knowledge but also some more abstract concepts related to data storage. But if you're working as say a business analyst you should get to know it IMO.
Can’t imagine how anyone could live without pandas.
OMG, it took what, 13 years!
The first part generates a 2-dimensional array of about 40,000 rooms, and uses mathematical formulas to determine whether each room is a bedroom, kitchen, workshop or courtyard. The room directly in the middle is simply the "origin", mainly because 0 messes up the formulas, but also to give the player something to work towards finding. You start out in a random room, and you use "UP" "DOWN" "LEFT" or "RIGHT to navigate the rooms. I think I'll eventually add obstacles and things that are specific to each room type, but this is just a show-of-concept mainly.
https://xkcd.com/1319/
Install Anaconda with Python 3
I did the exact same thing as above. Automated as many aspects of my non-technical job as possible. Word got around through contacts in the same industry and a competitor hired me to do it for real. Best advice I can give is to make something specific to your professional network's needs. Then use it to leverage a new title or find a new employer. For example I work in insurance and our rater sucked so I built a new one. Best of luck!
Hi Bill, could you please explain how Anaconda can solve this use case?
Anaconda keeps track of the entire dependency tree of every package that you install (using conda, not pip) and updates your packages accordingly. If it needs to download a different version of numpy, it'll do that. If it needs to download a different version of Python (e.g., the package doesn't support Python 2.7) it'll do that. If it needs to download 20 packages, it'll do that.
More fun to rewrite a program than do most tasks though :)
/u/ishatonmybed, Curious to know why you chose `ZMQ`? I know `ipython` uses `ZMQ` and also `tornado`. Where does `ZMQ` and `tornado` fit in? why not use a `SSH` library like `paramiko`, if you just want to run commands on remote computers?
Deluge is written in python!
Not everything.. but there are a lot of tools in the `linux` environment to do the above in any standard distribution. When I started I wondered whether I should just stick to python and figure out scripts to do that.. or just learn how to do that using existing linux tools. Wonder why you do all these in python? Because you wanted to learn python?
I dont :)
When I managed requirements by hand, I would pin at the minor: `requests&lt;2.19.0` so theoretically would get bug fixes but not potentially breaking changes. Then I started using `pip-tools` with some scripts so I could manage prod reqs and dev reqs in a "separate but together" fashion. These days it's `pipenv`
Oh nice! I would love to get a job like that lol 
Wow, really inspirational story. If you don’t mind me asking, how did you go about seeking out freelance opportunities to start?
Thank you for the reply! Lots of good information I appreciate it
Checkout r/learnpython and /r/learnprogramming and /r/learngamedev 
I just plucked the ocassional gig off Craigslist. I always had used that for finding web dev clients. I was still looking in the same place, just opening ads I had not opened before. I had always ignored Python gigs and crawler requests. I had just found something new I could pitch. They were always small money...$100ish. But they only took 15-30 minutes. Not bad hourly, but not consistent work.
pyenv will allow you to install your python versions pyenv-virtualenv will let you set up virtual environments very easily python 3.6.4 is what I recommend (and use) Do this: $ pip3 install -U pip setuptools scipy numpy matplotlib scikit-learn opencv-python keras tensorflow and you'll be all set up with your computer vision and machine learning. (Use tensorflow-gpu if you have a gpu). bada boom, bada bing.
In case anyone wants to check out the classes I posted about: ### Coursera ### * [Python for Everyone (formerly Python for Informatics)](https://www.coursera.org/specializations/python) * [Applied Data Science with Python](https://www.coursera.org/specializations/data-science-python) * [Interactive Python](https://www.coursera.org/learn/interactive-python-1) ### EDX ### * [Python for Data Science](https://www.edx.org/course/python-for-data-science) : I highly recommend this as second after Python for Everyone * [Python for Research](https://www.edx.org/course/using-python-research-harvardx-ph526x-0) : Also excellent. Great teacher. The EDX platform is better. The individual courses are easy to access. Coursera is trying really **really** hard to get your money, so they want to sell you the "Specialization" subscriptions. You have to search the individual course names to find them If you are taking any of these courses and installing Python with a desire to get into data science, forget installing the standalone Python from python.org and get the Anaconda package. It includes Python + the best data science working environments in an easy installer for any OS. [Anaconda Downloads](https://www.anaconda.com/download/) If you prefer working online, and need Jupyter notebooks, which they teach in the Applied Data Science course series on Coursera and the USCD micromasters series, you can use Azure's. They are free. If you already have a Hotmail/Outlook account or any other Microsoft service, you're already in. If not, just sign up for one. It's one of the rare and wonderful things Microsoft has done for the open source and data science community. You will use Jupyter Notebooks a ton if you get into Py for DS, so learn them and get familiar. I don't do a lot of DS work (really ANY), but I do a lot of testing out bots and small ideas on the fly. [Azure Notebooks](https://notebooks.azure.com/) Have fun! 
Is this... a joke or something? Markdown and RST are both markup languages, which is an entirely different class of language than the one Ruby belongs to.
What does this have to do with Python? Just because there's a computer involved doesn't make it related to Python.
&gt; there seems to be debate whether word token should be used first, then sent_token, then chain. \[...\] The generated sentences are coming out OK, but there can definitely be improvement. Why don't you try it and see? 
No working example in the article? I tried this 2 months back and it was not implemented despite docs saying it worked.
 L = ['spam', 'eggs', 'cheese', 'tomato', 'aardvark'] func(*L) It's called "unpacking".
&gt; I initially wanted to go with 2.7 (the default on my Macbook) since, as with all things, legacy is a safe bet; it mostly just works, and is probably the version used in industry. Unfortunately, it was this attitude that kept Python 3 from being adopted for so long. Python 3 came out 10 years ago. Sadly people stuck with Python 2. I mean, it was a giant mistake, imho, to make a breaking change going from 2 to 3, but apparently it had to be done. And here we are. Finally. Python 3 is now the dominant platform. Mostly. Personally, I've been coding Python 3.5+ for the past 2+ years. It's been great. Haven't touched 2.7 once.
It's like developing for Google AppEngine a decade ago. You deploy your code with some bullshit command line and getting billed by bullshit metrics. You don't worry about server infrastructure.
I was hoping someone on the sub had some experience with doing this specific thing. If you have a better place for me to post it please let me know. Thank you for pointing out something useless 
I'd recommend logstash into elasticsearch, then slice and dice the data as needed. 
The issue is that there isn't any standard for log file formats, so there isn't any all-in-one solution, nor any way to meaningfully "figure it out" programmatically. Every OS can optionally configure different default formats. Every upstream maintainer can configure their packages to use different defaults. So CentOS' nginx logs could differ from Arch Linux's. And even within the same OS, if you're using one package source versus another, the file formats could differ. You might also compile directly from source which means an entirely different possible set of log configurations. You're more or less on the right track: determine the local system's format and then map a regex ( or a real parser ) to each type of log file. Alternatively, one could look into using an OS that uses systemd and journalctl. Well-behaved programs that hook into journalctl simply emit JSON payloads, and your log storage basically becomes a document-store, rather than a flat file. Programmatically interacting with systemd logs is/can be easier, depending on your requirements. As /u/rocket_randall/ suggsted, one could also consider emitting log data to a collector service: splunk, logstash, whatever, and use their interfaces to query/organize your log data.
I've tried hard to like RST but it's just so unintuitive compared to markdown :( Wish there was a well supported way of doing python API docs with markdown.
To add to this [grok filters](https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html) is the DSL you're looking for.
Awesome!
Thank you!
Coherence integrates with the language so only requires interfacing with the library in your own code. No deployment or command line necessary.
YES, *finally.* I don't know the history of RST but I hate it.
I'd definitely recommend pyinstaller as well. I actually just got it working successfully for a program using pandas in python despite a bit of a dependencies nightmare (mostly because of being on linux and compiling to windows), but from my experience its used enough there is support out there (I was able to find others who'd had similar problems for every issue I ran into...both with that and wine - a tool described in the link below for running windows files on linux). If you're using linux, [this](http://sparkandshine.net/build-a-windows-executable-from-python-scripts-on-linux/) is a good guide for cross compiling to a windows .exe. It's even easier to make one on the OS you are on. I'm not sure about how friendly it is with Apple. As stated elsewhere, you'd need one for each major OS.
Why?
No. I minimize my dependencies and define them by hand. A requirements.txt is a suggested set of requirements that will work, not a set of actual requirements. It's often far stricter and has tons of unused packages. It's intended for developers to have a common set of packages they're targeting, not to say that's the only set that will work.
It's not actually that hard to switch from one to the other. Start at 3 and go to 2 if an employer requires it. I haven't had a single employer have an issue with my primary experience being different than they request so long as I can show I know what most of the differences will be.
Right so how are you planning to to tackle this? Because I dont actually see a question or what you're having difficulty with. 
https://github.com/makkus/luci I call it a 'generic metadata interpreter'. It's hard to describe it's use-cases, which is why I'm currently writing up examples. But basically it lets you augment any sort of text files with metadata. *luci* reads that metadata. Then it executes certain tasks using that metadata as configuration. As a bonus, it can also dynamically create a command-line interface using that metadata, so users can change that same metadata interactively if necessary. Yeah, I know, sounds really weird... I assure you there's a point to it though! :-)
Ok, I stand corrected. This is fucking awesomeness.
Not all Python users are in the data science fields! :-)
Can you share some actual use case examples from your customers?
&gt; websites to help me learn python /r/learnpython
sololearn.com has a good interactive python tutorial. The examples are quite easy, but it should get you through the basics. 
Thank you for the explanation! 
reStructuredText is older than Markdown by a couple years, and was designed by a Python working group for use as Python's official-ish documentation markup language, similar to Javadoc for Java. And there's no accounting for taste, really. I strongly prefer it over Markdown for writing technical documentation, especially in combination with Sphinx.
I also thought about it a while ago. I don't think you really need to train a model, you could just check the periodicity of your purchases. Milk, coffee, tea, etc. normally are going to be consumed at a fixed rate; you should only find it out. And in case you buy something before it is finished, you have to offset it by some days in order to avoid pile up of errors.
I guess you are asking for a personal definition of data analysis. For me, data analysis is interpreting a measurement or a simulation with a given model. In this way you gain confidence in your model or you discard it and try to come up with a better one.
Hi, I've been working on this for a school project. It is python-based and reads a video stream from the user camera. It will try to detect faces and eyes. If it doesn't detect eyes for 50 frames, it will play a sound and deduct a point. I'm looking for feedback on how I might improve this, especially with regard to feature detection without using dlib. I'll greatly appreciate any advice or feedback on how to make this better. My apologies if this is the wrong place to post this. Here's the github repo: https://github.com/captmomo/drowzee I've built it into an exe too, LMK if you are willing to test it. 
Oh thank God. I've been working on a Pillow dating sim (don't ask) and this will make it a lot easier.
Great! As only the second person using it (AFAIK) hopefully you won't hit too many bugs :-)
Oh you can choose to do it with other programs no doubt. But OP was asking uses for python. 
&gt; well supported way What options do we have at the moment? In the same vein, I'm thinking of looking how to embed my yaml openapi spec into my `__doc__` string to later extract and build my whole swagger.yaml file. So then I can start to add a new method to a module and spec my function in the `__doc__` attr using yaml/md. Run the extracter and build the whole spec... or that the idea... For now I have other weekend projects; but easier to procrastinate on /r/.
Literally any community, anywhere, from important tools to repairs and crafting to arts and entertainment, will have these chucklefucks. You have to learn how to ignore them. (It also sounds like the people you're running into are more on the sysadmin side of things, as Python is a venerable system scripting tool, and a significant part of the pain from the 2to3 difficulty is felt there.) Personally, I wasn't referring to that aspect of the community... not the quality of the personalities (because that always basically boils down to the moderation of whatever communication fora you happen to interact with) or the experience of the average person involved (because God knows the majority of the people who want to write python haven't the slightest goddamn idea what a computer is). I was referring mostly to the health of the third party library/open source scene, which is very important. Take node.js for example... it's a Kafkaesque nightmare over there! So yeah, that's what I meant. If I were to praise the community as you think of it, it would have to be a single well-moderated forum I was referring to, like one irc channel or something.
To adopt a non technical hack of html to write official python package documentation in? The only reason it got adopted is because md became the de facto documentation syntax with platforms like github, stackoverflow and /r/ applying this brilliant hack every where(which I don't mind). But COME-ON bashing a tech stack because it took a decade to adjust to a inferior technical language compared to RST, is a good thing in my mind.
For cubic products you could use infrared distance measurement maybe. Another idea could be simple buttons like amazon dash buttons which have to be pressed as soon as a reorder level is reached. Third idea that comes to my mind: Using kanban cards with a bar code and a stationary bar code scanner. 
I'm not ready to change my style, but if Black becomes the de facto standard, I *will* switch.
Working on a Markdown preprocessor. Need an Open Source mentor within my employer (IBM) before I can share.
Because zmq is so much more than that. Also im not running commands on remote computers. I'm controlling, creating connecting and killing processes across a network of computers
So this is just a thought, but why not do it like a grocery store does? I did the order for a largish grocery store dairy department, and for many items that didnt require backstock, you just use a gun to scan tags straight off the shelf. You would basically just need a tag for everything you normally buy. Might sound slow or clunky, but I meant I could bust out an order for the whole dept in like 15 minutes. I imagine if I had tags in my pantry and fridge that I coulf scan with a gun, i could bust out my shopping list in about a minute. Track and store the data, and after a while some things will appear that are regular enough to automate.
Confidently wrong. The worst sort of wrong. Not only do they almost always have a data connection, it's actually been largely standardized since the days of svga. I've been automatically adjusting the brightness and contrast on my monitors for years.
Ok. Help the guy out then. You cheeky cunt.
That's quite flexible, but I would like to not store any new fields as string, but as their respective data types if possible. Right now with sqlalchemy most string fields are inserted as ntext, where I would like varchar's for example... I hope this clarifies a bit what I am looking for. Very nice answer btw :)
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/kivy] [Can kivy make such kind of a user interface?](https://www.reddit.com/r/kivy/comments/852ror/can_kivy_make_such_kind_of_a_user_interface/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Well I want to deliver this data to SQL-specialists who can build reports on them and whatnot... If there is a better SQL based platform for this I'd be more than happy to...
The second thing you wrote will work just fine. You can activate and deactivate a virtualenv at any moment. You can configure them to use system packages, or to ignore them.
thank you, I did not know about the ability to use system packages. While we're at it, are the system packages copied or referenced, i.e. If I change them, are they also changed in the virtualenv?
The system path is simply in your environment, so nothing gets copied.
I have a problem please send help... 
uuuuuu shiny!! me likey!
I like this one for new numpy beginners: https://www.labri.fr/perso/nrougier/from-python-to-numpy/
just for info: pudb is also available for 2.7 and pudb is not new at all. 
indeed- added a clarification incase anyone thought that's what I meant. I just wanted to give an example of how the breakpoint() method can be used for something other than pdb. -ed
The idea is solid. However, I don't think anyone would consider serious use on this. There is no way to guarantee my code runs as expected, repeatable, debuggable, and scallable.
This will create a virtualenv and install all packages you had installed globally with the exact same version numbers: pip freeze &gt; requirements.txt virtualenv . source bin/activate pip install -r requirements.txt Don't forget to commit`requirements.txt` into your repo!
I'd recommend sticking to using virtualenv only. It's too easy to forget to add requirements and keep them at correct versions.
More on scripting.. parsing different source code files to csv file for input to another set of python scripts. Not so much fun. Whew
Doxygen itself works with Python, but [Sphinx](http://www.sphinx-doc.org/en/master/) is another great option - in fact, it's what's used to generate the documentation for the Python standard library and just about every big name third party module out there.
I was just starting to read about Sphinx... it’s confusing me a lot. Different syntax than doxygen..
If using the Doxygen syntax is critical to you, Doxygen is probably a better bet. If not, you should probably learn Sphinx's syntax instead - it's common enough that IDEs like PyCharm even support it for type inference, giving you type hinting/checking for free with your docs.
Yeah, it sounds like pycharm is supporting it natively. The problem is I’m kind of stuck with python 2.6 in CentOS 6.2. Oh man. On windows I use Atom editor with python ide plugin and it’s setup like a real ide now, so I’m probably going to hunt if somebody male sphinx work on it as well. This should be a night full of googling.
Maybe I'm misreading, but it doesn't look like you addressed the third point in the article about situations where you would want a breakpoint on an application not running on your console. That's what had me reading until the end and it doesn't look like the problem was addressed
Look into [Kivy](https://kivy.org/#home). [This](https://kivy.org/docs/guide/basic.html) will get you started. Make sure you check out /r/learnpython as well.
It's all about reproducibility, unless the people in your work are documenting everything they do in excel, they will not have a record of any changes they make (remove columns, rows etc), so it makes it harder to reproduce. It also introduces human errors and is slow with large data sets. At least if you are wrong in pandas you have a record of it, and you can run it as many times as you want. 
And I thought I miss read something. This article basically say use breakpoint() 
For someone working and debugging with PyCharm. Does this feature offer advantages for me?
I doubt it. Pycharm's debugger is top notch
Thanks for the links!
I've never understood why Python requires you to modify the program to set a breakpoint. This seems slightly better, but doesn't really solve it for me. Coming from C, the idea of setting a breakpoint is a temporary thing that the _debugger_ does, not something you actually write into the program. For instance, I might want to run the program once, check the result, set a breakpoint, run it to the breakpoint and examine the local variables, re-start the program with a breakpoint at a *different* place, etc. Or I might want to put a breakpoint in a loop and break on it once, and then remove that breakpoint and continue the loop. As it is, to do that I need to modify the code and restart the script every time I change the breakpoint, which is super awkward compared to using gdb. Honestly, rather than launching pdb, I've gotten more into the habit if I ever do this, to just put a call to IPython's interpreter so I can examine the local variables where I witnessed an error occurring. What I'd much prefer is a way to launch the interpreter automatically on an error, and be able to step up and down the stack examining variables. pdb sort of allows to do this but needing to modify the program to invoke it, instead of having it appear when and where an error happens, makes it much less useful imho. When I started investigating Python debugging more seriously, one thing I just couldn't believe was that there was no way to launch a debugger on exceptions, and that all the tutorials actually tell you to insert a statement into your code where you *think* a problem will be. That's the exact opposite way I am used to using a debugger. Probably I am missing something, if anyone cares to enlighten me it would be much appreciated ;)
This seems to be a recent page by nicoddemus (possibly /u/nicodemmus), [its history only goes back to February 7th](https://github.com/pytest-dev/pytest/commits/master/doc/en/reference.rst). It provides a well-classified listing of: * the fixtures API and standard fixtures * the builtin marks &amp; how custom marks work * the helper functions pytest provides * pytest plugin/conftest hooks * the types involved in various "public" pytest API * pytest's environment and special variables * pytest's configuration options And when relevant, the items are also cross-linked to guides &amp; tutorials. That page is great (especially the hooks, that was a pain in the "old doc"), the only criticism I'd have is I think fixtures should come first, but I can see the argument for helper functions instead.
You can run your script using `python -m pdb script.py`, and while I don't remember if it's in pdb but ipdb (which integrates with ipython) has a context manager for launching a debugger at the site of an unhandled exception. 
https://pypi.python.org/pypi/ipdb I highly recommend trying out this debugger, as it makes pdb feel more like ipython and has a few extra utilities. They show off their context manager in the readme in that link. 
not sure to understand your question . with bitstamp , you can use pusher to get order_book for a market and other public data like a ticker . But for command related to you account ( private command like buy or sell) , your need to use the bitstamp api. this api seems to work with python3 : https://pypi.python.org/pypi/pusherclientb/0.3.1 
/r/learnprogramming /r/Python is for news and releases, not questions.
Explicit is better than implicit. Advice for life, not just Python. 
&gt; Debugging in Python has always felt a bit “awkward” compared with other languages I’ve worked in. Why? It works just like any other language with PyCharm.
Agreed
The majority of PyPi pages looked like someone picked up the phone while playing a MUD. Clearly people weren't able, or didn't know how to format their descriptions in RST. A couple years I could understand, not 13. And this is literally my lowest priority gripe about PyPi. You know how pip decides to install a package when I type `pip install &lt;package&gt;` , the NUMBER of times that the string `package` occurs in the README.
Where's the tutorial on multi-threaded remote debugging?
Honestly I think it falls in to two camps: * People coming from something like WordPress and expecting Django to be a similar CMS. Django is a lot lower level than WordPress and I wouldn't categorize them the same, but it is where I see a lot of frustration. They'd be better off using something like wagtail on top of django * People who are familiar with web frameworks and don't want all of djangos bells and whistles. They'd rather be using something more minimal like flask. Django , imho, is probably one of the nicest web frameworks I've used in any language with a good mix of power and ease of use. But it does fall in this space where it draws criticism from either side. 
To add further you may want to have a look at some Natural language processing python libraries or the IBM watson nlp api set. I ve tried the latter, it's a rest api , very interesting and fairly easy to implement. It depends on how big your needs are though ( rate limits).
New programmer here (working my way through oop tutorials) where would I find out more?
Maintaining a single readme :D
Do you know about pdb's post-mortem debugger? After an exception is thrown, just call pdb.pm(), and the debugger starts in the state the program was in just before the exception, as if you had put a breakpoint there. It needs to be run in an interactive python interpreter, and pdb needs to be already imported. Personally, I normally run scripts in ipython, and have the pdb import in the ipython startup script, so the postmortem debugger is always ready to go. 
&gt; And this is literally my lowest priority gripe about PyPi. You know how pip decides to install a package when I type pip install &lt;package&gt; , the NUMBER of times that the string package occurs in the README. Wat?
Electron. 
This post is better suited for /r/learnpython 
This post is better suited for /r/learnpython 
 Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; s = "This is a string" &gt;&gt;&gt; [ s[i:i+6] for i in range(0, len(s), 6)] ['This i', 's a st', 'ring'] &gt;&gt;&gt; 
This post is better suited for /r/learnpython 
Great! Thanks! I can set that to a variable, yeah? like this: new_list = [s[i:i+6] for i in range(0, len(s), 6]
This post is better suited for /r/learnpython 
I said in another subreddit about the survey results: &gt; If you look at the Experience section I think you’ll find your answers. Lots of young, in-experienced developers coming in slants towards javascript and in the javascript world something even less than a year old is considered outdated let alone 12 years old. Rails isn't even on the list.
I feel the opposite. While RST has bigger learning curve once you're done - you're done. Markdown on the other hand is not even a standard as every flavour is more than just a flavor to the point where you have to keep separate docs for every source. I prefer Markdown for short comments but for anything longer like docs it's very flimsy.
pdbpp ( https://pypi.python.org/pypi/pdbpp/ ) is another cool better-pdb. It doesn't require the user to change the syntax of current pdb. If you have it installed in local virtualenv, it will just get triggered instead of normal pdb. 
Everybody you ask this, especially on /r/python will tell you to start with 3. Few will give technical reasons for doing so, most will be political (they see you as an +1 adoption number, not a newcomer to the language willing to learn, they also vary between: "Python 3 is a completely new language" and "Python 2 and 3 are the same language, but you should pick 3" in the same argument) or give no argument at all. I also can't, with a clear conscience, advise you to start with 2, most importantly because NumPy and SciPy will be 3+ only in about a year. All that said, the easiest to learn Python and quickly become productive will remain Python 2, long after its EOL by official devs (especially if you are a learn-by-doing type). There is no reason to, other than the forcing hand of EOL, switch to Python 3 for ML, py2.7 mostly just works. Most recent ML libraries and industry projects were designed for and in 2.7, support for Python 3 only an afterthought/response to a vocal group/forced by EOL. The best Python tutorial is Learn Python The Hard Way Py2.7 (a tutorial so good, the mere mention of it gets bans and downvotes on this subreddit :)) If you want the following to return an error message, you should definitely go with 3+: ``` print sorted([1, "a", 2, "b"]) ```
I think the survey might have been designed poorly. There's way too much overlap between loved and dreaded.
Or use pipenv to automatically create and manage virtualenv and dependencies
Try out a good IDE like Pycharm. So many problems go away when you do.
How difficult or fun was learning your degree. Just got out of the US Navy and starting my Comp Eng degree next semester and I’m fairly nervous/excited. Did you learn any coding or anything? I’d love to hear what you have to say about it. Thanks
The names they use overstate reality I think. There's a section where you list what technologies you're currently using and a section where you list things you want to use in the future. So if you're using Django now and someone asked you "hey, what are you looking forward to learning and using at a new job?" and you didn't answer Django, SO would consider you to "dread" it. I suspect a lot of people using Django would be fine using it in the future but also fine doing something new.
i find it astonishing that rails is nowhere at all on those lists. it's like it just vanished
That's quite interesting; I'll have to stop being lazy and do more research on that. Thanks for the info. What features of Sphinx and RST in general do you prefer over Markdown? In my experience, everything RST can do, Markdown can do as well (with better syntax in my opinion).
https://youtrack.jetbrains.com/issue/PY-27910
the advantage is that you can do it where those tools are not available.
Would be the easiest yeah, heck of a lot easier to do something like this in HTML/CSS. Though I bet you could just as well get away with Kivy with more time and effort.
I’m putting the finishing touches on an abstract art generator using the random pygame and tkinter modules
Do you mean like server-side deployments?
Or just use print() like god intended.
We have several customers engaged in very serious use. &gt; no way to guarantee my code runs as expected, repeatable, debuggable, and scallable. This doesn't make sense. The code you write runs as you wrote it. Debugging is a great point though, we have great plans to address this!
We have a few customers moving over their web hosting and api hosting to our vNext platform (not yet released). With the released platform background tasks like health monitoring, alerting, web crawling seem to be quite popular. Send me a DM if you're interested to see how we support your use case.
RST is OUR markup language. Markdown is the competition. Supporting markdown is like PyPi supporting Ruby. First switching to Git and now this... it's like there's a movement from within to destroy Python. 
I got interested in py due to sqlalchemy. Last time I checked django has a very opinionated ORM. As for a web framework I adore bottle but use flask professionally. 
What about threading.Timer didn't work? It should not block your program as it spawns a new thread.
of course
Thank you for noticing me, I've just added a snip from the code
That what I expected but didn't work for some reason, however I added a snip of the code you can take a look. 
As others have mentioned, I think you have a clear need for a good IDE. That's the only thing that will make debugging trivially easy.
Nothing is wrong with Django everyone hates every web framework. 
From my point of view, the most dreaded attributes of Django are vast incompatibilities even between minor versions and ill-considered extendability. I took a part on a Django 1.4 based project and the breaking changes upto the last LTS were simply too much, on par with rewriting whole app from scratch. Subclassing django models is straighforward, however extending with a single field produces *dreaded* N+1 query. Imagine, when you write derived project of an e-commerce framework, you suddenly build up lots of additional N+1 db queries and performance starts to fall down. 
This question is better suited for /r/learnpython 
I might do that. Just one last question - do you have any customers utilizing your services in conjunction with the Hadoop eco system?
Good to know, thanks! 
adding a field to a properly subclassed model does not add any queries. it is still the same table. set the parent as an abstract model. if you cant do that read up on select_related().
You are right, the complexity would turn it into a monster..
Nobody has yet approached us about this. Can you give me an idea how Coherence might integrate with the Hadoop ecosystem?
Yes, I know there are virtual hosts so ip doesn’t equal webpage. That’s known and clear. But just to makd things absolutely clear, by webmail i understand a page where you can log to you email account: like gmail or hotmail but also squirrelmail and roundcube. I am not interested in scraping email addresses so I don’t get why you mentioned the email database and authentication? Thanks for the links, I will definitely read them. 
Working on on a wrapper for mkvmerge called pymkv. Always looking for help and opinions. https://github.com/sheldonkwoodward/pymkv
Whatever you're interested in.
Sounds interesting Thanks I'll look into it!
They aren't mutually exclusive. 
I worked in finance, rail was the rage about 10 years ago. Now, every shop that use rails are moving to Python or Java. People are starting to realize it's very hard to maintain a framework in a language that doesn't have a large ecosystem. For example, Java/Python/C++ has massive ecosystem that you can build websites, algo trading, fraud detection, data analysis, etc. Rails+Ruby is basically a one-trick pony. After awhile, people just don't want to maintain a headcount for sake of Rails+/Ruby.
Doesn't sound like breakpoint() really fixes the issue then...
What extra flexibility does sqlalchemy give you? One thing I can think of is the primary key requirement.
This is one of our targetted scenarios exactly for our vNext platform. On the current platform, there's nothing stopping you but we don't expose a public endpoints yet, due to security concerns. This ability is coming very soon.
Really? I just started using it and I miss pdb
[this](https://i.imgur.com/IWCGtoC.png) is how it's looking, the items you see are instances of a class in a separate process, you can drag and drop instance selections and connect any instance property to any other property, all properties are evented so they act as triggers too. The fun is about to happen, adding process classes for video capture and processing. This is being written with a fire under my ass in order to upscale a current project for a client that requires upsizing to something more scalable, like this.
Can you evaluate expression while debugging on pycharm? It looks like I can't do that
What is the advantage over pdb?
Via the __call__ method, you can code objects and classes such that that method is called when the object is called. 
Python's interpreter [manages an arbitrary heap of memory](https://docs.python.org/3.6/c-api/memory.html) that can request system memory from -- and release back to -- the underlying OS. When you assign to **x** Python allocates an id value to **x** ... this is (in CPython at any rate) its offset in the Python managed heap (but *not* in system memory, in CPython the id is effectively a proxy reference to a C pointer to the actual system memory in use, but what's really going on under the hood is an implementation detail specific to your Python interpreter), and during the lifetime of **x** that value *must* be immutable (if it weren't, reference counting wouldn't work), and is only released when the object's destructor is called (which will normally only happen when the reference count is reduced to 0). When you append to **x**, the total footprint of **x** *may* need to be expanded, but that doesn't affect the initial offset of **x**, only the initial offset of new objects being created. Likewise when you pop items out of **x** it *may* be shrunk, freeing up space allocated on the heap to be re-used. But in neither case does the initial offset need to change, you see?
Yes you can. Just click the little goggles and add on your expression
yea, i meant considering how large it was just a couple years ago, it's surprising that now it doesn't even seem to be a blip on the radar
in what ways do you miss pdb? in pycharm you can set breakpoints, conditional breakpoints, set watches, toggle breakpoints, step backwards in the call stack, debug remotely, all without having to modify your codebase
In these terms you've given here, I think what's tripping me up is how offsets of objects that were declared *after* **x** can remain unchanged. So say that I've declared **x** already. You mentioned that appending to **x** may change the initial offsets of new objects. That's fine; makes sense. Appending to **x** moves the initial offset of **y** down a few once I want to declare **y**. But what if I've already declared **x**, **y**, and **z**, and now I append a fat chunk onto **x**? What keeps the initial offsets of **y** and **z** immutable?
I will give it another try then
Oh thanks, I didn't see that
Neither, because most code uses a mix of both, with some functional programming thrown in for good measure.
The command is `python -m idlelib.idle test.py`, will start IDLE and open the file. To make it work for context menu via registry, replace file name with %1 IIRC.
Hmm while pandas is of course a natural fit for DS I still think of it as a go to for any app dealing with data beyond a list. Out of curiosity what do you primarily use Python for?
Instead of generate = threading.Timer(5.0, create_enemy(enemies, so_settings, screen, ship)) have: generate = threading.Timer(5.0, create_enemy, [enemies, so_settings, screen, ship]) The way you wrote it, `create_enemy` was called immediately. By the way, pygame seems to have [its own timer solution](https://www.pygame.org/docs/ref/time.html#pygame.time.set_timer), perfectly suited for repetitive action every X seconds, whereas `threading.Timer` only runs once. 
Would something like [komodo-python-dbgp](https://pypi.python.org/pypi/komodo-python-dbgp) not address your issue? I used is successfully with [vdebug](https://github.com/vim-vdebug/vdebug). Here is the [commands to start your script with pydbgp](http://docs.komodoide.com/Manual/debugpython#debugging-python-komodo-ide-only_using-the-python-remote-debugger_invoking-the-python-remote-debugger); Like I mentioned you don't have to use komodo.
I think you're getting tripped up on the assumption that any of these allocations are contiguous or localized. The members of a Python list include ( among other metadata ), pointers to preceding/following members. Those pointers can point anywhere. So you can allocate x, y, and z, and then append to x, and that new member of x just goes wherever there's free space, and the backing data structure just points to it. Edit: Appending to y also just throws another list node into the heap, which points to preceding/following elements. So your actual memory segments could end up looking like [ x start node, y start node, z start node, x member, x member, y member, y member, z member, y member, x member ].
Ooh that's sweet thank you :)
Thanks for the advice, I found that I can actually use Matlab from python so I am thinking I ll use this way. 
&gt; When you assign to x Python allocates an id value to x ... this is its offset in the Python managed heap This is a cpython implementation detail. Certainly jython just uses an incrementing integer for id(). I've no idea what ironpython or other implementations do. 
I hear you. But even things like [twisted manhole](http://www.lothar.com/tech/twisted/manhole.xhtml) have been around for ages addressing a remote debugging of a application not running on your console. Taking into account its not baked into the stdlib and you have to go through some hoops to get it up and running.
Thank you so much, and yes, I've just realized that pygame already supports this in easier way. 
Django feels a lot more... involved? than flask. I've no great experience with either but that's my take on it from what little I've done. It's fairly simple to get a flask app up and running and doing the basics, wheras you've got to set up project/app etc for django. For personal projects I stick with flask.
Yes, I agree. I mainly use Python for automation, creating internal tools and API manipulation. While I actually work with Hadoop and "big data", I actually never really handle the data itself. Our data analysts are probably big pandas users, though!
I just finished working on user-space drivers to be able to use Huion Kamvas drawing tablets in Linux, after I bought a Kamvas GT-221 Pro and discovered it didn't work properly. Started by adapting an existing driver for a previous model, and refactored it while adding support for buttons, scrollbar, multiple sets of customizable shortcuts, desktop notifications, and more. [Very very happy with its current state](https://github.com/joseluis/huion-linux-drivers), and with the tablet, of course.
I do most of my development through SSH on a Linux VM, so command-line tools are useful for me.
OMG look at this horse shit! https://dustingram.com/articles/2018/03/16/markdown-descriptions-on-pypi
Thank you
&gt; the most dreaded attributes of Django are vast incompatibilities even between minor versions That's the reason. You either budget hundreds of hours each year towards minor upgrades - with no visible changes to the paying customer - or you run a vulnerable system. All this because those selling professional Django consulting services are also in charge of developing it and breaking backwards compatibility in horrible ways each and every month is good for their business.
Send me over a PM :)
Edited to try to make that more clear. The only one I know the details of -- indeed the only one I've ever found detailed documentation for -- is the CPython reference implementation. That said, IIRC in all implementations it's an int/long, the only real difference is does that int bear any direct relationship to the actual memory offset, or is it merely a numerical reference to the Nth object allocated.
Ahh, yes this makes a lot more sense. It didn't occur to me that you could store different elements of a variable in different places in memory. Makes much more sense!
fdemmer described how to work around the problem you described, and you reply by throwing a hissy fit because it's super important to you to assert that the stated problem actually exists, even going as far as to repeatedly insult fdemmer because he dared explain to you how to solve your problem. Nice!
I'm glad I could help illuminate the matter! There are advantages and disadvantages to this design; not caring about allocating contiguous memory means you have greater flexibility when creating/destroying values so the language and runtime can operate with more flexibility. As a downside, having your memory effectively randomly scattered throughout all the different levels of memory can really thrash your memory access times. If that doesn't make a lot of sense, don't worry about it too much; deep memory optimization is a powerful technique but for your 'average' application, there's almost definitely going to be bigger targets for optimization like identifying excessive looping ( accidental quadratic time happens more often than you'd think ), setting up memoization for frequently used calculations, minimizing network/disk access, and things like that. As a rough rule of thumb, though, if your application is supposed to be running fast enough that L2 cache misses are a significant issue, you probably want to move those code paths into C, C++, Golang, or something else that gives you a greater degree of control over memory layout in your data structures.
Rails' rate of mutation was just too high, quality of code was just too low. Rails was valuable to the world because it introduced a lot of useful concept to web development, but it also introduced a lot of terrible ideas and it finally collapsed under it's own weight. The world is better because Rails existed, and the world is even better now that it's gone.
it was mostly large on the USA east coast, the rest of the world didn't really cared so it died
If you're making a calculator, use mpmath. It in turn uses gmpy, and is very fast, and supports arbitrary precision. I've computed pi to 2 million places with it. I used it for my calculator: https://pypi.python.org/pypi/rpnChilada/7.0.0
I believe you can do that as long as it is after the current line. Like the program can run and stop at a breakpoint on line 10, but as long as the line you add/change is like 11+ you're good and can keep steping through with the same code. 
Thanks! I am not determining the outcome of anything, all I am doing is getting the final variable state after the code completes and giving it back to the user. Python makes this very easy to do: locals = {} exec("x=1+1 # or far more complicated code",locals,locals) print(locals) # at end of output you will see 'x': 2 https://github.com/Almenon/AREPL-backend/blob/934bd329523247a63a6e572c6ca815c114e603bb/python/pythonEvaluator.py#L169 I was inspired by linqpad (a c# code runner) and lightable, a real-time editor for JS.
Also check out R - language dedicated to data analysis.
Yeah... it's so easy to remove what you don't need and keep it as lightweight as you want.
&gt; without being a fucking ass hat Being the ass hat is posting a completely irrelevant question that has nothing to do with Python in a Python sub. Why didn't you post it on /r/Music or /r/AskScience or /r/Gaming? You might find that "someone on the sub had some experience with doing this specific thing" in any subreddit. I'm sorry that you can't think of a more appropriate subreddit to ask a question about your computer monitor. Like, oh, I don't know, just plucking a few random thoughts out of the air, how about /r/Monitors or /r/Computers? 
Is there a better command-line remote debugger than remote_pdb? That's what I've always used for celery processes and stuff. It's pretty neat, just remote_pdb.set_trace() and then netcat/telnet in to a specific port and you're debugging.
Do not uninstall the O/S installed python. I'm only familiar with Ubuntu and that's the location of the default python 3 executable. Uninstalling it could break a bunch of other dependencies.
Thank you! Well, "split" is still faster (me and another contributor are working on improve performance!) Also, yes, we're trying to add more options about splitting settings!
I code in Python, hence my post here, asking for some package that can access my monitor. Should of posted in r/learnpython so I can avoid your shit replies. The other people on this sub seem to be understanding my question perfectly. 
I spend under 10 hour per YEAR keeping my large Django codebase updated to the current release. That is child's play.
This is extremely useful, thanks! Cleaning up my code with it now
I have no idea what I'm doing.
I believe the default OS python is a 2.7 variant, but I'll just leave it as is, doesn't hurt anything. Thanks
I was highlighting that as a flaw of pdb.set_trace, you can use a remote debugger in the environment variable but since so many people have upvoted this reply I've added an example to the post. Apologies for the confusion - ed https://medium.com/@anthonypjshaw/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c
Exactly. A lot of Django is designed for surprisingly narrow use cases. 
The list is practically infinite...Django’s ORM is miles behind what SA can do (which is not to say it’s bad—but it’s made to be part of a web framework and not to be a database toolkit for database people).
+1. I’m pretty sure it shows up here just by virtue of being the most widely used Python web framework.
&gt; I code in Python, hence my post here Is it so hard to say "is there a Python library for blah blah blah"? The answer to your question is: First, find a library or system call that does what you want. It's probably going to be OS specific, so it helps to specify your OS. You can ask on an os-specific or monitor specific forum. Then you can ask for a Python library that interfaces with that system call or library. Did you check on PyPI? If not, you should do that first. Otherwise, you're just polluting this subreddit with questions that aren't about Python. Maybe you'll get lucky and someone will reward you for posting off-topic, and maybe you won't. You're asking for free tech support from volunteers. Make it easy for them: to maximise your chances of getting a helpful answer: * don't expect people to read your mind; be clear about what you're asking and that it is relevant to the sub; * tell people what you've tried before asking here. This shouldn't be your first port of call. [Googling ought to be your first port of call](https://duckduckgo.com/html/?q=python%20interface%20monitor) and if you follow that link and scroll down about three quarters of the page, you'll find something that looks like what you're after. Your welcome.
The key here is abstraction. In C the name of an array is simply a pointer to the memory location of the first element. Very simple and very inflexible if you want to do something like grow an array. That’s why C arrays have to be declared by size ahead of time. In python lists are a much higher level of abstraction. You interact with the list in much the same way, but under the hood python is doing acrobatics to keep you from needing to care about the underlying memory. You are able to treat the list like it’s a single contiguous object, but the reality is much more complex. You trade some speed and size efficiency for writing far less code and needing to manage far less by yourself. Computer science really boils down to abstractions all the way down until it’s some electrons moving through a wire. Each layer is “hidden” as we develop the abstractions and tools that go with it. The act of hiding complexity allows expressing far more complex ideas with less effort. A great example is the network stack. You start with cables and electrical signals that are hidden in the form of Ethernet frames which are hidden in the form of IP packets which are hidden by TCP streams which are hidden by HTTP calls. If you want to talk to a web server you write some http calls and tons of code hides the true complexity and lets you get on with your life.
I wouldn't call it surprising, but okay.