A Williams Defender clone using pySFML. Runs fine on my I7 until the mountains explode, at which point the particle system has far too much work to do :)
Open the script with a text editor, one of the last lines is new.save(outfilename, "PNG"), change it to new.save("D:/image", "PNG") or whatever path you want.
python-requests.org
Coding on Ren'py is being waaaay harder than I expected. I thought it would do all the work for me and I would have to just fill the blanks, kinda like RPGMaker. Boy, was I wrong... I still don't quite get it since I know 0 or close to 0 about coding, but I'll try and tell you the results!
It is Dynaconf http://github.com/rochacbruno/dynaconf 
I'm developing a Doorbird component for Home Assistant as a way to learn Python. First project. Nothing too exciting and probably doing a ton of things wrong... but learning new things for sure.
It's an honour
added reasons for fork https://github.com/PyO3/pyo3/issues/55
Oh, in that case, I'll write you a more detailed reply tomorrow when I get to work! 
Since you specifically mentioned docker, JVM afaik still runs unaware of container constraints, and unless carefully tuned would allocate more memory than cgroup would allow. Not too long ago the best solution that I got for cloud deployments was to create images tuned to the target host types, but I was working with a ridiculously demanding and non-optimized data processing application written in java and jython.
Thank you! That works
This is why: https://xkcd.com/1053/
[Image](https://imgs.xkcd.com/comics/ten_thousand.png) [Mobile](https://m.xkcd.com/1053/) **Title:** Ten Thousand **Title-text:** Saying 'what kind of an idiot doesn't know about the Yellowstone supervolcano' is so much more boring than telling someone about the Yellowstone supervolcano for the first time\. [Comic Explanation](https://www.explainxkcd.com/wiki/index.php/1053#Explanation) **Stats:** This comic has been referenced 10797 times, representing 6.5815% of referenced xkcds. --- ^[xkcd.com](https://www.xkcd.com) ^| ^[xkcd sub](https://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](https://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_dkmjfh0)
The first paragraph of TFA states: &gt; In our case, this means having data journalist Nick Diakopoulos mine and combine 12 metrics from 10 carefully chosen online sources to rank 48 languages. Here's the full list [1]: - Google Search - Google Trends - Twitter - GitHub - Stack Overflow - Reddit - Hacker News - CareerBuilder - Dice - IEEE Xplore Digital Library [1] http://spectrum.ieee.org/ns/IEEE_TPL_2017/methods.html
Oh wow, thanks for the thorough breakdown! I'm not really in the embedded space (just some schmuck on the internet who read the Micropython FAQ), so I don't think I could put together a list of my own with any degree of accuracy. Point taken though, I guess we can call it almost-embedded.
* aiohttp: https://github.com/aio-libs/aiohttp * pyo3 python &lt;-&gt; rust binding: https://github.com/PyO3/pyo3 * asyncio event loop written in rust: https://github.com/PyO3/tokio
Oh, great, thanks for the help!
I know a bunion named mb 
Please show me where the checks are done that "make sure the built-in hasn't been reassigned" as you've previously claimed.
Heh, how long have you been programming? Many, many, many of us end up using languages/frameworks/tools/platforms that we would never choose if it were up to us. Let's put it this way: no startup today says, "I know - let's use COBOL!" 
How the heck does defending Python vs. Perl in a Python subreddit get you DOWNvoted?
[Python Box](https://github.com/cdgriffith/Box). Dictionaries with dot notation access (and other helpful features). 
If you insist on not being able to interpret the plain meaning of a sentence because you think you're having a fight on the internet, I cannot help you. 
It's actually quite useful. The OP gave a bad example. try-else is useful too.
I've never used for/else in production code because it's unnecessarily hostile to future developers who probably haven't seen that talk. 
[Show me what you got](https://displate.com/displates/2016-12-13/360ffe424a2acfad20158eda8031a508.jpg?w=357&amp;h=500&amp;v=3).
I think for/else should be used if the alternative is flags, which are less"Pythonic", but from now on I'll add `# no break` to any of them by /u/dunkler_wanderer's suggestion.
No prob bro
thank you for something I use literally daily
Linear search isn't the most compelling example, but it's where I use for else the most. Now that I think about it, I've used while else for a retry mechanism before. But that's it, the loop-else is more of an oddity that's occasionally useful than something I turn to often. What have you used it for? Edit: swype is bad
Simple but useful!
Does it also allow keyword access concurrent with dot access?
Lol, Perl is actually safer than Python. I don't particularly like the language, but Perl supports a trusted and an untrusted mode. With Python, that's not even possible. You use PostgreSQL? Hope so. It has a trusted plperl which can run trusted Perl code. There is no trusted plpython. Why? Because python fundamentally is unsafe. You can't sandbox it. See [the docs](https://docs.python.org/2/library/restricted.html). The problems can't currently be remedied at all. &gt; Warning In Python 2.3 these modules have been disabled due to various known and not readily fixable security holes. The modules are still documented here to help in reading old code that uses the rexec and Bastion modules. You can read more about [it here](https://softwareengineering.stackexchange.com/a/191628/76176)
Because there are lots of benefits to python and lots of benefits to perl, you don't need to invent reasons for using or not using either.
The online sneaker botting community thanks you.
Edit: DERP. Thanks /u/flubba86 Yes, you can access keys by either `dot.notation` or `standard["key"]` ~~(If I understand you correctly) It does not break standard convention/syntax by allowing access to members like `my_dict.pass` or `my_dict.and`.~~ 
And what the present are the top 10 of the typical spectrum reader: &gt; But where we really differ from other rankings is that our interactive allows you choose how those metrics are weighted when they are combined, letting you personalize the rankings to your needs. &gt; &gt;We have a few preset weightings—a default setting that’s designed with the typical Spectrum reader in mind, as well as settings that emphasize emerging languages, what employers are looking for, and what’s hot in open source. You can also filter out industry sectors that don’t interest you or create a completely customized ranking and make a comparison with a previous year. &gt; &gt; So what are the Top Ten Languages for the typical Spectrum reader? 
Yeah, but Python will lose because of CPAN!
Have you looked into using a database built to store time series data, such as InfluxDB? It allows you to add arbitrary tags to your data just as you describe. See [here](https://docs.influxdata.com/influxdb/v1.3/guides/writing_data/) to get a good idea of what it's like.
I'm working on a MUD using the Evennia framework. I'm using it to self-teach Python and programming in general. It's going really well so far!
[I'm a beginner.](https://pastebin.com/Ns8ahq8d)
Yeah, that's fine and all, but I was talking about a scenario in which I just put the search terms as args and python starts the torrent directly after searching, and adding to the client, without user intervention.
It's still in pretty early in development but https://github.com/pmdevita/FlaskNAS Software to run on a Debian box to provide NAS functionality
Which website? Which data? If was all html from website, just use the requests lib and get the .content attribute from request and use the open() using the file..
Small little currency converter
This sounds interesting. I think I can integrate something like this. Giving user an option to generate HTML (for details,comments) or directly download the torrent (and adding to client).
Tks for the feedback, this is an article for scraping JS enabled websites where requests and beautiful soup won't work Will definitely look into my final structured output and try to revamp it.
That is not what /u/zeppelin528 was asking.
Yes, you can use keyword access. For example, my_box.categories.dog.name is the same as my_box['categories']['dog']['name'] And you can still use the latter, as if the box was a regular dict.
You just inspired me to start working on an 8-bit microprocessor in python, I've always wanted to do a hardware-mapped memory range for interfacing with visualized peripherals.
Oh cool, a couple of months ago I wanted to write an asyncio loop policy in rust using tokio, but I never got around to it. Thanks for doing it for me!
you are welcome to join! 
This is a short blog post about a tool I am working on that I think many would find useful. This is my first technical blog post, so apologies if it is unclear/confusing anywhere. Constructive feedback would be appreciated. If you have questions, feel free to ask!
Some Sanic plugins/extensions that people find useful. [Sanic-CORS](https://github.com/ashleysommer/sanic-cors) https://github.com/ashleysommer/sanic-cors [Sanic-Dispatcher](https://github.com/ashleysommer/sanic-dispatcher) https://github.com/ashleysommer/sanic-dispatcher [Sanic-Restplus](https://github.com/ashleysommer/sanic-restplus) https://github.com/ashleysommer/sanic-restplus I'm planning to do more. I'm pretty much taking the most popular Flask plugins and porting them to Sanic, also removing superfluous features and making the plugin as fast as possible to fit the Sanic "gotta go fast!" mentality.
The first big thing I did is still one of my favourites, it was sort of an [artistic maze generator](https://www.youtube.com/watch?v=RkHEVtgiLUA), to this day I still have no idea what to call it. By far the most popular though was the [mouse track script](http://imgur.com/a/gcYaD), the interest gave me motivation to see it through to the end, but after 3 months I'm still working on finishing it :P
I'm an avid open-source contributor, and your projects are square in my interest field. I will definitely be joining you. I'm very interested in the python&lt;-&gt;rust interoperability space. Also, I didn't click with me until just now that you are the same person from [this thread](https://www.reddit.com/r/Python/comments/6p3r4u/pyo3_python_rust_binding/) _and_ you also made aiohttp, which is a library I use every day in projects at work!
Did you use an existing established instruction-set, or make up your own?
[`pywal`](https://github.com/dylanaraps/pywal). (My first Python project!) It generates a colorscheme from an image, sets the terminal colors instantly (no need to reopen), applies it to various programs, exports the colors in a wide number of formats for use in scripting (`json`, `css`, `sh` etc) and then finally changes your wallpaper to the image. It does all of this without having to overwrite any of your config files. Which is what I disliked about other similar programs. - [Screenshots (Warning: Large sizes)](https://dylanaraps.com/pages/rice) - [webm (Quality was butchered sadly)](https://gfycat.com/DirectHarshJerboa)
You can set variables in any python block within renpy code. The Python block is either multiline, starting with `python:` and indented, or a single line starting with `$`. Variables set that way are available in the renpy code without importing; see code below. This is a minimal example without characters and images and stuff. "Here the dialogue begins" menu: "Say one thing": $ thing_said = 1 jump dialogue_2 "Say another one": $ thing_said = 2 jump dialogue_2 label dialogue_2: if thing_said == 1: "You said thing 1" else: "You said thing 2" That's it! This, and many other cool things, is available from RenPy tutorial (look in the project list on the left panel of renpy window). If, by any chance, you know Russian, have a look at [this old tutorial of mine](https://habrahabr.ru/post/303476/).
Many serious embedded projects don't even involve hundreds, let alone millions, of units. At those levels, the cost of development far *far* outweighs the extra few bucks for a MicroPython-capable platform. It's definitely of interest to those of us who work on this sort of project.
Yeah, and Ren'Py [community forum](http://lemmasoft.renai.us) is pretty friendly, so you may have more luck asking technical questions there. Don't know if [the subreddit](https://reddit.com/r/renpy) is any good, but at least it exists.
**Here's a sneak peek of /r/RenPy using the [top posts](https://np.reddit.com/r/RenPy/top/?sort=top&amp;t=year) of the year!** \#1: [VN Advices Needed](https://np.reddit.com/r/RenPy/comments/4x212r/vn_advices_needed/) \#2: [Palinurus Release on Steam! (December 9th, 2016)](https://np.reddit.com/r/RenPy/comments/5grway/palinurus_release_on_steam_december_9th_2016/) \#3: [Can I check if a variable is divisible?](https://np.reddit.com/r/RenPy/comments/5dgtxk/can_i_check_if_a_variable_is_divisible/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
well, pyo3 library needs even more work than async-tokio, so welcome!
As a bonus, in the html form, you could add the option to *select * files to be downloaded, and stop the rest.
Not the best(not by a long mile) but this was what I am most proud of [subredditnewpostnotifier](https://github.com/VatsalP/SubredditNewPostNotifier). The first project I undertook while I was learning python. The only stuff I did until then was couple of script in sourcemod.
Select files? Which files? HTML page is generated only for torrent selected. And page consists of description, comments and magnetic link. 1 torrent can be selected at a time. 
A bot that doesn't require any credentials (except an heroku account to deploy it) https://github.com/neelkamath/hack.chat-bot
I made a Twitter bot that searches for people asking why homeless people have dogs. It replies "Homeless people have dogs because a dog will love you even if you are homeless." It's the greatest piece of software I've ever written. https://twitter.com/yhoboshavedogs
This is a tutorial he has linked, that is unfortunately written like a question.
one of the first api's I've ever used. Thank you!
I'm not sure what's my best, so I'll leave it up to you: * [XCS](http://hosford42.github.io/xcs/), a machine learning library. * [Pyramids](https://github.com/hosford42/pyramids/), a natural language parser. * [Attila](https://github.com/SaintAttila/attila), an automation framework. * [NPC](https://npc.trueagi.com/), a chat bot that actually tries to understand what you mean. (Very much a work in progress, but I'm proud of it nonetheless.) 
I'm working on a zwave-mqtt interface for door locks and possibly other devices. I'm able to pair devices with mqtt and unify them on a single account with all the correct permissions setup with mosquito's auth plugin. I've spent a lot time mapping all the functions to simple get/set addresses on the mqtt network, so for example, sending 0 to users/exampleuser/nodes/examplenode/devices/locks/examplelock/set/lockstate would unlock the door. It's a really interesting project so far. I'm doing a lot of oop, function passing that I've never done before, and multi threading.
All original, but based on a few addressing modes I remembered from 6502. It had a few instructions geared around quick addressing of the first 8 bytes similar to page zero.
Every year or so, I dust off old code for an idea I had some 20 years ago but never finished. Maybe in another 10 it will finally hit that self-hosting critical mass. It's a multiple-server MUD-style simulation engine based on a novel object and messaging model.
[python shellcode](https://pastebin.com/JYazb9WV)* ^^^^*not ^^^^actually ^^^^shellcode
you killed him :(
check out scrapy https://scrapy.org/
[kawaii-player](https://github.com/kanishka-linux/kawaii-player) multimedia player and portable media server. Code quality is somewhat poor, but program is stable and can run even on old intel atom netbooks. [hlspy](https://github.com/kanishka-linux/hlspy) curl/wget like utility for dynamic web pages. 
Sorry for being so vague. I was talking about selecting the files *inside* the torrent. For example, if I wanted to download a song, I would find the album's torrent, load the magnet and *select* the song, so that i don't have to dl the whole album.
Yes, thank you. I'm aware of scrapy, but the intent of this tutorial is to teach users about BeautifulSoup and the Requests library. I may write a follow up version on using scrapy. 
Yes it's a tutorial that is linked. Next time I'll be sure not to phrase the title as a question.
I don't think there is anything wrong with the phrasing of your title. 
Automated nhl stat analyst/predictor and lineup generator for daily fantasy 
Before you design your own check out [CHIP-8](https://github.com/tallforasmurf/CHIP8IDE). Scroll the readme down to "History" near the bottom.
We have a winner. &lt;/thread&gt;
This was my thinking in why I picked Python. I used to work in finance and decided to automate a lot of the work, hence started learning Python/Numpy/Pandas instead of something like Ruby or low level like C (I did end up picking up a bit of C in the end though). Now years later, after quitting finance, I build web apps and other solutions :). Not to mention that I dabble a bit in ML when I have the chance. I really enjoy Python and it's only getting better with the latest releases! Edit: just to clarify, I didn't originally pick it because of NLP or ML but because it was the best for math/stat oriented work for what I wanted to do.
The minimap plugin also; community outcry and forking just got this revert in the minimap.
I thought I was going to get a job in San Francisco, but didn't end up getting it. I drove yesterday for the first time in seven years. It had manual transmission, so I took its parameters and generated data and graphs for the best gear for a certain speed (optimizing either for engine longevity or fuel efficiency), when to shift for maximum acceleration, and what RPM to match with when downshifting. Fun! I'll also be teaching Python to a few people.
Seriously, thanks for providing an API that's obvious, a pleasing to use, and easy to internalize.
Kite is such garbage... I feel bad for the chumps who are stuck working there
[Text only version](https://www.textise.net/showText.aspx?strURL=https%253A//theoutline.com/post/1953/how-a-vc-funded-company-is-undermining-the-open-source-community) for anyone else having trouble reading that article.
Wheres the fun in that? The whole point of it is to build my own microprocessor emulator, not use someone else's.
Thanks! For a website named the outline, the article layout is surprisingly annoying to read. IMO anyway.
Yes, that's exactly what I was asking. Thanks. I use json for my config files. I've written my own function to return a json object as a class with dot access to attributes but I didn't make it recursive. Only one level deep. I'd love to use this library but not if it breaks my existing work.
Sorry for the late response I was gone for the weekend. So I can download 64 bit anaconda and run it with my 32 bit python or I need 64 bit python to run 64 bit anaconda?
This has nothing to do with the tool. This tool only fetches torrent. What contents you want from the torrent are up to you. Its selectable from torrent client.
I thought you were asking a question but left the link when I realized it was a tut since it might be helpful. I have used beautiful soup as well with some of my NLTK projects and it's nice. I see scrapy as an awesome scraper out of the box with little effort required to create a powerful spider/scraper, but BS is incredibly versatile and I use it in all kinds of projects.
[pyformat.info](http://pyformat.info)
I do know that. I was just suggesting that you add this to the tool if you want to scale it up in the future.
Ok so now i have it as an option but it doesnt let me run the code when i creat the project and says its indexing the skeleton im just going to restart and see if it helps but i ddont know what else to do.
Any screenshots how those promotional intrusions look?
Y hobo shaved ogs!
Ah, Perl vs Python; the age-old pissing contest. Now we just need someone to barge in and tell us Ruby is superior.
If these packages are managed on GitHub, can't someone just reject these changes? Why is this a big deal that we can't just override?
According to the article in the case of minimap there's only 1 maintainer and he works for Kite. https://github.com/atom-minimap/minimap
[panflute](http://scorreia.com/software/panflute/): a pythonic way to write Pandoc filters (i.e. to extend what you can do with markdown and Pandoc) (Not as cool as kennethreitz's projects but hey you need to start somewhere :)
Is there anything preventing me from downloading the code, deleting his kite stuff, and republishing it for all to use?
Check out sentdex and Corey Schafer on youtube. Also the hacker's guide to python is great too.
Huh, I think this might be the company that showed up on Reddit ages ago to show off their tool that did cloud-powered autocomplete. It looked interesting at the time, but I couldn't get access. And if they're doing this kind of crap, I don't want to use anything they make.
MIT license You are good to go
It has already been done. The project was forked and the crap was removed.
Thanks!
I use (and recommend) this quite often at work! Many thanks .
I love that, all this time they knew that their biggest issue was user trust: https://www.reddit.com/r/Python/comments/4erjy4/kite_programming_copilot/ https://www.reddit.com/r/programming/comments/4erqgq/kite_programming_copilot/ https://www.reddit.com/r/programming/comments/4eud6i/kite_plugin_may_revolutionize_developer_workflows/ https://www.reddit.com/r/Python/comments/620ejb/kite_the_copilot_for_programmers_available_today/ And so how do they go about fixing it? just shitting on everyone, near literal shitting in everyone's soups such bloody twits, honestly. 
No. It's a separate python install. The standard python is the PSF's distribution of python. This is a different group.
Yes the one and the same. 
2 years ago I started my way in python from requests library. thank you
OK, gonna throw you a curveball here... I **absolutely** want you to learn Python, and as an exercise in learning the language this is certainly a decent entry point... *but*, if you're really *serious* about making a text-based RPG -- like really serious, as in you have an idea for a game that you want others to *play* and maybe even *pay* for --- you should definitely know about [ink](http://www.inklestudios.com/ink/).
I'll look into this :) Thank you.
/r/learnpython
Wasn't there a post about this on /r/programming and the thread said this was a non issue? Like they made the plugin in the first place and it was barely a link or something? This article is sorta hard to read. &gt;Another popular tool, called autocomplete-python, which has 971,000 downloads, was also apparently taken over by Kite back in December. Kite did not advertise this fact, however, and on May 13 a programmer under the handle @dessant noticed that autocomplete-python’s main developer, @sadovnychy, had seemingly handed it over to Kite. “Please share the nature and circumstances of the apparent maintainer transition taking place, and specify how does it relate to Kite and its employees,” @dessant wrote, adding later that “many of us feel the autocomplete-python package is being overtaken by the Kite team, and the popularity of this plugin is being used to promote their service.”
PSA: How to scrape a website and store the data into a file ^^^^^/s
See sidebar: &gt;If you are about to ask a question, please consider r/learnpython or the learn python discord. In your case, you should probably ask here: https://intellij-support.jetbrains.com/hc/en-us/community/topics/200379535-PyCharm
That's unfortunate. When I first heard of it a year back, I was quite excited to give it a try for my personal open projects. I'm all for using the power of the cloud to improve tooling, and the concept seemed interesting (again, for non private code). But by pulling this shit, they've completely ruined their image and reputation, destroying any chance they had. Especially as a programmer tool, we're the last people you'd want to try and scam...
Yeah, I was excited on trying this on my personal project, but after this, fuck that these people clearly are clowns.
To repeat my answer to your last question: See sidebar: &gt; If you are about to ask a question, please consider r/learnpython or the learn python discord. Since you seem unable/unwilling to use google, here is your answer: https://stackoverflow.com/questions/28390961/using-anaconda-within-pycharm
What do you using for the scraper? Scrapy? BeautifulSoup?
&gt; BS is incredibly versatile and I use it in all kinds of projects +1 Unfortunately BS need something to manage the HTTP downloads, scrapy include also download, retry and parallel/asynchronous HTTP management.
https://bettersubbox.com/ It's a tool for YouTube power users that builds upon the subscriptions system and adds few features I was missing from the YouTube...
Hey buddy, I'm truely sorry, I did not expect Ren'Py to be so different to python. So, what I told you above, is a normal approch in Python to make Decisions (if) output text (print) and make the user able to give input (raw_input). What renpy does is, to "wrap that in something". Let's say you want to output text. in python we use print("text") for one or more lines. In renpy you use `g "Welcome!"` apparently! I have no idea why. it seems that the "g" takes all the work from you (you have to type less, it's easy to remember and so on). So, in that case, I'd redirect you to youtube, because there is no real concept behind it, that I know or understand. For example, python is kind of intuitive when you print variables.. Look at that script here, we want to get the players name from an input, store the input in a variable and then greet the player. Python would do it like this: name = input("What is your name, young padawan?") print("Welcome " + ", I'll guide you on your journey!") This will result in this: `&gt;` Whar is your name, young padawan? `&gt;` **Luke** (your input) `&gt;` Welcome **Luke**, I'll guide you on your journey! If you write the same in Ren'py it would probably look like this: define name = Character("[playername]") #defines your "name" variable, your Name will be stored here. python: playername= renpy.input("Whar is your name, young padawan?") #similar to input, but it will process the input in the renpy Library. playername = playername.strip() #This only removes whitespace, "Luke " -&gt; "Luke" if not playername: #If you don't enter a name, playername= "YouDidn'tChooseYourNameSoIAssignedYouThisLongName" #you will get this one name "Welcome [playername], I'll guide you on your journey!" #Finally the message. Disclaimer: renpy is not "worse" than regular python for this job, I saw that you have a GUI and can simply write messages in various fonts, sizes, colors, and even add images very easily, so overall, this is definitely better then regular python for this job. In my opinion, It's just very hard to get into it, it is filled with so many features, that reading the docs is not fun at all. Still, if you are dedicated in doing this, you'll take away a lot. Keep in mind, that the concept is very easy as soon as you start to see the scheme. an Input in renpy is always `renpy.input("your text")`, not matter if you want it to be the name of you, the food you want to eat, or the weapon you choose. The difference is made in the variable name. Do this: `weapon = renpy.input("Name your weapon!")` and you will have a weapon. and the rest is repition too. Printing text, making decision, all that stuff is the same over and over, don't worry! You'll get this :) Edit: name "Welcome [playername], I'll guide you on your journey!" #Finally the message. it's actually like that: name message So the about would actually say Luke: "Welcome Luke, I'll guide you..." Which we don't want. The Message should say "I'm Luke!
Thanks. Thats all I needed to know. Perfect. Thats a super easy to use tool rather than open a web browser and searching
What the fuck is that title.
I feel like I'm in subredditsimulator reading that title.
The animated underlines made it too distracting to read.
They do seem to be outrageously arrogant! From the start people were nervous about trusting them with their code in the cloud. But now their marketing strategy is to sneak their tool into existing projects and blow people off who complain. I think the quote they gave at the end of the article pretty much sums it up, they seem to think they're gods gift to developpers and anyone who complains abount mundane things like having product adds bundled into their Atom plugins just doesn't understand how awesome they are.
I am a pro hacker it was easy.
haha wow, this is so needed!
As an alternative, you guys should look at http://sourced.tech/, they are the most open source I know and they are trying to build a community around "smart code tools"!
Thanks, I'll definitely give it a look! I've done a couple of projects on Kaggle, but I'm always on the hunt for a new resource. 
a raspberry pi is my preferred solution for 24/7 scripts
Great software, a must in the requirements.txt of all my projects
The only problem with it is the naming and you can easily fix that with a comment. Also, I think this talk is a real must-watch for every Python programmer. If someone doesn't know it, you are required to give them a link. ;)
I've downloaded inky and keen to give it a try. Do you think by learning ink ill have a better understanding of python when i get around to it? 
I love how forking functions as a Sword of Damocles for open-source maintainers. If Linus started pulling this shit, he wouldn't be pulling it for long.
Yes that was my ideal solution, unfortunatly I'm restricted to Cloud-managed databases, as I don't have the resources to manage a cluster of TSDBs. Amazon doesn't offer a TSDBaaS as of yet, I think the closest possibility is the Timescale extension getting offically merged as a RDS Postgres extension.
Using BeautifulSoup it makes sense to me. Would you recommend something else? Here is my code so far... https://github.com/murtaghj/beebsport/blob/master/beebsport.py
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [murtaghj/beebsport/.../**beebsport.py** (master → 8ad081b)](https://github.com/murtaghj/beebsport/blob/8ad081bbc2bfa31aca2090cee64aae2a4ee4406f/beebsport.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dkn51lj.)^.
Are these guys in(s)ane? Corporate security office people everywhere would get a heart attack if they find out we've been using tools that upload our code to the cloud for analysis.
Hah, they'll just quietly rebrand and relaunch.
What the *** even.. animated wavy underlines? WTF.
My last project is [Scalpl](https://github.com/ducdetronquito/scalpl), a small wrapper that allows you to use all methods of the `dict` API on nested dictionaries :) Inspired by [Addict](https://github.com/cdgriffith/Box) and [Box](https://github.com/cdgriffith/Box), but for those who want a lightweight and fast alternative to dot notation access libz 👌
[whatstyle](https://github.com/mikr/whatstyle) finds a code format style that fits given source files
That's really cool to have equivalent Flask plugins for Sanic ! Thanks a lot :)
Yeah they did an AMA and we're completely silent on questions about security and data protection. It was one of those awkward Woody harrelson type things...
Some times ago, I was wondering if I should use Kite. I bookmarked it until now. I can safely delete that bookmark.
Hey, stop stealing words from my head! 
Well, yes and no. **Ink** is a highly specialized *scripting language*, actually really an example of a *domain-specific language* (or DEL), and is closer to something like **Markdown** or **HTML** than it is to Python, which, though it can be used for scripting, is a full-fledged *general programming language*. On a broad level there is a lot of overlap: **Ink** has *conditional statements* ("if this, do that, else do other"), *loops* ("while this, do that" and "for each of these, do this"), and so on. So, yes, a lot of the *ideas* of **Ink** will translate into a small set of the ideas of Python. But at the same time no, because quite a few of the concepts in **Ink** are hyper-specialized towards narrative storytelling, and just don't have an equivalent in Python... though, being general, Python is very flexible, and you *could* rewrite all or any of **Ink** in Python if you felt like it.
https://github.com/haandol/honey scriptable slack bot for python users. I love Hubot but I wanted to make my own plugins using python.
The code is very clean and understandble. Then you are managing the dowload synchronously? For my application (similar to your, but for Italian Serie A) it takes more than 2 days to complete. This is my code (still to finish and with a lot of refactoring to do): https://bitbucket.org/lormayna/football_scraper/src/749c4e1a8d52d8dbc349028f153caf82f9d7d06e/scraper.py?at=default&amp;fileviewer=file-view-default
It looks like open source works as it should. 1. People noticed the change - many eyeballs works 2. There was a fork with the objectionable code removed 3. The change was removed. If this has been proprietary code, users would have had to live with it. Yes, Kite are being sneaky and sleazy - but they did not get away with it.
Some more information: https://stackoverflow.com/a/900062
The proliferation of single maintainer projects is interesting. Cause it will take longer than it used to, to catch malicious behaviour.
Daniel Shiffman (awesome Youtuber btw) has a playlist about twitter bots. His language of choice is P5.Js built on the processing framework ... but the concepts of deploying the code to run 24/7 is done using Heroku and AWS so gives you a good understanding of how you can use this as an option. [Twitter Bot Playlist](https://youtu.be/7-nX3YOC4OA?list=PLRqwX-V7Uu6atTSxoRiVnSuOn6JHnq2yV) I personally would also recommend going the Raspberry Pi route as another Redditor has already commented about. I am using this for my own projects as well. 
Stop uploading your head to the cloud
Ask me about Rampart. 
It Must Be True Because We Upper Cased Every Word.
True, but some things that will mitigate the damage. Single maintainer projects tend to be small, therefore: 1. The code is easy to review 2. It is easy to fork - the maintainer of a fork is taking on less of a burden 3. They are generally not critical to large number of people. 
It's a double edged sword of course, in some cases like this that a relatively black and white it is of course a great solution but other cases in only leads to fragmentation and division... still better than anything else of course
I can't comment for the rest but to see R so high compared to javascript and php is suspicious. 
&gt; HTML is used by coders to instruct computers to do things, so we include it. A keyboard is used by coders to instruct computers to do things, so they should include it too. Idiots. 
It's an existing 8-bit architecture, you can build your own emulator for it. The fun is that there's a whole ecosystem of programs and demo for the base Chip8 and its various extensions.
I just woke up and this killed my eyes.
You're lumping for, while and try in the same bucket, but the latter is not like the first two: it's not a loop, and there is a condition: the except clause(s). `else` is executed if no exception is raised which is very convenient to reduce the scope of the `try` and not have an unnecessary broad `try` block which could (and sometimes would) match things it should not; as well as important in the case where the `except` block(s) actually recover and don't just reraise or return, so you can't just put the followup code after the try/except/else structure. If you don't like for/else and while/else, just don't use them. I've been doing that successfully for a good 15 years.
No it's okay, they were under the MIT license.
The 90s called and want their marquee tag back ...
Thank you. I reposted to learnpython.
Thanks. I am looking for an offline version without resorting to any cloud services for the moment.
I'll just open another paper company, and then another, and another, and another. I have no shortage of names!
Yep, I remember.
Their technology looked amazing. I couldn't get company buy in because of sending stuff to the cloud. If they gave away their server and sold support we probably would have bought it and run it internally. The community should start FOSS version.
Sounds like a decision driven by an MBA and not an opensource developer.
those near full-screen ads are ridiculous in the OP link
For someone who just installed both atom and autocomplete-python, how do I make sure I'm not using kite? I vaguely remember seeing an option to use cloud auto complete with kite and not choosing it, but want to double check and make sure. 
Only the effort required. If the original author is still updating the plugin you would either have to continually update your fork to match their changes, or allow yours to stagnate.
I was going to say... in most open source communities, if I so much as ask if a FOSS program does x, looking for a yes/no, people reply "write it yourself" implying that everyone who works with FOSS is a high competency programmer. I read this and thought, physician heal theyself!
Just built a multiplayer remote controlled robot https://kropbot.herokuapp.com (running on a Raspberry Pi). Averages the instructions from all the clients, with predictably confusing results.
Great book, have just started reading. Love the intro quote. Thanks for the recommendation. 
And if they are critical to a large number of people, 1. and 2. are more likely to happen.
This obsession with SaaS in startups and in VC funding is no end of frustrating. There is still strong value in self-hosted technologies, and it's a field still ripe for plenty of disruption. Part of the problem, I think, is that SaaS makes it easy to launch early with a minimum viable product, start getting a revenue stream, and iterate rapidly. With self-hosted, you've got to have a valuable product from first release, and accept that customers are going to be slow to update.
That maze generator output reminds me of coral. Maybe that's a good name.
No worries! Follow up on the reading lists and links at the end of each chapter as well, they're almost as good as the book itself.
This is awesome! How have i not heard of this before?
You can make any Linux distro look like this, it's just the `i3` window manager with a custom taskbar and `pywal` to theme it all. :)
The people launching most SaaS have never worked for an actual corporation. They're fresh grads with a halfway decent idea that have no idea how most corporations operate. One of my coworkers went through Legal to see if he could contribute to an opensource Python project and we were told we couldn't even submit *bug reports* because it could "Reveal proprietary information about blah blah blah". Not that our Lawyers aren't stuck a bit in the past and there is a middle ground but something like sending our keystrokes to some outside server? Nopeity nope nope. Literally every connection for the company has to go through our Firewall. Git? Self hosted. The thought of putting some of our stuff on GitHub (even as a "Private" project) is laughable at best. 
That is mentioned if you read the linked article.
&gt; Well written, idiomatic Python is not, and cannot be, as fast as equally well written and idiomatic (and properly compiled) C or C++ I agree but I think your point is idealistic. I don't care which language can run lines faster, I care which language can produce a working solution which ticks all the boxes for a reasonable amount of development time. Good luck beating numpy/scipy! 
I'm not trying to, I'm just well aware of the fact that **neither of those are Python** and that's precisely why they're hard to beat.
A web-interface for managing long-running python scripts or applications, intended for use on a Raspberry. Shows output in realtime with controls to start/kill/restart and push notifications via pushover when a script unexpectedly halts. I intend to open source it some day but haven't gotten around to it.
"A naive estimate would be 9!=3628809!=362880, since there are 99 possible first moves, 88 for the second move, etc. This does not take into account games which finish in less than 99 moves. Ending on the 5th move: 14401440 possibilities Ending on the 6th move: 53285328 possibilities Ending on the 7th move: 4795247952 possibilities Ending on the 8th move: 7257672576 possibilities Ending on the 9th move: 127872127872 possibilities This gives a total of 255168255168 possible games. This calculation doesn't take into account symmetry in the game." (copied an answer from stack overflow) You can read more here http://www.se16.info/hgb/tictactoe.htm
Wheels don't bundle their dependencies, though, so don't really help with OP's question.
confirmed. your name checks out.
* Filesystem abstraction layer https://www.willmcgugan.com/blog/tech/post/pyfilesystem-204-released/ * Websocket client https://www.willmcgugan.com/blog/tech/post/announcing-lomond/
I'm also going to keep calling numpy and scipy python :P
Fair enough, but *implement* them in Python and see how fast they are.
Oh. You are right. Nuitka should be a good solution. EDIT: mea culpa : it seems that `pip wheel` is able to bundle the package and its dependencies.
Lmfao you're delusional
I don't enjoy marketing it to other people too much, tbh I just programmed it for myself and sometimes I put a link somewhere, if anybody wants to use it they can. It's also opensource.
I'm also curious what disclosure they did to plugin users when they added the "we are now copying your code to our servers" feature
You can get a directory full of `.whl` files of all the dependencies, but they're not usable as-is: you're supposed to install them[*] (e.g. into a virtualenv) before you can actually use them. [*] since wheel files are zip files, and since Python supports imports directly from zip files, you might try listing all the wheels explicitly in $PYTHONPATH, but this use-case is not officially supported by the wheel spec, and not every package will work if used this way.
Great idea haha, I think it fits perfectly :P
Possible to share what service you're using for self-hosting? I've only used GitLabControl and found it fantastic. Rapid development, rock solid, and simple to setup. 
Conceptually, the mechanism is the same: take the `else` branch if the loop/try block doesn't break/throw. But I agree that `try...else` is quite neat. It's also intuitive because it reads as "catch the exception (if any) or else...". As for the loops, let's agree to disagree.
Local install? You want avoid breaking the target ecosystem, so locally install and add the cli script to the path will work. 
It'd be great if auto-completion added the comment for us :) edit: Why not: break in for ....: .... else: ....
Niche has more than one definition. Look it up.
Yes, a local virtualenv is what I would recommend too.
It was late and I may have gotten carried away.
I've looked at this before and even tried to make my own version. I kept having issues with ipython and it yelling about canary methods. One thing that would make your tool more useful for me is if kept the order. I guess you could subclass OrderedDict but on older python, that may be much slower.
Old corporation: GitLab. New corporation: Atlassian Stash.
That is the total amount of possible games though, not the amount of states. That is to say, the order in which marks are placed is seen as a difference between states. But since the history of the state is not important in determining the best next move, I would not count it as part of the state. especially not when talking about a Sudoku AI.
**Most popular:** https://github.com/kootenpv/whereami Uses WiFi signals and machine learning to predict where you are **Most interesting**: https://github.com/kootenpv/neural_complete A neural network trained to help writing neural network code using autocomplete **Most useful**: https://github.com/kootenpv/yagmail yagmail makes sending emails very easy by doing all the magic for you
Slinkie. I started work on it about a week ago, so a lot of stuff is just not there yet (like proper documentation), but it's already proving quite useful to me. It's built around the same ideas as LINQ, but with some neat stuff added to it, like transposing, something similar to haskell's case, checking if a value falls between two other values, etc. --- Dumb example: from slinkie import Slinkie _doublify = partial(mul, 2) def _present(number): return f"The number is {number}." items = [1, 2, 3] result = Slinkie(items) \ .map(_doublify) \ .map(_present) \ .tuple() pprint(result) Result: ('The number is 2.', 'The number is 4.', 'The number is 6.') --- Slightly less dumb example: from slinkie import Slinkie from requests import get def is_okay(response): try: return response.status_code == 200 except Exception: return False def failure(exception): print(exception) links = ["https://google.com", "http://b", "http://c"] Slinkie(links) \ .parallelize(get) \ .switch( (is_okay, print), otherwise=failure) \ .consume() --- And another, for good measure: from slinkie import Slinkie items = [['a', 1], ['b', 2], ['c', 3]] print(Slinkie(items).transpose().list()) Result: [('a', 'b', 'c'), (1, 2, 3)] --- https://github.com/segfaultsourcery/slinkie https://pypi.python.org/pypi/slinkie 
Thanks for the bringing this to my attention, do you have an example of the error you are getting or how to reproduce it? I totally agree keeping order would be handy, sadly the real problem with `OrderedDict` and other's like `UserDict` is that they are not a subclass of `dict` so you lose a lot of the ducktyping / in place replacement magic. 
I sense a common thread, or perhaps a culmination of sorts. Machine learning is such an inspiring field!
I had Kite installed before I had second thoughts, I am concerned they may be inventorying a lot of proprietary code, which is what I write almost daily. Is there a comprehensive list of Atom extensions that use Kite? I really like Atom as an editor, I certainly don't want to take the nuclear option and uninstall it...
It took them some time to catch it, but still, the system works.
"Let's keep the discussion about ~~Rampart~~ Kite, folks!"
Why? 
After finishing an intern call center manager system i'm maintaining and coordinating two elements from another team to build a ws inside it. Also im doing a basic pokemon game in pygame just for fun.
Do you use it to predict games outcomes? If so, how good is it? :D
Somehow, if that's the case then I suspect the MBA is about to get an abrupt lesson in how much geeks talk to each other. I'd never heard of Kite until very recently. Today, it's on the front page of literally every relevant site or forum I read, sometimes multiple times, for all the wrong reasons. Maybe I'm weird, but in this era of ephemeral startups and cloud everything, I started keeping track of companies and staff that have done something so contrary to my principles that I would never trust them or want to do business with them in the future. It's a short list, but everyone mentioned at https://www.kite.com/aboutus is now on it, as are some of the maintainers of the plugins affected.
I think for a company this shady, the only way to be sure is to not use autocomplete-python. Even if you were to disable the kite function, they might reenable it whenever they feel like it.
[UPDATE] - v1.3 - Its now possible to download torrent (magnet) directly from console, if fetching details is not intended. Spread the word. Spread the tool :) Enjoy!
I love you
I made a Gameboy emulator once. I stopped when it was able to run through the BIOS and show the first screen of the ROM I was testing on. One day I'll have to continue it. 
Very cool! MyPy also has a tool for this, called 'pinfer' (https://github.com/python/mypy/tree/master/pinfer). Is your tool a continuation of that development?
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [python/mypy/.../**pinfer** (master → b6bcdc0)](https://github.com/python/mypy/tree/b6bcdc0038fa3fbca54190b5b66e5e5d95f67acc/pinfer) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dknjjlg.)^.
/u/quotemycode I'm still interested.
You should probably promote your work somewhere relevant to your work.
Good bot.
Thank you mattsl for voting on Laodic3an. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://secure-dawn-77807.herokuapp.com/).
Hey, I'm an engineer and have found Python to be an AMAZING alternative to Matlab and have been enjoying the ride I've been on learning it. Just learning the combination of Jupyter Notebooks, Numpy, Pandas and Matplotlib is a good place to get started I searched the university I graduated from for the equivalent Numerical Methods course I took (that used Matlab) and the course syllabus led me to [this book](http://www.cambridge.org/us/academic/subjects/engineering/engineering-mathematics-and-programming/numerical-methods-engineering-python-3-3rd-edition#rWKHxd2McX1CIe0X.97) I did a quick google search and there's a (presumably illegal) copy that can be found [here](https://doc.lagout.org/programmation/python/Numerical%20Methods%20in%20Engineering%20with%20Python%203%20%5BKiusalaas%202011-02-21%5D.pdf). I'm going to start reading this as well. 
Pinfer was an experiment to generate stubs based on runtime signature introspection and source analysis (as I understand it). Typycal uses the actual values passed to functions and uses many function calls to build types. Additionally, typycal should be much faster, as its average per frame overhead is roughly 5 microseconds. So it isn't a continuation, but tries to solve the same problem space.
I cannot help you with Python as you clearly have no understanding of the language at all. So just to make sure I'll ask again, where are the checks done that "make sure the built-in hasn't been reassigned"?
I'll often use for...else when I'm writing timeouts or retries: # Timeout function ts = time.time() while time.time() &lt; ts + 30: if check_condition(): break else: raise TimeoutError() # Retry function for _ in range(3): if run_function(): break else: raise RetryError() I like the construct because it makes it clear that the else clause is logically connected to the loop. Compare this to what it would look like using flags. # Timeout function ts = time.time() flag = False while time.time() &lt; ts + 30: if check_condition(): flag = True break if not flag: raise TimeoutError() IMO using a flag in this situation makes the code harder to follow and doesn't feel very pythonic. 
Your answer was really insightful to me. I have another question related to this project if you wouldn't mind giving me your opinion. So I have this endpoint: &gt;users/SOMEUSER/nodes/NODEID/devices/locks/LOCKID/set/access_code/temp At this endpoint I can send a json of a start, end, and index for the code. The start indicates when the code should be programmed and the end indicates when the code should be removed from the lock. I was wondering what the best way would be schedule a task like this. In the future I plan on adding more device types, so the scheduling might be a little different for each of them. I store the data I receive in an sqlite db right now, and I think I might end up making my own scheduler, but I'd prefer to use something pre-made so I don't have to reinvent the wheel.
This was harder for me to read. When I opened the full version I regretted not reading it there instead (besides the admittedly annoying wavy underlines). YMMV
this is embarrassing )
cool story bro!
&gt; mob programming Tiny pitchforks or very large keyboards? :) 
There's a Discord channel for help developing bots.
[Serpent Framework](https://github.com/SerpentAI/Serpent) Still in heavy development. Ambitious. The project is a framework to assist developers with building Agents / AIs that can interact with any video game they own. Think OpenAI Universe with no VNC setup, limited set of environments or reinforcement learning penchant. Basically: If you can play it, you can turn it into a native game agent environment to experiment with. Everything that makes up the game agent loop (Frame capture, Buffering, Sending Input etc.) is provided for you so you can focus on developing your agent against your game of choice. From there, any approach on the spectrum going from fully-scripted "bot" to reinforcement learning AI is possible. All sorts of modules are also provided to help with common computer vision and machine learning tasks, OCR, visual debugging, live analytics etc. The project is a massive undertaking and is criminally lacking in documentation at this stage but I already got some agents working with a few games. I've had one major experiment in "The Binding of Isaac: Afterbirth" training and evolving 24/7 on my [Twitch channel](https://www.twitch.tv/serpent_ai) a few weeks ago. You can see a short video of what type of setup is possible with the framework [here](https://www.twitch.tv/videos/155623599). All of the development for the framework is usually done on stream too if you are curious. I've had more popular libraries by almost any imaginable metric but this is IMO my "best creation".
What's the fork for autocomplete-python? And is there any better plugin I should use in Atom instead?
With what you've provided, no. I suggest that you read [How To Ask Questions The Smart Way](http://www.catb.org/esr/faqs/smart-questions.html) and possibly [Short, Self Contained, Correct (Compilable), Example](http://sscce.org/) and then rephrase your question.
Honestly, of all the Python things I've created, the one I'm finding most useful is this script to find duplicate files in a directory tree: https://gist.github.com/duganchen/1e917c11fce44267b4c4
What's your opinion of Women's footwear?
This sounds like a fantastically useful tool and I'm going to use it with every one of my Python 3 projects once it's released. Thanks so much for working on this!
As long as you're familiar with the project, backporting the original project's fixes/enhancements usually isn't an issue. Especially in this case where it's just an editor plugin that's existed for a while already and is written in JavaScript. If it does turn into an issue, usually that's when people release patch sets to remove problematic code.
It is interesting though, that /r/python was consistently hostile towards the idea. Sometimes business-ops have smells.
I don't think their methodology would work. The idea seems smart, it's basically cleverbot for code. But it's pretty clear that code has a certain intrinsic value, and Kite never outlined what value they would build from it.
Also bear in mind that this sub isn't about user support.
Reads post: "cool!" Sees name: "Whoa, Al Sweigart, the guy who taught me Python!"
I know, right? I think that's why he decided he wanted to learn. That was actually one of the stronger contenders, and it was actually the source of the "programming Python like Matlab" comment. For example, he often imports only one item from numpy, has many files with a single function, and subsequently `from customFunction import *`, and he uses weird spacing (functions or if blocks on one line) and Matlab naming conventions. He's not utilizing python features to the fullest, either. Creating an external index and doing a while or for loop instead of `enumerate` etc.
Added this! ;)
Well, when you come to a fork in the road, there really is only two options. And some people just don't believe the fork exists and try to take both paths.
My guess is that the URL you're hitting is sometimes returning garbage, and you're erroring out on JSON decoding. I'd suggest wrapping your request-decode function in a retry loop. Maybe try a couple times with a delay between them. Also, try checking the status code you get back. Like: r = requests.get(url) if r.status_code == 200: return r.json() else: print("Error from server: {}".format(r.status_code))
Sounds very useful! Can't wait for it to be available.
it wasn't that they bundled ads. They replaced the default code search engine which was load from Jedi to Kite. Which could basically be pandora's box for privacy concerns.
I think opensource is experiencing what the generally online community experienced a decade ago. Once you achieve some kind of public/social saturation, you will find yourself awash in bad actors who what to capitalize on the basic social contract. Once the internet forums of a decade ago became socially acceptable as a form of bonding, the online phenomenon of bullying surfaced. This is basically the open source version of a bully. 
unforunately for everyone, these types of businesses will secretly fold, transfer the tech to another startup under another name, and likely continue on as if they never did this.
if you read the article, the more malicious activity was rewriting the default backend code hints from Jedi to Kite, turning a local hinting system to a cloud based one, essentially collecting privacy date.
&gt; ridiculed throughout the industry You may find your life goes better if you assume the truth is the opposite of what's said by those who ridicule. For example, the profound wisdom of voluntaryism hasn't stopped governments worldwide from relentlessly ridiculing it to this day. &gt; Perl You're posting in a Python fora. That context suggests to me that you're thinking there's something about Perl's "safety" which is fundamentally different than Python's "safety". Aiui, you've been duped by crass generalizations, just as many have before you over the last couple decades and will over coming decades. Aiui, like most serious dynamic languages, Perls have a 100% [memory safe](https://en.wikipedia.org/wiki/Memory_safety) lang design except for some explicitly unsafe escape hatches, eg some C level interop stuff. Similarly, Perl lang designs are also 100% [type safe](https://en.wikipedia.org/wiki/Type_safety) -- for a definition of type safety which involves having everything ultimately coerce to generic scalars that do reasonable, defined things when you do something that would be unsafe in a language like C or C++. For many other reasonable definitions of type safety, Perls are unsafe. **All of the above applies to Python as well**. Where I think there's a difference between Perl and Python is prevalent attitudes about, and actually underlying reality of, "safety" that includes the above plus security bugs in implementations. Aiui, folk think Python is "safer" than Perl whereas the underlying reality is they're more or less on par memory safety wise; have slightly different type safety stories that makes the Pythons maybe a hair safer than Perl 5 (though I must here emphasize that I've been repeatedly qualifying my sentences in this comment with "aiui" -- as I understand it) and less safe than P6; and an implementation story that suggests Perl core devs were for a couple decades (perhaps still are?) [significantly *more* security conscious](https://blog.booking.com/hardening-perls-hash-function.html) than [their counterparts working on other languages](https://arstechnica.com/business/2011/12/huge-portions-of-web-vulnerable-to-hashing-denial-of-service-attack/) including Python: &gt; the flaw affects a long list of technologies, including PHP, ASP.NET, Java, Python, Ruby, Apache Tomcat, Apache Geronimo, Jetty, and Glassfish, as well as Google's open source JavaScript engine V8.
It is. Every post I read on python about them was how much private information and code would essentially be given to a company with no merit or protections.
I've got a program you can use, just send me all your code.
If we're properly efficient (like ants) it shouldn't matter that some of the ant's get in death spirals.
I work at a national lab, and we have quite a bit of classified information. Along with it, we have formal processes for determining when something is classified, company proprietary, or completely unrestricted. I've always felt that it was a huge pain, but your comment made me realize how good I have it. Even though we have to follow a lot of rules, we aren't exactly for-profit, so convenience and technical reasons drive a lot of decisions about whether to release information, once it's been determined not to be classified or restricted in some other way by law. We have software projects hosted on github, for example, because it made sense to do it for collaboration with outside researchers. I think we had to get github to modify its TOS a bit for us to satisfy our government masters, but our lawyers were willing to jump through those hoops.
Catch the exception and log r.text. Most likely you're getting back either blank or unexpected HTML.
Wow! Thanks for your kind words. I should note this tool will only work on Python 3.6+. Cheers!
Honestly the best way forward at this point is to come up with a project that you are passionate about and build it. There is a bit of a cognitive leap from small homework style problems to real applications akin to the difference between reading how to ride a bicycle and riding a bicycle. And it should be something that you actually want to work on, because it will be hard and without wanting to work on it, you won't push through.
Seems awfully unnecessary for an arduino to be able to handle OOP, or am I missing something?
It's not added to pycharm, but rather the python interpreter that you are running from pycharm. Go to project settings from the file menu, then select "project interpreter" or something along those lines (writing this from mobile). There will be a dropdown menu that lets you pick a python version, and even install new packages from there. Once you have picked an interpreter with scikit learn, you can leave the settings window and choose the behavior of the green play button by clicking the the downward pointing arrow on the upper right corner of the screen. The options there choose the behavior of the green run button. Hope that helps. Good luck, internet stranger! 
Did Elon Musk really support him with 10 Euro??
I'm not sure I understand the full extend of your question, but for any schedule related task, I would use one of these three: crontab (OS level), Event Scheduler (MySQL), or maybe even "sched" (Python module). It depends on how it would fit the rest of the project e.g. what changes you want when triggered and how precise (hour, minute or millisecond?). These three should be precise to (at least) one second, which should be enough for any lock.
It's surprisingly difficult to hide who your founders/senior execs/investors are in this game. In some countries, there's a legal requirement for a company to disclose its board of directors, for example. But even if not, tech is often just a big small world, and as we've seen in the past 24 hours, word gets around.
Not bad for a beginner. Try replacing the print message with this: `response = input('Type exit to exit this program. ')`
I started off with this while beginning C# and C++, good way to learn how a given language works.
Meh, such is the nature of politics. I'll take fragmentation and division over tyranny of the author any day.
Without seeing your code it's impossible to tell. What are the bad points? However, a general principal to numpy/scipy interpolators is that they interpolate and don't extrapolate. If you have a max value of 1.00 and a value to interpolate of 1.0000001, you're gonna get nans. If your data is out of order, your also gonna screw things up.
Learn a framework like Django or Flask, then start building apps. Build a blog or something. Coding For Enterprenuers has a YouTube channel that walks you through building a blog with Django. Here's their YouTube channel https://www.youtube.com/user/CodingEntrepreneurs
"Sub of Python"?
the code they added to the atom-minimap was done in a commit with the comment 'added Kite promotion'
/r/learnpython
Well, it makes functions that return in the body of the loop look better, for one.
1. Indent your code by 4 spaces to get the correct formatting on reddit. 2. r/learnpython
Maybe I'm just a cranky old coot, but I don't think developer workflows or tools need to be "revolutionized," certainly not at the expense of privacy, confidentiality, and god knows what else you'd have to give up for Kite to work. Conceptually it sounds like an automated way to C&amp;P from Stack Overflow, which isn't a terribly good idea.
All you have to do is iterate through all the runs in the document, and I'm pretty sure there's a replaceAll method for regular expressions 
But there's over 140 forks, which one is the one that has the crap removed? Do you have a link to it?
Yeah i hate Kite 
Here's the original thread on the issue: https://www.reddit.com/r/programming/comments/6nugeh/minimap_plugin_for_atom_implements_ads_refuses_to/ I believe this is the replacement fork: https://atom.io/packages/minimap-plus https://github.com/mehcode/atom-minimap-plus
Great point
https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world
Thanks for that, that was quite a good read.
the bad points are those that appear as white spaces in the pictures i linked, as you can see from the raw data plots (the first image) there is data there so im not interpolating outside of the values i give it. my data is unstructured but i thought interpolating griddata does not require data to be structured? here is some of the code because all of the code is very long: m_t=15 #mesh sizing temp, default is 10 m_th=15 #mesh sizing thickness lim=30 #ylim for phase plots and temperature interpolation/meshing t=np.linspace(min(output_new[:,1]),lim,m_t) th=np.linspace(min(output_new[:,0]),2.2,m_th) xi, yi= np.meshgrid(th,t,sparse=False) #creates th x t grid zi=interpolate.griddata((output_new[:,0],output_new[:,1]),output_new[:,2],(xi,yi),method='linear',rescale=True output_new[:,0] and output_new[:,0] are the "x" and "y" of the z values that are being interpolated. let me know if you need any more information
Oh god.. I'm confuse :D .. But I'll read the post..
Try pycharm, it's not open source but it's excellent quality and getting better constantly
Yes, you can iterate through the document and use regular expressions to find and replace the string. import re re.sub(pattern, replacement, 'string') or if you have access to a linux terminal you can just use sed(stream editor) sed -i -e 's/word/replacement/g' file.txt Also if you're trying to parse HTML I wouldn't use regex for that, use the BeautifulSoup module
Short Answer: Don't. Use keys instead. Longer Answer: on *nix there is a tool called sshpass, which does what you want. Even this tool heavily discourages its own use. Also there doesn't seem to exist a equivalent tool for powershell. Keys are a superior authentication mechanism: https://wiki.archlinux.org/index.php/SSH_keys unless you are in the unfortunate situation of not having control over the server, in which case i must ask: What is your use case? Do you need to use powershell? If not, there is https://github.com/paramiko/paramiko Edit: added link to paramiko
That's what he gets for wearing white pants.
That's awesome.
Video tutorials are probably the way to go. http://www.youtube.com/sentdex It can be slightly slow, but usually it's alright and he's always explaining something. 
Alternatively check out HerbstluftWM, a personal favorite of mine as Bash was my first foray into any kind of coding/scripting and its config is literally just a Bash script. (and you could write it in Python if you wanted)
Thanks, I'll check it out :)
You should probably try r/learnpython, someone there will defo help you out. 
You can try package app as debian/ubuntu package. F.i. Odoo is also distributed this way: * https://github.com/odoo/odoo
What we need in order to help is something short and runnable that shows your error. You didn't include your data. &gt; my data is unstructured but i thought interpolating griddata does not require data to be structured? It does not. https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.interpolate.griddata.html However, it still requires that you're interpolating and that you have adequate dimensionality. Again, look at the failed points.
I couldn't find the article I wanted to post, but here's this: https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f It's only about javascript, but it inspired the one I wanted to post about backend technologies. if someone knows what I'm talking about, please post
It was more to predict if a player would score or not, and yeah it works fairly well, not 100% or anything like that. I’m trying to integrate machine learning into it now but will take some time. Basically proves the futility for trying to track hundreds of players across 31 teams without a computers help.
It sounds like you're going to have to have an API that edits the file on the server. IE: send all the changes that the browser does to the server, and make those same changes in the existing file. 
But Not Every word only some Of Them
I got quite a bit out of the Coursera[ OOP in Java sequence](https://www.coursera.org/specializations/java-object-oriented). The second class in the specialization was a pretty good treatment of Big O notation, algorithm selection and comparison, and data structures. It was my first experience with Java, and it definitely made me a much stronger programmer, as well as a much better Python programmer. https://www.coursera.org/specializations/java-object-oriented
Most extensions uses Blueprints And for doing that it hardcodes from flask import Blueprint That extensions may not work with `Quart` unless you can hack the `sys.modules` to alias `flask` namespace to `quark`
These fuckers again? SV really will fund anything.
&gt; Capitalize all words in titles of publications and documents, except a, an, the, at, by, for, in, of, on, to, up, and, as, but, or, and nor. Eh, OP just used the most commonly accepted title capitalization.
Why is it not running anymore? STILL people are asking this daily: https://twitter.com/naabrams/status/889601666781245440
All this makes me glad I don't use, and never have used, Atom.
Some people didn't like it and would report its tweets. That, and the repetitive nature of the tweets probably flagged some spam detectors. Also, it *did* have a not insignificant number of false positives. Like the tweet you linked, for example, isn't asking why homeless people have dogs, but rather asking about finding homes for stray dogs.
With some Bayesian learning you can problably make a bot with really few false positives. Someone should continue your legacy. ;-)
Sadly my "best" python creation is an awful, horrible mish-mash of spaghetti code called [MoonPy](https://github.com/Donkyhotay/MoonPy). It's playable, reached beta, however it has some serious bugs and limitations that stem from the fact I wrote it by beating a poor innocent RTS engine into an artillery top-down strategy game. I started rewriting the entire program from scratch under the name [Scorched Moon](https://github.com/Scorched-Moon) a few years ago, and I'm more proud of the quality of the code, however real life gets in the way so code commits have been few and far between (in some cases we're talking years) and at this point it's little more then a complicated chat program and not anywhere near a real game. 
I'm with ya. I can't imagine my editor ever being other than the fastest thing on my system. Still, I try and stay out of the editor wars and a bad actor could try this kind of nonsense anywhere. We gotta look out for one another, even if we don't all use the same tools :)
This was awesome thanks for the write up. 
Do you have any suggestions for linking a ve to an jupyter notebook kernal? Also amazing write up thanks!
build a rest api that can do basic CRUD from a database and you're good to go.
I made a Piotroski F-score script a few years back, can't seem to find it now though. The most difficult part is getting the data. I tried using [good morning](https://github.com/petercerno/good-morning) for the data, but then it's difficult to actually screen any stocks as you have to download the data individually. In the end I just ended up abusing my schools Data Stream and Bloomberg subscriptions. 
These could use a several word description in the title of what the software is. 
I'm trying to make a text parser. I just started learning Python this week, and it's my first computer project... ever... It's fun, but tough
MaaS - microscope as a service
I love Nuitka, I've used it for several tools, the developer is quite helpful and quick to respond on issues. It's a worthwhile tool. It's a Python compiler via C++ with pretty darn good compatibility. It does bundle in the normal CPython VM and libraries, along with your dependencies. Bits get compiled statically, bits rely on the VM. It's an interesting project.
You need to learn some web frameworks, preferably multiple. Unlike most, I'd actually recommend starting with bottle, then when you have a better understanding of Python learn flask. Lastly you can learn Django, if you see a job demand. Build public websites. It's a must that you can work with databases. Later it's also important that you learn how to deploy using apache or nginx.
well, as the doctest documentation says, you could just do &gt;&gt;&gt; foo("hey") == {"baz": "hey", "qux": "lol"} True
Presumably there is more to your code than that. It's kind of impossible to debug your code with one line of it and no test case. Did you look at the data going into the function and verify it's correct? Python is not matlab, so you can't expect it to behave exactly the same.
This is true of basically every language that has any requirement of back-compat, there are just differences in how much of the language it applies to. I code Perl on a daily basis, and wrote [a set of policies](https://metacpan.org/pod/Perl::Critic::Freenode) for the perlcritic tool that mostly just codifies "avoiding surprising functionality". It really doesn't take long to learn the biggest warts to avoid and easy ways to do so (use strict, use warnings).
You're not going to be able to reach a .py file through your browser. Try /index or /index.html
Thank you. I noticed this switch around 2011. Now it's SaaS-all-the-things. Nobody seems to ever want to do anything themselves. It actually worries me because that definitely comes with skill attrition (or not acquiring skills in the first place). I've done some consulting with current tech companies in Silicon Valley and the amount of stuff even "senior" or "lead" engineers don't know is staggering. Absolutely mind-blowing. People who have been writing web apps for 10+ years having no clue how DNS, SSL or certificates work, to the point they don't know what certs to buy, what limitations are on certs (e.g. subdomains, wildcards), how to install certs, the difference between a CName and an A-record, etc. because Heroku or whatever has been doing that for them the whole time. The same goes for performance management--this is the era of 5MB pages with 30-second time to ready. Database optimization also seems to be going out the window. Looking through logs? Gotta fire up SumoLogic / Papertrail because nobody knows how to do `cat log | grep thing | cut -d' ' -f1 | sort | uniq -c`. Crazy. The privacy / confidentiality / secrecy issues are obvious--now you have to trust that *every single SaaS service* will adhere to their policies, not change them egregiously, and not be hacked, in addition to your own. And what happens to your data if they go out of business? Does it get wiped? How do you know for sure? Is there any recourse if a breach is revealed after the company is gone? What about acquisitions? And even if the SaaS company doesn't go out of business, what happens when they have an outage? You literally can do *nothing* and you're entirely at their mercy to fix things. You can guard against it by using redundant SaaS providers, but now you have twice as many problems and increased complexity. I've had my share of production outages and the most business-impacting ones were the ones where we couldn't fix the problem ourselves. A SaaS provider needs to fix the problem for *all* their customers, not just you, so you don't get priority treatment the way you would if you were in control and could spend all your resources to resolve your problem right now. SaaS has made a lot of things better and I heartily use and recommend many such services. G Suite is considerably better in most cases than running your own Exchange server and filer. AWS has some incredible products. Sendgrid is pretty good. A lot of cloud products are great, no doubt about it. But building apps is the easy part--maintaining them, picking them up when they fall over, making them fast and resilient, that's the hard part, and when you're outsourcing *all* your tech to third parties, you're not doing yourself any favors. My value as an experienced engineer isn't in spending hours every week on fucking vendor calls and support tickets.
Except that it probably shouldn't be as this isn't really a conventional title in style, e.g it is describing a situation and not verbatim copied from the article. Something conventional would be "A San Francisco startup called Kite took over and made invasive changes to autocomplete-python and at least one other Atom plugin 
I'm working on a boilerplate for using VueJs/Vue-Loader with a flask REST API
But you can? Through CGI, no?
&gt;Most often, CGI scripts live in the server’s special cgi-bin directory. That's from the documentation. As far as I'm aware, browsers don't have the ability to serve server-side files. I'm no expert in Python though, this is just a generality that I've come to understand as true across all domains. 
Hm yeah I was having some issues in general I think with outputting various types of files on a headless server. I remember one time the code errored out because it couldn't detect a display. Now that I try it again I can't even get past the import statement, getting: "from bokeh.io import export_svgs ModuleNotFoundError: No module named 'bokeh'" When I most definitely have bokeh installed.
Well of course the browser doesn't, I'm talking about the server his website is running on, which uses Django (a python framework) to serve the HTTP requests. You can direct your browser to a Python file on a server, and as long as it's executable, you can run it through the browser (it's being run server-side though obviously).
I'm a coder, not a grammar expert. Just sounds like a reasonable explanation to me ¯\\\_(ツ)\_/¯
There's languages with far less surprising behaviour in the first place, and far better stdlibs. Even Java is better
Are you willing to share that list privately? I'd appreciate it.
It would be very helpful to post what diagnostic steps you've taken, or the body of the failing `requests.get()` Without that, we can't really tell what's going on. But generally speaking, blindly attempting to convert the result of `requests.get()` is probably a bad idea. You need to expect garbage data, and you need to handle it properly. APIs fail, or return nonsense, or might be compromised and return unsafe data to the JSON decoder.
was it 192.168.0.14 :O
Next billion dollar startup: bicycle delivery of SaaS packages.
Sometimes a library depends on some environment variable being defined. So it would be nice if we can export some env vars.
use Dask
Like find/replace?
vim master race saves the day yet again!
Perhaps, but that's not the only measure of a language's applicability to a given task or usefulness to a given programmer.
Ah yea I see. I use Python 3.6 so I should be fine in that case. The build folder is still pretty much the same size after I do that. It seems it includes everything when it creates that folder. Next time I'll try just sending the ones that I included though, that should work, or exclude them in the setup.py as they're saying on that Stackoverflow-link Thanks for the help.
What is Nuitka The TL;DR ... Nuitka is a Python compiler. It's fully compatible with Python 2.6, 2.7, 3.2, 3.3, 3.4, and 3.5. You feed it your Python app, it does a lot of clever things, and spits out an executable or extension module. Free license (Apache). Okay I'm hooked! Tell me more! Now Right now Nuitka is a good replacement for the Python interpreter and compiles every construct that CPython 2.6, 2.7, 3.2, 3.3, 3.4 and 3.5 offer. It translates the Python into a C program that then uses libpython to execute in the same way as CPython does, in a very compatible way. It is somewhat faster than CPython already, but currently it doesn't make all the optimizations possible, but a 258% factor on pystone is a good start (number is from version 0.3.11).
Learn Django. Do a couple of the tutorials, and read the documentation. Then pick an actual project that you want to do. Grab a copy of Two Scoops of Django. Make said project. 
Fuck cat greppers. 
You assume too much. I main Haskell, not Python. Python is great for prototyping, especially in ML and DS domain. Perl unfortunately was web glue which I don't see any use at all, at least for myself. 
My cats like it ;_;
Amazing! I was thinking of writing something like this to hook into an open-source console emulator, to do some AI/machine-learning/Neural-network stuff. I will definitely check out your tools!
Nice work! You can also add a space after the period so the next sentence has some separation. 
&gt; but they did not get away with it. They would have... if it weren't for you meddling kids!
What are the benefits of using this over rust and cffi(like sourcemap)?
From my perspective it is easier to model interaction with native types. 
I've been reading the documentation, and I was wondering whether there was a way to push the program and its dependencies from my computer to theirs without touching theirs? Would I be able to get away without even initializing a worker instance on their computer? Could I use Dask to integrate our smartphones in the cluster?
Newbie, I worked on a Twitter feed parser and made it possible to visualize the 10 most used words ever in a pie chart. I worked on D. Trump feed first to see the results, that was fun:http://i.imgur.com/3eCXORe.png and I made it possible to enter any username: https://github.com/YannickLeRoux/twitter_feed_parser It would need a lot of improvements but its one of my first scripts
When posting to reddit, put 4 spaces in front of lines of code to get nicer formatting. 
How good is it?
I actually just keep forgetting that you can compare container types like that in Python. My instincts keep telling me that it's wrong and sinful. :)
That's fine. Don't get bogged down worrying about getting everything just right. 
Any good text editor should be fine. Personally, I'm using Geany and occasionally Atom. As long as you have a good editor with syntax highlighting and auto-indenting, you should be fine at least for just starting. That being said, I saw this article the other day: https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/ Now I just need to learn VIM.
I'm newish to programming so I'm trying to learn more about classes by building a small text adventure game. Also, for work, I write software to take data from a radio interferometer and turn it into diagnostic graphs
By the time ~~you hear the sirens~~ ask y/n it's already too late. You are not in your while loop. Remove that "break" and you'll see you've created an infinite loop. Also, you only call random once, so every loop will have the same result. 
Should've mentioned: the global changes are being made in Sublime through Ctrl+H, not through python. I'm trying to first turn the whole book into a series of space separated words so it's easier to work with 
Sorry, but I don't think that would be fair. At first, the list was just a curiosity and I wasn't keeping track of exactly why I was adding each name, so while anyone on there will have done something that I considered a serious transgression, I couldn't honestly say that others would feel the same way. It seems both unethical and likely illegal to start naming any names here without also giving clear reasons for their inclusion.
When I first started to learn python I used pycharm to help me learn. Every since I've moved on to Vim, but pycharm has definitely helped me learn python quicker.
It's like reading how to ride a bicycle and then building a bicycle
Ok, fair enough. Thanks.
You can run the script in background perhaps, but what you want is a little cloud server... Amazon aws has a free tier, but for 5 bucks a month you can use digital ocean which imo has a better learning curve
As far as I know trends doesn't have an API, and it only exposes the data through csv download...so, not really
Could be way better in /u/learnpython and with correct code-spacing for Reddit. Edit: whoops. /r/learnpython.
Command-line torrent search tool: For windows and Linux OS https://github.com/kryptxy/torrench https://www.reddit.com/r/Python/comments/6p350i/commandline_torrent_search_tool_for_windows_and/
Dask is great, but you need a bit more than an IP address to turn someone else's computer into a worker!
I was the other way around. Being forced to do my own code and not rely on Pycharm telling me it wont work was good in helping me learn. Now, PyCharm all along. Nothing wrong with either approach though.
See, if it were *easy* to push arbitrary programs + their dependencies to a machine for which you know **only** an IP address, then literally every addressable machine on earth would have seized up a long time ago trying to either mine bitcoin or host porn for every other addressable machine. They're your friends, get them to give you ssh. If need be send them a script that does so and tell them how to run it. Maybe name it `you_really_should_not_run_this.py`.
I am going to recommend pycharm and the vim plugin. Python user for 3-4 years and used sublime/atom/eclipse before. Pycharm allows you many features, including but not limited to:- git scm gui with history log, pep8 styling guides, support for python virtual envs and project interpreters, code introspection and suggestions, but most importantly a plugin library with helpful plugins like the markdown preview plugin. Pycharm has come a long way since the last time i used it and now is my firm favourite. Vi/Vim is a must for any engineer. If your day job is purely software development then you can probably skip vim if you already know eg. emacs or an ide shortcut list.
You could build the package as a PAR via Buck. That's how Facebook does python deployment most of the time.
Any recommendations?
Lies, All Lies
Where does matlab come into this? Also, look at opencv. I remember doing something along these lines using opencv. It's more than just computer vision, it has amazing image capture, editing and transformation tools built in. Lastly, can't diagnose anything with what you've given. 
So apparently it's quite doable to use python to make a full fledged android and ios app using qt and python qt5. There is a specific converted from riverside that does all the heavy lifting... Something worth lookin at. 
Why don't you build a [wheel](https://packaging.python.org/tutorials/distributing-packages/#wheels) of your application? It's already known by the python ecosystem, and you don't need to reinvent the wheel to do packaging and distribution ;)
Try using FireFTP with Firefox. You can open a document on the server with an editor you have on your computer. And when you hit save, the changes will be made on the server too.
I feel ashamed as I'm unable to reply to these successfully as I barely understand anything.
/r/learnpython Also, why (and how) do you need to _code_ that? That's a logic puzzle, not a programming assignment.
&gt; torrench error $ python torrench.py 'madonna.mp3' No module named bs4 Please install and retry. running Ubuntu 
Lies, all Lies
Ah ah i met this guy in Bilbao. cool fella
Are the predictions accurate enough for you to bet on them? If so, you could try to license it to betters who are always looking for an edge!
You need to install required python packages. See 'Requirements and installation' section of documentation. https://github.com/kryptxy/torrench#requirements-and-installation
This is homework. EDIT: Oh what the hell, I'll bite without doing your work for you. WHEN YOU POST IN /R/LEARNPYTHON, show what you've done to lay this problem out. How would you go about writing the code for this problem? Is there some way you can think to relate these items to each other? But really. Do your own homework. Be it psychology or "IT software engineering" (which is interesting, as that doesn't exist here), you'll have to do the work and make sure you understand concepts. 
&gt; they completely cripple doctest as a useful system for testing. That's because you're misunderstanding the purpose of doctest. Doctest is not a testing framework it's &gt; * To check that a module’s docstrings are up-to-date by verifying that all interactive examples still work as documented. &gt; * To perform regression testing by verifying that interactive examples from a test file or a test object work as expected. &gt; * To write tutorial documentation for a package, liberally illustrated with input-output examples. Depending on whether the examples or the expository text are emphasized, this has the flavor of “literate testing” or “executable documentation”. That is the primary purpose of doctest is to *test the documentation* in order to avoid code-rot. &gt; This should be the default way to write and maintain tests in Python Hell no. Doctests are good for examples, but proper tests are repetitive as hell and/or testing boundary conditions, and are completely unsuitable for showing in documentation (which is the primary purpose of docstrings and thus doctests). Non-trivial doctests are incredibly annoying to debug and manage.
Thank you! Which package do you use for distributed computing?
Oh my bad, thanks for that man
Sweet, might actually have a look, thanks man
&gt; That is the primary purpose of doctest is to test the documentation in order to avoid code-rot. Quite right, yes; this is a very minor sort of test, though. If the docs suggest a certain output, and the function fails to provide that output, then it's a bug. And, more to the original point, doc examples shouldn't have to be formatted like this: &gt;&gt;&gt; foo('bar') == {'baz': 'bar'} True ..it would be more sensible, documentation wise, to show a function-call-and-output format like this: &gt;&gt;&gt; foo('bar') {'baz': 'bar'} &gt; proper tests are repetitive as hell and/or testing boundary conditions, and are completely unsuitable for showing in documentation Agreed, I communicated poorly. I meant that `doctest` should, ideally, be establishing a difficulty-floor for inline testing that is hard to justify excluding. That is, `doctest` should 'just work' to the point where not having doctests is something you need to excuse. But, whenever I dip my toes into `doctest` I just get mired in silly syntactical issues that have no semantic testing usefulness.
The problem is that there are two possibilities: you can either require that the "output" is syntactically valid python, eval' it and compare that to the result of the expression you just evaluated, which breaks string-logging or non-python repr for arbitrary objects (e.g. `&lt;Element …&gt;`), or you don't and you can only rely on string comparison (and ellipsis-out the variable bits you don't care about e.g. object ids), which is what doctest currently does. I guess an other possibility would be to add a new doctest annotation indicating that the result is a valid Python literal, and nobody's ever cared enough to try and do that. Alternatively you could print your dicts (as that's pretty much the only object for which this is a concern) with `pprint`, which sorts the keys before printing since 2.6 or so.
Video doesn't work?
Yes, but I would like to put it into code so it runs with questions. As if the computer was asking someone in a game.
The homework part is done as it isnt a programming problem. This is for me, so asking Reddit is apart of my homework. Don't like it, don't comment. EDIT: While it's on my mind, I didn't ask for anyone to do anything in my Psychology semester, I asked about a book. So take your negativity elsewhere!
Below is code (on Windows) to replace the text 'Supplier Name' with the contents of the supplier variable. od is ow.Documents.Open(file) where ow is win32.com.client.DispatchEx("Word.Application") od = owc.od pcnt = od.Paragraphs.Count for i in range(1, pcnt+1): ptext = od.Paragraphs.Item(i).Range.Text if 'Supplier Name' in ptext: prng = od.Paragraphs.Item(i).Range prng.Text = supplier + '\n' 
I'm just starting out on this windy, challenging and fun road of Python. Working through Learn Python the hard way, and one day hope to use it for automation tasks at the office and home automation. Look forward to reading everyone's projects
What do you mean? Do you want your code to ask the user for an answer and then check if it's correct? 
Nice! That's a great goldmine of videos. Bookmarked and upvoted :)
https://courses.edx.org/courses/course-v1:MITx+6.00.1x+2T2017/course/ FREE no less!
So I am thinking a loop but that is where I get stuck, or code a way for the computer to figure out the answer.
"Negativity" is handing over good knowledge? Huh. Well, good luck then.
What sort of loop? Can you explain how you want your program work from the user's perspective? Like, imagine you've written the program and are running it. What do you want to happen?
No negativity is "But really. Do your own homework. Be it psychology or "IT software engineering" (which is interesting, as that doesn't exist here)" assuming you understand what I am asking or why than berating me for deciding to ask.
I guess it is convoluted as I can't clearly explain what I mean. However, I am thinking you hit a button, the riddle appears and asks the question? Then if the answer != "Correct answer" repeat.
So you want a graphical interface for your program, not a text one?
Text is fine, I was just figuring out how to approach the explanation.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
We got a whole deck of repetitive slides (about 30) to create on ppt. Each slide has a title, 2 text boxes and a picture file. Good thing I found python-pptx package, so I'll be working on getting this deck up this week without going through each slide by hand. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Then you should probably want to build it up slowly. First, print the puzzle text, and prompt the user something like "What is Brown's job?". Do you know how to do that?
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Bah, you're not going to read all this. The gist is that you and I are both doomed. You for conflating knowledge and the reduction of suffering for negativity, and me for trying to minimize your suffering. If this is your mindset, you will suffer greatly, and that is okay. Perhaps you need some pain to learn; that's okay too and probably part of Beginner's Mind. For anyone else reading this, take a moment to think about a particularly interesting SO post or other post. Some of those will challenge your own assumptions, or will fill you in on business logic you didn't know about. And that information comes from the person asking the question introspecting and saying, "I've done X, Y, Z, and I think this is what I know, but I'm stuck." For example, quite some time ago there was a post about strings and Pythonic versus non-Pythonic concatenation. When confronted with the notion that Pythonic code isn't just for PEP-compliance and looking a certain way, rather than "eat it, old man!" the person asked for elaboration. That turned into a discussion about large lists and how Python handles copies, etc., complete with a source from a reference that I've found utility with. It was a really interesting 2-3 post exchange. My post comes in four parts. 1. This is a homework-style question. See the sidebar; this isn't the place to ask that. [Then the edit.] 2. Do your own homework. This aids you in understanding concepts (the last of what I've said). In a world where information is so easily-had, developing deep knowledge becomes increasingly invisible and amorphous to the novice. It's important to ask appropriate questions to the appropriate people (i.e. leveraging experts). 3. "IT software engineering" doesn't exist here. Here, it's either IT/MIS/CIS/IS, or CS/CSE/EE/CprE. Depending on which side of this epistemological divide you are on, your methods will vary and be rather different, especially in the first week to semester of your program. 4. There is also guidance that part of asking for help from experts, or participating in a community of experts in a more general sense, comes in the form of thinking through a problem, and demonstrating that you've thought through the problem. My effort--sentences 2-4 of the edit--was to gently guide and ease you into this understanding. But you know best, and that's okay. It's amazing to me that the approach is now to look at the master stonemason as a novice, and then scream, "eat it, old man! I know best!" when he offers you tips on pointing and asks if you've tried alternate grips on holding your trowel ("asks" because that's more polite than just giving up on you or telling you you're wrong and offering nothing else). TL;DR: if you're in engineering, and your approach is that information == negativity, you will suffer greatly with that mindset. And for some strange reason, I have given my time here to minimize the suffering that someone clearly floundering experiences.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
write-only if you are a poor writer of code. 
Summing this up - everyone should just stick to assembly.
An oldie but a goodie: [https://developers.google.com/edu/python/](https://developers.google.com/edu/python/) Note the video lecture series on YouTube.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
"Bah, you're not going to read all this. The gist is that you and I are both doomed. You for conflating knowledge and the reduction of suffering for negativity, and me for trying to minimize your suffering. If this is your mindset, you will suffer greatly, and that is okay. Perhaps you need some pain to learn; that's okay too and probably part of Beginner's Mind." - Hmmm, my mindset for learning is fairly apt, otherwise, I wouldn't be asking for help and seeking advice. Also on that topic, assuming people won't read a text because TL;DR is an insult to one's intelligence. Okay, so let us recap this situation, 1) I posted asking for help about a task I am wanting to under go. 2) You commented with the following "This is homework". So since it appears you are trying to psychoanalysis this/me. Pretty bold of you to assume that! 3) You then follow with an edit that would have been helpful if not for the undermining tone and berating laid from the information you assumed. As this "WHEN YOU POST IN /R/LEARNPYTHON, show what you've done to lay this problem out. How would you go about writing the code for this problem? Is there some way you can think to relate these items to each other?" - is useful 4) "I'll bite without doing your work for you." &amp; "But really. Do your own homework. Be it psychology or "IT software engineering" (which is interesting, as that doesn't exist here), you'll have to do the work and make sure you understand concepts." Some Wild assumptions there pal. Very audacious. 5) Ok now that we have the underlying issue out of the way, we may converse, however, your position of false self-entitlement for your knowledge on my position is very extreme considering you are where near the ball park. 6) As for me know "best" what malarkey! I am here asking for help, I stated that I am new to the language and that my knowledge of the programming concepts in below average. In fact, my reach for advice or knowledge or even the littles push in the right direction shows that I, in fact, do not know "best" 7) Now I do not know what university you went to but in the later years of my degree my university offer "Software Engineering", now note that I am in my first year and this does not apply to me yet. The subject I am taking is a basic programming class. Ok so unless you are going to get off this defensive, condescending, high horse you appear to be on, let's leave it at this! As I have nothing to learn or say to people whom, act out how you have! Cheers!
what kind of automation ? :)
Ok give me a few mins, I will try to do up a mock code! May not be efficient! I bought Al Steiwgarts "How to animate the boring stuff" It helps
Thanks! 
Assembly also has lots of unexpected behaviour. Haskell is a better example of a language with little unexpected behaviour.
Did you make your own prediction algorithm for this or something? I wanted to do something like this for football but not sure where to start.
I really liked this tutorial on Pomegranate, a pythonic probabilistic programming language https://youtu.be/KpoNWIiH2ic My favorite talk proper was Jeffrey Heer's keynote on interactive data analysis. https://youtu.be/hsfWtPH2kDg
PyQt is really good.
I took an older version of this course. It was tough, but probably the most important course I've ever taken. 
 #• Brown, Jones and Smith are a project manager, a consultant, and a programmer. #• The programmer, who is an only child, earns the least money. #• Smith, who married Brown's sister, earns more than the consultant. #• What is each person’s job?• Jones = Programmer, Smith = Project Manager, Brown = Consultant print('Welcome') print('Do you wish to open the door?') startQuest = input() if input == ('Yes'): print('Brown, Jones and Smith are a project manager, a consultant, and a programmer.') input() if input == (' '): print('he programmer, who is an only child, earns the least money.') input() if input == (' '): print('Smith, who married Browns sister, earns more than the consultant.') input() if input == (' '): print('What is each person’s job?') print('Brown is the?') Brownsjob = input(' ') if input != ('Consultant'): print('try again') Edit: I changed it a bit, but doesn't work 
For my indoor sprouting greenhouse, just single sensors and relays to control water, air flow, neopixel lighting. A start to something bigger 
PyQt is absolutely amazing. There's also PyGTK, but Qt has the better support and documentation in my opinion. Tkinter is absolutely fine however. The biggest problem is the lack of GUI, GUI creator like QtDesigner or Glade. 
Sourcelyzer - A simplified, less opinionated SonarQube-esque application. I like SonarQube's dashboards, but I hate their decision to not rely on the output of tools such as pylint. I hate their decision to pigeon hole you into unit and integration tests. And it is loaded with all sorts of zany features, many of which duplicate those of Jira (At work) and Github (at home). Sourcelyzer is an attempt to simplify all this. The idea is that you have a tool, like pylint, that spits out information about your code. That information can be sent to Sourcelyzer and turned into statistics and pretty graphs. No issue assignment, no time estimates, no assumptions. Sourcelyzer will have no say on how your tools are configured, it will not support message filtering, it will not (At least initially) support priority reassignment, nor will it support SonarQube's concept of "quality gates". Sourcelyzer is a data aggregator, not a build arbiter. It's in its infancy stages but currently I am working on the plugin system. The plugin system is inspired by Kodi. Easy to use, easy to add other repositories of plugins, easy to roll your own repo and plugins, simple metadata files, and so on. Also, to support Sourcelyzer, and SonarQube for that matter, for some bizarre, inexplicable reason, I had no choice but to make this: https://github.com/sourcelyzer/pylint-fileout Why pylint removed this feature is beyond my level of comprehension.
Correct. It won't work as-entered. At a glance, you will at least get one parse error. Look again at strings in Python. /r/learnpython is probably a super-good place for this.
No parse errors, it just doesn't run after the first variable. I entered Yes, nothing happened.
What does that have to do with Swift being cross platform?
Thanks! Now I know what to do the second part of my holiday!
Correct. This is the behavior that you have engineered into this code. But you're quite right: when you enter Yes, this code will fall-through. To guide you a bit, what happens when you enter anything all? Have you tried stepping through this one line at a time? There's something decidedly obvious here. And if you're not getting a parse error, you should look at PEP 8. Particularly https://www.python.org/dev/peps/pep-0008/#string-quotes If you're not getting a parse error, you're writing code that is going to be a nightmare to pull out of a repo and dig through (alternate keymapping? ASCII codes in use?) for your future colleagues, or your future self. And, for introspective fun, look at what happened here: you've taken some really good advice, used it and demonstrated some effort, and are getting some solid feedback. That seems useful.
Objects are always compared to real life when trying to describe them. It would make sense that you use objects when interacting with real life objects. OOP is real useful on Arduino's. Just as the MicroPython guys. Having 5 sets of lights and having one class to to call makes life so much easier than writing methods and passing all the appropriate pins each time. 
does it run outside of pycharm? if it's only broken in pycharm, try the "invalidate cache/restart" option in the file menu. that usually clears things up when it starts getting wonky
I tried running it through command prompt, does not work either. I recently switched from python 2 to 3, did importing of modulus syntax change with 3? It is just weird because nothing in the code was changed and I updated all my print() and input() functions to python 3.
[removed]
Building a particle swarm optimization library. Here's the link: https://github.com/ljvmiranda921/pyswarms We are also in need of contributors! Just check the Issues tab. First-timers are welcome!
What happens when you move your import statements from inside the function to the top of the script?
I find that vim with `:g` and `normal` gives much better log control than catgrep. Other editors probably have similar tricks, and I'd recommend digging around. Editors are crazy!
I edited my code a bit. I was speaking to a friend of mine and he said to test my solution out on matlab. So I gave it a shot. I don't understand how the 2 produced different results where I think they should be similar.
All sleep and pi variables no longer have an error when I did that, however local variables 'choice' and 'name' still give an "unresolved reference" error. I am newer to python but i understand the difference between local and global variables, but the function itself uses these variables inputted by user so I am confused why it is doing this.
I updated the post. 
Look at the python subprocess module: https://docs.python.org/3/library/subprocess.html You should be able to achieve what you want with that.
http://delorean.readthedocs.io/en/latest/
http://neckbeardrepublic.com/
Yeah multiple ones 
I’ve kinda concluded that every type of betting game has its own strategy. This program is more of a shot gun blast than a sniper rifle. It short list players based on multiple algorithms and theme build list based I the short list 
I'm making a neural network model in Tensorflow to generate new Pokemon: stats, name, and sprite. Hopefully I can learn enough JS to deploy it on GitHub and show y'all when it's done.
Kivy.
Import os os.system("command") 
PySide
Thanks. Will cloning it do that? I alresdy have python installed so i just downloaded your 3 the python files. Not really familiar with github.
Looks like it's a csv file, so all you'd need to do is this: import pandas as pd df = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/car/car.data')
KCK (Knowledge Construction Kit) - A framework like Django or Rails, but for data. Consumers will access data via a restful api that grabs data from a Cassandra cluster and KCK uses the framework of simple python classes and/or simple yaml files, various data sources, and an army of distributed workers to keep the data in Cassandra fresh and to manage updates to the data sources. The point is to 1) make access to the complex data products built from data source queries very scalable while reducing the load on the data sources themselves at minimal levels and 2) make it easy to keep data products fresh as the underlying data changes. Beyond all that, it will be suitable as a complete backend solution for React and Angular apps with JWT authentication baked-in. http://frameworklabs.us/project/kck/
+1 for Kivy. It's got a really clean API and it runs on *everything*. You can make a desktop app and then compile the same code to run on Android or iOS. It can be a little frustrating to get the build tools set up for that, but once you do, it's pretty nice to use.
We are a fast growing and super friendly Discord community dedicated to talking about technology. Come check us out if you are interested in an a good place to chat with people who specialize in programming, security, Linux, hardware, networking, and other popular subjects.
Respectfully that's a bad name. Everyone will assume from the name it's git related. 
When I tried using pyside I had a hard time finding decent documentation so I just used PyQt instead.
Code generator for Elm, based on Cog. https://github.com/boxed/elm-cog
OK thanks!
I've been hearing about wxWidgets, how does that compare with PyQt? 
Run the following in terminal - $ python3 -m pip install requests bs4 lxml tabulate termcolor (If you get permission error, use sudo) This will download all required packages. After installing the packages, follow point (3) of 'requirements and installation' section. Its simple copy-paste in terminal. This should get things working. (Point 3 includes cloning the repo. You don't need to explicitly clone it.)
The last item could be done by doctest itself and would fix it. 
Thanks! This will do the trick
I've been considering this, it seems like the most straightforward way without getting too fancy? Would the packaging steps would go something like: * python setup.py bdist_wheel * pip wheel -r prod_requirements.txt * tar and shoot out into the ether? 
The pyqt/pyside/qt documentations are more or less all interchangeable
Someone needs to post this in every GUI question thread: Flask (or pyramid or any other web framework) and a web browser.
[wat](https://vignette3.wikia.nocookie.net/unturned-bunker/images/9/90/Wat_png_by_katysz_by_katysz-d6j542d.png/revision/latest?cb=20150721153713)
Thanks.
I like wxPython if you have to worry about license issues, PyQt otherwise. Turtle graphics are fun though.
Of course, my bad. Thanks for correcting me.
You don't really "link" the two together. When you run jupyter, it basically spawns a web server that acts as an intermediary between your web browser and some "language kernel" i.e. the Python interpreter. That Python interpreter will run in the context of a shell. Thus, you should create a virtual environment with jupyter and all the other packages you need installed, activate the virtual environment, and finally run jupyter. One important thing to understand about Linux is that the shell isn't just an interface to an operating system, but also provides a context for processes which spawn from the shell. I hope that helps. 
I'm pretty sure `os.system()` method is deprecated in favor of the `subprocess` module. 
Dude, he needs help with a programm which adds the views when you open it. Your comment was not very helpful, so +1. 
I did it to use dancing links to make a sudoku solver but probably there was a better way
PyQt and its dependencies were hard to install on Windows. edit: It was a year ago, something got screwed up and had to install through the wheel which had its own prereqs. I was probably just unlucky.
Understood. Thank you for sharing about this, Cornerboard, I find what you've done to be very interesting!
erm... I was promised selenium but got virtualenv and pip. Themaverfehlung
In my opinion; I design libraries with the user interface in mind. What will the end user see? The point of a library is to abstract concepts away from them and simplfy their life. In this particular case; it might be prudent to check the size of the file before trying to un-tar it; and raise an exception for that particular case. The ultimate goal being; raise useful exceptions back to the end user so they can fix their mistake from their end.
To find - pip freeze, To uninstall - pip uninstall &lt;package name&gt;, To install - pip install &lt;package name&gt;
I'm confused on the last bit regarding Linux providing context. Googling around didn't really help me could you ELI5 otherwise thanks so much man 
See [discussion](https://gitlab.com/pgjones/quart/issues/2)
/r/savedyouaclick 
Noted. I'll try to improve the quality of my content. Thanks for the feedback.
+1 to this. The exceptions a library raises should be informative on the same level as what it tries to do, and does no require the user to dig the library files to understand what's wrong. Just to add, you don't always need to define your own exceptions. In this un-tar situation it is a good idea to define a exception class, but sometimes built-in exceptions are already informative enough. For example, you can simply raise a `ValueError` or `TypeError` if the user passes an invalid argument.
How so?
Thank you! Installed already—I deleted Kite’s scummy package as soon as I read the article. 
Is this a new language? Edit: nm it's a compiler;-;
Thanks it what I started building when I was learning python! It started as a web scraper that scrapes game sheets from the NHL and building a custom data base with custom stats. Now It will update daily and print out as many tickets as a want. 
Yes typing 'pip install pyqt5' was very difficult 
Python has no type casting. What you can do however is create new values, initialized from existing values for instance ``float(44)`` will create a new float object initialized with the value 44 (which was an int) So it's as easy as: int(your_numpy_value) float(your_numpy_value) be aware of rounding issues though?
I wish PyGObject worked better on Windows. It is a hassle to set up
Not sure what you mean by this as I just started learning python a week ago, and found out about using os.system to execute commands last night 
There isn't really a good way of doing it as far as I can tell. In Vext we do install .pth file, but use some hacks. There may be a different way of doing what you need without installing a .pth file manually, what are you trying to do ?
Code Academy has a nice python course for free
I wrote an Alexa Skill so you could let guests ask an Amazon Echo questions at my hotel, and they could ask for help and the staff would get an email or text of which room to go to. https://www.youtube.com/watch?v=a_azbDZvS30
I would definitely recommend using a text editor over an IDE in the beginning. It will force you to work out what's wrong with your code rather than have the IDE point it out straight away. Once you are mildly proficient in the language, you can move to an IDE if you so feel like it.
In my industry (VFX) we primarily use commercial or proprietary packages that are designed specifically to distribute frame render jobs to available worker nodes, all of which need to read from the same NFS store... this is a highly specialized area of distributed computing, and focuses much more in checkpointed interruptability and task scheduling than any of the open source packages I've seen out there. If the FOSS stuff, I've used Celery the most. It's pretty simple, though the OP is correct in saying that you have to configure the machines. I would generally suggest using Ansible, Puppet, or Salt Stack to do that.
I'm currently working on setting up a blog engine for my own personal website because why not? Still deciding whether or not to use Flask or Django for it.
Pickle is convenient, but as you mention, problematic from a security standpoint (and cross-version and cross-computer are iffy as well). The alternative is to write your own serialization. This generally means converting data into json, xml, protobuf, etc., then converting it back upon load.
Can confirm. Wrote a small gui app a while back and I could easily switch from either just by updating the import statements. 
That sounds fun. Especially the sprite generation. How does that work? 
There was a time before binary wheels, you know.
Amen. Also, Electron and the above if you *really* want to give your user's that desktop app experience.
There's still some of us who subscribed to that old-fashioned belief that there's no reason to require the overhead of $BROWSER just to have a GUI over our tools :) Let alone the fact that you're not likely to get a web page to blend in with the system look and feel consistently...
I'm confused. How are these release candidates? Python 3.6 is out right now.
Remaking my Twitch Plays bot because I have a problem with always refactoring code lol. It's not the same as the "traditional" kind of twitch plays. It has a complex and intuitive button input parsing system that allows for variable durations, percentages (for analog sticks), simultaneous inputs, and more. That's just the parser at least. It's kind of a giant hodge podge of features surrounding the core input parser. It's got a user database, a system for creating and using input macros, etc... I've been doing a complete refactor so making new commands and macros via chat is more modular and streamlined, easier to expand (Make *classes for everything*) as well as to start using regular expressions for the ASCII parsing. 
Nice. Have all of the tainted packages been forked yet?
Code academy as in Codecademy? If so, read my post please XD
After reading this post, I found this series on YT. Seems to be pretty well-explained. I'll have to check it out, it could work for some projects I've been looking at! https://www.youtube.com/watch?v=JBME1ZyHiP8
It's basically what it says on the tin: it's giving machines instructions on how to "learn" a task rather than programming it to specifically perform that task verbatim. For example, I could program something to examine a bunch of texts by the same author, and then see if I can get the machine to write back for me something that looks like it could've been written by the same author. If I recall right, Python is cited as a good language for machine learning since several of the requisite libraries are already just C/C++ based functions given a pythonic wrapper, so you're not sacrificing form for function.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
TypeNone means the data is not present, you can add: if not NoneType and ... Into your if line to prevent it, or use a try/catch block and raise an error but both the db and Python are saying the data is empty/not present 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I know about only this and minimap. Minimap was forked yesterday. 
Reconsider TKinter. It works without any dependencies, straight out of the box!
If you just need the game state *data*, and not actual *objects serialization* -- ie instantiating your *objects* is cheap -- then **json** or **sqlite3** are decent builtin ways of doing this. If you're wanting actual *object serialization* then yes, you can roll your own, or you can **hmac** sign **pickle** and trust only content you generated.
Pain on Linux too...
With Electron you can.
https://github.com/josiahcarlson/rom/ SQLAlchemy-like ORM-like for Redis. Not perfect, slowly getting better. Have some changes coming this summer/fall.
Sounds cool, do you have it running on a channel? Or are you planning to?
This has helped me quite a bit, thank you.
Running right now 24/7! www.twitch.tv/twitchplays_everything Currently it's Majoras Mask. Sometimes we play harder games and sometimes we do RPGs which work better for our environment. There's a list of competed games in the channel info. Lots of savestates and pause buffering involved. We're a pretty small community (it doesn't work so well with too many people). It's about making games as easy as possible to beat via twitch chat. To me anyways. Kind of frustrating from my standpoint lol. Hard to gain a viewer base. 
Electron makes the overhead even worse. My laptop is using half a gig on memory to run glorified irc programs
Alright so basically db_msg has nothing in it, so somehow it is not filtering in. The db_msg variable get declared in db_msg = from_can(can_msg) And when printing "from_can" and from_can(can_msg) i get respectively &lt;function from_can at 0x0125E170&gt; None Any interpretation of the from_can output? now the output of the else: statement is the CAN_msg else: self.handle_unknown_message(can_msg) is the correct data with he correct tags, its just not implementing them to the correct windows on the GUI, if that makes sense. Like 0x400 is supposed to be a value for "touchdowns" while 0x419 is supposed to be a value for a slider
Not saying slack/discord are memory light at all, but they do a ton of stuff for you. Just because you know it runs on IRC doesn't mean it's not worth the cost of entry. 
I can't believe that Electron is any worse than Google Chrome would be with a single tab open.
He meant that the os.system() shouldnt be used anymore, as its deprecated, which means its not going to be maintained anymore and probably will be removed in the future. Instead use the module subprocess in its place.
The Minimap fork is here : [Minimap plus](https://github.com/mehcode/atom-minimap-plus)
I watched half the talk on Pomegranate yesterday, love the Gossip Girl thrown into there haha
This is clearly an advert, and you can make it more explicit about the intention of the advertorial. If this was a legit tutorial, you'd have mentioned some alternate monitoring services.
Had to love it when trying to 'pip install' something on windows ended up with you installing MSVC, spending two hours looking at compile errors and finally moving the execution to remote linux system.
I'm willing to bet that 99.99% of use cases where a GUI is wanted, a browser is already present on the system.
I did a big project in PySide. Then they made an update that broke the program for anyone with a vaguely recent version of Python and didn't fix it for 6 months. It made me realize why we still have tkinter around. If your fancy UI shits the bed, you can always rewrite it for tkinter and it will work on everyone's version of Python.
😁😁 Idk why I find this funny when it should be depressing at the thought of it. 
Sounds about right. They use quite a bit of memory each but the problem is that none share memory
They actually have their own protocols, but Discord's voice chat aside they don't do much IRC can't. Only real exceptions are the custom icons I think.
Thank you for this link!! Much appreciated :)
Awesome, thanks.
Oh god, don't remind me
[iPOPO](https://ipopo.readthedocs.io/) It's a kind of OSGi (Service Oriented Architecture) and a component model in Python .
Last IRC client I used was mIRC like 10 years ago, so maybe one can do all of this but: context searching like `from:johnsmith89 pizza in:#general`, uploading files and images to their cloud instead of embedding a link to some other host, clipboard pasting images, viewing all of a persons activity, shortcuts for moving up and down channels, shortcuts for switching to a PM to someone, PMing multiple people at once, private groups. I guess IRC does some of that too, so maybe it's moreso that UI that makes it so nice to use, which kinda does make it a glorified IRC but man is it ever easy to use.
I think your gut instinct is spot on. A user of your lib should be able to look at your documentation and know exactly what exceptions to handle. That is next to impossible if you allow unrelated exceptions to 'bubble up'. Yes, it is hard work, but the users of your library will be grateful for it. I did a lot of this kind of thing with [PyFilesystem](https://github.com/pyfilesystem/pyfilesystem2), which *translates* exceptions from a variety of APIs in to a [common exception hierarchy](https://github.com/PyFilesystem/pyfilesystem2/blob/master/fs/errors.py). BTW, if you are working with tar files, you may be interested in [TarFS](http://docs.pyfilesystem.org/en/latest/reference/tarfs.html).
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [PyFilesystem/pyfilesystem2/.../**errors.py** (master → 44260e7)](https://github.com/PyFilesystem/pyfilesystem2/blob/44260e742b42b0e124e9f87dd115a70c4c857fc7/fs/errors.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dkpqcuv.)^.
Doesn't he also do the self-driving GTA5 car stream?
Aaah.. should've been *Minimap sans*
ahh sorry about the confusion, the whole list of hosted monitoring tools is on the linked [monitoring](https://www.fullstackpython.com/monitoring.html) page. I made it more explicit in the intro with another sentence that there are many tools you can add, this is an example of how you'd add one of them to your Flask app
Be careful with the licensing, though. As I understand it, any project which uses PyQt and is distributed has to be licensed either under the GPL, or under a PyQt license ($500 USD for a single-developer license, plus other fees depending on where you live). And that's just for the PyQt part, not the Qt part. &gt; PyQt does not include Qt itself. You must also obtain an appropriately licensed copy (either the commercial version from The Qt Company or the LGPL version from the Qt Project). This arrangement is in contrast to a lot of Python and its most popular packages, released under *permissive* free software licenses (the Python license, Apache license, BSD licenses, etc). Having your whole project locked into the GPL because of one GPL component, unless you pay a lot of money, isn't necessarily good or bad so I don't want this to be interpreted as anti-copyleft or anything, but it's just an FYI. See also [this post](https://www.reddit.com/r/Python/comments/26mo7k/gpl_a_nono_for_python_web_frameworks/) for more context.
Another obvious add: py.test + tox.
What do you guys think of appjar? 
yes he does.
May the fork be with you 
A formal definition: given a task t (eg recognise images with cats), some experience e (think data, images labelled by humans) and some measure of perfomance p (images correctly classified), you are doing machine learning if p increases with e. The machine should learn from e at to be better at t.
With machine learning you give a computer data and it uses that data to make future predictions or decisions, basically. Like giving a bunch of data on house prices to a computer and then giving it an unseen house and asking it to guess the price. Python is used a lot because it's flexible. With machine learning you often want to try things out in an interpreter with a syntax which is very flexible. Python does both things.
jMeter
Problem is in your `from_can` function I think. The error might be that it doesn't have a return statement or it's not being reached, in which case functions return None by default. **Edit** I think I misread your question. &gt; I'm trying to locate where these data points db_msg and can_msg are being filtered into types. calling the `type` function in python returns the data type of the argument. `type('hello')` returns `str` and `type(3)` returns `int` and so on. so when you call `type(db_msg)` it converts that `None` value (which I think is what db_msg is in your example) into `NoneType`. The actual `type` call occurs once in your conditional, and once in your body when you look up `db_msg` in the handlers dictionary.
wxPython is great! I really like it and have been using it for years. I will note that wxPython doesn't allow for theming and PyQt has some kind of support for mobile, which wxPython currently does not. 
I really like wxPython. It looks native on the 3 major platforms and has been quite solid in all the projects I've done with it over the years. For mobile, Kivy is a popular choice with toga being a runner-up.
Tweepy for the lolz. Scrapy.
wxPython is a great package and has a very welcoming community
SQLAlchemy is pretty sweet
Statistics. 
Do you know of a good guide for jmeter? I had a site I wanted to test by posting lots of different data, but failed to get it going. I'd love some strong docs.
Can someone explain this?? I've never heard of it, nor this "forking" buisness. Edit: predictive text error. 
https://pygobject.readthedocs.io/en/latest/getting_started.html
I feel they lost the opportunity to call it "typy"
Open `.py` with PyCharm is not a good idea. PyCharm works for python projects (or other languages if you wish), which means essentially it needs to open a directory as the project root directory. By double clicking a `.py` file (never tried this, but I think) what you are doing is passing the `.py` file as the project root directory for PyCharm, which of course will cause all sorts of problems, like: 1. "is not a directory"; 2. unable to save project settings (in your case, need to set python interpreter every time) What you should do instead is 1. Don't open PyCharm when opening `.py` files. Use a text editor instead. 2. If you want to edit &amp; run the script in PyCharm, launch PyCharm and open the folder containing it (i.e. Program_Folder) as a project. Btw, you can set default interpreter for all projects in `File &gt; Default Settings &gt; Project Interpreter`
As an aside, WXPython uses *native* widgets on each platform. This means that your app will be accessible to [screen reader](http://enwp.org/screen_reader) users like myself (at least on Windows). Right now, the stable release requires Python 2, but there is a fairly stable beta release for py3 (many projects have converted to it already).
Well bad news for Kite that you found the one incredibly obvious weakness in their stupid business plan! Good work, this should be publicized as much as possible.
Well this week was my first ever time using python, so I started with a simple twitter bot. I made a website where you can enter a hash tag and the bot will create a tweet based on that hash tag. It uses the markovify library, I chose that because markovify seemed interesting and a twitter bot sounded simple enough for me to understand and accomplish, yet difficult enough that I learn some python. I intend to keep trying to make bigger and more difficult things, half my time though is spent trying to come up with an idea 
/r/learnpython is the correct subreddit for this - you'll get much better help there.
Yeah, electron is *bad*. It's great for certain things (I'm thinking games, maybe even Atom/VS Code), but for things like Slack or a simple GUI over some library? Yeah, let me just spin up an embedded Chrome instance (which can't share resources with the Chrome I already have open, so HELLO extraneous RAM usage), sounds great! &gt;_&gt;
There are so many neat Python 3 features that I would really like to use, but unfortunately being in a data science / research environment I need to ensure that my code runs on Python 2.7 at a minimum. I wish projects like py-backwards get more attention! I'm super excited about it but have already hit a corner case that it does not solve. Hopefully that'll be fixed soon and I can continue using these packages. I think Python in general is lacking strong metaprogramming capabilities, ast parsing and unparsing. Given these features, tools like mypy could do so much more. I love using Python but this is an area that frustrates me at the current moment, and makes me jealous of languages like Julia. Here's hoping there's more thought that change in that direction.
attrs, structlog, marshmallow, pip-tools
If you don't mind a bit of file-size bloat check of CEFPython. It in a chromium framework integrated closely with python. It doesn't require the user's browser, so you know the javascript/css will work the same on all platforms. It is super easy to bind javascript and python functions and is pretty quick as well. If you are familiar with html/css/js you should give it a try.
&gt; ast parsing https://docs.python.org/2/library/ast.html ?
Thank you, I'm reading about this right now.
The Apache docs are good. Blazemeter has some solid YouTube tutorials 
Minimap Origin
The [pypi name](https://pypi.python.org/pypi/typy) was already used at the time.
May your packages be well structured and your code forever idiomatic.
Hey, could you answer a question for me? I keep seeing Qt on different programs... Like Jupyter QtConsole. Bitcoin-Qt.... So Qt in all of these programs means it uses the Qt framework? And they do this so the programs can run across multiple platforms/hardware? Or what is the advantage exactly? Are they all paying a licensing fee?
Jupyter notebooks are mind blowing to those who have never seen them before. I remember giving a presentation to my datamining class using a jupyter instance and everybody had this astonished expression as though they just discovered fire.
The first link in the OP explains the situation with the Atom plugin. Forking is a general term for cloning a codebase to make modifications to it, but in this context means cloning the codebase to start a separate project based on some version of the original code.
doesn't visual studio offer auto complete?
There is a lot. Depending on your usage. But since you just discovered selenium. I would suggest something similar that you can combine together with your project. Beautifulsoup4 and requests.
They do it so that they can easily develop a single UI that works across platforms. PyQT and QT offer free licenses for projects that are totally open source but you may have to pay for a license if you intend to sell your closed-source product. Bitcoin-qt and Jupyter are both totally open source so they don't run into that issue. The licensing is also somewhat complicated in that you don't always have to buy a license. It depends on how you use qt and whether you made any modifications to the source of the project itself vs just using a binary release.
I was skeptical of Kivy at first. Then I compiled my program for Windows, Linux and android. Huge fan
Yeah, putting "Qt" in an application's name is usually to let others know that the GUI part of the app uses the Qt GUI toolkit. Were those apps you mentioned developed with PyQt? If so they'd have to either license their projects under the GPL or pay up for a PyQt license. They might have just used Qt in some non-PyQt manner, in which case they probably used it under the LGPL license. LGPL is more permissive than the GPL because you can use a component licensed under it as part of a larger project without being forced to license the larger project under the GPL as well. Like you said, it's cross platform plus it's a very nice, slick toolkit. Many of my favorite apps use Qt and in my opinion the other major toolkit in the open-source world, GTK, isn't as nice in terms of look and feel.
Just forget about atom. These packages are just a distraction of what the whole IDE is about. They started by collecting your data by default. 
&gt; Then they made an update that broke the program for anyone with a vaguely recent version of Python and didn't fix it for 6 months. So don't use the latest version or use an older Python. I run an open source project. I cringe every time there is a new version numpy, scipy, or Python because they break my code. Then you go tell travis that you have a dependency on numpy 1.12 and they go ahead and install 1.13 anyways, so now despite listing the requirements, your tests are broken. You could build it from source, but half the time that fails and when it doesn't, your build times out. It's not just my project either. PyInstaller still doesn't support Python 3.6, so until there is, there is very little reason for me to upgrade.
They must have really underestimated how much people would care about this. I'm glad that the community had such a backlash though. We all rely on so many open source tools that it would be a real detriment to the profession if they became platforms for pushing other products.
Some people prefer Atom though
It has to be able to correct itself/improve its performance itself (for example by comparing its output with an estate agents valuation, and then adjusting its workings itself) otherwise it isn't learning.
This is great. Is there any changes on how to use line_profiler with Cython (.pyx and/or .pxi scipts? I cannot seem to get it working.
[Quite a lot of developers don't use windows desktop.](https://insights.stackoverflow.com/survey/2017#technology-platforms) Pycharm has the best quality Python autocomplete I've seen so far. It's considerably more heavy-weight than Atom however. Python autocomplete is basically guess-work since the language resists static analysis ;-)
/r/learnpython
I'm not from the US, why would it be illegal?
I thought you meant we should fork the repo, but what you're saying works too...
This is opt in only. FAKE NEWS
You defined a method called `__int__` whereas it should be called `__init__`. So, the true `__init__` method (created by default) takes not parameter. If you **do** change its name, then creating a `showInfo` instance will require you to include 3 parameters, not just the one you included. Do yourself a favour, and use a different source to learn about OOP in Python.
Treehouse has been great so far. I'm over halfway through the Python track and have learned a tremendous amount.
thank you &lt;3 i use VIM and type double-underscore consequently take it ( __int__)
Mypy can be run to check Python 2 code! Dropbox, who backs Mypy, is still on Python 2. In fact, I have heard from several people (at PyCon) that the additional information in types in Python code can be really helpful for porting to Python 3. Also, I feel your pain for ast transforms etc. Im thinking of hacking on typed\_ast and making a typed\_fst (full syntax tree) which preserves comments, which would make writing ast transforms for code _much_ nicer (IMO). But Im busy with a different project so I don't have time to work on that right now :/
This is way cooler than I thought it would be, glad I gave it a look finally. I now plan on contributing to this resource :)
The first step is correct, the second and the third are not. You should already have requirements specified in setup.py, so their specification is bundled within the wheel. When you install your wheel using pip, it will inspect bundled requirements specification and install requirements accordingly. If you want (for some strange reason) to bundle requirements _themselves_ along with your app, I'd suggest to take a look at [pex](https://github.com/pantsbuild/pex)
Do your own homework. 
This answer makes complete sense. I was thinking it was a PATH issue, but yeah, this is probably it.
Might have to do that eventually. The Atom team decided to stay mum on this issue, which is basically giving permission to let this happen to any other plugin. 
Read the sidebar. And reddit's formatting help.
Print("Withdrawal from class. Change major to Medieval Canadian Literature")
What do you have so far? I assume if you've paid attention in class you have the tools and knowledge to do this yourself. Maybe we could point you in the right direction instead of doing it for you. Also: **If you are about to ask a question, please consider r/learnpython or the learn python discord. Homework-style questions will be removed, and you'll be encouraged to post there instead.** From the sidebar
&gt; Pycharm alot of people use that at my work, i like visual studio
So was mypy, hence they were using mypy-lang to start with. [They got mypy later on(thanks to PyPI people)](http://mypy-lang.blogspot.in/2017/01/mypy-0470-released.html).
I prefer [plotly dash](https://plot.ly/products/dash/) over bokeh.
I've rarely had this problem thanks to [pythonlibs](http://www.lfd.uci.edu/~gohlke/pythonlibs/).
I'm not really interested in using Visual Studio if I don't have to.
As "Wolfie" would have said in the BBC comedy series Citizen Smith, "Power to the people" :-)
Bundling the dependencies along with the app is actually what I'm getting after. I don't want (n) servers downloading from pypi &amp; github.
Simply remove the `global` keyword. A while loop doesn't create a new scope. If you had put the while inside a function block, then the global would be appropriate. 
[HTTPie](https://httpie.org/) and [Requests](http://docs.python-requests.org/en/master/)
Ah, thanks man!
**sandman**. Automagically create a RESTful API service from a legacy database with a single command. [sandman2 on github](https://github.com/jeffknupp/sandman2)
I added an update from July 2017 and included it in the original post content above.
I love them for building a script piecemeal using markdown to make "extended comments" about what I am trying to do. Lets me build up the snippets I would need for the main logic before stitching it all together into an end to end script in an IDE.
Boooooo! wrk
More powerful and generic than selenium is http://www.sikuli.org/
Never heard of this. Can you elaborate on what makes it more powerful?
&gt; I've never heard of this forking business. Lolwut? You know this sub isn't about snakes right? 
Thanks!
Can I run visual studio on linux?
reading every word written about game servers and how I should write my own. also wrote a program to scrape listings on shop.lego.com daily to look for price changes and such, keep that info in a mysql db, and email any updates to my lego investor friends. 
yep
I don't see an option to run anything but VSC
you can run windows on a vm such as virtaulbox, then install the community edition of visual studio (which is free)
Yeah, that doesn't count. I don't develop on windows because it's inconvenient. A VM is just another level of inconvenience tacked on.
That's not really running VS on Linux. 
All Python standard libraries should be written in optional pure Cython mode instead of raw C-API. This way the standard library can be shared between various Python runtimes.
Of course it's my talk :)
Heroku, Amazon EC2 instance where you do all your own host management, Amazon Elastic Beanstalk, and PythonAnywhere
What about splinter? Chrome headless would be good too.
Its a shame because Kite looked like it was gonna be an interesting tool. But I don't want to support these practices
Works for me. 
which one
That's true, however ( and this is not entirely relevant to your discussion ) using type annotation syntax in Python3 allows you to do much more ( like using the `func.__annonations__` to type check for example ), and I'd like to support that officially if I could, as long as the code somehow worked on Python2. So, a project like `py-backwards` is extremely appealing to me, however I'm currently wary of committing to it, since it seems like so few have adopted it in the Python community.
I meant better ast parsing and unparsing. To a large extent, ast parsing in Python is good, if not well documented. To my knowledge there's no official ast unparsing, which is kind of sad. Julia's approach here is beautiful imho.
I meant better ast parsing and unparsing. To a large extent, ast parsing in Python is good, if not well documented. To my knowledge there's no official ast unparsing, which is kind of sad. Julia's approach here is beautiful imho.
One thing that is shit right now is Python's ability to manipulate PDFs. Writing new ones is fine, thanks to reportlab, but you want to edit an existing one or create one that is outside of reportlab's report-focused feature set? The best contender is PyPDF2, which has an absolutely depressing list of open bugs and pull requests, and a maintainer who casually checks in once a year to accept a patch for trailing white space. pdfrw is a fork/rewrite of PyPDF2 but its maintainer doesn't seem to understand Unicode and has a penchant for dubious optimizations/obfuscations. PDF is a tough file format. Large spec, complex, multidisciplinary, weird mix of text, binary data and mini languages, with a data model that doesn't map neatly to Python. Most of the main languages have better options for PDF than Python. 
The attr module. https://pypi.python.org/pypi/attrs/16.0.0 One of my favorite modules I've seen. Twisted for networking. Flask for creating Web Apps. SQLAlchemy and it's ORM for db operations. 
Both. What inputs are you testing? 
wait, how did you get the one to work? the win rate one?
I created a Python Bot that wishes all my friends on Facebook who have birthdays today. It saves me from the mundane task of wishing everyone everyday😂. http://github.com/adityathakker/Facebook-Birthday-Wisher
Hit run, select the right window, type win_rate_calculator(), press enter. 
CLI for end users to access their services and our admin services that help them do their jobs. I generate the click commands from service specs and reflecting on the SDK. 
&gt; doesn't work why am I getting the error? any idea what it means?
Depends on what you are trying to accomplish, but its level of entry a lot better than a custom selenium+grid setup.
Check out locust.io, game changer in load testing web apps if you are having scaling issues hard to track down.
Converting a uint8 by passing it to `float(_)` or `int(_)` did not work because those types have more bits than the 8 bits the unsigned int8 type carries. I had to try the pandas built in `.astype(_)` in order to successfully upcast my type from 8 bits to something more than 8 bits. A float has 64 bits and an standard Python int has more than the 8bits that uint8 type had. That's why `float(_)` and `int(_)` did not work for me sadly. 
Agreed. I develop on Windows because it's what I am used to using, but sometimes I use Linux for development as well so it is important that the tools I use be multi-platform and preferably open-source.
Do you mean runtime type checking when you say using `__annotations__`? That could get really slow very fast. If you really wanted you could get equivalent structures from `__doc__` in Python 2. That is close to `__annotations__` once parsed. Also, there is [unparse.py](https://github.com/python/cpython/blob/master/Tools/parser/unparse.py). Might interest you. So yeah having to support Python 2 sucks :/ Also &gt;I'm currently wary of committing to it, since it seems like so few have adopted it in the Python community. Sounds like a chicken and egg problem. ¯\\\_(ツ)\_/¯
I tried to turn your GitHub links into [permanent links](https://help.github.com/articles/getting-permanent-links-to-files/) ([press **"y"**](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) to do this yourself): * [python/cpython/.../**unparse.py** (master → 2db6482)](https://github.com/python/cpython/blob/2db64823c20538a6cfc6033661fab5711d2d4585/Tools/parser/unparse.py) ---- ^(Shoot me a PM if you think I'm doing something wrong.)^( To delete this, click) [^here](https://www.reddit.com/message/compose/?to=GitHubPermalinkBot&amp;subject=deletion&amp;message=Delete reply dkqf5z7.)^.
Luckily the fact that Atom and the plugins are all open-source means that we know pretty much right away when shady shit like this is done, and then appropriate measures can be taken. If Atom and plugins were closed-source, this would be much harder to deal with.
My own most recent "oh I wish I knew about this before" were jinja2 and whoosh.
difflib for string matching using the levenshtein algorithm. 
Given that MS has ported SQL server to Linux and integrated bash into Windows, I wouldn't be surprised if VS was next.
I guess I need serialization too (how else would I save the player's life or his experience). I have no idea what even is hmac and as mentioned above, pickle is iffy cross-computer too, so I'd rather steer away from it.
Another article: https://www.theregister.co.uk/2017/07/25/kite_flies_into_a_fork/?page=2
Sounds interesting, like a python answer to R's Shiny library. I don't like how you have to use their servers though or pay out the nose.
I use BeagleBone back for Gateway and it can be used with any Python framework. If you insist on using OpenWrt router, you may reuse LuCI (Lua based) to develop a web service.
Do not use kite. How can you send all your code to an external company just for auto completion ?
I don't understand how they could have underestimated the backlash. It displays such a massive misunderstanding of the values and culture around FOSS, even for what are probably idiot valley libertarian types. I'm glad there is a backlash, and I hope it's only the beginning. This company should be destroyed as an example to anyone else hoping to co-opt and commodify the donated work of volunteers.
Don't you need to use the comment style annotations for that, though? I'd love to be able to use the Python 3 annotations and then just build Python 2 versions of my code using a preprocessor to strip it all out.
I'm not from the US either FWIW, but sharing my list of "people I wouldn't do business with because they did bad stuff" seems like asking for a defamation lawsuit of some sort almost anywhere if I couldn't provide some objective justification for each entry, which would be the case for at least those earlier entries.
Python has a lot of powerful math/machine learning libraries like numpy, scikit-learn, Pytorch, TensorFlow and many more. It also allows modules being written in C++ (I think TensorFlow is mostly C++) and therefore allows highly-optimized computing. So what is machine learning? I would say the idea is to make sense of data. Feed your algorithm (a lot of) data, it learns patterns and uses this knowledge to make future predictions. (I am not a machine learning engineer though, this is just my take)
Release candidates for maintenance releases. Necessary from a QA perspective, but hardly newsworthy.
This is why I like to use TKinter. It's there, no need to pip anything. Have any good tk resources to recommend? Blogs, tutorials? I've read [this book](https://www.packtpub.com/application-development/tkinter-gui-application-development-hotshot) and it was good, but always willing to learn more.
A tool to convert between them should be fairly straightforward. I know there are tools which update comments to annotations.
https://bitbucket.org/camp0/aiengine/
wxPython : https://wxpython.org/
Perhaps the [2-opt](https://en.wikipedia.org/wiki/2-opt) algorithm?
There is chardet, but it's my understanding that text encoding is mainly a guessing game and there isn't a way to detect, with 100% confidence, the encoding used in a text file. Although you could make some guesses based off of the file extension or check the first couple of lines for any indication of encoding used.
[removed]
I'll look into it
You can download all of the open source JS libraries and host it yourself. We do this at work because of sensitive data issues.
Ok, first, let's dispel a bit of a myth: pickle is perfectly fine across platforms (i.e. Windows, Mac, Linux) as long as you read the file in *binary* mode. It's also fine across Python 2 and 3, as long as you specify a common *protocol* (protocol 0, 1, and 2 are available on both Python 2.7 (we won't consider earlier Python's due to age) and 3, while higher protocols have been introduced in 3. If you *need* Pickle to work cross platform and across Python 2.7 &gt;, then do the following: try: import cPickle as pickle except ImportError: import pickle as pickle def write(path, data): with open(path, "wb") as dst: pickle.dump(dst, protocol=2) def read(path): with open(path, "rb") as src: return pickle.load(src) There can be issues with reading pickles written by 2 into 3 if you're using non-ASCII characters, when you'd have to add a keyword if running Python 3, but the point is it's really not that hard, and it's actually *very* portable. Next, let's improve your knowledge a little: **hmac** is a module for *cryptographically signing* messages. In the simplest form you can use it to ensure that a file was written by you, or at least by someone who knew a secret of yours. It's a useful means of verifying things like a pickle, because what you do is pickle your data to a string, then sign that string and save the result to file. When loading the file you check that the signature's digest matches your signature, extract the contents if it does -- which optionally may also have been encrypted --and load the pickle. Bit too complicated to explain in depth here, but not particularly hard and useful especially for safely handling pickles of things like game state that will only be used on a single player's machine. Now, on to your actual problem ... you don't need **pickle** or **shelve** if you've got a class like this: class Player: def __init__(self, name, hp=100, xp=0): self.name = name self.hp = hp self.xp = xp Because your Player is cheap to instantiate and its current state can be always be used to create a new Player instance with the same state. So the *simplest* form of serialize to disk then is **json**: def save(self, path): data = dict( name = self.name, hp = self.hp, xp = self.xp) with open(path, "wb") as dst: json.dump(data, dst) @classmethod def load(cls, path): with open(path, "rb") as src: data = json.load(src) return cls(**data) Now you've got everything you need to save your Player state to disk, and then load it in a new game session to the same state. Of course now your problem is that anyone with access to those json files and a text editor can cheat at your game trivially. But that's a problem for another day.
If it doesn't need to be that complex, I've been using Pelican to great success. Am interested to hear how it goes!
Django-hotsauce is the only known Python web framework using Cython to optimize WSGI apps. For details see: https://bitbucket.org/tkadm30/django-hotsauce/src/33ce9743029939a696b6a15bc5122f02de12ad89/lib/notmm/controllers/wsgi.pyx?at=0.7-stable&amp;fileviewer=file-view-default 
You mean Cython's pure Python mode? That would kill performance on CPython, as the standard library is implemented in optimized C. Running Cython on unannotated Python provides only a 5-10% speed boost (and that is generous) in my experience. Using type annotations would preclude it from being used in PyPy, unless those were PEP 484 type annotations (which wouldn't help for CPython). So there isn't a free lunch here. 
if you like marshmallow you might like webargs if you like pip-tools you might like piprot also funcy
What is it you don't like with DigitalOcean?
Try locust.io
Path.py
&gt;I haven't seen anything crazy new come out in that time either I suppose that depends on what you mean by crazy new. What would that look like to you? PyPy 3.5 being beta is pretty awesome. Instagram moving to Python 3 so quickly impressed me a lot. Additionally, things like Japronto, Sanic, and other things in the same space were pretty cool and brand new. I guess it depends on what you read and look for. Also, this is a theory (more like I guess, Im not Anne Elk), but it might also be a lot of people are working on porting to Python 3, so there is less work going into new things. _shrugs_ 
`%matplotlib inline` or (since OP mentioned bokeh): `output_notebook()` Mind blown.
I read up on this again, what you say is true. Seems Spotify have a depreciated API which they aim to replace which could still work, I'd look into https://developer.spotify.com/technologies/libspotify/ and https://pyspotify.mopidy.com/en/latest/ which uses libspotify and see what is still working.
Google cloud platform
Why not just: import tor import sourcecode import view sc = sourcecode.get(tor) the_views = view.get_particular_views() sc.add(the_views)
Check out Zappa https://github.com/Miserlou/Zappa
Has anyone written a thorough comparison yet? In the dash announcement, they said, "Dash and Shiny are similar but Dash does not aim to be a replica of Shiny." I love shiny and use it very frequently for my current work, but would like the option to have an all python stack.
[docopt](https://pypi.python.org/pypi/docopt) is awesome for specifying CLIs.
Thanks man, I was leaning towards writing a json serializer (I can already load data from json) but I found picklejson. I'm not that worried about cheaters as so far I have very few players and the game is single player only. (At work, we use postgreSQL databases, but these are overkill for a hobby project)
You can start with pep8 and pep257 linters: * https://pypi.python.org/pypi/pycodestyle (former pep8) * https://pypi.python.org/pypi/pep257 When writing docstrings you can use google style, which is easy readable by humans and also supported by sphinx documentation generator: * http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html There also great talk by Raymond Hettinger about python code readibilty: * https://www.youtube.com/watch?v=wf-BqAjZb8M 
&gt; [-] actualscientist 1 point &gt; [...] many consider Turing Completeness to be the defining attribute of programming languages Might you be projecting your opinion onto others? I'd be especially wary of that in the case of the PL design crowd. I.e. [citation needed] &gt; Or, more pragmatically, even though all widely used general purpose programming languages are Turing Complete? Why should the barometer for judging whether something is a programming language not be "possesses the defining attribute of programming languages", or "possesses the attribute most commonly observed in things considered to be programming languages"? Either I'm misreading here, or the above boils down to "all widely used Foo-type Bars have quux, thus anything without quux isn't a Bar". For example, your statement is equivalent to "all widely used *desktop* computers run Windows, thus something without Windows is not *any type* of computer". I'm impressed, you've managed to throw multiple logical fallacies in a single statement. 1. You claim that all widely used general purpose programming languages are Turing complete. This is a claim, not guaranteed to be a fact. 1. "All widely used" GP PLs is a subset of GP PLs. Just because something *might* apply to the "all widely used" GP PL subset, does not guarantee it applies to the GP PL superset (the Windows deskop computer / all desktop computers scenario). 1. General purpose programming languages (GP PLs) are a subset of programming languages (PLs). We are talking about the latter. Just because something *might* apply to the GP PL subset, does not guarantee it applies to the PL superset (the Windows desktop computer / all computers - not only desktops - scenario). I hope your username is ironic, because that level of intellectual dishonesty or logical incompetence is something that can really mess up the scientific method. And here's my own shitty argument to "authority": Have a look at "Expressive power" under https://en.wikipedia.org/wiki/Programming_language#Definitions From the same page: &gt; Some, but not all, authors restrict the term "programming language" to those languages that can express all possible algorithms.[3][4] Also, https://en.wikipedia.org/wiki/Rule_of_least_power - and note that points to a useful distinction between computer languages, markup languages, programming languages, and general purpose programming languages. 
Video linked by /u/onjin: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [Raymond Hettinger - Beyond PEP 8 -- Best practices for beautiful intelligible code - PyCon 2015](https://youtube.com/watch?v=wf-BqAjZb8M)|PyCon 2015|2015-04-11|0:52:05|2,421+ (99%)|163,375 &gt; "Speaker: Raymond Hettinger Distillation of knowledge... --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/onjin ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=dkqjsuw\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v1.1.3b
If you are getting into web development then you should use flask or django. HTML templating is the "**V**iew" part of MVC.
This is how Jupyter Notebook works. The browser approach has a lot of benefits, but also certain drawbacks. Defining keyboard shortcuts which don't clash with the browser's own shortcuts is tricky. There are browser compatibility issues to deal with. And security restrictions in the browser make it trickier to do things like copy/paste with the system clipboard. Electron avoids a lot of these issues, but it comes with a hefty overhead, as several people have pointed out. And it's not convenient to use Python with it, so you'll end up writing all or most of your app in Javascript.
I'm using Applescript for my app (written in swift) but there seems to be an API (only for premium it seems, WTF) that lets you control the player. https://developer.spotify.com/web-api/web-api-connect-endpoint-reference/
pygal ? Heard about it yesterday. API is friendly.
U suck
Ttk. Sorry could not help
Square peg round hole. The first thing you should be doing is making sure your tools actuslly do what you need. Why didn't you look into native pyqt or similar? That's not to say it can't be done, but it's a really silly mistake to not make sure you can do it before starting. edit: snarkyness justified. OP obviously didnt use google which has plenty of posts about how to do this
Pro Tip. Default your magics into a config. `%autoreload` and `%matplotlib inline` are lifesavers.
Given that 64 bit visual studio doesn't exist yet, I doubt it will ever be on Linux.
Here you go fam raw_input('Enter the first number: ') raw_input('Enter the second number: ') raw_input('Enter the third number: ') raw_input('Enter the fourth number: ') raw_input('Enter the fifth number: ') print('The total sum is: ') print('The average number is: ') print('The highest number is: ') print('The smallest number is: ') I believe this meets the requirements exactly as stated!
Well Electron is actually based on chromium, so I did expect that.
Now use Python FUSE bindings to make it appear like an actual filesystem.
Thanks. I'm not in webdev. I've been using jinja2 heavily for non-html templates.
[removed]
I believe they started from a honest idea of creating smart tools and just got lost and caught up.
Not sure yet... this is my first big project with Tensorflow. The plan is to create a Variational Autoencoder trained on all Pokemon, and generate new Pokemon types/stats using the decoder half. Then either I will use the full generated stats or simply the latent encoding to feed an RNN that will generate names (trained on the Pokemon corpus's latent encoding or simply on the stats themselves) and train a CNN to generate sprites (similar training scheme as the RNN), trained on the menusprites you will find in-game. I think I may not even need convolution for the sprites though, they're only 40x40... but we will see.
Not when the DEFAULT option is silently changed to opt in. 
I have tried using qt and had a really bad experience with the ide which is a pain in the ass and is 23 gb lol. Also I need a platform that is open source not like qt. So I decided to go with electron being an easy way to create ui and I had found many python js communication articles on Google so I decided to do it but things turned out to be more difficult than they seemed and I haven't found a good way to do it. So please help me if you're willing and don't sit talk about how I did not do my research which I did. 
Id assume its based on Ghost in the Shell.
currently working with selenium in a project so would like to know too.
If you don't have API access, look into PyAutoGui.
Nah far more than needed: print("Give me five different numbers") print("The total sum is : ") print("The average number is: ") print("The highest number is: ") print("The smallest number is: ") Never said anything about asking for them individually nor actually storing them ;)
https://github.com/Lucas-C/youtube_playlist_watcher Very handy to keep a Youtube playlist sane: I am notified each time a video gets deleted, with a link to find a replacement :) I also made a very basic RPG character sheet editor: https://github.com/Lucas-C/rpg-bonhomme And a script to built an HTML playlist of songs exchanged by emails with friends: https://github.com/Lucas-C/music-emails-spybot
shit! then why call it that?? guess that explains why everyone talks about fork but grep tounge returns 0
You can improve pycharm's ability to autocomplete by providing typing hints. At my work we've started providing types for object attributes, function parameters, and return values, which makes autocomplete work basically as well as it does in C#.
First I hear of this, and sounds line a good addition to my projects. Do you have a link to some docs on these typing hints?
The pep257 linter has been renamed as well: https://pypi.python.org/pypi/pydocstyle
I've hosted Django apps on Heroku, Google App Engine, and an Amazon EC2 Instance running a LAMP stack. I'd say if you aren't looking to deal with any of the complications of managing a server, Heroku would be my first choice. It's free up to a certain point, easy to setup and run, and has excellent support and documentation. There's also a bunch of add-ons that are easy to use, but I haven't bothered with anything other than the built in databases. Of course there's limitations to Heroku, like only being able to use pure Python libraries. Otherwise I've had good experiences with Amazon. They make the process of setting up a server easy (checkout Lightsail if you haven't). And of course you get almost full control over everything. I used Google App Engine for a while, but it's not my cup of tea. It's just a little too all over the place and lacking in community (which may grow over time). Worth checking out, at least.
You know what else will factor into whether the product will materialize at all, especially at a startup? Developer productivity. What if you have a low-volume, high-margin product, and you're working with a low capital? You're better off aiming for developer productivity (within reason), which is directly correlated to the batteries included. I consult at an embedded company considering moving from C++ to Java for their embedded devices. They're stuck between a rock and a hard place right now with C++ requiring you to DIY so many things (and becoming obsolete to boot), but not having the money to engage on a multi-year rewrite adventure in Java or whatnot.
There's embedded and then there's embedded. With mid-end embedded hardware so powerful now (think the Pi), a lot of companies forced to use C/C++ would love to dive into the battery-powered world of Python or Java. Once static typing is more popular in the Python world (in a few years) I expect Python to start being used for in mid and high-end embedded systems.
Not really
Violent python is what I used.
Hope this helps, they are defined in PEP 484: https://www.python.org/dev/peps/pep-0484/
Go get PKA by WoodysGamertag. Thank me later!
If you're already used to SQL, you may want to just use **sqlite3**, it's an on disk database, pretty much perfect for a single user on a single machine, and has all the advantages of a database over a simple file, plus if you want you can use **sqlalchemy** as the front end and upgrade the backend later if needed. Alchemy is an external dependency, but **sqlite3** ships with Python.
Necessity. You don't pick a niche, the niche grabs hold of you, drags you down to the deep and drowns you in API documentation. Until that day comes, just play with what feels fun at the time.
Can't say I would ever recommend listening to documentation while driving :) Not sure of any Python specific podcasts but Decrypted has some interesting tech stories. Totally unrelated to Python, but I'm enjoying "Coveralls" lately for music (all covers) and "Containers" is a pretty great 8 episode podumentary about global logistics.
But what if, someone wish to create in MS Word?
Audio Book: Ready Player One
The professional version is a dream. I'm not even a full time developer but i can't see myself using another IDE. the integrated db tools and remote development is just a perfect. and I'm not even mentioning the other awesome features.
Look into the `json` module, maybe? Or `sqlite3`.
22 downloads. Probably the first time I've installed a package with &lt;100k. I feel so on the cutting edge! :)
&gt; Also I need a platform that is open source not like qt. Except qt is : &gt; Qt for Application Development is also available under GPL and LGPLv3 open source licenses. Qt tools and some libraries are only available under GPL. See the comparison chart for details. The Qt open source licensing is ideal for use cases such as open source projects with open source distribution, student/academic purposes, hobby projects, internal research projects without external distribution, or other projects where all (L)GPL obligations can be met. So tell us again how you did your research 
Usually you end up in a niche long before settling on a language (if at all). Domain knowledge and critical thinking is much more important then the language you use. I'm a backend web developer who now mostly uses python, but the main chunk of knowledge I use every day applies to most backend development. I could move to Rails, PHP or Node at any time (well.. not PHP maybe :) and just need to adapt those language/framework quirks and be productive quickly. But I could not be a data scientist, I don't know much about statistics and have no background in any science field. It would take a lot of study to move into that field. Same with automation: writing python is easy, knowing about the actual stuff you are automating and how it goes together is a whole other beast. But then a data scientist probably has less knowledge about web frameworks and HTTP and it takes a while to build that up.
You have to press first the run button on the left window. Then it should work. If not, the module is not loaded and the function is thus not defined. 
This is a good book.. https://www.packtpub.com/application-development/python-3-object-oriented-programming-second-edition
Nice! PyCharm is my workhorse, I'm always in for editor and VCS improvements. I'll be waiting for 2017.2.1 however; I've had to downgrade from a brand new release more than once because of how bugged it was.
Best server to host Django is no server at all! It is dope stuff, pretty easy too.
Click for CLI tools.
Could even use `pickle` and write the data to a file. Maybe the `shelve` module? 
For reference: http://pyside.github.io/docs/pyside/
I would've gone with 'stypy' in place of typy, though not *quite* as catchy.
Also being able to make it work, then make it pretty, and then just export it to a .py file saves lots of time.
I'm going to sound like a total JetBrains shill, but I can't believe it took me so long to stump up the ~£6/month I pay for Pro--it's absolutely awesome for db-related projects.
You are wanting a database. Sqlite is an easy one to work with and there's a module called sqlalchemy that will make working with Sqlite feel more like python and less like a relational database. Cheers!
Check out deconvolution networks as well for generation. Or GANs.
https://automatetheboringstuff.com/
That's my workflow as well. Saves me a load of debugging.
Kinda depends on what your issue with digital ocean is. IMO, digital ocean is a pretty good choice WRT uptime, value, ease of use, but there's no built-in firewall and you can end up with a compromised server if you don't know what you're doing. Heroku is a good choice if you're less admin-inclined.
Python crash course by Eric Matthes has been a huge help getting me started
I use [tqdm](https://github.com/tqdm/tqdm) daily since discovering it. 
Might sound odd, but I want a clean openGL GUI where you aren't hampered by anything...I'm thinking that new glue called ModernGL seems fairly promising.
https://en.wikipedia.org/wiki/Inter-process_communication
You could use Flask or tornado to build an api in python then hit that with js in electron.
It seems that installing this package disabled Ctrl+C, Ctrl+V, Ctrl+X keybindings completely. Someone [already opened a bug report](https://github.com/brennv/autocomplete-python-jedi/issues/5) on the github page. I'm too lazy to reinstall the kite version, so for anyone in the same boat, you can use Ctrl+Insert for copying and Shift+Insert for pasting. edit: v1.9.1-3 fixed this issue for me, update to newest one folks! 
Yeah, I've never heard of it. Down voted for what i'd class as a fair question. 
Omg, the license obligates you to use only for open source projects you cannot sell it or distribute it as a product... Please read 
I tried tornado but it did not work, I did the example on the website and the server was established using python the js didn't send any message 
/r/learnpython I'm not familiar with Word automation, but if you manage to wrangle your data into a spreadsheet, you can use the Mail Merge function in Word to grab data from Excel and insert into a template.
£6/month? I'm seeing £17.98/month inc VAT, or £178.80 a year. Edit: My bad - I was looking at commercial subscriptions. It's £8.28/month inc VAT or £82.80 a year for individual subscriptions.
Yep, you're going to have to get good at testing the pieces individually. The good news is you can use a browser or something like curl on the command line to test the tornado side. You might find Flask a bit easier to work with. 
How do you (we) know this code works? Do you got a test suite? Most modules you see in the wild these days have Travis CI setup. The readme is a bit sparse. Annotate the code blocks as python code for highlighting. The text itself could be little bit more readable formatted. Stacking single line paragraphs like this is hard on the brain. It is hard to determine what this does over the standard lib, like threading/multiprocessing and most of all concurrent.futures. The project looks a bit empty.. maybe see if a there is a boilerplate or cookiecutter that makes it a nice standard installable package?
Trying to implement a token based authentication server. Some advice would be much appreciated. 
surprisingly easy to do; I wrote a PyFUSE fs driver for a shitty embedded device using TFTP and a really crappy telnet command shell. It was slow AF and didn't really support random access very well (lots of caching and re-writing the whole file) but it worked
Not a square peg, also not a round hole. There are various ways of doing this, here's [one](https://github.com/fyears/electron-python-example) that seems to work well. And you can also [do it like Electron, without Electron](https://medium.freecodecamp.org/the-python-desktop-application-3a66b4a128d3). Basically in all cases you're making a web server in Python that only takes requests and serves responses over a websocket (or other form of IPC), and you're using a bundled Chromium browser to display it. As HTML + CSS (or better yet Sass) + EcmaScript (or better yet TypeScript or Elm) have come so far in recent years -- arguably much further than Qt and the troublesome-licensing of PyQt -- it's not at all a bad idea, though it is a different one and still somewhat cumbersome. 
Five bandcamp sysadmins died and one ran away screaming after reading this.
I resisted PyCharm for a while. I wanted so badly for other options to be better. But they just... aren't. PyCharm is big, heavy, sometimes slow, and by far the best Python IDE I've ever used.
&gt;Congrats! You've been approved! Amazing, I didn't think it was an automated process, I got approved instantly to use the Pro versions of all of jetbrains' stuff. Now I don't have a reason to not use an IDE anymore..
&gt; POSTGRES_PASSWORD: hunter2 Never change Jetbrains, never change.
There are some great python podcasts out there :) * [Talk Python](https://talkpython.fm/) * [Podcast init](https://www.podcastinit.com/) * [Python bytes](https://pythonbytes.fm/)
I just want some way to load the functions to prompt the questions on the right panel so I can type in my numbers and get the answer. Any idea how to fix it? And yeah I press run first. The average damage one or the one that works is literally the same and I can't see any difference, yet it works. 
The code snippets need some pep8 love. The readability of the text in this font with so little contrast is less then ideal.
Yes it is possible. I've used the docx module (https://pypi.python.org/pypi/docx) in the past for something like this. If my memory serves me right, you create a Document instance with your template docx as the argument to Document (mydocx = Document(templateDocx) ) and then you just fill in the portions that you need using the docx module API.
I like to do webdev projects in my spare time to keep busy and bought the pro version years ago for it's webdev features but let it lapse as I stopped having time to work on projects for awhile but I started up again a few months ago and ended up renewing my license for the new features. I'm by no means a pro though and I'm curious if anyone knows of a collection of tutorials/guides/vids going over different features/tech I'm missing out on? 
You can use comments or `.pyi` files (see [typeshed](https://github.com/python/typeshed) for a bunch of examples). I have a py2/py3 project that I recently added mypy support to. I started out trying to use pyi files but then switch to comments. While mypy will complain if they diverge in certain ways, I felt this would be a better way to make sure my annotations stay up-to-date. In addition, its been really nice to see the function signature at a glance when reading the code.
Have you heard about "atom"! Open Source. Lot of plagin .. better ! 
Just piggybacking on here: all JetBrains products are free for students. Just apply at https://jetbrains.com/student
You could download the seattle pycon videos and watch those. Should be neat. `pip install youtube-dl`
&gt; Using type annotations would preclude it from being used in PyPy Presumably PyPy would be expected to implement a Cython parser. I think the idea is that it would be easier for PyPy/(or IronPython, or any other python implementation) to implement a Cython parser and reuse the Cython source for a standard library/plugin, than it would be for each of those languages to be forced to reimplement the standard library from scratch in cases where CPython implements those functions in "non-portable" C. So CPython wins portability to anything that Cython runs on, and some safety from generated code, while hopefully only giving up a little in terms of the difference between a hand-coded C implementation and a Cython implementation. All other Python implementations win provided that they can implement a Cython parser/translator, which is by design not expected to be terribly difficult (since Cython is supposed to be like Python). 
"sh" is seriously nice if you need to glue a lot of command line applications together.
Redis is very usefull for scalable platforms
I think you're on the right path. taking a look at the from_can function def from_can(can_msg) raise NotImplementedError() Thats it. I've tried looking up what raise not implemented error is doing, but not understanding it to well. &gt;The actual type call occurs once in your conditional, and once in your body when you look up db_msg in the handlers dictionary. Just to make sure I believe you're reffering to If type(db_msg) in handlers: #checks if the type of db_msg is inside of handlers. handlers[type(db_msg)](dw_msg) #not sure what this syntax is trying to accomplish. 
I wrote a script to scrape a steam users market history (https://goo.gl/9gyVig). Still a novice compared to the rest of you guys but i try to pick something new up here and there. My newest addition was using "continue" in loops instead of sprawling my code more and more to the right of the screen nesting a bunch of if else.
Atom is a great editor, but it simply can't compete with the features pycharm offers.
Cython pure mode decorators and Cython declaration files (.PXD) are 2 ways to annotate Python code and keeping the latter pure Python code (.py) when Cython is not enabled. More discussion here: https://groups.google.com/forum/#!topic/cython-users/DHcbk78rDec
I've had been very happy with Atom up till recently. With the recent Kite crap and them injecting their app into Minimap and Autocomplete-python...well, until Atom decides to put their foot down and prevent these kinds of actions from taking place, I think I'm shelving Atom.
PyPy already supports subset of Cython via cpyext. But the goal here is different - keep pure Python standard library and implement optimizations in each runtime separately.
Give it more time, you will learn to hate Selenium like the rest of us soon enough.
There are a handful of webinars posted here: https://blog.jetbrains.com/pycharm/category/video/ A more basic run through of core features can be found here: https://www.jetbrains.com/pycharm/documentation/ /u/pauleveritt may know of some other sources. And there is always youtube, just be wary of videos made with older versions. That has tripped me up a time or three.
The current year price for individuals is: * € 89.00 /1st year * € 71.00 /2nd year * € 53.00 /3rd yr onwards [Source](https://www.jetbrains.com/pycharm/buy/#edition=personal) At the end of this year, I'll be finally paying 53€ for it.
Unless there is an addendum I didn't see, there's nothing preventing you from selling open source software. It seems what you actually mean "free from obligations" rather than open source
Scrapy+Splash is along the lines of Selenium. IMHO lxml doesn't get enough appreciation.
I just installed the CE version yesterday on a temporary machine and immediately realized several of the premium features I love, including db connectors, are missing. Premium is well worth it. 
Python on Windows is just wrong...
Indeed, that was awesome to see :D http://knowyourmeme.com/memes/hunter2
https://youtu.be/1KeYzjILqDo you'd have to obtain just the Audio or youtube if that is an option, Bryan has many fantastic presentations about software development but this one is my favourite.
Atom is an editor but not an IDE. I use both actually, but each for different tasks.
[pySide](https://wiki.qt.io/PySide) is released under the LGPL, which might be more to your liking.
Video linked by /u/dot_grant: Title|Channel|Published|Duration|Likes|Total Views :----------:|:----------:|:----------:|:----------:|:----------:|:----------: [Surge 2013 Speaker: Bryan Cantrill](https://youtu.be/1KeYzjILqDo)|OmniTI|2013-10-30|1:03:38|24+ (100%)|2,038 &gt; Leadership Without Management: Scaling Organizations by... --- [^Info](https://np.reddit.com/r/youtubot/wiki/index) ^| [^/u/dot_grant ^can ^delete](https://np.reddit.com/message/compose/?to=_youtubot_&amp;subject=delete\%20comment&amp;message=dkr0as8\%0A\%0AReason\%3A\%20\%2A\%2Aplease+help+us+improve\%2A\%2A) ^| ^v1.1.3b
The features of an editor, with the size of an IDE :)
Thanks a lot mate, you've been an awesome help :)
in line with what others have said, saying "I like python, what should I do with it?" is like saying "I like driving, what should I do with it?". Some people drive just to get to work, some drive fast for fun on the weekends, some drive trucks for money, and some even drive fast for money. You've picked the car you like, and you're using it to get good at driving. Great. At some point though, if you want to make money by doing it you're going to have to look around and see who needs drivers, what they're willing to pay, and what kind of driving will be required. ANY of the options can be used to build a rewarding and challenging career. ANY of them can also lead to heart-sucking monotonous hell work. Don't take your first gig expecting to have your whole future mapped out. Maybe you'll get a job as a backend developer and maybe you'll just keep building deeper and deeper expertise in that area your whole career.... and maybe you'll never touch it again. Figuring out what's going to be the right fit isn't something you can do from the outside. And it's also not something you should expect to be static. Maybe you'll love your first job and the jobs that follow from that one for 5 or 10 years... and then get sick of it and move on to something else. 
I second the `pickle` and `shelve` approaches. I've used them to great effect in my own apps/scripts.
The integrated ipython console does not show docs properly too
You could do this many ways, it being Word I recommend also looking into C# or PowerShell solutions. If there is a unique separator you can grab the whole text and split it. For instance, if "client_info" is the unique separator: text ="&lt;All the text&gt;" orders = text.split("client_info") Then you can just loop through the orders to output to .docx and save. for order in orders: //write an exportDocx function to handle the export or add the logic here exportDocx(order)
Audiobook - Algorithms to Live By: The Computer Science of Human Decisions 
Does it have UI toolkit? edit. It does! Awesome
No worries. But don't let internet scuttlebut keep you from actually using **pickle** ... if instantiating your Player was, for some reason, a really slow process, it might be ideal, and it's security issues are well-delineated... don't unpickle unknown and untrusted data. Ok, so sign data you write, and read only data you've signed. Yes, there's an attack vector there, but you're running an interpreted language... there's an attack vector *everywhere*.
I'll start the bidding at 30 thousand dollars. 
How? Distro packages should make it relatively painless. Is it a particular part of the library?
OK, I'll meet you somewhere in the middle... say 10 .... Dollars. 
Once installed the code sometimes just doesn't work for me due to linking errors. Only tried it once or twice though. The tutorial support isn't there compared to Qt. 
100/hr I only accept BitCoin from strangers. 
37 Magic Beans and that is my final offer. 
Vim would fix many of the chords issues. Not all, but pretty close.
You drive a hard bargan, but I need a even number of magic beans. My ocd won't let me accept prime numbers in payment. 
Can I just point out how impressed I am at the general utility of youtube for things like these? It's become my go-to source for understanding complicated software and libraries.
Do you accept Onions? 
Sikuli has an IDE that runs Python and works by finding visuals in your desktop. I use it to perform repetitive tasks at work. Download: https://launchpad.net/sikuli 
Awesome. I am pretty against the idea of closed-source software and I love open-source software, but I can't help but just love all of JetBrains IDEs. They are seriously so good.
It's all good until you look at the pricing. 😱 
The 100/hour is actually realistic.
100 Bitcoins isn’t ;-) 
Why?
It's not completely closed source. https://github.com/JetBrains/intellij-community/tree/master/python
True but their other IDEs are completely closed source, like PHPstorm and Webstorm. I do love the hell out of them, though.
I did 3.6 on top of my default 2.7 install of anaconda. I did something like: [source](https://uoa-eresearch.github.io/eresearch-cookbook/recipe/2014/11/20/conda/) conda create -n yourenvname python=x.x anaconda
Huh, wow. I guess the $10k/5yr plan is mainly for support then?
Do you need the Professional edition? You could just use the Community edition.
Maybe got desperate as investors put on pressure to increase growth.
Java is a bit different from Python though - Java has been used on mobile since before smartphones were a thing. Most of the 'embedded'-embedded world is still stuck on C currently, and even C++ uptake is low. And modern C++ is fairly high level. So it seems to me that developer productivity is quite low on priority vs. hardware productivity. Personally I'd love to see this change.
I think any language that requires a runtime or heap allocations (i.e. cannot run on bare metal with deterministic memory behaviour) will have a tough time competing with C/C++ for embedded space. Today I can write very modern, expressive C++14 without incurring any runtime cost vs. pure C. That's a bit difficult to do in most (dynamic) languages.
Can you link It please? sounds cool!
Oh My gosh that sounds awesome, mabye Ill get My Mum to use it
Chat me , I'll solve to you.. and we combine in private.
This is the best in my eyes.
For single developers it's always been extremely reasonable, even when Visual Studio was charging an arm and a leg. They used to have periodic discount windows and the prices then were a real steal. For multiple seats the price goes up, but at that point it's a business expense - and it pales compared to what businesses pay every day for offices of even just coffee and snacks.
it now starts to sound like an [X Y problem](http://xyproblem.info/) here... what is it exactly that you want to do? &gt; did not work because those types have more bits than the 8 bits the unsigned int8 type carries &gt; in order to successfully upcast my type from 8 bits to something more than 8 bits Do you or do you not want ints or floats? Can you give a clear example of what it is exactly that you want?
Can confirm. My boss spends about 3x on beer what he does on my JB licenses. Tools are cheap, happy employees are expensive!
Can you provide more context around your claim? https://github.com/atom/atom/pull/12281 To add to this the data collected by Atom is not nearly as granular as what Kite is trying to do, I'm not saying Atom has any business with your data but spreading lies to deter people from a good editor is wrong.
Would a [python runnable zip file](https://docs.python.org/3/library/zipapp.html) work for you perhaps? 
I like the simplicity and portability of Json but it is inconvenient in some cases because it has a *very* limited set of datatypes. That is why I created [serpent](https://pypi.python.org/pypi/serpent) which is also a text based serialization format but one that supports more Python types. It is safe to use because it serializes into a normal Python literal expression that you can deserialize using ``ast.literal_eval`` if you so desire
You should change available_texts to a list instead of a dictionary. Also, you can do this. for i, text in enumerate(available_texts): print("{} - {}".format(i, text[0])) Additionally, you could make your texts namedtuples. from collections import namedtuple Text = namedtuple('Text', 'name path weight') example = Text('satan', 'corpus/texts/satanbible.txt', .01) print(example.name) print(example.path) I don't know if it's pythonic but you can do something like this. _, filenames, weights = zip(*[available_text[i] for i in nums]) # or return zip(*[available_text[i] for i in nums])[1:] For your "Markovify" I think I'd do something like this. def read_for_markovify(file): with open(file) as f: return markovify.Text(f.read(), state_size=STATE_SIZE) So that you can do models = map(read_for_markovify, filenames) Here's something. try: os.makedirs(os.path.dirname(DB_FILE)) except errno.EEXIST: pass If you weren't maintaining python 2 compatibility then this could be simpler. os.makedirs(os.path.dirname(DB_FILE), exist_ok=True)
...I've been using C# mostly for coding in Unity, but didn't think about using it for this case (and it seems so much easier). Thank you!
Well first of all, those are open-source plugins, nothing is stopping the open source dev from adding that kind of stuff to their plugins. The reason why that stuff can happen is because it is open source... 
How do you do this? 
that would be the basic python. I am looking for the intel distribution.
&gt; py.test + tox How do ***you*** use it?
Python is meant to be done from Unix. It's multiprocessing is based on Unix threads. Its built on c with gcc. It's not meant to be on a closed source windows os. 
tqdm is phenomenal, its so easy to use!
What is the benefit of SQLAlchemy over writing SQL?
well here are some ideas for a naive implementation: * use the standard "for root,dir,files in os.walk()" to walk through each drive (or maybe just the user directory) * check if the filename ends with ".jpg" or whatever (use filename,endswith('.jpg') ) * delete the file with os.remove('filepath') * copy squid.jpg to the same directory with the same name as the original file using shutil.copyfile(src,dest)
SQLAlchemy lets you write SQL like you are writing Python code. The other nice thing in my mind is that it made migrating a database from one backend to another extremely easy. Back in the day, we had a terrible MS Access database that we needed to move to MS SQL Server. SQLAlchemy made that very, very easy.
My normal freelance rate is, actually, $250 per hour... I think, if the text is as simple as you describe, not ludicrously huge, the data consistent, the calculations trivial, and the required output simply a JSON dict, then I could probably get it done in about ten minutes. Send me a sample of the data and an explanation of the calculations you need, and if that's true I'll get it to you for $20, but no ongoing support, just a command line tool that parses that one file (and therefore others with the same structure) correctly and outputs the results to either screen or disk.
For someone who doesn't do anything with numbers, is it useful? Whence last I looked at it, I was like, "meh, I already have an interactive shell."
I also found that I could use the model for the database as a model for some of my user interfaces that I was creating in wxPython
&gt; HTTPie Looks nifty. Also, if you're on a Mac (which means you don't mind spending money, presumably), [Paw](https://paw.cloud/) is a GUI tool that brings me joy. (Been considering going back to Linux+KDE after seeing the new round of Macbooks, but I sure would miss Paw!)
Realistically, how much worse off is a small-time developer who only uses the Community Edition?
`def accept_job (not_enough_bitcoin):` ` pass` 
Just watched a cool video on pyautogui which is worth a look of you like selenium 
I find that an ORM is useful for ~~two~~ three reasons: 1. It lets you combine business logic with data in an encapsulated class. 2. "Unit of work" stuff can be really nice. 3. Relations are easier to navigate in your code. In terms of the encapsulation. Suppose you have an order table representing orders in an ecommerce site. You might have various functions that do business logic (such as charging credit cards or printing shipping labels): charge_order(), fulfill_order(), refund_order(), etc. So it's more organized. The business logic is right there next to the data model. Also, with an ORM, all those methods are put on the same class and you can use the objects of that class directly to "mock" data for your tests. --- Regarding units of work! SQLAlchemy can "batch up" all of your modifications. So if you have code that makes 5 changes to 3 tables, but that logic is spread out across your application, your objects keep state until you flush all of your changes, all at once, to your database at commit time. If you did that with regular SQL, you'd have to hold open a transaction the whole time and it would get messy. --- In terms of relations. It's pretty handy to do something like: if current_user.account.billing_status == 'delinquent': ... As opposed to a triple join. Having said all that, I still rely on raw SQL when I want to get some specific kind of report or do a bulk update. 
This is coolest example indeed of less is more. 
Well iPython and PyCharm if you haven't heard of them. (I would think everyone has, but hey!). Some libraries: * [itsdangerous](http://pythonhosted.org/itsdangerous/) is great for signing tokens for use out there in the wild. * Flask and [Flask-awesome](https://github.com/humiaozuzu/awesome-flask) for related tools. * [dateutil](https://github.com/dateutil/dateutil) and [pytz](http://pytz.sourceforge.net/) for when Python's lousy datetime module doesn't hack it. * [Bleach](https://github.com/mozilla/bleach) for untrusted input. * [Requests](http://docs.python-requests.org/en/latest/) is way, way easier than urllib. Did I mention PyCharm?
Yeah, when I first saw that PyCharm had an integrated SQL tool, I blew it off, thinking, *I'll use a tool that's built for the job, not something shoehorned onto an IDE.* Was I wrong. PyCharm's integrated database tool is a great product unto itself and it even supports tunneling with ssh! For remote debugging, I actually thing WingIDE is still the best, but damn PyCharm is good.
&gt; PyCharm is big, heavy, sometimes slow, Buy a faster computer. ;)
The examples are Python, I should have differentiated since I mentioned C# and PS. C# will be more verbose, I only mentioned the two since they are meant to work with MS products, so you may or may not have an easier time going that route.
I pay for the "all product license," which entitles me to basically everything JetBrains makes. I'm a long-time customer, and got it on a deal, but still, the way I look at it is like this: PyCharm is always open on my desktop. I'm using it most of the day, every day. I also use DataGrip sometimes, as well as IntelliJ for non-Python projects. At $ 149.00/year, I'm paying less than 50 cents a day for something that *significantly* boosts my productivity. I'm also supporting one of the last true "full IDE" projects out there with a commercial backer (the only other one I know of is Visual Studio. Eclipse is, I think, dying.) So for me it's a no-brainer, but also, this is how I make a living, so you have to consider that.
&gt; For multiple seats the price goes up, but at that point it's a business expense - and it pales compared to what businesses pay every day for offices of even just coffee and snacks. This is true. To pay $80,000+ for a talented programmer and balk at a good tool that makes one more productive is just bad business. No graphic design firm would say, "Photoshop is too expensive; use Paintshop Pro instead." The same applies here.
Just think, you are helping it bubble to the top!
Are you sure you're not looking at the corporate pricing? Personal licenses are very affordable, it's like 90 for the first year and 50 by year 3 for pycharm. 
when you say you downloaded it and installed it, what did you do specifically?
Listen to Daemon by Daniel Suarez. It was an inspiration for me to get better with netsec 
Thank you for this information !
Maybe, but I don't buy it. I'm familiar with the culture and attitudes around startups like this. I worked in them for almost 10 years. By far the most likely progression was something like: "Wow, look at the reach and penetration among the tastemakers that these tools have. We could improve them with some funding and leverage that access to make a lot of money. Pretend that a service architecture is necessary in order to slurp up all their code *and* inject targeted ads, we'll find a way to sell that code data at some point and the ads will keep us alive while we work out how to do that." They are the next generation of scumbag browser toolbar makers.
Here's a StackOverflow question which is pretty similar to what you are asking [Link](https://stackoverflow.com/questions/24968311/how-to-set-a-timer-clear-a-timer-in-python) Edit: Here is an example of how you could use the timer : from threading import Timer def gameover(): #Your code here# t = Timer(5.0, gameover) t.start() userinput = raw_input("Please type the following word " + word) if userinput == word: t.cancel()
You should used the pickle module. This will serialize python objects. Run the script a d save the dictionaries in to a pickle. Have a check to see if the pickle exists, and it it does, load it and pull out the dictionaries as needed. 
Thank you for the offer, However I have two workable solutions. I was VERY surprised at the number of people that messaged me about this. 
I am hoping they made more improvements to remote docker than simply adding docker-compose support. It was still a little bit painful the last time I checked it. Still, I love jetbrains and if I have to handle containers externally then so be it..
Newish to programming so I started a little text adventure game to understand how classes work better. For work I write software to analyze data from a radio interferometer and create diagnostic plots
Thanks! 1 and 3 make a ton of sense. Can you explain 2 a little more? I think I dont understand the problem well enough to understand the solution.
I'd recommend looking into Power BI. It can do everything you're asking about from a SQL table *and* host it online as interactive visualizations. Better than Tableau these days IMHO.
Fantastic, free online book: Test-Driven Development with Python http://www.obeythetestinggoat.com/
Been using it for free as a student for the last few years, going to be a tough wakeup call if/when I graduate :/
Pythonanywhere sounds like what you're looking for
Make sure you design appropriate test cases to validate the solutions you got. The basic task is very easy but validating the input and handling errors are the real value you get from an experienced programmer. 
If you use it on windows, I strongly advise HeidiSQL for database, it's light and works really well, besides the other features, I'm really impressed by Microsoft visual code, it's a kind of sublime text alternative and surpriselly works well as a python Ide. I have a few other tools in mind but I'm on mobile and at the hospital,but feel free to throw me a message with your any kind of help you want and I'll try to do my best to reply it as soon Im at home. 
Python 3, PyCharm.
Hi! I'll be giving an introduction lecture to pandas two weeks from now. Will the coupon be available until then?
I like Python 3. I switch between PyCharm and Eclipse, but I like them both.
Sure, hmmm... It's not so much a problem as it is a pattern that produces good results. Let's say you write a function that fulfills an order. Pseudocode: def charge_credit_card(...): status = stripe.charge(...) if status == 'success': sql("insert into credit_card_history ...") sql("update order set card_status = 'charged'") def email_customer(...): send_email() sql("insert into email_record ...") def fill_order(order_id): order_info = sql("select * from order where id = %s", order_id) charge_credit_card(order_info['card']) email_customer(order_info('email']) ship_order(...) sql("update order set status = 'shipped' where id =%s", order_id) for (order_id,) in sql("select order_id from order where where status = 'unfilled'"): fill_order(order_id) Ok, so that's a little sloppy, but notice there are two updates to the `order` table from different functions. `fill_order()` sets the status to shipped, while `charge_credit_card` sets the `card_status` to charged. Those updates are in different places, which makes sense, but it's an unnecessary extra query to the database. Notice also that depending on how you code this, it's possible that if you're passing ids around, multiple functions might make multiple redundant queries. With SQLAlchemy's unit of work, all the updates and inserts are held back until you want to flush the changes. Eg, class Order(Base): ... def charge_credit_card(...): charge_history_item = ChargeHistory(order=self) session.add(charge_history_item) def email_customer(...): ... def fill_order(self): self.charge_credit_card() self.email_customer() db.session.commit() # Now all DB transactions happen. So with this model, if you have *even more functions*, and changes elsewhere to your order object, when you set order.status = 'shipped', nothing happens until you're ready to flush the changes to the database. That way, instead of two update statements (each updating a separate column), the updates are grouped together. It's both more readable and, potentially, more efficient. (In contrast, other popular ORMs use the "active record" model where the database is updated *with the attributes*. That's a bit easier to understand, but is almost always less efficient!) EDIT: I should also mention, you can control this. For example, in most web apps, I flush changes to the database at the end of an HTTP request's lifecycle. But if I'm doing something like charging a credit card with an external API, I might immediately commit an insert into the transaction record in a separate session, because that's not something that should get rolled back or cancelled if there's another exception.
Pickle (and `dill`) might be good options but keep in mind that the serialization they provide is fragile. Pickle is not an archive format. Don't expect to be able to load that pickle with other Python installations on other machines or to load it on the same machine if python is upgraded. Make sure the information stored in the pickle can always be recreated from a more stable format (like json)
Do you have a recommended free IDE? PyCharm looks great but too expensive for me. 
PyCharm Community Edition is free.
Thanks!
&gt; Assuming integer division and np.floor do precisely the same thing Why would you think this? Can you post a code example?
Idle, like the big boys do.
There are loads of ways to optimize. What hardware are you running on? Sometimes 15 minutes with the config file and you can customize it to run only what you want and speed it up.
Yes - use this. 
So not yet == never?
Python 2 is obsolete and frankly, unicode strings are reason enough to use Python 3. I use PyCharm, but a lot of people also like WingIDE.
I wouldn't be, there's a lot of people, like me, who write python *for fun* ... I don't mind a short bit of work to repay myself a little for the cost of at least a tiny portion of the Red Bull addiction I used to have.
python 2.7 vim Source: I write Python professionally and have for the last 5 years. Nobody I've ever met outside a student or neophyte is using Python 3. Python has a pretty low barrier to entry so I would imagine all kinds of morons are going to down vote me. 
integer division does have an inline operator... np.array([1, 2, 3, 4, 5]) // 2 array([0, 1, 1, 2, 2]) 
Hating the new update. It is a resource drain compared with 2017.1. My machine can hardly keep up. But it might need an update to JRE? Can anyone confirm?
Just started learning python not too long ago and currently redoing some old matlab assignments from school with it 
This is a jerk thing to do. Don't be a jerk. 
I agree that `np.floor_divide` is equivalent to `//` per manual. Integer division is a very basic operation on a fundamental data type so python has a built in operator `//` for integer division. There is not common alternative specification of integer division as a sort of ceiling-division (notice that numpy does not have a `np.ceil_divide` either) and so there is no operator for ceiling division in basic. python. Python does not have a floor function or a ceiling function. These are provided by libraries like `math`, `numpy` and `gmpy` and are designed for different use cases. For instance, `np.floor` and `np.ceil` are designed to operate efficiently on arrays and do not have much to do with the python built-in functions. The designers of numpy _did_ over-ride the built-in mathematical operators for numpy data types so that built-in operators worked with numpy data types. np.array([2,4,7]) // np.array([1, 2, 3]) # cf [2,4,7] // [1, 2, 3] # does not work TL;DR: The fact that there are `ceil` and `floor` functions in numpy does not imply that both variants of `*_divide` should exist (nor that they should have operators). The reason we have a `//` operator for numpy arrays is because `//` (integer division) is a standard python operator. Supporting this operation means numpy implements a `floor_divide` function. There is no operator for `ceiling_divide` and therefore numpy does not need to implement such a function. 
Wow, that makes a lot of sense. I had a few questions, but your comments and code answered all of them. Seriously, thanks a lot! 
Thanks! I didn't know.