I guess I forgot to say that I want to discard the default help page and specify my own help page but I can't find out how to do that.
ok but how much ram/ memory do take a hello world program for exemple ? because embedded devices have like 2GB and a little 4 core cpu
Thought I might aswell re-type this. It works for me but not whoever I send this to
Thank you, as said in my main post I'm working on Linux, I don't plan do implement a lots of things just an application with 4 threads, one to do http requests, another "event-based", and two others pooling constantly 
For a second I thought you meant you had been spelling "Python" wrong and only realized it when reading the book. But yes, I agree, Fluent Python is great.
Is this [Custom 'usage' function in argparse?](https://stackoverflow.com/questions/21185526/custom-usage-function-in-argparse) what you're looking for?
[Tkinter's](https://wiki.python.org/moin/TkInter) a good gui module.
First, pick a GUI library. [Here's the most popular ones](https://www.reddit.com/r/learnpython/wiki/faq#wiki_what_gui_should_i_use.3F). --- If you have more questions like this it's better to post them on /r/learnpython. Include which version of python and what OS you are using, and a description of what you are trying to accomplish. 
Define Rest API. 
Google it.
https://stackoverflow.com/questions/671118/what-exactly-is-restful-programming
This is an amazing book. 90% of the times, I just have read the code snippets (which are plenty below every explanation) and it explains things. Plus the summary at the end of chapters can itself be converted in to a cheat sheet. 
I know this is pathetic of me but I cant find the part of the page that specifies how to add or change the options that bring up the help page.
It's toward the bottom of the page, it just takes adding help="whatever you want" in the parser.add_argument argument.
Two of your class functions do exactly the same, you could just use one of them to reduce the code length even further
I think you and I are misunderstanding each other? What I think you are referring to is this line `parser.add_argument("y", type=int, help="the exponent")` which [if I understand it correctly], is saying that when the help page is brought up, the contents of that string will be displayed. What I am looking for is a way to specify a custom option argument that will bring up the help page.
Also if would be more pythonic to use [-1] to access last element.
Why do you say cancer?
Quite frankly that makes no sense to me at all. Can you give actual examples of what you want to see rather than plain words?
http://pages.cpsc.ucalgary.ca/~bdstephe/217_F17/index.php My unis intro to python course. 
Hi, I hope you are doing good. Hows the Python course going?
Pycharm is worth the learning curve. It makes beginner mistakes a million times less likely. 
Pycharm took me all of 10 minutes to configure. Git is built-in. I use other programs in addition to pycharm, but I rely heavily on it for debugging. 
This is for Java.
He brings disrepute on the field of Data Science. He pays for reviews of his half-assed books. He creates fake writer profiles for DSC give the appearance of diversity and legitimacy. These things are both public record, just search for them, plus more.
Depends on skill level on the person. IDE is added complexity. Better to learn the basics of a language by then start using an IDE. YMMV.
It is rather simple. list[4] means 5th element of list, since we start our count from 0. so list[4] is 5. list[list[4]] becomes list[5] which is the 6th element in the list which is 8.
Generally, these sort of questions should be posted to [/r/learnpython](reddit.com/r/learnpython), but to answer your question, notice the following: First, you have created a list type and assigned it to the name, "list". list = [1,1,2,3,5,8,13] The elements of any list can be accessed based on their 0-based index (ie, to retrieve the first element, you would call list[0]). **Step 1: list[4] = the fifth element in your list = 5** substitute the value of list[4] into step 2. **Step 2: **list[list[4]] = list[5] = the sixth element in your list = 8** Hope this helps. 
List position starts with 0,1,2, etc. so list[4] returns the fifth item, which in this case is 5. Evaluate your way inside out so list[list[4]] becomes list[5] which returns the sixth item, which is 8. Happy New Year and happy coding!
Thank you :)
Thanks :)
Hanks :)
If you don't have one already make sure you look for a side project that interests you and start on it as soon as you can. Programming is a lot more fun if you have a goal. Come visit us on /r/learnpython if you get stuck. 
It has nothing to do with 1D vs 2D or nD. It has to do with the type of the element. You will only change the values with mutable elements like lists. Immutable values like integers are safe. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
What were you doing incorrectly, if you don’t mind me asking?
I think when you have a solid grasp on oop that's when larger projects start to be feasible
totally... I TIL'd "I'm a Data Scientist!"
&gt; python at least in my expirence is not very well known for its beautiful GUIs What? Go look at PyQt. Ever seen Spyder? &gt; You could easily couple that with pandas to get something ugly but functional. Pandas doesn't implement anything related to GUI. It can export to HTML, but pandas is just a table and it's also one of the star packages in Python because of how fast it is and how efficiently it processes data. Excel isn't pretty either and it's easily worse in every performance metric than pandas. Python can also look like Excel if that's what you want...there's a reason people implement pandas as an Excel alternative. &gt; I don't remember the name of the drawing module No kidding...
That could very well be true. It's a dilemma how much to write from scratch and how much to use existing numerical libs. For FFT/IFFT an existing JS algorithm was the basis. For inversion it wasn't needed. For eigenvectors /eigenvalues I don't know. Some of the JS code I saw descened directly from ALGOL 60 code via Fortran. That doesn't mean it isn't OK. In libs like LAPACK that's normal. But it remains rather peculiar to encounter C# code with a few hundred goto's, one letter variables etc., just because it isn't rewritten but step by step based on solutions that are now 58 years old. The following is recently written C# code: L60: if (en &lt;= 1) goto L1001; if (!matz) enorn = en + 1; its = 0; na = en - 1; enm2 = na; L70: ish = 2; // Check for convergence or reducibility. for (ll = 0; ll &lt;= en; ++ll) { lm1 = en - ll - 1; l = lm1 + 1; if (l + 1 == 1) goto L95; if ((System.Math.Abs(a[l, lm1])) &lt;= epsa) break; } L90: a[l, lm1] = 0.0; if (l &lt; na) goto L95; // 1-by-1 or 2-by-2 block isolated en = lm1; goto L60; I admire the stamina of the one who wrote it, but also feel an itch to start with a fresh slate... Another difficult point is wether or not to avoid EMSCRIPTEN and C++. For Transcrypt itself it's clear. Going via C++, ASM.JS or WASM and CPython leads to unacceptable pageload times for an average web app. But for numerical processing it's different. Processing times become more important than pageload times. How much use is being able to load a page in 0.1 rather than 30 secs, if the computation on that page takes an hour rather than 3 minutes. In short: Good to discuss these things and maybe multiple paths should be followed: Descending to C++, encapsulating JS libs, writing from scratch, using GPGPU. I don't know. For now it seems important to include at least the most needed algorithms correctly and robustly. Providing more efficient backends can always happen later. 
I am aware that I don’t answer your exact question. Depending on your use case, e.g. hosting dash dasboards for your team seems easy with the plotly enterprise product.
There is only one list being created, and changing the list through any of the references to it will be seen by all of the others, just like if you had manually created references to it. In [1]: lst = [0] In [2]: a = lst In [3]: b = lst In [4]: a[0] = 1 In [5]: b[0] Out[5]: 1 You can verify this by looking at the id of the references to see they are all bound to the same list object. In [6]: lst = [[0] * 5] * 5 In [7]: id(lst[0]) Out[7]: 140614656872032 In [9]: id(lst[1]) Out[9]: 140614656872032 In [10]: id(lst[2]) Out[10]: 140614656872032 etc...
Read this: http://wesmckinney.com/blog/apache-arrow-pandas-internals/ &gt; my rule of thumb for pandas is that you should have 5 to 10 times as much RAM as the size of your dataset. 
I mean.. when I run a = [0] list = [a * 5]*5 list[0][0] = 1 print(list) output is [[1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0]] But if * makes shallow copy, a * 5 may make [a, a, a, a, a] and if I change the value of a, all of values may be changed. But It change only very first value. why It happens? 
Because you're only changing the first item of the list... list[0][0] = 1 The `list[0]` is a reference to the list `a` so `list[0][0]` is the first item in `a` equivalent to `a[0]`.
&gt; This would be much better if it was in a Jupyter Notebook with a Table of Content. Apart from tit them being useless for the millions of Python users who don't use Jupyter.
&gt; like ~~implicit format strings~~ Literal String Interpolation. No, you got it right the first time. They aren't string literals of any sort. They are actually executable code that implicitly apply formatting. 
&gt; These are strings "" prefixed by an f: f"" (formatting strings). They're not strings. They're executable code that happens to use similar syntax to a string and implicitly return a formatted string.
It is an utterly fantastic book. I also recommend Effective Python as well, if you want a shorter book (though I recommend reading both). And if you are really stretched for time, just watch this Raymond Hettinger PyCon talk, [Beyond PEP8](https://www.youtube.com/watch?v=wf-BqAjZb8M)
The expression `[[0]*5]*5]` evaluates to `[[0,0,0,0,0]]*5`, that is, five times the same list instance of five 0's. If you assign something to an element in the first list, it's the same as assigning something to any of the other four lists, because each of the elements in the other lists. What you want is five different lists in the outer list, you can do it for example like this: `[[0]*5 for _ in range(5)]`. This is a list comprehension that evaluates the `[0]*5` expression five times and puts each result in the outer list, the same as: L = [] for _ in range(5): L.append([0]*5) 
You imagine correctly!
Thanks. I got this.
Many of the built-in read functions (read_csv, read_excel...) can read read in chunked data, so look into the ``chunksize`` parameter of those functions. Having said that, yes, you have to have RAM for calculation also, and Pandas does use more RAM than the pandas guys themselves would like. They are working on it, but it will be a while yet before it's ready.
That's a great book enjoy. 
The case studies in Think Python are great, project ideas will come as you work through, I get most of mine in the shower. 
Currently certain libraries which are platform dependent wont work, I need to use precompiled packages, which I am doing only for a few.
Playing a local video starting at a particular time isn't diffucult. I like Python and VLC so I'd use those. Trying to sync an internet hosted video with a local time source is fraught with difficulties, but still doable if you want a stretch goal. I'd use option 1. ;)
Well, we need to find out what the error is in order to help you.
In case no one read the cheatsheet (which clearly no one could be bothered doing before breaking out the pitchforks), the subtitle is *Python Basics*. The implication is that this is the first of several cheatsheets relating to Data Camp's Python For Data Science course. A quick good search turns up several other pages. https://www.datacamp.com/community/data-science-cheatsheets
There is an entry in the Python FAQ * [How do I create a multidimensional list?](https://docs.python.org/3/faq/programming.html#how-do-i-create-a-multidimensional-list) * [Common Sequence Operations](https://docs.python.org/3/library/stdtypes.html#common-sequence-operations) Suppose you have two lists a = ["a", "b", "c"] b = [ 1, 2, 3] Now creating a new list which contains both lists as elements c = [a, b] I guess it is clear that if you modify a or b this is reflected by c and vice versa &gt;&gt;&gt; a.append("d") &gt;&gt;&gt; c[0] ["a", "b", "c", "d"] So we could have created c by list concatenation using the `+` operator c = [a] + [b] `[elem] * n` means concatenating `[elem]` n times with itself. Thus c = [a] * 3 equals c = [a] + [a] + [a] and results in c = [a, a, a] In your example `a` would be `a = [0] * 5`. Rewriting the assignment into multiple lines a = [0] * 5 c = [a] * 5
It's dask for those who are failing to google it. 
so what's the question?
I don't think that basic arithmetic operations should be in any cheat sheet. If one doesn't know those, he shouldn't use a cheat sheet to cheat himself/herself
"this is a string" "1" &lt;- still a string False &lt;- This is a boolean "False" &lt;- This is a string 
Please post this to r/learnpython. 
Thanks, I would have never got that :D
[removed]
I have some comments about your code. * Python 2 already has a print. it is rarely necessary to import the Python 3 version. It will change some code. Replace print(something) with print something * Use descriptive keywords. Replace def log(aA, aB, aC, aD): with def log(name, amount, type, alsoPrint): or whatever aA, aB, aC and aD mean * What is finalLog exactly? I guess it is some kind of global list. In that case I advice you should start the method with global finalLog * Don't use range(len(. It is almost never needed. In your case, replace: for i in range(len(finalLog)): print(finalLog[i]) with for line in finalLog: print line * The line ´input(EOP)' can be removed. It will exit the program immediately. If you don't want that, replace 'EOP' with 'Press any key to exit'. This makes it clearer what happens. * If aD is True, the log-function does not return anything. If aD is False, the log-function does return something. This makes your log-function very unwieldy. Please avoid this.
this is a terrible piece of code. what does this even supposed to do? no wonder you're confused
Sorry, didn't know about that sub. I actually returns values. This is just the last function in a long line of functions, I just don't want to directly print, but rather return a variable's content. The issue is I can't print the list's contents in different lines and returning just aB does nothing.
Does it support Cloudflare? I mean, I'm not sure if former versions did. I have had some trouble scraping Cloudflare "protected" sites that require a login. 
Some context: This is for a school assignment. I have to use Python 3. I'm using proper nomenclature, just trying to be clearer in this context. Yes, finalLog is a global list where a few records are inserted. I wasn't aware of line usage, thanks. Unfortunately I can't use stuff I didn't learn in class (don't get me started on that one...). EOP is just for this example, it has something similar in my native language. I used that boolean to make sure another part wouldn't fail in some cases. As it stands it outputs the list's content if true, if not, it just outputs the last user input. In the end I just don't want to use print inside the functions because that's what my teacher is requesting.
It's just a part of the overall code for a school assignment and I'm under some restrictions on what I can and can't use.
That's almost worthy of a meme.
Please, remember that correlation doesn't imply causation
do it
[This one, "Fluent Python"](http://shop.oreilly.com/product/0636920032519.do).
The gif shows the shell input composited with the view in the Turtle window. As you can see the user can enter a direction and a cube will be drawn in the appropriate location. At the start the user can choose the somewhat nauseating rainbow option shown, or a greyscale version where every cube is the same colour. Code: https://github.com/razzledazze/Turtle-Cubes
PDF link: https://s3.amazonaws.com/assets.datacamp.com/blog_assets/PythonForDataScience.pdf
Generators agree great!
sorry? 
Just move the prints out of the log method and into the main program flow. final_log = ['T1200: 2.4, Barry', 'T2304: 3.2, Nigel', 'T900: 9.1, Helen'] def log(value, name, code, print_bool=False): global final_log final_log.append('T{}: {}, {}'.format(code, value, name)) if print_bool: return True else: return name log_result = log(1.2, 'Dusty', 1213, True) #Change True to False if log_result == True: for line in final_log: print(line) input('EOP') exit() else: print(log_result) So you end up with a method that has only 1 effective line, that is carried out whatever the aD state. Why use log at all? final_log.append('T{}: {}, {}'.format(aC, aA, aB)) if aD: # Print entire list for entry in final_log: print(entry) input('EOP') exit() else: # Print last user string print(aB) 
Studying for exams!
the mem usage is "normal", you could store your data in a different format, parquet for example. This would improve read time. The memory footprint, once it's loaded, can be improved by setting the correct data types. dataframe.dtypes will give you the datatypes. object types use more memory than floats, ints and dates. They are also more resource intensive when doing operations. dask improves the performance of some operations but it requires you to learn a slightly different api. 4gb (how many rows/columns?) doesn't seem like a lot depending on the specs of your machine, you should be able to carry out transformations and aggregations without much trouble. 
I realize now that they seem to be doing a &gt; comparison between a list and an int here. 
Your code will gain no traction here. Why? Because of the presentation. On mobile reddit, this is just a mess to look at. Try posting to github and then sharing the link here. Write up a nice readme with a couple examples of usage. If the code isn't worth that time, it probably isn't worth posting.
It looked fine for me. But thanks for the heads up - I'll post it to github, too.
Yes, but I can't use stdout... Kind of screws me over that I can't use anything aside from what I'm given.
I'll try that when as soon as I can, thanks.
I found myself enjoying the slides a lot; I don't know if they're still as good today; if any one here knows better feel free. ps: free talk https://www.youtube.com/watch?v=ZzfHjytDceU
I agree. While Cython is good for speeding up the code (for example, cython might actually outperform pybind11 for microbenchmarks - https://github.com/pybind/pybind11/issues/1227#issue-284676826), many use cases involve preserving the original C++ code - that's where pybind11 comes in handy. I don't think there is any one true answer. Depending on the use case, either of the two can be more suitable.
If the data isn't pristine, pandas will load the whole sheet as strings and then cast them down to the appropriate type once the whole sheet is in memory. This means a column of integers that contains a single NA is loaded in as strings and then cast down to floats to deal with the Naan One solution is to load it column by column - read in the first row (to get the column headers) then iterate through the column names loading one column of the file at a time, then it will downcast after loading each column rather than loading the whole sheet (it's a bit slower, unless you are hitting RAM limits and using swap)
It is a good book. Be sure to do the exercises. If you get stuck on one, it's better to move on than to let some hard points impede your progress. Mark the ones you're stuck on and come back later and it will likely be easier on the second try.
Very cool!
/r/learnpython 
If only there were a set of letter keys more commonly associated with directions 🤔
What would be a primer for using it here? 
https://i.imgur.com/Eq0JAbD.jpg
Wasd are you talking about?
You're looking for r/learnpython. Always start by breaking things down into smaller pieces. &gt; I need to write a script that asks a number Can you do this part?
`hjkl` because of the ADM-3A terminal.
Start here [Python Core Mentorship](https://www.python.org/dev/core-mentorship/).
I subscribed but things aren't clear here.
I subscribed to this.but things are not clear.
O(n). computing a hash is also O(n), so that does not help unless you can precompute the hash. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
esdf master race
okay. Do you have any idea that you want to do a project on using Python?
Better would be sync your system clock correctly - for that, you'll want to use NTP (on Windows, it's "*Automatically synchronise with an internet time server*" in Date/Time, on Linux it's `ntpdate` or `ntpd`). I don't know how else you'd "scrape the time".
Questions like these belong in /r/learnpython.
It's r/learnpython, no underscore.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#2: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#3: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
No not exactly, I need to understand the basics before I do anything.
Is this a decent set of books? 
Arrows?
Good work you have done on your blog series. To add more content about Python descriptors, you can also add the following notes. Python descriptors are a way to create managed attributes. Among their many advantages, managed attributes are used to protect an attribute from changes or to automatically update the values of a dependent attribute. Descriptors increase an understanding of Python and improve coding skills. When are Python descriptors needed? Consider an email attribute. Verification of the correct email format is necessary before assigning the value to that specific attribute. This given descriptor allows email to be processed through a regular expression and its format validated before assigning it to an attribute. In many cases, Python protocol descriptors control access to attributes, such as protection of the name attribute. You can get to learn this and many other programming technologies at Holberton School (https://www.holbertonschool.com/). Learn all the fundamentals of software engineering in a 2-year Software engineering program at no fee at all! Only a small percentage is charged on completion and this is done in favor of our students. Compared to boot camps and online resources, you only get to learn for a few weeks. Good luck on your Python coding journey. 
Yeah, there's a lot of good books in there.
Lol Packt books are so easy to find for free online
&gt; l of 10 minutes to configure. Git is built-in. I use other programs in addition to pycharm, but I rely heavily on it for debugging. Is Python better than Online Python Visualizer for debugging small (&lt;500 lines) programs
So?
&gt; spaghetti anyway I worked with a data scientist who learned about assert, for the next few weeks his code would look like # create an empty list l = list() assert(type(l) is list) assert(len(l) is 0) Drove me up the fukkin wall. 
 It's Pigs and Bulls, here is my code in its entirety using what I can: import random def rNGen(): d1 = str(round(random.random() * 9)) d2 = str(round(random.random() * 9)) d3 = str(round(random.random() * 9)) d4 = str(round(random.random() * 9)) while d1 == d2 or d1 == d3 or d1 == d4: d1 = str(round(random.random() * 9)) while d2 == d3 or d2 == d4 or d2 == d1: d2 = str(round(random.random() * 9)) while d3 == d4 or d3 == d1 or d3 == d2: d3 = str(round(random.random() * 9)) while d4 == d1 or d4 == d2 or d4 == d3: d4 = str(round(random.random() * 9)) num = d1 + d2 + d3 + d4 return num def uInput(uI, num): while (len(uI) &lt; 4) or (len(uI) &gt; 4): uI = str(input('\nGuess the number... ')) comp(uI, num, t, p) return uI def comp(uI, num, b, p): if num == uI: win = True b += 4 compOut = 'B:{a} P: {b}'.format(a=b, b=p) log(uI, compOut, lSize, win) return compOut else: win = False for i in range(len(num)): if uI[i] == num[i]: b += 1 if (uI.count(uI[i]) &gt;= 2): p -= (uI.count( uI[i]) - 1) elif (uI[i] in num): if (uI.count(uI[i]) &gt; 1): if p &lt;= 0: p += 1 else: p += 1 else: p = p if p &lt; 0: p = 0 if p &gt; 0 and b &gt; 0: compOut = 'B:{a} P: {b}'.format(a=b, b=p) elif p &gt; 0 and b == 0: compOut = 'P: {b}'.format(b=p) elif p == 0 and b &gt; 0: compOut = 'B: {a}'.format(a=b) else: compOut = 'Incorrect values...' log(uI, compOut, lSize, win) return compOut def log(uI, comp, lSize, win): finalLog.append('B{c}: {a}, {b}\n'.format(a=a, b=b, c=c)) if win: for i in range(len(finalLog)): print(finalLog[i]) input( 'EOP') exit() else: return print(comp) print('Pigs and bulls.\n' 'Luís da Silva Piteira: ex14910@alunos.uevora.pt\n') # working storage uI = '' num = str(rNGen()) b = 0 p = 0 lSize = 0 win = False finalLog = [] # main while win == False: lSize = lSize + 1 uInput(uI, num) 
DO YOU HAVE TO SHOUT SO LOUDLY???
Oh yeah, look at all this nothing I'll give away to those in need. Back from where I come from, people survive with air, water and love. The word "money" is a myth created by the capitalists to make people THINK they need anything else beyond the previously mentioned holy trinity. You see that kid with cancer? He's fine! He'll survive, after all, surgeries are free, right?
What the fuck does spyder and pyqt have to do with GuI of a standalone program he is trying to write
Which ones are worth the read?
Oh, that's not encouraging. Thanks for the input. It's just pickled dataframes. 
Dude, you need a chill pill. 
Is this bundle worth getting? 
No, WSAD. I said letter keys because arrow keys wouldn't work for a simple CLI
I use notepad++ for quick edits and small scripts.
Whoops. Thanks for the correction!
Wow. Rosettacode seems a very cool site!
It's up.
It's a pickled pandas dataframe. &gt; 5 to 10 times as much RAM as the size of your dataset. lame. For now I've switched to numpy arrays and lists of labels, which is what I would have done before finding pandas. I guess I could put that into a class that just gives you an array you can index by int or arbitrary labels. I'd like to find something better though. 
Better yet use a search engine as this question has been asked trillions of times.
Shameless plug, [`gevent-tasks`](https://github.com/blakev/gevent-tasks) offers similar functionality but for a single process utilizing greenlets.
Plus that comment is useless.
how good are these books
Spam bot. Ban it. 
https://imgur.com/a/M8z35
^(Hi, I'm a bot for linking direct images of albums with only 1 image) **https://i.imgur.com/UiUUQIw.jpg** ^^[Source](https://github.com/AUTplayed/imguralbumbot) ^^| ^^[Why?](https://github.com/AUTplayed/imguralbumbot/blob/master/README.md) ^^| ^^[Creator](https://np.reddit.com/user/AUTplayed/) ^^| ^^[ignoreme](https://np.reddit.com/message/compose/?to=imguralbumbot&amp;subject=ignoreme&amp;message=ignoreme) 
I would have to say no. I bought the bundle earlier today, and after spending 4-5 hours looking through the books, they are inferior to many of the free Python resources available on the web. Probably the most regretful Humble Bundle purchase I have made to date.
Did you bought all of them? Also what do you think are better ones in bundle?
Check line 30. Seems like you have two import statements there. Happy hunting
Wow, that looks awesome. Appreciate the recommendation! Definitely going to check that out. Still glad I did my project though, I learned a ton and am looking forward to the next one (whatever that is).
Oh absolutely! If nothing else, you could look at [this page](https://github.com/home-assistant/home-assistant/blob/dev/homeassistant/components/light/lifx.py) for the LIFX implementation and see how yours and theirs compare. Granted there should be a fair amount of syntax difference since the lifx component is written to accommodate asyncio, but the core implementation details should be very familiar to you! That's a fun project though - I did very much the same thing when I found the LimitlessLED bulbs ... and then also found Homeassistant and lost my shit ha ha
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [home-assistant/home-assistant/.../**lifx.py** (dev → 1b4be04)](https://github.com/home-assistant/home-assistant/blob/1b4be0460c0d04aef77faa606f69e6f1be89f29f/homeassistant/components/light/lifx.py) ---- 
Packt doesn't really have a good reputation when it comes to their books, with some exceptions here and there. I usually stick with the O'Reilly books.
I created a thing that templates out jinja templates from environment vars, YAML input file, or both. https://github.com/whereismyjetpack/yajinja I was inspired by envtpl, and j2cli (one templates from env, other from json) I wanted both, and I wanted YAML instead of json It's my first "real" thing. Feedback would be lovely. Thanks!
&gt; PS - can anyone tell me why if I try to print: print(Dictionary_Check("hello", Dict_Dictionary)) I get: &lt;generator object Dictionary_Check at 0x039336F0&gt; Because you are using `yield` instead of `return`. `yield` creates a generator that you need to iterate over.
I'd like to upgrade my Python skill in 2018. Has anyone read any of the books in the bundle? Which would you recommend?
&gt; tend to get the people who like to pile on shit about Apache and mod_wsgi For what ever it's worth, I appreciate your work and use it frequently.
You should be using Homebrew and keeping your Mac pristine.
dat flickering
Listen, I did not mean to misinterpret you. I feel like you're busting my chops here, I legitimately would like to know what the various technical reasons are. And I'm sorry that you're the subject of peoples' rants and shit, but I was sincere about wanting to know why the guy who developed `mod_wsgi` is posting the things you did. I was just hoping to learn something. I really respect you, your work, your contributions, and I fully apologize for any sort of inaccurate takes in this post. I'm not sure what part of "Right now I would say the chances of a positive result are quite low" I misunderstood, but whatever - I'm sorry. I really am. I was basically just hoping that someone would come in and drop some sick technical info on the challenges with async gateways and Nginx vs. Apache. Anyways, you've been correcting me [since 2011](https://stackoverflow.com/questions/5792295/problems-with-getting-mod-wsgi-to-work-with-apache/7670454#7670454), so I guess I'll just mark this down as another interesting experience with someone who's done some amazing shit.
First of all, /r/learnpython Second of all, upload your code to Github, pastebin, or use reddit's built in code formatting feature (add 4 spaces or a tab before each line - this is easily done in a text editor.) As it stands, it's not readable.
Depending on exactly what operations you intend to do on the DataFrame, dask can try to optimize/minimize the amount of data that needs to be held in memory at any given time.
Thanks for explaining that to me, this is super-fascinating. I don't currently work on any projects that require async/websockets, but I'm obviously excited to see the edges of that frontier pushed further and further. Those sound like some seriously daunting challenges, so again, much respect for making the attempt to tackle them. And sorry again for the poorly-conceived post title! Best regards.
okay..let me know if you would like to do a project together.
Sounds like a homework assignment. Are you asking someone to engage in https://en.wikipedia.org/wiki/Academic_dishonesty ? Or to fix your indentation?
thank you! Would love to in the near future, can you show me some projects you have done in the past?
Thank you. I Just got an ereader for christmas and was looking for programming books. Will get all of these
Packt books are always low-quality garbage.
Why don't you go for golang, if not go then I think Node.js (koa) is a good choice. 
It's going to be a long time, if ever, that you have so many users that Flask or Django become a bottleneck for you. A well written app with a proper WSGI front end will happily handle tens of thousands of users. Even beyond that, there are simple ways to scale horizontally that would prevent this from being a real world issue, and you're far more likely to run into bottlenecks in other parts of your stack such as the DB. Use the language &amp; framework you're most comfortable with. Don't get lost in prematurely optimising your tech stack or you'll never actually write any code. 
use whatever you know best bigger outfits with more users are using either, and its working for them
correct horse battery staple works because the words are random once you start using song lyrics etc, you become vulnerable to phrase-based dictionary attacks 
If you're interested I found the [PyCon 2016 keynote](https://www.youtube.com/watch?v=bSfe5M_zG2s) absolutely fascinating and thoroughly enjoyable, YMMV :-)
You want your web framework to be async or business logic to be async? If former, use `gunicorn` or `uwsgi --gevent 1000` will do. You can achieve same or faster speed than nodejs. If latter, good luck.
I second this. I was excited to see a Python book bundle and then I saw it was from Packt. Instant disappointment. Their books are basically just printed blog posts. The one upside of them is that you can get books on niche topics that nobody else would publish.
Learning how to use Scrapy and more advanced usage of BS4
Found that among others. I had copy pasted some code and it created errors. But now [this.](https://i.imgur.com/SsxnzLm.jpg) and [this](https://i.imgur.com/OUUesq8.jpg) is the correct line. Can't see what's going on. Thoughts?
Please ask your questions on the appropriate subreddit, /r/learnpython :)
 - no retry - no distributed scheduler - no unique spawning restriction
Thank you so much m8 ;)
Most of Celery's behaviour depends on how you configure it. I would look at http://docs.celeryproject.org/en/latest/userguide/optimizing.html to learn how to configure your setup to best match your application needs. It is recommended to match the number of Celery workers you run per machine to the number of CPU cores. Celery, like Django executes in a sequential, blocking manner. This means that the executing thread which runs your celery task waits for it to finish. If your tasks mostly do IO-bound operations, such as fetching data from database or filesystem or 3rd party server, then you may want to consider adding concurrency capabilities to your workers. Celery supports the concurrency model based on Eventlet, so you may want to look into that. There are better ways to handle concurrency with Python 3.5+ and Asyncio but as far as I know Celery does not support that out of the box
I am working on creating a simple Invitation emailer, it takes bunch of fields as an Input {using Tkinter UI} and creates and Emails PDF using AWS Libraries
There are options (possibly better) other than Node as some have suggested. Interestingly Raygun dropped Node in favour of .NET Core because of issues ... https://raygun.com/blog/increased-throughput-net-core/
Yep, /r/learnpython But No, this should have nothing to do with installing Python. Is it possible that Python did install? Just because it's not working in your command window doesn't mean that it isn't there. Just in case: Google "adding Python to the environment variables in windows" 
`Report &gt; This is spam &gt; Submit`
That's really unfortunate. I probably won't pick up this bundle then.
I really thought it was going to be that stupid 👌 gesture.
Interesting. I've been playing with RESTful APIs recently, and have been worried about how to authenticate requests, so that the API will only respond to clients with a good key. Is this spec meant to solve that use case, or is it meant for another purpose?
Yes, that is right. I am trying to collate the feedback and then I will try to do the changes so that it is useful to future readers. Thank you!
Not to be that guy but 99% of the code you posted looks like cargo culted boilerplate. If you were my intern I wouldn't think you are fully aware of what this does or why each segment of code is there. 
OP writes Python like it is some other language he doesn't understand either. 
A. Not really. Worker prefetch task to execute (in default 4 * num of CPU cores) and this not affect task runner. B. Yes. Tasks with ETA works slightly different than normal tasks and are sent directly to the worker - this also "hack" prefetching to not block task assignment to the worker (whenever a task with an eta is received prefetch_count is incremented - when the task is processed - is decremented again). C. I think not, but you should inspect your worker, to check what's going on. You can disable prefetching as well (-Ofair) - this may help but depends on what task you running. If your task can retry on failure - this may block your worker as well. "Do you know how to avoid the worker blocking while staying with the Celery domain? " - more workers/more queues ? set timelimit for tasks?
How is it so far? 
How exactly are you going to make enough money to support your network? 
Exactly. It both authenticates and encrypts the key using modern crypto (IETF XChaCha20-Poly1305 AEAD) and at the same time gives you freedom to choose what kind of payload to embed into the token.
Reminds me of the old webrings. Cool.
So, for the short term you won't be earning any money. Which raises the question how are you planning on supporting yourself. Let alone your idea 
We are working on this project part-time and are not relying on this for income. Initially the project will be low cost as we are also self administrating the servers. As it scales larger, we hope to make enough revenue for the service to support itself.
Yes, there is currently no product as we are still in active development.
Thanks! so if it prefetches 4*num_of_cpu_cores tasks, but they're all delayed, what would happen?
This is a mixup of character encodings. Something is using cp950 (Chinese) while expecting unicode/UTF8. Which line is the error at? The reading or the writing? And what python version are you using? 
If you're into logic programming, see also [kanren/logpy](https://github.com/logpy/logpy) and [pydatalog](https://sites.google.com/site/pydatalog/home).
The oFile.write line. I am using Python 3.
Try using a different encoder: `with open( r"C:\Users\User\Desktop\Test.txt" ,"w", `**encoding="UTF-8"**`) as oFile:` Please ask your questions in r/learnpython next time
Understanding comes with time: Hungarian notation scars for life.
So you're giving the world back the [webring](https://en.wikipedia.org/wiki/Webring)?
**Webring** A webring (or web ring) is a collection of websites linked together in a circular structure, and usually organized around a specific theme, often educational or social. They were popular in the 1990s and early 2000s, particularly among amateur websites. To be a part of the webring, each site has a common navigation bar; it contains links to the previous and next site. By selecting next (or previous) repeatedly, the user will eventually reach the site they started at; this is the origin of the term webring. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community is not a fan of "how do I..." questions, so you will not get the best responses over here. On /r/LearnPython the community is actively expecting questions and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. No matter what level of question you have, if you are looking for help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I've read most of those books, I paid a lot more than that, but while there's some significant overlap between several of them the sum total is a pretty solid understanding of the language. With the caveat that it requires a LOT of practice, and a recognition that several of of them are for intermediate to advanced users of Python, that some are fairly niche, and that all are probably at least a couple releases behind the current state of the language.
There are similarities, but it won't act exactly like a ring. Eventually it'll have a mix of sites with and without handelads on them.
What version of Python are you using? The statistics module was added in 3.4.
😢
That is because you named your file "statistics.py". The import statement is importing itself because the name shadows the standard library module.
The scheduled tasks are prefetched from the queue, but not acknowledged until they are executed. Prefetch count will grown meaning that the worker received incoming ETA tasks. This should not block worker but you should inspect this because delayed task are stored in RAM and there may be a problem with resources.
Why would a site that wasn't advertising on your network want to display advertisements from that network? I mean what's the incentive? The incentive for AdSense is obvious, but you're apparently setting out to create a model that can't obviously pay people for displaying your content to their audience.
Wow, hadn't even considered. Thanks for the help. I'll be extra careful naming files now. Had no idea that could happen.
We plan on eventually bringing in sites that will pay to have their sites advertised on the network without running handelads on their site. This will also enable us to finance the required resources for running the site as it grows.
What the heck OS are you on? There's [64 bit realeases](https://www.python.org/downloads/release/python-364/) for everything normal.
Much appreciated man! Thanks haha
These books will only help if you read them.
Admittedly, I have not looked at all of the packages listed when searching "nested dict" on pypi. However, having looked at the top ~10, I can say that delimited accomplishes sometheing unique and improves on existing concepts. 1. Delimited is designed to be interacted with using "paths" to represent a path to nested data. Delimited does not attempt to turn data into attributes, like a lot of "nested dict" packages do. # this is not a goal mydict.key1.key2.key3 = "value" 2. Delimited provides a Path abstract class that allows for implementing custom path types in a simple way... class Path(): ... # override me! def _encode(self, value): pass # override me! def _decode(self, value): pass ... as opposed to existing packages which lock you into a particular type of "delimited path" such as "delimited string path" "key1.key2.key3" 3. Delimited provides the `collapse` for collapsing nested data. This representation is appropriate for MongoDB queries which use "dot notation syntax" from delimited import DelimitedDict as ddict a = ddict({ "user": { "key1": "value", "key2": "value" } }) a.collapse() # returns { # "user.key1": "value", # "user.key2": "value" # } 4. 100% test coverage 👍 5. 100% doc coverage 👍
ijkm? https://www.urbandictionary.com/define.php?term=ijkm
This was my thought exactly. It’s a cool idea and hopefully it’ll work, but I have serious doubts. Best of luck OP! (Though I am pretty sure this is inappropriate for this sub. Then again, since you’re not up and running yet, you’re clearly not soliciting customers...yet)
Thanks flip and Enchant. Problem solved.
I’ve learned more from building shitty python apps than from reading stupid books me no like reading
Not asking for any specifics on how VAC works but do you have any suggestions to learn the basics of how this sort of thing operates? I guess it could be a server side thing looking at stats from the game and checking anomalies and then passing it for review on overwatch. Or is it something a bit deeper than that. Doing a small project for a personal project in fraud detection so I'm wondering what the approach is like.
Building a set of ansible modules and plugins to allow ansible to maintain some datacenter hardware. The learning curve has been steep due to the lack of documentation (specifically, action plugin writing &amp; best practices), but the whole process has been wonderful due to ansible's great design / extendability. 
Yup, Readers are leaders. Its probably the only thing I learned in College, the ability to read tombs of textbooks. It is probably the most powerful if you are really efficient in learning from textbooks. This is something you should purchase, even if you don't read most of the books. They are assets.
I disagree. Sure you have to build to learn how to build, but there's a lot of value in programming books, value that cannot be found in official docs or stackexchange. For example my favorite python book [Idiomatic Python](https://jeffknupp.com/writing-idiomatic-python-ebook/) covers things you could only really learn through reading other people's code or through discussion, but instead you have it in easily navigatable and digestable form. 
My two favorite things wine and Python. Sweet!
Making a bunch of jupyter notebooks to document my work (in neuroscience PhD) and more jupyter notebooks for an upcoming class I'm TA'ing. 
don't drink and slither
... ok, I like to encourage innovation, but let's call this a bit of Devil's advocacy. If you had a limited budget for making an ad buy, would you a) spend it on inexpensive, tightly-focused promotions on sites that your potential customer is *definitely* using, or b) on a new network the main elevator pitch of which is basically "haven't demonstrably got an audience worth advertising to? Well we'll help you advertise on other sites with similar problems!"?
Let me reverse the question at you: why do you want to avoid using classes?
First week back after the holidays is usually slow, taking the time to document some of the python/saltstack/packer/terraform/stackstorm workflows we made last year for automating AWS environment spin-up/spin-down/deployments.
Depends on you and the size of the project.
I can't speak to the quality of the books in the bundle - I haven't read them - but most of those books are on rather specific topics that are probably a waste of time for you unless you're interested in the particular topic. The bundle might be useful, but I definitely think you're much better off spending $30 for a single on point book that's at the right level for you and teaches you what you need to know rather than $12 for a random assortment of books. On the other hand, there's no harm in doing *both* if you have the time to spend going through a bunch of books. It can't but be good learning!
I think classes are difficult for new users to understand. My view is: a class can encapsulate both functionality and data. Then we can make instances of this class, each holding their own data and interacting with the outside (or internally) via methods. If you only need to encapsulate functionality, use a function. Use a class when there isn't a data type in Python which fully expresses the thing you are trying to represent. For example, if I'm calculating someone's age, I would just use ```int```, as it's fine for my needs. If you need to represent something like an Enemy in a game, you could create a class ```Enemy``` which contains data such as ```health``` and ```armor```, and contains functionality such as ```fire_weapon``` for when it shoots you. You could also then make another class ```FlyingEnemy``` which inherits everything from the ```Enemy``` class but has additionally functionality in that it has a ```fly``` method.
Mods in this sub don't give a shit about soliciting customers. Last time I reported one I didn't get any response at all. 
requests is not a preinstalled library. See here: http://docs.python-requests.org/en/master/user/install/#install
[Sebastian Raschka's Machine Learning Book](https://www.amazon.com/Python-Machine-Learning-Sebastian-Raschka-ebook/dp/B00YSILNL0#customerReviews) is very well reviewed. There's a newer version that came out last year, but you can purchase this entire bundle for less than the cost of this single book. If you're interested in this topic, you could do a lot worse.
You make a good point. To be clear, we're not attempting to compete against services like google adsense. I'm thinking more in terms of websites who would advertise on our service in conjunction to their other ad campaigns. And the price points would also have to be lower than something like google or facebook ads as to make it a viable side ad campaign. Plan B would be offering tiers to websites already participating in the ad exchange. So something like a free tier and than paid boosts - but I would like to avoid doing this if at all possible.
Anybody can view a Notebook.
I have a few (freely collected) pakt books, and I don't find them so great in general.
The last advices dealing with inheritance are not so good! For a *flying* enemy it would be far better to use composition. That way you could also have a *flying and swimming* enemy 😉 (where behaviors haven't got to be classes; often *callables* are sufficient in python, which makes lots of pattern far easier to use like in this case the *strategy pattern*) Inheritance is often a bad choice; in dynamic typed languages even more as you are not so tied into a type corset. 
This is a great question. I don't think you need classes for every python project. I think you will find veteran python programmers with many different views on when to use classes. In Python, classes allow for polymorphism. So I would recommend using them when you need polymorphism. Other advantages of Python classes are somewhat more debatable. 
I used classes on small projects early on and learned a lot of valuable lessons on them. Imo just start using them. Sometimes you'll look back and say we'll I didn't really need a class there. Then as you get more experience with them you'll know earlier on when you need a class. Then inheritance is easier to tackle later on because you already know how to use a class.
I moved my bitcoin trading bot from my gaming computer to a rpi3 and now it is actually profitable (until bitcoin swings wildly again....) as it costs like 1c per day to run and makes about 80c a day. All the API calls to make orders and pull live market data are in Python ofc.
Trying to get Kivy to work...
Trying to get Kivy to work...
Lol
Exactly
I typically write code that is 90% classes. There are exceptions: * Functions that simply do not make sense as a class - e.g. isolated calculations, utility methods. * Relatively small scripts - for scripts that are &lt; 800 lines long and mostly in one file, it's not atypical for me to not use classes, or to use them sparingly. A common form of refactoring involves converting non-object oriented code to object oriented code where it makes sense.
Ah I see. Thank you.
Yes, Packt has basically become O'reilly's shovelware imprint; cheap shit that basically dumps simplified package docs, some examples, and a few stack overflow questions into a book format but which it not at a high enough level of quality (*cough*) to actually be an O'Reilly title. Looking on that humble list there are only three that I would even take the time to torrent and only one worth buying and spending the time to read (and then only if you were playing with AI/ML.) If you like books to dive in and out of and to provide nice tricks to add to your toolkit, try one or two of the following titles: Idiomatic Python, Fluent Python, Effective Python, or Python Tricks and then just start writing code.
Is there a link?
Python is multi-paradigm,if you learn functional, OO, and procedural styles of Python you can end up mixing your use to fit the task at hand. 
Do you have a reason why people should not read that book? Other than you not liking Zed.
It's hard to make blanket statements about when you should or should not do anything; the specific tool for the job is determined by the details of the problem. That said, I'm fond of [Jack Diederich's talk "Stop Writing Classes"](https://www.youtube.com/watch?v=o9pEzgHorH0) on this topic.
Love this. Nothing wrong with K.I.S.S.
Pretty scathing feedback here: https://www.reddit.com/r/Python/comments/7nhijd/humble_book_bundle_python_by_packt/ I'd recommend finding one good python/programming book and reading through that. I've heard good things about automate the boring stuff, think python and I'm sure there are many more. You may also want to look into books about the art of software development in teams. Things like Mythical Man Month, The Cathedral and the Bazaar (though I haven't read them) might be really useful for managing teams. Quality over quantity is the key here, I think.
Wrong. The process is: 1. Read some 2. Try some 3. If try failed, go to 1 4. $$$
no they are not. you practicing writing software is the opportunity. It doesn't matter if you get help from a book or a blog post.
Likely it'll be hit or miss. Maybe others have had good experiences with this publisher, but I've found Packt books to be really poorly written.
whoa, how about just a function with a mutable dictionary arg?!?
Any more info on the trading bot? 
&gt; Readers are leaders. Welp. I guess I have a new years resolution.
its just for shits n giggles -- ill add a disclaimer later :)
[removed]
I grew up learning Visual Basic, so python is totally and utterly new to me
well I did start learning python about two weeks ago, and all I've worked with in the past was VB, so it's a new experience
Yeah, I guess my thinking is, whether or not you're attempting to, you *are* competing against AdSense and Facebook Ads, on a practical level; and they're both really cheap, especially when you're using them to advertise to tightly focused, very niche interest markets ... which kind of puts their best price point in strong overlap with the kind of site your service is geared most to appeal to, right? I get the appeal to the sites who don't have the means to pay for advertising, but the incentivize to subsidize them for the kind of sites that do have the means to pay isn't very clear at all. Which means you're going to have a hard time keeping the lights on, which limits the appeal to the sites that lack the means to advertise... I mean you could serve these ads pretty dirt cheap, leveraging AWS and some tight use of Lambda, for instance, but there's where the problem with "pay only for what you use" comes in, if suddenly you've got a substantially large amount of traffic to non-paying network members, but not so substantial that the eyeballs on their sites equates to a sensible place for non-network members to place ads. Either way, I do wish you luck with it. It'd probably be better if / when hitting a subreddit full of programmers to have some sort of actual product in place (we're almost universally going to be more interested in the implementation than in joining up), and I'd maybe have a canned argument at hand for the people old enough to remember webrings, but here's hoping it works for you.
Well, for one, there are some fantastic books/resources to learn python out there as it is! 'Automate the Boring Stuff' and 'Learning Python' are two fantastic books that I would recommend above anything else. There have been more specific criticisms of Learn Python the Hard Way posted here in the past.
Right, well, as someone who also learned Visual Basic (and Basic before it went Visual), try and forget like 95% of the syntactical style and flow, take a deep breath, run `import this`, and then congratulate yourself on finally discovering a programming language.
totalboox.com, see if you library has it. All of these books are in there. 
I go to pakt when I want plagiarized online documentation presented in a convenient way. Sometimes it is good.
Pact sort of sucks I would use the r/learnpython sidebar for suggestions.
Also, there are much better books to read - the Packt books are not so good, and some Python books are great. My favorites are Fluent Python and Effective Python. If you have some particular interests, buy books on those, but those two will start you off right.
&gt; No, absolutely not. Do not ever, EVER point someone to Learn Python the Hard Way unless you also send them the companion title "Un-learn the Dumb and Flat-out Wrong Things zed Suggested and Actually Learn Python the RIGHT Way." You're making me want to study *Learn Python the Hard Way*. The logic puzzle of "Okay, what's wrong here?" would have the potential to be quite engaging.
Really, it's don't write classes when a function will do. I highly recommend /u/groovitude's link. My goals are clarity, testability, reusability, and having less code.
I find that classes are taught to beginners very badly -- a lot of toy examples that demonstrate *how*, but not *why* (or, even worse, give completely the wrong idea of *why*). It took me several years of programming to have an epiphany about what classes are actually for. Classes are for combining related data and functions that act on that data. They make the relationship more unambiguous, and help you to make sure that you use the right functions with the right data (in a program where you might have different kinds of data and functions that go with them). In Python you can get away with using lists, dictionaries, tuples, numpy arrays and other common collections to group data, without having to write a custom class just for storage. Do you really need a special geographical coordinate class, or can you just use a tuple? Do you need a 3D point class, or can you use numpy arrays? Do you really need a Person class, or can you just put a bunch of key/value pairs in a dictionary? If your code is very simple, sometimes it's totally fine to use built-in types for this. The point at which I usually start thinking about classes is when I have multiple kinds of data, and multiple functions to go with each kind, and the code is growing, and I really want to couple related elements more closely instead of leaving them all to swim in an unstructured soup. I don't want to write a novel here, but the basic progression is `collections plus functions` -&gt; `classes`.
To get better at swimming, I read a lot of books about it and got a coach.
For the money its good.
Why don't you look at APIstar or Aiohttp. Both these frameworks will allow you to build asynchronous APIs. But even Docker Swarm, flask and gunicorn would likely enough to be scale to your needs. Flask in combination with gunicorn can do several thousand request a second. Limiting factor is likely to be your database. 
And indeed :-) https://twitter.com/raymondh/status/941709626545864704
So I'm guessing you don't pay for any digital games, movies, tv subscriptions, cryptocurrency...
Upgrading an app to Django 2.0.1
Tsunduko!
I have the exact same feelings about command-line handler libraries. Initially I too used these libraries for writing command line libraries. I think I was drawn to click because it had instructions on how to quickly write sub-commands and the documentation is better than argparse. However in the past 3 months I have learned that argparse is more than capable. It may take an additional 20 lines of code like you said but it beats having an unnecessary dependency that has code hidden behind decorators.
A $12 book sale is not a sign from God allowing you to learn Python. Dedicate time to learning Python/programming. That's your godsend.
Can you elaborate on this? I've purchased it before and found it helpful. I'm currently in more of a systems administrator role, but want to add some programming skills to my resume.
Inheritence class Duck(Flying, Swimming): pass Composition class Duck: flying = Flying() swimming = Swimming()
Is Learning Concurrency in Python any good?
Did the other thread about this bundle get deleted? I don't think Packt books are good at all. I'm sure there are exceptions but from what I have read they are poor quality.
No need for classes if you don’t need polymorphism, at least most of the time
Classes do not imply mutations.
Should’t those strings ger out of memory (once gc kicks in?)
I agree with them. Some of these books are content-mill level. You could probably get better content if you took a set of random Python blog posts, Pydocs and newsletters and put them through a Markov chain.
I don’t get the whole “async” hype around node.js It’s not async at all, it just delegates threading to native IO calls. But do something, anything cpu bound in node and you are blocking everything. How on eart is that good?
I love both of those books, but I'd hold off on Fluent Python until you've got a hundred hours of Python or few thousand hours of programming under your belt. It's not a beginner book.
When working on projects, do you usually do it in jupyter, or in a text editor/IDE?
No. You do not need 15 books. It would probably only hurt. Read Automate the Boring Stuff, do the projects. Good place to get started.
Can vouch for mastering python networking, it's good but not for beginners 
No, I don't see that any of these books are there to get you started. Specifically pakt publishing has very spotty quality, and is rarely good for beginners.
honestly for 12 bucks i feel like it's worth it just to have them, you can read them whenever but only get them for this price right now. That said I didn't cop this as I won't read them :/ 
&gt; for free Ahahahahahahahahaha
Stay with python! Two main points for write async network apps in python 3: 1. Asyncio - https://docs.python.org/3/library/asyncio.html 2. Aiohttp - https://github.com/aio-libs/aiohttp
College, the tomb where you read textbook tomes
I think it should be: 1. Try Some 2. Read now with context 3. Try Some More 4. Read now with more context 5. Try Some More 6. Realize it never ends.
Ok, well, to be fair, downloads by https://uploadgig.com, so not really free. Free if you want to wait 9 hours for each download, but if you want it faster than that, well, that will cost you money...
This is a broader argument for structuring your code well and breaking it down into generic reusable components. Those components don't have to be classes. You can write reusable, importable functions.
Yeah, I agree with that. Check the sidebar for resources for your first hundred hours in Python. 
Packt sucks. One better way to go is to get a Safari Books Online subscription - you can pay month-to-month and you'd get all these crappy books, plus access to the classics like Fluent Python, as well as a smattering of good Manning books and access to video courses. Alternatively, I've found that [RealPython](https://realpython.com/) is pretty great for getting up to speed with Python specifically. They also just released [Test Driven Microservices Development Courses](https://testdriven.io/) which I've gone though. The advantage of this approach is that you'd get experience with Python on a very modern architecture. I am a bit worried about your original proposition though. It sounds like you view software development as a get-rich-quick kind of scheme. Being a software developer and keeping your skills up-to-date requires CONSTANT learning. It's not just a one-time investment of your time you make to get there!
1. You can display them in your office, people will assume you know everything in the book.
I think you’re looking for tsundoku. It was the name of my reading list document before I switched to goodreads, it’s such a great word :)
I understand the desire to grab a mess of books for that price (it sounds wonderful), and I'd like to preface this with: **I have NEVER read any of those books** But that being said, I've found the quality of just about every Packt published book to be just awful, and I've read several. They seem to be more than willing to publish anyone with even half an idea what they're doing on a particular subject. I'm not saying they're ALL bad, and these may be fantastic, but in general, I don't trust Packt Publishing for anything. I'm not basing this off what others are saying: I grabbed up several books on SDL, SFML, and Unreal by Packt and they were bad. Real bad.
Kinda difficult to display an unread e-book in your office. :-P
Thanks! Yes it is true I have a misunderstanding of the things I am using. I'm just learning so frankly don't understand half of what is going on. Slowly getting there though! I think I have to revise my method of copying and pasting "working solutions" I find on stackoverflow and just writing the code myself. I have switched a bit to learning Angular and that has been easier somehow. 
I picked up this package recently. Two books in the set that interesting me: Mastering Python - Basic into book 0 - 100 wit python Python for pentesting - A video set no books with a word doc explain the contents of the course. There are alot of other good resource in this set but tbh pay 1$ get a basic book and start writing some code. The books aren't going to do the learning for you you need to dedicate time to actually creating examples and mastering what they are preaching to you. 
well yea, an unread "e-book" is pretty useless :)
I didn’t get how one can put those through a markov chain, what does that mean, if I may ask
&gt; Learning Concurrency in Python *fluent python* has been my favorite book to share for concurrency so far. Not familiar with the packt book, so also curious to hear how it is.
Well that sucks. I'll skip this bundle then. 
Yea I'm seeing that Packt isn't great. Will not be picking up this bundle. 
Isn't this ICS 31? Why are you doing the labs over winter break lol for c in s.studylist Study list is a list of strings, so c is a string (from the list ['ics 31', 'math 2a', 'wr 39b']). c.instr wont work 
1: /r/learnpython 2: read the sidebar 3: instr isn't a string method in python
c is the string from line 3, ie 'ics 31', 'math 2a', etc You never use the Course instances that you made. If you post this as text instead of an image we could rearrange it for you to get the result you want. 
May need to see the rest of the code.
Yes, I see that now. I just posted it, sorry for the formatting. First time posting on this subreddit. 
When I wrote c.instr I attempted to access the course namedtuple. But now I know that c is acting as a list which was not my intention. 
Thank you! Thank you for your advice as well. I have never posted on this subreddit so I was not sure how to format the post. 
You use the amount of times a word/n-gram is followed by another to create a matrix with probabilities. Then you use the probabilities to generate text. Example of a live generator: https://filiph.github.io/markov/ Python project: https://codebox.net/pages/markov-chain-in-python
You forgot one of the best examples: /r/SubredditSimulator
Interestingly, at least in the older versions of *Learn C the Hard Way,* this was exactly the approach Zed suggested readers should take with *The C Programming Language.* 
Pythons docs have a tutorial and guide which are more than enough to get into the language (for free). What’s more important is finding a small problem you can start solving with Python from day 1, and keeping building. It can be super simple, as long as it solves a problem.
Yikes. Treating "find what's wrong with how this teaches X" as "here is how you learn X" rather misses the point of the critical thinking exercise.
Indeed! 
Aaah, I see. So you were being sarcastic I suppose. Interesting article thought I will read further. 
Yes thanks.
So what looks to be the problem is that df['label'] is returning a dataframe, and not a pd.series object; which is really what you want to get returned. Also, you may want to specify in the read_csv that column 'label' is indeed a string; you can probably want something akin to... ``` df = pd.read_csv(file, header=None, names=None, dtype={vars_vars.index('label'): str}) ``` line above is totally untested....
Just assign it to a different variable headerNames = pd.read_csv(filename, nrows=1).columns df = pd.DataFrame() for hname in headerNames: df[hname] = pd.read_csv(filename, usecols=[hname])[hname].values
\&gt; not having calibre on a wall mounted monitor to show off your ebooks to clients 
Cool post
Cool post
Cool post
Check to see if you’re local library has an account there before buying
This video reminds me of something I've always wondered: why is `heapq` a couple of functions instead of a container class like seemingly all other containers in Python? It would seem to me like it would be great as a class. Does anyone know why it's not?
I prefer osmosis. Just put the book underneath your pillow every night before bed.
Pretty sure all courses are $10 right now, plus a $5 new year credit. That's cheaper than the power I'd consume downloading for the next 30 hours. :p
Trying to learn how to make an alluvial flow (one-sided Sankey) diagram, but I have no clue how to set this up with my own data (very small data set).
Use a dictionary or make an object this named tuple thing is horrible. https://www.python-course.eu/dictionaries.php https://docs.python.org/3/tutorial/classes.html
Picking up a couple books and learning a bit about Python isn't a magic bullet. You should get books and read them, for sure. You will need time to apply the knowledge and get experience. It takes time and a lot of practice to become a good programmer without going to college... it takes a lot of practice to become a good programmer if you do go to college. I am a self-taught programmer. I can program in languages like C++, C#, Python, PHP, etc. and have done so professionally. It has taken me a lot of reading and a lot of practice to get where I am. I'm not trying to discourage you. You can most certainly become the programmer you desire. It just takes dedication. 
Not sure why it was down-voted, really, this is kinky!
To add: Reddit is written in Python, almost fully and it's one of the biggest websites out there. Obviously this is just a top level analysis, I'm sure they optimize with low-level languages where needed and so on.
But you're not an asshole by paying. Don't get me wrong, there are many people who stole knowledge only to become powerful, rich and what-else on their own when they couldn't afford it. But it's one thing to be humble about it, realizing your place and just keeping your head down and it's another to be a cunt about it. You're not really a cunt, but it's like...you see no issues with stealing someone's property and bragging about it. What you should do is what I do: Download the course for free, see if it's actually good and not just some guy that has a nice voice that reads from a prompt and actually doesn't know anything, then decide if you wanna pay or not. That's the human-me talking. Now for the real part: Fuck that shit, just pirate it. No one cares. Most courses are made for idiots that wanna pay for a curated google search.
When I initially started with Python 10 years ago, it was for converting Perl scripts to Python. Didn’t take OOP into consideration at that time. It was a bunch of scripts for custom ETL tool. I got what the business needed with way fewer lines of Python code but did not use classes. Classes are great for a properly planned project that deal with data that could be redundant as you build the product. Classes for the sake of it belong to playgrounds, not real work! 
&gt; recommends python 2.4-2.6, Where do you see that? All I see is: &gt; For Google's Python Class, you want a python version that is 2.4 or later, and avoiding the 3.x versions for now is probably best. Google (and most companies) still use python2, so I don't think it's surprising that they teach it. I wouldn't worry about it, once you've learned python2 you can learn python3 in an hour or so. 
well it uses GDAX's unofficial python API to place 'limit orders' so you put an order for x bitcoin at price y and when the market price crosses your value you get a sell or a buy. I see people going on about how no one would be stupid enough to divulge their secrets about their trading bot but I'm more interested in any relevant holes you could poke in my method so here goes! I think any degree of order in a system can be taken advantage of, because you know the rules so you should be able to abuse them. The bitcoin market is very volatile, lots of bear/bull runs (inc or dec the price per bitcoin). So I make the assumtion that there is some steady state value and these are just fluctuations around that value. Of course they can be really big fluctuations, and if the market improves one should really never lose money with a good algorithm. So I have a large number of sells at values x_n and when the order sells i just try to rebuy at x_n - 50$ / bitcoin, because the fluctuations are usually like 10-200$ / bitcoin. Then when the buy goes through it tries to resell at x_n. The limit orders are FREE ON GDAX. So I end up making something like 16 sells an hour, which produces about 4 cents. So the market fluctuates around, and I am trying to extract money from the fluctuations. I have the range from 12.5 thousand to 16 thousand covered with these nodes (about 300$ in), so as long as the price doesn't go long term less than 12.5 I will continuously make money, about 1$ / day. edit: it also helps that i finally got the bot up and running last week, so I was able to buy in at 13k / bitcoin, which is pretty far below a true market value (i think probably about 14k right now)
replied to scruff_py
JupyterLab is nice blend of the two
There are two ways to do things, pep8 and wrong.
One thing you must know: **most universities do suck**, I could probably give better classes than 90% of my professors during my graduation.
This doesn't make any sense to me -- ducks don't _have_ swimming and flying, they _can_ swim and fly. Python doesn't have formal interfaces, but if Flying and Swimming are classes that function like an interface (defining only methods, not data), then class `Duck(Flying, Swimming, Animal)` is much more intuitive than the latter.
i'll check it out!
The machine learning in Python is pretty good--helps R coders who are looking to become more Pythonic.
I second this book. It was the DRM-free ebook version that made me willing to get the bundle. 
Great podcast. I enjoyed the bit about the move from Python 2 to 3 and learning more about the history of Python. I’ve gottten through 15 of the podcasts so far not including your other podcast. Thanks for the resource.
[removed]
Python2 is officially being unsupported in 27 months 
Glad you enjoyed it! Thanks.
Thanks! I think they are indeed. I am speaking to at least one of the editors about being on the podcast. :)
Pick a better university? Because I won't dare attempt to say the same about my profs.
Hi /r/python I'm hoping some of you folks here find this project to be useful. Go ahead and check out the example code I have on GitHub for a quick and easy way to get started with using receiver_zero for remote desktop control. &gt;**Control your computer remotely using Python3 (Python 3.5.4). Useful for building remote apps and remote automation software. Can interface with any software, language or system that supports sockets.** **EXAMPLE PROJECTS** &gt;[(YouTube Remote Zero - Android) - YouTube Remote](https://github.com/matdombrock/YouTube_remote_zero-Android) &gt;[(TPCz - Android) - General Use TCP client](https://github.com/matdombrock/TCPz-Android) BTW, I have recently reformatted the code and I would really like some input on the security aspects of this software. 
As far as security is concered, right now I think that the main issue would be that someone can possibly spoof their IP if they knew the contents of the whitelist Also, I'm not 100% sure that this is safe from code injection, but Im working on the idea that at the point the the server is actually even reading any input from an external source the user has been verified as valid, so if they want to inject code that is really their deal.(edited) Oh yeah and I'm not trying to protect the server from anyone with physical access to the host machine. I know that it would be trival to see and alter the whitelist if you have physical access or have been able to gain remote access.
Good video on the topic. https://www.youtube.com/watch?v=o9pEzgHorH0&amp;t=214s
Isn't tensorflow only compatible in Python 3+?
obj = MyClass obj.init() obj.run() res = obj.getresult()
For notebooking and day-to-day activities, I find Jupyter to be a good environment to record my activities, if I'm contributing to open source projects, then I use [atom](https://atom.io/) as my go-to editor. If I'm developing some python project on my own, it would be inspired from the code snippets in my jupyter notebooks and then I would formalize and abstract the code in atom to make functions/modules. Haven't used JupyterLab, but it looks cool. 
Are you sure? All the sources I'm finding strictly point to python 3+. 
This looks cool, but I don't really understand what the purpose of redis is. It looks like a besic server. What is it used for?
Not everyone has that luxury for their undergrad degree. I'm going to the university I can afford.
This is a problem with your serial device, or how you're using it. It really has nothing to do with python or the pyserial library itself. It is possible that the write buffer isn't getting flushed, so you could make sure to call the flush() method after the write. It's more likely that you just aren't sending the correct data to the device, though. Check it's user manual and see if there are any programming manuals. Maybe you're missing a newline or something similar? 
The "Installing Tensorflow" page has instructions for py2 alongside py3 (for Linux, at least). https://www.tensorflow.org/install/install_linux It wouldn't surprise me if most tutorials etc. used py3, for future-proofing purposes.
It's weird seeing another NCSU CSC person in the wild. What class is this for?
CSC 333 Automata, Grammars, and Computability
I'll try to call the flush() method.
Redis is general is used for two things 1. Caching {its a good alternative to Memcached} 2. Backend for Job/Queue Processing System like Celery Although a little dated, folks have tried to [Implement Python Dictionary backed with Redis](https://github.com/lethain/Redis-Python-Datastructures)
Python and selenium can handle it. Automate one step are a time and you’ll be fine. 
Redis is a data-structure server. It's fast and provides APIs for working with key/value pairs, lists, sorted sets, hashes, and more. It also has pub/sub, cardinality estimation, geo stuff, scriptable with lua... It's a swiss-army knife.
Solid. Didn't even consider Linux. 
Originally it was python 2 only
You need to learn to use python's "debugging" tools. Calls like dir() (to see what methods an object has) or type()
I wouldn't say they suck. But they're certainly at least 5 years behind industry...which is often at least a few years behind bleeding edge.
I got the bundle for the data analysis and machine learning. I'm still a python beginner but am needing to use this stuff for work and so far the Python Data Essentials seems worth running though the examples for and getting a cursory overview of the subject. I'm sure there are other, better resources, but I prefer learning via books (I have a hard time doing videos) and this book in particular seems like a crash course in everything I need to get me started on doing specific tasks for my job.
Given that virtually every Python app I've seen is written in Python2, it's hard to justify this. I'll venture to guess it will live on, even if support is handled by somebody other than the person(s) saying support will end.
If I recall correctly Google in general doesn't follow PEP8, most notably they use two spaces for indentation instead of 4, and this tutorial is targeted to Google employees, so this makes sense.
I highly doubt that. IF you think CS is a 'how to program' degree then that's your first problem.
You must not see many apps...
There are plenty of affordable colleges with good professors.
Is PEP8 just a style guide? 
I use colorama in collaboration with [termcolor](https://pypi.python.org/pypi/termcolor).
printed book + pdf is pretty awesome. as i read the printed book, i go search for references and explanations of concepts that i need more clarity on. 
There is a related post from [Code Review Stack Exchange](https://codereview.stackexchange.com/questions/132810/python-lottery-game) it has some good comments on code structure which I was about to suggest. Yes you can write a flask application should be real simple. What you need to figure out is what URLs {and what parameters} are you going to need. That should help your implementations
Python2 support is about to end... forever. "Most companies" are using python3 for new projects in 2018. Of course there are legacy code bases, but then... there are still perl projects in production.
Nice I would look at [Dialog and Chatbots](https://web.stanford.edu/~jurafsky/slp3/29.pdf) and [Regular Expressions](https://web.stanford.edu/~jurafsky/slp3/2.pdf) chapters from [Speech and Language Processing](https://web.stanford.edu/~jurafsky/slp3/) I think it will help. 
Better to remove one of those `return result`s. No doubt there will now be a competition to turn the perfectly readable `enrollments_for_instructor` into an unreadable one liner.
Only if you can afford to move away from home
The persons saying support will end include the Python Software Foundation and the CPython Core Developers. If someone wants to support it privately and fund the effort, they are welcome to, but the maintainers have been clear that they mean to stop support. It may very well continue to be supported if a/many corporate entitiy(ies) want to fund it.
There have been surveys like this one: https://www.jetbrains.com/pycharm/python-developers-survey-2016/ It's not like my own observations are outside of reality here.
I don't know where you get "most companies" from. Definitely a few of the big players, yes, but lots of companies are on 3.x. We're on 3.6 now and have been on 3.x for years.
yes https://www.python.org/dev/peps/pep-0008/
In this industry, you are constantly forced to do sub-par work for "business needs." It suck, but that's how it works. Getting to do things right is a rare privilege. Incidentally, you become invaluable if you can write code in languages you don't know. So getting used to writing code in random edge case languages like python 2.6 is a good thing. Last year, I had to use Delphi Pascal and Groovy for several projects. I don't know either of those languages.
That is what I would expect to happen. It comes down to cost. Is it more expensive to maintain the interpreter or move the millions of lines of python code to python 3 and risk something breaking. Considering the things like YouTube's front end is written in Python 2, I'll guess there are other major investments that, on their own, justify the support. That said, I noted Google created a python to go converter. Maybe that's their plan?
"The industry" is always at least 5 years behind startups, who are the only ones coming even close to doing things "the right way". The corporations I've worked for are *just* now starting to move things to devops methodologies that have been standard since 2010.
I'm not sure I see where the same kind of thing is? Are you talking about the AJAX stuff?
Things have changed slightly since then: https://www.jetbrains.com/research/devecosystem-2017/python/
This is probably changing pretty rapidly as linux distros stop shipping with python2 (and certainly not the default install). The survey was from more than a year ago. If you find slightly older data you'll see that the adoption rate in 2015 was pretty sharp. All it will take is a few major libraries to drop 2.x support for the movement to pick up steam.
Is those 5 videos still? Takes like 1 hour to do all the programming exercises + 8 to watch the videos. Call it a full day, but after that you're free to go do whatever you want.
Fair enough, the only thing I know for sure is "most developers" (since the last survey I saw, which was about a year ago).
I don't know why you're getting downvoted. You may not have seen a Python3 app... but I wonder why that's pissing off people.
Or better yet, learn Python 3 first, then spend an hour learning Python 2. Either way, as a Python dev you will absolutely need to learn both.
I’m all for standards but pep8 is such garbage. 
Colorama seems promising
Support doesn't mean it vanishes necessarily. I mean, Windows XP is still used by some people :)... 
As far as I know Google's internal Python standard is 2 spaces so probably people who made the tutorials forgot to change the space width and went with their company default.
That is [exactly what it claims to be](https://www.python.org/dev/peps/pep-0008/). However, very commonly used tools such as [pyflakes](https://github.com/PyCQA/pyflakes) and [pylint](https://github.com/PyCQA/pylint) are based on it, so in many dev environments, Pep8 compliance is checked and enforced. There are many small points at which one might take issue with Pep8, but if one is writing code for an organization that uses a linter as part of code check-in, Pep8 is De Law. 
I don't know where you're getting that 90% of PyPI downloads are python2, but a quick google search shows that even in 2015, [at least half of all current PyPI projects at least supported python3](https://nothingbutsnark.svbtle.com/python-3-support-on-pypi). &gt; there's really only one Linux distro that's fully moved over. This is pretty much just false. Arch is the only major distro that has renamed python3 to /usr/bin/python (which I think was a mistake), but most distros use python3 for all OS level code, including Fedora and Ubuntu. I don't think PEP 394 is going to change any time soon, which I'm pretty sure is what you mean. This is a misconception on your part about what "fully moved over" means in this context.
People act like 2.7 and 3 are so wildly different - why? For this material it amounts to the print statement. Also PEP8 are coding guidelines. At the end of the day, a collection of suggestions from 51-or-more percent of whomever. Don’t worry much about it. The fact that you’re aware of it is enough.
There are still COBOL projects in production.
&gt; but most distros use python3 for all OS level code, including Fedora and Ubuntu. Really? I haven't kept up with that, but I figured that would be big news, and this is the first Ive heard. Good to know. I'll look up the 90% reference for you tomorrow. 
Fortunately there’s *much* more to PEP8 than the two points you chose. It takes a lot of guesswork out and helps ensure consistent formatting, naming conventions, etc. which all aid in the development process. As far as line lengths, the general consensus is to try to keep lines under 80 chars, but you can go up to 100-120 as required. Generally if you’re having lines that long you should probably rethink you’re approach, with the exception of long strings (which are still fairly easy to break across multiple lines. I won’t start another spaces vs tabs flame war, but practically every text editor can be configured to insert 4 spaces for a tab, it doesn’t affect your workflow in any way.
Most of the major scientific libraries are dropping python2 support in the next two years. Celery is dropping py2 in next major release. Major services are converting. All new features are going into py3. If you’re not seeing py3 by now you must now get out much, that’s all I’m saying.
I had a similar question on using python or node.js for backend API.. I remember seeing a benchmark comparison of node python tornado and japronto.. Japronto wins the benchmark is a new python library in the works its still experimental I guess as mentioned on its GitHub page... So wait and watch.. 
Couldn't have said it better myself bcastronomer, thank you for saving me some typing! :)
The supposed rank of a university also cannot be objectively calculated that easily imo. Most of these are based on number of publications and the like. For example most websites have the top 10 in the US and then also Oxford. I’m not saying the Ivy League colleges are bad, no no. Just had to say this cause I was looking at spme schools for Erasmus and ended up stumbling upon some wild ranking websites for universities. 
That developers page is getting quite old now. Google should really update it. Show some initiative and port to python 3. Or Go. 
I'm curious about that, too. Facts are facts. Most I've seen are Python 2. I didn't say all were. I have seen some Python 3 projects, but to get downvoted over it makes no sense. Must be a religious thing. I'm an engineer and tend to be more pragmatic.
At the bottom of that page: "Last updated December 13, 2012." Gross.
The default Ubuntu ami for xenial in aws uses python3.
http://py3readiness.org/ says 348 of the top 360 packages support py3. The two "show stoppers" is ansible and supervisord. In another thread people mentioned ansible is support. It was followed up with a example where something is not supported. As for supervisord, it has unicode &lt;-&gt; bytestring issues. While only being a system utility a lot of people feel it a no brainer to ship py2 with it if your software/os needs it. The other retort is to write systemd services instead... :/
Recent firefox add-ons moving to webext technology seems to prove otherwise.
I’m obviously not the person you asked, but my small project update on the move (from 1.11). The biggest hurtles: * Some error messages were a bit bad, so realizing I needed to see `app_name` in urls.py bit me for a few (it’s also removed from the urls.include function). * Requiring the ForeignKey cascade option to be filled in As far as features: * The simplified url option ([path](https://docs.djangoproject.com/en/2.0/releases/2.0/#whats-new-2-0)) is a welcomed change * Apps being able to set their namespace (via app_name) * `chunk_size` argument to the QuerySet.iterator() method * QuerySet.{earliest,latest} now support multiple args for ordering The team and contributors did a really great job on making a major bump fairly simple! Of course my current project is quite small, so I’m sure there would be bigger things for anything more involved.
Classics.
Thank you for sharing this information. Maybe you could consider writing a blog post about you experience, that would be a good reference to a lot of folks. 
When I am old and burnt out I will also go into teaching where I can assign them the same course material I made 10 years ago and watch them complain, and all the foreign users cheat, while I watch netflix and my TAs grade papers.
Thank god
There is no standard tab size, so using tabs instead of spaces in any programming style guide would be the real garbage.
https://pastebin.com/embed_iframe/8nLNbVAK Bit of a silly example with the class name `Main` and static function `main`. But the idea is your code is soon going to grow into something needing variables, more functions, and some kind of "order". And that is what a class gives you? Also in my exp `Main` turns into eg `MiningBot` and `main` `create_bot` and the static method returning a new instances of `MiningBot`. Now your code is easily importable `from bots import MiningBot` and then `bot = MiningBot.create_bot()`. Instead of having a bunch of function `from bots import create_bot, move_bot, kill_bot` where you need to pass in your bot variable. Not that your code is going to look like this. Just a rant/example of using a class and `@staticmethod` to bootstrap your code.
[Tsundoku article on Wikipedia](https://en.wikipedia.org/wiki/Tsundoku)
**Tsundoku** Tsundoku is the phrase for acquiring reading materials but letting them pile up in one's home without reading them. "Tsundoku" originated in the Meiji era (1868-1912) as Japanese slang. (積ん読) "Tsun-doku" 「積ん読」 came from 「積んでおく」 "tsunde-oku" (to pile things up ready for later and leave) and 「読書」 "dokusho" (reading books). It is also used to refer to books ready for reading later when they are on a bookshelf. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Python 3 has a lot of easily-triggered fanboys.
If I don't get lazarus to work on the macos this week. I will most probably be looking at kivy or qt next week!
py2 or py3? /me gets pitch fork ready...
&gt; These books will only help if you read them So, there is a catch. ;)
I agree with Raymond Hettinger, that the line limit should be 90*ish*. But I also agree that if you're going over 80 you should really think about whether you can make it shorter without losing clarity/readability. As for tabs vs spaces, eh, who cares. The pros and cons either way are trivial, the convention is spaces so just use bloody spaces.
Aaah new year, new homebrewed framework... or at least making it a goal to understand the libs in my requirements.txt: -e . # install apiplate amqp # Needed for celery billiard # Needed for celery celery # Needed for celery(duh) certifi # Provide Mozilla's CA Bundle. chardet # Universal Character Encoding Detector. click # Wrapper around optparse for powerful command line utilities. clickclick # click Utility functions. # closure # Google Closure Compiler(JAR) https://developers.google.com/closure/compiler/. connexion # OpenAPI/Swagger API using Flask. Flask # A microframework based on Werkzeug, Jinja2 and good intentions. Flask-SQLAlchemy # Adds SQLAlchemy support to your Flask application. idna # Internationalized Domain Names in Applications (IDNA). inflection # String transformation library. itsdangerous # Various helpers to pass trusted data to untrusted environments and back. Jinja2 # Small stand-alone template engine. jsonschema # JSON Schema validation http://json-schema.org/. kombu # Needed for celery MarkupSafe # Implements a XML/HTML/XHTML Markup safe strings. pathlib # Object-oriented filesystem paths (UNMAINTAINED, upgrade to pathlib2). # pyquibase # Liquibase Database Refactoring (JAR) http://www.liquibase.org/. pytz # Needed for celery PyYAML # YAML parser and emitter. rcssmin # CSS Minifier. requests # HTTP for Humans. six # Python 2 and 3 compatibility utilities. SQLAlchemy # SQL Database Abstraction Library. swagger-spec-validator # Validation of OpenAPI/Swagger 2.0 specifications. typing # Type Hints. urllib3 # HTTP library with thread-safe connection pooling, file post, etc. vine # Needed for celery Werkzeug # Swiss Army knife for web development. # pika==0.11.2 # ansible==2.4.2.0 # asn1crypto==0.23.0 # bcrypt==3.1.4 # cffi==1.11.2 # cryptography==2.1.4 # paramiko==2.4.0 # pyasn1==0.4.2 # pycparser==2.18 # PyNaCl==1.2.0 But someone on /hn pointed me to [crosbar.io](https://crossbar.io/) a couple a days after I viewed [Distributed Applications in Python: Celery vs Crossbar](https://www.youtube.com/watch?v=WijEe0Vkj3Y) so I got the front-end back-end example working and now thinking of something I WANT to implement using it...
This is a mindset issue. Programmers think they exist to write code. They don't. They exist to create business value. Code is just an artefact of that creation. 
... wut. That sounds like a disaster. Can the faculty member be reasoned with? I mean, Christ, at least you may _see_ 2.7 in production somewhere. 3.x is way better to work in, and PEP8 makes things rather decent. 
Google cloud pilgrim and app engine supports python3 as a standard runtime.
&gt; They exist to create business value. /r/ABoringDystopia But you're right. Which is one of the reasons I can't wait to retire and write good code.
Here's a sneak peek of /r/ABoringDystopia using the [top posts](https://np.reddit.com/r/ABoringDystopia/top/?sort=top&amp;t=all) of all time! \#1: [Mass Shootings Are Now So Frequent That President Trump Just Copies-And-Pastes His Condolences](https://i.imgur.com/H8iKu0x.png) | [1406 comments](https://np.reddit.com/r/ABoringDystopia/comments/7d44g4/mass_shootings_are_now_so_frequent_that_president/) \#2: [Free to Play](https://i.redd.it/5bhnsdn56gnz.png) | [33 comments](https://np.reddit.com/r/ABoringDystopia/comments/71rg8y/free_to_play/) \#3: [Teaching kids to read via logos](https://i.redd.it/a1gyqloexw6z.jpg) | [22 comments](https://np.reddit.com/r/ABoringDystopia/comments/6kl78q/teaching_kids_to_read_via_logos/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
It's more annoyance with a pointless and unsupportable metric. "Most [apps] I've seen are Python 2"? Well, ok, beyond questions of sample size and definition, so what? When you're looking at existing software you're necessarily looking at a window into the past, and Python 2 *was* the most prevalent and sensible version of the language to start new projects in until roughly the release of 3.4, in early 2014. Since then it's been far more sensible to start new work in 3, as key library support has more or less become universal, and features in 3.5 (late 2015) and newer have extended the lead. If you are starting a new project today there's quite simply no good reason at all to start it in Python2, full stop. It's because of that last part that the downvotes are likely to happen... the death of 2 has been an official goal of the language's BDFL and the core maintainers for years, and the momentum for 3 has taken over. Yes, looking backwards in time the bulk of code you look at today (in 2018) was started before that momentum hit, and the bulk of non-library code hasn't had any reason to update, but that is irrelevant to the momentum of the language. Anyone starting fresh should be learning 3, anyone starting a project should be writing in 3, and only people writing libraries with a substantial and demonstrable need for backwards compatibility should even consider adding 2 support to those libraries. What we should be doing is looking forward to the day when we can drop support for 2 altogether and move on from this nonsense.
Selenium will work just fine. 10 times a day isn't an insane amount, and it is unlikely to trigger any monitoring systems the website is running to check for automated crawling. However, if the site asks you not to do this, then you shouldn't do it, especially if having your account frozen has 'income-losingly bad consequences'. If you write your script competently, then there is very little chance you could screw something up. Selenium is only going to click the things you tell it to.
You might want the curses module: https://docs.python.org/3/howto/curses.html You could also do something more like this: http://introtopython.org/terminal_apps.html
It does indeed.
Python 2 fan boys on the other hand are the epitome of measured rationality :P
Poor stupid people, I'm afraid
I use spaces, but I like the logical appeal of tabs. Double nested? Just two tabs. Let the user decide how much space that should take. If everyone used spaces you'd still have conflicts based on varying numbers of spaces but if everyone used tabs, this would never happen. That being said, I appreciate that Python had a clear standard in pep8 and will always advocate following that for Python. However, if I were writing the style standard for some future language, I'd push for tabs.
If you can sell good code as providing business value above and beyond it's cost to create, then you can do it now. If you manage it, let me know how you did it.
Perception is important. A lot of python programs and libraries still on 2 but not yet on 3 at the moment. Until there is a hard drop off of python 2 support, this trends on 2 will continue. We will only see a sudden surge of people going to 3 in 27 months time. If it is up to me, the sooner the better. People are lazy and do things last minute. We might as well shift the end date tomorrow.
With Raspberry Pi. There's is an existing library for it but is only intended for Arduino platform. 
Might be more advisable to first contact the company to see if they have an API you can interact with to perform this task.
&gt; This doesn't make any sense to me -- ducks don't have swimming and flying, they can swim and fly. That's semantics. English semantics. `Flight` *would* be a better name, though. &gt; class `Duck(Flying, Swimming, Animal)` is much more intuitive than the latter. To you perhaps. Multiple inheritance isn't as flexible as composition: def equip_jetpack(thing): thing.flight = Flight() equip_jetpack(wolf) 
You basically wrote a mildly broken bit of VB code but with Python language. Instead start with a python tutorial and learn from scratch instead of trying to translate limited VB knowledge, syntax and patterns. Look at some more python code in the process and see it visually looks a lot simpler because of its features.
The vast majority of existing programs and code simply won't be rewritten. They don't need to be. Hard shifts in functioning non-library codebases don't tend to happen, historically, until there comes a point where there's a pressing need, which could be years (or in the case of COBOL decades) after the language they were written in has died. That's why looking backwards, or for a sudden shift in old code, isn't very helpful, but looking at new starts is. The hard shift needs to be in fresh starts... if someone sits down to write something new, they should already know not to start in Python 2, and there should be no confusion remaining in the community about that. They sure as hell shouldn't be making that determination by glancing around old code on GitHub, or by listening to the opinions of people who have only been glancing around old code on Github.
Duuuude I took a glance at the second link you posted is exactly what I was looking for! Thanks so much! I will of course also take a look at the first link you posted about the curses module. After all, you never know when youre going to need certain bits of information!
That's where you're going to have to go to **curses**. Programs like vi don't print to the tty process stdout and stderr, they effectively set those aside, create their own pseudo-tty, and print to those, then yield back to the original state on exit. That's what **curses** is for.
Ansible works (ish) with py3, and they are working hard on improving the support for py3 to be done well in time for the deadline.
no sir, i made sure python didnt install Most probably its some kind of an update error from Windows
You are quite wrong. GAE has [supported](https://cloudplatform.googleblog.com/2016/08/python-3-on-Google-App-Engine-flexible-environment-now-in-beta.html) Python 3 for over a year.
That'll be a bunch of photo frames for all my ebooks.
No, I am right and you didn't read my comment. I know python3 is supported but you need to use kubernetes or GAE "flexible". If you want standard, you HAVE to do it in one of the languages I listed (python2.7, java 7/8, etc)
I love turtle! I do have a few lessons with turtle.
Feel free to apply: https://angel.co/jalt-2/jobs/299434-software-engineer
Well, their language *is* on the chopping block… In any case, Py2 diehard's "please don't kill my language!" shtick is inherently far less toxic that the "your language must die!" attitude that exists amongst Py3 proponents. I don't know any Py2 diehards who have the attitude that "my Python is better for everything!"; a pretty common attitude amongst Py3 fanboys. Py3 was designed to be a better language for applications than Py2, and it is. But not everybody writes applications. There are certain classes of programs for which Py2 is objectively better suited (mostly where Py3's Unicode wrangling is unwanted). You bring that up, however, and the Py3 brigade pile on with the downvotes. The "Python 2 must die" crowd have brought an irrationality and toxicity to the Python community that never existed before. (It's not a universal attitude, of course. There are plenty of Py3 programmers who understand that Py3 threw certain types of program under the bus to make other types easier.) 
Robot: "What's my purpose?" Marty: "You push butter."
Yeah, fair enough. That said, I blame Zed A Shaw for most of the frustrated vitriol that comes from the py3 crowd haha.
A simple game, yes.
It says 2.4 **or later** ... Which likely means it'll still work on woefully old systems (which may often be found in school labs..? LOL) Just install pyenv and go for it. ;-)
Funny thing I observe is that if you're not with Python 3 fanboys you're automatically labeled as an evil Python 2 fanboy. Neutrality is seen the same as being against Python 3.
&gt;Google (and most companies) still use python2, so I don't think it's surprising that they teach it. I wouldn't worry about it, once you've learned python2 you can learn python3 in an hour or so. Exactly. And, some companies I'd like to boot beyond 2.4 or 2.6 ... But, supporting legacy systems is still in the job description, no matter how much it's hated. So, that tends to result in some "long conversations" with pyenv and a GNU compiler. (LOL) 
Because some "current" operating systems aren't even up to the latest 2.7, yet. Chances are, they were still sitting on RHEL/CentOS5 or maybe an early RHEL/CentOS6 at the time, and just wrote for "what they had" at the time. And, RHEL/CentOS 7 was a **big** hurdle for many companies ... Particularly large infrastructures. There are *still* many that haven't fully embraced systems, yet. LOL
Except that never really works in practice. With 90% of projects the alignment goes to complete shit if you change the tab size.
Ohh allright! ill give it a look.
This is the wrong way round IMO. Write your code using functions, then learn when classes will simplify things. I've always found it a lot easier to refactor into a Class, than vice versa. Also inheritance is massively overused. Composition is often a better way of designing your code.
why would you ignore import errors?
3 isn’t going off LTS any time soon. Done in one. 
[Raymond Hettinger: Beyond PEP8(]https://www.youtube.com/watch?v=wf-BqAjZb8M) PEP8 is certainly a good style-guide, but it does not make the code better per definition. I think compliance with the rest of the codebase is more important than to blindly follow PEP8. Additionally, 'violate' sounds a bit exaggerated, I would say 'does not comply with'. As for teaching Python2, I'd say Google should make work of going to Python3 since Python 2 will be unsupported in 2020. 
The page is last updated in 2012 -_-
There's some cases that make false positives.
where can i get "python version neutral"?
https://www.youtube.com/watch?v=lKie-vgUGdI
A friend of mine who worked as a contractor for Google complained that their style guide was to write python like C/C++/Java because most of the people at Google use those languages and idiomatic python would be too complex to just understand. 
And definitely read the Python Tutorial advanced bits. I'm personally working through effective python right now.
Could you please a provide your solution in a code? I don't really understand what should I do based on your explanation. I pasted the code into pastebin so it is better to read. https://pastebin.com/JFjivWHK
I don't disagree with you, but how do you refactor into something that you don't know how it works? Especially with small projects, it's easy to get the same results using class or function bases approaches. That's why I say use classes in small projects to gain exposure and understanding to them.
Kotlin is also way more sexy hipster then dusty old Python.
A big part of learning a language or an API is knowing where to (quickly and easily) get the information you need to be able to use it. Consider browser bookmarks and such.
Or businesses with critical applications still stuck on XP due to hardware like manufacturing machines or medical devices. Sometimes version isn’t a choice when you’re the end user of something.
Well the majority of industry does it wrong then. I'm certainly not going back through our legacy code for 2-3 weeks for the benefit of 0 improvements outside maintainability improvements. I've never worked anywhere that we spent a significant amount of time quibbling over formatting outside of four spaces that I enforce. I'll pick up junior members under me if the code looks like complete shit but that's about it I'm more interested in how it works and that it's modular enough that it can't be completely broken by someone messing about with it. 
To be fair, from the perspective of teaching (or learning) Computer Science Python 2.x will work just as well as 3.x. 
which says 4 spaces though(probably revised)
&gt; Could you please provide your solution in a code? Rather not. I maybe would if there was no *learn* as a prefix to this sub's name. You call `create_polygon` with arguments like x0, y0, x1, y1, ..., where each x, y pair represents a point on screen. You created first star by adding 50 to each x and each y in `souradnice`. That means you move every point 50 pixels right and 50 pixels down from the original position (which nasn't been drawn) in `souradnice`. Then you added 200 to that top left star and so you created the right bottom star. Now go with the similar process again to draw needed stars, but with that copy list `souradnice0`. Add 50 to all points and you have position of the first star. Do not draw anything. Now add 200 to only even arguments (x0 is index 0, y0 is index 1, x1 is index 2, y1 is index 2, ...). Even numbers are those whose remainder is 0 when they are divided by 2. Draw the first star and you will got it for the last star.
&gt; Generally if you’re having lines that long you should probably rethink you’re approach this is crap...just write a substantial models.py in Django and you would know. Also look at any well known python projects in github and ~100 lines are pretty common
You're caffeinated too! You're also speaking sense in the face of dogma. People conveniently ignore the fact that PEP8 is intended for the standard lib, yes it is a good guideline but let's not be bound by dogma.
&gt; time. I just started on a Python 2.3 project. Which University rank #1?
“When applying the guideline would make the code less readable, even for someone who is used to reading code that follows this PEP.” You didn’t read PEP8 if you think it says you can’t use 100~ character lines. 
parsed[0].scores.happiness
Questions should be posted to /r/learnpython. Also, please format your post so that the code is displayed correctly. It's impossible for the code you posted to have the output you describe. It would give a key error, because there is no `'happiness'` key in the first dictionary in your list. Post a link to a pastebin with your actual entire code.
He identified them as item 2 in the list
So your sensing on the pi and then sending via serial to a computer ??
Kotlin? Why not Java?
It works now, however the original code before it was fixed looked like this... https://hastebin.com/paluwafufu.py
FWIW, my company has a single coding rule, which states "PEP-8 is wrong".
Good for fun. Just don't use it as a replacement for widgets.
Maybe ask your husband to clarify his bad experience, and see if it applies.
&gt; write ... in Django Well, there's your problem! (half-joke) The moment you pick up a heavy framework, you might need to start bending conventions. You'd need the framework to allow for the convention, and that's usually not left in your hands as a user of said framework. Fortunately line width is a pretty soft thing, and most linters allow you to skip that check or even allow you to specify a different length. I use 120, personally. This length tends to work well on 1080p screens with reasonable font sizes. 
Hello everyone. I am searching for a project to contribute to. I am new to python and want to feel and enroll in real world programing. I am comfortable with the language, also I am working on some algorithms. 
Working on this this morning and I realized one of the things the class/inheritance DOES do for me is force the signature of all my `process_message` functions to match which is what enables the Dictionary handler mapping at the start. Obviously I can implement this without the class, but setting that signature once (in the base class) then adhering to it throughout *feels* like the right thing to me. Any thoughts on that?
Python C runtime requirements differ a lot. For example, just for the CPython runtime: https://wiki.python.org/moin/WindowsCompilers Also, you can compile the Python interpreter with whatever compiler you want as long it is compatible with the features it uses. Native extensions are not that frequent, and for this particular issue, most popular libraries offer .whl files (wheel archives) that contain the pre built binary extensions too. So, in my opinion, there is no use for such library in the Python ecosystem (the amount of required work to make this happen seems to much compared to the benefits it would bring). Also, windows is not a very developer friendly operating system and if you really want to be serious about programming at a level higher than hobby-level, I suggest migrating towards a non-Linux OS.
time to jump ship
Nope. I fully agree with it.
&gt; Does something like this exist for python? If not: Why? What makes it impossible to have a similar pip installable package? Because you haven't got around to writing it yet. I'm looking forward to seeing your 0.1 version on github.
I think you need to call ser.flushOutput() and ser.flushInput() before any interaction with the sensor, also for testing call flushOutput before closing the port
I know. I was just pulling your leg. :) This discussion got my attention too and I'd like to know what Python users think about this. I learned Python 2, then 3, and I played a little bit with kotlin. Frankly I still don't know where stands kotlin compared to the existing languages.
Scroll down to the bottom of the page you you see a nice note "Last updated December 13, 2012. "
Not always. There are some gems here and there. For example, the books on Object Oriented Programming were actually quite good. But yes, overall they tend to be sub-par.
Of course, those books aren't part of the bundle. The only one in there that I have read is the "Expert Python Programming" book and it was okay. I may have read the "High Performance" book as well, but I think it was a different edition than the one in the bundle
Pep-8 is not law, and strictly adhering to it results in bad code more often than not. Although they should update to 3.6
It is totally doable. I actually think it can be achieved in a batch script, if anyone is willing to do so. And about the "non-Linux", yeah my mistake. Correcting it. Thanks.
Easy fix! Write a python 2.xx to python 3.xx converter in python 2.4-2.6 to learn the basics of both versions, and then bootstrap your own version up to latest when they’re ready :)
[removed]
Google wants to make people employable only by Google.
Isn't this xenophobia or something? I didn't even mention race. Race is a largely social construct. Even between races genetic variation is extremely high
They encourage 4 spaces externally, but use 2 spaces internally for historic reasons. 
ahh got it everyone is wrong except the reddit pep8 worriers!
doing wrong and being wrong aren't same things
You can't have exceptions but, as a general rule, you should follow most of it for sanity. Linters are a must for every language.
After making something similar with GTA V, I began to regret not marketing it as something applicable to any game. What is there in this code that makes this not applicable to any other driving game? 
That's exactly why pep8 is nice. It's pep8 saying so, not you. And often times it can squash a squabble. And you can have an automated tool analyze it.
Can you explain why please?
FWIW JSON interpreter sites like this - http://jsoneditoronline.org/ - can be really handy when working on something like this, rather than trying to parse the JSON in your head to figure out where the data you need is. You click the value you want, and it shows above it that you need to go object-&gt;scores-&gt;happiness
Kotlin is modern language and from my perspective, it feels very Pythonic. I would believe that a lot of Python construction inspired Jetbrains developers to some extent. Needless to say, they took nice stuff from other languages as well. For example: Data class https://kotlinlang.org/docs/reference/data-classes.html When expressions https://kotlinlang.org/docs/reference/control-flow.html#when-expression Kotlin ranges https://kotlinlang.org/docs/reference/ranges.html Sealed classes, class extension, lambdas, type inference, etc. So many good ideas with JVM rich ecosystem and Jetbrains IntelliJ. Yes, IDE is topnotch. Thanks to static typing it is much easier for IDE to reason about code, which makes this combination almost made in heaven. The last thing that attracted my interest is first class support for Android world. This is in my eyes killer feature as Java makes me cringe. 
Never knew they existed! Thanks, that's going to be extremely useful :)
Check last edit date: 2012.
&gt; Multiple inheritance isn't as flexible as composition It isn't a question of flexibility, it's a question of intuition. When I see `class Duck(Flying, Swimming)` I understand that a Duck is being defined, which can fly and swim. When I see `def equip_jetpack(thing) &lt; side effects &gt;` I have to reason that a Duck may, or may not be able to fly, and that by looking at the definition of a Duck I do not know that it may or may not be able to fly.
What about if I use tabs?
You were indicating that there was hate towards the suggestion of 80 in PEP8 because of your whiny examples and that there is “hatred” toward it. I explained that PEP8 clearly explains when you should ignore parts of it because readability is better. /u/icp1994 You literally can’t follow your own discussion points. You need to stop. You’re embarrassing yourself. 
First of all, you do not need to tag someone if you are replying to them...basically the DRY principle. Now you started from my comment and not the comment above? I specifically quoted the part which I was disagreeing. Go check the quoted part and reply whether you agree or not.
I tagged you because I expect you will delete your comments after you reread them. It’s basically the “keep track of the chicken shit” principle. 
So let it be written, so let it be done.
Shoutout to https://projecteuler.net/
2GB RAM? Haha, my desktop computer has that ... I should upgrade. Also, what is the GHz of the CPU? Mine is 2 cores * ~2.8GHz.
&gt; I'd also appreciate your views on the usefulness of this language in the future. I understand that it's becoming more popular, but it also has some security issues (Hacking). Python? No, no security issues I'm aware of, where did you hear this?
I really believe it's the second. As I said, this problem with Python native extensions is somewhat resolved by providing and using wheels for the libraries that require the C runtime to compile locally (here is a huge list that most probably it contains the libraries you would ever need, compiled for all windows platforms: https://www.lfd.uci.edu/~gohlke/pythonlibs/). If you need to develop a native extension, the only hope is that you install the correct C compiler.
Not at all. I hope you have a nice. New Year. Let me suggest reading some Agatha Christie for your resolution. Her work can really help you with read comprehension. 
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [vinitkumar/googlecl/.../**googlecl-pylint.rc** (master → 0ca33fa)](https://github.com/vinitkumar/googlecl/blob/0ca33fa359b2370237de1f21cecf1309e3d7c5bc/googlecl-pylint.rc) ---- 
Try berryconda, it's basicly anaconda for RaspberryPi and other ARM's
Ok thanks. Is it the same install method as Anaconda?
lolz, My university had textbook buildings.
The fact that an observation is common doesn't imply that it's correct or useful to you. There's plenty of currently running code in COBOL, some people are even enhancing old code written 20-30 years ago. **No one** is starting new projects in COBOL. **No one** would even *think* to do so. The fact that there are some remaining graybeards willing to answer questions about COBOL does not constitute support, or keep it a living language. No one needs to convert their old code to Python3, the end of support for the language means the end of support for the language. No new features, no bug fixes, no security fixes. If your code works in Python 2 it will continue to do so. But if you find that a language flaw is the reason for some edge case bug you'll have to work around it, because but for a few graybeards there will be **zero** interest in fixing it in 2. Now, you'll still have access to the source, so you can fix it yourself, but that doesn't give you a good reason to continue down a dead branch and write any new code in it. This isn't -- or at least shouldn't be -- controversial... you're unlikely to be running Linux Kernel 1 any more, or DOS, or Word 1996... there have been **many** forks in languages over the years, and there will be many more. Python2 **is**, de facto, the inferior language now, and the sunset for support is *very* real ... you could write your brand new website in HTML 1.0, but would you? No? Then why the heck would you start a greenfield project right now in Python2? Which will not be installed by default on *any* machine in just a few years.
Yes, it's a bash script if I recall correctly, [here you go](https://github.com/jjhelmus/berryconda)
&gt; If you are starting a new project today there's quite simply no good reason at all to start it in Python2, full stop. Not everyone works solely on brand new software stacks. Many people regularly work on software that is 5 or even 10 years old. I would bet the vast majority of software devs at any large company have to maintain at least one system that old. If you’re at a large company built mostly on Python and it’s not a very new company, likely most of your code base is 2.7. 
Why is your university relying on a 3rd-party tutorial to teach people programming? Teaching is a core task for universities, not something they should outsource to random internet documents.
What I said was "virtually every Python app *I've* seen". My own observations are not a false statement. There is more than just legacy tooling using Python 2. Lots of enterprise applications, the front-end of YouTube, etc. As I said in another response, there is so much Python 2 out there that companies will have to make a business decision: rework a bunch of existing code or put energy into maintaining Python 2. I don't know what makes sense in all instances, but I know some of the code I've worked on would be painful to migrate and might as well be re-written from scratch.
Great!
&gt; startups, who are the only ones coming even close to doing things "the right way" This doesn't sound like any startups that I know.
[removed]
Oh dear god. It’s you again.
Built a knockoff of [settlers of catan](https://github.com/stoksc/notcatan) for my software engineering class. Turned out better than expected but still worse than desired.
They also have this: "A Foolish Consistency is the Hobgoblin of Little Minds" at the beginning that everyone ignores.
Great!
A Foolish Consistency is the Hobgoblin of Little Minds
Pretty good writeup! I'd recommend turning it into 2 or 3 articles instead of 1. - Mixins in Python - Mixins in Ruby - Comparing Mixins in Python and Ruby
&gt; for historic reasons. You would think they would just Ctrl-A, Ctrl-R and change " " to " "
&gt;here is a huge list that most probably it contains the libraries you would ever need, compiled for all windows platforms: https://www.lfd.uci.edu/~gohlke/pythonlibs/ Which are not `pip install'-able... Btw: I know this collection and really appreciate the work done there. I'm a little bit confused that nobody seems to be interested in a simpler setup... 
Hmm, I did not know this. But why teach new employees Python2 instead of Go?
When your editor is on your host, and the code runs in a virtual machine.
That would happen if you allow tabs and spaces, but if it were a language like Python and the white-space was used as a delimiter, and *only* tabs were used, I don't see how things would get misaligned?
Oh of course, I don't actually hit space 4 times when coding in pep8. It's just, logically, it feels silly that in the file it's using 4 characters when it could just use one.
Stop trying to burst the bubble, it's circlejerk or bust here on plebbit. If people can't use their own brains, they need guides for everything. Can't have lines longer than a tweet in your code, you know? Poor lad can't process that.
Fair enough. It's still a really bad anecdote since you're offering as an argument against the depecration of python 2 when it's been a long time coming. &gt; There is more than just legacy tooling using Python 2. Lots of enterprise applications Yes. That IS legacy. &gt; rework a bunch of existing code or put energy into maintaining Python 2 Those that care about security will port it and those that don't won't maintain it any more than they do now. &gt; but I know some of the code I've worked on would be painful to migrate and might as well be re-written from scratch. Sure but there's been ample time to port it. Having a hard deadline is going to help make it a priority because it never is the right time, otherwise. 
I had a physics teacher like that in high school. She never changed the tests. A classmate had an older sister who saved all her tests for some reason and kids would pass around copies and see all the questions before the test.
Who is making the argument that they want to write a class for one simple function?
Selenium and its mobile counter-part Appium is still very much in use. Actually, a lot of big companies are using them to automate their test framework. Works well with Jenkins too.
If you follow PEP8 without preserving context, just running all the code through some formatter or linter and fixing everything it nags about you will end up with parts that are amazing, but some parts which are horrible and unreadable. Of course that is not necessarily PEP8's fault, it's just that most people do not think PEP8 when they write code. In any non trivial source code you will need to rewrite bunch of stuff just to comply with PEP8 or you can save a lot of unnecessary man hours, deviate from PEP8 a little and move on to something that actually pays the bills.
99% of the time it's correct. The one place I really hate PEP8 is how it mangles functions with a large list of parameters.
In college we had stacks of old tests from one EE professor. Each year the tests were *similar* but not exactly the same - he'd throw in a resistor here, a capacitor there. The old tests were great for learning the material but if you expected to see exactly the same circuits on your test then you'd be fucked :)
Migration is only a requirement because it is being deprecated though. Is there something fundamentally wrong with the language? If we argue that Python2 and Python3 are completely different languages that just happen to share a lot of syntax, is there still a good reason to get rid of 2? It vaguely analogous to C vs C++*. So given that, let's go back to the now -105 point comment that said &gt;it will live on, even if support is handled by somebody other than the person(s) saying support will end. I don't think this is unreasonable. Do you think all of your code will be migrated to Python3 in 27 months? My code _might_ be. Google's likely won't. I agree with prelator2_7; I would venture a guess someone like Google will pick up maintenance level support for Python2 for at least some amount of time. \* Yes, I know there is more nuance to C vs C++ than Py2 vs Py3. I chose 'vaguely analogous' intentionally because it doesn't mean "exactly the same". Poking holes in an analogy isn't helpful.
Thank you, this explanation really helped. I got it now. It's just a minor code we had in our class last week, we're doing Python from the beginning, using tkinter mostly. I don't think it's the best way to start, other books seem to not use tkinter at all.
If you have questions, please ask these in r/learnpython. Other than that I am not sure what you're asking exactly, so I can't help you anyway. Please include the problem you're having next time (and if possible the code you're having trouble with).
I’ll be porting a massive junk of code to 3 soon. Will it hurt? 😢
[Here's the reference](http://www.randalolson.com/2016/09/03/python-2-7-still-reigns-supreme-in-pip-installs/) (it's older than I thought). 
Inheritance is a bad example. Should be something like this: class Animal: def __init__(self, eyes, legs): self.eyes = eyes self.legs = legs def walk(self): pass class Bird(Animal): def __init__(self, eyes, legs, wings): super().__init__(eyes, legs) self.wings = wings def fly(self): pass Bird is an Animal. And Composition: class JetPack: def __init__(self) pass def turn_on(self): pass class Human: def __init__(self): self.jetpack = JetPack() def fly(self): self.jetpack.turn_on() Human has a JetPack. 
[removed]
I think you can create a blank file with name `__init__.py` in the directory where all of these files are, read more about it on [StackOverflow Question](https://stackoverflow.com/questions/448271/what-is-init-py-for). Once you do this I think you should be able to import files
lib2to3 should help
[Here's the reference](http://www.randalolson.com/2016/09/03/python-2-7-still-reigns-supreme-in-pip-installs/) (it's older than I thought). Can you show a reference for "most distros use python3 for all OS level code, including Fedora and Ubuntu"? Because all I've found is that *new* code in Ubuntu is python3, but the majority of it is still in python2, and they are still shipping python2 out of necessity. 
You had the gall to go against the hive mind. Reading some of the comments around here you’d think py2 is worse than brainfuck, and is never used for any serious development.
Thx for the input! Have you ever had to do that? If so, is it actually a pain?
It depends on the codebase. As far as I know, something like `lib2to3` should get you most of the way there but I don't think it's perfect.
Because Great Britain and Europe aren't all world, in different places, this game has another title. 
It's been what? Fifteen years? Good riddance. 
Click back in the cell you want to run and hit run again. When you run a cell it moves your curser to the next cell. Clicking run over and over just gets you more cells. Or use the menu and click run all. 
There's a lot of free ones for GTA already. You might run into legal issues if you're selling it. Would depend on the publisher.
The problem is pylint (the linter I use) is overly pick. Variable name too long, has too many underscores, too many args, etc.
The fundamental failing of Python was its handling of strings. A modern language in a post-Internet world can't think of the world in an ASCII-first, bytes-first fashion. IIRC, Guido has said many times that was the major regret of Python's genesis, and the only way to rectify it was to break backwards compatibility. Which he set out to do a decade ago. There's been plenty of warning. As for Google ... well, again IIRC, they're a longstanding major funder of the PsF, and signed off on this move years ago. As for the analogy, I won't poke holes in it, I'll just say it's inappropriate. Python 2 to 3 is more like the difference between Haskell and PureScript, if the intent of the Haskell devs all along was to supersede it with PureScript. C++ was a radical rethink of C in terms of adding a whole new programming model; PureScript tries -- with varying levels of success, because at the end of the day it's not an official and intentional evolution from one generation to the next -- to rethink some bad ideas, correct some deep technical debt, and move on. Official support from the PsF will end. Unofficial support *may* continue... relying on that conditional is a poor business choice.
Honestly it's not too painful. We ported a 20 kLOC codebase in a couple of days. As long as the code is reasonably well tested you should be okay.
&gt; There are certain classes of programs for which Py2 is objectively better suited I'd dismiss this out of hand as being nonsense, but I'm actually intrigued. What makes you say that?
&gt; reasonably well tested HAHAHAHA. no.
So most third party packages will stop supporting it earlier or already have.
I keep pressing run (play icon) while the cursor is inside the cell, but it keeps creating cells... Tried the shortcut ctrl + enter (run cell only), doesnt create a new cell, but doesnt run the one I m on either.
It’s only a postprocessor, so at worst we’ll not get results. It’s not a critical tool at all
`git blame -w`
&gt; Is there something fundamentally wrong with the language? There will be something wrong with the CPython interpreter, when security updates stop. At that point, hopefully people move to Python 3 or gather support behind a single unofficial Python 2 interpreter, rather than try to maintain their own security patches or just ignore the potential problems. This is, of course, for code that needs security in the interpreter.
At the point Python 2.6 was released, avoiding Python 3 was good advice.
They don't recommend Python 2.4-2.6. You're referencing a document that hasn't been updated since 2012 and probably was written much earlier. Also, that guide is not giving bad advice. Honestly, most of it it's probably better than PEP-8 where there is a conflict (which isn't much); ok fine use 4 spaces and it's better in every other way.
Why do they need to propose an alternative when they say they dislike something? It isn't their job. They're simply saying they do not like it. You don't need to know how to fix something to criticize it. Film critics don't need to be filmmakers to think a movie did something wrong. I don't need roofing experience to point out a terrible shingling job. 
My GTA version wasn't paid, it's free on github... but this detracts from my original question. OP seems to have made a high-quality option that could be used on more games than just one, like mine was, so I am curious why he's chosen to put it under "Europilot" only. Thanks for your opinion though lol :P
Yeah, that's a great point. The backend of my script just took frames from your x,y location, and then inputs from the keyboard..etc. I just so happened to use it with GTA, so that's what I put it under, but then I realized that it coulda been used with just about anything. There are, of course, other subtle differences between games, so you're probably right!
[Here's an interesting oneliner](http://metapython.blogspot.nl/2010/10/creating-heap-class-in-one-python-line.html) to create a class from the `heapq` module.
Ok, Code in one block, you hit run and it produces output below it. You click back in the cell, edit the code, hit run again and it gives you another cell? 
https://eyed3.readthedocs.io/en/latest/
In this case I think it's more of a red flag. Google's code is really cringeworthy in this exercise. First thing that jumped out was the lack of a context manager for opening a file. Jesus Christ.
Alignment is used when you want to have one part of code be exactly above or below another character. If the size of the tabs changes, you're no longer aligning to the same character and things start to look off.
"I decline any responsibility for Google API client code." - Guido Van Rossum, 
This is not true. Python is one of the four “blessed languages” at Google (along with Go, C++, and Java), and will remain so for the foreseeable future. It’s heavily used for machine learning and data science. The transition to Python 3 is ongoing. Source: am Google employee. 
&gt; What makes you say that? Because it's true. Py3's auto-decoding is great when you want Unicode. It isn't when you want bytes. Just as it's left to the programmer to do all the decoding if you want Unicode in Py2, it's left to the programmer to *undo* the decoding if you want bytes in Py3. For example, if you're writing a program that plays nice with POSIX tools like `find` and friends, Py2 Just Works because it shares the POSIX text model. But if you need to pass something like Linux filenames (which are bytes) unmolested through a Py3 program, you need to fuck about with `os.fsencode()`, surrogate escapes and the STDIN/STDOUT buffers. 
I don't know *why* it's not a class, except perhaps that a) **heapq** was added to the stdlib in 2.3, b) by the time you're getting added to the stdlib you've probably been pretty stable for a couple years (meaning changing the API would be extremely painful), and c) the ability to subclass **list** was only added in 2.2. I see no reason why they wouldn't be happy to accept a pull request that incorporated what the one-liner is *trying* to do, properly documented of course. But you'd have to fix the docstrings. &gt;&gt;&gt; help(Heap.push) Help on method &lt;lambda&gt; in module __main__: &lt;lambda&gt; lambda self, *args unbound __main__.Heap method Which isn't very helpful. 
Thanks, solid answer. Not things I do frequently, but I'm sure Py2 can still be the right tool for certain jobs. At the same time it seems to me like Py2 is still a perfectly valid option for small scripts but for larger applications it seems like the small overhead of writing Py3 code that you mentioned are hugely outweighed by the large number of language improvements.
It hurts. A lot. Bring lube.
Considering it is from 2012, it was alright to use Python 2 over 3, but it is outdated now
Thanks a lot for your help. Indeed, this seems like it could work. I will research the docs you linked, and try this out.
Probably better to use the name that's going to be familiar to your primary audience ... I guess the marketing department for this game publisher is retarded.
Would be nicer if you could get it to look for TODOs that are over a certain age (e.g. 1 month). I'm not sure I want emails reminding me to remove a TODO I put in yesterday on an experimental feature which might well be removed two weeks from now.
This is an amazing project! Awesome!
Just 3 more years guys! Then we promise you'll all be using Python3 like all the college students on reddit!
Yes, again. This isn’t the first time you’ve come in here spewing your Python 2 bullshit.
Yes, because 50% Python 2 is “Every Python project ever made.” /r/quityourbullshit
Thanks for the feedback! I'll look into using `git blame`s `--since` flag to filter out newer commits.
More info is required please :-) Is it a django app, do you need wsgi if it’s just a crawler If it’s just some puthon code, a simple git pull and a from job is all you need For more complexity, use ansible to do it :-) 
https://www.reddit.com/r/Python/comments/7d4cfy/why_doesnt_the_heapq_module_provide_a_very_thin/ &gt; Back in 2002 somebody proposed the code to the mailing list and Guido merged it into python exactly how it was originally written. &gt; &gt; Back then there was less concern over the quality &amp; consistency of code in the stdlib, which is very apparent when you start poking around some of the legacy libraries in the python codebase. &gt; &gt; https://mail.python.org/pipermail/python-dev/2002-June/025893.html &gt; https://docs.python.org/release/2.3/whatsnew/node18.html
If you install the "adb" (Android Debug Bridge) on your PC, you can send "touch events" to your device and also take screenshots. You can write a python script that runs these commands while the phone is plugged in to the computer.
Can I install adb on a raspberrypi too? Thanks for your post:)
maybe, I can't find official builds. But try this https://github.com/google/python-adb This is a pure python implementation of adb
This is cool!
I'm learning about best practices in Data Science in preparation for my new job. Also learning some things like sensor fusion, kalman filters, and more machine learning.
Good one, except for... https://kotlinlang.org/docs/reference/delegated-properties.html#storing-properties-in-a-map You know there are static typed languages like Java and modern static typed languages :)
It's ok to violate PEP8 as long as you violate it consistently. 
I'm building a Django app to replace my google sheet-based budgeting/expense tracking. I eventually want to connect a service like Twilio so I can text updates to the app when I'm away from a computer. Goal is to build something useful while learning a lot about Django and testing. Going well so far! Any helpful packages I should check out for this kind of thing?
Because "truck" is known in more countries than lorry, including GB.
The best thing you can do right now is write some code. Step away from the tutorials for a bit and write your own code. You don't need to do anything original, just do it yourself. After that, do it again. And again. Keep writing code. The single most important thing you can do when learning to program is to write code. It's okay to get stuck. Hit the docs when that happens. If the docs don't help, look for other projects that seem to do something similar, and read how they did it. Once you've cleared your blocker, keep going. Don't be afraid to fail. Don't be afraid to ask questions. /r/learnpython is great for this. But seriously, this post belongs on /r/learnpython :-P
You need to add this line to the top of your program: # -*- coding: utf-8 -*- --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
So you want every games name to be translated into every single language on earth to appeal to "target audiences"? Wow what a marketing genius, everyone at Valve, EA and Ubisoft just gasped and fired all their PR teams because of you.
I found something called SugarORM for Kotlin. It doesn't look very good.
I just told you 10 minutes ago that questions like this belong in /r/learnpython. 
ty for the fast response. the code not crushing any more but still it doesnt type in hebrew. im using windows 10 and python 2.7.13.
My hint would be to do the tutorial exactly. Something you altering is breaking it or the tutorial is no longer relevant. Once you do get it working you will be able to see the mistake you made. Are you using EC2 or Elastic Beanstalk (EB)? The error seems like you are using EB!
Sorry, apparently this [is a known bug](https://github.com/asweigart/pyautogui/issues/137) and has not been fixed yet. You will have to use something besides pyautogui. 
`flake8` is much better. And quite configurable.
Just put this at the top. import sys if sys.version_info &lt;= (2,7): from __future__ import * Now you can write everything assuming everything behaves as if it were the standard python 3 implementations. Also, please post future questions like this in r/learnpython. 
bolded
Make a GUI. GUIs use a lot of OOP. For example in Minesweeper, each square would be an instance of a class. Games are also pretty OOP heavy. Each player and sprite are an instance. 
Thank you. Just subscribed to learn python. =) 
i agree that fluent python isn't a beginner book, but i think with the right attitude it's fine to read as a beginner. basically, if you can quell the urge to jump headfirst into metaclasses and import hooks and other such witchcraft, i think it's worthwhile to know that such things can still be done. then, when you have the hours under your belt and have the intuition to use them the right way (sparingly) you'll know where to go.
This is something called mean reversion. It’s a very simple idea, yet it’s still one of the best methodologies in trading. 
1 common way of dealing with this issue is with [virtualenv](https://virtualenv.pypa.io/en/stable/) as you can install a different python per project. Though to get that working with pyscripter seems difficult see [link](https://groups.google.com/forum/m/#!msg/pyscripter/1xwy0yltTrA/v8taZ4nVDA4J) Talk to your teacher! Are you told to use pyscripter in your course? You might be better with another IDE such as pycharm education edition that supports virtualenv. 
I put the code, press run, and at first it works but I think that it is after, that I keep making the some kind of mistake that I cant explain now... and once I do that I cant run the cell no more. It is frustating, since I cant recall with is the stuff I m doing that locks it up for me. I do recall that I m inside the cell and you need to put some kind of string or number, to answer to the program and from time to time I press a certain button instead of shift + enter, and it locks up from there on for me.
Well we use pyscripter during lessons and that is what it is marked on so I'm pretty sure that is the one I should familiarise myself with. Sure thing. I'll talk to my teacher and if he doesn't know I'll just check on the computers. 
Seems you may be able to use the portable version of pyscripter. &gt;&gt; The zip files contain portable versions of PyScripter. No intallation is needed. Just unzip the archive and start using PyScripter. Just use the same portable version as your teacher assuming the portable version comes with its own matching version of python. 
There's two ways of programming something, exactly how a CS student on reddit thinks it should be done, and how the real world does it. 
Wow.
Wouldn't that mean that you get blamed for making a commit the day someone else's TODO turned 30 days old (or whatever)?
wouldn't that also mess up spacing before comments begin? like so: cthreads = 5 # Max number of communication threads 
I would suggest posting this question on r/learnpython. r/Python is more for general discussions about the language .
This is just the excuse I need to sit down and really learn python, properly. Thank you very much for posting this. 
For sure, it's a lorry in GB.
FYI, python2 isn't even included in [Ubuntu 17.10 distribution images](https://wiki.ubuntu.com/ArtfulAardvark/ReleaseNotes)
I did not say every project ever made. I just said the majority of the code I've seen. That link clearly shows that there is still a LOT of Python 2 work happening, which suggests it is a bit premature to declare it "end of life", no?
I'm still a beginner in docker; Is there anyway to change the entrypoint for gunicorn to a socket to make life easier when trying to serve it via nginx? or is there an easer docker centric way?
You're welcome to point out the first time, but I believe this is my first thread related to Python 2 vs. Python 3. I wasn't spewing anything, though I clearly stepped on your religious sensibilities. I just expressed surprise that Python 2 would not be supported given how many Python 2 projects I've personally seen relative to Python 3. I had never heard that there was a fixed date until I read this thread, in fact, though I knew there would be "that day" as some point. However, to me it seems far too early. I don't care that Python 3 has been around for years. People have been creating new projects in Python 2 all during those years. I'd even venture to guess Python 2 was selected for new stuff in the past week or two. While I see that there are the condescending voices here in this thread saying IT managers are not well-informed, blah, blah, not everyone hangs out here. Many just pick up a Python book and write code.
py2 - the real python ;)
Stop putting emphasis on certain parts of the sentence. I clearly framed that statement to be within the scope of things I have personally observed. I know full well there are a number of Python 3 projects, but given the number of Python 2 projects out there that are likely not going to be moving over the next 5 or 10 years, it just seems premature to say Python 2 will not be supported at all. Just surprise, that's all. Seems premature.
Here's a sneak peek of /r/learnpython using the [top posts](https://np.reddit.com/r/learnpython/top/?sort=top&amp;t=year) of the year! \#1: [I'm releasing a free code for the "Automate the Boring Stuff with Python" Udemy course](https://np.reddit.com/r/learnpython/comments/7fxork/im_releasing_a_free_code_for_the_automate_the/) \#2: [90% Python in 90 minutes](https://np.reddit.com/r/learnpython/comments/661o5a/90_python_in_90_minutes/) \#3: [PSA: If you have a library card, you probably have access to Lynda.com, which has tons of Python courses](https://np.reddit.com/r/learnpython/comments/6rrsdu/psa_if_you_have_a_library_card_you_probably_have/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
Isn't Whitenoise going to be slower than any other web server? 
Im afraid you wont find many beginner examples without the "dogs" and stuff like you said. Probably not what you're looking for, (he creates an Employee Class with names, email, pay etc.) but Corey Schafers 6 OOP Python videos on youtube are good and hes a great teacher. I think he has some more OOP vids other than the beginning ones.
[FAQs from Quora](https://www.quora.com/topic/Machine-Learning/faq) are also pretty interesting and extend ideas mentioned in this article. 
Thanks for this.
I merely noted my observation that there are a lot of Python 2 projects out there, so moving to drop support so soon was rather surprising. My perspective is what it is, not a general truth or a lie: just an observation. You are not disagreeing with my original observation, though, as you just said yourself that "if Python 2 projects haven’t switched yet they probably never will." And you and I both know that there are a lot of existing Python 2 projects out there that have not moved to Python 3. Perhaps the most notable I can think of is YouTube's front-end. I'm not sure if they're moving to Go or not, though. They did convert the code using https://github.com/google/grumpy. Maybe that project was named after having an interaction with some folks here on the topic of Python 2 vs 3? :)
I based this on the tool that Google released, if the goal was to support Python the tool would instead allow to write Python modules in Go, and it would support Python 3. The Tensor Flow initially only supported Python 2 until people pushed for Python 3 support. Or that Google Cloud wasn't offering Python 3 support. Perhaps this is just that so much is going I at Google and some teams are migrating away from Python while others are embracing Python 3? It's good to hear that Python 3 is getting embraced there.
Your original observation was that “virtually all” Python programs you’ve seen are Python 2. I do disagree with that. There are loads of Python 3 projects out there. I also disagree with your statement that you feel that the decision to stop supporting Python 2 is premature. How long would you have them wait? Another decade?
I'm building a terminal app to boilerplate projects so my teammates can start new ones with a few commands. The idea is to prompt a list of projects in the company's BitBucket and provide the option to create a new one. Then it creates a new repository, clones the initial structure from another repository (based on the project type, eg frontend, wordpress, landingpage...) and creates a new folder in the company's server. I'm currently stuck in creating a new repository, for apparently there's a problem with Bitbucket's API. Although I specify the project key/uuid to which the repository belongs, it goes to a completely different project. I don't really know what to do from here &amp; if I can't fix that, the whole app loses its main purpose. It's really pissing me off by now.
I wish XP was the oldest OS I had to interact with at my workplace...
Depends on if you've got bad data that you thought was text. If so, Python 3 will be revealing some bugs you didn't know about.
Yea dude you went crazy for this project! 
&gt; Perhaps this is just that so much is going I at Google and some teams are migrating away from Python while others are embracing Python 3? That's definitely the case. As for Grumpy, I don't know much about it or how (or even if) it's currently being used internally. I also don't know if it will ever support Python 3. But I do know that Python is actively and enthusiastically used at Google, and that migration to Python 3 is…proceeding.
Packt is shit, though. Any quality books they have are a result of exceptionally good authors. Most of those books won't be worth it
No doubt, Kotlin has a long way to go. I like its design and IDE. No one can deny that Kotlin relies heavily on Java ecosystem as it has not many own libraries yet. 
Nothing regex can't solve.
&gt; If you follow PEP8 without preserving context, literally the second section of pep8: &gt; &gt; A style guide is about consistency. Consistency with this style guide is important. Consistency within a project is more important. Consistency within one module or function is the most important. &gt; &gt; However, know when to be inconsistent -- sometimes style guide recommendations just aren't applicable. When in doubt, use your best judgment. Look at other examples and decide what looks best. And don't hesitate to ask! &gt; &gt; In particular: do not break backwards compatibility just to comply with this PEP!
Another approach is running as part of the test suite -- during test collection, create a dynamic test asserting that "TODO" doesn't appear in any comments. https://pypi.python.org/pypi/pytest-todo does this
And according to PEP-8 *itself* that is more important. I swear to god none of these little zealots have ever even read the document. https://www.python.org/dev/peps/pep-0008/#id15
I used a biological neural network to do binary classification for a Kaggle competition. I did it in Python 2.7 too, I would do it in 3 but it sucks. 
If you can make a script to set this up that would be even better I think. 
For X in ..I'm in bed but I'll edit tomorrow 😅
That tool is a cute proof-of-concept that a few engineers made. [It's barely usable](https://github.com/google/grumpy/wiki/Missing-features) (no socket support?!), and [it's only had one commit since August](https://github.com/google/grumpy/commits/master). Google has tens of thousands of engineers; you can't go from "some engineer at Google is working on X" to "Google's company-wide policy is X".
&gt; running all the code through some formatter or linter and fixing everything it nags about Doing this is literally a violation of PEP 8 :-). Guido even got grumpy at the developers of the `pep8` tool (that's why it's `pycodestyle` now), because the first rule in PEP 8 is that you have to think about what you're doing instead of mechanically applying some style guideline.
Please copy and put the output in notepad, you should be able to see the exact output.
&gt; the real python is that not py1? Can you still say with py2 the fastest python?
Cool username. It's actually extremely useful to have you put a name to it, as now I can look at other implementations and optimizations more easily.
Awesome:) Thank you!
I haven't looked too hard but if a combination of data pipelines and Pandas doesn't make one hell of a tool then there's no hope :-)
Thanks. This is not my article. I was just sharing it to have some discussion about Kotlin as supplement to Python. For instance as alterative when you need some android app and you dont want to use Java.
Building a Flask site that will start off as a simple blog at first. I hope to either add additional functionality to an admin section of the site (or just deploy a separate Flask app) to be a sort of web dashboard. Use the various APIs to aggregate information I'm keeping track of, like performance stats on my VPSs, to do lists, server status for the online games I play, etc. I keep stumbling across more web services with information I'd like to track. 
I'm not sure I would call `time` and `datetime` interesting. Depressing and frustrating are better words. Arrow is a much better library for time related work.
Ok, but Arrow is an external package and the post is about standard library packages
Would be great to see
Yup, it will be off course slower than nginx. But it is fast enough for most of the business apps. Given that you don't have to setup nginx and configure with app servers, it's really interesting option.
This one is specifically to remove hassle of setting up web servers like nginx. If you want web servers, check this https://github.com/tiangolo/uwsgi-nginx-flask-docker It uses uWsgi though.
You can use this https://github.com/xiaocong/uiautomator It works great
this is not stackexchange/a help forum... alternative to subprocess: http://www.paramiko.org
I've no idea, as I said I didn't look too hard, although a quick thought is that there is clearly a difference between a `pipe method` and a `data pipeline`. There's an excellent write up on the latter at [Generator Tricks For Systems Programmers Version 2](www.dabeaz.com/generators-uk/GeneratorsUK.pdf).
I know, that is why I started with saying: &gt;I'm not sure I would call `time` and `datetime` interesting. 
omg thank you so much for this. i finally feel like im actually accomplishing and learning something at a pace thats consistent with my skill level. 
I've found the quality of packt books in general to be a bit variable; a lot of them are pretty good, some are great, some are just ok
I bought this bundle. Many Packt books are garbage - some of these certainly are, but some of the books in the bundle were of particular interest to me, so I bought it anyway. It's super cheap whichever way you look at it. 
&gt; It's super cheap whichever way you look at it. Not if you aren't going to read the books or only use them to find information that is already available at the tip of your fingers for free...
Made a quick introduction to python by reading the official tutorial in 2 days, so that I am able to replace our old Perl scripts from the 2000s uploading mailing list members to mailgun from our database because they are a huge mess and seem not to work anymore. Trying to make it as reusable as possible because the old scripts heavily depend on our old domain name and the old mail system we were using ..
Better to ask for help in /r/.
Ok.. Thanks everyone.. Apologies I'll post questions on learnpython
This glorious 
There's also [plydata](https://github.com/has2k1/plydata/blob/master/README.rst) which works with plotnine, a ggplot2 clone. If you want to stick with pandas' way of method chaining, look [here] (https://tomaugspurger.github.io/method-chaining).
thanks, done
...well duh. 
Agreed! What would you recommend instead [Peewee](http://docs.peewee-orm.com/)? OR [aiomysql](https://github.com/aio-libs/aiomysql)
To most people "PEP8-ing code" literally just means running it through something like YAPF or pylint
You could use win32com to run VBA that will refresh the pivot tables. You could also use the [openpyxl](http://openpyxl.readthedocs.io/en/default/) package's pivot table module though I'm not familiar with it's capabilities. [This article](http://mourafiq.com/2016/01/01/generating-excel-report-with-python.html) gives an example of creating a pivot table using openpyxl. I use win32com when packages like openpyxl can't do what I need. import win32com.client as win32 xlapp = win32.DispatchEx('Excel.Application') xlapp.DisplayAlerts = False xlapp.Visible = True xlbook = xlapp.Workbooks.Open('myworkbook.xlsx') # Refresh all pivot tables xlbook.RefreshAll() xlbook.Save() xlbook.Close() xlapp.Quit() # Make sure Excel completely closes del xlbook del xlapp See also: http://pbpython.com/advanced-excel-workbooks.html http://pythonexcels.com/ 
Thanks for sharing this! How can I protect myself from this attack? 
One company I was at investigated [devpi](https://devpi.net/docs/devpi/devpi/stable/%2Bd/index.html) and it looked like a solid solution for this, allowing you to host a local mirror of PyPi as well as your own code. It seems pretty well thought out, especially if your long term goal was to push the resulting project to PyPi eventually, or you wanted your users behind an airgap. We never got around to onboarding it due to some internal disputes about operational jurisdiction and why Windows's Robocopy is the best possible solution for every conceivable problem -- don't ask -- but it still looked good.
Disable javascript.
This wouldn't work on pages using https though right? Because there's some process (RSA?) to verify the contents of the response using the public/ private keys of the host? https://youtu.be/vsXMMT2CqqE?t=4m36s
If this affects only http connections then Https Everywhere should help, right? 
It seems to simple to be true. How robust is it? How well does it compare to [python-magic](https://github.com/ahupp/python-magic) or even [libmagic](https://github.com/file/file)'s [own Python bindings](https://github.com/file/file/tree/master/python). Please add some tests using their test data. General code critique: - Please avoid this: `def get(**kwargs):`, do the following instead: def get(input: bytes, output=None): output = output or "extension" ... - Separate I/O from logic. It's better for values to have a single defined type. So you should not expect `input`'s value to be of various types. Instead let it be just `bytes`. The user can open a file themselves, that's not a problem at all and it saves you from dealing with edge cases and multiple conditions. If you want to provide this convenience feel free to provide another function (e.g. `get_from_file`) which calls `get`. - Validate arguments as early as you can. Currently you're validating `output_type` after reading the input. No need to do that if you decide to abort anyway. - That big nested `for` loop in the end looks like it could be improved if you reorganize `data.json`. - `data.json` should probably be a Python file to avoid magic like `os.path.join(os.path.dirname(__file__), "data.json")`. It'll be just as readable and avoids loading a file from disk everytime you import that module. - `output_data[element[output_type]] = len(signature)` instead of if output_type == "extension": output_data[element["extension"]] = len(signature) elif output_type == "mime": output_data[element["mime"]] = len(signature)
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [file/file/.../**python** (master → 0cb71af)](https://github.com/file/file/tree/0cb71af34ef356ff7aea8f98aa6198702b969b1f/python) ---- 
The mitmproxy part (injection of JS into pages) would not work, yes.
correct. A future feature could be adding sslstrip, to have the https connection to the https server, and giving http connection to the victim. So, to avoid being affected, just need to check if the connection is over https.
Yes, mitmproxy/injection would not work.
There are ways around that but it would help. 
From those comments I found [this](https://mail.python.org/pipermail/python-ideas/2009-April/004187.html) and [this](https://mail.python.org/pipermail/python-ideas/2016-January/037878.html). Hettinger said in 2009 he wanted to work on it, but nothing seems to have come from it, and in 2016 GvR said it shouldn't happen...
Looks good , read a part of it already!!! 😃😍would read the rest later !!!!
Thanks, will try it out soon.
Do it right, do it light. Do it wrong, do it long. The reason why you don't remember Python initially is because you learned it the "Quick" way initially. You are going to do the same thing this time.
I never knew the function of the pretty printer module. thanks for sharing it.
I'm a beginner myself, there is a sale on www.humblebundle.com with lots of books and some videos For 15$ you'll get all tears with months of books to read Unfortunately I cannot qualify to say if they are beginner friendly or any good
I have a really strong sense of deja vu :-(
Bah humbug, no mention of `itertools` and its association with the `operator` module.
Thanks ! It's working perfectly at this web hosting : http://onsale.jaguarpc.com/
Can you get around your self-signed cert woes by using Let's Encrypt?
Yep! There's a http header called [Strict-Transport-Security](https://tools.ietf.org/html/rfc6797). It allows sites to declare if they should be HTTPS only (with an expiration date, some other refinements). For the most part, all sites that plan to keep using https should be setting that header with at least a 1yr expiration. Also, FF &amp; Chrome come out of the box with a hardcoded list of common https sites (google, facebook, etc); to make sure that pinning is never bypassed.
Download every youtube playlist about python you can find. Watch and make a repo in github and put every script you made while watching those videos. Make a mindmap on what topic you'd like to learn in python, follow that mindmap. Here's a [repo](https://github.com/piratedv/learn-python) I made on github. I find derek banas [learn to program](https://www.youtube.com/watch?v=nwjAHQERL08&amp;list=PLGLfVvz_LVvTn3cK5e6LjhgGiSeVlIRwt) a good start to start learning python. It covers almost everything you need to understand the basic stuff about python. After learning the basic things in python move to classes and understand how they work or simply learn what OOP (Object Oriented Programming) is in python. After covering all of those topics I think learning how to communicate with a database is really important in python so learn that and be really good at it. Know how SQL works and how to communicate with it directly (not using python) then move on to how to communicate databases with python. Start with NoSQL like sqlite3 in python. Once you're an expert at communicating at databases then move on to collecting data. A good start would be web scraping and feed the data you collected in a database then start playing around with the data like displaying the data in different file formats or different graphs. Then move on to a different topic where you'd like to get a position in as a python developer to get a job. I think that's a good start on how to learn python, I'm a beginner too. Message me if you'd like to discuss more :)
Good luck using a modern website with js disabled
Thanks a lot! In new vesion that I'm going to release today, you may see some improvements :) Also, I ran some tests and it takes ~0.0156 seconds return all data. So, it's pretty fast. There is no need to make data.json a Python file. It doesn't influent on speed and it's normal practice to use non-python files in module. Also, except nested for loop, there is no need to reorganize data.json.
Wow this is really good!! Thank you :D
Hi I'm a bit confused. How do prevent this?
You just need to whitelist all the scripts you trust. It's a chore in the beginning but gets easier
Hi Pythoneers! There used to be a place called Stack Overflow Documentation that had excellent Python documentation; however the Stack Overflow Documentation feature has since been shut down and now only available on archive.org, so as the content is CC-BY-SA I created this free Python PDF book for easy viewing Please let me know any feedback (positive or even negative feedback helps) to help improve this Python snippet book
I'm not sure if that will preserve the macros but I know that if you use openpyxl it will. I'm not sure how well the dataframe will play with an xlsm so you may need to use the iterrows method to parse through the dataframe and add it to the excel document. It'll make the code a little ugly but the output should be exactly what you're looking for with keeping the macros.
How many years of bengineering experience do you require?
I use it for my own personal playlists, but it will work with any public playlist. You can specify any public playlist in the config and it should work no problem.
Hey, I've been working on a similar project the past couple of weeks! I'm newer to python and programming in general but I am curious about your project. I have a version trading that works most of the time but have come across some problems. One of the major issues I have is how to limit the number of orders I submit to the exchange over a given time frame. For example if there is a price swing of $200 over 1 second, I may get 10 fills.When I try to submit the orders to re-buy at a lower price I will exceed the rate limit imposed by gdax. Have you come across any similar problems?
Any experience you have of programming will do
This website seems really cool! Assuming the veracity is there, it is a great resource. I just downloaded 17 of them that I could even remotely seeing myself use. Or at least have! (while I am not full-blow, I have /r/DataHoarder tendencies)
Can you actually use modern web browser without javascript?
Try working with MS *ANYTHING* they have a million different hosts and do domain crossing all the time with JS BS.
I believe this was McDonnals doing to their clients 
/r/learnpython and please review your submisson and fix your code formatting
&gt; Disclamer: this article &amp; project is for academic purposes only. 
Can I see the code?
where is miley cirus
I have been successfully working on a subreddit image crawler. Next I'm either going for a base 64 encoder or continue extending an older project (drawing various fractal trees with the turtle module).
Duno why I was downloaded for giving you a possible hint!
Use HTTPS Everywhere extension
I've yet to be impressed with any of the packt books. I was excited when I read the P word (python) in the email from HumbleBundle, but disappointed when I saw the other p work (Packt).
Check out r/learnpython
Use VPN with proper encryption.
Amazing timing. I'm trying to hack my wifi-controlled drone and I'm having a hard time sniffing the traffic with `wireshark`. This MITM tutorial could help a lot.
Since there are only a few web miners out there, wouldn't it be easier to just blacklist those vs whitelisting?
Could this be used legitimately in any way? I'm thinking 'Free Wi-Fi' node with a TOS that stipulates script injection. So you would be paying for the Wi-Fi in an indirect way.
I'm removing the number of branches in my FOSS algorithmic cryptocurrency trading bot /r/surgetrader Reducing the cyclomatic complexity to a count acceptable to static code analysis should make more cleaner more robust maintainable and understandable code.
You can actually put your domain into that list for free: https://hstspreload.org/ (However, this is permanent and requires a lot of effort to reverse.)
Translation: you're allowed to make money on bitcoin if you're a professor.
The test driven course is one of the best tutorials I've ever done for any language, any platform, any price range.. just one of the most thorough and well-sourced tutorials around. I've started a few projects based on the end result from step 4, and still go back to reference certain chapters occasionally. 
Which mobile browser on iPhone let’s you do that? We’re talking about public WiFi. Most of us access it using our phones not our laptops.
Unfortunately, this is also my first real foray into machine learning, so I haven’t had a chance to do a lot of research. 
No current plan to merge deep models in. At one point I had considered adding in DNN-HMMs, but it was unclear if there was user demand for it. 
I had to solve a similar problem recently. Pandas doesn't preserve macros, so unfortunately you'll have to work with openpyxl. My approach was to iterate through each row in the dataframe, then iterate through each item in each row and use that to update appropriate value in the sheet. This is _much_ slower than pandas' .to_excel(), but will accomplish exactly what you're looking for if execution time is not a concern. Would share some code, but I'm on mobile currently. 
Don't visit websites without the green lock "https"
The only issue with HSTS is that it's application layer, and if you're always on HTTP, and from the same location, someone can MITM and remove the HSTS header. That issue goes away if you always connect over HTTPS though.
You're awesome! This is one of the most complete guides for Python I have ever seen.
I assume you are using Windows and you are double clicking your python program to run it? In that case rename your file to a .pyw file instead of .py. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
&gt;it's normal practice to use non-python files in module. Unless there is a specific reason for those files to be non-python I'm not aware of such a practice. And in this case `data.json` just contains what I'd call constants that are not used and I guess not intended to be used outside of this tool. And from what I know as common practice is that you put constants in code.
Personally I think websites that use HTTP are an invitation to this kind of manipulation, and furthermore that this is a far more legitimate use of MITM HTML script injection than stuffing malware-laden ads (or just throwing malware at people outright).
Thanks for making &amp; sharing this! I spent some time trying to do this and didn't succeed, so I'm very excited to learn from this; figuring out how to do it will be crazy useful.
&gt; And there is no need to make data.json a Python file: it doesn't influent on speed and it's normal practice to use non-python files in module. The way you implemented it however fails when running from a zipfile. 
I love the flexibility and potential power of pomegranate. I would say that the only current limitation is the inability to support deep learning models. User demand, at least from the deep learning side, is there.. given the plethora of probabilistic modelling libraries over the last couple of months.. e.g. [pyro](https://github.com/uber/pyro), [probtorch](https://github.com/probtorch/probtorch), [edward](https://github.com/blei-lab/edward), [ptstat](https://github.com/stepelu/ptstat) and [pymc3](https://github.com/pymc-devs/pymc3)
This kinda frustrates me. I love using JS to create handy user functions. I hate using JS to create annoying pop ups and for my own personal projects (and ones I envision) I try to stray away from these kinds of business models. I like to use JS for practical uses that actually benefit the user like keyboard shortcuts for web apps or async menus (still a modal but its not one that just pops up out of nowhere, a user specifically clicks to open this menu up) that provide content without annoying refreshes/redirects, and more. But I keep hearing word that a lot of users are disabling JS entirely in their browsers and I can't say I blame them but it really annoys me because static web pages are cool but dynamic pages, when done right, make the experience x10 better. Practical examples include async validation for data fields. What's really annoying is when you're registering for a website and you fill out the fields and then click "Register" and you have to refresh the whole page which may or may not preserve the fields you already entered and your password, at least, will most likely need to be typed again--all because you forgot to check 'Accept Terms'. Instead, the app can just tell you when you try to click on "Register" to go fix these fields rather than putting you through a page refresh and loading more content again, which may or may not be a fast process. Another is dynamically loading content. Load the content at top before the content at the bottom instead of waiting for everything to come in all at once. This speeds up the process for users and makes it seem like the page loads much faster than possible for such a website. Svg animations are also another one. Vector graphics have really low overhead and are also perfect for scaling. I've seen some amazing visualizations done with vector graphics and they're great for digesting content. Very fast and can do lots of powerful things. By no means am i saying it's fun to develop in JS ;) nor do I have anything to say about the recent javascript madness but as a developer, you can't deny the benefits of dynamic web pages. Are all websites meant to be dynamic? Not necessarily. But when done right, dynamic web pages are a great advancement in technology. So it's really annoying to see all these new technologies coming about from javascript like web browser crypto miners and annoying pop ups/breaking websites if ads don't load that are causing a lot of people to completely disable javascript. I don't want to create bare websites after having experienced the potential of dynamic websites. I like simplicity and pragmatism for web dev and that can be maintained with non-invasive and useful JS, even enhancing the entire overall experience when done right. (Typescript is fun too and more resemblant of C-like languages if you're one who hates vanilla Javascript)
ok, I will pm you
there's an online book [automate the boring stuff with python](https://automatetheboringstuff.com/). I'm kind-of partial to integrations, such as Twilio (such as a dial-in two-factor service), transpiling python to javascript for chrome extension (this one I haven't tried), and LaTex for pdf reporting--although WeasyPrint seems to be a contender. 
there's an online book [automate the boring stuff with python](https://automatetheboringstuff.com/). I'm kind-of partial to integrations, such as Twilio (such as a dial-in two-factor service), transpiling python to javascript for chrome extension (this one I haven't tried), and LaTex for pdf reporting--although WeasyPrint seems to be a contender. 
May you send an error message? 
Those are jpeg artifacts, caused by the fact that you saved the result in a lossy format. Use a lossless format like .png. --- If you have more questions like this it's better to post them on /r/learnpython. Be sure to [format your code for reddit](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) or use a site like pastebin. Also, include which version of python and what OS you are using. 
username confirmed
The tutorials themselves aren't tutorials; they're links to other tutorials and datasets -- am I wrong?
I see. Thanks !
Does arp spoofing work over a typical wifi router configuration? I haven't done it since ethernet/bridge days.
What's your github profile?
There's no great way of writing to excel via python while keeping the existing formatting etc. You could try taking your dataset in python, saving it to SQL or another spreadsheet and then linking that to your spreadsheet with formatting and macros in.
execution time is biggest concern sadly. I have a vba macro that does this already. It takes too long to execute.
I'll second the AWS suggestion. It's a bit like crack for programmers so good luck with that. If you have a computer that does stay connected, you could schedule simply enough with crontab (*nix, MacOS) or TaskScheduler on Windows. If you really don't like TaskScheduler you can configure a Celery Worker with Celery Beat for crontab like scheduling. Might be overkill, but effective.
Thanks a lot!! It was really helpful!!
Not to plug a paid-for product, but the ML tutorials on Datacamp were really good for how to approach using the sci-kit learn package. Did a bunch of their stuff, some things better than others, but the ML stuff stands out because it teaches you the API to apply all the different supervised/unsupervised models. Its cheap enough for a month.
pythonanywhere.com but as far as i know they only allow you to schedule one script daily
Hello reddit. I launched Pyinstrument 2.0 this week, the Python profiler that gives you the whole picture about how your Python programs are spending time, with nice colored console tree outputs! The blog post goes into some of the changes - feel free to ask any questions or post your comments here! :)
&gt; I see, some people of the python community, which I always thought to be quite nice, get upset if such a topic comes up... I get upset when I see people complaining about Free Open Source Software and do precisely nothing about it except complain. As we say here in the UK put up or shut up. &gt; Show me a way to automate it! Work it out for yourself you lazy sod. What did your last skivvy die of, overwork?
 print("uuuuuu") print(flow.response.headers["content-type"]) print("asdf asdf asdf asdf asdf") print("-----") print("mmmmm")
Project Euler: https://projecteuler.net/ Five problems every dev should be able to solve: https://www.shiftedup.com/2015/05/07/five-programming-problems-every-software-engineer-should-be-able-to-solve-in-less-than-1-hour
I genuinely appreciate this post, because I was pretty unsure of how to get DB connections and operations going in Python. Thanks!
pomegranate is not a Bayesian statistics library like those, it's much more akin to sklearn except with a focus on probabilistic models that falls out of scope for sklearn. I'm not entirely sure how deep models fits in with that.
Googler here. I'm going to actively see if I can get this fixed. This does not represent our long-term strategy for Python. 
This is very cool! Just played this last weekend actually!
Scene primitives (bricks and chain links) instantiated with 14 lines of Python calling Blender library API. Scene could have been made with a couple array modifiers without Python. Physics engine implemented in Blender. Don't get me wrong, Python is the backbone of Blender for so many tasks. As you can see, the API can be a little cumbersome at times. This example just isn't the best showcase for the combination.
Yep! dt.strftime did the trick. Nice that pandas has this built in now so no need to import anything new :)
 01:11 $ PYTHONPATH=fleep.zip python3 Python 3.5.3 (default, Jan 19 2017, 14:11:04) [GCC 6.3.0 20170118] on linux Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; import fleep &gt;&gt;&gt; fleep.get(open("book.pdf", "rb").read(128)).type Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; File "/home/desertfish/Projects/fleep/fleep.zip/fleep/__init__.py", line 63, in get NotADirectoryError: [Errno 20] Not a directory: '/home/desertfish/Projects/fleep/fleep.zip/fleep/data.json' &gt;&gt;&gt; This is when your fleep module has been zipped up into ``fleep.zip`` (or be part of a larger zip file containing all libraries for instance) For this to work you have to use the ``pkgutil.get_data`` function to load resources, instead of assuming you can directly access them as files on the filesystem. https://docs.python.org/3/library/pkgutil.html#pkgutil.get_data Or just be sensible, and put it in a python module.
One could exploit this vulnerability to do more than just crypto mining
People wanting to discuss this bundle should probably head over: https://www.reddit.com/r/Python/comments/7nmjf6/humble_bundle_has_15_books_on_python_for_12_bucks/ or https://www.reddit.com/r/Python/comments/7nhijd/humble_book_bundle_python_by_packt/
You could use TempleOS.
I could have done with this about a week ago ;_; Much appreciated!
Removing an HTTP header is way simpler than sslsrtrip. I get your point, but in the context of MITM this isn't going to help.
Ghostery is a decent Chrome extension to get started with whitelisting scripts for anyone interested.
Users are already being subjected to spying and the promise of better marketing experiences, they're already not aware of what's going on. At this point we're just quibbling over whether we should grab control back.
Man what a relevant username. I would be this has some ethical implications and I think you should take the time to mull those over while learning how to do it. But think about it, you need to tell the end user and the Webserver that the certificate is legit while adding your own code somewhere in the middle. Please be responsible with this and consider other people’s suffering if this is used unethically.
I should insert tabs because it is an unambiguous representation of an idea -- indent one level. Some multiple of spaces can not do that. Consider, I insert a newline. Why? One could press spaces until the cursor walks off the right end of the screen and reappears at the left edge, down one line. A newline represents an idea. We should use that to mean "go to the next line." Imagine being surrounded by people who think the single newline character is extraneous. After all, they say, the style guide also requires 80 characters in width, so there is no ambiguity in what offset in the bytestream of source file is a new line. There is no ambiguity. Every 80th character begins a new line of source code! A tab makes my visual preferences a quirk of myself, and you can interpret it as any distance you like, and my visual preferences are never mandated to the rest of the world who reads it. Amazing!
I don't want an easy way to insert four spaces. Maybe I want two. Or eight. Or half an inch. Or, best of all, a smart editor that displays it as one visual degree based on my subjective distance. The beauty of tabs is that **my visual preferences do not pollute the contents of my code**. Your visual preferences are an affectation of yourself, and you never check-in source code that requires I feel the same way. One tab means one level, without any ambiguity or reformatting git-blame churn or tyrannical style-guides. Seriously, I can't imagine the rationale for spaces without some belief that editors do not know how to interpret tab characters or that programmers are too dumb to configure their editors to make things look like they want.
Thanks - I do some web dev, and am otherwise interested in my *own* security. I'm not interested in exploiting people.
Hey, congrats on the release! This looks very nice; already have a few use cases in mind and looking forward to giving it a spin. Cheers
is that still profitable? I have an i7, GTX 745..how much monero do you think I can mine a day?
If it was only that easy ... :/
Any thoughts on how this compares to [vmprof](https://vmprof.readthedocs.io/en/latest/)?
it heavily depends on your electricity prices. if you live in china: definetely if you live in the eu: probably not here is a calculator: https://www.cryptocompare.com/mining/calculator/xmr?HashingPower=500&amp;HashingUnit=H%2Fs&amp;PowerConsumption=200&amp;CostPerkWh=0.12
Lenovo will do it for you.
Ok thank you! Just a few questions, what's pyautogui? What does the sleep module do in the case? I assume the 245,990 type things are locations on the webpage or something, like the tab location to go to each page then the 5 friends parts to click on on those pages? How does it know to wait that "after 1 sec and additional sec? Thank you for the reply!
I have allways struggled with these calculators.. How do I find out the hashng power and the power consumption?
I love DevPi. 
&gt; Start with NoSQL like sqlite3 in python sqlite3 absolutely **is** SQL. NoSQL would be that which is not SQL, like mongodb or, even better, /dev/null.
VPN should protect me here, right? I never touch an open network without connecting to a secure network via VPN.
Since this is the common response I see commented in this kind of threads, I'll do the honors. Check /r/learnpython Specially the wiki (you'll find a lot of resources like video tutorials) and FAQ (links in the sidebar). Personally I have nothing against learning python 2, but python 3 is the version you should "normally" use for your new projects. Since you say you found a good tutorial I don't see anything wrong with leaning v.2 and then learn the differences with v.3. In any case, there's no need to *downgrade* since you can have the 2 versions installed side by side and follow the tutorial with v.2 and check differences with v.3 (if you want).
I would recommend google. But I doubt you will make any significant money with your setup.
I used [shotcut](https://shotcut.org), just the UI version. However, I know it can be used with scripting. It reads the tasks from a .mlt file. If you can generate a proper .mlt file, it can take care of the video editing jobs. Caveat is that, it is not a simple python module. It is a full fledged video editor, with scripting support. 
Thank you !
Depends if you provided power or not. Profitability would also depend on how busy your node was.
Multiple layers of security - no Javascript and no networking 
What about your experience 
That is if you are paying for power. There is no requirement to provide power, just free Wi-Fi. IT would drain the hell out of someones battery but that is the tradeoff for free Wi-Fi. 
Probably because a whole lot of python users don't use windows.
my bot chunks data in 10s increments, so it makes decisions once every 10 seconds. also in the first iteration it was using 'historical data' which isn't quite as perfect as real time data. I had the bot essentially use a fixed number of nodes, and every node has a state (buying or selling). when the price dips low enough/high enough to trigger the buy/sell the bot switched the node from buying to selling or vice versa. Sometimes the market changes so rapidly it outpaces my bot and i make market value trades, which are NOT free. However, this happens infrequently, maybe like 1/30 trades. in the docs it says you can only get historical data in like 10 min increments but thats bullshit it will give you 10s data if you poll it multiple times until the request suceeds. The major information i use from the historical data is the mins/maxs in a given interval
I think you just have to get a script working to pull data from the websites in real time, get a program that makes decisions automatically based on that data, and keeps track of the money/btc in your wallet based on your buys and sells. The algorithm i used was not sophisticated (no machine learning or smart updating). I think one needs to get a sense of how the market varies, i.e. on what kind of time scales and what kind of peak of peak swings are typical. It took probably half a week of constant testing and re-coding to work the way i wanted it to. I suggest testing your bot in some kind of simulated environment, or using old logged data before letting it touch real money.
I used to maintain the private pypi server at dreamworks animation [python architect there]. my $0.02 - don't go down that road unless you've exhausted all other possibilities [building from source, specific dependencies as github dependencies, etc]. maintaining private repo is annoyance that [I think] should be avoided if possible. it'll be one less piece of infrastructure to maintain
Android notes have 266 chapters!
Firefox
My one friend does but he’s a huge Windows fan, always has been. I hear it’s pretty good but Python has always been bigger on Linux/Mac/Unix like systems, and easier to use. 
Makes sense if you're also doing development using C#/.NET on Windows, but not for *just* Python. It's been a few years, but I remember needing to set up [PTVS](https://microsoft.github.io/PTVS/) to make VS palatable for Python work. Otherwise, I'd rather use a "regular" text editor.
Probably because PyCharm has been around longer
That's perfect for a shity document, for a programming style guide is awful
python comes bundled with sqlite bindings and docs for it
Visual Studio is the best IDE ever made. By far. Though the Borland one used to be almost as good. I don't write Windows software anymore, but I miss VS. VSCode is probably the best free editor these days, and it's obvious those Microsoft people know a thing or two about creating tools for programmers.
Arguably the substantial majority of Python code isn't for and doesn't work on Windows, and that's also true of most of the developers. Inroads are being made with the Linux Subsystem, but it's still an unfriendly system for Python, hence why this subreddit is so often inundated with problems unique to installing and using Python on Windows. Visual Studio Code though is making some pretty good progress against PyCharm, especially among people who also use Atom and or SublimeText3 to do multi-language work, or are just (like me) tired of paying a subscription fee for extras that don't really constitute a significant advantage over free. It's not Visual Studio, of course, but it's the same branding, but with the advantage of being portable to friendlier OSs.
Chrome *is* the default browser on the majority of Android devices. 
I previously had a second check in it, but I moved that to another script and I'm lazy so I didn't refactor. But you're right.
Because WingIDE is great and I really like their dark theme.
That's right. 
pyautogui is a module you can install with pip install pyautogui That can click/move the mouse and press keys on the keyboard. Sleep is a function that waits x seconds. The x,y ints are coordinates on the whole screen. It knows how to wait because the next call is also pyautogui and pyautogui.PAUSE was set to 1.
I just started learning 15 days ago.
Visual Studio is not cross-platform and Python is, though it is the best IDE I tried so far.
I have a github account. Username -arjungupta02. Didn't use it mush but wish to learn how to use it
... or student
You should start with the knowledge you have in Python first. Do you know how to use if,else, elif, random? you can write a guessing game with them. Do you know Tkinter or any GUI platform? you can build a simple calculator. There are other websites that create challenges for programmers to solve. They include, Project Euler, HackerRank, CodeFights or dailyprogrammer(which is a subreddit community-/r/dailyprogrammer) Also, reading the book, Automate the Boring Stuff with Python is going to be very practical for you. I also recommend you take the course on Udemy. I think this [guide](https://coolpythoncodes.com/best-way-learn-python-programming/) can be of further help to you.
Yes! Wing ftw!
I remember having problems with installing packages, so I left VS for IDLE, and then for PyCharm on Fedora.
Thanks a lot! This is awesome!
Woops you're right. Thanks for pointing that out
Sounds like a dead end problem to me...
No worries, I'm guilty of debugging that way as well! Usually with more curse words. Though if you don't know it/don't use it yet, then give pdb a try—I wish I had an interactive debugger in other languages I use! (looking at you, golang)
No is there is an infinite number of bad hosts
My five cents: if it works there is no longer a reason to update the general stuff
I'd say the big test to show that a package is actively maintained is the number of outstanding bugs. If there's a lot and they haven't been touched in years then leave the package alone.
When I started learning python I wrote this script: https://github.com/MrHaCkEr/Wuxiaworld-2-eBook It’s relatively easy and straightforward. Check out the console branch for a little less complicated version. If you have any questions feel free to pm me.
&gt; From my experience with NPM packages, if they haven't been updated for about a year, they most likely will not work in the current state of JavaScript. for real? is JS really this bad?
Even for Windows users it not worth the faff as Pycharm is cheaper and has more python oriented features than VS. Id even use VS Code / Spyder instead as it loads faster, free for commercial use and smaller download size and you don't lose alot in VS features when it comes to Python.
I liked project Euler at first but it was kind of annoying that a lot of the problems require math knowledge more than programming skills
Expensive ecosystem, proprietary, doesn't work in Linux, started to be popular when Microsoft insulted free software. 
Lol.. Gave up too early!😂
Isn’t java “harder” than python 
If you're caching things, you're not really testing the page anymore, are you? 
&gt; Arguably the substantial majority of Python code isn't for and doesn't work on Windows The whole point of Python is that it's cross platform, there are very few pieces of pure Python code that **WON'T** run on Windows, if any at all.
Nope just more syntax clutter 
So the circles are moving and you'd like to track them?
Sigh. I've kind of been at this awhile. Try the vast majority of Python command line system utilities on Github, and especially any that rely on os.fork, or for that matter about half of the os module that doesn't even exist on Windows. Or pretty much anything that calls subprocess without shell=True and a heck of a lot of conditional. If by pure Python you mean "makes no system calls and restricts itself only to the features available on all OSs" then of course you're right... but that isn't the millions of lines I've been poring over for the last ten years.
&gt; Python is awesome in every single aspect (I'm a huge fan). If you are equating Python with flawless, you have a lot to see. I'm not saying it's bad, but it has a few shortcomings.
I'm curious as to what you were doing which required you to override 'import'?
That's great news! Yet Another Java Drone just adds another epsilon to my relative productivity. I'm already running rings around almost everyone at work. Choice of language is not the only reason for that, but it's a big part.
Does anyone have any experience about working with the selenium module?
swift with xcode 9 is a joy to write code with :)
Saw logo, expected rust.
How about a conditional import ?
&gt; xcode &amp;&amp; &gt; :) I'm very envious if this is true for you.
&gt; scientific motivated projects (research) That's the primary reason why I'm a fan of Python. Of course, there's no one fits all programming language. Python is still junk when it comes to applications that need a sophisticated GUI.
r/iamverysmart
In any sufficiently large and complex project, I've found that skill is far more important than language choice.
The jump into ES6 was like getting a new language. Most (even recent) tutorials I've found still use the prototype way of writing JS code while the whole world is already capable of running JS with ES6 classes and modules. Perhaps it's just an unfortunate point in time now that ECMA has only recently stepped in and taken over, progressing JS in a new way very rapidly.
click on them. the circles randomly appear and then move away until they are gone from the screen. but finding them fast is main goal.
Would have been an option in the beginning of the project, maybe. In the current state of the project though it would require some major refactoring for each individual optional dependency. Overriding the `import` has turned out to be the better solution. 
I mean it's supposed to be *that* dynamic
Good idea but sadly not - hosts aren't on the public internet.
I've always had Samsung and it comes with their stupid browser. 
Can you use the DNS challenge?
Depends on who you ask.
its something like a game where the circles are points. i tried to look into these bots for reflex games the problem is the methods they use scale horribly if i try to scan my whole screen.
Yeah I wish we got more of this twitter conversation, to see if there were any specific reasons for the switch. Maybe it's just a meme. Could be that there was a specific Java library they wanted/needed to work with I guess. Or something of that nature...?
Well, they got to 2nd level guru (i.e. jaded to death, checking out the grass colour on the other side) fast.
If the circles do not change size you can take a template circle and use the cross-correlation function from ndimage (I think) in SciPy and this will return an image with peaks where the circle is. This should take &lt;100ms for one image so pretty quick!
&gt; I'm already running rings around almost everyone at work. Choice of language is not the only reason for that, but it's a big part. Found the 20 year old.
Not seen vmprof before, thanks for pointing it out! A couple notes from first inspection: - The actual profiling method is different in Pyinstrument 2.0. Vmprof uses system signals to halt the program and record the stack - while this is convenient, it causes problems whenever the program is waiting on a syscall - normally, when it is doing IO. Because the signal must be handled in userspace, the kernel must abort the syscall it's currently handling with an error and then call the signal handler. This causes [some](https://github.com/joerick/pyinstrument/issues/32) [strange problems](https://github.com/joerick/pyinstrument/issues/16) with truncated reads and skipped delays that can change program behaviour. (If your program is slow because a library you're using is `sleep()`ing, the signals will remove these delays!). Pyinstrument used to work this way, but I've changed it now to work with `PyEval_SetProfile`, more details in the blog post. - Vmprof works with `pypy`, which pyinstrument doesn't support - Vmprof looks like a more in-depth tool - pyinstrument is maybe quicker to pick up and use for a first time/occasional use. 
thank you! i will look into this. the circles can also appear on the edges and can be partially visible im not sure well it works for these ones
thank you! i will look into this. the circles can also appear on the edges and can be partially visible im not sure well it works for these ones
In any sufficiently large and complex project I find that structure is important, and Python allows bad structure very quickly. 
I have a really hard time believing this was ever a good idea. Absolutely insane solution if you aren't leaving out important details.
*cough* labeled breaks *cough*
This is very good. Very good teaching style.
I wouldn't say older packages are _bad_, but I do tend to favor packages that have been updated within the last year. That tells me the package is at least somewhat actively maintained. I want to be confident that a given package will work with recent versions of its own dependencies, plus the latest stable version of Python. As for older packages with few, if any, outstanding bugs and are more or less "done", it would be nice if maintainers at least bumped the docs to update the copyright date. This demonstrates to users that they're still aware they have a package they're responsible for maintaining.
I mean I use Swift for iOS, Java for android, C# for work web development and game development, Meteor (JS) for prototyping MVPs, PHP for some freelance, and Python for automation and algotrading. I enjoy pretty much all languages...it's certain frameworks I find myself disliking more than anything.
&gt; screw up projects **to easy** *too easily
Yes, you are right. It is more suitable for web scraping. If you are just scraping data then, I think it won't be a problem
This is awesome!
Yeah, but when did they add proper Python support to VS?
Hmm I get what you're saying but i like math :P Also I like how intimately related math and cs are
Well, maybe one missing detail is that it doesn't really *override* the original import but just *wraps* it. The original import instruction is used internally to import all other non-optional modules and optional modules that are installed.
Java is used more in industry. 
PyQT
What language allows or mandates only good structure? I have yet to work with one. 
Hello, I recently graduated from university with a double major in Engineering Physics and Math. While enrolled, I was a research assistant in the Physics department, with a scientific programming role. The bulk of the job was writing simulations and analysis software for particle physics research. I have experience with Montecarlo simulations, numerical methods, and optimizing for GPU. I worked with Python and C++. However, I do consider myself a Python enthusiast, and outside of school/work I have always worked on projects for fun, and I am confident that I can learn anything I haven't seen before fairly quickly. If you'd like to see my resume please shoot me PM.
Swift is nice. But xcode? Really? 
first_loop_done = false second_loop_done = false while (...) and (not first_loop_done): ... for (...) and (not second loop done): ... for (...): if (...): break
This is an excellent resource - thanks!
I am thinking of Java just because of this. Took a few courses in college ~2008, and Java was tge languae. It was fun to see exactly what the code was, and from where. 
For now...
Are you saying Java is a bad choice, or a good one? Confused by your wording.
Check out [plotly](https://plot.ly/~alishobeiri/1257/plotly-sankey-diagrams/).
I heard luigi is good.
Because PyCharm exists!
IMO Java is a bad choice at almost any time. In object reality, Java is a bad choice at my particular workplace For Reasons. Python is a better fit for the type of thing we do (rapid prototype development, basically).
No one wants to write 100k line applications in a dynamically typed language.
Is from my point of view still junk because I don't know of any matured UI editor and using PyQT has very often led to severe compatibility issues in the past. It's far from sophisticated.
Massively depends which industry.
&gt; having conventional long variable names and descriptive methods was really helpful. Good Python code should also have descriptive variable names and methods.
That's not how you spell AppCode (or whatever the IntelliJ iOS IDE is called).
Generally I agree. However, we shouldn’t be developing 100k+ line applications in general (note that I’m not saying ever). Rather, we should be building smaller components and composing them into larger applications. Additionally, 100k lines of Java is probably only 30k lines of python. To your points about dynamically typed languages and speed, I agree. Though, I wouldn’t say that the obvious solution is Java...
Scipy is interesting!!! cheers
Sure, good code should read descriptively in general anyway. I'm just speaking for my experience as a beginner. 
I'm not working with astronomical data. I just build the instrument itself and provide the info that astronomers will need to build the pipeline (from raw data to sciencible data). Im more focus with the calibration and characterization part ! But maybe could be useful one day 
Every time I've asked about how to pre-allocate some space in a dictionary where I know the exact keys I want to have, I've always gotten the answer of "don't worry about it" or "stop trying to prematurely optimize your code". In any other programming language, this would just be a part of the process of writing the code. I really do want to learn Python better (I've done some work on Python projects without really knowing what I'm doing, just winging it), but it's not something that I can just stop caring about.
Honestly, I don't think anything exists in the capacity that I'm discussing or at least I've yet to find anything even remotely close. I can think of a several applications that if you tied them all together in some organized way you would be about 80% there. 
I think it means that connection.cursor() can't be used in a context manager. __enter__ and __exit__ are the methods called by the context manager (with). [Reference](https://jeffknupp.com/blog/2016/03/07/python-with-context-managers/)
What's language and library do you prefer for cross platform desktop GUI apps? 
I thought about using appcode, but it doesn't support storyboards :/
Not to mention the translator just sort of feel the point you're making.
I mean its not perfect, but I haven't really run into something that would make me hate it :D Albeit setting up autolayout isn't always straightforward :/
Eigenvector decomposition is now supported. 
This simply isn't good enough. I want something that reads my mind and automatically searches for me as I'm too lazy to do things for myself :-)
Sorry I should have mentioned that pip is not an option. Will the install_requires still work without pip?
Ok, thank you! I hope all goes well with the prototyping and more.
Java has a sales and marketing budget that is effectively infinitely bigger than the PSF's.
There are certain things I can do in Python that I simply cannot do in Java. Useful things.
I do. It's not a problem. A little bit of discipline, solid unit tests, solid integration tests, and we are developing way faster than we do in any other language.
Cross platform is difficult. If standalone is a requirement I'll say Java. If I accept being limited to Windows and standalone is a requirement, it's WPF. Otherwise I'll say browser based, like, JavaScript + HTML + CSS + some fancy frontend library. Backend can still be Python (Django) or also JavaScript (Node.JS + ExpessJS or something like that). Except for maybe WPF they all suffer from the same issue: no good WYSIWYG editors. 
So people prefer writing 500k line applications in statically typed languages? Actually no, there are projects running to 1M lines of Python.
I see. Are you up for building an open source tool?
I think that's all based on your background.
Make a simple example of an application you can make in Python but not Java.
&gt; In any other programming language, this would just be a part of the process of writing the code. Not really. In low level-languages you can do that, and often mus do it. But it's not neccessary for getting things rolling. Usually it's just pointless overhead. It becomes important later if you wanna optimize your code, after you have a working solution. Python in the first place is a goal-orientated language. Optimization comes later. And in best case it's done automatically from the machine. Though, that best case it still in progress for python.
Like what? Java is certainly verbose, but it has been a powerful tool in my skill set. 
Google is working on that.
Why?
Yeah, I've been advised both directions. 1. Learn a "bare-metal" language like C or Rust, and work up from there. Since you understand the basics and necessarily understand some computer science concepts now, you'll have a breeze with interpreted or scripted languages. 2. Start with a high-level interpreted or scripted language. It's more important to get the basics (loops, types, etc.). Then, it'll be a breeze to work your way down and add conceptually to the basics you already understand. So my takeaway was basically it all depends, and it's better just to dive in. 