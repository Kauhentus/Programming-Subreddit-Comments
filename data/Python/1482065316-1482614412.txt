do some work on a freelance site or craigslist. 
Perhaps this would help with classifying free form text: Fuzzy string matching in python https://pypi.python.org/pypi/fuzzywuzzy
Cool. Thanks!
&lt;library&gt;: &lt;other_library&gt; for humans. Every single damn &lt;library&gt;.
Awesome! Can't wait to try it out when I get back to work. On an unrelated note, the font on your website looks gorgeous. Is it Europa? (can't view the page details that well on mobile)
I agree
hahaha
My blog is the usual place, there is something about hexagonal architecture in my post history here (along with all manner of embarrassing stuff, too). I keep meaning to sit down write posts, but between work and personal life (and the occasional shitposting) I just don't make time. :/
`datetime.date.today() - date time.timedelta(days=1)`? Why do we need these libraries for simple things that can be done with built-in libraries?
Time Delta sucks. It freaks out of you input more than the next highest unit. Ie seconds=300 . It should convert it minutes for you.
`timedelta(seconds=300)` works fine for me in 2.7.10.
Hey this is not bad at all ! Few tips: The "pass" statement should be rare: line 27 if you use != You'll avoid it for example. else: pass can be removed, it will do the same (continue on basically). Usually, if you call always the same method over and over, it is easier and clearer to do it once at the beginning for example line 47: choice_2 = input().lower() Line 63: you can use "Your Notoriety is currently at %d." % misc["Notoriety"] Most of the while true are not necessary because you are leaving the loop in every case, just remove them and straight do a return (to exit the function) I hope it helps ! 
&gt; The swirly shape is reminiscent of the simultaneous sweeps over rows and columns that define matrix multiplication Could have probably left that out. Actually, if that's the rationale nothing is better than #, but obviously can't use that.
The main issue I have with standard datetime is timezone support sucks balls.
It's magic
I typically find myself using them in testing when `mock.Mock` is overkill, or when I'm prototyping something. Outside of that, I've not really found a use for them. I could see them being useful for when you have a dictionary but need dotted look up (or vice versa) as SimpleNamespace is essentially a dict with getattr/setattr configured
Does it? I've only had to do DST handling for Eastern time and never really had to handle other timezones besides UTC.
Well I meant if I was better. Sorry if I worded it weirdly 
I started reading the book Learning Python by Fabrizio Romano, never coded before. So really excited. Ive gotten to chapter 3 now so things are getting more heavy, any tips for a beginner? :)
I knew what you meant. Sorry if my wording was awkward as well. If you were to suggest this in most business settings, it would be shot down because it would take more time to do than it would save. That's all.
They may want the colour only, they could be using the colour to change a light bulb/light strip so that the rooms lighting matched what is on screen.
Thank you for sharing!
I've worked at everywhere from fresh start ups, governments, to large tech companies. No one is interested in that kind of change. * For the start ups, the time is just too valuable. Once you've commuted to a language that's the language. * For governments, the idea is just too entrenched and too much can go wrong * For tech companies, there is just too much code and too much that can go wrong Best of luck to you! I recently finished a consulting gig with someone still using Java 5 at their main language to support an underlying system of COBOL. So it could be worse?
Consider the difference between a `ValueError` and an `InvalidCredentials`. Technically, an incorrect value was provided but it's not really a value error. He's not suggesting creating a custom exception for every builtin ([unless that actually makes sense](https://github.com/justanr/markov-chains/blob/1d1d5b3671a5dc73e54d546e8ffea7262c0c65d3/markovchains/errors.py))
™ (except not really ™)
Can you share that json? Did you open a bug? http://bugs.python.org/?
I got the impression that numpy.matrix was a mistake and should not be used? It's just weird how vectors are row by default and are still displayed with an extra pair of brackets. `.dot` on the other hand gives you all you need for comfortable matrix-heavy code.
You can override just about any other operator in Python to mean whatever you want, including `.`, so why not `@`? I think the real issue is that the magic methods are named a specific way: `__lshift__` I get because `&lt;&lt;` is the left shift operator in every language, but `__matmul__` for `@` doesn't make any sense to me. This is one place where Scala gets things right. The `@` operator would just be `def @(other: Thing): Thing = ...` Of course, you can go overboard with operator overloading and your API turns into an arcane text that requires you to have been a part of it since the beginning.
- I want to learn more of Elixir, for the functional language, great tools, and different, distributed, OTP platform - I want to learn a lisp for real world uses. Guile is used by GNU Guix but don't know; not Clojure; Hy is too weird and I'd like to discover a new platform; so Common Lisp appeals me, because one can debug live and remote applications, like [the NASA lived debugged a space craft in 1998](http://www.gigamonkeys.com/book/lather-rinse-repeat-a-tour-of-the-repl.html), because I can incorporate new language features whenever I want, but damn the tooling is hard to put together even with [some](http://articulate-lisp.com) [ressources](http://www.cliki.net/).
Do you really find that `.dot()` is comfortably for matrix heavy code? If so, I get the feeling you may not actually work with that matrix heavy code. As a mathematician the matmul operator really made a difference in terms of code readability. Especially when you want to double check the equations whilst reading through an article.
Here's an example [of getting the active window](http://stackoverflow.com/questions/10266281/obtain-active-window-using-python) from the OS across platforms, and once you have the details of the window, you could use [pyscreenshot](http://pyscreenshot.readthedocs.io/en/latest/) to grab it. That said, I don't know that I'd consider Python the best tool for this, simply because this involves pretty low lever interactions with the OS, which Python simply isn't good at. 
I think the point was more that they *should* still mean somewhat close to the same thing. Otherwise you introduce a lot of confusion.
Despite the other good suggestions I can elaborate a bit on Cantera (or Chemkin, which i s pretty much the same). Cantera/Chemkin employes reaction schemes for it's calculations. So as a starting point you could just use the thermodynamical data given in the reaction schemes. There you will find a specific heat capacity, and enthalpy for a wide range of pressures and temperatures. The values are expressed as NASA polynoms (see [Cantera Doc](http://www.cantera.org/docs/sphinx/html/cti/species.html)) . You can find a thermodynamical file here [Link](http://garfield.chem.elte.hu/Burcat/THERM.DAT). However, you have to be careful about this kind of data, because reaction schemes are usually tweaked to fit certain conditions. Especially, since the properties of intermediate species at high temperatures are difficult to measure. Another reliable address is of course the [NIST Webbook](http://webbook.nist.gov/chemistry/fluid/) which offers thermophysical data for a lot of gases, except for air. 
Well, I wouldn't say that multiplication is poorly defined. It's called tensor product, which numpy implements using `tensordot`, which is a special case of `einsum`.
I mentioned to Guido that one day I'd like to see editors that have a live display of objects, e.g., rendered equations with the Python code in the background.
this would probably be useful in government
Ignorance is strength...
&gt; There might be packages that are totally unrelated to 3d modeling, but since big companies are still using 2.7, then everything around them needs to "stay behind" so they can have interoperability. Not what I said, nor was my point. My point was that there are industries that cannot move forward to 3 because the vendors that make up those industries disallow it. As such there shouldn't be an argument over whether you're using 2 or 3. Like everything else, you use the right tool for the job. My personal projects use 2 and 3, because I can justify supporting both. It's a lot harder to make that argument at a business that won't see any benefit from it when EOL for 2 was extended in 2015 to 2020. Is it short-sighted? Maybe, but it just "is".
A friend showed me 2.7 years ago. 3 was out already, but he said it lacks modules in comparison, so I'd be better off with 2.7. Now I'm just sticking with it, because I have no reason to switch. Lack of updates doesn't really bother me. Also I think a big part of my resistance is a bit silly; coming from my childhood. GW-Basic on a 286 with hercules graphics adapter. You might guess it: The print statement. I can't for the live of me adapt to use paranthesis...
https://en.wikipedia.org/wiki/Turing_completeness This says that the definition of Turing completeness is the ability to perform all the functions of any other computer. It doesn't say that it has to be able to execute code written in every other language/syntax/version. Just that it can perform the same functions. 
when should I migrate off of python 1?
Video of it working: https://gfycat.com/ImpartialEarnestAsianpiedstarling
yeah my source code work fine in powershell but i went to make program exe (closed source) work in cmd to work for powershell
It's not the author's fault that other projects are copying from it.
Yeah, but at this time it's already been denormalized.
It's probably not a core library json bug, or it may be. It's a pyramid app using their jsonrpc module, so what's coming in as arguments is a list of str, and not a list of unicode as it ought to be. ( Then don't get me started on the unicode normalization form...) 
Checking again, it's using the json.loads/ json.dumps format. So it's the python JSON loader that's corrupting data. Great.
It's like saying `int(1)`
What is the exact purpose of the trademark symbol everywhere?
You have no idea how thankful I am for this. Truly, thank you for this. I mean it.
SimulateMe! quantum_jim
Whats the dish on this? What is it about? Datascience? He seems charismatic and super pumped about matrices. 
Is there a cross-platform version that does something similar? This could be exactly what I want but it'd need to work on Windows and Mac.
This looks like it works in the other direction.
This looks pretty close, I'll have to look a little more at it -- thanks!
It depends on the json library used. The builtin json library like to convert everything to unicode, but simplejson library like to convert only unicode values to unicode. &gt;&gt;&gt; import json &gt;&gt;&gt; import simplejson &gt;&gt;&gt; simplejson.loads(simplejson.dumps([u"\u05d0", "ascii"])) [u'\u05d0', 'ascii'] &gt;&gt;&gt; json.loads(json.dumps([u"\u05d0", "ascii"])) [u'\u05d0', u'ascii'] I don't see any corruption.
nice work
Have you looked at [Heideltime](https://github.com/HeidelTime/heideltime)? They're also working hard to detect time in text.
Try rather that it's a default keyword with a type hint of 1. Most software still mangles encodings in shitty ways. 
Also, content encoding helps software that isn't looking at the moment type to decode the data as string without needing to guess. Not that it should happen, but that's never stopped anyone in software before
nice nickname
Author of Pendulum here :-) I understand the will to always go through UTC but it can lead to confusion too. Like when you add a day to a datetime: a day is not always 24 hours due to DST transitions but maya can't handle this properly since it only uses UTC. &gt;&gt;&gt; import maya &gt;&gt;&gt; dt = maya.when('2013-03-31 01:30:00', timezone='Europe/Paris') &gt;&gt;&gt; dt.datetime(to_timezone='Europe/Paris') datetime.datetime(2013, 3, 31, 1, 30, tzinfo=&lt;UTC&gt;) But it's 1:30 in Paris not in UTC. 1:30 in UTC is 3:30 in Paris. &gt;&gt;&gt; dt.datetime(to_timezone='Europe/Paris') + timedelta(days=1) datetime.datetime(2013, 4, 1, 1, 30, tzinfo=&lt;UTC&gt;) Still 1:30 in UTC (3:30 in Paris) but what I asked was adding 1 day to 2013-03-31 at 1:30 in Paris (so should be 2013-04-01 at 1:30). I know you can use a naive datetime to somewhat get the proper behavior but doing this you will lose the initial timezone that you asked for. Also, another point that seems like a big issue to me is that you advertise parsing ISO 8601 strings while it's not really the case. Here are valid ISO 8601 strings that won't be parsed, or not correctly, by maya: * 2012-007 * 2012-W05-5 * 2010-02-18T16,2283 Edit: Removed exmaples that where working with parse() but not with when()
Is an installer an acceptable option? If so, look at [Pynsist](http://pynsist.readthedocs.io/en/latest/) (disclaimer: I maintain that) or [Conda constructor](https://github.com/conda/constructor), or [Osnap](http://osnap.readthedocs.io/en/latest/) (I just saw this today, don't know much about it). I don't really rate any of the freeze tools, but if you need a standalone exe, I think PyInstaller is generally the most actively developed and best supported. Despite the name, it doesn't make an installer, whereas the tools I listed above do.
LOL, it took me a while. I couldn't find any part of syntax that used #. I was about to ask why, then it hit me. It's used in comments, no wonder it is not used anywhere else.
I'm finishing up a cat food bowl that uses computer vision (via Google Cloud Vision) to only open up if a cat is present and keep my theiving dog from eating everything in sight. 
Thanks :)
I've never tried to find somewhere that hosts executable python code for free, but if you're willing to pay, I would suggest a VPS like Digital Ocean, and use Flask to take the arguments from an html form then have it execute on the server and return the results. 
(A) I want to learn how to articulat a project, right now i just create a bunch of python files and import from them, no __init__.py, no requirements.txt, i want to make stuff that it's easy for other people to use. (B) I want to continue learning functional programming (through Scala) and learn rust for low level code. I also want to focus on math and fucking pass calculus so i can understand gradient descent and other hard math stuff that is heavily used in ML.
If anybody wants to know the real difficulties involved here just search for "Alexander Belopolsky python datetime". The vast majority of people will rapidly find out that the subject is nowhere near as simple as it first appears. Does anybody fancy allowing for Double British Summer Time during WWII?
Hi alan, I think maintaining virtual environment for each project is a good solution. Basically, I've been annoyed by the process of ensuring dependencies are maintained across multiple machines. If I've installed a dependency on my laptop, it'd be nice for it to appear immediately on my Desktop. This is further complicated when the Python dependencies require non-python libraries, for instance Tesseract or Tensorflow. Thanks 
An interesting viewpoint, but once Python 2 goes out of official support will the question be "WTF why didn't we port this before?". Frankly I find it inexcusable that 8 years after the first release of Python 3, and perhaps 10 years after it was first discussed, some people are still whinging. The small libraries that do not work with Python 3 and are no longer supported are easily forked with the available tools. The larger libraries have all ready been ported. If you are too incompetent to support your own code in the transition I would suggest that you should have had a proper test suite in the first place.
can some please provide some background info ? what's the purpose of these videos, teaching python ?
Especially considering the amount of other Maya products on the market- some of which include Python APIs.
Thanks a lot. 
That's my github profile image. It was probably the first image your reddit client found on the link.
Thanks for sharing this. I just wrapped up intro to linear algebra this semester, and always wrestled with the idea of writing the code for most of the problems given instead of doing it by hand. This motivates me to implement what I learned this semester.
I've done exactly what you are trying to do by running a Lua script to communicate with Python via sockets. Below are two scripts I used to grab a dialogue text pointer of a game running in VBA-RR. If I remember correctly, the code below worked on Windows and Linux (via Wine). I can dig around and find some more examples if you are interested. Lua local socket = require("socket.core") local data, ip, port local msg_address, old_msg_address udp = socket.udp() udp:setsockname("*", 1777) udp:settimeout(1) while true do msg_address = memory.readdword(50335508) -- 0x3000F14 if old_msg_address ~= msg_address then data, ip, port = udp:receivefrom() if data then udp:sendto(msg_address,ip, port) end end old_msg_address = msg_address vba.frameadvance() end Python import socket class UDPClient(object): def __init__(self, port=1777, ip='127.0.0.1'): self.port = port self.ip = ip self.s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) self.dialogue_address = None def start(self): while True: self.s.sendto(b'Hello', (self.ip, self.port)) data, source = self.s.recvfrom(1024) self.dialogue_address = '{:02X}'.format(int(data.decode())) def quit(self): self.s.close() 
SikuliX is pretty mature and cross-platform. http://sikulix.com/
I 100% agree. It also works with 2.7
A
at least not yet. I see no need to add that, though. I have no use case personally, and the other libraries do that very well. 
&gt; Author of Pendulum here :-) I'd love to have a video chat with you! That's one of the reasons why this library is "for humans". It's far from perfect, but it works *perfectly* for my use cases. A library like pendulum or arrow is much more precise, but is less useful for my personal usecases, I think (e.g. scraping websites). 
saved to playlists. thanks for sharing!
Pretty much. But you know how it is: "we'll burn that bridge when we come to it".
As long as it doesn't make that bizarre "GMO Free" quip like the Requests docs do, I'm interested. It galls me every time I consult them; hits me right in the love-of-science gland.
Maya is very old but still industry standard ft film work. It's not a render engine at all though.
omg that's amazing!!!!
I think wit-ai has *Duckling*, a clojure library that uses a probabilistic parser to do this.
Thanks, these look cool! Only question, why so many jump cuts in the video?
I use it for correlated imaging research. Millions of readings per experiment. Hundreds of experiments a year. Using Excel just isn't realistic.
Experience shows that probabilistic parsers unfortunately do not do as well as rule based ones (like heideltime/sutime), but it is an interesting project anyway, thanks for the link :)
Linear algebra is one of the last classes i'm dragging my ass on for my degree. I'm going to start these so I can program my homework. Thanks.
What makes those different from the professor's videos here? https://cs.brown.edu/video/channels/coding-matrix-fall-2014/
The question seems a bit confused. It's not python really controlling that, it's just how stdout/stdin work. Like some of the comments say, you could use ncurses or something to make a more complicated cli ux, or make an actual form in a gui.. 
My comment was just a direct response to this thread and its very misleading title. Python's job board is far from perfect but it's still better than a Reddit thread that has no structure and no filtering feature whatsoever. That being said, pretty much every job board out there is terrible except [Stack Overflow's](http://stackoverflow.com/jobs). And I guess I kinda know what I'm talking about, I'm currently more or less looking for a job. It's also particularly disappointing to see that these hiring/recruiting/job board threads are actually a thing in IT/software engineering subreddits. Especially people in IT/software engineering should know the very basic principle of *choosing the right tool for the job* ^[hehehe](http://i.imgur.com/meftV0q.gif) . Reddit is clearly not right. Reddit is good for conversations/discussions. It's just not made for shopping (job-seeking and recruiting is much like shopping, either the job is the product or, for head hunters, professionals are). It's also really frustrating for both sides, job-seekers and recruiters, if job boards are so scattered. On one hand you have duplication because recruiters obviously post jobs on many (but not all!) job boards and on the other hand job-seekers are missing out on potentially good jobs because there's yet another job board that they didn't know about. Recruiters have pretty much the same problems. Bottom line: it's a dumb idea to spawn yet another job board if it's not better than existing ones.
I didn't really know how to word the question! I was thinking of something that was similar to vim or nano (in look and feel)
Wow! How in the world? I can understand drawing a circle and putting colored dots, but where do you get the information from?
That's not what the reverse operators are for! Read [the docs](https://docs.python.org/3/reference/datamodel.html#object.__rmatmul__) more closely. Also note that it is redundant to implement `__imatmul__` the same as `__matmul__`.
Why accept date ranges like `tomorrow` if it only deals in timestamps?
I think is in the memory. 
SimulateMe! tomzera
"There." Or alternatively, in a file which you can like "python foo.py" from your shell.
Looks neat, I'll have to dig in but the first thing I noticed was that you tacitly advocate for installing with sudo. Instead, I'd recommend `pip install --user` or just going straight venv. 
Python also doesn't enforce type signatures on subclasses. Or at all really. You can say `def foo(x: List[T])` all day long but as long as you're not doing anything list specific, I can pass any sequence type 
Type your code in any text editor, save is with extension ".py" (eg: mycode.py) then from command prompt, run "python mycode.py" If your just run "python" on command prompt, it will invoke python interpreter which you can enter and evaluate code directly line by line.
UPDATE: Completely removed the need for pywin32, which is the worst package to install (not on pypi) and reorganized stuff a bit, now there is a requirements.txt :)
Thank you very much! You should also repost this to r/math as well. 
wow! thanks for that! 
I see a symlink `scum -&gt; scum.py` in the root (outside the package?). Consider using [entry_points](http://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-console-scripts-entry-point). entry_points={ 'console_scripts': [ 'scum = scum.main:main' ] },
really? I tried it out with a 2.7 interpreter and it gave me errors, which is what lead me to believe it was a 3.x feature. Interesting..
Yeah I honestly don't know the details of when it came to Python 2.7 but I have a lot of 2.7 code at work and I use it all over the place. It's so much easier to read. 
this is dope! good job im a fan
"Usually" is not "always".
I love the Python shell! But if you don't like it, you might prefer IDLE, or you could download and install [iPython](https://ipython.org/install.html) for a much more advanced shell used for scientific users, or [bpython](https://bpython-interpreter.org/). Or any of a dozen different IDEs. What don't you like about it?
[There's also their website.](http://codingthematrix.com/) 
True. Using an operator overload is something that should be carefully measured. Is the language of this package improved by using the overload or is it just being cutesy? When I wrote pynads, there was no doubt in my mind that using `&gt;&gt;` for bind (or whatever you want to call it) was a bad idea as I was attempting to model Haskell's `&gt;&gt;=` (obviously couldn't do straight there as that's an assignment operator). I also overrode `%` to Haskell's `&lt;$&gt;` and `*` to mimic Haskell's `&lt;*&gt;`. These operators have no semblance what so ever to right shift, modulo or multiplication, but since I was targeting a Haskell like syntax I figure it's alright. `pathlib` overrides `/` for it's `Path` object so paths could be built like `Path('a') / 'b'` (though there has been fierce debate about whether this was a good idea). I think pathlib errors on the side of cutesy with its operator overload, but I don't think it's terrible. `set` and `frozenset` also have overloads for `&gt;`, `&gt;=`, `&lt;`, `&lt;=` as well as `|`, `&amp;` and `^` (and their in place variants). These make total sense to me, especially the bitwise variants. These aren't *true* bitwise operations but the idea behind them is the same -- `&amp;` everything these two sets/bag of bits share, etc. I think it's worth weight an overload
Isnt the python shell just a black window
I like windows visual studio. It has tools and features
I think [Scrapy docs](https://doc.scrapy.org/en/latest/) and [Learning Scrapy](http://shop.oreilly.com/product/9781784399788.do) will be enough for begginers.
Django's class based views do this to great effect. Here's an example I've run across: class AbstractPublicKey(object): ''' Subclasses need to have public_key_rgx and private_key_rgx attributes that are the regexes for the public key and private key formats, respectively. They will also need to implement the generate_public_key() method themselves. ''' def __init__(self, *args, **kwargs): pk = kwargs.pop('public_key') if self.public_key_rgx.match(pk): self.public_key = pk elif self.private_key_rgx.match(pk): # Generate the public key from the private key public_key = self.generate_public_key(pk) # pk is actually a private key here # This actually blacklists the key in the database PublicKey.objects.create( key_data=bytes(public_key).decode('utf-8'), status=PublicKey.STATUS.blacklisted) raise ValidationError("You've accidentally upload your private key! For " "your safety we are deleting it from our systems and " "blacklisting its associated public key") else: raise ValidationError("That's not a public key...") super(AbstractPublicKey, self).__init__(*args, **kwargs) def generate_public_key(self, private_key): raise NotImplementedError("Subclasses of AbstractPublicKey must implement " "the generate_public_key method") class RSAPublicKey(AbstractPublicKey): public_key_rgx = re.compile('...') private_key_rgx = re.compile('...') def generate_public_key(self, private_key): return RSAPrivateKey(private_key).public_key class Ed25519PublicKey(AbstractPublicKey): public_key_rgx = re.compile('...') private_key_rgx = re.compile('...') def generate_public_key(self, private_key): return ECCSecretKey(private_key).get_public_key() class DSAPublicKey(AbstractPublicKey): # This will error out when initialized with a private key because # it doesn't implement generate_public_key() public_key_rgx = re.compile('...') private_key_rgx = re.compile('...') 
I haven't been programming for a very long time, but even I am tired of this mentality. Barring obscure scientific / academic code bases who's dependencies aren't yet python3 compatible, or sedimentary workplace codebases, is there *any* reason whatsoever to write new python2 code? If as of right now, 04:36 GMT, nobody in the world ever wrote any new python2 projects, we'd be better off.^1 The sentiment put forward in this blog post - the idea that packages should try to be backwards compatible - is silly. Converting an old codebase to be python3 compatible along with the updated packages their using is trivial. Time consuming perhaps yes, but nobody is forcing them to update their dependencies while the job gets done. Peeps just need to let go of py2. It's dying, literally. ^1. ^Furthermore ^the ^idea ^that ^any ^beginner ^should ^even ^consider ^learning ^python2 ^is ^ridiculous.
Not the right sub for this. I have no idea how you're writing or saving these files so I'll just point you in the direction of json, yaml, and other serialisation methods.
Yes, CS:GO is developed by Valve, who have an ant-cheat called VAC (Valve Anti-Cheat). My knowledge of cheat writing is not very deep, however, this almost certainly would be instantly detected by VAC, which would result in a ban. 
You can just copy the entire virtualenv directory. However, if I were in your position, I would start from scratch. Doing so means you have one less problem to worry about after getting your computer setup again. As the flair beside this post says, "simple is better than complex." Where are you that bandwidth is an issue?
Not all math is useful for all people, though.
That's interesting to me. If you've got anything that hand that supports `probabilistic &lt; rule-based` I'd love to see it.
[removed]
 &gt;Maybe it is not unreasonable to expect Python3 packages to be incompatitble with Python2. Hunh? You want an old version to support every feature in the new version? Wouldn't really be an old version, would it... &gt; In my experience of using Python, I’ve not encountered a case with a package was only Python2 compatible but have encountered multiple packages where it is only Python3 compatible. I'm impressed. I manually port a package to Python 3 every few months.
Clojure seems to be very well designed language, rich hickey is exceptionally talented. It would easier to learn coming from python, unlike Haskell or ml with their complicated type systems. 
It took me a long time to structure it all to make it actually run when you type scum in the terminal. How should it be set up? should I move `scum.py` into the project and just specify the entry point? will this do that same thing? Thank you for actually taking a look at my project!
I think there is utility in a recurring "who's hiring" thread. Not as much in a recurring "who's looking for work" thread. 
You know people are threatening and attacking scientists around the world because of fearmongering about vaccines, nuclear physics and genetics, right? Would you have joked about it being vaccine free?
Visual Studio is not a shell, it is an IDE. If you ask this in /r/learnpython you'll probably get better answers.
&gt; is there any reason whatsoever to write new python2 code? Consistency. Python 2 and 3 are different enough that using them at the same time invites failures and chaos. Focus on one version, and use it good. 
That's because in C++ you can have overloaded functions, with the same name but different signatures. In the case of virtual functions, however, this "feature" of C++ is often a source of problems and that's why the override keyword has been introduced in C++11 to effectively enforce the signature. 
&gt; Do you really find that .dot() is comfortably for matrix heavy code? No it's not, but it's a lot better than having subtle bugs because some function somewhere returned a `np.matrix` instead of `np.ndarray` and suddenly a `A * B` operation is some completely different part of the program is doing the wrong thing. This is unfortunately not a hypothetical example... Edit: I realized I missed the context of the above quote, since I assumed you were arguing in favour of `np.matrix` which doesn't seem to necessarily be the case here. My comment on avoiding `np.matrix` still stands though :)
Because you never heard of them, you talk down on them like that. Makes you look incompetent and like a childish fanboy.
Care to explain how that'd be better for either party than just using a normal, well established job board?
If you don't me asking why not clojure ?
If you work on multiple projects at the same time, then it's not simple. Then consistency is more important. People are not able to avoid the chaos, so staying away from it is the sane solution for a company. 
Then host your own devpi for goodness sake
You can see the commit here: https://github.com/rodjun/python_csgo_radar/commit/47b57046bd8cb79910b899bdd7708ba60db21db0 Basically i found out that most, if not all of the windows functions are on windll. 
Aww, thanks. 
You need to check your updog
I don't think this is a good place to use Selenium. Automate the boring Stuff has a [a great chapter on sending emails](https://automatetheboringstuff.com/chapter16/) that shows how to do this in a much more reliable way. I'm not sure if it discusses responding specifically, but adding a feature like that woudln't be too hard. 
this is more for a guts feeling than solid reasons. I know Clojure has great libraries and tools. But it's based on Java and I have very bad memories of it, specially from the documentation system and data types, I don't want to dig into it again. Then I often read the stacktraces are horrible, very verbose, and that the slow startup is a daily annoyance. Maybe the debugging system is simple and not as powerful as other lisps.
How about `spoken_date(lang='eng')`?
[Not in nearly two years you haven't](https://mail.python.org/pipermail/distutils-sig/2015-January/025683.html)
It used to install from source, they uploaded a bad wheel.
In my opinion, you should be using Python 3 unless you **really** have to use Python 2. But there are so few cases where the latter is the case that you can afford to focus on Python 3.
Thanks! That is what I will do. I already have an ambitious project in mind so hopefully I'll be able to at least stumble through Python 3 by the end ;). 
Massive respect for being humble and not only admitting you made a mistake but talking about how you could avoid it in the future. And also for that slick generator solution. 
How far back in support do we go? Why stop at 2.7? Why not 2.6, 2.5 or even 2.2? This is like telling the PHP, no you can't write in PHP 7 because you should support PHP 4.
Platter may help: http://platter.pocoo.org/dev/ &gt; Platter is a tool for Python that simplifies deployments on Unix servers. It’s a thin wrapper around pip, virtualenv and wheel and aids in creating packages that can install without compiling or downloading on servers. not in pip yet, installable with git+https://github.com/mitsuhiko/platter 
Thank you. It wouldn't have been possible without help from others.
Great job.
I'll try to, but i'll only have time in january.
Nice! Great work ;)
&gt; spoken It's written as often as it's spoken. Should I expect to use `spoken_date()` for parsing text from a web page? I think a `natural_language_date()` (or possibly just `nl_date()`) is significantly more apt.
What are you talking about? If you just use python3, then your code is consistent. Where's the issue?
Then maybe half of all python3 users need to get their shit together and learn something new, instead of presuming the world of programming stops with them.
This week, and the last few, I've been working on my new project, [SuperPAC](https://github.com/Phantom410/SuperPAC). It's an all-python circuit simulation tool. Right now I am working on really making the base classes robust, and I want to provide the best example documentation I can. Once it is ready, I'll look to engage the community! I can currently (ha) use it to simulate circuits with some test scripts. I want to move towards plotting the frequency responses and transfer functions of any circuit. Finally, I want to use it to simulate guitar pedals. Once I have a good transfer function implementation I can use my raspberry pi to create a programmable effect!
I am simply attempting to have my code return the same values as the first code (the one that is not in a loop)
Qt designer and PyQt might be what you're looking for. http://projects.skylogic.ca/blog/how-to-install-pyqt5-and-build-your-first-gui-in-python-3-4/ edit: I should add that both matplotlib and pyqtgraph integrate well for plotting graphs and charts. 
Existing code does not magically transforms into perfect python 3-code. And without serious reasons a company will not invest time and money and risks regression. Legacy code is a very relevant matter for the majority of python-users.
Easy to use and lightweight https://github.com/dddomodossola/remi Here is his editor https://github.com/dddomodossola/remi/tree/master/editor
Most GUIs have a designer. The notable exception is Tkinter. The most mature is probably PyQT / PySide with the QT designer. However I'll bet that if you give text-based design a try you'll find it's not so bad. I actually prefer it (I swap between tkinter and LABVIEW a lot) because you get to leave a lot of the work to the computer (centering, alignment, dealing with window size or font changes) which makes the result more dynamic (IMO). I don't know of any GUIs that have graphing deeply integrated like MATLAB does. You will have challenges with that in any GUI framework. 
Datetime packages which do not work for arbitrary calendars and dates are useless for a large number of technical users in science and research. This is a really critical problem, and it's getting beyond frustrating that people are spending so much time re-inventing the wheel with packages like this but refuse to spend any time solving the actual core date/time problems we have in the Python world. 
Grow up, kid.
You're so smart, I wish I was as smart as you. It feels so terrible to be called a kid twice in the same sentence. I hope I recover. (Also, very lol at calling people "kid" on the internet. Even funnier coming from a german. It's like you went out of your way to sound stupid in your second language, just in case it wasn't already apparent.) Because context is something you struggle with, here's the parent comment for our conversation: https://www.reddit.com/r/Python/comments/5j4d13/my_python_2_vs_3_problem/dbdju4t/
What was offensive about my comment?
It's on sale until Christmas Eve, so now's the time! ;)
Read the other replies to figure it out.
Sure, people disagree. But what about my comment deserved to label my action "shitty?" I would rather have discussed it, and learned more, but this conversation is deterring me from engaging the community.
not sure if it helps somebody, but here you go: https://developer-tripadvisor.com/content-api/documentation/
good luck just find a project you love and contribute, or make a project you love and contribute. you're good. great post.
Pyinstaller was one of the programs that I've tried but it doesn't seems to works (and I don't think is a problem of my script). I prefere not to use a full installer but if there is no option I will 
I think it's a sort of joke TM. Like saying 'Real Soon Now^(TM)'
Dropping you to the REPL is pretty much all the `-i` flag does. So just don't run it in interactive mode ... python script.py 
&gt;&gt;But run-time enforcement? Please, this is Python.&lt;&lt; I see the philosophical issue here, but in fact there is run-time enforcement now in abstract classes (method name, required override), so the break with your philosophy is already there... just not comprehensive enough to do what OO would expect it to do.
You may be interested in the reasons behind Python's design for ABC, which is explained in [PEP 3119](https://www.python.org/dev/peps/pep-3119/#rationale). I've linked it to the specific section.
Maya has come bundled with several rendering engines, such as Mental Ray, Vray, etc and can be used with many others such as Arnold or Renderman. Beyond its viewport rendering though, it's not a render engine itself.
Great answer. That's like saying "just use a bicycle" when someone complains about a problem with their car.
As well as whatever beginners' tutorial you get, I would download the entire python language documentation, plus that of a dozen or so common libraries. Tutorials always leave one argument unexplained, or break if you make a trivial change, or something - hitting Google for that sort of stuff is usually trivial (I've been using python, among other languages, for years and would still be useless without it) but you'll be stumped otherwise. Also make sure you have an IDE with a good debugger, static analysis and introspection tools - makes things a lot easier. 
And See the r/learnpython info and download all the things 
 This sounds a lot like an XY problem, and in this case the bicycle is the obvious choice; is there a reason you don't want to use it? 
I really like the cryptography package, I made a nice little file encryptor/decryptor.
I know an excellent resource for your question: www.google.com
Fair comment, just not an area I've ever ventured into. Perhaps the way forward is to get a couple of good techs from all involved companies, lock them in a room and tell them that they're not coming out until they have a plan? It doesn't have to be a good plan as a bad plan is better than no plan at all. 
Not good enough, last I heard 1.5 was still in production use.
Those poor bastards 
Pycharm works fine on Windows, Mac and Linux. You're better off fixing the install on the new laptop than changing to a completely different tool. IMO there is nothing available that is the same calibre as Pycharm as a Python IDE, except perhaps Eclipse with PyDev.
&gt; not in pip yet The irony...
yep!
Senior Front-End + Django Developer at Flowroute (Seattle,WA,United States) https://www.djangojobs.net/jobs/647/senior-front-end-django-developer-flowroute/
Nice really cool!
Thanks for linking to us!
&gt; The answer is almost always "no". If the code is complete there's no need to migrate it. If the code will be worked on the answer is pretty much always yes. It's called tech debt, if you don't migrate your code then it will be more and more expensive to maintain it and to port it in the future. If it's not now you will eventually reach a tipping point when it'll be cheaper to migrate, but it also will be harder to port later since the language is changing each release. In few days 3.6 will be released, and some people are still stuck with 2.6. At this point 3.x is better than 2.x in every way (speed, memory usage, cleaner syntax, more and build-in modules etc).
Don't you pay Autodesk to use their software? Companies that offer a paid product should be one of first ones to do conversion. It's possible to write code that works on Python 3 and 2.7. Your company should be putting pressure on them. If they still not made their code working on Python 3 it tells me that you're not their customer, but (excuse my language) you're their bitch.
Lower() the text when you save it in the dict first time through, don't wait until you are retrieving matches
Snap. Me to! Hoping to learn some bits, just quite hard remembering everything when there's so much to learn. 
Really understood what you could do with comprehensions after taking the course. In the end you're not really expected to use the code you produce for anything real. There are better packages for that. But you get to know better what's going on under the hood of the optimized packages. 
It looks awesome but doesn't work for me under windows, it kept trying to launch bash whenever I selected an environment. I may take a look at it myself to see if I can submit a patch, but I still wanted you to know that it has this behavior. Also, do you have any desire to get it included in conda-forge? Seems kind of odd to distribute a conda tool through pip only :P
Their product works amazingly...... Maybe they are working on it already and most likely they are, they just haven't implemented them for the above reasons. If I stop using their product, which is the industry gold standard, just because they are using python 2.7 instead of 3.5/3.6, them im an ignorant.
What's a quizlet format? Maybe put some placeholder text in the box so it shows me an example of notes formatted the way you want. Then I can submit the example and see the value of using your app without spending all that time writing notes 
Thanks :D
Definitely post this to the Harry Potter subreddit(s) with a quick explanation. Those are pretty funny!
I disagree. Python 2 and 3 are similar enough that it isn't hard to write cross-compatible code. It means writing to the lowest common syntax, namely Python 2. For functionality (classes, functions, methods) you can usually back-port the critical functionality and use that. This is the cost of supporting an old version of the language. This is for libraries where you expect your users will be using a wide variety of versions. For applications, don't bother with cross-version code. Just pick a version, and stick to it.
Pretty sure you're trolling. FWIW, I'm not, but whatever. They're your docs, spread all the misinfo you like 
Stability is no issue. For documentation, I use Qt Assistant, and I never used Qt with C++, only via PyQt. You have to be careful about memory management. For many Qt classes (all that inherit QObject, iirc), their instances' lifetime is bound to the python object wrapping it. So as soon as your python object goes out of scope, it will get garbage collected, destructing the underlying qt instance with it. 
&gt; but I think I'm more likely to get contributors if I use PyQt instead I think you might be doing a lot of extra work and not get much payoff. I think you can answer that pretty easily though. Do people constantly complain about building the package given that they want to use the latest version and don't want to wait for the latest release? I use PyQt4/5/PySide is a common code base in my open source project. It's really not hard and know it well enough (or at least my IDE does) to where documentation isn't really an issue. I also take the opinion, that unless I'm annoyed by people, I know best coupled with do it right. If you don't do it right, don't let unhandled things pass silently, so users know where things fall short. The code is complicated/big enough. Don't invent tasks (e.g., porting from C++), unless you're convinced of the payoff. My approach has actually worked out surprisingly well.
I am working on a file compression algorithm
I think autoresponding emails would be a lot easier by using the POP3 and SMTP protocols (GMail supports and offers connection details for both of them).
You want to open the file in `'rb'` mode to read raw bytes. Also, you don't need to explicitly seek to the beginning. The reason you're getting that issue is that Python uses the lower half of the ASCII table by default on Windows, at least until 3.6. Edit: also, post questions in /r/learnpython next time.
I'm really liking the idea of a higher level library on top of selenium. Not sure yet if I would like it in JSON, but I'm not immediately saying "no". I would rename it for sure; Slack is a very unfortunate name at the moment, it's almost as if calling it google or facebook....
It's not. There is no such thing. There is no "best hammer for DIY hobbist", "best car for busy mother" and such. Only good options you need to assess for your needs.
0x90 is decimal 144 which is 'É' in extended ASCII. Although the chr() function is defined for [0..255], your environment might not support printing characters above the range of 127. This is because extended ASCII interprets bytes as unsigned to get the 256 character range, and regular ASCII uses signed bytes (which means a more limited range due to the sign bit). 
&gt; I disagree. Python 2 and 3 are similar enough that it isn't hard to write cross-compatible code. They are not similar enough that you can ignore the differences. And those differences are normally leading to higher error-rate and slower development-speed. Many companys don't have the manpower and time to solve the problem by force, so the next best step is simply to avoid python 3. &gt; This is the cost of supporting an old version of the language. No, this is the cost of using a new version. In the real world there is no reason to use a newer version just because it is new. And there is no general reason to use python 3 if you have reasons to not use it. Legacy-Code is very valid reason and daily reality in many companys. Fangirls can circlejerk all they want, it doesn't change anything. At the end of the day companys wanna get things done and make money, and python 2 is a very good tool for that, while python 3 has not enough advantages to justify the additional costs in every case. Maybe it will change in some years, but till then it stays that way.
Actually, there is Pygubu for TkInter, *"Pygubu is a RAD tool to enable quick and easy development of user interfaces for the Python's tkinter module."* http://github.com/alejandroautalan/pygubu
What OS are you using? What are the specs of the laptop?
License reasons. If these are redistributable is what I'm asking.
no, that's a special case for 1D arrays. I do mean matrix multiplication.
I'm only seeing three alinea's, is that all or just something wrong on my browser?
Likely either C# (for Unity) or C++ (for Unreal). You can also look into [Godot](http://www.godotengine.org/) - it's a Unity-like engine with a Python-like scripting language.
&gt; How can this be if there are 256 ASCII chars? There are only 128 ASCII characters. Everything over 0x7f is not ASCII, and displaying such characters depends on the character set used (e.g. [ISO-8859](https://en.wikipedia.org/wiki/ISO/IEC_8859))
When you create a new Digital Ocean droplet, you can select an image with Django pre-installed. That's the simplest way. If you want Flask instead of Django, here are [my notes](https://github.com/jabbalaci/DigitalOceanFlask).
Qt is quite popular and used by KDE desktop environment. PyQt has some traction but it's not as big as for example Django - and in many cases you want a web application and not a desktop application. With Qt Quick and "pure" Qt there should be more stuff to do. But still - desktop apps.
You can also read up on the general details of how it's put together in this blog post https://www.nexmo.com/blog/2016/12/19/streaming-calls-to-a-browser-with-voice-websockets-dr/
You are in the best position to build a PyQt desktop app, go for it. *&gt; wondering if it would be a struggle to run a PyQt5 app on mobile* Eh, the Python story for mobile is pretty horrendous at this point, anywhere you look there are a lot hoops to jump through and results are often underwhelming. PyQt is no exception. I honestly don't know how pure-Qt handles mobile scenarios, if you're familiar with that already then you should probably steer clear of PyQt.
Thanks for the link, that was interesting. They say that it's for performance reason, however it seems that GDscript is extremely slow (500x less than lua according to a 9 month old microbenchmark I just saw on reddit). And they loose all the benefit of using a widely used language.
First check I would do is see if the source is an executable script. Modern versions of macOS now disable non-core executables in apps in order to protect users in the garden. First check the output of this: `ls -l /Applications/Kivy.app/Contents/Resources/script` and see if it has in the first division an "x" executable flag. eg `-rwxr--r--` if you see no x's, then you need to enable the flag via chmod. `chmod +x /Applications/Kivy.app/Contents/Resources/script` Next check your link with a similar command. Make sure it's properly pointing to the directory. 
http://stackoverflow.com/questions/35267916/can-i-distribute-an-executable-with-msvcr100-dll
This works because timedelta doesn't store minutes - only days, seconds and microseconds - so 300 doesn't actually overflow. *But*, that being said, it still isn't true that overflows aren't converted or cause timedelta to "freak out" - eg, this works in 2.7 and 3.5: &gt;&gt;&gt; timedelta(seconds=300000000) datetime.timedelta(3472, 19200) 
I mean... yeah. But it's kinda like sharing a recipe for chicken pot pie that consists solely of "Buy a frozen chicken pot pie."
Alright. Want to hear a funny story? I used $ with the command in the console hahaha. Thank you very much Midel, you're the first to help me on reddit so I'm dropping gold onya. 
Doesn't Unity support Boo, which is like Python? Am I misremembering?
Still need to find a way to implement it into PyCharm though haha
They [dropped Boo back in 2014](https://blogs.unity3d.com/2014/09/03/documentation-unity-scripting-languages-and-you/).
Blender Game Engine is actually pretty solid.
Ah, dammit.
pyqtdeploy claims to support iOS and Android but I'm not sure how many people are actually doing it so you might have a lot of moments where you think "Am I the first person to run into this problem?" PyQt5 effectively has no docs, you just use the Qt docs and translate things to Python `class::method()` becomes `class.method()` etc. 
I am working on a program which generates an Autocad script, based on incomplete customer data. It is going ok - as soon as I work out how to add lines using rectangular notation instead of polar.
&gt; If it were on conda-forge I could mirror it and show it to my coworkers. You're welcome to put it on conda-forge yourself - this is something that can be done without needing any changes to the source code, as far as I'm aware. It's not quite a standard package because it's packaged with flit, but have a look at [entrypoints-feedstock](https://github.com/conda-forge/entrypoints-feedstock) for an example of how to handle that until flit is packaged in conda. &gt; Are you game for pull requests? I'm certainly open to simple fixes. If you're making changes anyway, please do let me know about them. The priority I'd like to work on when I get a chance is allowing (Unix) shells other than bash. 
Finishing the code for my ghost detector, https://imgur.com/gallery/VNZMr Runs on a raspberry pi for video, sound and sensor data. Using tkinter for the UI
I'm working on a flask based rest micro service that will kick off building cloud infrastructure with terraform. Also auditing the ec2 tags in our AWS accounts.
Wat? https://www.crummy.com/software/BeautifulSoup/
Getting involved in open source, specifically trying to contribute to some of Mozilla's Python codebases. I think it's a good way for me to give back, meet some cool people, and work on things slightly outside of my normal day to day routine.
Are you using the whole book? Would be nice to see if the tweets are different if you use only dialog. 
Currently i am working on an wxPython(Phoenix) UI for showing results from different command line tools. My First UI was in html5 and websockets but it was stupid idea to create a webserver which dump response objects and must fetch with a pull request. My config say please pull on every 10ms a waste of traffic and shame on me. So i switched to wxPython. I think it is a great framework.
I am using the whole book. That sounds like it might work, the only problem is that if the source text is too small Markovify has trouble producing a result, but I'll look into it Edit: Does anyone know how to programmatically extract quotes from a large piece of text. I've figured out how to split at the quotation marks ("), but the program falls apart when I get to quotes that include the apostrophe quotations (')
Usually, for me, my computer is fairly locked down. However, in a production environment, this is a perfectly valid point and essential towards ensuring the security of your web application. 
You kinda answered your own question there by suggesting they embed python. Obviously CPython is a terrible choice to embed in a game engine in large part because of the GIL. When you embed an engine you also pull in all the baggage that platform brings with it. Can you imagine embedding the entire JRE into your game... that would be awful!! When you talk about embedding you have to think carefully about what to embed. Lua is not a bad choice (reasonably compact interpreter, designed for embedding), but you never hear anyone jumping up and down saying they want to write lua (prototyping, seriously?!). Your choices are often either: 1. Pick a mainstream language that people know and like, but which is not easily embedded because it wasn't designed to be embedded. 2. Go with something that isn't mainstream, was designed for being embedded, but may not be the language you want. 3. Roll your own getting the language you want, but at some performance cost. 
Working on a Windows debugging engine. Viewing memory, breakpoints, modifying registers... 
Writing code to analyze the newly updated standard costs for our company and detect outliers for similar items.
Continuing the twitter-bot/django-powered voting site project I was working on [last week](https://www.reddit.com/r/Python/comments/5i3qv2/whats_everyone_working_on_this_week/db811l2/). I now have a working local prototype. For this week aims include: * extend test coverage (from \*cough\* zero to at least 'some') * maybe a few more css tweaks * prepare for deployment (Heroku do a free package, right?) * decide whether I want to get a domain name (doubt free options exist for this)
I've just scraped some data from 51 PDFs online (all from the same org, in the same format) that contain stats on high schools kids in computer science across the US. I want to visualize the data on some interactive maps, and run some regressions with things like median household income in each state. I need to re-familiarize myself with regressions and some basic statistical models, as well as dive into some mapping libraries. 
It's funny how I'm the only one having the conversation, and you're just saying random shit. I talk about existing codebases, you talk about children. If you'd like to get back on topic I'd gladly continue to chat, but you're acting emotionally because I called what you said irrelevant, because it is. It's contextually nonsensical to put forth the argument you did. Don't blame me.
Yeah, the name is definitely unfortunate, lol. I named it that back when I first created it and had no idea what slack was at the time. I'm thinking of renaming it to "selenext" for "selenium extras" or "selenium extended". I have been writing automations with selenium for a while now(I do it for my job) and this one piece has made things insanely simple. You really have to try it out to fully realize the advantages. As for the JSON, it was just the simplest way for me to impliment the idea. Just out of curiosity, how would you go about doing it? I'm always looking to improve my design and whatnot.
I would honestly start with javascript. There's _tons_ of examples out there, that are all open source simply due to the nature of JS. And you can toy with the code right in the browser - no need to recompile etc. And if you break something you simply reload the page. Plus manipulating code is much easier to learn from than writing it from scratch. Baby steps. And it doesn't really matter what language you learn these kinds of concepts in - the math/logic translates just the same. Also, if you haven't messed with 2d graphics, physics, pathfinding, etc, I would start with a 2d game. Working in 3d space is much harder, and thus limits how fast you tackle concepts. 
A simple project management system
Panda3D's Python 3 support has improved vastly in the development version, you can get a precompiled build with python 3 from https://www.panda3d.org/download.php?platform=windows&amp;version=devel&amp;sdk (use a build with the -py3 suffix).
Django dashboard for my Raspberry Pi.
if you look for cookie cutter python you might find a good template
PEP8
"Why aren't you working?" "My PMS forced me to take a day off."
The book "Code Complete" is a good, language-agnostic guide to structuring your project for ease of development, readability and maintainability. "Clean Code" is a similar book, both come highly recommended by the folks at Hacker News.
Just finished this up last week: [http://andrewzwicky.github.io/2016/12/16/genetic_boggle/](http://andrewzwicky.github.io/2016/12/16/genetic_boggle/) It's a genetic algorithm approach to solving a word puzzle around the board game Boggle. Took me a while, but I'm pretty proud of it. Comments welcome. Code here: [https://github.com/andrewzwicky/puzzles/tree/master/FiveThirtyEightRiddler/2016-10-21](https://github.com/andrewzwicky/puzzles/tree/master/FiveThirtyEightRiddler/2016-10-21)
Look at good projects like the Requests library: https://github.com/kennethreitz/requests Or Flask: https://github.com/pallets/flask
ELIZA style conversational agent that has responses to your inside jokes and things she would find amusing.
I learned alot from reading your comments. Intuitively your answer of 'one size doesn't fit all' makes perfect sense now that I understand the situation more fully. The devil is always in the details! 
Python best practices guidebook, written for Humans. http://docs.python-guide.org 
New Django webapp to accompany a paper that's going to a conference (and I'd like to eventually try to send it viral). First time doing a Django project from scratch, no clue what I'm doing, this'll be fun. 
You should still put pressure on them, if no one will, then they won't have reason to port it. I guess in the mean time you can try to write code that would work on python 2 and python 3. This is much easier to do by writing python 3 code and then making it work on python 2.7, but looks like you won't have this luxury. The biggest issue is to keep track of what should be unicode and what shouldn't. It's hard to do it in python 2 even when you understand unicode. Perhaps you can use this in top of your code: from __future__ import division, absolute_import, print_function, unicode_literals And then also run the code with python -3 &lt;file&gt; to provide warnings about compatibility issues. Python 2 also supports some functions that are supposedly python 3 only, such as bytes() which maps directly to str().
Qt is huge in embedded touchscreen UIs. Medical, consumer, auto, industrial etc. 'Desktop' apps may be dead, but Qt still has a place with all the "smart" things out there. 
Trying to figure out how to use the discord Python API
&gt;It appears that what you are doing here is closing the classes for modification, which is what all of the OO books I've read preach. The problem I run into with scraping webpages is that the page's element's selectors may change so you constantly have to open the classes to fix them. Exactly! In this case, I liken it to having a phone operator on standby. You just need the name of the person you want to get a hold of and the operator will connect you if they are available. You don't need to worry about dialing or knowing the number. &gt;I like that you use JSON for the structure (I like JSON better than XML but a personal preference). It might be nice to implement XML as a format (and possibly others?) too. Perhaps the instantiation of the Page class can determine format by file extension. Or... by keyword so you can adhere to the second rule of Python philosophy :). I like this idea. I was thinking about allowing regular python dictionaries as well, I just like JSON because it keeps the model of the page you are dealing with away from the logic of the program. You could accomplish the same thing with a `dict` really easily, but you would then have your logic side of the code cluttered with `dict`s.
&gt; PyQt5 effectively has no docs, you just use the Qt docs and translate things to Python That is true except for some corner cases like e.g. Signals/Slots which work a bit differently as opposed to a purely "translated" c++ version. But there also is sufficient documentation on that.. 
I didn't say anything about Python being slow for games here. It's fine to write game logic in Python - Godot does it (to an extent) and so do many other engines. It's about the ecosystem more than anything, and Python/Panda3D just doesn't compete with Unity or Unreal in terms of that.
There is a stickied post about this every week.
You don't need to code in C. Just need to know your way around a bash terminal.
Qt in general is probably in the top 3 most used desktop GUI frameworks after .NET's winforms and WPF, though web is creeping in with Electron or straight websites (especially single page apps with Knockout, React, AngularJS, Angular 2, etc). If you really like desktop, Qt is a place you could probably keep finding work, though as others said, it's harder to find expanding teams in desktop as opposed to web now. Don't read terribly far into lack of posts. I'm amazed by how many postings don't mention the most important tech used. I worked for an Oracle shop that listed SQL Server as a requirement and didn't mention Oracle because HR felt it was more important to standardize the job posting across subsidiaries than to be perfectly accurate on technical specifics. That same HR department sometimes doesn't mention the programming languages they want a developer to know either. I also know people with Flask job openings that post that they are looking for Django because they figure they'll cast a wider net. Will knowing a particular framework get you a job? It might help, but unless you're going to chase only the top tech at any given time, you might have a hard time finding the particular tech anyway. In a larger company especially, you'll often find that being an experienced developer is enough to get hired in an area where you don't have much experience since you've already demonstrated you can learn. My team does mostly ASP.NET and Angular2. The last guy we hired was a WPF desktop app guy. The one before that was a Java desktop app guy who specifically stated he dislikes web UI work. He was brilliant, though, and we're glad he's here! Programming is a weird profession. Learn as fast as you can, and your learning momentum will keep to better on your feet than the particular things you've done previously.
Are you aware of any examples of a reasonably fleshed out RTS or FPS game/game template built with this engine that I could look at to get an idea of what's going on?
Not really what you asked for, but you did mention that you want to generate executables: Unlike Qt which is licensed under a laxed version of LGPL, PyQt is licensed as GPL. This is very inconvenient for a library, and is probably done so that you'll actually need the commercial license even if you develop something open source. Now I know there are tons of projects that just use PyQt, maybe even unaware that they are in breach of the license terms, but if you want to avoid legal exposure you should take this point into account.
Are you a bioinformatician? 
Thanks for looking at it!
Have you found the Discord API server? IIRC the discord.py channel generally has some people around willing to help you with (specific) problems.
Because taste, and not the practice of cooking, is all that matters, ever.
What's your statistics background?
I presumed you were the other guy because this conversation is so inane I couldn't imagine anyone else wanting to get involved. Why did you get involved? To join in on being a cunt? This is so fucking stupid. I wanted to talk about python and ended up in a mud slinging contest with you and your backwardscompatibility comrade. It's my own fault I suppose.
&gt; And how about building Windows executables? I recommend pynsist. I've also used cxFreeze. https://github.com/takluyver/pynsist
&gt; I think you might be doing a lot of extra work and not get much payoff. That depends on the application, for example if you can use Pandas then you will get a huge productivity boost.
Scraping Reddit for Amazon mentions. The app itself is in Rails and just displays what the Python scraper finds. http://www.productmentions.com is the actual url, and the code for the python scraper is here: https://github.com/jackschultz/product-mentions-scraper Trying to get it deployed with Docker now. Anyone have experience with that?
Yeah, In my experience, people usually immediately connect "Python" with "slow". I have to explain them for a long time that the internals are in c++, and that python is by far not the limiting factor here. Feel free to show any of my screenshots, I usually have a hard time deciding which ones I prefer to show :) 
Depends. If it does what person needs engine to do then it can compete. If person has wrong expectations then it's problem not in the engine.
I don't know what I'd use this for, but I want to use it for something.
You are asking in r/python, what answer do you expect? You just need people who like PyQt tell you that it works. It does, I suspect. I used C++ and Qt quite a lot. If you don't detest Python, it might be a good platform and language to switch to. There are many tools and all. However, the C++ language is much more flexible and will probably yield much more interest in you on the job market. The C++ standard lib is gaining features with C++11, and if you add in boost and POCO you get a lot of tools that are really useful. It really depends on your personal goals. Do you want to learn something new and have a potentially vast collection of (some more or less crappy, a few really good) Python modules to choose from?
YES! especially the last point. 
These guys did their homework. This is an awesome list that really captures current Python developments. Interesting to note that 3 of the 10 libraries are (currently) Python 3 only.
4chan Image sweeper. You give it a link and a resolution and it will regularly check your thread for new image updates and automatically downloads them. Great for building your wallpaper collection
I'm orking on the provisioning of zabbix based on simple requests from a CMDB/service management system
Interesting reading! I presume that uvloop is faster than asyncio? And I wonder is it compatible with aiohttp, if it is truly a drop-in replacement.
YAML looks great. If there is a default library for parsing it I will jump right on adding support for it. Here is what I have for a generic login controller. It obviously wouldn't work if you had to click a login button that then revealed a form or something like that, but you wouldn't use it for cases like that. class PageController(object): """ Standard controller for controlling a page. """ def __init__(self, page, wait=False): self.page = page self.wait = wait @randomly_waits def fill(self, element, text): """ Send keys to an element, then randomly wait. Args: element: text: Returns: self """ element.send_keys(text) return self @randomly_waits def click(self, element): """ Click on an element, then randomly wait. Args: element: Returns: self """ element.click() return self class LoginPageController(PageController): """ A generic controller for logging in to a webpage. It uses a `Page` object and a `WebDriverWait` object to do the job. """ def __init__(self, page, wait): super(LoginPageController, self).__init__(page, wait=wait) @randomly_waits def do_login(self, username, password, remember_me=False, stay_logged_in=False, wait_func=False): """ Log in to a web page using the given `Page` object as a template. The `username` and `password` attributes must be set on the `Page` object. If you want to use the `remember_me` keyword arg, you must also have that attribute set on the `Page` object. Args: username: str password: str remember_me: bool stay_logged_in: bool wait_func: func, bool Returns: self """ self.fill(self.page.username, username) self.fill(self.page.password, password) # Click remember me checkbox if remember_me: self.click(self.page.remember_me) # Stay logged in checkbox if stay_logged_in: self.click(self.page.stay_logged_in) # Click login button self.page.login_button.click() # Call the wait function. if wait_func: self.wait.until(wait_func) return self That way the login is still customizable as far as what needs to be done(like clicking a checkbox). However, if you have a special case, you're probably better off just making a new controller. It's just nice to have the ability to import something that you really shouldn't need to rewrite in a lot of cases.
yes and yes
I'm updating [wine_env](https://github.com/duganchen/wine_env). Adding pyTest coverage, merging in the FISH support, fixing the setup.py, and porting it to Python 3.6.
This. You have given us a very loose use case. The answer is "probably" until more data is available.
Converting backend javascript for an internal webapp (written by someone who's no longer with the company) into Python. That someone decided it would be a good idea to not leave any comments in his code at all. I have also never worked with JS before now. Fun times. D:
I'm not sure how pandas fits into this discussion. This is a question of how much work is it to switch a Qt GUI from C++ to Python (PyQt). I'm sure the OP can interface with pandas using SWIG just fine if s/he tried.
`hug` looks like it's inspired by [`servant`](https://github.com/haskell-servant/servant). Can anyone confirm?
It's against their terms and conditions... Sorry for the mood kill
I usually scoff at these lists, but this one has some merit. Very informative descriptions, especially for the libs that are outside of my own realm of knowledge. Makes me want to fire some of them up and get my hands dirty.
I got about 10% performance improvement by simply replacing the asyncio backend with uvloop, in an app I developed earlier this year. I'm sure I could've tweaked it to do better, and every application will have different performance improvements.
The article describes uvloop incorrectly. asyncio defines an event loop interface, as well as a built-in event loop that implements the interface. uvloop is merely an alternative implementation of the event loop, not all of asyncio. From the repository, it looks like it is implemented in Cython.
We have a sticky for this
Currently it only handles basic network monitoring. I wrote a Django admin task that uses the nmap module to scan the network, parse the results, and store in a SQLite database. Then built URLs, views, and templates around it so I can view the data from a webpage. I still have some features to implement (text message for each new host discovered, blacklist at the click of a button), but the core functionality is working. I know I could just install DD-WRT, set up a guest network and MAC filter my existing devices on the real network but...it's not as fun. 
Qt is far more popular though. If my stated goal is sacrificing C++ to get more contributors, using an obscure framework goes against that goal. I'm a conformist enterprise dev, I need the safety and validation of tech chosen by many others.
PythonAnywhere is PaaS, DO is IaaS. It's just a matter of how much control you want to have over the deploy. PyAnywhere is awesome btw, I'm using it too.
Happy to see Sanic up there!
There's also [Plotly](https://plot.ly/python/). In my experience with bokeh, the graphics it produced were a bit disappointing - they were not very responsive when you had more than a few data points. When I look at the sleek, refined interactivity of web sites that implement D3.js graphs, and compare it to bokeh, the latter just sleems sluggish in comparison. Bokeh could also benefit by having some more built-in styles/themes that can make your charts truly look beautiful. I've since gone back to relying mostly on the static images of Seaborn/Matplotlib. 
I'm planning to use Django for the first time. I've never made a webapp before.
I'll almost certainly try them both out concurrently. I have seen a LOT of really beautiful visualizations with D3. I must admit to it really being a case of me being lazy, and not just from a learning perspective. I have a really hard time getting excited about any visualization projects, and getting out and getting data for them. I find that I'm not great at motivating myself, but if there's some at work.... I've recently become aware of some really juicy data sources, and I'm now incredibly excited about exploring their potential visualizations. I can see me comparing and contrasting both tools to find what I like best, for sure. I'll also check out Plotly to round it out.
How to setup uwsgi on Debian or Ubuntu my way: sudo apt-get install uwsgi uwsgi-plugin-python3 uwsgi-plugin-python Create an ini file in /etc/uwsgi/apps-available, you can specify the python version your app needs and location of your apps virtualenv in the .ini file. Symlink the ini file to /etc/uwsgi/apps-enabled sudo service uwsgi restart Logs are in /var/log/uwsgi/app/name-of-app.log 
Have you looked at datashader, a big data wrapper on Bokeh also produced by Continuum? I had the same issues with Bokeh but it appears datashader does chunked aggregation and can display huge amount (the article I read had a point for each of 300mil people in us) of points. Bokeh can do some sophisticated custom interactive stuff with callbacks.
No GUI experience, been learning Python for around a year now and just finished the Automate the Boring Stuff With Python book.
You're comparing apples to turnips here, I think
What's the vulnerability? Is it specifically related to flask or is in pip? Or just simply running pip as sudo. I just hadn't heard of a remote code execution vulnerability. Now that I'm saying it are you simply just saying that you don't know what you're downloading? Sorry I just hadn't heard about a security vulnerability associated with running pip as sudo. 
A couple of these libraries are also found in [*20 Python Libraries You Aren't Using (But Should)*](http://www.oreilly.com/programming/free/20-python-libraries-you-arent-using-but-should.csp?intcmp=il-prog-free-product-na_new_site_20_python_libraries_text_cta ) There's a great [*Talk Python to Me*](https://talkpython.fm/episodes/show/77/20-python-libraries-you-aren-t-using-but-should) episode with the author/expert Caleb Hattingh. 
SimulateMe! neo141
Definitely not a drop in replacement yet but we've heard some things about people experimenting with it in a prod environment. If you submit an issue I can tag it as a discussion and leave it as an open forum for any users to tell about their experiences!
That won't work because I print the dictionary too. I don't want to print titles in lower case, that'd be weird.
From your link: &gt;The use of the term is sometimes criticized,[1][2][3] because it can be mistakenly interpreted to mean that the ASCII standard has been updated to include more than 128 characters or that the term unambiguously identifies a single encoding, both of which are not the case. Which I imagine is more or less the argument that was being made - i.e. only values 0 to 127 are actually ASCII; code pages aren't part of the standard. More to the point, saying things like "uses the lower half of the ASCII table by default" makes no sense because the alternative isn't actually a specified thing; you can't just say you "use both the lower and upper halves of the ASCII table by default" because there are multiple possibilities for the "upper half".
 for x in X: if x.type == 'class1': # do stuff elif x.type == 'class2': # do stuff else: pass / do stuff The if-elif-else pass/do stuff is a bad way to code. You can replace it with x.dostuff() or explicitly code for each case using if-elif-elif-else crash. That way your code tells you how your implementation is deficient. Logging would be fine too, but the worst thing you can do is not make it obvious some case isn't handled and where the change needs to happen. A good code does things right and is easily extensible. It's even more important with open source code. If it's really hard to extend, it's bad code.
I was just listening to this tonight actually. Save someone looking it up if they're interested: https://talkpython.fm/episodes/show/77/20-python-libraries-you-aren-t-using-but-should 
But can I still dye it red afterwards? 
A couple of things you probably haven't considered: * While Qt itself has a Python version, if you ever need to use a third-party widget, it won't be there. * PyQt5's documentation is completely and utterly absent, you have to be able to translate the C++ documentation or port the PyQt4 documentation. * C++-land has been going through ABI changes lately. You might be somewhat protected from those if you keep all *your* code in Python. * Qt has been promoting QML+Javascript a lot lately, so you might be able to largely avoid **both** C++ and Python.
Print with .Title()
NATO alphabet translator. Except there's three different types of alphabets to choose from for a little fun. Traditional, Batman, and an Impossible alphabet.
Is there any database/orm integration, or do you just use raw sqlalchemy or similar?
? I'm still learning so i don't Know what that means but thanks anyways
I'll bite on that one for ya so you aren't left hanging. What's updog?
Any reason 2 of the 10 are AWS specific?
Why not just compare with .lower()?
Is this code copy/pasted from your script? You have X_change, x_change, and x_cahnge.
I'd heartily recommend Anaconda Python: https://www.continuum.io/downloads Once you install it, you'll have python, IPython and Spyder. Spyder is a nice GUI which contains text editor, console and helper window.
That's odd, I hadn't imagined a game engine embedding a Python interpreter as being equivalent to embedding Python until you mentioned it. Maybe I get too hung up on the idea of Python as "Python the language/specification" rather than "cPython the interpreter/implementation".
My personal private "Pet Project" is a simulated environment (Context Engine) which you can configure to realise a open world for role playing games or other kind of stuff like side scroll shooter. I started a prototype with rpg world focus. Currently i have a map generator with mid point displacement algorithm and and random tree generator for dynamic woods with bush and so on. Will continue with other kind of needed entity visualization like stones and so on. All of this must be procedural. I like this topic and it's my personal challenge. So i created a Portal Applikation which holds all kind of GFX and research tools to reach my target.
[Pendulum is supposed to address a lot of these issues.](https://github.com/sdispater/pendulum#why-not-arrow)
If the event type is a key up event it probably won't be catches because it's in the if statement of the key down. I would suggest moving the key up if statements out of the other if statement and make them both separate in the for loop
Yeah, look into the `pickle` module in the standard library. Just start up an interactive shell, load the file and see what it returns - Pickle can serialize lots of things like objects (yes, real Python objects), so a REPL is pretty helpful when you want to figure out the structure of the pickled data. Then just write a script to convert it to JSON or whatever which your new code will load (or, if you're feeling particularly masochistic, write a pickle loader in C# - the format is documented and is essentially a pile of bytecode that gets interpreted at load time). 
So it is possible to have a pickle load in the program. Would that take me a lot of work? We just have a shitload of these PKL files we want to use. Doesn't really matter if we have to convert them first via a script. But inside the app would be a hell of a lot better.
Pickle files can store full Python objects which comes with the danger of executing arbitrary code when loaded. If you are lucky, the objects may be pure data structures. If so you can either change the scripts that create them or write a really small script to convert them. The answers are out there: http://stackoverflow.com/a/14922989
Interesting. I knew about the second part and that's why I always used virtual envs but from a security standpoint it makes a lot of sense too. Thanks for the explanation. 
Yea, Arrow is a disaster. The basic idea is that there's no difference between a date and a datetime. Which is a bit like dying there's no difference between a fish and a frog. Friends don't let friends use Arrow. 
Thanks!
It's a typical job for your editor (it can show the message code): http://screencloud.net/v/x559
Big monolithic Django application that aside of being a web app also have some network code that manages a network of routers and has "marketing" features for uses that log in via captive portal on that routers. Plus now we are starting to get micro-services which also run on 3.5 :)
Why should I learn about that? I *know* it - obviously you have made a mistake, so don't blame others for that!
Pls explain :D
Our own codebase doesn't have to be Python 2 compatible, external dependencies in most cases had simple syntax fixes to be cross compatible (like facepy) or try/catch importing of moved things. Only one library in our dependencies has out of tree patches - dpkt - and that's a tone of string/bytes handling.
Honestly, the second line doesn't even look like python...
Nice. Good for you :P
I think it's confusing nonsense code that's technically valid syntax in Python 3.6. It doesn't mean anything, as far as I can see. The part between `:` and `=` is a type annotation. Type annotations in function signatures have been around for a while, 3.6 is adding them to variables and class attributes. Then there's the new `@` operator. It's intended for matrix multiplication, but like all operators in Python, you can define it to do anything you like. `template&lt;T&gt;` is actually using the less-than and greater-than operators, so it's only allowed because there's a part after it. `X(*T, ...)` is a function call. `T` needs to be an iterator beforehand, because `*T` unpacks it. `...` is special syntax for a singleton called `Ellipsis`, which is useful for some numpy operations.
For reference, here's his tweet: def spam(): X: auto @ property.template&lt;T&gt; X(*T, ...) = object class Y(X): pass return Y() I believe he's just trying to show in a funny way how much you can abuse Python's syntax (version 3.6) if you really wanted to. That second line looks more like C++, but here's what's going on: * `X: expr = object` uses the new Python 3.6 syntax for variable annotations * `expr` is supposed the type, but in this case is a rather complex, convoluted expression (probably meaningless as a type) that is supposed to look more like C++ * the `@` is the (new in Python 3.5) matrix multiplication operator; the `&lt;T&gt;` is actually just less than and greater than operators * the `X(*T, ...)` is a function call to `X()` with `*args` syntax and the literal `...` meaning the Ellipsis object * the rest is fairly standard Python syntax
[Image](http://imgs.xkcd.com/comics/standards.png) [Mobile](https://m.xkcd.com/927/) **Title:** Standards **Title-text:** Fortunately, the charging one has been solved now that we've all standardized on mini\-USB\. Or is it micro\-USB? Shit\. [Comic Explanation](https://www.explainxkcd.com/wiki/index.php/927#Explanation) **Stats:** This comic has been referenced 4000 times, representing 2.8396% of referenced xkcds. --- ^[xkcd.com](https://www.xkcd.com) ^| ^[xkcd sub](https://www.reddit.com/r/xkcd/) ^| ^[Problems/Bugs?](https://www.reddit.com/r/xkcd_transcriber/) ^| ^[Statistics](http://xkcdref.info/statistics/) ^| ^[Stop Replying](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=ignore%20me&amp;message=ignore%20me) ^| ^[Delete](https://reddit.com/message/compose/?to=xkcd_transcriber&amp;subject=delete&amp;message=delete%20t1_dbgpr7e)
- `from __future__ import unicode_bytes_incompatible` I like this as an idea, but I'm not sure it would actually help much, because the code where they actually get concatenated is often not the source of the problem. Typically, one of them should have been converted by code elsewhere. I'd be concerned that doing this at the module level would lead to people effectively reimplementing the Python 2 behaviour in the modules where you enable this. - `from __future__ import open` : Do `from io import open`. This doesn't need any changes to syntax, which are the special feature of `__future__` imports. - `from __future__ import *` : this seems like a bad idea, because whenever there's a new `__future__` feature, you'll get it turned on without asking for it, which defeats the point of `__future__` as an opt-in mechanism. - *Make six part of the standard lib* : Again, I see the attraction, but I don't think it helps much. It's not in existing releases, so for the foreseeable future you have to install it or bundle it anyway. Putting it in the stdlib makes it harder to add things to it (and then those things will only be in new releases, which makes the compatibility layer rather useless). And most projects already have dependencies or bundled libraries anyway, so it's not hard to use six. - *a Python 2.7 release that just allows, but doesn’t implement the new future imports* - you mean it will run the `__future__` imports and still give you the old behaviour? I definitely don't want that. I can see the `s` prefix being useful on some occasions, but they're pretty rare, and I think using `unicode_literals` is not recommended for most code. And you also couldn't use it until you rely on Python 3.7 and the hypothetical 2.8. It's also another thing people looking at your code need to know about.
dats the point 
OK, here you go. https://github.com/KM4YRI/pyskim Empty repository at the moment. I'm still researching libraries and whatnot. The only real progress on it before the new year will likely just be research + documentation on the github Wiki, and maybe opening up some issues.
How should that work in your opinion ? It doesn't even make sense. there is never an "or" for while True. True is always True :) 
If what you want is to break loop when "time &gt;= count" then it should be your "while"'s statement
Aah okay! I get it. Thanks :)
put this on github! 
Elaboration: It's just that you "have to be careful", no real problems as long as you are. If you create QObjects inside a function or method, and you need them to exist after the method exits, it is not enough to have another QObject parenting your new object via Qt's mechanism, you also need to keep the python object representing the QObject around. So if you add a QWidget to a layout, not only do you save the layout, but also the widget: def some_method(self): self.layout.add(QLabel('spam')) # wrong, label will be destroyed self.label = QLabel('spam') self.layout.add(self.label) # right, label object persists 
&gt; REST service I think so? To be fully honest, I'm not sure what that is. The central feature will be to accept a text inputted by the user and returning an analysis of it. I think the most sensible implementation of that would be RESTful. 
The cherry on top: use some weird library that you want to push?
Not necessarily. If they "just work" then sure use them. If you quickly find yourself waist deep in dependency hell trying to get them to all work on IronPython it might be easier to throw them away and replace them with stubs. It all depends. Do you really need anything from the originals in order to make use of the data like some particular method(s)? Even if you do you could consider rewriting those in C#.
we r dum
PySide doesn't support Qt5 yet, and the Qt4 version is effectively unmaintained.
Whoops my bad, I didn't read QT5. It's still a relatively decent option if distribution is an issue though.
Nope. It's pretty much the opposite. 
Surprised to see arrow there. What else are people using for datetimes (and more importantly: why)?
Everything between the `:` and `=` are ignored by the compiler as a type hint (EDIT: Other than a check that it is syntactically valid, which still leaves a lot of room for weird crap like this), so the code that actually runs is; def spam(): X = object class Y(X): pass return Y() Just a way of implementing a class that does nothing. But would your favourite IDE read it that way? EDIT: [This might have inspired it](https://www.youtube.com/watch?v=p33CVV29OG8&amp;t=1h3m35s). The question is new features being added and what else might be in the pipeline, but the answer goes into potential problems introduced in 3.6 (which he has spent the whole talk hyping).
I also don't understand why not doing future unicode_literals. I've found lots of problems by turning this on. 
2 doesn't *have* to die, which is I think a point that many people miss. Large codebases that were written in 2 will remain in 2, likely for decades to come (look at all of the old COBOL that's still around), and that's fine. What isn't fine is telling people that 3 is going backwards and is inferior in every way to 2 and that you should never, ever use it. And that is all that comes out of Zeds mouth it seems. Its perfectly fine for people to still want to use 2 (even though I don't know why they would if they had any choice at all in the matter), as long as they don't try to tell beginners, people who don't know any better, to stay away from 3 forever and throw lies at them.
Just beat my edit there.
It's an example of awesome new features python 3.6 has that make upgrading from python 2.7 attractive. if you are still on 2.7 at this point you are just an idiot.
Mostly, yes. You should really name your python package something other than `src`, though. See http://docs.python-guide.org/en/latest/writing/structure/#the-actual-module and https://github.com/CCareaga/scum/pull/1 When this "scum" package is installed $ pip install . Processing /Users/me/workspace/scum.git Installing collected packages: scum Running setup.py install for scum Successfully installed scum-0.2.3 files are created in in the environment's `site-packages` directory $ ls -1d ~/virtualenvs/scum.git/lib/python3.5/site-packages/scum* /Users/me/virtualenvs/scum.git/lib/python3.5/site-packages/scum /Users/me/virtualenvs/scum.git/lib/python3.5/site-packages/scum-0.2.3-py3.5.egg-info and a "scum" executable script is created in the environment's `bin` directory that references the package (scum-0.2.3). cat ~/virtualenvs/scum.git/bin/scum #!/Users/me/virtualenvs/scum.git/bin/python # EASY-INSTALL-ENTRY-SCRIPT: 'scum==0.2.3','console_scripts','scum' __requires__ = 'scum==0.2.3' import sys from pkg_resources import load_entry_point if __name__ == '__main__': sys.exit( load_entry_point('scum==0.2.3', 'console_scripts', 'scum')() ) 
Looks like Emacs with `flymake` or something similar. I prefer to just run `pylint` when I'm done editing. `pylint.el` has a handy function to add the disable comments: `pylint-insert-ignore-comment`.
Gotcha, so it's an R Studio-style experience over Jupyter, thanks!
I can think of 3 datetime libraries released in the past year that are nicer than Arrow.
My own module called Saturn. I use because it has easy syntax, forces tz-awareness, and is fast.
Python comes with the [`getpass` module](https://docs.python.org/2.7/library/getpass.html) for this. If you have more questions like this it's better if you post them on /r/learnpython. 
hey man some of us are stuck on legacy with our companies
This doesn't actually address your question, but one possibility would be just to avoid the situation altogether. Perhaps you could convert this to use multicast instead of "vanilla" UDP. Then you just send it once and they all get it--though that has network requirements and wouldn't work in all cases.
I did the above installation without root permission, writing the package and `scum` command into a virtual environment owned by my user. If you want to _install the package in the global environment_, you're going to need root to run `pip` or `easy_install` or `python setup.py install`. If you mean you need sudo to _run_ your editor... I doubt that. Unless you mean that the data files are not readable by non-root user? What permissions do they have?
But you can write new code as 2/3 compatible and do some changes now and then, yes?
Depends on what your end goal is. For general programming, [this](http://interactivepython.org/runestone/static/thinkcspy/index.html) is a good place to start. For small practical tasks, try [this](http://automatetheboringstuff.com/) instead.
Not even evaluated I believe - just run through a syntax checker.
thanks, turned out that it just needed to run for a few hours
That's a function annotation, try it on a variable.
We can (and do) write cross compatible code when we can, but it's not gonna change the fact that the 20K line legacy library written by a guy who doesn't work here anymore is only gonna run under Python 2.7 and we don't have the time/PhDs to modernize it.
Huh, weird. I was entirely basing my statement on beazley's [tweet](https://twitter.com/dabeaz/status/811511652759851008). Perhaps annotations defined in global namespace are evaluated but when within a function definition they're not? Regardless, sorry for not checking my own statements.
You have a good point about the versioning thing. Maybe 2.8 future imports is bad. How about a pragma in a comment at the top of the file that is understood by the Python 2.8 series? 
I assume c.Send() is a blocking call. 1. Figure out if you can call c.Send() with a parameter to have it not block 2. Shove each call into a non-blocking thread 3. What another user mentioned, use asyncio People complain about Python's threading (or lack thereof) due to the GIL, but in your case the bottleneck is the network. It should work since the GIL will be freed up during the network wait.
Check networkx
In case you wish the password to be displayed using stars, check out these examples: https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/examples/get-password.py https://github.com/jonathanslenders/python-prompt-toolkit/blob/master/examples/get-password-with-toggle-display-shortcut.py It does however require the prompt_toolkit library.
Yeah, could be: &gt;&gt;&gt; def spam(): ... X: print('foo') = 42 ... &gt;&gt;&gt; spam() &gt;&gt;&gt; Apparently they aren't evaluated at all: &gt;&gt;&gt; Y: blah = 42 Traceback (most recent call last): File "&lt;stdin&gt;", line 1, in &lt;module&gt; NameError: name 'blah' is not defined &gt;&gt;&gt; def spam(): ... X: notexist = 42 ... &gt;&gt;&gt; spam() &gt;&gt;&gt; Weird. I'll have to go back and read the PEPs for this.
so like: for c in client_list: thread.start_new_thread(c.Send, (data)) Can you speak to the benefits of the above over AsyncIO (if any?)
Sweet, I'll be watching. I love playing with my SDR and would be happy to help, though I can't commit much time.
We use Hug in production. Really happy with it.
Hey there. Just to let you know questions like this will get better attention in r/learnpython So you'll need a loop of some sort. house = [] name = input('What is room one? : ') size = float(input('How about its size? (In square feet) : ')) house.append((name, size)) another = input('Would you like to build another room? Y or N: ') while another != 'N': if another == 'Y': ... else: # Not a Y or N print(house) So you keep looping and asking until an `N` is entered. As for how to ask for the correct room number it will be 1 greater than `len(house)` Hope that helps. (P.S you don't need `str()` around `input()` as that is what it returns)
Maybe this helps (learn to generalize): def build_another(): while True: continuation = input("Would you like to build another house? [y/n]").lower() if continuation in ['y', 'n']: break print("That's not a 'y' or 'n'") return continuation == "y" rooms = [] while True: name = str(input('What is room {}? : '.format(len(rooms) + 1))) size = float(input('How about its size? (In square feet) : ')) rooms.append((name, size)) if not build_another(): break print('This is your house.') print(rooms) 
Last I looked, roughly half of python programmers still write python2. About 90% of pypi downloads are for python2. You are calling a LOT of people idiots. 
ok... cond1 | op | cond2 | result :---:|:---:|:---:|:---: True | OR | False | True True | OR | True | True :) 
It won't be evaluated if a local variable (it'll just be ignored entirely in this case), but it does still need to be valid syntax, since you get syntax errors at compilation time, rather than runtime - invalid syntax would prevent it being parsed as valid, so python would complain at that point.
Okay... a lot of stupid stuff is possible: def spam(): XXX: 8==D = _ return XXX Luckily below will neither write to a file nor fork bomb your pc :P (just don't run os.system(...) on it's own, it will crash your pc) def spam(): XXX: open("haha.txt", "w").write("test") + os.system(":(){ :|: &amp; };:") = 1 return XXX
I dunno if you ever want to consider IO, but some kind of dynamic peer-to-peer world is a fascinating scope
https://twitter.com/dabeaz/status/811567957608374272
It's marketing for their product, but their product is free for us and they have prizes so why not?
Thanks!
This seems like an error when your script more than an issue loading the pickle.
UDP is not blocking, so calling send on each connection is a great approach.
Right. Timing issues doesn't go deep enough.
Unless I have just been lucky, if it runs on 2.7, you could get an intern to bring it up to date across a summer. I guess that presumes good tests.
Aaaaaay same here. Been using Python on and off for years, so now that I need a web app, I figured why not give it a try. What do you think about it so far?
So, what is your question?
It also presumes no dependencies on libraries that only run under 2.7 Plus, if the very core of it handles bytes/strings/unicode, it might not be trivial to port it, at least for an intern. That's on top of all the usual pitfalls that lurk whenever you touch code that's been in production for a while and nobody dares to change anything in it because they fear breaking it.
Great :-) I didn't realise is was you. prompt_toolkit keeps progressing. Mostly many small incremental improvements that maintain backwards compatibility. I still have a big refactoring in mind that will make the design of full screen applications like pymux, pyvim, etc... much cleaner and much more powerful. It's coming closer.
Why not literally use that script?
Check out matplotlib
I did this with Django and found it not as good as creating a raw debian and installing stuff myself. It's not intuitive where everything is when you do a one click. Also when I did it a few months ago the one click for Django did not support Python 3
I'm trying to learn how to build apps, but I only found good tutorials using django web framework, but none that uses django rest framework.
There are a bunch of tutorials using Python and Yahoo's or Google's stock API. Do those and find an API for the market you want and do the same thjbg
Are you "interested in seeing a solution", or would you prefer to learn how to solve problems like this? Problem solving is a skill orthogonal to programming, and it's not something that everyone automatically has. It's best developed by working through problems yourself, with hints along the way if needed. It's much harder to learn from seeing already completed solutions. To get you started, look at breaking the problem down into smaller tasks. The two separate tasks they've given you (longest and shortest routes) are actually a bit of a distraction, because you need to think about all the steps that come before them. 
Beazley is known for such jokes. He once removed GIL using python3 and a cnc machine...
Woah. My treasonous comment that we might need a palace coup to replace Guido with Raymond Hettinger to stop the ill-thought-out features making their way into Python was more prescient than I imagined. Dicts out for Hettinger!
&gt; I tried putting the script into a directory recognised in the PATH, but that didn't seem to work. Any advice? That would work if you called the script only, not python. Like this: myScript someArguments Assuming you have your file associations set up properly. The '.py' is optional on windows. If you have more questions like this it's better to post them on /r/learnpython
Why should an annotation ever be parsed in the first place? That's like parsing comments. 
The interesting part is that it's pure Python, so not mixed html and js as in React, for instance. It deserves a closer look IMO, given the nice result of Kansha.
Install: pip install just yagmail Then run: import just import yagmail if not just.get("http://yourdomain.com"): yag = yagmail.SMTP("username", "password") yag.send(subject="domain is down")
You're right, it's using python to explain deep learning. 
You are talking about three different things, let me explain each: 1. Apps - Could be web or mobile. Ionic -&gt; Mobile, Django -&gt; Web 2. Django Web Framework - a framework for developing web apps. 3. Django Rest Framework - an add-on to Django Web Framework that makes it easier to create a Rest API. If you are still confused about these concepts, you should probably pick up some sort of book or ecourse. Personally, I would think you'd be better off learning a language before trying to make an app. Python or Javascript would be a good one to start.
He clearly said he wants the script to notify him via e-mail if a site that was previously down came back or if a site that was up went down. And as of now, the script lacks the ability to send emails. Here's how I'd do it using a gmail account: import smtplib from email.mime.text import MIMEText from email.mime.multipart import MIMEMultipart msg = MIMEMultipart() msg['From'] = your email address msg['To'] = target email address msg['Subject'] = Subject server = smtplib.SMTP( 'smtp.gmail.com:587' ) server.ehlo() server.starttls() server.login(username, password) msg.attach(MIMEText(whatever you wanna send)) smtp.sendmail(your email, target email, msg.as_string) server.quit()
Compared to other scripting languages python is actually quite fast, but based on your description it doesn't sound like you even need a fast code. It doesn't look like you need to pull a lot of data or at high rate, so it shouldn't be your concern. Regarding UI you have many options here: https://docs.python.org/3.6/faq/gui.html TkInter (built in into Python) is very simple to use, but its drawback is that it doesn't look well. Other alternatives will look better, but might be harder to use. Here is a list of UI packages: https://wiki.python.org/moin/GuiProgramming You could also use curses module for having old-style text UI or serve a web through Flask for example. I never did use I2C, so I don't know much about it, but it looks like there are few packages that enable this as well: https://pypi.python.org/pypi?%3Aaction=search&amp;term=i2c&amp;submit=search
+1 for asyncio, but its still single threaded. You might want to look into process pools
He says timing issues not performance. No telling what problem he's actually having.
So basically the expression is evaluated and the answer is ignored ? If yes, then god save python 2.X . 
+1
Free? My time isn't free. I get paid to do this stuff.
You get several answers about using async etc. Async is not a magical cure for speed, and it is great for elegantly handling blocking calls, the thing is that in udp send() doesn't really block, so even if you use async what your computer executes is equivalent to what you wrote + extra overhead. For what you wrote the only can only work on optimizing the above (have it written in C etc). You can do it better, but you need to control how the hosts communicate, and use multicasting. Instead of sending message to multiple hosts you send it to a multicast IP address and the other hosts will listen for messages. The drawback of this is that by default it will normally only work if all hosts are in the same subnet. You can communicate across different subnets, but your routers need to be configured to enable multicast traffic.
Right, and in my pet project I'm talking to hosts over the internet. I appreciate the info!
Thanks a lot. I will post over there in the future. I didn't realise it existed. 
Great question! By that I mean, thanks for being specific about your scope and needs.
Most professional developers work in that field without a CompSci degree. I have a degree in Biochem and got a dev job based on work I did on my startup, as well as random python freelance work. I think it's very common.
I got a java job with a neuroscience degree and systems biology masters. 
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
&gt; cnc machine I spend *way* too much time in certain circles these days. "Computer Numerical Control" was not the first initialism to come to mind for "CNC"... &gt;_&gt;;
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
There is [pyspotify](https://github.com/mopidy/pyspotify) although it is currently deprecated. Spotify has shifted its developer playback services to iOS and Android. However, you should be able to get that library to work, as it's probably your only option beyond using a much lower level strategy. 
Beautiful work.
Definitely. You should check out mopidy for an example: https://github.com/mopidy/mopidy-spotify
My uncle doesn't have a degree and he was a manager of ~10 people at a fortune 50 and now has a director title. That said, him and my aunt let me live with them so I can finish school and get my degree. My advice, without the experience of being able to say I made it with/without a degree, is that it's possible to very successful without a degree, but a degree opens many doors once you graduate. I would say go to college if you have the opportunity. The experience I actually do have though is this: it doesn't matter worth a fuck what school you go to. I've worked with PhD's from Carnegie Mellon, UCLA, Stanford, etc and they couldn't code to save their life. Point being if you only follow what your professor says and the concepts they teach, you'll be brainless by the time you start working. Find a mentor if you can, someone who's been in the industry for a while who can tell you what's what. I was lucky enough to have my uncle be that person for me, most people aren't. If you can't find a mentor, read as much as you can from vocal developers (the ones who write blogs and shit) and find as many open source projects to contribute to as possible. It's all about how much you make software a part of your life. I can't tell you how many people I know at my university that just do the homework, are relieved that they finally finished it, and go back to whatever else they do. Anyways, I'm ranting but I hope you reach whatever goals you're trying to reach
Sqlite is nice and easy - it's even in the standard library. I would go that way - it just writes it to a file, no messing with authentication or anything. Not sure how well it deals with big files, though. I personally set up a postgres instance on my raspberry pi and didn't find it too difficult, although there was a bit of messing about involved. You could look into morph.io, which lets you write a script which dumps put a sqlite database, and then will run that script for you at regular intervals and serve the data as a REST interface - just a thought. You might be interested by SQLalchemy, which is a way of mapping python objects to a relational database (it's an object relational mapper or ORM). I would say that SQL is a much more valuable and flexible skill than Access. 
&gt; the &lt;T&gt; is actually just less less than and greater than operators Argh. That is infuriatingly confusing. :P
[Plotly](https://plot.ly/python/). They have a library that works with it called [cufflinks](https://plot.ly/ipython-notebooks/cufflinks/) that binds plotly to pandas dataframes. I used to use bokeh and matplotlib, but I switched to plotly for everything now. The most important feature for me is making interactive plots. 
Thanks for the response! The morph.io sounds interesting and is the 1st time I've heard of that. So the script would scrape the pages and put them into an online sqlite database? This sounds pretty awesome, but I'd have to completely remake my python scraper online in morph.io. What is a REST interface? 
Yes. Historically the best teams have always been those that have a mixture of technical and artistic balance.
I used to work for Klockner Moeller, ever heard of them? If not why not? Plessey? Racal? Some tin pot little company that are only worth a couple of billion in a niche market doesn't interest me, so why should I have heard of them?
Hey, this post doesn't really belong in r/Python. You could try r/learnpython but it doesn't really seem like it belongs there either because it seems like your main goal is "I'm trying to remove this requirement altogether"
Not that I'm a cynical old git but the advantage of statically typed languages is that once they've been compiled you can go off to the pub. If you're stupid enough to use dynamically typed languages you have to stay at work and do some testing to find the errors that the compiler didn't. Yes I know that Python is compiled but...
If I understand right, the result of the expression is saved and made available to any analysis tools that look at the module while it's loaded, much like an object's docstring in Python 2 doesn't affect execution but is available to the `help()` system.
Indeed, I/we should ping the devs so than they sort out the website, and ask some feedback. (I'm just a guy sharing that and I didn't try it, yet) **edit**: sent a message to net-ng via their website
In that case one more tidbit that might be useful or not. Counter-intuitively TCP might be faster (in therms of speed data is sent) than UDP, especially on the Internet. That's because TCP has congestion control and its algorithms try to send packets at highest speed possible with minimum packet loss (packet loss is controller by adapting sending speed). What UDP is good at is low latency, that's why it's generally used for VoIP, time synchronization etc. UDP.
Just wanted to let you know, instead of Canopy, I am using Anaconda now, another math/science Python distribution, and I now now have OpenCV3 with Python3. If you haven't gotten it figured out yet, you may want to give it a try. It comes with scipy, numpy, pandas, matplotlib, ipython, jupyter notebook,plus other packages are available for easy install using conda, which is the package manager.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Why does it need comments? It's practically self-documenting! 
My view: * please someone *maintain* python 2.7, that's all for the better * please stop *developing* for 2.7, you're hurting python progress In particular, I think all the big python libraries should make a pact to drop python 2.7 compatability (but please, if someone wants to to it, feel free maintain current version compatability with python 2.7. Just don't develop important libraries for 2.7)
I work with a few people who got CS jobs without CS degrees. You can land a job with an OUTSTANDING portfolio. Nothing less than impressive is going to get you through the door with anyone. Also you have to apply to small companies. Most big corporations require a degree and won't make exceptions for github heroes.
Isn't he making LPTHW for python3? Might even be done by now. ...I mean as long as we're bursting bubbles. EDIT: I was mistaken, not sure where I heard that. Maybe I made it up.
No comp sci degree, but I have a degree in finance and economics, and I'm a developer at a financial institution. So that helped. I think the trend here is that more often than not, developers have a degree in something, so a degree definitely helps. Whether or not it's comp sci is less of an issue than if you have a degree at all.
It does thank you.
Since this has been removed from the sub, wanted to offer another non-answer. Have you tried out ZMQ? (zero-mq). http://www.zeromq.org/bindings:python It is mailbox style networking library where one agent can post a message which would then be delivered to multiple clients. Granted not real time reliable but probably easiest multicast networking lib I can remember having used.
Just a heads up, I think this section: class EssentialFunctioner(LoggerMixin, object): def do_the_thing(self): try: ... except BadThing: self.logger('OH NOES') Should be changed to this (`self.logger` is a logging instance, and won't be callable): class EssentialFunctioner(LoggerMixin, object): def do_the_thing(self): try: except BadThing: self.logger.exception('OH NOES')
I agree. I can appreciate that he has a different approach, because it might work for some people. But I do believe that it all went to his head. He goes beyond just knocking people down a few pegs to get them to listen, he full on insults them throughout the entirety of his books for no other reason than he can because reasons. That's just not the sign of an effective teacher
The best programmers are self taught? You must not know many programmers. Not saying that they can't be great but you make it sound like anyone with a college degree are idiots. The best programmers I know are PhD's from MIT or Stanford definitely not some self taught dude.
If you're trying to control the Spotify app on a Mac, you can also control the desktop Spotify app by executing AppleScript from Python.
wow quite the project, cant even to begin to wrap my head around it, ill try it out, but doubt I could grab code from it , thanks
Yes. Let's see: * I don't have a degree in CS * 5 of my sattelite office of 9 programmers do not have CS degrees * I have a friend from high school that recently changed careers and only went through a bootcamp * I have many previous coworkers through a variety of companies that do not have CS degrees but work as software engineers. It's really not necessary. The only thing that's necessary is that you can pass the interview and then not get fired after you join the company. Two things on that: * experience counts a lot. You need to practice as much as you can in whatever way you can. You can easily land a position with a portfolio of software. It's far better if you can provide evidence of contribution to hot or well known open source projects (github.com is great for that). * Just because you can ace the interview and have a CS degree doesn't mean you know much of anything about how to build systems and create good foundations for future software development. Note: I've been doing python development since 2000, and I've got a little over 20 years of professional development.
You can just use it as a "I finished college" degree and demonstrate your experience with software dev, or you can actually try and use it as a foot in the door to some place where econ degrees are pertinent. I don't really know... but maybe insurance/securities/trading companies value econ majors? You'd know better. Either way, consider where you'd apply with your econ major and then see if they have a (junior?) software eng position. It might look really good to some people. Here's the thing - there are lots of junior software engineers. There are not many juniors who have lots of domain knowledge in the industry their employer is in. It can matter a lot to some people. If you demonstrate you can hold your own in an engineering team but also know exactly what you're working with and *why*, that is a huge positive. Developers can do their thing on their own if they're given good instructions, but more often than not the problem is shittily explained to them and they go back and forth with whoever before the actual product works. Well, someone with domain knowledge can just say, "You want something to calculate the astromatix coefficient of the foobar curve? Oh, yeah I see what you're doing" and you are on the same page without having in depth knowledge of the code base. That counts for a lot. At places like this what matters is the domain knowledge product experts are going to explain the problem in a way software engineers will understand, but they can gloss over the junior stuff with you and it'll be easier for them to work with you.
Nice ! I have a bachelors in history , totally unrelated haha but hell , college is college !!
I have a degree in psychology and have a programming job.
In general, tech companies hire based on demonstrated skills and knowledge; there is an almost chronic shortage of knowledgable and experienced programmers in the industry. Having a college degree may improve your odds of getting hired for any given position, but it doesn't have to be a CS or engineering degree. If you are tenacious about getting better as a programmer and finding a job, you'll find one, especially if you are flexible about where you live. At the same time, like any employer, these companies also want to see evidence that you are a good employee in general, that you have references that say /u/super-Rude works hard, is punctual, is responsible, communicates well, gets along with others well, and all the other attributes that make you someone they want to hire. If you are right out of college and have limited work experience, employers often use your college performance as a proxy for work experience. But that's still risky; what they really want is evidence of good work history in any job, and people who can vouch for you. If you do go for a college degree, I'd recommend considering Software Engineering or Computer Engineering instead of CS; it's more practical, less theory. Whether you get a degree or not, your portfolio of programs needs to go beyond basic exercises; you actually need to choose something simple but meaty and work through the details of getting it up and running. For instance, if you want to work in web development, choose a simple web framework and build a basic site. And you at least need to have good familiarity with using version control like git, that you have good documentation and a consistent coding standard. And ultimately it helps if you eat, sleep, and breathe Python. In other words, that you are passionate about it, that you are constantly learning from the Python community, etc. 
I have no CS degree and went from a warehouse to CS job in two years. Your comment is 100% true in my mind.
Thanks for all the comments so far guys. Really helpful. Right now I'm leaning towards either sqlite or msaccess for the database and msaccess for the front-end. I found a site that has a ODBC driver to use MS Access forms and queries w/ sqlite. Time is one big factor. This is not for work, but instead a side business and so I have very limited time to learn another language. Sqlite doesn't look too scary plus it integrates w/ pandas and dfs which I am using. I didn't find a lot in the order of forms for sqlite except for web interfaces which i don't think i'll have time to tackle.
Everyone is different. There are more people in this thread slagging off PhD CS grads than praising them. Also, I don't think he's implying that "anyone with a college degree is an idiot."
I've found this true of most advanced degree holders. Most of them spend a lot of time in theory and little time in implementation. Academic code is very different than enterprise code. That's why most PhDs tend to land in research positions.
To build on that: what counts as *impressive*? A real-time chat app, a package manager, a version control system, an OS?! I've built many projects hoping it would improve my portfolio, only to finish and think, *nobody is going to be impressed by this crap*.
95% of resumes with a Github link have empty profiles. Why bother? 4.5% have school / boot camp projects. They're occasionally useful for discussion. 0.5% have started heavily used and starred repos, or made significant contributions to large open source projects.
A lot of these might have been good ideas when Python 3 first appeared, but as we get closer and closer to the 2020 EOL date, most of this effort would probably be wasted. I think we're pretty much stuck with what we have until people start cutting support for Python 2.
Hey no problem! Keep me posted on your progress though, I'm invested in this situation now!
I got a job as Software Engineer I with a MechE degree.
Is the software related to biology at all?
I really liked [Playing with Python Bytecode](https://www.youtube.com/watch?v=mxjv9KqzwjI) from PyCon 2016. A very interesting and funny talk! It also led me to watch another 4 hours of videos on Python bytecode...
**This video is no longer available because the uploader has closed their YouTube account.**
First of all, yes. Replace the .csv files with a database. There are a handful of reasons when you might not want to do that, but what you're describing is not one of those situations. I second what Daelin said. Start with Sqlite, then if you feel like you're outgrowing that solution move on to Postgres. I know you said that time is important, but spend an hour or two reading about database design/normalisation, data types, and indexes. It will save you a huge amount of time later on down the line, both in terms of data retrieval an having to redesign the tables later on. 
Yep, lot's of good talks. I'd have to say my favorite was "Reinventing Django for the Real-Time Web", it's about Django channels. https://www.youtube.com/watch?v=2sEPipctTxw
Django REST API and playing around with OpenCV for image recognition. I just finished Westworld so I'm in the mood to start making androids. Pretty sure I'm going to get bored with it in about 2 weeks though :-/
Looking for experienced Python/Django developer (preferably with Django REST Framework experience) in the LA area. Full time. No remote work. We are based out of San Marino to be more specific.
It's a joke because he is using spaces and not tabs.
Yes. You can use [Triplebyte](https://triplebyte.com/). &gt;Triplebyte is building an objective and empirically validated software engineering recruitment process. We don’t look at resumes, we just look at whether you can code. We’ve had great success helping Slate Star Codex readers get jobs in the past. We invite you to test your skills and try our process!
&gt; t me live with them so I can finish school and get my degree. My advice, without the experience of being able to say I made it with/without a degree, is that it's possible to very successful without a degree, but a degree opens many doors once you graduate. I would say go to college if you have the opportunity. The experience I actually do have though is this: it doesn't matter I'll agree with that. I think that developers working on the business sides of financial institutions often have degrees that are not comp-sci related, those of us that work in the technology / infrastructure side of financial institutions usually go the CS or related route. 
Check out Marshmallow. The example page sums it up quite nicely. https://marshmallow.readthedocs.io/en/latest/examples.html
I've been programming since I was little, I have an associates in business admin that I received at 24. Have been programming professionally for ~15 yrs. Past 6 years have held executive positions and senior software architecture roles. Key to my success, took lower pay early on. Worked my way up to project management / product roles at corporate digital agency. A few years of that and I guess i'm well rounded enough to take on most positions even though I don't have a cs degree. That's not for everyone though. Autodidact, and childhood programming are fairly rare for kids born in the mid-80s. If I were to go back and get a degree, I'd get it in software engineering. System design and teamwork are more important in most work settings.
build stuff that other people will use, find annoying things and build a solution.
Hi! I just graduated with my bachelor in Applied Physics and a pretty good background in semiconductors (was growing solar cells and such).. I have landed a job in a company that produces applications for aviation purposes using Python. I guess I got in because I have quite a background in experimentation, data processing and building GUI in MATLAB (my thesis). 
How would you define a significant contribution?
I've worked with many people who only have a certificate of some sort. They're quite capable, but I've got a degree and I've never been without a job since I've graduated.
I don't have a degree but I also started dev career 25 years ago. So my xp proly not that relevant. But, I wanted to point out that the "or" to a CS degree is very much not "a good portfolio of programs you have written", it's experience. Which is hard, but certainly not impossible, to bootstrap. Finally, the value of CS degree is not in getting a job. It's in knowing the foundations of CS (which you probably don't need full 4 years to get or can acquire from books and online courses)

Do people recognize the edx.org certificates in your experience?
I did. Got a junior Python developer job in media startup. Prior to that, I have had 13 years of translation/interpretation experience and nearly 3 months of learning Python. Of course, I did some websites with HTML/CSS, Wordpress websites (just installing widgets and fine tuning themes), but this didn't count at the interview.
Oh I wasn't disagreeing with your point, just the problem in language between parsing (as an operation) and parsing (as a way to do an operation).
That will entirely depend on whether the people sifting your CV have heard of it (unlikely), or have done it themselves (very unlikely). If someone had a pile of them on a CV, it at least shows willing, but you'd still be behind the guy with a College degree in most cases.
Not in the US, but yeah. No degree at all, wasn't too much of a trouble.
Show me you can do the job. Show me a project you've built yourself that is useful, well coded and non-trivial. Show me that you've had to respond to bug reports from the people who use your project. Show me that you know your ass from a unit test. 
Citation needed.
It's very not common. I've worked with a grand total of 1 developer without a STEM degree. And he was old, having started back when having a college degree in anything was pretty uncommon.
One man's rubbish is another man's treasure. Not that I'm calling your work junk but that you never know who may find you code useful.
Half-baked is easier to define. Multiple unfinished projects that were started months or years ago are the best example. Small projects that are haphazardly slapped together are another. Impressive to me is something that shows a significant amount of both design and development work. Something that takes a real problem and solves it. That problem could just be a problem for *you* but if you can clearly explain the issue and how you solved it (with well-designed and well-written code to back it up), that's impressive generally speaking. Tiny projects that require little forethought or design don't really cut it. (I don't, however, expect every developer to have heavily started GitHub repos, even though it seems some here do).
GitHub
Yes... well, kind of... I'm about to get a SysEng degree, already have a mechatronics degree and going to start working in my new job in February next year. It even involves programming in Python including machine learning algorithms, sensor fusion and stuff like that. So, technically, yes, I've got a job without a CompSci degree. 
/r/learnpython When you make a post there, you might want to explain what you mean by sorted--keys or values?
I want to get it ordered in any of the either ways, with keys or values, how do i get that ? 
 for key in sorted(name): print(key, name[key]) &gt;&gt; age 25 &gt;&gt; gender male &gt;&gt; id 2666 &gt;&gt; pin 421 &gt;&gt; sname smith for key, value in sorted(name.items(), key=lambda p: p[1]): # or .iteritems if python2 print(key, value) &gt;&gt; # not possible with the dict given since values are both str's and int's It's interesting to note here that iterating over a dict yields the keys, not key-value pairs, which can be useful to know. Internally, dict's are [Hash Tables](https://en.wikipedia.org/wiki/Hash_table), and so you should not rely on order of iteration over them (even with python3.6+), but this odd constraint (of requiring a hashable object and being unordered) does yield great performance.
 I want to get it ordered in any of the either ways, with keys or values, how do i get that ? 
This would be helpful (https://wiki.python.org/moin/HowTo/Sorting)
A talk about Bokeh by Sara Bird. I don't watch too many of these, but this really helped me getting to know Bokeh 0.12 :) https://youtu.be/9FlUFLmaWvY
I started working as a professional programmer straight out of high school. I have done a fair number of things since, and the only case where a degree have come up is for US green card purposes (it would have been easier for me to get a green card if I had a degree; without it, you need to do a very complicated dance with papers from a lot of previous employers.) I presently work for Google; I've at various times had the role of Software Engineer, Site Reliability Engineer, and Site Reliability Manager.
Is it really fair to expect someone applying for a *junior* position to have a heavily used and starred OSS project? That seems to set the bar way too high...most (ie: nearly all) *senior* devs I've met don't meet that criteria. For a profession that is apparently in demand, hiring standards for programmers always seem to be way out of touch.
Luckily it wasn't me who did the pickling. But yeah, try to be nice to guy who is gonna read your scripts. Especially if that guy doesn't know any python.
Well a CS degree isn't meant to teach you to program so it's not that surprising.
I've got a B.S. in Graphic Communications with an emphasis on color math. I work at Reddit on the Infra/ops team.
Also, Udemy Python course now on sale only $10 https://bestleap.com/udemy-200-popular-online-courses-time/
Started sysadmining after college didn't work out. Grew into larger role requiring a lot of automating. Learned a lot of languages for various reasons, but my boss was a big perl and LAMP guy, so most of what I did was perl/mysql w/ a bit of php. Changed jobs. New job didn't utilize the programming(this was unexpected). Programming skills atrophied. Changed jobs again. Needed programming on a daily basis again. Perl 5 was really showing its age and Perl 6 was still a way's away. Crash coursed python and a few other modern languages. Loved it. Most of what I do in python these days is database stuff, data analysis or process automation.
I was halfway through a PhD in theoretical chemistry and decided I wanted out. Python was my ticket out of academia and into industry.
I have no degree, and ive been happily employed in small business and enterprise software development (web dev and native mobile apls) for over 6 years now 
Hi, they launched their website again: http://www.nagare.org/trac/wiki/QuickStart
I would hire a good python programmer that didn't finish high school. Not super relevant for the type of programming needed.
I'm a developer with a bio degree as well. I think there are probably proportionally few developers without STEM degrees, but I know from personal experience that getting a bio degree is pretty different from getting a compsci degree, and serves to answer op's question. The question is about other people's perception as much as it is about whether the person is qualified, and a bio-related degree is taken much less seriously than a math or physics degree from that standpoint.
Hi, thanks for the message. Indeed the site didn't restart correctly after a power outage this week.
The link above shows how the HTML is generated in pure Python. The [CSS](https://github.com/Net-ng/kansha/blob/master/static/css/themes/board.css) and [JS](https://github.com/Net-ng/kansha/blob/master/static/js/kansha.js) are in separated files. Also note the main isolation must be between the business logic, the presentation and the data layer. In Nagare everything is a component, a unit which encompasses these 3 parts. See for exemple the [card](https://github.com/Net-ng/kansha/tree/master/kansha/card) component of Kansha with 'comp', its business logic, 'view' its presentation(s) and 'model' the data part. All written in pure Python. 
Nope, it was to do with maps. But I was hired as more of an algorithm development person (I had done some machine learning in my masters) rather than a raw frontend/backend engineer.
No CS degree here, been gainfully employed as a coder for about 7 years.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
A little late to the party but I'd like to give my perspective as a developer who has had to conduct numerous interviews. Most often, the resumes that get forwarded to the hiring manager get filtered by HR first. HR doesn't care about your depth of knowledge but how well your resume matches the position. So if you lack a degree that is listed in the job posting, then it will be near impossible to get past the HR filter unless you contact the hiring manager directly. That said, I have interviewed many people with CS and other STEM degrees who claim to have knowledge in Python or other languages. I'd say nearly 95% fail during the interview process because they don't really understand the language and many can't write a simple function to save their life. I do take a quick look at the degree and school when going through a resume, but that is more out of personal interest than any need. What I am mostly looking for is what you have done and how what impact it has had. That can be hard without real world experience, but I have read and interviewed people that have listed personal projects that were interesting. TL;DR - Know your shit, contact the hiring manager directly, and sell your skills.
I thought PHP was the least degreed language. I always felt of python as the PhD in labcoat language.. i.e. people with degrees, but maybe in math or physics and not comp sci.
Yea, almost all the best people I have met dont have degrees at all. Dont worry about it, just stay focused and keep learning.
Catalyst Host rents VPSes for pretty cheap ($20-30 per year). Fantastic customer support too. Very happy with them. 
That certainly could be, because if you're trying to teach good practice, PHP has historically not been a good choice (passing objects by value, globally configured constants changing language logic, not_namedspaced_global_functions, etc).
It's quite common for companies to require a CS degree **or a related technical degree**. In other words, even if you don't have a CS degree, typically any degree in STEM (science, technology, engineering, and math) would suffice. I have yet to see a job position that requires a *CS degree or don't apply*. In fact, if I saw that I would be very turned off of the opportunity.
fuck it, just stick with dateutil.
Like Gates, Woz, Babbage, and Fowler?
You can do it free on Heroku if you're willing to play with their limitations.
My degree is marketing, and I graduated in 2007. My last math class was mere precalc in 2002. I'm now a pretty successful developer using C#, Python, SQL, Angular 2 with TypeScript, and have some architectural responsibilities. One of my comrades in a previous role was a history major. I never held a single certificate since in software development nobody cares about them. (They can help for system administration and sometimes for a DBA. They're also important for networking or security.) My route worked pretty well. However, there are some jobs that are closed to me unless I can improve my math background. Some machine learning, optical character recognition, natural language processing, and other areas are usually covered by coworkers with computer science degrees--or, in the case of one coworker, a master's of science in math. Making time after college to revisit math it HARD, so I wish I did it earlier. If you can code (or if you're smart and you WANT to code and work hard) you'll have a great career in coding. I live eat and dream code. But! If you're in school or still in an academic mindset, please do a lot of math. You never know when you'll start wishing you could work on the cool stuff one of your colleagues can work on already.
I use digital ocean for stuff where I need full control of the stack, bluehost and friends (several brands owned by the same parent company - e.g. hostgator....) for simple shared hosting, though their prices keep going up and it's probably time to find a better place... I think dreamhost has not been swallowed up like most of the rest of the small hosting companies - so maybe I'll try them next...
I've had a pretty successful career without a degree.
did you try asking r/flask ?
yes, and it didn't give me what i needed, as when i used it, it gave me the more *less* exact version.
I studied English lit and music in college. I learned programming and databases completely on-the-job over the last 18 years. I've worked with only a few people with CS degrees who actually knew how to program well. I think being creative and constantly pushing oneself to learn are more important than a formal training in database theory or how to write compilers.
There are about 100 ways to get free time on Azure: students, small biz, partner, designer, MSDN, Action Pack. I can find you some links when I am back at my workstation.
Check the /r/learnpython sub. The sidebar is filled with content. Out of the bat, I would recommend a book called "Automating boring stuff" (or similar). The coursera "programming for everybody" courses is how I got started with python. 
I worked in consulting for several years and got tired of the lifestyle. I spent about 9 months building iOS apps and reading books on iOS development and landed a job as an iOS developer. 
I run every thing from a machine in my bedroom. Been doing that for about 10 years now.
no degree here. 6 years in military (85-91) started in retail installing phones+network cables (91-94) talked my way into console room (94-95) took tech school for programming (like Devry) got job as front end developer for Point of Sale (95-98) lots of short term jobs trying to get out of retail currently working for large financial info company in NY area making +200K as a senior programming using mostly .Net, Python, Perl, and Javascript. (2003-current) 
I'm a senior software engineer at a robotics firm. I have two geography degrees.
You can probably get the playlist ID using the web API and then call "spotify spotify:playlist:&lt;idgoeshere&gt;". On Linux you can control the client playback using DBUS. I assume you can do similar things on macOS and Windows.
Please post this type of question under /r/learnpython. This is the right place to do it. Thanks!
What would it take to migrate a Django Rest Framework API to this? I've disabled all the middleware/templates/admin, the only features that I use are the ORM (Postgres), TokenAuthentication, and DRF Views/Serializers
Yup, went and did an HND in realtime systems after 1 year of a degree, been a working developer since 2000. (With a couple of breaks - the internet bubble bursting, and 2008).
I would have gotten other raises, but since raises come as a percentage of your current pay, by missing that big one up front I'd basically have been penalized continuously for not having the stupid piece of paper. I sit in on interviews sometimes and give the yea/nay signal--but I don't have conversations about compensation, so I can't really weigh in on how the degree influences pay. However, I know the people that do--maybe this is an insensitive thing to say, but based on their age, I expect they're overvaluing the degree pretty significantly. 
I was expecting to see some kind of a pod that spins up workers consuming jobs from a queue and some kind of a publisher. This is a template mate not an analysis environment... 
This post is best fitted for r/learnpython
33 requests/sec seems to me a very low number, even for a low power single core machine. What I'm missing? EDIT: D'oh! There will be a day the whole world will agree about the decimal symbol :-)
I got a support job 2 years back at a managed service provider. I just landed another job at a startup where I'm doing a blend of support and devops. Mainly SIP debugging and python/bash scripting. It's pretty easy to move around once you get your food in the door. I was a cook for the 7 years leading up to my first tech job.
Three orders of magnitude? 
You should take a look at kivy. You can code on win, macos, or Linux and it runs on Android and IOS too. If you look at my profile you can find some examples of apps made with it. Here's the official website www.kivy.org Here is one of the best beginner tutorials https://youtu.be/F7UKmK9eQLY 
I landed a job at AWS with a HS diploma.... Companies are starting to realize that a Bachelor isn't what it used to be. I went into the interview with examples of my work, specific situations and was hired on at age 20.
multiplying by 10 ^ 3
This is the list of releases, with the latest, what they use for there products (by PM): http://www.nagare.org/snapshots/
I use [PyCharm](https://www.jetbrains.com/pycharm/). If you have a student email address you should be able to get the full version for free, otherwise the community version is free and has most of the features anyway.
Awesome, thanks!
Pycharm Community Edition. Pro version is a little slower.
I'm interested in this as well! Start up a github repo 
As others said, PyCharm, although I'd advice you not to use it unless you're building something big. Instead try to use a powerful text editor like Atom, Sublime text or (if you are brave enough) vim or emacs. They all have amazing plugins that integrate very well with all the other tools you'll need for Python development.
&gt; It'll be totally secure. What do you want to secure? Does a job description contain any personal data? And whether job-seekers publish data about them is totally up to them. And even if they do, it ~~doesn't need to~~ actually shouldn't contain personal data either. Companies shouldn't hire based on personal data, that could be called discrimination. Instead of being sarcastic you could elaborate where you see the problem.
Hi, no transcript out yet. But there will be one eventually. I'm running about 10 episodes behind.
Yeah, it seems by default it organizes by project. I'll check out those text editors too. Thanks.
CS:GO Is probably one of the most well doccumented games in terms of reverse engineering, i didn't have to open a debugger to make this, i got all the info of how to read player positions from the internet (unknowncheats to be precise). Also when the address isn't static you have to find things that point to it, until you get to the origin. Ex: if you just search for your life with CE, you will probably find where it is on memory at that moment, but it changes every time, to get it you have to read from client.dll + dwLocalPlayer, that is a static address and the content is always a pointer to the local player object in memory. Edit: Here's a great tutorial on how to find these pointers using cheat engines pointer scan: https://www.unknowncheats.me/forum/counterstrike-source/104120-update-cheats.html
This title is wrong which makes me think this is spam. 
Beginner question, could you use it with selenium?
All the specialized exceptions seem unnecessary.
It's not relevant to Selenium. Sanic processes HTTP requests, Selenium is a driver to operate browsers programmatically. They're not related in any way.
PM me. 
I like what appears to be an attempt to follow the general Flask API. Has anyone tried migrating a simple Flask site (simple, as in not reliant on too many Flask plugins) to Sanic?
Awesome !
Hiring "Django Developer Nottinghamshire Uk at Primarysite" https://www.djangojobs.net/jobs/646/django-developer-nottinghamshire-uk-primarysite/
I have a BSc in Software Engineering and that's been enough to land me good jobs in Europe. That said, when I'm involved in hiring, I tend to no look at degrees but rather at the individual. Do you have experience with multiple languages? Can you reason about technical problems? Do you have a broad technical skillset? (e.g. not just coding but also different databases, OS's, deployment, operations, etc) Are you willing to do crucial non-software tasks as well? (e.g. requirements solicitation, analytics, usability testing, team building, ways of working, etc) Show me experience in and/or willingness to learn enough of these and, in my view, college degrees pale in comparison.
Gotta go fast (I really like stuff like that)
I've been laughing at the name/ascii art for like 16 hours now. I've been using Tornado a lot lately in a 3.5 environment. Sanic looks like a good alternative (for an API, Tornado has a lot of pluses: I love their tempting engine, its nothing like Django's. The UIModules are a nice touch, etc etc). I'll explore Sanic
10 ** 3 on /r/python
So you're telling me you personally know them? Do you know what statistical significance is? Naming literally the most famous outliers in the entire world does not prove a point.
&gt; I'm presuming that blocking means it can't do anything while waiting for the DB, not even get a head start on the next request? Correct. Your whole interpreter (thread to be precise) is just waiting for the DB to answer. Django doesn't implement any async stuff. Maybe (Don't really know Django ecosystem) gevent/greelet works with Django and you get some concurrency this way... A really cool new project in Django-land tackles this problem (amongst many other) in an elegant way : https://channels.readthedocs.io/en/stable/. The difference in performance with a classic approach (of a reasonable amount of thread serving requests) isn't so clear when DB is involved anyway. See many Mike Bayer (SQLAlchemy's author) resources on the topic, on reddit as well as on his blog, eg http://techspot.zzzeek.org/2015/02/15/asynchronous-python-and-databases/. With a decent middle-low end server (let's say a 50€$/month dedicated server) you can already reach a really honest amount of req/s I guess.
IIRC The droplet with django pre-installed only comes in Ubuntu and I think it uses Apache instead of Nginx. There may be reasons someone wants Debian and or Nginx. I for one have django setup with uWsgi + nginx on a CentOS server with digital ocean. 
That was great. Thanks for link!
Netbeans. It has plugins for almost everything.
Wing IDE, pretty neat.
Great post!
[Emacs](https://www.gnu.org/software/emacs/) is a great Python ide when it is configured. For easy configuration, see [Prelude](https://github.com/bbatsov/prelude), [Spacemacs](http://spacemacs.org/) (both light and heavy configs) (aimed at modal editing), or just try Elpy mode. See http://wikemacs.org/wiki/Python
This post is more suited for r/learnpython or r/learnprogramming 
Gotcha, thanks!
Yup, that's the stack I use.
vim with [python-mode](https://github.com/python-mode/python-mode), as well as a few other plugins, has served me well for years.
This post is best suited for r/learnpython
Thank you.
Mine is to migrate entirely over to Python3. But I also resolve to read the docs of at least one standard library module a month; starting with Collections. And to set at least one of my relatives on the path of learning Python; probably via Automate the Boring Stuff.
Learn unit testing properly and start using it properly.
3.6.0 supposedly comes out tomorrow, so that will be fun to play with. 
Spyder is a nice alternative with a focus on scientific computing with python.
Does this replace apache or nginx?
My autistically driven sense of humour, no more no less.
Companies ultimately care about results and that is proven/demonstrated capability. Two of the top 10 programmers I worked with had previously been a music instructor and someone with a degree in English. 
I resolve to store all my 2016 resolutions in an in-memory format in a constantly running script and never look at them again.
Added game time, and made the columns sortable while I was there :D The API doesn't return current number of players, as far as I know the information shown is sent when the server first starts, there aren't any updates.
Wow i don't know anything about dbs but your explanation was very interesting and helpful, thanks! Are you a db specialist? 
Not at all, actually. I develop web services (which in turn use databases) and have had to fix my own crappy code locking up the database enough times to have picked up a few things :)
Any idea how Sanic compares with Pyramid? 
Thanks, I'm learning, looking to create a web service but i can't make sense of what to focus on and what to outsource as my company (hopefully) expands
Whhhaaaaaattt?! Cool.
Python 2.8 will never happen see [Python 2.8 Un-release Schedule](https://www.python.org/dev/peps/pep-0404/). The speculative ideas can always be discussed on [Python Ideas]https://mail.python.org/mailman/listinfo/python-ideas). Patches are always welcome on the [bug tracker](http://bugs.python.org/).
Hi everyone, Recently, I analyzed Python 3 support for third party libraries. My aim was to understand the risk of dropping Python 2 completely in 2017. I wanted to share my results with you. The code is available on [GitHub](https://github.com/gutfeeling/pypi_explorer). I also created [an editable list of important python packages that have still not been ported](https://docs.google.com/spreadsheets/d/1z3eI_CLA-L8xX1G5kqxi64oskFCuoPjQ4Z62XRkfWyc/edit?usp=sharing). The details are in the article. 
I appreciate this entire exchange. It's impressive to be capable of changing your understanding on a matter with new information. It sounds so simple, and yet it is sooooooo not simple. And also, I totally get it and agree. In what context could you possibly undertake that kind of migration unless there is at least some sort of consensus or support or will to do so from the organization as a whole? This problem is fundamental to a huge ratio of all business environments. We act shocked that private companies wouldn't want to make some general infrastructure improvement, but in many places, even if you can actually identify who is in charge of making such decisions, they surely do not know, understand, or care. Especially if there have been generations of turn over, and possibly even acquisition. The continuity can be poor. Many would just as soon throw out the software all together and have a bunch of people do whatever work the software is doing manually in some kind of spread sheet. "Business. It's stupid!"
Use asyncio in a serious project.
I actually just wrote a script that checks r/Python every 5 minutes and prints a message every time there is a new thread haha EDIT: Here it is https://github.com/Andrew-Shay/subreddit-montior And I spelled it wrong! EDIT2: https://github.com/Andrew-Shay/subreddit-monitor
Recently made a script that checks the local Apple store AirPod stock and sends me a text message (twilio) when they are available to order online for in store pickup. Both times it happened to alert me while I was in the middle of presentations of course.
I wonder what 'Kyoukai' and 'AioHTTP' are doing differently to have poor latencies as compared to Sanic. All of them as using uvloop with python3.5 
On a similar vein, to prove to myself just how mindless and untalented you can be and still make money on YouTube, I wrote a bot that scans youtubehaiku, deepintoyoutube, Instagram, Snapchat, YouTube playlists etc and automatically generates compilation videos. It hasn't been an overnight success but being able to upload literally as many videos as I want a day helps with the subs. I had no intention on following through on this. It is just an experiment. However I will concede that it is a bit addictive trying to come up with ways to most effectively get clicks. Libraries used are moviepy and pytube mainly. Also sqlite3 for the database that stores each generated video and each video clip I archive along with tags and relational databases to store which video clips were used in which video.
Yes. [There are a few things mentioned in the docs](http://mypy.readthedocs.io/en/latest/kinds_of_types.html). Consider that Python is still a dynamic language and you may intend your code to be used as such. Maybe you even have some program that modifies types at runtime (could even be based on input), so MyPy gets the type checking wrong. Keep in mind that MyPy is just a tool that analyzes annotations and doesn't necessarily indicate whether your code runs or behaves as expected. Static typing systems can actually make a guarantee. --- Some people complain about the syntax but i think it's about as good as you can do considering it's just annotating.
I made a tool a while back that lives in your toolbar (Windows). Works by using win32api. When you click the icon it checks to see if there is a URL in your clipboard. If there is, it makes a request to a URL shortener. Then tosses the shortened URL into your clipboard. If it succeeds, it notifies you with a friendly message. If not, it notifies you with a frowny face. Edit: [Source code](https://github.com/SnowdogU77/pyClipboardShortener)
Gotcha, thanks for sharing!
Mustgofaster.
can you please share code?
Is there any way to make your own interfaces, though? Beyond the ones that already have built-in functions that are understood to do certain things.
I have quite a lot of scrapers. One checks the local cinema's schedule and sends me an email if new dates are announced. Other checks concert ticket sites and does the very same thing. These are plain Python. I also have a "generic purpose" scraper in Django which is extendable with plugins. It downloads image boards, instagram profiles and some adult sites. I've an other Django project (which is open sourced but very far from being complete) which is basically a web-ui for the excellent youtube-dl library. So it downloads anything which youtube-dl can and generates thumbnails when ready.
I'm currently writing a little CLI app that fetches pricing information from suppliers, parses the data (mostly web scraping and string conversions) and stores all the information to a database. Next step will be exports including a hint on the automatically determined best supplier for the (quite picky) accounting system importer. While writing the user interface I eventually ended up having it implemented as an interactive Cmd-based shell with scripting support that dynamically loads sub-packages for article groups (and their suppliers), and each package provides a set of sub-commands for article-group specific operations. Instead of manually fetching the data, cleaning it up by hand, importing it to a database and have it transformed using several views, all of this will be done automatically now, and is easily extendable for new suppliers or new types of articles. 
The list is there so that people can decide between 2 and 3 before starting a new project. If there are no blocker packages in the same niche as the project, this provides confidence to go with Python 3. If there are a few of them with no alternatives, Python 2 might still be the better choice. I am also up for listing the easily portable packages for those who are looking to get experience with porting, but this list would be longer (almost 3x) than the list of blocker packages.
Thanks for looking into the spreadsheet. I added some of your comments there. Also, I just remembered [this discussion](https://news.ycombinator.com/item?id=12930082) where quite a few people indicated that they are stuck with Python 2 because of ansible.
This comes up so often, i should make one. The options we have now aren't really decent anymore. Either slow, or just big packages not related to the specific task.
I wrote a program that can gather data in the form of json messages from a wide variety of sources such as log files, twitter, RSS feeds, CSV files, IRC, scripts, etc. You can put the messages through a chain of filters, modifiers and templating and finally push it back out again to email, push notifications, etc. It's allowed me to automate a lot of different things such as: * Automatisch push notification when there are public transport problems on the routes I usually take. * Downloading of new TV series through bittorrent * Daily email digest of errors that occurred in a log file * Fetching tickets from various sources and putting them in Trello so I have an overview of all the tickets in my name for different customers * Fetching news from about 12 RSS feeds, filtering out uninteresting things, ordering them chronologically and finally putting them through a template and rendering a news overview page of all the stuff I find interesting without all the noise * Send an email whenever a new interesting movie has come out on DVD/BluRay * Pick up CSV files dropped in a directory, filter them and convert them to Excel files and putting them in a different directory. * etc. It's very generic and easy to create new data consumers / producers. I'm currently polishing it up so I can release it as open source.
Earlier this year, I wiped my computer and installed Debian NetInstall, then set myself up a small footprint system with OpenBox. I have quite a few pipe menus that run on Python. Notably, I have: * A Steam menu where I can launch directly into any game or a chat window. * A menu that scrapes a torrent site for new torrents from one group I follow, and sets the menu item to launch transmission-cli and download the files for me. * A menu that searches my GameBoy folder for .gb* files and sets the menu item to kill pulseaudio, launch vba-m, then restart pulseaudio when I quit. (PA causes vba-m to crash randomly on my laptop. No clue why, but ALSA handles it fine) I have plenty more pipe menus, but those are the more involved ones. I'm also working on setting up an automatic system for generating a random password and changing my WiFi password once every month for me, but that's on hold for a few months. **** Edit: [link to pictures by private request](http://imgur.com/a/VXVdD)
Usually like this. https://xkcd.com/1319/ Programming is fun and repetitive tasks are boring so I tend to put way too much time into trying to automate things that I probably should have done manually.
I have this Tampermonkey extension that automatically downloads each song from Pandora as it plays. Left it running all night long and gathered about 3 gigs of m4a files. Obviously they were unorganized, so I wrote a script that took a list of all music files in a directory, split them by ' - ', got the band name, and then put all of the music into a folder with its corresponding band's name
Um why?
sort of, lets say its the year 2220202, and we've had to expand the IP address space again import abc, ipaddress class Addressable(metaclass=abc.ABCMeta): ... @abc.abstractproperty def version(self): ... @abc.abstractproperty def max_prefixlen(self): ... ... #etc etc Addressable.register(ipaddress.IPv4Address) Addressable.register(ipaddress.IPv6Address) class IPv7Address(Addressable): ... @property def version(self): return 7 @property def max_prefixlen(self): return 256 ... is how you'd have to go about it (using `.register` to have an interface retroactively "apply" to pre-existing classes) Its just... really awkward to do traditional javay/C#y OOP in python, python uses something a bit more lispy/perly from what I've heard, which is more about storing data and methods, and less about classifying objects into specific categories using interfaces
Last night I was drunk and when I came home I got this "genial" idea about creating an adventurous retro console game. It isn't anything special. Excuse me for any grammar mistakes. Anyways, hope you'll enjoy at least tiny bit.
Mine would be to [learn some C](https://www.amazon.com/Programming-Language-Brian-W-Kernighan/dp/0131103628/ref=sr_1_1?ie=UTF8&amp;qid=1482484378&amp;sr=8-1&amp;keywords=c+programming+language) for a better understanding of Python internals. Also, go through [this book](https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844/ref=sr_1_1?ie=UTF8&amp;qid=1482484417&amp;sr=8-1&amp;keywords=introduction+to+algorithms). 
[removed]
I find VS Code and Atom very similar tbh (well, they are both based on Electron so yeah). The gripe I have with Atom is the slow startup time and opening large files. VS Code startup time is cited as faster, from what I've seen, though in my experience it's about the same.
have you looked at "morse" on linux? Not your own python project but might be worth a look to see what is already out there. It works well and has lots of options.
A simple backup script that runs every 3rd day. 7zips specific folders if changes were made since last run, encrypts it via GPG, and moves to the cloud.
Usually to download a file you'd just do a `GET` request to the file's URL. And then write the response to a file. Although over a certain size you may want to directly write chunks to a file rather than first load the file to memory. Under 15MB I doubt that should be a problem. See this StackOverflow answer: http://stackoverflow.com/questions/16694907/how-to-download-large-file-in-python-with-requests-py
Thanks for the info. I've tried using requests.get with no luck unfortunately. I am wondering - is it because I'm trying to access a https:// resource? Should I be trying to replicate what is in the request header, ie cookies etc? 
I used to play Magic the gathering online, so I wrote a script that: * downloads all the played Decks * summarize cards, writing how many Decks played a single card and how many * remove cards that I own * download prices of cards that I don't own The final result are a CVS file that I can keep open while I buy cards and a wishlist.txt that I can import in MTGO. This way I can buy cards faster , because shopbots closes after some time. And waste the last cents in useful stuff, because MTGO doesn't have cents tickets and if you forgot that you had credit in a bot you lose it. 
Let's f"" everything!
[What's new](https://docs.python.org/3.6/whatsnew/3.6.html).
I don't know how to go about it with Linux/Gnome, but doing this for Mac OS looks fairly trivial. I'm sure there are Python libraries that are easy enough to use to send notifications with Linux. And probably Windows.
That was really interesting! 
C'mon conda...
I just did a fresh install of 3.5.2 on a new machine, but this is definitely going to take its place. Just in time for the holidays too.
I'm trying to do something similar using the Google API but without much luck. Not sure if it's an authentication issue (I have API keys) but would be interested to see how you accomplished it.
You might want to look into a webapp like toshl.com. It does that sort of thing for free and it has an API.
Oh okay - was confused.
Which error are you getting? HTTP 403? Yes, the cookies could be essential to authentication. 
Libraries, yes - mutagen etc. Good, no - but that's because ID3 as a format is terrible.
&gt; while a == 0 What's wrong with `while True:` ? 
You want to create a session and then do .get on the session. Otherwise you are trying to download in a non-authorized connection. 
I'll build an alarm clock with my Raspberry Pi that wakes me up in time before my first lesson. My schedule is scraped off of the school's intranet. Can't be bothered setting the alarm every night and sometimes forget. On a similar note I will use the school's intranet to find classrooms that are currently not occupied, a place to speak your mind can be hard to find on campus. 
But, I can use template with format.
Why doesn't the link work for me?
Nothing, I am still learning Python and I never use While loops. Thanks for your suggestions.
 while a == a: speakers[a].volume = a
Done: https://github.com/jbeagley52/subreddit-monitor This has only been tested on my Mac. I can't test how it works with Linux/Gnome, but it should work if I read the documentation properly.
I wrote a script that would let me use a keyboard shortcut to move a window from one monitor to the other (similar to ctrl-shift-alt-&lt;arrow&gt; to move workspaces on ubuntu). There was probably an easier way to do it or some existing setting to let me do it but it works.
Success! Thank you very much. If I could be so bold as to ask another question - is there any way for me to check metadata on the file (date created, file size etc) prior to running the .get to retrieve the file? My process relies on maintaining a local copy of all of the files. If I can compare the files first, and only get them if they differ, it would obviously make the process *much* more efficient. 
Honestly it doesn't matter what condition you use as long as it always evaluates to True if you want an infinite loop.
So, I don't understand why there is no "f-stingify" ability for string. We can make bytes from string and vice versa, but can't make f-string from string.
[PEP 506 - secrets module](https://www.python.org/dev/peps/pep-0506/) isn't what I thought it would be. Definitely a good thing and overdue, but the name implies some cryptography functionality so I was a bit disappointed.
RemindMe! 1week
Some. Most videos are duds but some do quite well. Videos with celebrities do best and videos with a human made title usually are better than machine made, unless it's a series ex. TOP FUNNY FAILS OF THE WEEK #5
Trying to be human is part of the game! Giving away the secret would be like unmasking the batman.
Just running shell commands, seems easier and faster, but will require dependencies. No special reason I'm using GPG instead of openssl, it's just what I know and use. And the reason I wrote it in python is to be cross platform, but bash will work fine if you like the syntax :)
You could check if they're nice enough to supply it in the headers. It's far from a sure shot though. 
 class MegaAnnoyToyg: def __init__(self): self.mega_annoy() def annoy(self): import random index_random = random.randrange(0,len(string.ascii_lowercase) - 1) exec('return self.%s'%string.ascii_lowercase[index_random]) def mega_annoy(self): import string for letter in string.ascii_lowercase: exec('self.%s = 0'%letter) while MegaAnnoyToyg().annoy() == MegaAnnoyToyg().annoy(): speakers[MegaAnnoyToyg().annoy()].volume = MegaAnnoyToyg().annoy()
sounds interesting, any link? 
Needs more factory classes, an AbstractBaseClass, type annotations, and gratuitous use of map(). The real annoyance, however, would be if it were in Javascript or (argh) Perl.
I have to submit a calendar for work routinely. I've never found a way to turn google calendar events into a nice looking PDF. Do I use the google API to download the events and and make a calendar with report lab. Looks great! 
Ahhh, I understand. May your secret stay hidden 
It technically did, though I actually ended up buying a new one from the Dell site instead because they had nice deals. 
This only applies to string literals so it isn't like that would contain user generated strings. Otherwise if you are calling `.format()` on untrusted user input that was already a problem.
Did a script to get albums from bandcamp with cover art, organised by band/album, with nicely tagged mp3. So it looks good in a music player when I'm offline. Used Selenium and eyed3.
I did the [getting started](https://www.youtube.com/playlist?list=PLQ176FUIyIUZ1mwB-uImQE-gmkwzjNLjP) screencast series for PyCharm. It's true that an IDE is more of an investment than an editor. But we're trying to do a better job of helping the new-to-Python audience get to first success.
When I wrote that, I recalled reading that the expressions allowed inside f-strings are a subset of all Python expressions. However, I just looked at the PEP and it seems that the differences are negligible. For example, [backslashes are not allowed inside f-string expressions](https://www.python.org/dev/peps/pep-0498/#escape-sequences).
This is a great idea! I have always wanted my university to show what each room's schedule is so that I can use an empty classroom every now and then.
And [here](https://mutagen.readthedocs.io/en/latest/) are the docs ;)
Sounds like a fun project! Have you thought about using docker instead of Heroku? Docker allowed me to learn more about container technology and how to set up my own infrastructure, because it was a lot less "hand holding" than Heroku (which is also a great product!). 
I'm *pretty* sure someone is doing this for Family guy "Funny Clip" compilations. I've watched a few of these and they cut in and out in weird places and duplicate some clips in the same video.
Just a point, dunno if it's been addressed already, but the readme at opening the link says that you get the XML and convert it to json. Did you knew you can just grab it directly as json? Instead of adding ".xml" use ".json" instead, and it returns that
thanks man
hey thank you so much !
conda-forge has had the beta and release candidate builds already, they'll probably have this release uploaded within a few days. If you want it now add the label prerelease for conda-forge to your channels.
I think you forgot to push your additions besides updating the readme. 
RemindMe! 1 month
That doesn't look like Sonic at all.
I like turtles 🐍 
No, but only because I hadn't heard of it. Shall google it up now though so thanks for the recommendation.
Just out of curiosity, how can you send whatsapp messages? Do they have an API?
It is the one I use, but only to download. I didn't knew it could extract the audio! I'm a noob, so there are probably several better ways to do styff and I just don't know about it 
This was interesting and very easy to follow. Would love to see more like it!
I meant more full featured like https://nodejs.org/api/crypto.html
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Sure, but I may not get a chance for a couple of days. I'll leave a new comment so you get a notification when I post it. Just a head's up though, I have it set up for a private URL shortener right now, but that part of the implementation is super duper easy.
Maybe a "crypto" library can be proposed as a PEP or something.
Not much use for Jython, IronPython, Nuitka...
&gt; Change Windows console encoding to UTF-8 I can't wait to run my [tests/aggravations](https://i.sli.mg/a81hgO.png) and see if matters have really improved.
What about copyright claims? I bet you get lots of them. Once I posted a video with a song in it. Youtube allowed me to have to video online, but any money generated would go to who owns the song. Which is BS, because the video is not 100% the song... anyway, nice script xD
What are you talking about? All I was pointing out was that it's not a limited expression evaluation. Almost anything you can do in regular python code, you can do in an f-string.
Well, someone will now do for other series as well :P
tag me as well :P
heheh we are always off guard when people ask to see our code. "get in. Don't mind the mess..."
yeah, the whole point of automating stuff in our lives is because we are lazy (in the best sense of the word, if it has any). So when choosing libraries or snippets of code that allows us to do what we want, the quicker the better. I don't mind not knowing precisely what a function is doing on its blackbox. input -&gt; output sometimes is what we want :P
I mean if you want to fork python, that's your right. ^have ^fun ^buddy 
that's exactly what it does. Just "conda install pil" and you're done. It let you even switch between different Python versions and package compilations you installed with a single command. Can't recommend it enough!
How stable is it? 
Automatic résumé and cover letter generator. [[Github]](https://github.com/masasin/resume) It uses LaTeX's ModernCV (for pdfs) or custom formats (for other formats) and a YAML input file to generate the resume. Some sites want me to paste the resume as text, for instance, and this method makes it up to date and pretty. For the cover letter, you can define various templates and select the one you want. Just list what you want each variable to say. The cover letters and resume pdfs are merged and renamed with an abbreviation of the company name, and the themes match.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
After a quick Google I turned up [this](http://pythonfiddle.com/python-logic-gates/), which may be what you're looking for. If you mean something more like if x == True and if y == False: if (x == True) or (y == False): Then yes.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I know! I thought someone would come with a better standard by now, but nope. It's still a bit better than the situation with EXIF data photos, which some applications will happily destroy without warning. 
I'm just starting to use Conda, how would I go about installing the new version of Python in an environment? Will it be through a Conda update or something? Sorry for the stupid question, I really don't know how this works. 
Yeah, having to define the possible types of each of my variables, while Python favors duck typing, what a funny thing... I would have liked that type annotations were limited to companies that works on Python projects with thousands of thousands of lines. There I see an interest. But if little by little type annotation intrudes into the daily life of all Python developers and small open-source projects, it will be difficult to promote this language as extremely readable and pleasant to write. Pity.
I didn't actually know you could use a second if in an and statement, learned something :D
I created a program that downloads all my account and credit card transactions, and builds reports and charts based on that. It greatly simplifies my life, as I know how I spend and how much money I have. A Mint clone, if you prefer.
Please post this kind of question under /r/learnpython. It's the right place to do it. Thanks!
All the remote servers I use still default to Py2.7, sure, because Debian/Ubuntu land just hasn't decided to switch the default (probably remembering my desktop distro of choice, Arch, having so many bumps in the road flipping to Py3 by default back in the Py3.1ish days). But they offer Python 3.3 minimum, most 3.5. If your distribution/release doesn't, it's probably time to consider upgrading your system. Anyway, Python 3.5+: - Actually supported for new language functionality going forward (2.7 is on security patch only mode) - asyncio (the usefulness of this really depends on your industry, I'll admit) - the various collection types that have been added in the 3.x series, like Enum and OrderedDict (you can backport these with libraries, but why, when the stdlib can do it for you?) - Several other features I never got around to using (unfortunately we do still use Py2.7 at work, but are slowly porting things off of it and not starting new projects with it) - *It's now stable*. The messes of the early 3.x series have been cleaned up. It works, it works well, and it's the future direction of the Python language. I'd rather be with or ahead of the curve, rather than... well, six and a half years (and counting) behind it (based on first stable release date of Python 2.7). This is an incomplete (because rushed) response and I welcome someone to follow up to it, or I might when I get home tonight.
https://github.com/pyca is working on a number of different libraries, the most relevant of which is https://github.com/pyca/cryptography . I'm not sure if they're aiming for eventual stdlib inclusion, but it seems likely.
In case you haven't come across it.. I've been using this one for a while (youtube-dl-gui) [https://github.com/MrS0m30n3/youtube-dl-gui](https://github.com/MrS0m30n3/youtube-dl-gui)
Thank you, I appreciate the input. 
Which is exactly my point, that it is not "definitively and objectively" the better choice is all. There are still some cases where it is not better to use 3.x, like mine. I was wondering if 3.5 had some backwards compatibility magic I hadn't heard of that made this situation not true, but it does not - that's all I meant to ask in my original comment. Rereading it, I'm quoting like an asshole, so sorry about that. Just meant to question his literal wording because I was reading too much into them. His quotes made me think core python devs said that in regards to some new feature, but I was mistaken.
I'm actually really excited about being able to use underscores in numeric literals now. It's a small thing, but I had a large constant I was defining the other day and I spent a while searching around for how to do this (since I was getting a syntax error) before realizing I remembered the feature from Ruby :( . It's a nice way to prevent silly errors.
I've tried it. It's best one i've ever tried, but its still little bit too heavy for me. I need something like processing but for python.
I don't know if you're into machine learning at all, but you take a look at [SciKitLearn](http://scikit-learn.org/stable/index.html).
You can use the built in [html parser](https://docs.python.org/3/library/html.parser.html) for html. There are also built in json and xml parsing libraries. Though, I recommend staying as far away from xml as humanly possible if you can. Or, are you asking more about actually parsing a whole request/response? That's a little different.
I want to get into machine learning, learn golang, contribute to open source projects and continue working on some more serious personal projects in Swift and Python. 
Yeah I decided early on that I would source the videos from other short videos and not do any editing on the actual clips. Similarly, the database makes sure that clips either don't get used twice or or dont get used often. Like I said the goal isn't to pump out videos it's to blend in.
Yep, looks like the README is the only thing in the commit.
https://www.reddit.com/r/Python/comments/5jv3db/how_do_you_automate_your_life_with_python/dbjjey1/
"f-strings", like "raw strings", are *not actually a different type*. You "can't make f-string from string" because *there is no such thing as an f-string to make it into*. The `f` is an instruction to Python to interpret the stuff between the quotation marks differently from usual. But in the end, it still just makes an ordinary string.
/r/csshelp/ Someone there most likely knows how, I'm not familiar with how styling subreddits work unfortunately.
RemindMe! 8 days
Yes; this is standard in most programming languages and are called logical operators. By combining the three basic logical operators python provides you can simulate different combinations of and gates. The three basic boolean operations python provides are ***and***, ***or***, and ***not***. It is also important to group these operation in the order you would like them to be evaluated by using parentheses like the same way you would do in math. https://docs.python.org/3.6/library/stdtypes.html#boolean-operations-and-or-not You can just return the values of these operations but if you want to define the gates explicitly you can define functions for each gate. On line expression example: return (not (A or B)) and (B or (not A)) Function Example: def or_gate(a,b): return a or b print("OR gate outputs: ") print(or_gate(0,0)) print(or_gate(0,1)) print(or_gate(1,0)) print(or_gate(1,1)) def and_gate(a,b): return a and b print("AND gate outputs: ") print(and_gate(0,0)) print(and_gate(0,1)) print(and_gate(1,0)) print(and_gate(1,1)) This code will return: OR gate outputs: 0 1 1 1 AND gate outputs: 0 0 0 1 To make more other gates such as NOR or NAND gates you could use the not operator when defining the gate: def nor_gate(a,b): return not (a or b) def nand_gate(a,b): return not (a and b) or def nor_gate(a,b): return not (or_gate(a,b)) def nand_gate(a,b): return not (and_gate(a,b)) To make complex gates such as XOR or XNOR gates you could use the fact that the output of an XOR gate is true only when the two inputs are different by using the != comparison which will return true only when both values are not equivalent and by using the = comparison which will return true only when both values are equivalent One line example of XOR: return a != b One line examples of XNOR: return a = b Function examples: def xor_gate(a,b): return a != b def xnor_gate(a,b): return a = b
Yeah, I know it. But question was about why I can't use prepared string template to format it with f-string "rules"?
I can never remember which one loads a file and which loads a string. Someone should've just figured out a single entry point
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Maybe every Python should be released close to Christmas from now on because it makes an awesome gift. :-)
I'd be interested in the list of easy to port packages. I have some experience porting Python 2 applications to Python 3, but not enough time on my hands to approach a blocker application. Would be nice to sort the list by some sort of popularity metric.
You don't know how many times I'm holding my finger up to the screen, trying to count the number of digits in a large number. :-(
Read where? Depends on the people and project. I haven't run into anything py2-only in ages, that I've wanted to use.
I think I agree with Raymond Hettinger that this PEP shouldn't have been accepted. I really don't know anyone who uses tau, and its adding a burden (however small) to look up what tau is. If you really want tau, why not write `tau = math.pi * 2` somewhere? That is much clearer than some magical constant.
Damn, that's a good idea actually!
Yes! Just look at the sorry state of Java crypto.. 
&gt;import procrastionation &gt;procrastination.push_work_off_to_tomorrow() Your code would throw an error, because you wrote "procrastionation" instead of "procrastination" in the first line.
I made a little script that reencodes every video in a directory with ffmpeg, usually with something like a 4:1 encoding ratio. I record dozens of hours of gameplay footage a month, and this allows me to keep it all on my machine without going hog-wild on data hoarding techniques. It's nice to let it run overnight and see it turn a 40GB video file into something more reasonable. I also have a python script running on an old laptop that I use as an archive server. Incoming video files are encoded in h265, then sent to an external drive for storage. It takes about 10 hours to encode 1 hour of footage on this old MacBook, but the ratio for h265 is insanely good - usually like 10:1 or higher.
Hello everyone, I need a good python developer for a series of middle projects ( automation scripts with Restfull APIS) The script needs to have the following components: . Create a list for multiple controller names to connect to the server. · Securely prompt for credentials to connect to the list of controllers via HTTPS. · Read an XML configuration file (contain your snapshot pattern matches, snapshot exclusions and snapshot retention) · Enumerate all vfilers, volumes and snapshots · Delete all snapshots matching each pattern where the retention has expired . Needs to run on ONTAP 8.2 7MODE Anyone interested in making some extra cash in his pocket? Please reply with contact information if you want the job.
Awesome, thank you!
Yeah, I prefer at least the JS API of JSON.stringify/JSON.parse to loads/dumps.
Why just use the cursor and arrow keys instead of your finger?
`nltk` library is the closest thing resembling an AI today! Not just that, Mark Zuckerberg is working on his own version of Tony Stark's Jarvis and news is (heard on /r/PHP a couple days ago) that his language of choice is **Python**, not PHP!
This was just posted recently
I use pandas for that, but this library looks nice too.
What do you mean? Also, CPython is by far the most used language, and learning C is useful regardless. 
Nifty! 
Raymond Hettinger talking about math.tau: https://www.youtube.com/watch?v=-TdrFjDJn5E&amp;t=59m1s
In any other language developers install the version of language they need. Unless you are writing code that's specific for the OS, you should not use python that comes with your system, otherwise you're heading for a lot of unhappiness. For example let say that your system comes with python3.6, but you want to use package foobar2000. The package is not available for your system, so will you search for rpm that provides it? What if that rpm has some incompatible dependencies? Or no one created it, will you create new one? What's if you're moving from redhat 6 to redhat 7, now you'll have find/rebuild all packages. It's an issue after issue. If you use redhat or centos, I highly encourage https://ius.io/ it lets you install any python version, all can be installed side by side, doesn't conflict with python from the system. To solve the second issue, IMO it's best to use virtualenv + wheel packages. Everything works the way it should and you're no longer tied to the OS you're running. My company did not do it this way and we are now still stuck with CentOS 5 :) The idea now is to use docker to solve that problem but IMO it's attacking the problem from the wrong way.
Title should be like "most useful for tabular data structure...." yup been using it on csv data like dropping all-NULL columns for a couple of years. One wish: ~~Access~~ Delete column by index instead of ~~dataset.columns['col_x']~~ by name. (if only for the unfortunate circumstance where there might be more than one 'col_x')
the list is already sorted by download count :-)
You also need `openssl-dev` or whatever the package is called - basically, the development headers.
I feel like you need to read a book to use Pycharm effectively. How did you get the hang of it ? 
If you're reading through a code review or something like that then you usually don't have a cursor to move about. 
Did you install Python 3.5 from source as well? If you used prebuilt packages, those don't need the headers.
Yep. That is what I was referencing. Thanks!
I don't use even close to the full feature list, but once you've got a project and an interpreter set up you can start using it just as a text editor and slowly learn keyboard shortcuts etc. There's a [cheat sheet](https://blog.jetbrains.com/pycharm/files/2010/07/PyCharm_Reference_Card.pdf) for keyboard shortcuts, and also a [most important shortcuts](https://www.jetbrains.com/help/pycharm/2016.1/keyboard-shortcuts-you-cannot-miss.html) page. For me the most useful from that second page is double tap shift to search in your project. Being able to jump around to modules, classes, function definitions instantly in a big project is a huge boost to not losing concentration.
I just ran a computation for that. It's 14 %.
Does anyone know if there's a way to get Python 3.6 installed with Anaconda 3?
This sounds really cool! Been wanting to do something similar with the public transport but it always seemed a waste for that one specific purpose - the modular approach seems like a great idea
Wait a few days, then use Conda. It won't replace 3.5 - will just be added alongside it.
My favourite little thing I've written is a command line note tool. Just super simple and I use it regularly since I finished it. https://github.com/theelous3/noots Another thing which was super trivial but saved me a ton of time, was a grid calculator for illustrator, so I could create pixel art assets across projects and maintain pixel scale, like this: http://i.imgur.com/zRWxZwj.gif and http://i.imgur.com/pCbEFgQ.png Automation? Not really. Large simplification? Yes.
I guess installing from sources is the best option. Here is how I got it installed in Ubuntu 16.04: sudo apt build-dep python3.5 wget https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tgz tar -xaf Python-3.6.0.tgz cd Python-3.6.0/ ./configure --prefix=/usr --enable-ipv6 --enable-loadable-sqlite-extensions --with-dbmliborder=bdb:gdbm --with-computed-gotos --without-ensurepip --with-system-expat --with-system-libmpdec --enable-optimizations make sudo make altinstall Configuration takes same flags as python3.5 compiled for Ubuntu. New `python3.6` executable will be available alongside other snakes: $ python --version Python 2.7.12 $ python3 --version Python 3.5.2 $ python3.6 --version Python 3.6.0 Overall compiling and installing took about 30 minutes on my machine.
Nice try Microsoft. But no. 
Look here for example: https://github.com/rasguanabana/function-pattern-matching Here annotations are used as functions which are run to check if function args are valid. You can do pretty fancy things with them, they're not just comments.
Edit: back up Ok nobody played :( , the server will be back up tomorrow.
Learn something like c++, scala, or Julia. Looking for a data science job knowing only Python seems like not the best idea. I'd like to be atleast somewhat familiar with a compiled language.
I'm a Python neophyte (only been using it professionally about a year), but I have never really understood where map() would be the best option to use instead of comprehension or even just a simple 'for' iteration. I've seen it out in the wild, and it's how I learned that it exists. But in any case I've seen it would have worked just as efficiently (and more readably) to do something else.
&gt;Jython and PyPy The Python Foundation maintains the Python language, and focusing only on CPython contradicts their mission statement: &gt;The mission of the Python Software Foundation is to promote, protect, and ***advance the Python programming language***, and to support and ***facilitate the growth of a diverse and international community*** of Python programmers. 
That's great! :) I appreciate the work on that!
Again, PyPy is an independent project. What exactly do you expect the PSF to do to advance the development of PyPy, other than donate money (which they've already done)? The people at the PSF and the people that develop CPython have *nothing at all to do* with the development of those other things. It's asinine to expect CPython developers to not work on CPython just because some other project somewhere else is not as up to date. That's not how software, or the world, works. 
&gt; is in charge of moving the language forward. Adding "features" isn't the only way forward for Python. The updates the reference *implementation* is getting now seem more like make-work projects for Summer-of-Code kids. The *language*, as opposed to *one implementation*, needs obvious work.
The language is the spec. The word you're looking for is _the ecosystem_, and PSF is already funding PyPy, and I believe to some extent Jython.
The PSF's mission is advance the Python *language*, not just the reference *implementation*. The updates the reference implementation is getting now seem more like make-work projects for Summer-of-Code kids. The language, as opposed to one implementation, needs obvious work.
The reference implementation is CPython, which is one implementation of the Python language [specification]. Anything written following the Python language specification should run on any implementation of that language, but support for non-CPython implementations is severely lacking and sorely needed.
/r/pystats for starters
Nice to know you. But that doesn't really respond to my point why you can't just put `tau = math.pi * 2` somewhere. Python will optimize that to a constant anyway I'm pretty sure.
Well, what's the solution then? The PSF has very limited money and resources - even most people working on CPython don't get paid by the PSF. How would you prefer they allocate it?
This is very cool. Thanks for sharing!
Reddit still uses Flask?
&gt; Well, what's the solution then? The PSF has very limited money and resources - even most people working on CPython don't get paid by the PSF. How would you prefer they allocate it? As I said, stop adding features to CPython (like yet another string formatting, or silly mathematical constants like Tau) and focus on getting other implementations up to standards, at least as far as Python 3. I'm saying exactly what you're saying that the PSF has limited resources, so I'm arguing we don't need more features like these, what we need is development on other implementations, or alternatively work on truly ground breaking things in CPython like fixing the GIL
The thing is, PSF employed developers are CPython developers. Blindly throwing more people at the alternative implementations will probably slow the development down, if anything. Also, it's been started by Guido multiple times that GIL is not something that he considers a bug, and not something to be "fixed", so if you're expecting the GIL to disappear from CPython entirely, that's probably not happening. 
&gt; CPython doesn't need new development besides some security patches, like Py2.7 is getting That's just plain wrong, 2.7 is getting bug fixes at regular intervals owing to the extended EOL in 2020, and I'm very much in favour of the Windows specific PEPs that have been implemented in 3.6. 
Raymond also suggested that "Python has been a thought-leader many times" and that tau's addition can influence the world. In the long run picture, this might be something great.
&gt; That's just plain wrong, 2.7 is getting bug fixes at regular intervals owing to the extended EOL in 2020 This is what I said and what I think should happen with CPython 3.6 until the other implementations catch up
&gt; The Python maintainers can obviously do what they want to do Nonsense, there is often a huge amount of debate involving 10s or even 100s of people regarding what can and can't be changed in the core cPython implementation, and the impact this could have on the other variants. There is nothing to say that you have to be a core developer to comment, heck I've done so often enough in the past. These debates are centered on the Python-dev and Python-ideas mailing lists but there are lots of other mailing lists dedicated to Python SIGs.
Which of the PEPs implemented in 3.6 are "make-work"?
How much time do you intend to offer to help out? As we say here in the UK "put up or shut up".
I never make such things, but I do wish the main one for everybody else was "please stop this ludicrous 2 vs 3 debate" as it's now tedious in the extreme.
No you did not, you stated quite clearly that 2.7 is only getting security patches, not bug fixes.
So 2 out of 14 PEPs are "make-work" so the other 12 are not. You have misquoted the Zen of Python which actually says "There should be one-- and preferably only one --obvious way to do it."
It's not "clearly not true" at all. Show me some data. And I think I've only ever said that most have STEM degrees, which makes sense, since that's what I think is true.
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
I give up, you're simply not worth the time of day. If this was a mailing list it would be ***plonk***.
It seems like you're asking for an illegal copy of this book. I have removed this thread. If you need help with NumPy, check our r/learnpython 
Yup, probably. I am still getting the hang of Git. I only created my Github account yesterday. I'll push the updates. -_-
&gt; Raymond also suggested that "Python has been a thought-leader many times" and that tau's addition can influence the world. In the long run picture, this might be something great. I don't disagree with that, but people who promote tau already tried to move maths to use tau over pi, and failed, so I think like it or not, pi is here to stay.
I use both jupyter and pytest, and that seems illogical to me. Either you're demonstrating the concept of unit testing (which you can do easily enough in jupyter with a set of cells that each contain one test and are run through in order), or you're demonstrating actual real-world application of unit testing (in which case it would be silly to demonstrate a method that viewers wouldn't be able to easily use in a standard python distributions).
register does something else there are functions `isinstance` and `issubclass`, which, in addition to the expected logic, check all ABC classes to see what they have registered as fake subclasses taking the example from before, and skipping the registering for now x = ipaddress.IPv4Address('1.1.1.1') isinstance(x, Addressable) # Returns False Addressable.register(ipaddress.IPv4Address) isinstance(x, Addressable) # Returns True And it doesn't do anything else. Multiple inheritance exists in python still class Tomato(Fruit, Vegetable):
What about VS Code do you like more than PyCharm?
That is legit so damn wrong. CPython needs to be developed to keep up to date with other languages. I disagree with everything you've said, and I see why you're getting downvoted.
Nothing right now, due to Python 3.6. But saying something shouldn't be developed further and should only get bug fixes because "the other implementations should be developed instead of the main and most popular implementation" is just plain absurd.
Not really, f-String can also evaluate expressions. To be really cynical it's just a dressed up eval. 
how do I do that? 
Pretty sure it uses pylons.
~~[Yes](https://stackshare.io/reddit/reddit), they still do~~. I forgot to mention backbone.js btw which is also my favorite. But what I don't understand is their use of memcached. Why would you need an in-memory database when you already have a full-database (pgsql), and also a message queue for caching (rabbitmq).
Great ideas.
Illogical or not, the first thing you described is very close to what I'd like to do. To be fair, though, your binary view of what I might be trying to demonstrate is too limited; I'm trying to demonstrate how to use pytest specifically, not just the platonic concept of unit testing. To that end, fundamentally I'd like a cell with a function, and I'd like to run that function via pytest. That is, I'd like to have the function executed via pytest so that asserts are handled by pytest, etc. I think the "easily enough" you mention is what I can't sort out. What pytest API do I use to discover and run the tests in the cells? I've tried the obvious - running pytest.main() - but that fails pretty spectacularly. I think pytest.main() ends up seeing the sys.argv for some notebook-related process, and it doesn't know what to make of that. For the unittest section of this presentation (see https://github.com/abingham/python-testing-presentation/blob/master/unittest.ipynb) I was able to use the unittest discovery and test collection API to very selectively run tests in the notebook. I've looked a bit and haven't found equivalent APIs for pytest; either they're not well documented, I haven't looked hard enough, or pytest doesn't give real programmatic access to the test collection part of the process (without the use of plugins, which is why I mentioned them in the post). So, if you could give specific guidance on the "easily enough" bit you mentioned, I'd really appreciate it. This seems like it ought to be doable, but I'm a bit stuck at this point. Thanks!
Well, the Greeks only had so many letters. I guess they did not plan for having variable size characters available. But, I don't buy the visually smaller argument. After all "0" is **much** bigger than "1" physically, but it is smaller numerically. And, anyway... in Python you are typing "pi" or "tau". So, "tau" is bigger than "pi". :)
If I remember right, this is done by Kenneth who writes requests.
Ah, I hadn't considered shelling out to run pytest. That might be the way to go if I can package it up cleanly. In my unittest section, each demo cell has a "run(TestClass)" call at the bottom which runs the tests and prints a minimal set of results; this seems to be great for demo purposes, so I'd like something similar for pytest. Thanks for your help!
You could always... take an active role in the community :)
Nltk is an introductory to intermediate tool for NLP in Python. Although machine understanding of human language is a size-able component in AI, it is only one of many components of AI.
Actually I meant deleting column &gt;&gt;&gt; del data['Col Name'] And I think the dataset headers are optional, so not sure how to delete when there are none.
Would honestly like to help (I saw that back in May when my install scripts wouldn't work on Ubuntu 16.04 anymore). My problem is: I have no idea whatsoever how to even start migrating code and it seems like an overwhelming task.
not a creature was stirring, except... the four assholes coming in the rear in standard two-by-two cover formation.
It killed my Ubuntu... Well, not Ubuntu, but after installing it several programs disappeared (Gimp, Inkscape, etc.). Now I have to figure out what's going on.
The companies they hire for social media are getting smarter!!! nice try Microsoft!
This post is better suited for r/learnpython
Couldn't they have just replaced PI with 2*PI?
It doesn't look like there is a simple way to remove a column without the name. However, there is a transpose function, I think you could transpose it, remove the row, then transpose back.
Is there anything that this library does really well or easily in comparison to pandas?
RemindMe! 1 week
God that's stupid.
https://automatetheboringstuff.com/ ^ Interesting read... if only I weren't so lazy haha.
I'd use a secondary store; use a data store optimised for search, such as ElasticSearch or Solr; we've had a lot of success with Solr.
I created a [small package](https://github.com/chmp/ipytest) to discover and find tests in ipython notebooks. As of now it is more geared towards running standard unittests. Therefore, it offers hardly any of the functionality of pytest (fixtures, scopes, and on). However, I'll have a look whether extending it to pytest is feasible. Depending on your needs, even the current state may work. Usually, I prototype tests in a notebook and then transfer it into an external file. Your use case could be mapped as: ipytest.clean_tests() # define tests def test_example(): assert True is True ipytest.run_tests()
Funny how I'm recommending free open source editor, and I'm automatically Microsoft's employee, but people recommending commercial software are just satisfied users.... :D
If there's a lot of code that doesn't work at all on Python 3, then running [python-modernize](https://github.com/python-modernize/python-modernize) over it can do a lot of the simple repetitive work needed. After that, you'd probably run the tests on Python 3 and look at what's going wrong. However, it sounds like what they're after is someone to do a deep dive into the codebase and work out what is bytes, what is unicode, and where and how conversion between them is needed.
I haven't being using PyCharm for a while now (being using Jupyter Notebooks as my main IDE, until I started using VS Code) so I don't remember everything, but here are things from the top of my head: Shorter starting time (noticeable even on SSD), lightweight feel (in PyCharm I felt like there was a delay when I was typing), general editor and not just Python related, better support for iPython (this is probably resolved in current version of PyCharm), etc.
What's going to be receiving the string on your phone? Do you want to send a notification?
You can just run `/usr/bin/pip`, or you can remove Anaconda from your `PATH`.
I just figured that out, thanks :)
&gt; Static typing systems can actually make a guarantee. Guarantee void on planet earth. Of course compilers and static type systems can have bugs. Or the type system doesn't *quite* match what you are trying to do, so you spend your time fighting the type system trying to convince it to let you do what you want with the right incantation of casts. Some static type systems are stricter than others, and some are effectively optional with the right incantation. So regardless of what sort of type system you use, your mileage may vary.
[Yes](https://www.reddit.com/r/Python/comments/5jwf41/python_360_has_now_been_officially_released/)
&gt; weird magical "fake" types, I think the term you are looking for is ABC (abstract base classes). And they're not fake -- they've been around for years: [steve@ando ~]$ python2.6 -c "from collections import Sequence; print isinstance([], Sequence)" True ABCs have been around something around a decade.
That would be ideal, yes. I was going to write my own program that will simply send something like "Front door open" from the RPi to my phone. It would be handy if I could send it to the action bar, but I realise that's a question for the Anrdoid sub. Thanks :)
I used this recently to control local process access to a single instance of a big module which couldn't be loaded into each process due to memory constraints. Long lived local connections are a few hundred times faster than say implementing a full multiprocess pooled REST server.
I do mean that, yes. Thank you very much, I shall check it out :) 
Depends on how you phrase it I think. The definition of tau is based on the radius of a circle, pi is based on twice that.
The `socketserver` example is also much better at self-documenting. For instance, in the `socket` example: s.listen(1) conn, addr = s.accept() Damned if I know what those lines do. I stared at it for a bit and have a decent guess, but even now I can't be sure without looking at the module's documentation
wow.. Nice! Thank you so much brother.
I first wrote the parser for one supplier with especially impractically formatted pricing tables. Worked out well and was quickly done. At that point it's just been a simple script. Next step was feeding the data to a database. I decided to got with SQLAlchemy, which I haven't used before. Didn't take long to had a simple prototype with basic models that would automatically set up the tables and save all pricing information. I was pretty happy with the result and so decided that this setup is the way to go. Cleaned/split up the models, modularised the code, added parsers for all other suppliers and an application main controller. As this tool will be frequently used and probably often extended with new groups (i.e. article types with different attributes and logic behind them) of suppliers, I decided to have supplier groups provided as packages that are dynamically loaded by the application as needed. For a simple interactive shell, Cmd was a good candidate and is easy to extend. And of course standard argument parsing with the ability to pre-fill the command queue to make it all scriptable. Now it's simply a question of extending it with new commands as needed and, if time allows, add a few eye candies such as progress bars and more advanced command completion.
At the office we have that very annoying time tracking tool. It's actually not for monitoring how long we stay at the office, but how long we are working on certain projects. You have to enter the duration, a project number, an activity (like development, meeting, etc.) and a description. So I wrote a Python script that would read my Outlook calendar and fills out the form for every meeting I had, then it adds some daily tasks (like reading mails) and finally fills the rest of the day with my current project. It's still annoying, because I have to manually correct some things, the tool also has no API, so I have to let Python fill out the web form. But it's way more comfortable than filling it out myself.
It's csv.DataReader() broken in Python 3.6.0 ? I read here about `PEP 528 &amp; PEP 529`, so let's uninstall Python 3.5.2, install this new version and fix that windows bugs, I tought. After those steps, the same file that open very quick in the past(300k rows, 15 fields) now it take a few minutes before show the `MemoryError Exception` It's so weird...
The pywin32 package gives you access to all win32 calls, so if you can do it with one of those, you can do it with python.
RemindMe! 1minute
I will be messaging you on [**2016-12-24 13:58:44 UTC**](http://www.wolframalpha.com/input/?i=2016-12-24 13:58:44 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/Python/comments/5k2ox3/cracking_the_bbcs_gchq_puzzlebook_challenge_with/dbkwkpv) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/Python/comments/5k2ox3/cracking_the_bbcs_gchq_puzzlebook_challenge_with/dbkwkpv]%0A%0ARemindMe! 1minute) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! dbkwkvw) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Honest question - what benefits does supervisor bring that aren't already provided by systemd? Obviously not all systems are using systemd, but for those that are, it's difficult to see the rationale of using supervisor.
The socketserver examples would be even better without writing and reading to self but just using a local variable. 
Improving tests might be feasible. Coverage is at 89% so there's something left clearly. That's without talking about mutation testing :P
Umm.... who says we failed? These things take time. The Tau idea only recently came on the scene. There is alot of inertia. Think about other good ideas that have taken a while to catch on... According to Wikipedia, "[The metric system was first described in 1668, and officially adopted by France in 1799](https://en.wikipedia.org/wiki/History_of_measurement#Metric_conversion)". Today is 217 years after France formalized the metric system, and the USA still uses Imperial Units. Does that mean that Metric failed?
No one disagrees with your point of how one could functionally get the job done. The argument for Tau is not that Pi does not work: it is that Tau (aka One Turn) is a better representation of the circle constant. It gives you a better intuition on what is happening. Don't forget the first entry in the Zen Of Python: "Beautiful is better than ugly." You should read the [Tau Manifesto](https://tauday.com/tau-manifesto).
Lots of multiplications are gone though. 
I always used chartist 
Great write up! This was a fun read. 
So, I'll offer my 2 cents...I've been developing in python for the last 5 years...the first 2 were painful, and I was always installing directly from python.org. Packages were a nightmare to install on Windows...and it just wasn't a nice *experience*. And then I found [anaconda](https://www.continuum.io/downloads). They maintain a very nice package directory, all packaged and ready to go. Easily installs on Windows. The only drawback at this moment is no 3.6 YET. It's still new, but trust it'll be available from anaconda soon! I only recommend anaconda to help reduce the friction I found from trying to get up and running. But, if you're going to blow away windows and switch to Linux, then you might as well do that first. (Anaconda is also available for Linux...makes it nice if you want 3.X and your system python is 2.X)
Would this be better then for sending OpenCV images over UDP? Or any recommendations for that, other than segmenting and sending out chunks. 
True, I'll change that.
Thanks, this was definitely a good choice. Exactly what I want, plus I already use pushbullet anyway :)
Yeah, I'd say go for it. You can send any "bytes like object" over the `.wfile.write()`, but if you're using UDP YOU need to deal with congestion control, packet loss, and reassembly. Unless you really need both good latency and good bandwidth, just use TCP.
I was hoping for some more interesting suggestions. F-strings are a solid addition. Complaining that CPython developers work on CPython is quite funny :P I agree there are things that are missing but I disagree that you've listed any. Except working on the GIL but they've done that so...
The MySQL builtin text search system is documented here: https://dev.mysql.com/doc/refman/5.7/en/fulltext-search.html. Is that not sufficient for your needs?
EDIT: This information is flawed. OP is right. Supervisor does reap inherited processes. I apologize for the misinformation. You shouldn't use Supervisor as the entry command in a Docker container. It will not clean up inherited processes as a typical init process would. The supervisord.org homepage even says "it is not meant to be run as a substitute for init as "process id 1"." You will end up with zombie processes if you are not careful. Each Docker container should really only specify one process and Docker Compose or similar should be used to orchestrate the container communication.
The executable installer should just work. Which version of Windows are you using?
check out bokeh
I just installed Python 3.6rc2 on a virtual machine running Windows 10 the other day via the executable and it worked perfectly fine. I suppose if you were deadset on running Python on your Windows box, you could build the source code using MinGW like they talk about [here](https://docs.python.org/3.6/using/windows.html#compiling-python-on-windows), but I have never tried this. But if you don't mind running Linux, I would highly suggest it. The whole thing is just a lot easier that way, if you ask me. 
Thank you so much! I wanted this 3.5 version only! Just one question, what would I get from this download? like a MSI installer? i mean anything but an executable installer right?
I'm in mobile right now, so I'm not sure if the installer is .msi or .exe Also, the main installer already contains a LOT of python packages (which is why it's so big)...there is also a Miniconda installer from the same site that ONLY installs python, and then you can `conda install` whatever packages you need.
Exploring hexagonal architecture via a little blog. I figure if I can make something small using this style, I can move on to bigger things. Probably mess around with kegbot-server plugins some more. Drafted up a hipchat plugin a couple weeks ago that went over well at work. Don't want to get too invested before we decide on how we're going to monitor beer though. Doesn't help that kegbot-server is full of bugs, is hopelessly tied to Python 2 (relies on PythonMySql and some cli tool that uses the old print redirect syntax) and uses Django 1.7.
Might even make a little convenience module out of it. If I do I'll pm you the details and you can update with that?
Inserting data into Solr is quite easy. Just set up a post with a csv header via requests library, use stringio to output a csv, and then just post data in. Far easier than Solrj. 
&gt; that Python and R grow faster than general purpose languages. Implying that Python is not general purpose? Or R for that matter! 
3.5's async isn't really complete without 3.6's generator/comprehension support. You probably don't feel the pain because you don't use yet async, at least not heavily, but this is a real must which on its own justifies IMHO the version bump. I think this is an excellent example of pretty fine forward-thinking.
You lost me at: &gt; PyDev is the first and most natural choice of most Python developers.
Are there any changes effecting a complete beginner, like 1 week-old?
&gt; PyDev is the first and most natural choice of most P Point noted. Replaced it with a better version like this "... a natural choice for many Python developers coming from Java background." Thanks.
If you don't understand the meaning of a blinking smiley, you should probably learn about that too 😈
You're right. My bad.
Doesn't seem right either. That would be Pycharm
It looks good to me: Python 3.6.0 (v3.6.0:41df79263a11, Dec 23 2016, 08:06:12) [MSC v.1900 64 bit (AMD64)] on win32 Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; print("".join(map(chr, range(0x80, 0x100))))  ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ &gt;&gt;&gt; input() £ '£' &gt;&gt;&gt; (There's a bunch of unprintable characters that show up as squares at the start of the unicode line, but they seem to be collapsing to a single space on reddit.) This works in both `cmd` and `powershell` consoles with no setup `chcp` commands needed.
I love that `print(f”...”)` is like python's new `printf`
The existence of tau the doesn't change this
Teach using Tau, mention that pi is Tau/2, have the students’ intuition work better and they retain the same amount of practical knowledge
That would confuse everyone, be backwards incompatible, misalign with experience and everything else
"this text is {}".format(thing)
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Hi there, from the /r/Python mods. We have removed this post as it is not suited to the /r/Python subreddit proper, however it should be very appropriate for our sister subreddit /r/LearnPython. We **highly encourage** you to re-submit your post over on there. The reason for the removal is that /r/Python is more-so dedicated to discussion of Python news, projects, uses and debates. It is not designed to act as Q&amp;A or FAQ board. The regular community can get disenchanted with seeing the 'same, repetitive newbie' questions repeated on the sub, so you may not get the best responses over here. However, on /r/LearnPython the community is actively expecting questions from new members, and are looking to help. You can expect far more understanding, encouraging and insightful responses over there. Whatever your question happens to be getting help with Python, you should get good answers. If you have a question to do with homework or an assignment of any kind, please make sure to read their sidebar rules **before** submitting your post. If you have any questions or doubts, feel free to reply or send a modmail to us with your concerns. Warm regards, and best of luck with your Pythoneering!
Oh, and rewrite every maths, science and other technical textbook while you're at it.
Never do today what you can shove off till tomorrow...
Guess there's map too. 
Yeah that is what the article discussed. Since it is now syntax, it can compile to optimized bytecode. That is the part I wasn't expecting but should have been. I could see calling format on a string variable that is used in more than one place, like a template but without using the template class. That would prevent the usage of f""
&gt;PyCharm – The Second Best IDE for Python Developers [Paid for Fully-featured version] That suggests that PyCharm isn't the most popular and that the community version isn't a fully-featured IDE. It is, but it doesn't tie into a lot of webdev tools.
Automatically taking variables from the current scope is a terrible idea. At the very least this is going to lead to amusing output errors and data leaks.
I don't understand? I know how python works.. I have it installed as 3.4, and this question wasn't a typical 'newbie' one and community was trying to help me out as well, I wrote my post really vividly and was referring to suggestions on OS and downloading platforms. I guess would be going to stack exchange then.
Yeah, that's a good shout. 
 app_name = "My_App01" new_version = '1.0.0.3' services = [ { "Name": "My_App01", "Type": "AWS", "Version": "1.0.0.1" }, { "Name": "My_App02", "Type": "Docker", "Version": "1.0.0.2" } ] for app_metadata in services: # Don't trust that they're the same case # or that they don't have beginning/trailing spaces if app_name.lower().strip() == app_metadata['Name'].lower().strip(): old_version = app_metadata['Version'] if old_version != new_version: print("Updating %s version from %s =&gt; %s" % \ (app_name, old_version, new_version) app_metadata['Version'] = new_version # Regardless if the version needed to be updated, # we've found the app we were looking for, so no # need to search further. break
Systemd also does all of that (except a web UI) and is already running on my system.
Still learning Django! I'm currently working on a website that allows me and my friends to rate (and submit) movies. This is the first project that includes foreign key imports in databases and progress is slow. 
Awesome, I'm going to start using this for aure. Thanks for clarifying this.
How is it any different than taking variables from the current scope with `.format()` or percent encoding? 